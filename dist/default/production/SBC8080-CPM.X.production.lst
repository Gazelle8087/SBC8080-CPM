

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jul 27 17:04:53 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK7,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK8,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	cstackBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=3
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=3
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=3
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=3
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=3
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=3
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=3
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=3
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=3
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   141                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   142                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   143   000000                     
   144                           ; Generated 23/02/2024 GMT
   145                           ; 
   146                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   147                           ; All rights reserved.
   148                           ; 
   149                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   150                           ; 
   151                           ; Redistribution and use in source and binary forms, with or without modification, are
   152                           ; permitted provided that the following conditions are met:
   153                           ; 
   154                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   155                           ;        conditions and the following disclaimer.
   156                           ; 
   157                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   158                           ;        of conditions and the following disclaimer in the documentation and/or other
   159                           ;        materials provided with the distribution. Publication is not required when
   160                           ;        this file is used in an embedded application.
   161                           ; 
   162                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   163                           ;        software without specific prior written permission.
   164                           ; 
   165                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   166                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   167                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   168                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   169                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   170                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   171                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   172                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   173                           ; 
   174                           ; 
   175                           ; Code-generator required, PIC18F57Q43 Definitions
   176                           ; 
   177                           ; SFR Addresses
   178   000000                     
   179                           	psect	idataBANK7
   180   019FF8                     __pidataBANK7:
   181                           	callstack 0
   182                           
   183                           ;initializer for _start_lba
   184   019FF8  FFFF               	dw	65535
   185   019FFA  FFFF               	dw	65535
   186                           
   187                           ;initializer for _SPI_SD_ctx
   188   019FFC  BA                 	db	low _pic18f47q43_spi_ctx
   189   019FFD  07                 	db	high _pic18f47q43_spi_ctx
   190                           
   191                           ;initializer for _disk_stat
   192   019FFE  01                 	db	1
   193                           
   194                           	psect	idataBANK8
   195   019C2A                     __pidataBANK8:
   196                           	callstack 0
   197                           
   198                           ;initializer for _drives
   199   019C2A  001A               	dw	26
   200   019C2C  00                 	db	0
   201   019C2D  00                 	db	0
   202   019C2E  001A               	dw	26
   203   019C30  00                 	db	0
   204   019C31  00                 	db	0
   205   019C32  001A               	dw	26
   206   019C34  00                 	db	0
   207   019C35  00                 	db	0
   208   019C36  001A               	dw	26
   209   019C38  00                 	db	0
   210   019C39  00                 	db	0
   211   019C3A  0000               	dw	0
   212   019C3C  00                 	db	0
   213   019C3D  00                 	db	0
   214   019C3E  0000               	dw	0
   215   019C40  00                 	db	0
   216   019C41  00                 	db	0
   217   019C42  0000               	dw	0
   218   019C44  00                 	db	0
   219   019C45  00                 	db	0
   220   019C46  0000               	dw	0
   221   019C48  00                 	db	0
   222   019C49  00                 	db	0
   223   019C4A  0080               	dw	128
   224   019C4C  00                 	db	0
   225   019C4D  00                 	db	0
   226   019C4E  0080               	dw	128
   227   019C50  00                 	db	0
   228   019C51  00                 	db	0
   229   019C52  0080               	dw	128
   230   019C54  00                 	db	0
   231   019C55  00                 	db	0
   232   019C56  0080               	dw	128
   233   019C58  00                 	db	0
   234   019C59  00                 	db	0
   235   019C5A  0000               	dw	0
   236   019C5C  00                 	db	0
   237   019C5D  00                 	db	0
   238   019C5E  0000               	dw	0
   239   019C60  00                 	db	0
   240   019C61  00                 	db	0
   241   019C62  0000               	dw	0
   242   019C64  00                 	db	0
   243   019C65  00                 	db	0
   244   019C66  4064               	dw	16484
   245   019C68  00                 	db	0
   246   019C69  00                 	db	0
   247                           
   248                           	psect	mediumconst
   249   00D970                     __pmediumconst:
   250                           	callstack 0
   251   00D970  00                 	db	0
   252   00D971                     _DbcTbl:
   253                           	callstack 0
   254   00D971  81                 	db	129
   255   00D972  9F                 	db	159
   256   00D973  E0                 	db	224
   257   00D974  FC                 	db	252
   258   00D975  40                 	db	64
   259   00D976  7E                 	db	126
   260   00D977  80                 	db	128
   261   00D978  FC                 	db	252
   262   00D979  00                 	db	0
   263   00D97A  00                 	db	0
   264   00D97B                     __end_of_DbcTbl:
   265                           	callstack 0
   266   00D97B  0010               	dw	16
   267   00D97D                     __end_of_num_drives:
   268                           	callstack 0
   269   00D97D                     _bdosccp:
   270                           	callstack 0
   271   00D97D  C3                 	db	195
   272   00D97E  5C                 	db	92
   273   00D97F  E7                 	db	231
   274   00D980  C3                 	db	195
   275   00D981  58                 	db	88
   276   00D982  E7                 	db	231
   277   00D983  7F                 	db	127
   278   00D984  00                 	db	0
   279   00D985  43                 	db	67
   280   00D986  6F                 	db	111
   281   00D987  70                 	db	112
   282   00D988  79                 	db	121
   283   00D989  72                 	db	114
   284   00D98A  69                 	db	105
   285   00D98B  67                 	db	103
   286   00D98C  68                 	db	104
   287   00D98D  74                 	db	116
   288   00D98E  20                 	db	32
   289   00D98F  31                 	db	49
   290   00D990  39                 	db	57
   291   00D991  37                 	db	55
   292   00D992  39                 	db	57
   293   00D993  20                 	db	32
   294   00D994  28                 	db	40
   295   00D995  63                 	db	99
   296   00D996  29                 	db	41
   297   00D997  20                 	db	32
   298   00D998  62                 	db	98
   299   00D999  79                 	db	121
   300   00D99A  20                 	db	32
   301   00D99B  44                 	db	68
   302   00D99C  69                 	db	105
   303   00D99D  67                 	db	103
   304   00D99E  69                 	db	105
   305   00D99F  74                 	db	116
   306   00D9A0  61                 	db	97
   307   00D9A1  6C                 	db	108
   308   00D9A2  20                 	db	32
   309   00D9A3  52                 	db	82
   310   00D9A4  65                 	db	101
   311   00D9A5  73                 	db	115
   312   00D9A6  65                 	db	101
   313   00D9A7  61                 	db	97
   314   00D9A8  72                 	db	114
   315   00D9A9  63                 	db	99
   316   00D9AA  68                 	db	104
   317   00D9AB  20                 	db	32
   318   00D9AC  20                 	db	32
   319   00D9AD  20                 	db	32
   320   00D9AE  20                 	db	32
   321   00D9AF  20                 	db	32
   322   00D9B0  20                 	db	32
   323   00D9B1  00                 	db	0
   324   00D9B2  00                 	db	0
   325   00D9B3  00                 	db	0
   326   00D9B4  00                 	db	0
   327   00D9B5  00                 	db	0
   328   00D9B6  00                 	db	0
   329   00D9B7  00                 	db	0
   330   00D9B8  00                 	db	0
   331   00D9B9  00                 	db	0
   332   00D9BA  00                 	db	0
   333   00D9BB  00                 	db	0
   334   00D9BC  00                 	db	0
   335   00D9BD  00                 	db	0
   336   00D9BE  00                 	db	0
   337   00D9BF  00                 	db	0
   338   00D9C0  00                 	db	0
   339   00D9C1  00                 	db	0
   340   00D9C2  00                 	db	0
   341   00D9C3  00                 	db	0
   342   00D9C4  00                 	db	0
   343   00D9C5  00                 	db	0
   344   00D9C6  00                 	db	0
   345   00D9C7  00                 	db	0
   346   00D9C8  00                 	db	0
   347   00D9C9  00                 	db	0
   348   00D9CA  00                 	db	0
   349   00D9CB  00                 	db	0
   350   00D9CC  00                 	db	0
   351   00D9CD  00                 	db	0
   352   00D9CE  00                 	db	0
   353   00D9CF  00                 	db	0
   354   00D9D0  00                 	db	0
   355   00D9D1  00                 	db	0
   356   00D9D2  00                 	db	0
   357   00D9D3  00                 	db	0
   358   00D9D4  00                 	db	0
   359   00D9D5  00                 	db	0
   360   00D9D6  00                 	db	0
   361   00D9D7  00                 	db	0
   362   00D9D8  00                 	db	0
   363   00D9D9  00                 	db	0
   364   00D9DA  00                 	db	0
   365   00D9DB  00                 	db	0
   366   00D9DC  00                 	db	0
   367   00D9DD  00                 	db	0
   368   00D9DE  00                 	db	0
   369   00D9DF  00                 	db	0
   370   00D9E0  00                 	db	0
   371   00D9E1  00                 	db	0
   372   00D9E2  00                 	db	0
   373   00D9E3  00                 	db	0
   374   00D9E4  00                 	db	0
   375   00D9E5  00                 	db	0
   376   00D9E6  00                 	db	0
   377   00D9E7  00                 	db	0
   378   00D9E8  00                 	db	0
   379   00D9E9  00                 	db	0
   380   00D9EA  00                 	db	0
   381   00D9EB  00                 	db	0
   382   00D9EC  00                 	db	0
   383   00D9ED  00                 	db	0
   384   00D9EE  00                 	db	0
   385   00D9EF  00                 	db	0
   386   00D9F0  00                 	db	0
   387   00D9F1  00                 	db	0
   388   00D9F2  00                 	db	0
   389   00D9F3  00                 	db	0
   390   00D9F4  00                 	db	0
   391   00D9F5  00                 	db	0
   392   00D9F6  00                 	db	0
   393   00D9F7  00                 	db	0
   394   00D9F8  00                 	db	0
   395   00D9F9  00                 	db	0
   396   00D9FA  00                 	db	0
   397   00D9FB  00                 	db	0
   398   00D9FC  00                 	db	0
   399   00D9FD  00                 	db	0
   400   00D9FE  00                 	db	0
   401   00D9FF  00                 	db	0
   402   00DA00  00                 	db	0
   403   00DA01  00                 	db	0
   404   00DA02  00                 	db	0
   405   00DA03  00                 	db	0
   406   00DA04  00                 	db	0
   407   00DA05  08                 	db	8
   408   00DA06  E4                 	db	228
   409   00DA07  00                 	db	0
   410   00DA08  00                 	db	0
   411   00DA09  5F                 	db	95
   412   00DA0A  0E                 	db	14
   413   00DA0B  02                 	db	2
   414   00DA0C  C3                 	db	195
   415   00DA0D  05                 	db	5
   416   00DA0E  00                 	db	0
   417   00DA0F  C5                 	db	197
   418   00DA10  CD                 	db	205
   419   00DA11  8C                 	db	140
   420   00DA12  E4                 	db	228
   421   00DA13  C1                 	db	193
   422   00DA14  C9                 	db	201
   423   00DA15  3E                 	db	62
   424   00DA16  0D                 	db	13
   425   00DA17  CD                 	db	205
   426   00DA18  92                 	db	146
   427   00DA19  E4                 	db	228
   428   00DA1A  3E                 	db	62
   429   00DA1B  0A                 	db	10
   430   00DA1C  C3                 	db	195
   431   00DA1D  92                 	db	146
   432   00DA1E  E4                 	db	228
   433   00DA1F  3E                 	db	62
   434   00DA20  20                 	db	32
   435   00DA21  C3                 	db	195
   436   00DA22  92                 	db	146
   437   00DA23  E4                 	db	228
   438   00DA24  C5                 	db	197
   439   00DA25  CD                 	db	205
   440   00DA26  98                 	db	152
   441   00DA27  E4                 	db	228
   442   00DA28  E1                 	db	225
   443   00DA29  7E                 	db	126
   444   00DA2A  B7                 	db	183
   445   00DA2B  C8                 	db	200
   446   00DA2C  23                 	db	35
   447   00DA2D  E5                 	db	229
   448   00DA2E  CD                 	db	205
   449   00DA2F  8C                 	db	140
   450   00DA30  E4                 	db	228
   451   00DA31  E1                 	db	225
   452   00DA32  C3                 	db	195
   453   00DA33  AC                 	db	172
   454   00DA34  E4                 	db	228
   455   00DA35  0E                 	db	14
   456   00DA36  0D                 	db	13
   457   00DA37  C3                 	db	195
   458   00DA38  05                 	db	5
   459   00DA39  00                 	db	0
   460   00DA3A  5F                 	db	95
   461   00DA3B  0E                 	db	14
   462   00DA3C  0E                 	db	14
   463   00DA3D  C3                 	db	195
   464   00DA3E  05                 	db	5
   465   00DA3F  00                 	db	0
   466   00DA40  CD                 	db	205
   467   00DA41  05                 	db	5
   468   00DA42  00                 	db	0
   469   00DA43  32                 	db	50
   470   00DA44  EE                 	db	238
   471   00DA45  EB                 	db	235
   472   00DA46  3C                 	db	60
   473   00DA47  C9                 	db	201
   474   00DA48  0E                 	db	14
   475   00DA49  0F                 	db	15
   476   00DA4A  C3                 	db	195
   477   00DA4B  C3                 	db	195
   478   00DA4C  E4                 	db	228
   479   00DA4D  AF                 	db	175
   480   00DA4E  32                 	db	50
   481   00DA4F  ED                 	db	237
   482   00DA50  EB                 	db	235
   483   00DA51  11                 	db	17
   484   00DA52  CD                 	db	205
   485   00DA53  EB                 	db	235
   486   00DA54  C3                 	db	195
   487   00DA55  CB                 	db	203
   488   00DA56  E4                 	db	228
   489   00DA57  0E                 	db	14
   490   00DA58  10                 	db	16
   491   00DA59  C3                 	db	195
   492   00DA5A  C3                 	db	195
   493   00DA5B  E4                 	db	228
   494   00DA5C  0E                 	db	14
   495   00DA5D  11                 	db	17
   496   00DA5E  C3                 	db	195
   497   00DA5F  C3                 	db	195
   498   00DA60  E4                 	db	228
   499   00DA61  0E                 	db	14
   500   00DA62  12                 	db	18
   501   00DA63  C3                 	db	195
   502   00DA64  C3                 	db	195
   503   00DA65  E4                 	db	228
   504   00DA66  11                 	db	17
   505   00DA67  CD                 	db	205
   506   00DA68  EB                 	db	235
   507   00DA69  C3                 	db	195
   508   00DA6A  DF                 	db	223
   509   00DA6B  E4                 	db	228
   510   00DA6C  0E                 	db	14
   511   00DA6D  13                 	db	19
   512   00DA6E  C3                 	db	195
   513   00DA6F  05                 	db	5
   514   00DA70  00                 	db	0
   515   00DA71  CD                 	db	205
   516   00DA72  05                 	db	5
   517   00DA73  00                 	db	0
   518   00DA74  B7                 	db	183
   519   00DA75  C9                 	db	201
   520   00DA76  0E                 	db	14
   521   00DA77  14                 	db	20
   522   00DA78  C3                 	db	195
   523   00DA79  F4                 	db	244
   524   00DA7A  E4                 	db	228
   525   00DA7B  11                 	db	17
   526   00DA7C  CD                 	db	205
   527   00DA7D  EB                 	db	235
   528   00DA7E  C3                 	db	195
   529   00DA7F  F9                 	db	249
   530   00DA80  E4                 	db	228
   531   00DA81  0E                 	db	14
   532   00DA82  15                 	db	21
   533   00DA83  C3                 	db	195
   534   00DA84  F4                 	db	244
   535   00DA85  E4                 	db	228
   536   00DA86  0E                 	db	14
   537   00DA87  16                 	db	22
   538   00DA88  C3                 	db	195
   539   00DA89  C3                 	db	195
   540   00DA8A  E4                 	db	228
   541   00DA8B  0E                 	db	14
   542   00DA8C  17                 	db	23
   543   00DA8D  C3                 	db	195
   544   00DA8E  05                 	db	5
   545   00DA8F  00                 	db	0
   546   00DA90  1E                 	db	30
   547   00DA91  FF                 	db	255
   548   00DA92  0E                 	db	14
   549   00DA93  20                 	db	32
   550   00DA94  C3                 	db	195
   551   00DA95  05                 	db	5
   552   00DA96  00                 	db	0
   553   00DA97  CD                 	db	205
   554   00DA98  13                 	db	19
   555   00DA99  E5                 	db	229
   556   00DA9A  87                 	db	135
   557   00DA9B  87                 	db	135
   558   00DA9C  87                 	db	135
   559   00DA9D  87                 	db	135
   560   00DA9E  21                 	db	33
   561   00DA9F  EF                 	db	239
   562   00DAA0  EB                 	db	235
   563   00DAA1  B6                 	db	182
   564   00DAA2  32                 	db	50
   565   00DAA3  04                 	db	4
   566   00DAA4  00                 	db	0
   567   00DAA5  C9                 	db	201
   568   00DAA6  3A                 	db	58
   569   00DAA7  EF                 	db	239
   570   00DAA8  EB                 	db	235
   571   00DAA9  32                 	db	50
   572   00DAAA  04                 	db	4
   573   00DAAB  00                 	db	0
   574   00DAAC  C9                 	db	201
   575   00DAAD  FE                 	db	254
   576   00DAAE  61                 	db	97
   577   00DAAF  D8                 	db	216
   578   00DAB0  FE                 	db	254
   579   00DAB1  7B                 	db	123
   580   00DAB2  D0                 	db	208
   581   00DAB3  E6                 	db	230
   582   00DAB4  5F                 	db	95
   583   00DAB5  C9                 	db	201
   584   00DAB6  3A                 	db	58
   585   00DAB7  AB                 	db	171
   586   00DAB8  EB                 	db	235
   587   00DAB9  B7                 	db	183
   588   00DABA  CA                 	db	202
   589   00DABB  96                 	db	150
   590   00DABC  E5                 	db	229
   591   00DABD  3A                 	db	58
   592   00DABE  EF                 	db	239
   593   00DABF  EB                 	db	235
   594   00DAC0  B7                 	db	183
   595   00DAC1  3E                 	db	62
   596   00DAC2  00                 	db	0
   597   00DAC3  C4                 	db	196
   598   00DAC4  BD                 	db	189
   599   00DAC5  E4                 	db	228
   600   00DAC6  11                 	db	17
   601   00DAC7  AC                 	db	172
   602   00DAC8  EB                 	db	235
   603   00DAC9  CD                 	db	205
   604   00DACA  CB                 	db	203
   605   00DACB  E4                 	db	228
   606   00DACC  CA                 	db	202
   607   00DACD  96                 	db	150
   608   00DACE  E5                 	db	229
   609   00DACF  3A                 	db	58
   610   00DAD0  BB                 	db	187
   611   00DAD1  EB                 	db	235
   612   00DAD2  3D                 	db	61
   613   00DAD3  32                 	db	50
   614   00DAD4  CC                 	db	204
   615   00DAD5  EB                 	db	235
   616   00DAD6  11                 	db	17
   617   00DAD7  AC                 	db	172
   618   00DAD8  EB                 	db	235
   619   00DAD9  CD                 	db	205
   620   00DADA  F9                 	db	249
   621   00DADB  E4                 	db	228
   622   00DADC  C2                 	db	194
   623   00DADD  96                 	db	150
   624   00DADE  E5                 	db	229
   625   00DADF  11                 	db	17
   626   00DAE0  07                 	db	7
   627   00DAE1  E4                 	db	228
   628   00DAE2  21                 	db	33
   629   00DAE3  80                 	db	128
   630   00DAE4  00                 	db	0
   631   00DAE5  06                 	db	6
   632   00DAE6  80                 	db	128
   633   00DAE7  CD                 	db	205
   634   00DAE8  42                 	db	66
   635   00DAE9  E8                 	db	232
   636   00DAEA  21                 	db	33
   637   00DAEB  BA                 	db	186
   638   00DAEC  EB                 	db	235
   639   00DAED  36                 	db	54
   640   00DAEE  00                 	db	0
   641   00DAEF  23                 	db	35
   642   00DAF0  35                 	db	53
   643   00DAF1  11                 	db	17
   644   00DAF2  AC                 	db	172
   645   00DAF3  EB                 	db	235
   646   00DAF4  CD                 	db	205
   647   00DAF5  DA                 	db	218
   648   00DAF6  E4                 	db	228
   649   00DAF7  CA                 	db	202
   650   00DAF8  96                 	db	150
   651   00DAF9  E5                 	db	229
   652   00DAFA  3A                 	db	58
   653   00DAFB  EF                 	db	239
   654   00DAFC  EB                 	db	235
   655   00DAFD  B7                 	db	183
   656   00DAFE  C4                 	db	196
   657   00DAFF  BD                 	db	189
   658   00DB00  E4                 	db	228
   659   00DB01  21                 	db	33
   660   00DB02  08                 	db	8
   661   00DB03  E4                 	db	228
   662   00DB04  CD                 	db	205
   663   00DB05  AC                 	db	172
   664   00DB06  E4                 	db	228
   665   00DB07  CD                 	db	205
   666   00DB08  C2                 	db	194
   667   00DB09  E5                 	db	229
   668   00DB0A  CA                 	db	202
   669   00DB0B  A7                 	db	167
   670   00DB0C  E5                 	db	229
   671   00DB0D  CD                 	db	205
   672   00DB0E  DD                 	db	221
   673   00DB0F  E5                 	db	229
   674   00DB10  C3                 	db	195
   675   00DB11  82                 	db	130
   676   00DB12  E7                 	db	231
   677   00DB13  CD                 	db	205
   678   00DB14  DD                 	db	221
   679   00DB15  E5                 	db	229
   680   00DB16  CD                 	db	205
   681   00DB17  1A                 	db	26
   682   00DB18  E5                 	db	229
   683   00DB19  0E                 	db	14
   684   00DB1A  0A                 	db	10
   685   00DB1B  11                 	db	17
   686   00DB1C  06                 	db	6
   687   00DB1D  E4                 	db	228
   688   00DB1E  CD                 	db	205
   689   00DB1F  05                 	db	5
   690   00DB20  00                 	db	0
   691   00DB21  CD                 	db	205
   692   00DB22  29                 	db	41
   693   00DB23  E5                 	db	229
   694   00DB24  21                 	db	33
   695   00DB25  07                 	db	7
   696   00DB26  E4                 	db	228
   697   00DB27  46                 	db	70
   698   00DB28  23                 	db	35
   699   00DB29  78                 	db	120
   700   00DB2A  B7                 	db	183
   701   00DB2B  CA                 	db	202
   702   00DB2C  BA                 	db	186
   703   00DB2D  E5                 	db	229
   704   00DB2E  7E                 	db	126
   705   00DB2F  CD                 	db	205
   706   00DB30  30                 	db	48
   707   00DB31  E5                 	db	229
   708   00DB32  77                 	db	119
   709   00DB33  05                 	db	5
   710   00DB34  C3                 	db	195
   711   00DB35  AB                 	db	171
   712   00DB36  E5                 	db	229
   713   00DB37  77                 	db	119
   714   00DB38  21                 	db	33
   715   00DB39  08                 	db	8
   716   00DB3A  E4                 	db	228
   717   00DB3B  22                 	db	34
   718   00DB3C  88                 	db	136
   719   00DB3D  E4                 	db	228
   720   00DB3E  C9                 	db	201
   721   00DB3F  0E                 	db	14
   722   00DB40  0B                 	db	11
   723   00DB41  CD                 	db	205
   724   00DB42  05                 	db	5
   725   00DB43  00                 	db	0
   726   00DB44  B7                 	db	183
   727   00DB45  C8                 	db	200
   728   00DB46  0E                 	db	14
   729   00DB47  01                 	db	1
   730   00DB48  CD                 	db	205
   731   00DB49  05                 	db	5
   732   00DB4A  00                 	db	0
   733   00DB4B  B7                 	db	183
   734   00DB4C  C9                 	db	201
   735   00DB4D  0E                 	db	14
   736   00DB4E  19                 	db	25
   737   00DB4F  C3                 	db	195
   738   00DB50  05                 	db	5
   739   00DB51  00                 	db	0
   740   00DB52  11                 	db	17
   741   00DB53  80                 	db	128
   742   00DB54  00                 	db	0
   743   00DB55  0E                 	db	14
   744   00DB56  1A                 	db	26
   745   00DB57  C3                 	db	195
   746   00DB58  05                 	db	5
   747   00DB59  00                 	db	0
   748   00DB5A  21                 	db	33
   749   00DB5B  AB                 	db	171
   750   00DB5C  EB                 	db	235
   751   00DB5D  7E                 	db	126
   752   00DB5E  B7                 	db	183
   753   00DB5F  C8                 	db	200
   754   00DB60  36                 	db	54
   755   00DB61  00                 	db	0
   756   00DB62  AF                 	db	175
   757   00DB63  CD                 	db	205
   758   00DB64  BD                 	db	189
   759   00DB65  E4                 	db	228
   760   00DB66  11                 	db	17
   761   00DB67  AC                 	db	172
   762   00DB68  EB                 	db	235
   763   00DB69  CD                 	db	205
   764   00DB6A  EF                 	db	239
   765   00DB6B  E4                 	db	228
   766   00DB6C  3A                 	db	58
   767   00DB6D  EF                 	db	239
   768   00DB6E  EB                 	db	235
   769   00DB6F  C3                 	db	195
   770   00DB70  BD                 	db	189
   771   00DB71  E4                 	db	228
   772   00DB72  11                 	db	17
   773   00DB73  28                 	db	40
   774   00DB74  E7                 	db	231
   775   00DB75  21                 	db	33
   776   00DB76  00                 	db	0
   777   00DB77  EC                 	db	236
   778   00DB78  06                 	db	6
   779   00DB79  06                 	db	6
   780   00DB7A  1A                 	db	26
   781   00DB7B  BE                 	db	190
   782   00DB7C  C2                 	db	194
   783   00DB7D  CF                 	db	207
   784   00DB7E  E7                 	db	231
   785   00DB7F  13                 	db	19
   786   00DB80  23                 	db	35
   787   00DB81  05                 	db	5
   788   00DB82  C2                 	db	194
   789   00DB83  FD                 	db	253
   790   00DB84  E5                 	db	229
   791   00DB85  C9                 	db	201
   792   00DB86  CD                 	db	205
   793   00DB87  98                 	db	152
   794   00DB88  E4                 	db	228
   795   00DB89  2A                 	db	42
   796   00DB8A  8A                 	db	138
   797   00DB8B  E4                 	db	228
   798   00DB8C  7E                 	db	126
   799   00DB8D  FE                 	db	254
   800   00DB8E  20                 	db	32
   801   00DB8F  CA                 	db	202
   802   00DB90  22                 	db	34
   803   00DB91  E6                 	db	230
   804   00DB92  B7                 	db	183
   805   00DB93  CA                 	db	202
   806   00DB94  22                 	db	34
   807   00DB95  E6                 	db	230
   808   00DB96  E5                 	db	229
   809   00DB97  CD                 	db	205
   810   00DB98  8C                 	db	140
   811   00DB99  E4                 	db	228
   812   00DB9A  E1                 	db	225
   813   00DB9B  23                 	db	35
   814   00DB9C  C3                 	db	195
   815   00DB9D  0F                 	db	15
   816   00DB9E  E6                 	db	230
   817   00DB9F  3E                 	db	62
   818   00DBA0  3F                 	db	63
   819   00DBA1  CD                 	db	205
   820   00DBA2  8C                 	db	140
   821   00DBA3  E4                 	db	228
   822   00DBA4  CD                 	db	205
   823   00DBA5  98                 	db	152
   824   00DBA6  E4                 	db	228
   825   00DBA7  CD                 	db	205
   826   00DBA8  DD                 	db	221
   827   00DBA9  E5                 	db	229
   828   00DBAA  C3                 	db	195
   829   00DBAB  82                 	db	130
   830   00DBAC  E7                 	db	231
   831   00DBAD  1A                 	db	26
   832   00DBAE  B7                 	db	183
   833   00DBAF  C8                 	db	200
   834   00DBB0  FE                 	db	254
   835   00DBB1  20                 	db	32
   836   00DBB2  DA                 	db	218
   837   00DBB3  09                 	db	9
   838   00DBB4  E6                 	db	230
   839   00DBB5  C8                 	db	200
   840   00DBB6  FE                 	db	254
   841   00DBB7  3D                 	db	61
   842   00DBB8  C8                 	db	200
   843   00DBB9  FE                 	db	254
   844   00DBBA  5F                 	db	95
   845   00DBBB  C8                 	db	200
   846   00DBBC  FE                 	db	254
   847   00DBBD  2E                 	db	46
   848   00DBBE  C8                 	db	200
   849   00DBBF  FE                 	db	254
   850   00DBC0  3A                 	db	58
   851   00DBC1  C8                 	db	200
   852   00DBC2  FE                 	db	254
   853   00DBC3  3B                 	db	59
   854   00DBC4  C8                 	db	200
   855   00DBC5  FE                 	db	254
   856   00DBC6  3C                 	db	60
   857   00DBC7  C8                 	db	200
   858   00DBC8  FE                 	db	254
   859   00DBC9  3E                 	db	62
   860   00DBCA  C8                 	db	200
   861   00DBCB  C9                 	db	201
   862   00DBCC  1A                 	db	26
   863   00DBCD  B7                 	db	183
   864   00DBCE  C8                 	db	200
   865   00DBCF  FE                 	db	254
   866   00DBD0  20                 	db	32
   867   00DBD1  C0                 	db	192
   868   00DBD2  13                 	db	19
   869   00DBD3  C3                 	db	195
   870   00DBD4  4F                 	db	79
   871   00DBD5  E6                 	db	230
   872   00DBD6  85                 	db	133
   873   00DBD7  6F                 	db	111
   874   00DBD8  D0                 	db	208
   875   00DBD9  24                 	db	36
   876   00DBDA  C9                 	db	201
   877   00DBDB  3E                 	db	62
   878   00DBDC  00                 	db	0
   879   00DBDD  21                 	db	33
   880   00DBDE  CD                 	db	205
   881   00DBDF  EB                 	db	235
   882   00DBE0  CD                 	db	205
   883   00DBE1  59                 	db	89
   884   00DBE2  E6                 	db	230
   885   00DBE3  E5                 	db	229
   886   00DBE4  E5                 	db	229
   887   00DBE5  AF                 	db	175
   888   00DBE6  32                 	db	50
   889   00DBE7  F0                 	db	240
   890   00DBE8  EB                 	db	235
   891   00DBE9  2A                 	db	42
   892   00DBEA  88                 	db	136
   893   00DBEB  E4                 	db	228
   894   00DBEC  EB                 	db	235
   895   00DBED  CD                 	db	205
   896   00DBEE  4F                 	db	79
   897   00DBEF  E6                 	db	230
   898   00DBF0  EB                 	db	235
   899   00DBF1  22                 	db	34
   900   00DBF2  8A                 	db	138
   901   00DBF3  E4                 	db	228
   902   00DBF4  EB                 	db	235
   903   00DBF5  E1                 	db	225
   904   00DBF6  1A                 	db	26
   905   00DBF7  B7                 	db	183
   906   00DBF8  CA                 	db	202
   907   00DBF9  89                 	db	137
   908   00DBFA  E6                 	db	230
   909   00DBFB  DE                 	db	222
   910   00DBFC  40                 	db	64
   911   00DBFD  47                 	db	71
   912   00DBFE  13                 	db	19
   913   00DBFF  1A                 	db	26
   914   00DC00  FE                 	db	254
   915   00DC01  3A                 	db	58
   916   00DC02  CA                 	db	202
   917   00DC03  90                 	db	144
   918   00DC04  E6                 	db	230
   919   00DC05  1B                 	db	27
   920   00DC06  3A                 	db	58
   921   00DC07  EF                 	db	239
   922   00DC08  EB                 	db	235
   923   00DC09  77                 	db	119
   924   00DC0A  C3                 	db	195
   925   00DC0B  96                 	db	150
   926   00DC0C  E6                 	db	230
   927   00DC0D  78                 	db	120
   928   00DC0E  32                 	db	50
   929   00DC0F  F0                 	db	240
   930   00DC10  EB                 	db	235
   931   00DC11  70                 	db	112
   932   00DC12  13                 	db	19
   933   00DC13  06                 	db	6
   934   00DC14  08                 	db	8
   935   00DC15  CD                 	db	205
   936   00DC16  30                 	db	48
   937   00DC17  E6                 	db	230
   938   00DC18  CA                 	db	202
   939   00DC19  B9                 	db	185
   940   00DC1A  E6                 	db	230
   941   00DC1B  23                 	db	35
   942   00DC1C  FE                 	db	254
   943   00DC1D  2A                 	db	42
   944   00DC1E  C2                 	db	194
   945   00DC1F  A9                 	db	169
   946   00DC20  E6                 	db	230
   947   00DC21  36                 	db	54
   948   00DC22  3F                 	db	63
   949   00DC23  C3                 	db	195
   950   00DC24  AB                 	db	171
   951   00DC25  E6                 	db	230
   952   00DC26  77                 	db	119
   953   00DC27  13                 	db	19
   954   00DC28  05                 	db	5
   955   00DC29  C2                 	db	194
   956   00DC2A  98                 	db	152
   957   00DC2B  E6                 	db	230
   958   00DC2C  CD                 	db	205
   959   00DC2D  30                 	db	48
   960   00DC2E  E6                 	db	230
   961   00DC2F  CA                 	db	202
   962   00DC30  C0                 	db	192
   963   00DC31  E6                 	db	230
   964   00DC32  13                 	db	19
   965   00DC33  C3                 	db	195
   966   00DC34  AF                 	db	175
   967   00DC35  E6                 	db	230
   968   00DC36  23                 	db	35
   969   00DC37  36                 	db	54
   970   00DC38  20                 	db	32
   971   00DC39  05                 	db	5
   972   00DC3A  C2                 	db	194
   973   00DC3B  B9                 	db	185
   974   00DC3C  E6                 	db	230
   975   00DC3D  06                 	db	6
   976   00DC3E  03                 	db	3
   977   00DC3F  FE                 	db	254
   978   00DC40  2E                 	db	46
   979   00DC41  C2                 	db	194
   980   00DC42  E9                 	db	233
   981   00DC43  E6                 	db	230
   982   00DC44  13                 	db	19
   983   00DC45  CD                 	db	205
   984   00DC46  30                 	db	48
   985   00DC47  E6                 	db	230
   986   00DC48  CA                 	db	202
   987   00DC49  E9                 	db	233
   988   00DC4A  E6                 	db	230
   989   00DC4B  23                 	db	35
   990   00DC4C  FE                 	db	254
   991   00DC4D  2A                 	db	42
   992   00DC4E  C2                 	db	194
   993   00DC4F  D9                 	db	217
   994   00DC50  E6                 	db	230
   995   00DC51  36                 	db	54
   996   00DC52  3F                 	db	63
   997   00DC53  C3                 	db	195
   998   00DC54  DB                 	db	219
   999   00DC55  E6                 	db	230
  1000   00DC56  77                 	db	119
  1001   00DC57  13                 	db	19
  1002   00DC58  05                 	db	5
  1003   00DC59  C2                 	db	194
  1004   00DC5A  C8                 	db	200
  1005   00DC5B  E6                 	db	230
  1006   00DC5C  CD                 	db	205
  1007   00DC5D  30                 	db	48
  1008   00DC5E  E6                 	db	230
  1009   00DC5F  CA                 	db	202
  1010   00DC60  F0                 	db	240
  1011   00DC61  E6                 	db	230
  1012   00DC62  13                 	db	19
  1013   00DC63  C3                 	db	195
  1014   00DC64  DF                 	db	223
  1015   00DC65  E6                 	db	230
  1016   00DC66  23                 	db	35
  1017   00DC67  36                 	db	54
  1018   00DC68  20                 	db	32
  1019   00DC69  05                 	db	5
  1020   00DC6A  C2                 	db	194
  1021   00DC6B  E9                 	db	233
  1022   00DC6C  E6                 	db	230
  1023   00DC6D  06                 	db	6
  1024   00DC6E  03                 	db	3
  1025   00DC6F  23                 	db	35
  1026   00DC70  36                 	db	54
  1027   00DC71  00                 	db	0
  1028   00DC72  05                 	db	5
  1029   00DC73  C2                 	db	194
  1030   00DC74  F2                 	db	242
  1031   00DC75  E6                 	db	230
  1032   00DC76  EB                 	db	235
  1033   00DC77  22                 	db	34
  1034   00DC78  88                 	db	136
  1035   00DC79  E4                 	db	228
  1036   00DC7A  E1                 	db	225
  1037   00DC7B  01                 	db	1
  1038   00DC7C  0B                 	db	11
  1039   00DC7D  00                 	db	0
  1040   00DC7E  23                 	db	35
  1041   00DC7F  7E                 	db	126
  1042   00DC80  FE                 	db	254
  1043   00DC81  3F                 	db	63
  1044   00DC82  C2                 	db	194
  1045   00DC83  09                 	db	9
  1046   00DC84  E7                 	db	231
  1047   00DC85  04                 	db	4
  1048   00DC86  0D                 	db	13
  1049   00DC87  C2                 	db	194
  1050   00DC88  01                 	db	1
  1051   00DC89  E7                 	db	231
  1052   00DC8A  78                 	db	120
  1053   00DC8B  B7                 	db	183
  1054   00DC8C  C9                 	db	201
  1055   00DC8D  44                 	db	68
  1056   00DC8E  49                 	db	73
  1057   00DC8F  52                 	db	82
  1058   00DC90  20                 	db	32
  1059   00DC91  45                 	db	69
  1060   00DC92  52                 	db	82
  1061   00DC93  41                 	db	65
  1062   00DC94  20                 	db	32
  1063   00DC95  54                 	db	84
  1064   00DC96  59                 	db	89
  1065   00DC97  50                 	db	80
  1066   00DC98  45                 	db	69
  1067   00DC99  53                 	db	83
  1068   00DC9A  41                 	db	65
  1069   00DC9B  56                 	db	86
  1070   00DC9C  45                 	db	69
  1071   00DC9D  52                 	db	82
  1072   00DC9E  45                 	db	69
  1073   00DC9F  4E                 	db	78
  1074   00DCA0  20                 	db	32
  1075   00DCA1  55                 	db	85
  1076   00DCA2  53                 	db	83
  1077   00DCA3  45                 	db	69
  1078   00DCA4  52                 	db	82
  1079   00DCA5  00                 	db	0
  1080   00DCA6  16                 	db	22
  1081   00DCA7  00                 	db	0
  1082   00DCA8  00                 	db	0
  1083   00DCA9  00                 	db	0
  1084   00DCAA  00                 	db	0
  1085   00DCAB  21                 	db	33
  1086   00DCAC  10                 	db	16
  1087   00DCAD  E7                 	db	231
  1088   00DCAE  0E                 	db	14
  1089   00DCAF  00                 	db	0
  1090   00DCB0  79                 	db	121
  1091   00DCB1  FE                 	db	254
  1092   00DCB2  06                 	db	6
  1093   00DCB3  D0                 	db	208
  1094   00DCB4  11                 	db	17
  1095   00DCB5  CE                 	db	206
  1096   00DCB6  EB                 	db	235
  1097   00DCB7  06                 	db	6
  1098   00DCB8  04                 	db	4
  1099   00DCB9  1A                 	db	26
  1100   00DCBA  BE                 	db	190
  1101   00DCBB  C2                 	db	194
  1102   00DCBC  4F                 	db	79
  1103   00DCBD  E7                 	db	231
  1104   00DCBE  13                 	db	19
  1105   00DCBF  23                 	db	35
  1106   00DCC0  05                 	db	5
  1107   00DCC1  C2                 	db	194
  1108   00DCC2  3C                 	db	60
  1109   00DCC3  E7                 	db	231
  1110   00DCC4  1A                 	db	26
  1111   00DCC5  FE                 	db	254
  1112   00DCC6  20                 	db	32
  1113   00DCC7  C2                 	db	194
  1114   00DCC8  54                 	db	84
  1115   00DCC9  E7                 	db	231
  1116   00DCCA  79                 	db	121
  1117   00DCCB  C9                 	db	201
  1118   00DCCC  23                 	db	35
  1119   00DCCD  05                 	db	5
  1120   00DCCE  C2                 	db	194
  1121   00DCCF  4F                 	db	79
  1122   00DCD0  E7                 	db	231
  1123   00DCD1  0C                 	db	12
  1124   00DCD2  C3                 	db	195
  1125   00DCD3  33                 	db	51
  1126   00DCD4  E7                 	db	231
  1127   00DCD5  AF                 	db	175
  1128   00DCD6  32                 	db	50
  1129   00DCD7  07                 	db	7
  1130   00DCD8  E4                 	db	228
  1131   00DCD9  31                 	db	49
  1132   00DCDA  AB                 	db	171
  1133   00DCDB  EB                 	db	235
  1134   00DCDC  C5                 	db	197
  1135   00DCDD  79                 	db	121
  1136   00DCDE  1F                 	db	31
  1137   00DCDF  1F                 	db	31
  1138   00DCE0  1F                 	db	31
  1139   00DCE1  1F                 	db	31
  1140   00DCE2  E6                 	db	230
  1141   00DCE3  0F                 	db	15
  1142   00DCE4  5F                 	db	95
  1143   00DCE5  CD                 	db	205
  1144   00DCE6  15                 	db	21
  1145   00DCE7  E5                 	db	229
  1146   00DCE8  CD                 	db	205
  1147   00DCE9  B8                 	db	184
  1148   00DCEA  E4                 	db	228
  1149   00DCEB  32                 	db	50
  1150   00DCEC  AB                 	db	171
  1151   00DCED  EB                 	db	235
  1152   00DCEE  C1                 	db	193
  1153   00DCEF  79                 	db	121
  1154   00DCF0  E6                 	db	230
  1155   00DCF1  0F                 	db	15
  1156   00DCF2  32                 	db	50
  1157   00DCF3  EF                 	db	239
  1158   00DCF4  EB                 	db	235
  1159   00DCF5  CD                 	db	205
  1160   00DCF6  BD                 	db	189
  1161   00DCF7  E4                 	db	228
  1162   00DCF8  3A                 	db	58
  1163   00DCF9  07                 	db	7
  1164   00DCFA  E4                 	db	228
  1165   00DCFB  B7                 	db	183
  1166   00DCFC  C2                 	db	194
  1167   00DCFD  98                 	db	152
  1168   00DCFE  E7                 	db	231
  1169   00DCFF  31                 	db	49
  1170   00DD00  AB                 	db	171
  1171   00DD01  EB                 	db	235
  1172   00DD02  CD                 	db	205
  1173   00DD03  98                 	db	152
  1174   00DD04  E4                 	db	228
  1175   00DD05  CD                 	db	205
  1176   00DD06  D0                 	db	208
  1177   00DD07  E5                 	db	229
  1178   00DD08  C6                 	db	198
  1179   00DD09  41                 	db	65
  1180   00DD0A  CD                 	db	205
  1181   00DD0B  8C                 	db	140
  1182   00DD0C  E4                 	db	228
  1183   00DD0D  3E                 	db	62
  1184   00DD0E  3E                 	db	62
  1185   00DD0F  CD                 	db	205
  1186   00DD10  8C                 	db	140
  1187   00DD11  E4                 	db	228
  1188   00DD12  CD                 	db	205
  1189   00DD13  39                 	db	57
  1190   00DD14  E5                 	db	229
  1191   00DD15  11                 	db	17
  1192   00DD16  80                 	db	128
  1193   00DD17  00                 	db	0
  1194   00DD18  CD                 	db	205
  1195   00DD19  D8                 	db	216
  1196   00DD1A  E5                 	db	229
  1197   00DD1B  CD                 	db	205
  1198   00DD1C  D0                 	db	208
  1199   00DD1D  E5                 	db	229
  1200   00DD1E  32                 	db	50
  1201   00DD1F  EF                 	db	239
  1202   00DD20  EB                 	db	235
  1203   00DD21  CD                 	db	205
  1204   00DD22  5E                 	db	94
  1205   00DD23  E6                 	db	230
  1206   00DD24  C4                 	db	196
  1207   00DD25  09                 	db	9
  1208   00DD26  E6                 	db	230
  1209   00DD27  3A                 	db	58
  1210   00DD28  F0                 	db	240
  1211   00DD29  EB                 	db	235
  1212   00DD2A  B7                 	db	183
  1213   00DD2B  C2                 	db	194
  1214   00DD2C  A5                 	db	165
  1215   00DD2D  EA                 	db	234
  1216   00DD2E  CD                 	db	205
  1217   00DD2F  2E                 	db	46
  1218   00DD30  E7                 	db	231
  1219   00DD31  21                 	db	33
  1220   00DD32  C1                 	db	193
  1221   00DD33  E7                 	db	231
  1222   00DD34  5F                 	db	95
  1223   00DD35  16                 	db	22
  1224   00DD36  00                 	db	0
  1225   00DD37  19                 	db	25
  1226   00DD38  19                 	db	25
  1227   00DD39  7E                 	db	126
  1228   00DD3A  23                 	db	35
  1229   00DD3B  66                 	db	102
  1230   00DD3C  6F                 	db	111
  1231   00DD3D  E9                 	db	233
  1232   00DD3E  77                 	db	119
  1233   00DD3F  E8                 	db	232
  1234   00DD40  1F                 	db	31
  1235   00DD41  E9                 	db	233
  1236   00DD42  5D                 	db	93
  1237   00DD43  E9                 	db	233
  1238   00DD44  AD                 	db	173
  1239   00DD45  E9                 	db	233
  1240   00DD46  10                 	db	16
  1241   00DD47  EA                 	db	234
  1242   00DD48  8E                 	db	142
  1243   00DD49  EA                 	db	234
  1244   00DD4A  A5                 	db	165
  1245   00DD4B  EA                 	db	234
  1246   00DD4C  21                 	db	33
  1247   00DD4D  F3                 	db	243
  1248   00DD4E  76                 	db	118
  1249   00DD4F  22                 	db	34
  1250   00DD50  00                 	db	0
  1251   00DD51  E4                 	db	228
  1252   00DD52  21                 	db	33
  1253   00DD53  00                 	db	0
  1254   00DD54  E4                 	db	228
  1255   00DD55  E9                 	db	233
  1256   00DD56  01                 	db	1
  1257   00DD57  DF                 	db	223
  1258   00DD58  E7                 	db	231
  1259   00DD59  C3                 	db	195
  1260   00DD5A  A7                 	db	167
  1261   00DD5B  E4                 	db	228
  1262   00DD5C  52                 	db	82
  1263   00DD5D  65                 	db	101
  1264   00DD5E  61                 	db	97
  1265   00DD5F  64                 	db	100
  1266   00DD60  20                 	db	32
  1267   00DD61  65                 	db	101
  1268   00DD62  72                 	db	114
  1269   00DD63  72                 	db	114
  1270   00DD64  6F                 	db	111
  1271   00DD65  72                 	db	114
  1272   00DD66  00                 	db	0
  1273   00DD67  01                 	db	1
  1274   00DD68  F0                 	db	240
  1275   00DD69  E7                 	db	231
  1276   00DD6A  C3                 	db	195
  1277   00DD6B  A7                 	db	167
  1278   00DD6C  E4                 	db	228
  1279   00DD6D  4E                 	db	78
  1280   00DD6E  6F                 	db	111
  1281   00DD6F  20                 	db	32
  1282   00DD70  66                 	db	102
  1283   00DD71  69                 	db	105
  1284   00DD72  6C                 	db	108
  1285   00DD73  65                 	db	101
  1286   00DD74  00                 	db	0
  1287   00DD75  CD                 	db	205
  1288   00DD76  5E                 	db	94
  1289   00DD77  E6                 	db	230
  1290   00DD78  3A                 	db	58
  1291   00DD79  F0                 	db	240
  1292   00DD7A  EB                 	db	235
  1293   00DD7B  B7                 	db	183
  1294   00DD7C  C2                 	db	194
  1295   00DD7D  09                 	db	9
  1296   00DD7E  E6                 	db	230
  1297   00DD7F  21                 	db	33
  1298   00DD80  CE                 	db	206
  1299   00DD81  EB                 	db	235
  1300   00DD82  01                 	db	1
  1301   00DD83  0B                 	db	11
  1302   00DD84  00                 	db	0
  1303   00DD85  7E                 	db	126
  1304   00DD86  FE                 	db	254
  1305   00DD87  20                 	db	32
  1306   00DD88  CA                 	db	202
  1307   00DD89  33                 	db	51
  1308   00DD8A  E8                 	db	232
  1309   00DD8B  23                 	db	35
  1310   00DD8C  D6                 	db	214
  1311   00DD8D  30                 	db	48
  1312   00DD8E  FE                 	db	254
  1313   00DD8F  0A                 	db	10
  1314   00DD90  D2                 	db	210
  1315   00DD91  09                 	db	9
  1316   00DD92  E6                 	db	230
  1317   00DD93  57                 	db	87
  1318   00DD94  78                 	db	120
  1319   00DD95  E6                 	db	230
  1320   00DD96  E0                 	db	224
  1321   00DD97  C2                 	db	194
  1322   00DD98  09                 	db	9
  1323   00DD99  E6                 	db	230
  1324   00DD9A  78                 	db	120
  1325   00DD9B  07                 	db	7
  1326   00DD9C  07                 	db	7
  1327   00DD9D  07                 	db	7
  1328   00DD9E  80                 	db	128
  1329   00DD9F  DA                 	db	218
  1330   00DDA0  09                 	db	9
  1331   00DDA1  E6                 	db	230
  1332   00DDA2  80                 	db	128
  1333   00DDA3  DA                 	db	218
  1334   00DDA4  09                 	db	9
  1335   00DDA5  E6                 	db	230
  1336   00DDA6  82                 	db	130
  1337   00DDA7  DA                 	db	218
  1338   00DDA8  09                 	db	9
  1339   00DDA9  E6                 	db	230
  1340   00DDAA  47                 	db	71
  1341   00DDAB  0D                 	db	13
  1342   00DDAC  C2                 	db	194
  1343   00DDAD  08                 	db	8
  1344   00DDAE  E8                 	db	232
  1345   00DDAF  C9                 	db	201
  1346   00DDB0  7E                 	db	126
  1347   00DDB1  FE                 	db	254
  1348   00DDB2  20                 	db	32
  1349   00DDB3  C2                 	db	194
  1350   00DDB4  09                 	db	9
  1351   00DDB5  E6                 	db	230
  1352   00DDB6  23                 	db	35
  1353   00DDB7  0D                 	db	13
  1354   00DDB8  C2                 	db	194
  1355   00DDB9  33                 	db	51
  1356   00DDBA  E8                 	db	232
  1357   00DDBB  78                 	db	120
  1358   00DDBC  C9                 	db	201
  1359   00DDBD  06                 	db	6
  1360   00DDBE  03                 	db	3
  1361   00DDBF  7E                 	db	126
  1362   00DDC0  12                 	db	18
  1363   00DDC1  23                 	db	35
  1364   00DDC2  13                 	db	19
  1365   00DDC3  05                 	db	5
  1366   00DDC4  C2                 	db	194
  1367   00DDC5  42                 	db	66
  1368   00DDC6  E8                 	db	232
  1369   00DDC7  C9                 	db	201
  1370   00DDC8  21                 	db	33
  1371   00DDC9  80                 	db	128
  1372   00DDCA  00                 	db	0
  1373   00DDCB  81                 	db	129
  1374   00DDCC  CD                 	db	205
  1375   00DDCD  59                 	db	89
  1376   00DDCE  E6                 	db	230
  1377   00DDCF  7E                 	db	126
  1378   00DDD0  C9                 	db	201
  1379   00DDD1  AF                 	db	175
  1380   00DDD2  32                 	db	50
  1381   00DDD3  CD                 	db	205
  1382   00DDD4  EB                 	db	235
  1383   00DDD5  3A                 	db	58
  1384   00DDD6  F0                 	db	240
  1385   00DDD7  EB                 	db	235
  1386   00DDD8  B7                 	db	183
  1387   00DDD9  C8                 	db	200
  1388   00DDDA  3D                 	db	61
  1389   00DDDB  21                 	db	33
  1390   00DDDC  EF                 	db	239
  1391   00DDDD  EB                 	db	235
  1392   00DDDE  BE                 	db	190
  1393   00DDDF  C8                 	db	200
  1394   00DDE0  C3                 	db	195
  1395   00DDE1  BD                 	db	189
  1396   00DDE2  E4                 	db	228
  1397   00DDE3  3A                 	db	58
  1398   00DDE4  F0                 	db	240
  1399   00DDE5  EB                 	db	235
  1400   00DDE6  B7                 	db	183
  1401   00DDE7  C8                 	db	200
  1402   00DDE8  3D                 	db	61
  1403   00DDE9  21                 	db	33
  1404   00DDEA  EF                 	db	239
  1405   00DDEB  EB                 	db	235
  1406   00DDEC  BE                 	db	190
  1407   00DDED  C8                 	db	200
  1408   00DDEE  3A                 	db	58
  1409   00DDEF  EF                 	db	239
  1410   00DDF0  EB                 	db	235
  1411   00DDF1  C3                 	db	195
  1412   00DDF2  BD                 	db	189
  1413   00DDF3  E4                 	db	228
  1414   00DDF4  CD                 	db	205
  1415   00DDF5  5E                 	db	94
  1416   00DDF6  E6                 	db	230
  1417   00DDF7  CD                 	db	205
  1418   00DDF8  54                 	db	84
  1419   00DDF9  E8                 	db	232
  1420   00DDFA  21                 	db	33
  1421   00DDFB  CE                 	db	206
  1422   00DDFC  EB                 	db	235
  1423   00DDFD  7E                 	db	126
  1424   00DDFE  FE                 	db	254
  1425   00DDFF  20                 	db	32
  1426   00DE00  C2                 	db	194
  1427   00DE01  8F                 	db	143
  1428   00DE02  E8                 	db	232
  1429   00DE03  06                 	db	6
  1430   00DE04  0B                 	db	11
  1431   00DE05  36                 	db	54
  1432   00DE06  3F                 	db	63
  1433   00DE07  23                 	db	35
  1434   00DE08  05                 	db	5
  1435   00DE09  C2                 	db	194
  1436   00DE0A  88                 	db	136
  1437   00DE0B  E8                 	db	232
  1438   00DE0C  1E                 	db	30
  1439   00DE0D  00                 	db	0
  1440   00DE0E  D5                 	db	213
  1441   00DE0F  CD                 	db	205
  1442   00DE10  E9                 	db	233
  1443   00DE11  E4                 	db	228
  1444   00DE12  CC                 	db	204
  1445   00DE13  EA                 	db	234
  1446   00DE14  E7                 	db	231
  1447   00DE15  CA                 	db	202
  1448   00DE16  1B                 	db	27
  1449   00DE17  E9                 	db	233
  1450   00DE18  3A                 	db	58
  1451   00DE19  EE                 	db	238
  1452   00DE1A  EB                 	db	235
  1453   00DE1B  0F                 	db	15
  1454   00DE1C  0F                 	db	15
  1455   00DE1D  0F                 	db	15
  1456   00DE1E  E6                 	db	230
  1457   00DE1F  60                 	db	96
  1458   00DE20  4F                 	db	79
  1459   00DE21  3E                 	db	62
  1460   00DE22  0A                 	db	10
  1461   00DE23  CD                 	db	205
  1462   00DE24  4B                 	db	75
  1463   00DE25  E8                 	db	232
  1464   00DE26  17                 	db	23
  1465   00DE27  DA                 	db	218
  1466   00DE28  0F                 	db	15
  1467   00DE29  E9                 	db	233
  1468   00DE2A  D1                 	db	209
  1469   00DE2B  7B                 	db	123
  1470   00DE2C  1C                 	db	28
  1471   00DE2D  D5                 	db	213
  1472   00DE2E  E6                 	db	230
  1473   00DE2F  03                 	db	3
  1474   00DE30  F5                 	db	245
  1475   00DE31  C2                 	db	194
  1476   00DE32  CC                 	db	204
  1477   00DE33  E8                 	db	232
  1478   00DE34  CD                 	db	205
  1479   00DE35  98                 	db	152
  1480   00DE36  E4                 	db	228
  1481   00DE37  C5                 	db	197
  1482   00DE38  CD                 	db	205
  1483   00DE39  D0                 	db	208
  1484   00DE3A  E5                 	db	229
  1485   00DE3B  C1                 	db	193
  1486   00DE3C  C6                 	db	198
  1487   00DE3D  41                 	db	65
  1488   00DE3E  CD                 	db	205
  1489   00DE3F  92                 	db	146
  1490   00DE40  E4                 	db	228
  1491   00DE41  3E                 	db	62
  1492   00DE42  3A                 	db	58
  1493   00DE43  CD                 	db	205
  1494   00DE44  92                 	db	146
  1495   00DE45  E4                 	db	228
  1496   00DE46  C3                 	db	195
  1497   00DE47  D4                 	db	212
  1498   00DE48  E8                 	db	232
  1499   00DE49  CD                 	db	205
  1500   00DE4A  A2                 	db	162
  1501   00DE4B  E4                 	db	228
  1502   00DE4C  3E                 	db	62
  1503   00DE4D  3A                 	db	58
  1504   00DE4E  CD                 	db	205
  1505   00DE4F  92                 	db	146
  1506   00DE50  E4                 	db	228
  1507   00DE51  CD                 	db	205
  1508   00DE52  A2                 	db	162
  1509   00DE53  E4                 	db	228
  1510   00DE54  06                 	db	6
  1511   00DE55  01                 	db	1
  1512   00DE56  78                 	db	120
  1513   00DE57  CD                 	db	205
  1514   00DE58  4B                 	db	75
  1515   00DE59  E8                 	db	232
  1516   00DE5A  E6                 	db	230
  1517   00DE5B  7F                 	db	127
  1518   00DE5C  FE                 	db	254
  1519   00DE5D  20                 	db	32
  1520   00DE5E  C2                 	db	194
  1521   00DE5F  F9                 	db	249
  1522   00DE60  E8                 	db	232
  1523   00DE61  F1                 	db	241
  1524   00DE62  F5                 	db	245
  1525   00DE63  FE                 	db	254
  1526   00DE64  03                 	db	3
  1527   00DE65  C2                 	db	194
  1528   00DE66  F7                 	db	247
  1529   00DE67  E8                 	db	232
  1530   00DE68  3E                 	db	62
  1531   00DE69  09                 	db	9
  1532   00DE6A  CD                 	db	205
  1533   00DE6B  4B                 	db	75
  1534   00DE6C  E8                 	db	232
  1535   00DE6D  E6                 	db	230
  1536   00DE6E  7F                 	db	127
  1537   00DE6F  FE                 	db	254
  1538   00DE70  20                 	db	32
  1539   00DE71  CA                 	db	202
  1540   00DE72  0E                 	db	14
  1541   00DE73  E9                 	db	233
  1542   00DE74  3E                 	db	62
  1543   00DE75  20                 	db	32
  1544   00DE76  CD                 	db	205
  1545   00DE77  92                 	db	146
  1546   00DE78  E4                 	db	228
  1547   00DE79  04                 	db	4
  1548   00DE7A  78                 	db	120
  1549   00DE7B  FE                 	db	254
  1550   00DE7C  0C                 	db	12
  1551   00DE7D  D2                 	db	210
  1552   00DE7E  0E                 	db	14
  1553   00DE7F  E9                 	db	233
  1554   00DE80  FE                 	db	254
  1555   00DE81  09                 	db	9
  1556   00DE82  C2                 	db	194
  1557   00DE83  D9                 	db	217
  1558   00DE84  E8                 	db	232
  1559   00DE85  CD                 	db	205
  1560   00DE86  A2                 	db	162
  1561   00DE87  E4                 	db	228
  1562   00DE88  C3                 	db	195
  1563   00DE89  D9                 	db	217
  1564   00DE8A  E8                 	db	232
  1565   00DE8B  F1                 	db	241
  1566   00DE8C  CD                 	db	205
  1567   00DE8D  C2                 	db	194
  1568   00DE8E  E5                 	db	229
  1569   00DE8F  C2                 	db	194
  1570   00DE90  1B                 	db	27
  1571   00DE91  E9                 	db	233
  1572   00DE92  CD                 	db	205
  1573   00DE93  E4                 	db	228
  1574   00DE94  E4                 	db	228
  1575   00DE95  C3                 	db	195
  1576   00DE96  98                 	db	152
  1577   00DE97  E8                 	db	232
  1578   00DE98  D1                 	db	209
  1579   00DE99  C3                 	db	195
  1580   00DE9A  86                 	db	134
  1581   00DE9B  EB                 	db	235
  1582   00DE9C  CD                 	db	205
  1583   00DE9D  5E                 	db	94
  1584   00DE9E  E6                 	db	230
  1585   00DE9F  FE                 	db	254
  1586   00DEA0  0B                 	db	11
  1587   00DEA1  C2                 	db	194
  1588   00DEA2  42                 	db	66
  1589   00DEA3  E9                 	db	233
  1590   00DEA4  01                 	db	1
  1591   00DEA5  52                 	db	82
  1592   00DEA6  E9                 	db	233
  1593   00DEA7  CD                 	db	205
  1594   00DEA8  A7                 	db	167
  1595   00DEA9  E4                 	db	228
  1596   00DEAA  CD                 	db	205
  1597   00DEAB  39                 	db	57
  1598   00DEAC  E5                 	db	229
  1599   00DEAD  21                 	db	33
  1600   00DEAE  07                 	db	7
  1601   00DEAF  E4                 	db	228
  1602   00DEB0  35                 	db	53
  1603   00DEB1  C2                 	db	194
  1604   00DEB2  82                 	db	130
  1605   00DEB3  E7                 	db	231
  1606   00DEB4  23                 	db	35
  1607   00DEB5  7E                 	db	126
  1608   00DEB6  FE                 	db	254
  1609   00DEB7  59                 	db	89
  1610   00DEB8  C2                 	db	194
  1611   00DEB9  82                 	db	130
  1612   00DEBA  E7                 	db	231
  1613   00DEBB  23                 	db	35
  1614   00DEBC  22                 	db	34
  1615   00DEBD  88                 	db	136
  1616   00DEBE  E4                 	db	228
  1617   00DEBF  CD                 	db	205
  1618   00DEC0  54                 	db	84
  1619   00DEC1  E8                 	db	232
  1620   00DEC2  11                 	db	17
  1621   00DEC3  CD                 	db	205
  1622   00DEC4  EB                 	db	235
  1623   00DEC5  CD                 	db	205
  1624   00DEC6  EF                 	db	239
  1625   00DEC7  E4                 	db	228
  1626   00DEC8  3C                 	db	60
  1627   00DEC9  CC                 	db	204
  1628   00DECA  EA                 	db	234
  1629   00DECB  E7                 	db	231
  1630   00DECC  C3                 	db	195
  1631   00DECD  86                 	db	134
  1632   00DECE  EB                 	db	235
  1633   00DECF  41                 	db	65
  1634   00DED0  6C                 	db	108
  1635   00DED1  6C                 	db	108
  1636   00DED2  20                 	db	32
  1637   00DED3  28                 	db	40
  1638   00DED4  79                 	db	121
  1639   00DED5  2F                 	db	47
  1640   00DED6  6E                 	db	110
  1641   00DED7  29                 	db	41
  1642   00DED8  3F                 	db	63
  1643   00DED9  00                 	db	0
  1644   00DEDA  CD                 	db	205
  1645   00DEDB  5E                 	db	94
  1646   00DEDC  E6                 	db	230
  1647   00DEDD  C2                 	db	194
  1648   00DEDE  09                 	db	9
  1649   00DEDF  E6                 	db	230
  1650   00DEE0  CD                 	db	205
  1651   00DEE1  54                 	db	84
  1652   00DEE2  E8                 	db	232
  1653   00DEE3  CD                 	db	205
  1654   00DEE4  D0                 	db	208
  1655   00DEE5  E4                 	db	228
  1656   00DEE6  CA                 	db	202
  1657   00DEE7  A7                 	db	167
  1658   00DEE8  E9                 	db	233
  1659   00DEE9  CD                 	db	205
  1660   00DEEA  98                 	db	152
  1661   00DEEB  E4                 	db	228
  1662   00DEEC  21                 	db	33
  1663   00DEED  F1                 	db	241
  1664   00DEEE  EB                 	db	235
  1665   00DEEF  36                 	db	54
  1666   00DEF0  FF                 	db	255
  1667   00DEF1  21                 	db	33
  1668   00DEF2  F1                 	db	241
  1669   00DEF3  EB                 	db	235
  1670   00DEF4  7E                 	db	126
  1671   00DEF5  FE                 	db	254
  1672   00DEF6  80                 	db	128
  1673   00DEF7  DA                 	db	218
  1674   00DEF8  87                 	db	135
  1675   00DEF9  E9                 	db	233
  1676   00DEFA  E5                 	db	229
  1677   00DEFB  CD                 	db	205
  1678   00DEFC  FE                 	db	254
  1679   00DEFD  E4                 	db	228
  1680   00DEFE  E1                 	db	225
  1681   00DEFF  C2                 	db	194
  1682   00DF00  A0                 	db	160
  1683   00DF01  E9                 	db	233
  1684   00DF02  AF                 	db	175
  1685   00DF03  77                 	db	119
  1686   00DF04  34                 	db	52
  1687   00DF05  21                 	db	33
  1688   00DF06  80                 	db	128
  1689   00DF07  00                 	db	0
  1690   00DF08  CD                 	db	205
  1691   00DF09  59                 	db	89
  1692   00DF0A  E6                 	db	230
  1693   00DF0B  7E                 	db	126
  1694   00DF0C  FE                 	db	254
  1695   00DF0D  1A                 	db	26
  1696   00DF0E  CA                 	db	202
  1697   00DF0F  86                 	db	134
  1698   00DF10  EB                 	db	235
  1699   00DF11  CD                 	db	205
  1700   00DF12  8C                 	db	140
  1701   00DF13  E4                 	db	228
  1702   00DF14  CD                 	db	205
  1703   00DF15  C2                 	db	194
  1704   00DF16  E5                 	db	229
  1705   00DF17  C2                 	db	194
  1706   00DF18  86                 	db	134
  1707   00DF19  EB                 	db	235
  1708   00DF1A  C3                 	db	195
  1709   00DF1B  74                 	db	116
  1710   00DF1C  E9                 	db	233
  1711   00DF1D  3D                 	db	61
  1712   00DF1E  CA                 	db	202
  1713   00DF1F  86                 	db	134
  1714   00DF20  EB                 	db	235
  1715   00DF21  CD                 	db	205
  1716   00DF22  D9                 	db	217
  1717   00DF23  E7                 	db	231
  1718   00DF24  CD                 	db	205
  1719   00DF25  66                 	db	102
  1720   00DF26  E8                 	db	232
  1721   00DF27  C3                 	db	195
  1722   00DF28  09                 	db	9
  1723   00DF29  E6                 	db	230
  1724   00DF2A  CD                 	db	205
  1725   00DF2B  F8                 	db	248
  1726   00DF2C  E7                 	db	231
  1727   00DF2D  F5                 	db	245
  1728   00DF2E  CD                 	db	205
  1729   00DF2F  5E                 	db	94
  1730   00DF30  E6                 	db	230
  1731   00DF31  C2                 	db	194
  1732   00DF32  09                 	db	9
  1733   00DF33  E6                 	db	230
  1734   00DF34  CD                 	db	205
  1735   00DF35  54                 	db	84
  1736   00DF36  E8                 	db	232
  1737   00DF37  11                 	db	17
  1738   00DF38  CD                 	db	205
  1739   00DF39  EB                 	db	235
  1740   00DF3A  D5                 	db	213
  1741   00DF3B  CD                 	db	205
  1742   00DF3C  EF                 	db	239
  1743   00DF3D  E4                 	db	228
  1744   00DF3E  D1                 	db	209
  1745   00DF3F  CD                 	db	205
  1746   00DF40  09                 	db	9
  1747   00DF41  E5                 	db	229
  1748   00DF42  CA                 	db	202
  1749   00DF43  FB                 	db	251
  1750   00DF44  E9                 	db	233
  1751   00DF45  AF                 	db	175
  1752   00DF46  32                 	db	50
  1753   00DF47  ED                 	db	237
  1754   00DF48  EB                 	db	235
  1755   00DF49  F1                 	db	241
  1756   00DF4A  6F                 	db	111
  1757   00DF4B  26                 	db	38
  1758   00DF4C  00                 	db	0
  1759   00DF4D  29                 	db	41
  1760   00DF4E  11                 	db	17
  1761   00DF4F  00                 	db	0
  1762   00DF50  01                 	db	1
  1763   00DF51  7C                 	db	124
  1764   00DF52  B5                 	db	181
  1765   00DF53  CA                 	db	202
  1766   00DF54  F1                 	db	241
  1767   00DF55  E9                 	db	233
  1768   00DF56  2B                 	db	43
  1769   00DF57  E5                 	db	229
  1770   00DF58  21                 	db	33
  1771   00DF59  80                 	db	128
  1772   00DF5A  00                 	db	0
  1773   00DF5B  19                 	db	25
  1774   00DF5C  E5                 	db	229
  1775   00DF5D  CD                 	db	205
  1776   00DF5E  D8                 	db	216
  1777   00DF5F  E5                 	db	229
  1778   00DF60  11                 	db	17
  1779   00DF61  CD                 	db	205
  1780   00DF62  EB                 	db	235
  1781   00DF63  CD                 	db	205
  1782   00DF64  04                 	db	4
  1783   00DF65  E5                 	db	229
  1784   00DF66  D1                 	db	209
  1785   00DF67  E1                 	db	225
  1786   00DF68  C2                 	db	194
  1787   00DF69  FB                 	db	251
  1788   00DF6A  E9                 	db	233
  1789   00DF6B  C3                 	db	195
  1790   00DF6C  D4                 	db	212
  1791   00DF6D  E9                 	db	233
  1792   00DF6E  11                 	db	17
  1793   00DF6F  CD                 	db	205
  1794   00DF70  EB                 	db	235
  1795   00DF71  CD                 	db	205
  1796   00DF72  DA                 	db	218
  1797   00DF73  E4                 	db	228
  1798   00DF74  3C                 	db	60
  1799   00DF75  C2                 	db	194
  1800   00DF76  01                 	db	1
  1801   00DF77  EA                 	db	234
  1802   00DF78  01                 	db	1
  1803   00DF79  07                 	db	7
  1804   00DF7A  EA                 	db	234
  1805   00DF7B  CD                 	db	205
  1806   00DF7C  A7                 	db	167
  1807   00DF7D  E4                 	db	228
  1808   00DF7E  CD                 	db	205
  1809   00DF7F  D5                 	db	213
  1810   00DF80  E5                 	db	229
  1811   00DF81  C3                 	db	195
  1812   00DF82  86                 	db	134
  1813   00DF83  EB                 	db	235
  1814   00DF84  4E                 	db	78
  1815   00DF85  6F                 	db	111
  1816   00DF86  20                 	db	32
  1817   00DF87  73                 	db	115
  1818   00DF88  70                 	db	112
  1819   00DF89  61                 	db	97
  1820   00DF8A  63                 	db	99
  1821   00DF8B  65                 	db	101
  1822   00DF8C  00                 	db	0
  1823   00DF8D  CD                 	db	205
  1824   00DF8E  5E                 	db	94
  1825   00DF8F  E6                 	db	230
  1826   00DF90  C2                 	db	194
  1827   00DF91  09                 	db	9
  1828   00DF92  E6                 	db	230
  1829   00DF93  3A                 	db	58
  1830   00DF94  F0                 	db	240
  1831   00DF95  EB                 	db	235
  1832   00DF96  F5                 	db	245
  1833   00DF97  CD                 	db	205
  1834   00DF98  54                 	db	84
  1835   00DF99  E8                 	db	232
  1836   00DF9A  CD                 	db	205
  1837   00DF9B  E9                 	db	233
  1838   00DF9C  E4                 	db	228
  1839   00DF9D  C2                 	db	194
  1840   00DF9E  79                 	db	121
  1841   00DF9F  EA                 	db	234
  1842   00DFA0  21                 	db	33
  1843   00DFA1  CD                 	db	205
  1844   00DFA2  EB                 	db	235
  1845   00DFA3  11                 	db	17
  1846   00DFA4  DD                 	db	221
  1847   00DFA5  EB                 	db	235
  1848   00DFA6  06                 	db	6
  1849   00DFA7  10                 	db	16
  1850   00DFA8  CD                 	db	205
  1851   00DFA9  42                 	db	66
  1852   00DFAA  E8                 	db	232
  1853   00DFAB  2A                 	db	42
  1854   00DFAC  88                 	db	136
  1855   00DFAD  E4                 	db	228
  1856   00DFAE  EB                 	db	235
  1857   00DFAF  CD                 	db	205
  1858   00DFB0  4F                 	db	79
  1859   00DFB1  E6                 	db	230
  1860   00DFB2  FE                 	db	254
  1861   00DFB3  3D                 	db	61
  1862   00DFB4  CA                 	db	202
  1863   00DFB5  3F                 	db	63
  1864   00DFB6  EA                 	db	234
  1865   00DFB7  FE                 	db	254
  1866   00DFB8  5F                 	db	95
  1867   00DFB9  C2                 	db	194
  1868   00DFBA  73                 	db	115
  1869   00DFBB  EA                 	db	234
  1870   00DFBC  EB                 	db	235
  1871   00DFBD  23                 	db	35
  1872   00DFBE  22                 	db	34
  1873   00DFBF  88                 	db	136
  1874   00DFC0  E4                 	db	228
  1875   00DFC1  CD                 	db	205
  1876   00DFC2  5E                 	db	94
  1877   00DFC3  E6                 	db	230
  1878   00DFC4  C2                 	db	194
  1879   00DFC5  73                 	db	115
  1880   00DFC6  EA                 	db	234
  1881   00DFC7  F1                 	db	241
  1882   00DFC8  47                 	db	71
  1883   00DFC9  21                 	db	33
  1884   00DFCA  F0                 	db	240
  1885   00DFCB  EB                 	db	235
  1886   00DFCC  7E                 	db	126
  1887   00DFCD  B7                 	db	183
  1888   00DFCE  CA                 	db	202
  1889   00DFCF  59                 	db	89
  1890   00DFD0  EA                 	db	234
  1891   00DFD1  B8                 	db	184
  1892   00DFD2  70                 	db	112
  1893   00DFD3  C2                 	db	194
  1894   00DFD4  73                 	db	115
  1895   00DFD5  EA                 	db	234
  1896   00DFD6  70                 	db	112
  1897   00DFD7  AF                 	db	175
  1898   00DFD8  32                 	db	50
  1899   00DFD9  CD                 	db	205
  1900   00DFDA  EB                 	db	235
  1901   00DFDB  CD                 	db	205
  1902   00DFDC  E9                 	db	233
  1903   00DFDD  E4                 	db	228
  1904   00DFDE  CA                 	db	202
  1905   00DFDF  6D                 	db	109
  1906   00DFE0  EA                 	db	234
  1907   00DFE1  11                 	db	17
  1908   00DFE2  CD                 	db	205
  1909   00DFE3  EB                 	db	235
  1910   00DFE4  CD                 	db	205
  1911   00DFE5  0E                 	db	14
  1912   00DFE6  E5                 	db	229
  1913   00DFE7  C3                 	db	195
  1914   00DFE8  86                 	db	134
  1915   00DFE9  EB                 	db	235
  1916   00DFEA  CD                 	db	205
  1917   00DFEB  EA                 	db	234
  1918   00DFEC  E7                 	db	231
  1919   00DFED  C3                 	db	195
  1920   00DFEE  86                 	db	134
  1921   00DFEF  EB                 	db	235
  1922   00DFF0  CD                 	db	205
  1923   00DFF1  66                 	db	102
  1924   00DFF2  E8                 	db	232
  1925   00DFF3  C3                 	db	195
  1926   00DFF4  09                 	db	9
  1927   00DFF5  E6                 	db	230
  1928   00DFF6  01                 	db	1
  1929   00DFF7  82                 	db	130
  1930   00DFF8  EA                 	db	234
  1931   00DFF9  CD                 	db	205
  1932   00DFFA  A7                 	db	167
  1933   00DFFB  E4                 	db	228
  1934   00DFFC  C3                 	db	195
  1935   00DFFD  86                 	db	134
  1936   00DFFE  EB                 	db	235
  1937   00DFFF  46                 	db	70
  1938   00E000  69                 	db	105
  1939   00E001  6C                 	db	108
  1940   00E002  65                 	db	101
  1941   00E003  20                 	db	32
  1942   00E004  65                 	db	101
  1943   00E005  78                 	db	120
  1944   00E006  69                 	db	105
  1945   00E007  73                 	db	115
  1946   00E008  74                 	db	116
  1947   00E009  73                 	db	115
  1948   00E00A  00                 	db	0
  1949   00E00B  CD                 	db	205
  1950   00E00C  F8                 	db	248
  1951   00E00D  E7                 	db	231
  1952   00E00E  FE                 	db	254
  1953   00E00F  10                 	db	16
  1954   00E010  D2                 	db	210
  1955   00E011  09                 	db	9
  1956   00E012  E6                 	db	230
  1957   00E013  5F                 	db	95
  1958   00E014  3A                 	db	58
  1959   00E015  CE                 	db	206
  1960   00E016  EB                 	db	235
  1961   00E017  FE                 	db	254
  1962   00E018  20                 	db	32
  1963   00E019  CA                 	db	202
  1964   00E01A  09                 	db	9
  1965   00E01B  E6                 	db	230
  1966   00E01C  CD                 	db	205
  1967   00E01D  15                 	db	21
  1968   00E01E  E5                 	db	229
  1969   00E01F  C3                 	db	195
  1970   00E020  89                 	db	137
  1971   00E021  EB                 	db	235
  1972   00E022  CD                 	db	205
  1973   00E023  F5                 	db	245
  1974   00E024  E5                 	db	229
  1975   00E025  3A                 	db	58
  1976   00E026  CE                 	db	206
  1977   00E027  EB                 	db	235
  1978   00E028  FE                 	db	254
  1979   00E029  20                 	db	32
  1980   00E02A  C2                 	db	194
  1981   00E02B  C4                 	db	196
  1982   00E02C  EA                 	db	234
  1983   00E02D  3A                 	db	58
  1984   00E02E  F0                 	db	240
  1985   00E02F  EB                 	db	235
  1986   00E030  B7                 	db	183
  1987   00E031  CA                 	db	202
  1988   00E032  89                 	db	137
  1989   00E033  EB                 	db	235
  1990   00E034  3D                 	db	61
  1991   00E035  32                 	db	50
  1992   00E036  EF                 	db	239
  1993   00E037  EB                 	db	235
  1994   00E038  CD                 	db	205
  1995   00E039  29                 	db	41
  1996   00E03A  E5                 	db	229
  1997   00E03B  CD                 	db	205
  1998   00E03C  BD                 	db	189
  1999   00E03D  E4                 	db	228
  2000   00E03E  C3                 	db	195
  2001   00E03F  89                 	db	137
  2002   00E040  EB                 	db	235
  2003   00E041  11                 	db	17
  2004   00E042  D6                 	db	214
  2005   00E043  EB                 	db	235
  2006   00E044  1A                 	db	26
  2007   00E045  FE                 	db	254
  2008   00E046  20                 	db	32
  2009   00E047  C2                 	db	194
  2010   00E048  09                 	db	9
  2011   00E049  E6                 	db	230
  2012   00E04A  D5                 	db	213
  2013   00E04B  CD                 	db	205
  2014   00E04C  54                 	db	84
  2015   00E04D  E8                 	db	232
  2016   00E04E  D1                 	db	209
  2017   00E04F  21                 	db	33
  2018   00E050  83                 	db	131
  2019   00E051  EB                 	db	235
  2020   00E052  CD                 	db	205
  2021   00E053  40                 	db	64
  2022   00E054  E8                 	db	232
  2023   00E055  CD                 	db	205
  2024   00E056  D0                 	db	208
  2025   00E057  E4                 	db	228
  2026   00E058  CA                 	db	202
  2027   00E059  6B                 	db	107
  2028   00E05A  EB                 	db	235
  2029   00E05B  21                 	db	33
  2030   00E05C  00                 	db	0
  2031   00E05D  01                 	db	1
  2032   00E05E  E5                 	db	229
  2033   00E05F  EB                 	db	235
  2034   00E060  CD                 	db	205
  2035   00E061  D8                 	db	216
  2036   00E062  E5                 	db	229
  2037   00E063  11                 	db	17
  2038   00E064  CD                 	db	205
  2039   00E065  EB                 	db	235
  2040   00E066  CD                 	db	205
  2041   00E067  F9                 	db	249
  2042   00E068  E4                 	db	228
  2043   00E069  C2                 	db	194
  2044   00E06A  01                 	db	1
  2045   00E06B  EB                 	db	235
  2046   00E06C  E1                 	db	225
  2047   00E06D  11                 	db	17
  2048   00E06E  80                 	db	128
  2049   00E06F  00                 	db	0
  2050   00E070  19                 	db	25
  2051   00E071  11                 	db	17
  2052   00E072  00                 	db	0
  2053   00E073  E4                 	db	228
  2054   00E074  7D                 	db	125
  2055   00E075  93                 	db	147
  2056   00E076  7C                 	db	124
  2057   00E077  9A                 	db	154
  2058   00E078  D2                 	db	210
  2059   00E079  71                 	db	113
  2060   00E07A  EB                 	db	235
  2061   00E07B  C3                 	db	195
  2062   00E07C  E1                 	db	225
  2063   00E07D  EA                 	db	234
  2064   00E07E  E1                 	db	225
  2065   00E07F  3D                 	db	61
  2066   00E080  C2                 	db	194
  2067   00E081  71                 	db	113
  2068   00E082  EB                 	db	235
  2069   00E083  CD                 	db	205
  2070   00E084  66                 	db	102
  2071   00E085  E8                 	db	232
  2072   00E086  CD                 	db	205
  2073   00E087  5E                 	db	94
  2074   00E088  E6                 	db	230
  2075   00E089  21                 	db	33
  2076   00E08A  F0                 	db	240
  2077   00E08B  EB                 	db	235
  2078   00E08C  E5                 	db	229
  2079   00E08D  7E                 	db	126
  2080   00E08E  32                 	db	50
  2081   00E08F  CD                 	db	205
  2082   00E090  EB                 	db	235
  2083   00E091  3E                 	db	62
  2084   00E092  10                 	db	16
  2085   00E093  CD                 	db	205
  2086   00E094  60                 	db	96
  2087   00E095  E6                 	db	230
  2088   00E096  E1                 	db	225
  2089   00E097  7E                 	db	126
  2090   00E098  32                 	db	50
  2091   00E099  DD                 	db	221
  2092   00E09A  EB                 	db	235
  2093   00E09B  AF                 	db	175
  2094   00E09C  32                 	db	50
  2095   00E09D  ED                 	db	237
  2096   00E09E  EB                 	db	235
  2097   00E09F  11                 	db	17
  2098   00E0A0  5C                 	db	92
  2099   00E0A1  00                 	db	0
  2100   00E0A2  21                 	db	33
  2101   00E0A3  CD                 	db	205
  2102   00E0A4  EB                 	db	235
  2103   00E0A5  06                 	db	6
  2104   00E0A6  21                 	db	33
  2105   00E0A7  CD                 	db	205
  2106   00E0A8  42                 	db	66
  2107   00E0A9  E8                 	db	232
  2108   00E0AA  21                 	db	33
  2109   00E0AB  08                 	db	8
  2110   00E0AC  E4                 	db	228
  2111   00E0AD  7E                 	db	126
  2112   00E0AE  B7                 	db	183
  2113   00E0AF  CA                 	db	202
  2114   00E0B0  3E                 	db	62
  2115   00E0B1  EB                 	db	235
  2116   00E0B2  FE                 	db	254
  2117   00E0B3  20                 	db	32
  2118   00E0B4  CA                 	db	202
  2119   00E0B5  3E                 	db	62
  2120   00E0B6  EB                 	db	235
  2121   00E0B7  23                 	db	35
  2122   00E0B8  C3                 	db	195
  2123   00E0B9  30                 	db	48
  2124   00E0BA  EB                 	db	235
  2125   00E0BB  06                 	db	6
  2126   00E0BC  00                 	db	0
  2127   00E0BD  11                 	db	17
  2128   00E0BE  81                 	db	129
  2129   00E0BF  00                 	db	0
  2130   00E0C0  7E                 	db	126
  2131   00E0C1  12                 	db	18
  2132   00E0C2  B7                 	db	183
  2133   00E0C3  CA                 	db	202
  2134   00E0C4  4F                 	db	79
  2135   00E0C5  EB                 	db	235
  2136   00E0C6  04                 	db	4
  2137   00E0C7  23                 	db	35
  2138   00E0C8  13                 	db	19
  2139   00E0C9  C3                 	db	195
  2140   00E0CA  43                 	db	67
  2141   00E0CB  EB                 	db	235
  2142   00E0CC  78                 	db	120
  2143   00E0CD  32                 	db	50
  2144   00E0CE  80                 	db	128
  2145   00E0CF  00                 	db	0
  2146   00E0D0  CD                 	db	205
  2147   00E0D1  98                 	db	152
  2148   00E0D2  E4                 	db	228
  2149   00E0D3  CD                 	db	205
  2150   00E0D4  D5                 	db	213
  2151   00E0D5  E5                 	db	229
  2152   00E0D6  CD                 	db	205
  2153   00E0D7  1A                 	db	26
  2154   00E0D8  E5                 	db	229
  2155   00E0D9  CD                 	db	205
  2156   00E0DA  00                 	db	0
  2157   00E0DB  01                 	db	1
  2158   00E0DC  31                 	db	49
  2159   00E0DD  AB                 	db	171
  2160   00E0DE  EB                 	db	235
  2161   00E0DF  CD                 	db	205
  2162   00E0E0  29                 	db	41
  2163   00E0E1  E5                 	db	229
  2164   00E0E2  CD                 	db	205
  2165   00E0E3  BD                 	db	189
  2166   00E0E4  E4                 	db	228
  2167   00E0E5  C3                 	db	195
  2168   00E0E6  82                 	db	130
  2169   00E0E7  E7                 	db	231
  2170   00E0E8  CD                 	db	205
  2171   00E0E9  66                 	db	102
  2172   00E0EA  E8                 	db	232
  2173   00E0EB  C3                 	db	195
  2174   00E0EC  09                 	db	9
  2175   00E0ED  E6                 	db	230
  2176   00E0EE  01                 	db	1
  2177   00E0EF  7A                 	db	122
  2178   00E0F0  EB                 	db	235
  2179   00E0F1  CD                 	db	205
  2180   00E0F2  A7                 	db	167
  2181   00E0F3  E4                 	db	228
  2182   00E0F4  C3                 	db	195
  2183   00E0F5  86                 	db	134
  2184   00E0F6  EB                 	db	235
  2185   00E0F7  42                 	db	66
  2186   00E0F8  61                 	db	97
  2187   00E0F9  64                 	db	100
  2188   00E0FA  20                 	db	32
  2189   00E0FB  6C                 	db	108
  2190   00E0FC  6F                 	db	111
  2191   00E0FD  61                 	db	97
  2192   00E0FE  64                 	db	100
  2193   00E0FF  00                 	db	0
  2194   00E100  43                 	db	67
  2195   00E101  4F                 	db	79
  2196   00E102  4D                 	db	77
  2197   00E103  CD                 	db	205
  2198   00E104  66                 	db	102
  2199   00E105  E8                 	db	232
  2200   00E106  CD                 	db	205
  2201   00E107  5E                 	db	94
  2202   00E108  E6                 	db	230
  2203   00E109  3A                 	db	58
  2204   00E10A  CE                 	db	206
  2205   00E10B  EB                 	db	235
  2206   00E10C  D6                 	db	214
  2207   00E10D  20                 	db	32
  2208   00E10E  21                 	db	33
  2209   00E10F  F0                 	db	240
  2210   00E110  EB                 	db	235
  2211   00E111  B6                 	db	182
  2212   00E112  C2                 	db	194
  2213   00E113  09                 	db	9
  2214   00E114  E6                 	db	230
  2215   00E115  C3                 	db	195
  2216   00E116  82                 	db	130
  2217   00E117  E7                 	db	231
  2218   00E118  00                 	db	0
  2219   00E119  00                 	db	0
  2220   00E11A  00                 	db	0
  2221   00E11B  00                 	db	0
  2222   00E11C  00                 	db	0
  2223   00E11D  00                 	db	0
  2224   00E11E  00                 	db	0
  2225   00E11F  00                 	db	0
  2226   00E120  00                 	db	0
  2227   00E121  00                 	db	0
  2228   00E122  00                 	db	0
  2229   00E123  00                 	db	0
  2230   00E124  00                 	db	0
  2231   00E125  00                 	db	0
  2232   00E126  00                 	db	0
  2233   00E127  00                 	db	0
  2234   00E128  00                 	db	0
  2235   00E129  00                 	db	0
  2236   00E12A  24                 	db	36
  2237   00E12B  24                 	db	36
  2238   00E12C  24                 	db	36
  2239   00E12D  20                 	db	32
  2240   00E12E  20                 	db	32
  2241   00E12F  20                 	db	32
  2242   00E130  20                 	db	32
  2243   00E131  20                 	db	32
  2244   00E132  53                 	db	83
  2245   00E133  55                 	db	85
  2246   00E134  42                 	db	66
  2247   00E135  00                 	db	0
  2248   00E136  00                 	db	0
  2249   00E137  00                 	db	0
  2250   00E138  00                 	db	0
  2251   00E139  00                 	db	0
  2252   00E13A  00                 	db	0
  2253   00E13B  00                 	db	0
  2254   00E13C  00                 	db	0
  2255   00E13D  00                 	db	0
  2256   00E13E  00                 	db	0
  2257   00E13F  00                 	db	0
  2258   00E140  00                 	db	0
  2259   00E141  00                 	db	0
  2260   00E142  00                 	db	0
  2261   00E143  00                 	db	0
  2262   00E144  00                 	db	0
  2263   00E145  00                 	db	0
  2264   00E146  00                 	db	0
  2265   00E147  00                 	db	0
  2266   00E148  00                 	db	0
  2267   00E149  00                 	db	0
  2268   00E14A  00                 	db	0
  2269   00E14B  20                 	db	32
  2270   00E14C  20                 	db	32
  2271   00E14D  20                 	db	32
  2272   00E14E  20                 	db	32
  2273   00E14F  20                 	db	32
  2274   00E150  20                 	db	32
  2275   00E151  20                 	db	32
  2276   00E152  20                 	db	32
  2277   00E153  20                 	db	32
  2278   00E154  20                 	db	32
  2279   00E155  20                 	db	32
  2280   00E156  00                 	db	0
  2281   00E157  00                 	db	0
  2282   00E158  00                 	db	0
  2283   00E159  00                 	db	0
  2284   00E15A  00                 	db	0
  2285   00E15B  20                 	db	32
  2286   00E15C  20                 	db	32
  2287   00E15D  20                 	db	32
  2288   00E15E  20                 	db	32
  2289   00E15F  20                 	db	32
  2290   00E160  20                 	db	32
  2291   00E161  20                 	db	32
  2292   00E162  20                 	db	32
  2293   00E163  20                 	db	32
  2294   00E164  20                 	db	32
  2295   00E165  20                 	db	32
  2296   00E166  00                 	db	0
  2297   00E167  00                 	db	0
  2298   00E168  00                 	db	0
  2299   00E169  00                 	db	0
  2300   00E16A  00                 	db	0
  2301   00E16B  00                 	db	0
  2302   00E16C  00                 	db	0
  2303   00E16D  00                 	db	0
  2304   00E16E  00                 	db	0
  2305   00E16F  00                 	db	0
  2306   00E170  00                 	db	0
  2307   00E171  00                 	db	0
  2308   00E172  00                 	db	0
  2309   00E173  00                 	db	0
  2310   00E174  00                 	db	0
  2311   00E175  00                 	db	0
  2312   00E176  00                 	db	0
  2313   00E177  00                 	db	0
  2314   00E178  00                 	db	0
  2315   00E179  00                 	db	0
  2316   00E17A  00                 	db	0
  2317   00E17B  00                 	db	0
  2318   00E17C  00                 	db	0
  2319   00E17D  00                 	db	0
  2320   00E17E  16                 	db	22
  2321   00E17F  00                 	db	0
  2322   00E180  00                 	db	0
  2323   00E181  00                 	db	0
  2324   00E182  00                 	db	0
  2325   00E183  C3                 	db	195
  2326   00E184  11                 	db	17
  2327   00E185  EC                 	db	236
  2328   00E186  99                 	db	153
  2329   00E187  EC                 	db	236
  2330   00E188  A5                 	db	165
  2331   00E189  EC                 	db	236
  2332   00E18A  AB                 	db	171
  2333   00E18B  EC                 	db	236
  2334   00E18C  B1                 	db	177
  2335   00E18D  EC                 	db	236
  2336   00E18E  EB                 	db	235
  2337   00E18F  22                 	db	34
  2338   00E190  43                 	db	67
  2339   00E191  EF                 	db	239
  2340   00E192  EB                 	db	235
  2341   00E193  7B                 	db	123
  2342   00E194  32                 	db	50
  2343   00E195  D6                 	db	214
  2344   00E196  F9                 	db	249
  2345   00E197  21                 	db	33
  2346   00E198  00                 	db	0
  2347   00E199  00                 	db	0
  2348   00E19A  22                 	db	34
  2349   00E19B  45                 	db	69
  2350   00E19C  EF                 	db	239
  2351   00E19D  39                 	db	57
  2352   00E19E  22                 	db	34
  2353   00E19F  0F                 	db	15
  2354   00E1A0  EF                 	db	239
  2355   00E1A1  31                 	db	49
  2356   00E1A2  41                 	db	65
  2357   00E1A3  EF                 	db	239
  2358   00E1A4  AF                 	db	175
  2359   00E1A5  32                 	db	50
  2360   00E1A6  E0                 	db	224
  2361   00E1A7  F9                 	db	249
  2362   00E1A8  32                 	db	50
  2363   00E1A9  DE                 	db	222
  2364   00E1AA  F9                 	db	249
  2365   00E1AB  21                 	db	33
  2366   00E1AC  74                 	db	116
  2367   00E1AD  F9                 	db	249
  2368   00E1AE  E5                 	db	229
  2369   00E1AF  79                 	db	121
  2370   00E1B0  FE                 	db	254
  2371   00E1B1  29                 	db	41
  2372   00E1B2  D0                 	db	208
  2373   00E1B3  4B                 	db	75
  2374   00E1B4  21                 	db	33
  2375   00E1B5  47                 	db	71
  2376   00E1B6  EC                 	db	236
  2377   00E1B7  5F                 	db	95
  2378   00E1B8  16                 	db	22
  2379   00E1B9  00                 	db	0
  2380   00E1BA  19                 	db	25
  2381   00E1BB  19                 	db	25
  2382   00E1BC  5E                 	db	94
  2383   00E1BD  23                 	db	35
  2384   00E1BE  56                 	db	86
  2385   00E1BF  2A                 	db	42
  2386   00E1C0  43                 	db	67
  2387   00E1C1  EF                 	db	239
  2388   00E1C2  EB                 	db	235
  2389   00E1C3  E9                 	db	233
  2390   00E1C4  03                 	db	3
  2391   00E1C5  FA                 	db	250
  2392   00E1C6  C8                 	db	200
  2393   00E1C7  EE                 	db	238
  2394   00E1C8  90                 	db	144
  2395   00E1C9  ED                 	db	237
  2396   00E1CA  CE                 	db	206
  2397   00E1CB  EE                 	db	238
  2398   00E1CC  12                 	db	18
  2399   00E1CD  FA                 	db	250
  2400   00E1CE  0F                 	db	15
  2401   00E1CF  FA                 	db	250
  2402   00E1D0  D4                 	db	212
  2403   00E1D1  EE                 	db	238
  2404   00E1D2  ED                 	db	237
  2405   00E1D3  EE                 	db	238
  2406   00E1D4  F3                 	db	243
  2407   00E1D5  EE                 	db	238
  2408   00E1D6  F8                 	db	248
  2409   00E1D7  EE                 	db	238
  2410   00E1D8  E1                 	db	225
  2411   00E1D9  ED                 	db	237
  2412   00E1DA  FE                 	db	254
  2413   00E1DB  EE                 	db	238
  2414   00E1DC  7E                 	db	126
  2415   00E1DD  F8                 	db	248
  2416   00E1DE  83                 	db	131
  2417   00E1DF  F8                 	db	248
  2418   00E1E0  45                 	db	69
  2419   00E1E1  F8                 	db	248
  2420   00E1E2  9C                 	db	156
  2421   00E1E3  F8                 	db	248
  2422   00E1E4  A5                 	db	165
  2423   00E1E5  F8                 	db	248
  2424   00E1E6  AB                 	db	171
  2425   00E1E7  F8                 	db	248
  2426   00E1E8  C8                 	db	200
  2427   00E1E9  F8                 	db	248
  2428   00E1EA  D7                 	db	215
  2429   00E1EB  F8                 	db	248
  2430   00E1EC  E0                 	db	224
  2431   00E1ED  F8                 	db	248
  2432   00E1EE  E6                 	db	230
  2433   00E1EF  F8                 	db	248
  2434   00E1F0  EC                 	db	236
  2435   00E1F1  F8                 	db	248
  2436   00E1F2  F5                 	db	245
  2437   00E1F3  F8                 	db	248
  2438   00E1F4  FE                 	db	254
  2439   00E1F5  F8                 	db	248
  2440   00E1F6  04                 	db	4
  2441   00E1F7  F9                 	db	249
  2442   00E1F8  0A                 	db	10
  2443   00E1F9  F9                 	db	249
  2444   00E1FA  11                 	db	17
  2445   00E1FB  F9                 	db	249
  2446   00E1FC  2C                 	db	44
  2447   00E1FD  F1                 	db	241
  2448   00E1FE  17                 	db	23
  2449   00E1FF  F9                 	db	249
  2450   00E200  1D                 	db	29
  2451   00E201  F9                 	db	249
  2452   00E202  26                 	db	38
  2453   00E203  F9                 	db	249
  2454   00E204  2D                 	db	45
  2455   00E205  F9                 	db	249
  2456   00E206  41                 	db	65
  2457   00E207  F9                 	db	249
  2458   00E208  47                 	db	71
  2459   00E209  F9                 	db	249
  2460   00E20A  4D                 	db	77
  2461   00E20B  F9                 	db	249
  2462   00E20C  0E                 	db	14
  2463   00E20D  F8                 	db	248
  2464   00E20E  53                 	db	83
  2465   00E20F  F9                 	db	249
  2466   00E210  04                 	db	4
  2467   00E211  EF                 	db	239
  2468   00E212  04                 	db	4
  2469   00E213  EF                 	db	239
  2470   00E214  9B                 	db	155
  2471   00E215  F9                 	db	249
  2472   00E216  21                 	db	33
  2473   00E217  CA                 	db	202
  2474   00E218  EC                 	db	236
  2475   00E219  CD                 	db	205
  2476   00E21A  E5                 	db	229
  2477   00E21B  EC                 	db	236
  2478   00E21C  FE                 	db	254
  2479   00E21D  03                 	db	3
  2480   00E21E  CA                 	db	202
  2481   00E21F  00                 	db	0
  2482   00E220  00                 	db	0
  2483   00E221  C9                 	db	201
  2484   00E222  21                 	db	33
  2485   00E223  D5                 	db	213
  2486   00E224  EC                 	db	236
  2487   00E225  C3                 	db	195
  2488   00E226  B4                 	db	180
  2489   00E227  EC                 	db	236
  2490   00E228  21                 	db	33
  2491   00E229  E1                 	db	225
  2492   00E22A  EC                 	db	236
  2493   00E22B  C3                 	db	195
  2494   00E22C  B4                 	db	180
  2495   00E22D  EC                 	db	236
  2496   00E22E  21                 	db	33
  2497   00E22F  DC                 	db	220
  2498   00E230  EC                 	db	236
  2499   00E231  CD                 	db	205
  2500   00E232  E5                 	db	229
  2501   00E233  EC                 	db	236
  2502   00E234  C3                 	db	195
  2503   00E235  00                 	db	0
  2504   00E236  00                 	db	0
  2505   00E237  42                 	db	66
  2506   00E238  64                 	db	100
  2507   00E239  6F                 	db	111
  2508   00E23A  73                 	db	115
  2509   00E23B  20                 	db	32
  2510   00E23C  45                 	db	69
  2511   00E23D  72                 	db	114
  2512   00E23E  72                 	db	114
  2513   00E23F  20                 	db	32
  2514   00E240  4F                 	db	79
  2515   00E241  6E                 	db	110
  2516   00E242  20                 	db	32
  2517   00E243  20                 	db	32
  2518   00E244  3A                 	db	58
  2519   00E245  20                 	db	32
  2520   00E246  24                 	db	36
  2521   00E247  42                 	db	66
  2522   00E248  61                 	db	97
  2523   00E249  64                 	db	100
  2524   00E24A  20                 	db	32
  2525   00E24B  53                 	db	83
  2526   00E24C  65                 	db	101
  2527   00E24D  63                 	db	99
  2528   00E24E  74                 	db	116
  2529   00E24F  6F                 	db	111
  2530   00E250  72                 	db	114
  2531   00E251  24                 	db	36
  2532   00E252  53                 	db	83
  2533   00E253  65                 	db	101
  2534   00E254  6C                 	db	108
  2535   00E255  65                 	db	101
  2536   00E256  63                 	db	99
  2537   00E257  74                 	db	116
  2538   00E258  24                 	db	36
  2539   00E259  46                 	db	70
  2540   00E25A  69                 	db	105
  2541   00E25B  6C                 	db	108
  2542   00E25C  65                 	db	101
  2543   00E25D  20                 	db	32
  2544   00E25E  52                 	db	82
  2545   00E25F  2F                 	db	47
  2546   00E260  4F                 	db	79
  2547   00E261  24                 	db	36
  2548   00E262  E5                 	db	229
  2549   00E263  CD                 	db	205
  2550   00E264  C9                 	db	201
  2551   00E265  ED                 	db	237
  2552   00E266  3A                 	db	58
  2553   00E267  42                 	db	66
  2554   00E268  EF                 	db	239
  2555   00E269  C6                 	db	198
  2556   00E26A  41                 	db	65
  2557   00E26B  32                 	db	50
  2558   00E26C  C6                 	db	198
  2559   00E26D  EC                 	db	236
  2560   00E26E  01                 	db	1
  2561   00E26F  BA                 	db	186
  2562   00E270  EC                 	db	236
  2563   00E271  CD                 	db	205
  2564   00E272  D3                 	db	211
  2565   00E273  ED                 	db	237
  2566   00E274  C1                 	db	193
  2567   00E275  CD                 	db	205
  2568   00E276  D3                 	db	211
  2569   00E277  ED                 	db	237
  2570   00E278  21                 	db	33
  2571   00E279  0E                 	db	14
  2572   00E27A  EF                 	db	239
  2573   00E27B  7E                 	db	126
  2574   00E27C  36                 	db	54
  2575   00E27D  00                 	db	0
  2576   00E27E  B7                 	db	183
  2577   00E27F  C0                 	db	192
  2578   00E280  C3                 	db	195
  2579   00E281  09                 	db	9
  2580   00E282  FA                 	db	250
  2581   00E283  CD                 	db	205
  2582   00E284  FB                 	db	251
  2583   00E285  EC                 	db	236
  2584   00E286  CD                 	db	205
  2585   00E287  14                 	db	20
  2586   00E288  ED                 	db	237
  2587   00E289  D8                 	db	216
  2588   00E28A  F5                 	db	245
  2589   00E28B  4F                 	db	79
  2590   00E28C  CD                 	db	205
  2591   00E28D  90                 	db	144
  2592   00E28E  ED                 	db	237
  2593   00E28F  F1                 	db	241
  2594   00E290  C9                 	db	201
  2595   00E291  FE                 	db	254
  2596   00E292  0D                 	db	13
  2597   00E293  C8                 	db	200
  2598   00E294  FE                 	db	254
  2599   00E295  0A                 	db	10
  2600   00E296  C8                 	db	200
  2601   00E297  FE                 	db	254
  2602   00E298  09                 	db	9
  2603   00E299  C8                 	db	200
  2604   00E29A  FE                 	db	254
  2605   00E29B  08                 	db	8
  2606   00E29C  C8                 	db	200
  2607   00E29D  FE                 	db	254
  2608   00E29E  20                 	db	32
  2609   00E29F  C9                 	db	201
  2610   00E2A0  3A                 	db	58
  2611   00E2A1  0E                 	db	14
  2612   00E2A2  EF                 	db	239
  2613   00E2A3  B7                 	db	183
  2614   00E2A4  C2                 	db	194
  2615   00E2A5  45                 	db	69
  2616   00E2A6  ED                 	db	237
  2617   00E2A7  CD                 	db	205
  2618   00E2A8  06                 	db	6
  2619   00E2A9  FA                 	db	250
  2620   00E2AA  E6                 	db	230
  2621   00E2AB  01                 	db	1
  2622   00E2AC  C8                 	db	200
  2623   00E2AD  CD                 	db	205
  2624   00E2AE  09                 	db	9
  2625   00E2AF  FA                 	db	250
  2626   00E2B0  FE                 	db	254
  2627   00E2B1  13                 	db	19
  2628   00E2B2  C2                 	db	194
  2629   00E2B3  42                 	db	66
  2630   00E2B4  ED                 	db	237
  2631   00E2B5  CD                 	db	205
  2632   00E2B6  09                 	db	9
  2633   00E2B7  FA                 	db	250
  2634   00E2B8  FE                 	db	254
  2635   00E2B9  03                 	db	3
  2636   00E2BA  CA                 	db	202
  2637   00E2BB  00                 	db	0
  2638   00E2BC  00                 	db	0
  2639   00E2BD  AF                 	db	175
  2640   00E2BE  C9                 	db	201
  2641   00E2BF  32                 	db	50
  2642   00E2C0  0E                 	db	14
  2643   00E2C1  EF                 	db	239
  2644   00E2C2  3E                 	db	62
  2645   00E2C3  01                 	db	1
  2646   00E2C4  C9                 	db	201
  2647   00E2C5  3A                 	db	58
  2648   00E2C6  0A                 	db	10
  2649   00E2C7  EF                 	db	239
  2650   00E2C8  B7                 	db	183
  2651   00E2C9  C2                 	db	194
  2652   00E2CA  62                 	db	98
  2653   00E2CB  ED                 	db	237
  2654   00E2CC  C5                 	db	197
  2655   00E2CD  CD                 	db	205
  2656   00E2CE  23                 	db	35
  2657   00E2CF  ED                 	db	237
  2658   00E2D0  C1                 	db	193
  2659   00E2D1  C5                 	db	197
  2660   00E2D2  CD                 	db	205
  2661   00E2D3  0C                 	db	12
  2662   00E2D4  FA                 	db	250
  2663   00E2D5  C1                 	db	193
  2664   00E2D6  C5                 	db	197
  2665   00E2D7  3A                 	db	58
  2666   00E2D8  0D                 	db	13
  2667   00E2D9  EF                 	db	239
  2668   00E2DA  B7                 	db	183
  2669   00E2DB  C4                 	db	196
  2670   00E2DC  0F                 	db	15
  2671   00E2DD  FA                 	db	250
  2672   00E2DE  C1                 	db	193
  2673   00E2DF  79                 	db	121
  2674   00E2E0  21                 	db	33
  2675   00E2E1  0C                 	db	12
  2676   00E2E2  EF                 	db	239
  2677   00E2E3  FE                 	db	254
  2678   00E2E4  7F                 	db	127
  2679   00E2E5  C8                 	db	200
  2680   00E2E6  34                 	db	52
  2681   00E2E7  FE                 	db	254
  2682   00E2E8  20                 	db	32
  2683   00E2E9  D0                 	db	208
  2684   00E2EA  35                 	db	53
  2685   00E2EB  7E                 	db	126
  2686   00E2EC  B7                 	db	183
  2687   00E2ED  C8                 	db	200
  2688   00E2EE  79                 	db	121
  2689   00E2EF  FE                 	db	254
  2690   00E2F0  08                 	db	8
  2691   00E2F1  C2                 	db	194
  2692   00E2F2  79                 	db	121
  2693   00E2F3  ED                 	db	237
  2694   00E2F4  35                 	db	53
  2695   00E2F5  C9                 	db	201
  2696   00E2F6  FE                 	db	254
  2697   00E2F7  0A                 	db	10
  2698   00E2F8  C0                 	db	192
  2699   00E2F9  36                 	db	54
  2700   00E2FA  00                 	db	0
  2701   00E2FB  C9                 	db	201
  2702   00E2FC  79                 	db	121
  2703   00E2FD  CD                 	db	205
  2704   00E2FE  14                 	db	20
  2705   00E2FF  ED                 	db	237
  2706   00E300  D2                 	db	210
  2707   00E301  90                 	db	144
  2708   00E302  ED                 	db	237
  2709   00E303  F5                 	db	245
  2710   00E304  0E                 	db	14
  2711   00E305  5E                 	db	94
  2712   00E306  CD                 	db	205
  2713   00E307  48                 	db	72
  2714   00E308  ED                 	db	237
  2715   00E309  F1                 	db	241
  2716   00E30A  F6                 	db	246
  2717   00E30B  40                 	db	64
  2718   00E30C  4F                 	db	79
  2719   00E30D  79                 	db	121
  2720   00E30E  FE                 	db	254
  2721   00E30F  09                 	db	9
  2722   00E310  C2                 	db	194
  2723   00E311  48                 	db	72
  2724   00E312  ED                 	db	237
  2725   00E313  0E                 	db	14
  2726   00E314  20                 	db	32
  2727   00E315  CD                 	db	205
  2728   00E316  48                 	db	72
  2729   00E317  ED                 	db	237
  2730   00E318  3A                 	db	58
  2731   00E319  0C                 	db	12
  2732   00E31A  EF                 	db	239
  2733   00E31B  E6                 	db	230
  2734   00E31C  07                 	db	7
  2735   00E31D  C2                 	db	194
  2736   00E31E  96                 	db	150
  2737   00E31F  ED                 	db	237
  2738   00E320  C9                 	db	201
  2739   00E321  CD                 	db	205
  2740   00E322  AC                 	db	172
  2741   00E323  ED                 	db	237
  2742   00E324  0E                 	db	14
  2743   00E325  20                 	db	32
  2744   00E326  CD                 	db	205
  2745   00E327  0C                 	db	12
  2746   00E328  FA                 	db	250
  2747   00E329  0E                 	db	14
  2748   00E32A  08                 	db	8
  2749   00E32B  C3                 	db	195
  2750   00E32C  0C                 	db	12
  2751   00E32D  FA                 	db	250
  2752   00E32E  0E                 	db	14
  2753   00E32F  23                 	db	35
  2754   00E330  CD                 	db	205
  2755   00E331  48                 	db	72
  2756   00E332  ED                 	db	237
  2757   00E333  CD                 	db	205
  2758   00E334  C9                 	db	201
  2759   00E335  ED                 	db	237
  2760   00E336  3A                 	db	58
  2761   00E337  0C                 	db	12
  2762   00E338  EF                 	db	239
  2763   00E339  21                 	db	33
  2764   00E33A  0B                 	db	11
  2765   00E33B  EF                 	db	239
  2766   00E33C  BE                 	db	190
  2767   00E33D  D0                 	db	208
  2768   00E33E  0E                 	db	14
  2769   00E33F  20                 	db	32
  2770   00E340  CD                 	db	205
  2771   00E341  48                 	db	72
  2772   00E342  ED                 	db	237
  2773   00E343  C3                 	db	195
  2774   00E344  B9                 	db	185
  2775   00E345  ED                 	db	237
  2776   00E346  0E                 	db	14
  2777   00E347  0D                 	db	13
  2778   00E348  CD                 	db	205
  2779   00E349  48                 	db	72
  2780   00E34A  ED                 	db	237
  2781   00E34B  0E                 	db	14
  2782   00E34C  0A                 	db	10
  2783   00E34D  C3                 	db	195
  2784   00E34E  48                 	db	72
  2785   00E34F  ED                 	db	237
  2786   00E350  0A                 	db	10
  2787   00E351  FE                 	db	254
  2788   00E352  24                 	db	36
  2789   00E353  C8                 	db	200
  2790   00E354  03                 	db	3
  2791   00E355  C5                 	db	197
  2792   00E356  4F                 	db	79
  2793   00E357  CD                 	db	205
  2794   00E358  90                 	db	144
  2795   00E359  ED                 	db	237
  2796   00E35A  C1                 	db	193
  2797   00E35B  C3                 	db	195
  2798   00E35C  D3                 	db	211
  2799   00E35D  ED                 	db	237
  2800   00E35E  3A                 	db	58
  2801   00E35F  0C                 	db	12
  2802   00E360  EF                 	db	239
  2803   00E361  32                 	db	50
  2804   00E362  0B                 	db	11
  2805   00E363  EF                 	db	239
  2806   00E364  2A                 	db	42
  2807   00E365  43                 	db	67
  2808   00E366  EF                 	db	239
  2809   00E367  4E                 	db	78
  2810   00E368  23                 	db	35
  2811   00E369  E5                 	db	229
  2812   00E36A  06                 	db	6
  2813   00E36B  00                 	db	0
  2814   00E36C  C5                 	db	197
  2815   00E36D  E5                 	db	229
  2816   00E36E  CD                 	db	205
  2817   00E36F  FB                 	db	251
  2818   00E370  EC                 	db	236
  2819   00E371  E6                 	db	230
  2820   00E372  7F                 	db	127
  2821   00E373  E1                 	db	225
  2822   00E374  C1                 	db	193
  2823   00E375  FE                 	db	254
  2824   00E376  0D                 	db	13
  2825   00E377  CA                 	db	202
  2826   00E378  C1                 	db	193
  2827   00E379  EE                 	db	238
  2828   00E37A  FE                 	db	254
  2829   00E37B  0A                 	db	10
  2830   00E37C  CA                 	db	202
  2831   00E37D  C1                 	db	193
  2832   00E37E  EE                 	db	238
  2833   00E37F  FE                 	db	254
  2834   00E380  08                 	db	8
  2835   00E381  C2                 	db	194
  2836   00E382  16                 	db	22
  2837   00E383  EE                 	db	238
  2838   00E384  78                 	db	120
  2839   00E385  B7                 	db	183
  2840   00E386  CA                 	db	202
  2841   00E387  EF                 	db	239
  2842   00E388  ED                 	db	237
  2843   00E389  05                 	db	5
  2844   00E38A  3A                 	db	58
  2845   00E38B  0C                 	db	12
  2846   00E38C  EF                 	db	239
  2847   00E38D  32                 	db	50
  2848   00E38E  0A                 	db	10
  2849   00E38F  EF                 	db	239
  2850   00E390  C3                 	db	195
  2851   00E391  70                 	db	112
  2852   00E392  EE                 	db	238
  2853   00E393  FE                 	db	254
  2854   00E394  7F                 	db	127
  2855   00E395  C2                 	db	194
  2856   00E396  26                 	db	38
  2857   00E397  EE                 	db	238
  2858   00E398  78                 	db	120
  2859   00E399  B7                 	db	183
  2860   00E39A  CA                 	db	202
  2861   00E39B  EF                 	db	239
  2862   00E39C  ED                 	db	237
  2863   00E39D  7E                 	db	126
  2864   00E39E  05                 	db	5
  2865   00E39F  2B                 	db	43
  2866   00E3A0  C3                 	db	195
  2867   00E3A1  A9                 	db	169
  2868   00E3A2  EE                 	db	238
  2869   00E3A3  FE                 	db	254
  2870   00E3A4  05                 	db	5
  2871   00E3A5  C2                 	db	194
  2872   00E3A6  37                 	db	55
  2873   00E3A7  EE                 	db	238
  2874   00E3A8  C5                 	db	197
  2875   00E3A9  E5                 	db	229
  2876   00E3AA  CD                 	db	205
  2877   00E3AB  C9                 	db	201
  2878   00E3AC  ED                 	db	237
  2879   00E3AD  AF                 	db	175
  2880   00E3AE  32                 	db	50
  2881   00E3AF  0B                 	db	11
  2882   00E3B0  EF                 	db	239
  2883   00E3B1  C3                 	db	195
  2884   00E3B2  F1                 	db	241
  2885   00E3B3  ED                 	db	237
  2886   00E3B4  FE                 	db	254
  2887   00E3B5  10                 	db	16
  2888   00E3B6  C2                 	db	194
  2889   00E3B7  48                 	db	72
  2890   00E3B8  EE                 	db	238
  2891   00E3B9  E5                 	db	229
  2892   00E3BA  21                 	db	33
  2893   00E3BB  0D                 	db	13
  2894   00E3BC  EF                 	db	239
  2895   00E3BD  3E                 	db	62
  2896   00E3BE  01                 	db	1
  2897   00E3BF  96                 	db	150
  2898   00E3C0  77                 	db	119
  2899   00E3C1  E1                 	db	225
  2900   00E3C2  C3                 	db	195
  2901   00E3C3  EF                 	db	239
  2902   00E3C4  ED                 	db	237
  2903   00E3C5  FE                 	db	254
  2904   00E3C6  18                 	db	24
  2905   00E3C7  C2                 	db	194
  2906   00E3C8  5F                 	db	95
  2907   00E3C9  EE                 	db	238
  2908   00E3CA  E1                 	db	225
  2909   00E3CB  3A                 	db	58
  2910   00E3CC  0B                 	db	11
  2911   00E3CD  EF                 	db	239
  2912   00E3CE  21                 	db	33
  2913   00E3CF  0C                 	db	12
  2914   00E3D0  EF                 	db	239
  2915   00E3D1  BE                 	db	190
  2916   00E3D2  D2                 	db	210
  2917   00E3D3  E1                 	db	225
  2918   00E3D4  ED                 	db	237
  2919   00E3D5  35                 	db	53
  2920   00E3D6  CD                 	db	205
  2921   00E3D7  A4                 	db	164
  2922   00E3D8  ED                 	db	237
  2923   00E3D9  C3                 	db	195
  2924   00E3DA  4E                 	db	78
  2925   00E3DB  EE                 	db	238
  2926   00E3DC  FE                 	db	254
  2927   00E3DD  15                 	db	21
  2928   00E3DE  C2                 	db	194
  2929   00E3DF  6B                 	db	107
  2930   00E3E0  EE                 	db	238
  2931   00E3E1  CD                 	db	205
  2932   00E3E2  B1                 	db	177
  2933   00E3E3  ED                 	db	237
  2934   00E3E4  E1                 	db	225
  2935   00E3E5  C3                 	db	195
  2936   00E3E6  E1                 	db	225
  2937   00E3E7  ED                 	db	237
  2938   00E3E8  FE                 	db	254
  2939   00E3E9  12                 	db	18
  2940   00E3EA  C2                 	db	194
  2941   00E3EB  A6                 	db	166
  2942   00E3EC  EE                 	db	238
  2943   00E3ED  C5                 	db	197
  2944   00E3EE  CD                 	db	205
  2945   00E3EF  B1                 	db	177
  2946   00E3F0  ED                 	db	237
  2947   00E3F1  C1                 	db	193
  2948   00E3F2  E1                 	db	225
  2949   00E3F3  E5                 	db	229
  2950   00E3F4  C5                 	db	197
  2951   00E3F5  78                 	db	120
  2952   00E3F6  B7                 	db	183
  2953   00E3F7  CA                 	db	202
  2954   00E3F8  8A                 	db	138
  2955   00E3F9  EE                 	db	238
  2956   00E3FA  23                 	db	35
  2957   00E3FB  4E                 	db	78
  2958   00E3FC  05                 	db	5
  2959   00E3FD  C5                 	db	197
  2960   00E3FE  E5                 	db	229
  2961   00E3FF  CD                 	db	205
  2962   00E400  7F                 	db	127
  2963   00E401  ED                 	db	237
  2964   00E402  E1                 	db	225
  2965   00E403  C1                 	db	193
  2966   00E404  C3                 	db	195
  2967   00E405  78                 	db	120
  2968   00E406  EE                 	db	238
  2969   00E407  E5                 	db	229
  2970   00E408  3A                 	db	58
  2971   00E409  0A                 	db	10
  2972   00E40A  EF                 	db	239
  2973   00E40B  B7                 	db	183
  2974   00E40C  CA                 	db	202
  2975   00E40D  F1                 	db	241
  2976   00E40E  ED                 	db	237
  2977   00E40F  21                 	db	33
  2978   00E410  0C                 	db	12
  2979   00E411  EF                 	db	239
  2980   00E412  96                 	db	150
  2981   00E413  32                 	db	50
  2982   00E414  0A                 	db	10
  2983   00E415  EF                 	db	239
  2984   00E416  CD                 	db	205
  2985   00E417  A4                 	db	164
  2986   00E418  ED                 	db	237
  2987   00E419  21                 	db	33
  2988   00E41A  0A                 	db	10
  2989   00E41B  EF                 	db	239
  2990   00E41C  35                 	db	53
  2991   00E41D  C2                 	db	194
  2992   00E41E  99                 	db	153
  2993   00E41F  EE                 	db	238
  2994   00E420  C3                 	db	195
  2995   00E421  F1                 	db	241
  2996   00E422  ED                 	db	237
  2997   00E423  23                 	db	35
  2998   00E424  77                 	db	119
  2999   00E425  04                 	db	4
  3000   00E426  C5                 	db	197
  3001   00E427  E5                 	db	229
  3002   00E428  4F                 	db	79
  3003   00E429  CD                 	db	205
  3004   00E42A  7F                 	db	127
  3005   00E42B  ED                 	db	237
  3006   00E42C  E1                 	db	225
  3007   00E42D  C1                 	db	193
  3008   00E42E  7E                 	db	126
  3009   00E42F  FE                 	db	254
  3010   00E430  03                 	db	3
  3011   00E431  78                 	db	120
  3012   00E432  C2                 	db	194
  3013   00E433  BD                 	db	189
  3014   00E434  EE                 	db	238
  3015   00E435  FE                 	db	254
  3016   00E436  01                 	db	1
  3017   00E437  CA                 	db	202
  3018   00E438  00                 	db	0
  3019   00E439  00                 	db	0
  3020   00E43A  B9                 	db	185
  3021   00E43B  DA                 	db	218
  3022   00E43C  EF                 	db	239
  3023   00E43D  ED                 	db	237
  3024   00E43E  E1                 	db	225
  3025   00E43F  70                 	db	112
  3026   00E440  0E                 	db	14
  3027   00E441  0D                 	db	13
  3028   00E442  C3                 	db	195
  3029   00E443  48                 	db	72
  3030   00E444  ED                 	db	237
  3031   00E445  CD                 	db	205
  3032   00E446  06                 	db	6
  3033   00E447  ED                 	db	237
  3034   00E448  C3                 	db	195
  3035   00E449  01                 	db	1
  3036   00E44A  EF                 	db	239
  3037   00E44B  CD                 	db	205
  3038   00E44C  15                 	db	21
  3039   00E44D  FA                 	db	250
  3040   00E44E  C3                 	db	195
  3041   00E44F  01                 	db	1
  3042   00E450  EF                 	db	239
  3043   00E451  79                 	db	121
  3044   00E452  3C                 	db	60
  3045   00E453  CA                 	db	202
  3046   00E454  E0                 	db	224
  3047   00E455  EE                 	db	238
  3048   00E456  3C                 	db	60
  3049   00E457  CA                 	db	202
  3050   00E458  06                 	db	6
  3051   00E459  FA                 	db	250
  3052   00E45A  C3                 	db	195
  3053   00E45B  0C                 	db	12
  3054   00E45C  FA                 	db	250
  3055   00E45D  CD                 	db	205
  3056   00E45E  06                 	db	6
  3057   00E45F  FA                 	db	250
  3058   00E460  B7                 	db	183
  3059   00E461  CA                 	db	202
  3060   00E462  91                 	db	145
  3061   00E463  F9                 	db	249
  3062   00E464  CD                 	db	205
  3063   00E465  09                 	db	9
  3064   00E466  FA                 	db	250
  3065   00E467  C3                 	db	195
  3066   00E468  01                 	db	1
  3067   00E469  EF                 	db	239
  3068   00E46A  3A                 	db	58
  3069   00E46B  03                 	db	3
  3070   00E46C  00                 	db	0
  3071   00E46D  C3                 	db	195
  3072   00E46E  01                 	db	1
  3073   00E46F  EF                 	db	239
  3074   00E470  21                 	db	33
  3075   00E471  03                 	db	3
  3076   00E472  00                 	db	0
  3077   00E473  71                 	db	113
  3078   00E474  C9                 	db	201
  3079   00E475  EB                 	db	235
  3080   00E476  4D                 	db	77
  3081   00E477  44                 	db	68
  3082   00E478  C3                 	db	195
  3083   00E479  D3                 	db	211
  3084   00E47A  ED                 	db	237
  3085   00E47B  CD                 	db	205
  3086   00E47C  23                 	db	35
  3087   00E47D  ED                 	db	237
  3088   00E47E  32                 	db	50
  3089   00E47F  45                 	db	69
  3090   00E480  EF                 	db	239
  3091   00E481  C9                 	db	201
  3092   00E482  3E                 	db	62
  3093   00E483  01                 	db	1
  3094   00E484  C3                 	db	195
  3095   00E485  01                 	db	1
  3096   00E486  EF                 	db	239
  3097   00E487  00                 	db	0
  3098   00E488  02                 	db	2
  3099   00E489  00                 	db	0
  3100   00E48A  00                 	db	0
  3101   00E48B  00                 	db	0
  3102   00E48C  00                 	db	0
  3103   00E48D  00                 	db	0
  3104   00E48E  00                 	db	0
  3105   00E48F  00                 	db	0
  3106   00E490  00                 	db	0
  3107   00E491  00                 	db	0
  3108   00E492  00                 	db	0
  3109   00E493  00                 	db	0
  3110   00E494  00                 	db	0
  3111   00E495  00                 	db	0
  3112   00E496  00                 	db	0
  3113   00E497  00                 	db	0
  3114   00E498  00                 	db	0
  3115   00E499  00                 	db	0
  3116   00E49A  00                 	db	0
  3117   00E49B  00                 	db	0
  3118   00E49C  00                 	db	0
  3119   00E49D  00                 	db	0
  3120   00E49E  00                 	db	0
  3121   00E49F  00                 	db	0
  3122   00E4A0  00                 	db	0
  3123   00E4A1  00                 	db	0
  3124   00E4A2  00                 	db	0
  3125   00E4A3  00                 	db	0
  3126   00E4A4  00                 	db	0
  3127   00E4A5  00                 	db	0
  3128   00E4A6  00                 	db	0
  3129   00E4A7  00                 	db	0
  3130   00E4A8  00                 	db	0
  3131   00E4A9  00                 	db	0
  3132   00E4AA  00                 	db	0
  3133   00E4AB  00                 	db	0
  3134   00E4AC  00                 	db	0
  3135   00E4AD  00                 	db	0
  3136   00E4AE  00                 	db	0
  3137   00E4AF  00                 	db	0
  3138   00E4B0  00                 	db	0
  3139   00E4B1  00                 	db	0
  3140   00E4B2  00                 	db	0
  3141   00E4B3  00                 	db	0
  3142   00E4B4  00                 	db	0
  3143   00E4B5  00                 	db	0
  3144   00E4B6  00                 	db	0
  3145   00E4B7  00                 	db	0
  3146   00E4B8  00                 	db	0
  3147   00E4B9  00                 	db	0
  3148   00E4BA  00                 	db	0
  3149   00E4BB  00                 	db	0
  3150   00E4BC  00                 	db	0
  3151   00E4BD  00                 	db	0
  3152   00E4BE  00                 	db	0
  3153   00E4BF  00                 	db	0
  3154   00E4C0  00                 	db	0
  3155   00E4C1  00                 	db	0
  3156   00E4C2  00                 	db	0
  3157   00E4C3  00                 	db	0
  3158   00E4C4  21                 	db	33
  3159   00E4C5  0B                 	db	11
  3160   00E4C6  EC                 	db	236
  3161   00E4C7  5E                 	db	94
  3162   00E4C8  23                 	db	35
  3163   00E4C9  56                 	db	86
  3164   00E4CA  EB                 	db	235
  3165   00E4CB  E9                 	db	233
  3166   00E4CC  0C                 	db	12
  3167   00E4CD  0D                 	db	13
  3168   00E4CE  C8                 	db	200
  3169   00E4CF  1A                 	db	26
  3170   00E4D0  77                 	db	119
  3171   00E4D1  13                 	db	19
  3172   00E4D2  23                 	db	35
  3173   00E4D3  C3                 	db	195
  3174   00E4D4  50                 	db	80
  3175   00E4D5  EF                 	db	239
  3176   00E4D6  3A                 	db	58
  3177   00E4D7  42                 	db	66
  3178   00E4D8  EF                 	db	239
  3179   00E4D9  4F                 	db	79
  3180   00E4DA  CD                 	db	205
  3181   00E4DB  1B                 	db	27
  3182   00E4DC  FA                 	db	250
  3183   00E4DD  7C                 	db	124
  3184   00E4DE  B5                 	db	181
  3185   00E4DF  C8                 	db	200
  3186   00E4E0  5E                 	db	94
  3187   00E4E1  23                 	db	35
  3188   00E4E2  56                 	db	86
  3189   00E4E3  23                 	db	35
  3190   00E4E4  22                 	db	34
  3191   00E4E5  B3                 	db	179
  3192   00E4E6  F9                 	db	249
  3193   00E4E7  23                 	db	35
  3194   00E4E8  23                 	db	35
  3195   00E4E9  22                 	db	34
  3196   00E4EA  B5                 	db	181
  3197   00E4EB  F9                 	db	249
  3198   00E4EC  23                 	db	35
  3199   00E4ED  23                 	db	35
  3200   00E4EE  22                 	db	34
  3201   00E4EF  B7                 	db	183
  3202   00E4F0  F9                 	db	249
  3203   00E4F1  23                 	db	35
  3204   00E4F2  23                 	db	35
  3205   00E4F3  EB                 	db	235
  3206   00E4F4  22                 	db	34
  3207   00E4F5  D0                 	db	208
  3208   00E4F6  F9                 	db	249
  3209   00E4F7  21                 	db	33
  3210   00E4F8  B9                 	db	185
  3211   00E4F9  F9                 	db	249
  3212   00E4FA  0E                 	db	14
  3213   00E4FB  08                 	db	8
  3214   00E4FC  CD                 	db	205
  3215   00E4FD  4F                 	db	79
  3216   00E4FE  EF                 	db	239
  3217   00E4FF  2A                 	db	42
  3218   00E500  BB                 	db	187
  3219   00E501  F9                 	db	249
  3220   00E502  EB                 	db	235
  3221   00E503  21                 	db	33
  3222   00E504  C1                 	db	193
  3223   00E505  F9                 	db	249
  3224   00E506  0E                 	db	14
  3225   00E507  0F                 	db	15
  3226   00E508  CD                 	db	205
  3227   00E509  4F                 	db	79
  3228   00E50A  EF                 	db	239
  3229   00E50B  2A                 	db	42
  3230   00E50C  C6                 	db	198
  3231   00E50D  F9                 	db	249
  3232   00E50E  7C                 	db	124
  3233   00E50F  21                 	db	33
  3234   00E510  DD                 	db	221
  3235   00E511  F9                 	db	249
  3236   00E512  36                 	db	54
  3237   00E513  FF                 	db	255
  3238   00E514  B7                 	db	183
  3239   00E515  CA                 	db	202
  3240   00E516  9D                 	db	157
  3241   00E517  EF                 	db	239
  3242   00E518  36                 	db	54
  3243   00E519  00                 	db	0
  3244   00E51A  3E                 	db	62
  3245   00E51B  FF                 	db	255
  3246   00E51C  B7                 	db	183
  3247   00E51D  C9                 	db	201
  3248   00E51E  CD                 	db	205
  3249   00E51F  18                 	db	24
  3250   00E520  FA                 	db	250
  3251   00E521  AF                 	db	175
  3252   00E522  2A                 	db	42
  3253   00E523  B5                 	db	181
  3254   00E524  F9                 	db	249
  3255   00E525  77                 	db	119
  3256   00E526  23                 	db	35
  3257   00E527  77                 	db	119
  3258   00E528  2A                 	db	42
  3259   00E529  B7                 	db	183
  3260   00E52A  F9                 	db	249
  3261   00E52B  77                 	db	119
  3262   00E52C  23                 	db	35
  3263   00E52D  77                 	db	119
  3264   00E52E  C9                 	db	201
  3265   00E52F  CD                 	db	205
  3266   00E530  27                 	db	39
  3267   00E531  FA                 	db	250
  3268   00E532  C3                 	db	195
  3269   00E533  BB                 	db	187
  3270   00E534  EF                 	db	239
  3271   00E535  CD                 	db	205
  3272   00E536  2A                 	db	42
  3273   00E537  FA                 	db	250
  3274   00E538  B7                 	db	183
  3275   00E539  C8                 	db	200
  3276   00E53A  21                 	db	33
  3277   00E53B  09                 	db	9
  3278   00E53C  EC                 	db	236
  3279   00E53D  C3                 	db	195
  3280   00E53E  4A                 	db	74
  3281   00E53F  EF                 	db	239
  3282   00E540  2A                 	db	42
  3283   00E541  EA                 	db	234
  3284   00E542  F9                 	db	249
  3285   00E543  0E                 	db	14
  3286   00E544  02                 	db	2
  3287   00E545  CD                 	db	205
  3288   00E546  EA                 	db	234
  3289   00E547  F0                 	db	240
  3290   00E548  22                 	db	34
  3291   00E549  E5                 	db	229
  3292   00E54A  F9                 	db	249
  3293   00E54B  22                 	db	34
  3294   00E54C  EC                 	db	236
  3295   00E54D  F9                 	db	249
  3296   00E54E  21                 	db	33
  3297   00E54F  E5                 	db	229
  3298   00E550  F9                 	db	249
  3299   00E551  4E                 	db	78
  3300   00E552  23                 	db	35
  3301   00E553  46                 	db	70
  3302   00E554  2A                 	db	42
  3303   00E555  B7                 	db	183
  3304   00E556  F9                 	db	249
  3305   00E557  5E                 	db	94
  3306   00E558  23                 	db	35
  3307   00E559  56                 	db	86
  3308   00E55A  2A                 	db	42
  3309   00E55B  B5                 	db	181
  3310   00E55C  F9                 	db	249
  3311   00E55D  7E                 	db	126
  3312   00E55E  23                 	db	35
  3313   00E55F  66                 	db	102
  3314   00E560  6F                 	db	111
  3315   00E561  79                 	db	121
  3316   00E562  93                 	db	147
  3317   00E563  78                 	db	120
  3318   00E564  9A                 	db	154
  3319   00E565  D2                 	db	210
  3320   00E566  FA                 	db	250
  3321   00E567  EF                 	db	239
  3322   00E568  E5                 	db	229
  3323   00E569  2A                 	db	42
  3324   00E56A  C1                 	db	193
  3325   00E56B  F9                 	db	249
  3326   00E56C  7B                 	db	123
  3327   00E56D  95                 	db	149
  3328   00E56E  5F                 	db	95
  3329   00E56F  7A                 	db	122
  3330   00E570  9C                 	db	156
  3331   00E571  57                 	db	87
  3332   00E572  E1                 	db	225
  3333   00E573  2B                 	db	43
  3334   00E574  C3                 	db	195
  3335   00E575  E4                 	db	228
  3336   00E576  EF                 	db	239
  3337   00E577  E5                 	db	229
  3338   00E578  2A                 	db	42
  3339   00E579  C1                 	db	193
  3340   00E57A  F9                 	db	249
  3341   00E57B  19                 	db	25
  3342   00E57C  DA                 	db	218
  3343   00E57D  0F                 	db	15
  3344   00E57E  F0                 	db	240
  3345   00E57F  79                 	db	121
  3346   00E580  95                 	db	149
  3347   00E581  78                 	db	120
  3348   00E582  9C                 	db	156
  3349   00E583  DA                 	db	218
  3350   00E584  0F                 	db	15
  3351   00E585  F0                 	db	240
  3352   00E586  EB                 	db	235
  3353   00E587  E1                 	db	225
  3354   00E588  23                 	db	35
  3355   00E589  C3                 	db	195
  3356   00E58A  FA                 	db	250
  3357   00E58B  EF                 	db	239
  3358   00E58C  E1                 	db	225
  3359   00E58D  C5                 	db	197
  3360   00E58E  D5                 	db	213
  3361   00E58F  E5                 	db	229
  3362   00E590  EB                 	db	235
  3363   00E591  2A                 	db	42
  3364   00E592  CE                 	db	206
  3365   00E593  F9                 	db	249
  3366   00E594  19                 	db	25
  3367   00E595  44                 	db	68
  3368   00E596  4D                 	db	77
  3369   00E597  CD                 	db	205
  3370   00E598  1E                 	db	30
  3371   00E599  FA                 	db	250
  3372   00E59A  D1                 	db	209
  3373   00E59B  2A                 	db	42
  3374   00E59C  B5                 	db	181
  3375   00E59D  F9                 	db	249
  3376   00E59E  73                 	db	115
  3377   00E59F  23                 	db	35
  3378   00E5A0  72                 	db	114
  3379   00E5A1  D1                 	db	209
  3380   00E5A2  2A                 	db	42
  3381   00E5A3  B7                 	db	183
  3382   00E5A4  F9                 	db	249
  3383   00E5A5  73                 	db	115
  3384   00E5A6  23                 	db	35
  3385   00E5A7  72                 	db	114
  3386   00E5A8  C1                 	db	193
  3387   00E5A9  79                 	db	121
  3388   00E5AA  93                 	db	147
  3389   00E5AB  4F                 	db	79
  3390   00E5AC  78                 	db	120
  3391   00E5AD  9A                 	db	154
  3392   00E5AE  47                 	db	71
  3393   00E5AF  2A                 	db	42
  3394   00E5B0  D0                 	db	208
  3395   00E5B1  F9                 	db	249
  3396   00E5B2  EB                 	db	235
  3397   00E5B3  CD                 	db	205
  3398   00E5B4  30                 	db	48
  3399   00E5B5  FA                 	db	250
  3400   00E5B6  4D                 	db	77
  3401   00E5B7  44                 	db	68
  3402   00E5B8  C3                 	db	195
  3403   00E5B9  21                 	db	33
  3404   00E5BA  FA                 	db	250
  3405   00E5BB  21                 	db	33
  3406   00E5BC  C3                 	db	195
  3407   00E5BD  F9                 	db	249
  3408   00E5BE  4E                 	db	78
  3409   00E5BF  3A                 	db	58
  3410   00E5C0  E3                 	db	227
  3411   00E5C1  F9                 	db	249
  3412   00E5C2  B7                 	db	183
  3413   00E5C3  1F                 	db	31
  3414   00E5C4  0D                 	db	13
  3415   00E5C5  C2                 	db	194
  3416   00E5C6  45                 	db	69
  3417   00E5C7  F0                 	db	240
  3418   00E5C8  47                 	db	71
  3419   00E5C9  3E                 	db	62
  3420   00E5CA  08                 	db	8
  3421   00E5CB  96                 	db	150
  3422   00E5CC  4F                 	db	79
  3423   00E5CD  3A                 	db	58
  3424   00E5CE  E2                 	db	226
  3425   00E5CF  F9                 	db	249
  3426   00E5D0  0D                 	db	13
  3427   00E5D1  CA                 	db	202
  3428   00E5D2  5C                 	db	92
  3429   00E5D3  F0                 	db	240
  3430   00E5D4  B7                 	db	183
  3431   00E5D5  17                 	db	23
  3432   00E5D6  C3                 	db	195
  3433   00E5D7  53                 	db	83
  3434   00E5D8  F0                 	db	240
  3435   00E5D9  80                 	db	128
  3436   00E5DA  C9                 	db	201
  3437   00E5DB  2A                 	db	42
  3438   00E5DC  43                 	db	67
  3439   00E5DD  EF                 	db	239
  3440   00E5DE  11                 	db	17
  3441   00E5DF  10                 	db	16
  3442   00E5E0  00                 	db	0
  3443   00E5E1  19                 	db	25
  3444   00E5E2  09                 	db	9
  3445   00E5E3  3A                 	db	58
  3446   00E5E4  DD                 	db	221
  3447   00E5E5  F9                 	db	249
  3448   00E5E6  B7                 	db	183
  3449   00E5E7  CA                 	db	202
  3450   00E5E8  71                 	db	113
  3451   00E5E9  F0                 	db	240
  3452   00E5EA  6E                 	db	110
  3453   00E5EB  26                 	db	38
  3454   00E5EC  00                 	db	0
  3455   00E5ED  C9                 	db	201
  3456   00E5EE  09                 	db	9
  3457   00E5EF  5E                 	db	94
  3458   00E5F0  23                 	db	35
  3459   00E5F1  56                 	db	86
  3460   00E5F2  EB                 	db	235
  3461   00E5F3  C9                 	db	201
  3462   00E5F4  CD                 	db	205
  3463   00E5F5  3E                 	db	62
  3464   00E5F6  F0                 	db	240
  3465   00E5F7  4F                 	db	79
  3466   00E5F8  06                 	db	6
  3467   00E5F9  00                 	db	0
  3468   00E5FA  CD                 	db	205
  3469   00E5FB  5E                 	db	94
  3470   00E5FC  F0                 	db	240
  3471   00E5FD  22                 	db	34
  3472   00E5FE  E5                 	db	229
  3473   00E5FF  F9                 	db	249
  3474   00E600  C9                 	db	201
  3475   00E601  2A                 	db	42
  3476   00E602  E5                 	db	229
  3477   00E603  F9                 	db	249
  3478   00E604  7D                 	db	125
  3479   00E605  B4                 	db	180
  3480   00E606  C9                 	db	201
  3481   00E607  3A                 	db	58
  3482   00E608  C3                 	db	195
  3483   00E609  F9                 	db	249
  3484   00E60A  2A                 	db	42
  3485   00E60B  E5                 	db	229
  3486   00E60C  F9                 	db	249
  3487   00E60D  29                 	db	41
  3488   00E60E  3D                 	db	61
  3489   00E60F  C2                 	db	194
  3490   00E610  90                 	db	144
  3491   00E611  F0                 	db	240
  3492   00E612  22                 	db	34
  3493   00E613  E7                 	db	231
  3494   00E614  F9                 	db	249
  3495   00E615  3A                 	db	58
  3496   00E616  C4                 	db	196
  3497   00E617  F9                 	db	249
  3498   00E618  4F                 	db	79
  3499   00E619  3A                 	db	58
  3500   00E61A  E3                 	db	227
  3501   00E61B  F9                 	db	249
  3502   00E61C  A1                 	db	161
  3503   00E61D  B5                 	db	181
  3504   00E61E  6F                 	db	111
  3505   00E61F  22                 	db	34
  3506   00E620  E5                 	db	229
  3507   00E621  F9                 	db	249
  3508   00E622  C9                 	db	201
  3509   00E623  2A                 	db	42
  3510   00E624  43                 	db	67
  3511   00E625  EF                 	db	239
  3512   00E626  11                 	db	17
  3513   00E627  0C                 	db	12
  3514   00E628  00                 	db	0
  3515   00E629  19                 	db	25
  3516   00E62A  C9                 	db	201
  3517   00E62B  2A                 	db	42
  3518   00E62C  43                 	db	67
  3519   00E62D  EF                 	db	239
  3520   00E62E  11                 	db	17
  3521   00E62F  0F                 	db	15
  3522   00E630  00                 	db	0
  3523   00E631  19                 	db	25
  3524   00E632  EB                 	db	235
  3525   00E633  21                 	db	33
  3526   00E634  11                 	db	17
  3527   00E635  00                 	db	0
  3528   00E636  19                 	db	25
  3529   00E637  C9                 	db	201
  3530   00E638  CD                 	db	205
  3531   00E639  AE                 	db	174
  3532   00E63A  F0                 	db	240
  3533   00E63B  7E                 	db	126
  3534   00E63C  32                 	db	50
  3535   00E63D  E3                 	db	227
  3536   00E63E  F9                 	db	249
  3537   00E63F  EB                 	db	235
  3538   00E640  7E                 	db	126
  3539   00E641  32                 	db	50
  3540   00E642  E1                 	db	225
  3541   00E643  F9                 	db	249
  3542   00E644  CD                 	db	205
  3543   00E645  A6                 	db	166
  3544   00E646  F0                 	db	240
  3545   00E647  3A                 	db	58
  3546   00E648  C5                 	db	197
  3547   00E649  F9                 	db	249
  3548   00E64A  A6                 	db	166
  3549   00E64B  32                 	db	50
  3550   00E64C  E2                 	db	226
  3551   00E64D  F9                 	db	249
  3552   00E64E  C9                 	db	201
  3553   00E64F  CD                 	db	205
  3554   00E650  AE                 	db	174
  3555   00E651  F0                 	db	240
  3556   00E652  3A                 	db	58
  3557   00E653  D5                 	db	213
  3558   00E654  F9                 	db	249
  3559   00E655  FE                 	db	254
  3560   00E656  02                 	db	2
  3561   00E657  C2                 	db	194
  3562   00E658  DE                 	db	222
  3563   00E659  F0                 	db	240
  3564   00E65A  AF                 	db	175
  3565   00E65B  4F                 	db	79
  3566   00E65C  3A                 	db	58
  3567   00E65D  E3                 	db	227
  3568   00E65E  F9                 	db	249
  3569   00E65F  81                 	db	129
  3570   00E660  77                 	db	119
  3571   00E661  EB                 	db	235
  3572   00E662  3A                 	db	58
  3573   00E663  E1                 	db	225
  3574   00E664  F9                 	db	249
  3575   00E665  77                 	db	119
  3576   00E666  C9                 	db	201
  3577   00E667  0C                 	db	12
  3578   00E668  0D                 	db	13
  3579   00E669  C8                 	db	200
  3580   00E66A  7C                 	db	124
  3581   00E66B  B7                 	db	183
  3582   00E66C  1F                 	db	31
  3583   00E66D  67                 	db	103
  3584   00E66E  7D                 	db	125
  3585   00E66F  1F                 	db	31
  3586   00E670  6F                 	db	111
  3587   00E671  C3                 	db	195
  3588   00E672  EB                 	db	235
  3589   00E673  F0                 	db	240
  3590   00E674  0E                 	db	14
  3591   00E675  80                 	db	128
  3592   00E676  2A                 	db	42
  3593   00E677  B9                 	db	185
  3594   00E678  F9                 	db	249
  3595   00E679  AF                 	db	175
  3596   00E67A  86                 	db	134
  3597   00E67B  23                 	db	35
  3598   00E67C  0D                 	db	13
  3599   00E67D  C2                 	db	194
  3600   00E67E  FD                 	db	253
  3601   00E67F  F0                 	db	240
  3602   00E680  C9                 	db	201
  3603   00E681  0C                 	db	12
  3604   00E682  0D                 	db	13
  3605   00E683  C8                 	db	200
  3606   00E684  29                 	db	41
  3607   00E685  C3                 	db	195
  3608   00E686  05                 	db	5
  3609   00E687  F1                 	db	241
  3610   00E688  C5                 	db	197
  3611   00E689  3A                 	db	58
  3612   00E68A  42                 	db	66
  3613   00E68B  EF                 	db	239
  3614   00E68C  4F                 	db	79
  3615   00E68D  21                 	db	33
  3616   00E68E  01                 	db	1
  3617   00E68F  00                 	db	0
  3618   00E690  CD                 	db	205
  3619   00E691  04                 	db	4
  3620   00E692  F1                 	db	241
  3621   00E693  C1                 	db	193
  3622   00E694  79                 	db	121
  3623   00E695  B5                 	db	181
  3624   00E696  6F                 	db	111
  3625   00E697  78                 	db	120
  3626   00E698  B4                 	db	180
  3627   00E699  67                 	db	103
  3628   00E69A  C9                 	db	201
  3629   00E69B  2A                 	db	42
  3630   00E69C  AD                 	db	173
  3631   00E69D  F9                 	db	249
  3632   00E69E  3A                 	db	58
  3633   00E69F  42                 	db	66
  3634   00E6A0  EF                 	db	239
  3635   00E6A1  4F                 	db	79
  3636   00E6A2  CD                 	db	205
  3637   00E6A3  EA                 	db	234
  3638   00E6A4  F0                 	db	240
  3639   00E6A5  7D                 	db	125
  3640   00E6A6  E6                 	db	230
  3641   00E6A7  01                 	db	1
  3642   00E6A8  C9                 	db	201
  3643   00E6A9  21                 	db	33
  3644   00E6AA  AD                 	db	173
  3645   00E6AB  F9                 	db	249
  3646   00E6AC  4E                 	db	78
  3647   00E6AD  23                 	db	35
  3648   00E6AE  46                 	db	70
  3649   00E6AF  CD                 	db	205
  3650   00E6B0  0B                 	db	11
  3651   00E6B1  F1                 	db	241
  3652   00E6B2  22                 	db	34
  3653   00E6B3  AD                 	db	173
  3654   00E6B4  F9                 	db	249
  3655   00E6B5  2A                 	db	42
  3656   00E6B6  C8                 	db	200
  3657   00E6B7  F9                 	db	249
  3658   00E6B8  23                 	db	35
  3659   00E6B9  EB                 	db	235
  3660   00E6BA  2A                 	db	42
  3661   00E6BB  B3                 	db	179
  3662   00E6BC  F9                 	db	249
  3663   00E6BD  73                 	db	115
  3664   00E6BE  23                 	db	35
  3665   00E6BF  72                 	db	114
  3666   00E6C0  C9                 	db	201
  3667   00E6C1  CD                 	db	205
  3668   00E6C2  5E                 	db	94
  3669   00E6C3  F1                 	db	241
  3670   00E6C4  11                 	db	17
  3671   00E6C5  09                 	db	9
  3672   00E6C6  00                 	db	0
  3673   00E6C7  19                 	db	25
  3674   00E6C8  7E                 	db	126
  3675   00E6C9  17                 	db	23
  3676   00E6CA  D0                 	db	208
  3677   00E6CB  21                 	db	33
  3678   00E6CC  0F                 	db	15
  3679   00E6CD  EC                 	db	236
  3680   00E6CE  C3                 	db	195
  3681   00E6CF  4A                 	db	74
  3682   00E6D0  EF                 	db	239
  3683   00E6D1  CD                 	db	205
  3684   00E6D2  1E                 	db	30
  3685   00E6D3  F1                 	db	241
  3686   00E6D4  C8                 	db	200
  3687   00E6D5  21                 	db	33
  3688   00E6D6  0D                 	db	13
  3689   00E6D7  EC                 	db	236
  3690   00E6D8  C3                 	db	195
  3691   00E6D9  4A                 	db	74
  3692   00E6DA  EF                 	db	239
  3693   00E6DB  2A                 	db	42
  3694   00E6DC  B9                 	db	185
  3695   00E6DD  F9                 	db	249
  3696   00E6DE  3A                 	db	58
  3697   00E6DF  E9                 	db	233
  3698   00E6E0  F9                 	db	249
  3699   00E6E1  85                 	db	133
  3700   00E6E2  6F                 	db	111
  3701   00E6E3  D0                 	db	208
  3702   00E6E4  24                 	db	36
  3703   00E6E5  C9                 	db	201
  3704   00E6E6  2A                 	db	42
  3705   00E6E7  43                 	db	67
  3706   00E6E8  EF                 	db	239
  3707   00E6E9  11                 	db	17
  3708   00E6EA  0E                 	db	14
  3709   00E6EB  00                 	db	0
  3710   00E6EC  19                 	db	25
  3711   00E6ED  7E                 	db	126
  3712   00E6EE  C9                 	db	201
  3713   00E6EF  CD                 	db	205
  3714   00E6F0  69                 	db	105
  3715   00E6F1  F1                 	db	241
  3716   00E6F2  36                 	db	54
  3717   00E6F3  00                 	db	0
  3718   00E6F4  C9                 	db	201
  3719   00E6F5  CD                 	db	205
  3720   00E6F6  69                 	db	105
  3721   00E6F7  F1                 	db	241
  3722   00E6F8  F6                 	db	246
  3723   00E6F9  80                 	db	128
  3724   00E6FA  77                 	db	119
  3725   00E6FB  C9                 	db	201
  3726   00E6FC  2A                 	db	42
  3727   00E6FD  EA                 	db	234
  3728   00E6FE  F9                 	db	249
  3729   00E6FF  EB                 	db	235
  3730   00E700  2A                 	db	42
  3731   00E701  B3                 	db	179
  3732   00E702  F9                 	db	249
  3733   00E703  7B                 	db	123
  3734   00E704  96                 	db	150
  3735   00E705  23                 	db	35
  3736   00E706  7A                 	db	122
  3737   00E707  9E                 	db	158
  3738   00E708  C9                 	db	201
  3739   00E709  CD                 	db	205
  3740   00E70A  7F                 	db	127
  3741   00E70B  F1                 	db	241
  3742   00E70C  D8                 	db	216
  3743   00E70D  13                 	db	19
  3744   00E70E  72                 	db	114
  3745   00E70F  2B                 	db	43
  3746   00E710  73                 	db	115
  3747   00E711  C9                 	db	201
  3748   00E712  7B                 	db	123
  3749   00E713  95                 	db	149
  3750   00E714  6F                 	db	111
  3751   00E715  7A                 	db	122
  3752   00E716  9C                 	db	156
  3753   00E717  67                 	db	103
  3754   00E718  C9                 	db	201
  3755   00E719  0E                 	db	14
  3756   00E71A  FF                 	db	255
  3757   00E71B  2A                 	db	42
  3758   00E71C  EC                 	db	236
  3759   00E71D  F9                 	db	249
  3760   00E71E  EB                 	db	235
  3761   00E71F  2A                 	db	42
  3762   00E720  CC                 	db	204
  3763   00E721  F9                 	db	249
  3764   00E722  CD                 	db	205
  3765   00E723  95                 	db	149
  3766   00E724  F1                 	db	241
  3767   00E725  D0                 	db	208
  3768   00E726  C5                 	db	197
  3769   00E727  CD                 	db	205
  3770   00E728  F7                 	db	247
  3771   00E729  F0                 	db	240
  3772   00E72A  2A                 	db	42
  3773   00E72B  BD                 	db	189
  3774   00E72C  F9                 	db	249
  3775   00E72D  EB                 	db	235
  3776   00E72E  2A                 	db	42
  3777   00E72F  EC                 	db	236
  3778   00E730  F9                 	db	249
  3779   00E731  19                 	db	25
  3780   00E732  C1                 	db	193
  3781   00E733  0C                 	db	12
  3782   00E734  CA                 	db	202
  3783   00E735  C4                 	db	196
  3784   00E736  F1                 	db	241
  3785   00E737  BE                 	db	190
  3786   00E738  C8                 	db	200
  3787   00E739  CD                 	db	205
  3788   00E73A  7F                 	db	127
  3789   00E73B  F1                 	db	241
  3790   00E73C  D0                 	db	208
  3791   00E73D  CD                 	db	205
  3792   00E73E  2C                 	db	44
  3793   00E73F  F1                 	db	241
  3794   00E740  C9                 	db	201
  3795   00E741  77                 	db	119
  3796   00E742  C9                 	db	201
  3797   00E743  CD                 	db	205
  3798   00E744  9C                 	db	156
  3799   00E745  F1                 	db	241
  3800   00E746  CD                 	db	205
  3801   00E747  E0                 	db	224
  3802   00E748  F1                 	db	241
  3803   00E749  0E                 	db	14
  3804   00E74A  01                 	db	1
  3805   00E74B  CD                 	db	205
  3806   00E74C  B8                 	db	184
  3807   00E74D  EF                 	db	239
  3808   00E74E  C3                 	db	195
  3809   00E74F  DA                 	db	218
  3810   00E750  F1                 	db	241
  3811   00E751  CD                 	db	205
  3812   00E752  E0                 	db	224
  3813   00E753  F1                 	db	241
  3814   00E754  CD                 	db	205
  3815   00E755  B2                 	db	178
  3816   00E756  EF                 	db	239
  3817   00E757  21                 	db	33
  3818   00E758  B1                 	db	177
  3819   00E759  F9                 	db	249
  3820   00E75A  C3                 	db	195
  3821   00E75B  E3                 	db	227
  3822   00E75C  F1                 	db	241
  3823   00E75D  21                 	db	33
  3824   00E75E  B9                 	db	185
  3825   00E75F  F9                 	db	249
  3826   00E760  4E                 	db	78
  3827   00E761  23                 	db	35
  3828   00E762  46                 	db	70
  3829   00E763  C3                 	db	195
  3830   00E764  24                 	db	36
  3831   00E765  FA                 	db	250
  3832   00E766  2A                 	db	42
  3833   00E767  B9                 	db	185
  3834   00E768  F9                 	db	249
  3835   00E769  EB                 	db	235
  3836   00E76A  2A                 	db	42
  3837   00E76B  B1                 	db	177
  3838   00E76C  F9                 	db	249
  3839   00E76D  0E                 	db	14
  3840   00E76E  80                 	db	128
  3841   00E76F  C3                 	db	195
  3842   00E770  4F                 	db	79
  3843   00E771  EF                 	db	239
  3844   00E772  21                 	db	33
  3845   00E773  EA                 	db	234
  3846   00E774  F9                 	db	249
  3847   00E775  7E                 	db	126
  3848   00E776  23                 	db	35
  3849   00E777  BE                 	db	190
  3850   00E778  C0                 	db	192
  3851   00E779  3C                 	db	60
  3852   00E77A  C9                 	db	201
  3853   00E77B  21                 	db	33
  3854   00E77C  FF                 	db	255
  3855   00E77D  FF                 	db	255
  3856   00E77E  22                 	db	34
  3857   00E77F  EA                 	db	234
  3858   00E780  F9                 	db	249
  3859   00E781  C9                 	db	201
  3860   00E782  2A                 	db	42
  3861   00E783  C8                 	db	200
  3862   00E784  F9                 	db	249
  3863   00E785  EB                 	db	235
  3864   00E786  2A                 	db	42
  3865   00E787  EA                 	db	234
  3866   00E788  F9                 	db	249
  3867   00E789  23                 	db	35
  3868   00E78A  22                 	db	34
  3869   00E78B  EA                 	db	234
  3870   00E78C  F9                 	db	249
  3871   00E78D  CD                 	db	205
  3872   00E78E  95                 	db	149
  3873   00E78F  F1                 	db	241
  3874   00E790  D2                 	db	210
  3875   00E791  19                 	db	25
  3876   00E792  F2                 	db	242
  3877   00E793  C3                 	db	195
  3878   00E794  FE                 	db	254
  3879   00E795  F1                 	db	241
  3880   00E796  3A                 	db	58
  3881   00E797  EA                 	db	234
  3882   00E798  F9                 	db	249
  3883   00E799  E6                 	db	230
  3884   00E79A  03                 	db	3
  3885   00E79B  06                 	db	6
  3886   00E79C  05                 	db	5
  3887   00E79D  87                 	db	135
  3888   00E79E  05                 	db	5
  3889   00E79F  C2                 	db	194
  3890   00E7A0  20                 	db	32
  3891   00E7A1  F2                 	db	242
  3892   00E7A2  32                 	db	50
  3893   00E7A3  E9                 	db	233
  3894   00E7A4  F9                 	db	249
  3895   00E7A5  B7                 	db	183
  3896   00E7A6  C0                 	db	192
  3897   00E7A7  C5                 	db	197
  3898   00E7A8  CD                 	db	205
  3899   00E7A9  C3                 	db	195
  3900   00E7AA  EF                 	db	239
  3901   00E7AB  CD                 	db	205
  3902   00E7AC  D4                 	db	212
  3903   00E7AD  F1                 	db	241
  3904   00E7AE  C1                 	db	193
  3905   00E7AF  C3                 	db	195
  3906   00E7B0  9E                 	db	158
  3907   00E7B1  F1                 	db	241
  3908   00E7B2  79                 	db	121
  3909   00E7B3  E6                 	db	230
  3910   00E7B4  07                 	db	7
  3911   00E7B5  3C                 	db	60
  3912   00E7B6  5F                 	db	95
  3913   00E7B7  57                 	db	87
  3914   00E7B8  79                 	db	121
  3915   00E7B9  0F                 	db	15
  3916   00E7BA  0F                 	db	15
  3917   00E7BB  0F                 	db	15
  3918   00E7BC  E6                 	db	230
  3919   00E7BD  1F                 	db	31
  3920   00E7BE  4F                 	db	79
  3921   00E7BF  78                 	db	120
  3922   00E7C0  87                 	db	135
  3923   00E7C1  87                 	db	135
  3924   00E7C2  87                 	db	135
  3925   00E7C3  87                 	db	135
  3926   00E7C4  87                 	db	135
  3927   00E7C5  B1                 	db	177
  3928   00E7C6  4F                 	db	79
  3929   00E7C7  78                 	db	120
  3930   00E7C8  0F                 	db	15
  3931   00E7C9  0F                 	db	15
  3932   00E7CA  0F                 	db	15
  3933   00E7CB  E6                 	db	230
  3934   00E7CC  1F                 	db	31
  3935   00E7CD  47                 	db	71
  3936   00E7CE  2A                 	db	42
  3937   00E7CF  BF                 	db	191
  3938   00E7D0  F9                 	db	249
  3939   00E7D1  09                 	db	9
  3940   00E7D2  7E                 	db	126
  3941   00E7D3  07                 	db	7
  3942   00E7D4  1D                 	db	29
  3943   00E7D5  C2                 	db	194
  3944   00E7D6  56                 	db	86
  3945   00E7D7  F2                 	db	242
  3946   00E7D8  C9                 	db	201
  3947   00E7D9  D5                 	db	213
  3948   00E7DA  CD                 	db	205
  3949   00E7DB  35                 	db	53
  3950   00E7DC  F2                 	db	242
  3951   00E7DD  E6                 	db	230
  3952   00E7DE  FE                 	db	254
  3953   00E7DF  C1                 	db	193
  3954   00E7E0  B1                 	db	177
  3955   00E7E1  0F                 	db	15
  3956   00E7E2  15                 	db	21
  3957   00E7E3  C2                 	db	194
  3958   00E7E4  64                 	db	100
  3959   00E7E5  F2                 	db	242
  3960   00E7E6  77                 	db	119
  3961   00E7E7  C9                 	db	201
  3962   00E7E8  CD                 	db	205
  3963   00E7E9  5E                 	db	94
  3964   00E7EA  F1                 	db	241
  3965   00E7EB  11                 	db	17
  3966   00E7EC  10                 	db	16
  3967   00E7ED  00                 	db	0
  3968   00E7EE  19                 	db	25
  3969   00E7EF  C5                 	db	197
  3970   00E7F0  0E                 	db	14
  3971   00E7F1  11                 	db	17
  3972   00E7F2  D1                 	db	209
  3973   00E7F3  0D                 	db	13
  3974   00E7F4  C8                 	db	200
  3975   00E7F5  D5                 	db	213
  3976   00E7F6  3A                 	db	58
  3977   00E7F7  DD                 	db	221
  3978   00E7F8  F9                 	db	249
  3979   00E7F9  B7                 	db	183
  3980   00E7FA  CA                 	db	202
  3981   00E7FB  88                 	db	136
  3982   00E7FC  F2                 	db	242
  3983   00E7FD  C5                 	db	197
  3984   00E7FE  E5                 	db	229
  3985   00E7FF  4E                 	db	78
  3986   00E800  06                 	db	6
  3987   00E801  00                 	db	0
  3988   00E802  C3                 	db	195
  3989   00E803  8E                 	db	142
  3990   00E804  F2                 	db	242
  3991   00E805  0D                 	db	13
  3992   00E806  C5                 	db	197
  3993   00E807  4E                 	db	78
  3994   00E808  23                 	db	35
  3995   00E809  46                 	db	70
  3996   00E80A  E5                 	db	229
  3997   00E80B  79                 	db	121
  3998   00E80C  B0                 	db	176
  3999   00E80D  CA                 	db	202
  4000   00E80E  9D                 	db	157
  4001   00E80F  F2                 	db	242
  4002   00E810  2A                 	db	42
  4003   00E811  C6                 	db	198
  4004   00E812  F9                 	db	249
  4005   00E813  7D                 	db	125
  4006   00E814  91                 	db	145
  4007   00E815  7C                 	db	124
  4008   00E816  98                 	db	152
  4009   00E817  D4                 	db	212
  4010   00E818  5C                 	db	92
  4011   00E819  F2                 	db	242
  4012   00E81A  E1                 	db	225
  4013   00E81B  23                 	db	35
  4014   00E81C  C1                 	db	193
  4015   00E81D  C3                 	db	195
  4016   00E81E  75                 	db	117
  4017   00E81F  F2                 	db	242
  4018   00E820  2A                 	db	42
  4019   00E821  C6                 	db	198
  4020   00E822  F9                 	db	249
  4021   00E823  0E                 	db	14
  4022   00E824  03                 	db	3
  4023   00E825  CD                 	db	205
  4024   00E826  EA                 	db	234
  4025   00E827  F0                 	db	240
  4026   00E828  23                 	db	35
  4027   00E829  44                 	db	68
  4028   00E82A  4D                 	db	77
  4029   00E82B  2A                 	db	42
  4030   00E82C  BF                 	db	191
  4031   00E82D  F9                 	db	249
  4032   00E82E  36                 	db	54
  4033   00E82F  00                 	db	0
  4034   00E830  23                 	db	35
  4035   00E831  0B                 	db	11
  4036   00E832  78                 	db	120
  4037   00E833  B1                 	db	177
  4038   00E834  C2                 	db	194
  4039   00E835  B1                 	db	177
  4040   00E836  F2                 	db	242
  4041   00E837  2A                 	db	42
  4042   00E838  CA                 	db	202
  4043   00E839  F9                 	db	249
  4044   00E83A  EB                 	db	235
  4045   00E83B  2A                 	db	42
  4046   00E83C  BF                 	db	191
  4047   00E83D  F9                 	db	249
  4048   00E83E  73                 	db	115
  4049   00E83F  23                 	db	35
  4050   00E840  72                 	db	114
  4051   00E841  CD                 	db	205
  4052   00E842  A1                 	db	161
  4053   00E843  EF                 	db	239
  4054   00E844  2A                 	db	42
  4055   00E845  B3                 	db	179
  4056   00E846  F9                 	db	249
  4057   00E847  36                 	db	54
  4058   00E848  03                 	db	3
  4059   00E849  23                 	db	35
  4060   00E84A  36                 	db	54
  4061   00E84B  00                 	db	0
  4062   00E84C  CD                 	db	205
  4063   00E84D  FE                 	db	254
  4064   00E84E  F1                 	db	241
  4065   00E84F  0E                 	db	14
  4066   00E850  FF                 	db	255
  4067   00E851  CD                 	db	205
  4068   00E852  05                 	db	5
  4069   00E853  F2                 	db	242
  4070   00E854  CD                 	db	205
  4071   00E855  F5                 	db	245
  4072   00E856  F1                 	db	241
  4073   00E857  C8                 	db	200
  4074   00E858  CD                 	db	205
  4075   00E859  5E                 	db	94
  4076   00E85A  F1                 	db	241
  4077   00E85B  3E                 	db	62
  4078   00E85C  E5                 	db	229
  4079   00E85D  BE                 	db	190
  4080   00E85E  CA                 	db	202
  4081   00E85F  D2                 	db	210
  4082   00E860  F2                 	db	242
  4083   00E861  3A                 	db	58
  4084   00E862  41                 	db	65
  4085   00E863  EF                 	db	239
  4086   00E864  BE                 	db	190
  4087   00E865  C2                 	db	194
  4088   00E866  F6                 	db	246
  4089   00E867  F2                 	db	242
  4090   00E868  23                 	db	35
  4091   00E869  7E                 	db	126
  4092   00E86A  D6                 	db	214
  4093   00E86B  24                 	db	36
  4094   00E86C  C2                 	db	194
  4095   00E86D  F6                 	db	246
  4096   00E86E  F2                 	db	242
  4097   00E86F  3D                 	db	61
  4098   00E870  32                 	db	50
  4099   00E871  45                 	db	69
  4100   00E872  EF                 	db	239
  4101   00E873  0E                 	db	14
  4102   00E874  01                 	db	1
  4103   00E875  CD                 	db	205
  4104   00E876  6B                 	db	107
  4105   00E877  F2                 	db	242
  4106   00E878  CD                 	db	205
  4107   00E879  8C                 	db	140
  4108   00E87A  F1                 	db	241
  4109   00E87B  C3                 	db	195
  4110   00E87C  D2                 	db	210
  4111   00E87D  F2                 	db	242
  4112   00E87E  3A                 	db	58
  4113   00E87F  D4                 	db	212
  4114   00E880  F9                 	db	249
  4115   00E881  C3                 	db	195
  4116   00E882  01                 	db	1
  4117   00E883  EF                 	db	239
  4118   00E884  C5                 	db	197
  4119   00E885  F5                 	db	245
  4120   00E886  3A                 	db	58
  4121   00E887  C5                 	db	197
  4122   00E888  F9                 	db	249
  4123   00E889  2F                 	db	47
  4124   00E88A  47                 	db	71
  4125   00E88B  79                 	db	121
  4126   00E88C  A0                 	db	160
  4127   00E88D  4F                 	db	79
  4128   00E88E  F1                 	db	241
  4129   00E88F  A0                 	db	160
  4130   00E890  91                 	db	145
  4131   00E891  E6                 	db	230
  4132   00E892  1F                 	db	31
  4133   00E893  C1                 	db	193
  4134   00E894  C9                 	db	201
  4135   00E895  3E                 	db	62
  4136   00E896  FF                 	db	255
  4137   00E897  32                 	db	50
  4138   00E898  D4                 	db	212
  4139   00E899  F9                 	db	249
  4140   00E89A  21                 	db	33
  4141   00E89B  D8                 	db	216
  4142   00E89C  F9                 	db	249
  4143   00E89D  71                 	db	113
  4144   00E89E  2A                 	db	42
  4145   00E89F  43                 	db	67
  4146   00E8A0  EF                 	db	239
  4147   00E8A1  22                 	db	34
  4148   00E8A2  D9                 	db	217
  4149   00E8A3  F9                 	db	249
  4150   00E8A4  CD                 	db	205
  4151   00E8A5  FE                 	db	254
  4152   00E8A6  F1                 	db	241
  4153   00E8A7  CD                 	db	205
  4154   00E8A8  A1                 	db	161
  4155   00E8A9  EF                 	db	239
  4156   00E8AA  0E                 	db	14
  4157   00E8AB  00                 	db	0
  4158   00E8AC  CD                 	db	205
  4159   00E8AD  05                 	db	5
  4160   00E8AE  F2                 	db	242
  4161   00E8AF  CD                 	db	205
  4162   00E8B0  F5                 	db	245
  4163   00E8B1  F1                 	db	241
  4164   00E8B2  CA                 	db	202
  4165   00E8B3  94                 	db	148
  4166   00E8B4  F3                 	db	243
  4167   00E8B5  2A                 	db	42
  4168   00E8B6  D9                 	db	217
  4169   00E8B7  F9                 	db	249
  4170   00E8B8  EB                 	db	235
  4171   00E8B9  1A                 	db	26
  4172   00E8BA  FE                 	db	254
  4173   00E8BB  E5                 	db	229
  4174   00E8BC  CA                 	db	202
  4175   00E8BD  4A                 	db	74
  4176   00E8BE  F3                 	db	243
  4177   00E8BF  D5                 	db	213
  4178   00E8C0  CD                 	db	205
  4179   00E8C1  7F                 	db	127
  4180   00E8C2  F1                 	db	241
  4181   00E8C3  D1                 	db	209
  4182   00E8C4  D2                 	db	210
  4183   00E8C5  94                 	db	148
  4184   00E8C6  F3                 	db	243
  4185   00E8C7  CD                 	db	205
  4186   00E8C8  5E                 	db	94
  4187   00E8C9  F1                 	db	241
  4188   00E8CA  3A                 	db	58
  4189   00E8CB  D8                 	db	216
  4190   00E8CC  F9                 	db	249
  4191   00E8CD  4F                 	db	79
  4192   00E8CE  06                 	db	6
  4193   00E8CF  00                 	db	0
  4194   00E8D0  79                 	db	121
  4195   00E8D1  B7                 	db	183
  4196   00E8D2  CA                 	db	202
  4197   00E8D3  83                 	db	131
  4198   00E8D4  F3                 	db	243
  4199   00E8D5  1A                 	db	26
  4200   00E8D6  FE                 	db	254
  4201   00E8D7  3F                 	db	63
  4202   00E8D8  CA                 	db	202
  4203   00E8D9  7C                 	db	124
  4204   00E8DA  F3                 	db	243
  4205   00E8DB  78                 	db	120
  4206   00E8DC  FE                 	db	254
  4207   00E8DD  0D                 	db	13
  4208   00E8DE  CA                 	db	202
  4209   00E8DF  7C                 	db	124
  4210   00E8E0  F3                 	db	243
  4211   00E8E1  FE                 	db	254
  4212   00E8E2  0C                 	db	12
  4213   00E8E3  1A                 	db	26
  4214   00E8E4  CA                 	db	202
  4215   00E8E5  73                 	db	115
  4216   00E8E6  F3                 	db	243
  4217   00E8E7  96                 	db	150
  4218   00E8E8  E6                 	db	230
  4219   00E8E9  7F                 	db	127
  4220   00E8EA  C2                 	db	194
  4221   00E8EB  2D                 	db	45
  4222   00E8EC  F3                 	db	243
  4223   00E8ED  C3                 	db	195
  4224   00E8EE  7C                 	db	124
  4225   00E8EF  F3                 	db	243
  4226   00E8F0  C5                 	db	197
  4227   00E8F1  4E                 	db	78
  4228   00E8F2  CD                 	db	205
  4229   00E8F3  07                 	db	7
  4230   00E8F4  F3                 	db	243
  4231   00E8F5  C1                 	db	193
  4232   00E8F6  C2                 	db	194
  4233   00E8F7  2D                 	db	45
  4234   00E8F8  F3                 	db	243
  4235   00E8F9  13                 	db	19
  4236   00E8FA  23                 	db	35
  4237   00E8FB  04                 	db	4
  4238   00E8FC  0D                 	db	13
  4239   00E8FD  C3                 	db	195
  4240   00E8FE  53                 	db	83
  4241   00E8FF  F3                 	db	243
  4242   00E900  3A                 	db	58
  4243   00E901  EA                 	db	234
  4244   00E902  F9                 	db	249
  4245   00E903  E6                 	db	230
  4246   00E904  03                 	db	3
  4247   00E905  32                 	db	50
  4248   00E906  45                 	db	69
  4249   00E907  EF                 	db	239
  4250   00E908  21                 	db	33
  4251   00E909  D4                 	db	212
  4252   00E90A  F9                 	db	249
  4253   00E90B  7E                 	db	126
  4254   00E90C  17                 	db	23
  4255   00E90D  D0                 	db	208
  4256   00E90E  AF                 	db	175
  4257   00E90F  77                 	db	119
  4258   00E910  C9                 	db	201
  4259   00E911  CD                 	db	205
  4260   00E912  FE                 	db	254
  4261   00E913  F1                 	db	241
  4262   00E914  3E                 	db	62
  4263   00E915  FF                 	db	255
  4264   00E916  C3                 	db	195
  4265   00E917  01                 	db	1
  4266   00E918  EF                 	db	239
  4267   00E919  CD                 	db	205
  4268   00E91A  54                 	db	84
  4269   00E91B  F1                 	db	241
  4270   00E91C  0E                 	db	14
  4271   00E91D  0C                 	db	12
  4272   00E91E  CD                 	db	205
  4273   00E91F  18                 	db	24
  4274   00E920  F3                 	db	243
  4275   00E921  CD                 	db	205
  4276   00E922  F5                 	db	245
  4277   00E923  F1                 	db	241
  4278   00E924  C8                 	db	200
  4279   00E925  CD                 	db	205
  4280   00E926  44                 	db	68
  4281   00E927  F1                 	db	241
  4282   00E928  CD                 	db	205
  4283   00E929  5E                 	db	94
  4284   00E92A  F1                 	db	241
  4285   00E92B  36                 	db	54
  4286   00E92C  E5                 	db	229
  4287   00E92D  0E                 	db	14
  4288   00E92E  00                 	db	0
  4289   00E92F  CD                 	db	205
  4290   00E930  6B                 	db	107
  4291   00E931  F2                 	db	242
  4292   00E932  CD                 	db	205
  4293   00E933  C6                 	db	198
  4294   00E934  F1                 	db	241
  4295   00E935  CD                 	db	205
  4296   00E936  2D                 	db	45
  4297   00E937  F3                 	db	243
  4298   00E938  C3                 	db	195
  4299   00E939  A4                 	db	164
  4300   00E93A  F3                 	db	243
  4301   00E93B  50                 	db	80
  4302   00E93C  59                 	db	89
  4303   00E93D  79                 	db	121
  4304   00E93E  B0                 	db	176
  4305   00E93F  CA                 	db	202
  4306   00E940  D1                 	db	209
  4307   00E941  F3                 	db	243
  4308   00E942  0B                 	db	11
  4309   00E943  D5                 	db	213
  4310   00E944  C5                 	db	197
  4311   00E945  CD                 	db	205
  4312   00E946  35                 	db	53
  4313   00E947  F2                 	db	242
  4314   00E948  1F                 	db	31
  4315   00E949  D2                 	db	210
  4316   00E94A  EC                 	db	236
  4317   00E94B  F3                 	db	243
  4318   00E94C  C1                 	db	193
  4319   00E94D  D1                 	db	209
  4320   00E94E  2A                 	db	42
  4321   00E94F  C6                 	db	198
  4322   00E950  F9                 	db	249
  4323   00E951  7B                 	db	123
  4324   00E952  95                 	db	149
  4325   00E953  7A                 	db	122
  4326   00E954  9C                 	db	156
  4327   00E955  D2                 	db	210
  4328   00E956  F4                 	db	244
  4329   00E957  F3                 	db	243
  4330   00E958  13                 	db	19
  4331   00E959  C5                 	db	197
  4332   00E95A  D5                 	db	213
  4333   00E95B  42                 	db	66
  4334   00E95C  4B                 	db	75
  4335   00E95D  CD                 	db	205
  4336   00E95E  35                 	db	53
  4337   00E95F  F2                 	db	242
  4338   00E960  1F                 	db	31
  4339   00E961  D2                 	db	210
  4340   00E962  EC                 	db	236
  4341   00E963  F3                 	db	243
  4342   00E964  D1                 	db	209
  4343   00E965  C1                 	db	193
  4344   00E966  C3                 	db	195
  4345   00E967  C0                 	db	192
  4346   00E968  F3                 	db	243
  4347   00E969  17                 	db	23
  4348   00E96A  3C                 	db	60
  4349   00E96B  CD                 	db	205
  4350   00E96C  64                 	db	100
  4351   00E96D  F2                 	db	242
  4352   00E96E  E1                 	db	225
  4353   00E96F  D1                 	db	209
  4354   00E970  C9                 	db	201
  4355   00E971  79                 	db	121
  4356   00E972  B0                 	db	176
  4357   00E973  C2                 	db	194
  4358   00E974  C0                 	db	192
  4359   00E975  F3                 	db	243
  4360   00E976  21                 	db	33
  4361   00E977  00                 	db	0
  4362   00E978  00                 	db	0
  4363   00E979  C9                 	db	201
  4364   00E97A  0E                 	db	14
  4365   00E97B  00                 	db	0
  4366   00E97C  1E                 	db	30
  4367   00E97D  20                 	db	32
  4368   00E97E  D5                 	db	213
  4369   00E97F  06                 	db	6
  4370   00E980  00                 	db	0
  4371   00E981  2A                 	db	42
  4372   00E982  43                 	db	67
  4373   00E983  EF                 	db	239
  4374   00E984  09                 	db	9
  4375   00E985  EB                 	db	235
  4376   00E986  CD                 	db	205
  4377   00E987  5E                 	db	94
  4378   00E988  F1                 	db	241
  4379   00E989  C1                 	db	193
  4380   00E98A  CD                 	db	205
  4381   00E98B  4F                 	db	79
  4382   00E98C  EF                 	db	239
  4383   00E98D  CD                 	db	205
  4384   00E98E  C3                 	db	195
  4385   00E98F  EF                 	db	239
  4386   00E990  C3                 	db	195
  4387   00E991  C6                 	db	198
  4388   00E992  F1                 	db	241
  4389   00E993  CD                 	db	205
  4390   00E994  54                 	db	84
  4391   00E995  F1                 	db	241
  4392   00E996  0E                 	db	14
  4393   00E997  0C                 	db	12
  4394   00E998  CD                 	db	205
  4395   00E999  18                 	db	24
  4396   00E99A  F3                 	db	243
  4397   00E99B  2A                 	db	42
  4398   00E99C  43                 	db	67
  4399   00E99D  EF                 	db	239
  4400   00E99E  7E                 	db	126
  4401   00E99F  11                 	db	17
  4402   00E9A0  10                 	db	16
  4403   00E9A1  00                 	db	0
  4404   00E9A2  19                 	db	25
  4405   00E9A3  77                 	db	119
  4406   00E9A4  CD                 	db	205
  4407   00E9A5  F5                 	db	245
  4408   00E9A6  F1                 	db	241
  4409   00E9A7  C8                 	db	200
  4410   00E9A8  CD                 	db	205
  4411   00E9A9  44                 	db	68
  4412   00E9AA  F1                 	db	241
  4413   00E9AB  0E                 	db	14
  4414   00E9AC  10                 	db	16
  4415   00E9AD  1E                 	db	30
  4416   00E9AE  0C                 	db	12
  4417   00E9AF  CD                 	db	205
  4418   00E9B0  01                 	db	1
  4419   00E9B1  F4                 	db	244
  4420   00E9B2  CD                 	db	205
  4421   00E9B3  2D                 	db	45
  4422   00E9B4  F3                 	db	243
  4423   00E9B5  C3                 	db	195
  4424   00E9B6  27                 	db	39
  4425   00E9B7  F4                 	db	244
  4426   00E9B8  0E                 	db	14
  4427   00E9B9  0C                 	db	12
  4428   00E9BA  CD                 	db	205
  4429   00E9BB  18                 	db	24
  4430   00E9BC  F3                 	db	243
  4431   00E9BD  CD                 	db	205
  4432   00E9BE  F5                 	db	245
  4433   00E9BF  F1                 	db	241
  4434   00E9C0  C8                 	db	200
  4435   00E9C1  0E                 	db	14
  4436   00E9C2  00                 	db	0
  4437   00E9C3  1E                 	db	30
  4438   00E9C4  0C                 	db	12
  4439   00E9C5  CD                 	db	205
  4440   00E9C6  01                 	db	1
  4441   00E9C7  F4                 	db	244
  4442   00E9C8  CD                 	db	205
  4443   00E9C9  2D                 	db	45
  4444   00E9CA  F3                 	db	243
  4445   00E9CB  C3                 	db	195
  4446   00E9CC  40                 	db	64
  4447   00E9CD  F4                 	db	244
  4448   00E9CE  0E                 	db	14
  4449   00E9CF  0F                 	db	15
  4450   00E9D0  CD                 	db	205
  4451   00E9D1  18                 	db	24
  4452   00E9D2  F3                 	db	243
  4453   00E9D3  CD                 	db	205
  4454   00E9D4  F5                 	db	245
  4455   00E9D5  F1                 	db	241
  4456   00E9D6  C8                 	db	200
  4457   00E9D7  CD                 	db	205
  4458   00E9D8  A6                 	db	166
  4459   00E9D9  F0                 	db	240
  4460   00E9DA  7E                 	db	126
  4461   00E9DB  F5                 	db	245
  4462   00E9DC  E5                 	db	229
  4463   00E9DD  CD                 	db	205
  4464   00E9DE  5E                 	db	94
  4465   00E9DF  F1                 	db	241
  4466   00E9E0  EB                 	db	235
  4467   00E9E1  2A                 	db	42
  4468   00E9E2  43                 	db	67
  4469   00E9E3  EF                 	db	239
  4470   00E9E4  0E                 	db	14
  4471   00E9E5  20                 	db	32
  4472   00E9E6  D5                 	db	213
  4473   00E9E7  CD                 	db	205
  4474   00E9E8  4F                 	db	79
  4475   00E9E9  EF                 	db	239
  4476   00E9EA  CD                 	db	205
  4477   00E9EB  78                 	db	120
  4478   00E9EC  F1                 	db	241
  4479   00E9ED  D1                 	db	209
  4480   00E9EE  21                 	db	33
  4481   00E9EF  0C                 	db	12
  4482   00E9F0  00                 	db	0
  4483   00E9F1  19                 	db	25
  4484   00E9F2  4E                 	db	78
  4485   00E9F3  21                 	db	33
  4486   00E9F4  0F                 	db	15
  4487   00E9F5  00                 	db	0
  4488   00E9F6  19                 	db	25
  4489   00E9F7  46                 	db	70
  4490   00E9F8  E1                 	db	225
  4491   00E9F9  F1                 	db	241
  4492   00E9FA  77                 	db	119
  4493   00E9FB  79                 	db	121
  4494   00E9FC  BE                 	db	190
  4495   00E9FD  78                 	db	120
  4496   00E9FE  CA                 	db	202
  4497   00E9FF  8B                 	db	139
  4498   00EA00  F4                 	db	244
  4499   00EA01  3E                 	db	62
  4500   00EA02  00                 	db	0
  4501   00EA03  DA                 	db	218
  4502   00EA04  8B                 	db	139
  4503   00EA05  F4                 	db	244
  4504   00EA06  3E                 	db	62
  4505   00EA07  80                 	db	128
  4506   00EA08  2A                 	db	42
  4507   00EA09  43                 	db	67
  4508   00EA0A  EF                 	db	239
  4509   00EA0B  11                 	db	17
  4510   00EA0C  0F                 	db	15
  4511   00EA0D  00                 	db	0
  4512   00EA0E  19                 	db	25
  4513   00EA0F  77                 	db	119
  4514   00EA10  C9                 	db	201
  4515   00EA11  7E                 	db	126
  4516   00EA12  23                 	db	35
  4517   00EA13  B6                 	db	182
  4518   00EA14  2B                 	db	43
  4519   00EA15  C0                 	db	192
  4520   00EA16  1A                 	db	26
  4521   00EA17  77                 	db	119
  4522   00EA18  13                 	db	19
  4523   00EA19  23                 	db	35
  4524   00EA1A  1A                 	db	26
  4525   00EA1B  77                 	db	119
  4526   00EA1C  1B                 	db	27
  4527   00EA1D  2B                 	db	43
  4528   00EA1E  C9                 	db	201
  4529   00EA1F  AF                 	db	175
  4530   00EA20  32                 	db	50
  4531   00EA21  45                 	db	69
  4532   00EA22  EF                 	db	239
  4533   00EA23  32                 	db	50
  4534   00EA24  EA                 	db	234
  4535   00EA25  F9                 	db	249
  4536   00EA26  32                 	db	50
  4537   00EA27  EB                 	db	235
  4538   00EA28  F9                 	db	249
  4539   00EA29  CD                 	db	205
  4540   00EA2A  1E                 	db	30
  4541   00EA2B  F1                 	db	241
  4542   00EA2C  C0                 	db	192
  4543   00EA2D  CD                 	db	205
  4544   00EA2E  69                 	db	105
  4545   00EA2F  F1                 	db	241
  4546   00EA30  E6                 	db	230
  4547   00EA31  80                 	db	128
  4548   00EA32  C0                 	db	192
  4549   00EA33  0E                 	db	14
  4550   00EA34  0F                 	db	15
  4551   00EA35  CD                 	db	205
  4552   00EA36  18                 	db	24
  4553   00EA37  F3                 	db	243
  4554   00EA38  CD                 	db	205
  4555   00EA39  F5                 	db	245
  4556   00EA3A  F1                 	db	241
  4557   00EA3B  C8                 	db	200
  4558   00EA3C  01                 	db	1
  4559   00EA3D  10                 	db	16
  4560   00EA3E  00                 	db	0
  4561   00EA3F  CD                 	db	205
  4562   00EA40  5E                 	db	94
  4563   00EA41  F1                 	db	241
  4564   00EA42  09                 	db	9
  4565   00EA43  EB                 	db	235
  4566   00EA44  2A                 	db	42
  4567   00EA45  43                 	db	67
  4568   00EA46  EF                 	db	239
  4569   00EA47  09                 	db	9
  4570   00EA48  0E                 	db	14
  4571   00EA49  10                 	db	16
  4572   00EA4A  3A                 	db	58
  4573   00EA4B  DD                 	db	221
  4574   00EA4C  F9                 	db	249
  4575   00EA4D  B7                 	db	183
  4576   00EA4E  CA                 	db	202
  4577   00EA4F  E8                 	db	232
  4578   00EA50  F4                 	db	244
  4579   00EA51  7E                 	db	126
  4580   00EA52  B7                 	db	183
  4581   00EA53  1A                 	db	26
  4582   00EA54  C2                 	db	194
  4583   00EA55  DB                 	db	219
  4584   00EA56  F4                 	db	244
  4585   00EA57  77                 	db	119
  4586   00EA58  B7                 	db	183
  4587   00EA59  C2                 	db	194
  4588   00EA5A  E1                 	db	225
  4589   00EA5B  F4                 	db	244
  4590   00EA5C  7E                 	db	126
  4591   00EA5D  12                 	db	18
  4592   00EA5E  BE                 	db	190
  4593   00EA5F  C2                 	db	194
  4594   00EA60  1F                 	db	31
  4595   00EA61  F5                 	db	245
  4596   00EA62  C3                 	db	195
  4597   00EA63  FD                 	db	253
  4598   00EA64  F4                 	db	244
  4599   00EA65  CD                 	db	205
  4600   00EA66  94                 	db	148
  4601   00EA67  F4                 	db	244
  4602   00EA68  EB                 	db	235
  4603   00EA69  CD                 	db	205
  4604   00EA6A  94                 	db	148
  4605   00EA6B  F4                 	db	244
  4606   00EA6C  EB                 	db	235
  4607   00EA6D  1A                 	db	26
  4608   00EA6E  BE                 	db	190
  4609   00EA6F  C2                 	db	194
  4610   00EA70  1F                 	db	31
  4611   00EA71  F5                 	db	245
  4612   00EA72  13                 	db	19
  4613   00EA73  23                 	db	35
  4614   00EA74  1A                 	db	26
  4615   00EA75  BE                 	db	190
  4616   00EA76  C2                 	db	194
  4617   00EA77  1F                 	db	31
  4618   00EA78  F5                 	db	245
  4619   00EA79  0D                 	db	13
  4620   00EA7A  13                 	db	19
  4621   00EA7B  23                 	db	35
  4622   00EA7C  0D                 	db	13
  4623   00EA7D  C2                 	db	194
  4624   00EA7E  CD                 	db	205
  4625   00EA7F  F4                 	db	244
  4626   00EA80  01                 	db	1
  4627   00EA81  EC                 	db	236
  4628   00EA82  FF                 	db	255
  4629   00EA83  09                 	db	9
  4630   00EA84  EB                 	db	235
  4631   00EA85  09                 	db	9
  4632   00EA86  1A                 	db	26
  4633   00EA87  BE                 	db	190
  4634   00EA88  DA                 	db	218
  4635   00EA89  17                 	db	23
  4636   00EA8A  F5                 	db	245
  4637   00EA8B  77                 	db	119
  4638   00EA8C  01                 	db	1
  4639   00EA8D  03                 	db	3
  4640   00EA8E  00                 	db	0
  4641   00EA8F  09                 	db	9
  4642   00EA90  EB                 	db	235
  4643   00EA91  09                 	db	9
  4644   00EA92  7E                 	db	126
  4645   00EA93  12                 	db	18
  4646   00EA94  3E                 	db	62
  4647   00EA95  FF                 	db	255
  4648   00EA96  32                 	db	50
  4649   00EA97  D2                 	db	210
  4650   00EA98  F9                 	db	249
  4651   00EA99  C3                 	db	195
  4652   00EA9A  10                 	db	16
  4653   00EA9B  F4                 	db	244
  4654   00EA9C  21                 	db	33
  4655   00EA9D  45                 	db	69
  4656   00EA9E  EF                 	db	239
  4657   00EA9F  35                 	db	53
  4658   00EAA0  C9                 	db	201
  4659   00EAA1  CD                 	db	205
  4660   00EAA2  54                 	db	84
  4661   00EAA3  F1                 	db	241
  4662   00EAA4  2A                 	db	42
  4663   00EAA5  43                 	db	67
  4664   00EAA6  EF                 	db	239
  4665   00EAA7  E5                 	db	229
  4666   00EAA8  21                 	db	33
  4667   00EAA9  AC                 	db	172
  4668   00EAAA  F9                 	db	249
  4669   00EAAB  22                 	db	34
  4670   00EAAC  43                 	db	67
  4671   00EAAD  EF                 	db	239
  4672   00EAAE  0E                 	db	14
  4673   00EAAF  01                 	db	1
  4674   00EAB0  CD                 	db	205
  4675   00EAB1  18                 	db	24
  4676   00EAB2  F3                 	db	243
  4677   00EAB3  CD                 	db	205
  4678   00EAB4  F5                 	db	245
  4679   00EAB5  F1                 	db	241
  4680   00EAB6  E1                 	db	225
  4681   00EAB7  22                 	db	34
  4682   00EAB8  43                 	db	67
  4683   00EAB9  EF                 	db	239
  4684   00EABA  C8                 	db	200
  4685   00EABB  EB                 	db	235
  4686   00EABC  21                 	db	33
  4687   00EABD  0F                 	db	15
  4688   00EABE  00                 	db	0
  4689   00EABF  19                 	db	25
  4690   00EAC0  0E                 	db	14
  4691   00EAC1  11                 	db	17
  4692   00EAC2  AF                 	db	175
  4693   00EAC3  77                 	db	119
  4694   00EAC4  23                 	db	35
  4695   00EAC5  0D                 	db	13
  4696   00EAC6  C2                 	db	194
  4697   00EAC7  46                 	db	70
  4698   00EAC8  F5                 	db	245
  4699   00EAC9  21                 	db	33
  4700   00EACA  0D                 	db	13
  4701   00EACB  00                 	db	0
  4702   00EACC  19                 	db	25
  4703   00EACD  77                 	db	119
  4704   00EACE  CD                 	db	205
  4705   00EACF  8C                 	db	140
  4706   00EAD0  F1                 	db	241
  4707   00EAD1  CD                 	db	205
  4708   00EAD2  FD                 	db	253
  4709   00EAD3  F3                 	db	243
  4710   00EAD4  C3                 	db	195
  4711   00EAD5  78                 	db	120
  4712   00EAD6  F1                 	db	241
  4713   00EAD7  AF                 	db	175
  4714   00EAD8  32                 	db	50
  4715   00EAD9  D2                 	db	210
  4716   00EADA  F9                 	db	249
  4717   00EADB  CD                 	db	205
  4718   00EADC  A2                 	db	162
  4719   00EADD  F4                 	db	244
  4720   00EADE  CD                 	db	205
  4721   00EADF  F5                 	db	245
  4722   00EAE0  F1                 	db	241
  4723   00EAE1  C8                 	db	200
  4724   00EAE2  2A                 	db	42
  4725   00EAE3  43                 	db	67
  4726   00EAE4  EF                 	db	239
  4727   00EAE5  01                 	db	1
  4728   00EAE6  0C                 	db	12
  4729   00EAE7  00                 	db	0
  4730   00EAE8  09                 	db	9
  4731   00EAE9  7E                 	db	126
  4732   00EAEA  3C                 	db	60
  4733   00EAEB  E6                 	db	230
  4734   00EAEC  1F                 	db	31
  4735   00EAED  77                 	db	119
  4736   00EAEE  CA                 	db	202
  4737   00EAEF  83                 	db	131
  4738   00EAF0  F5                 	db	245
  4739   00EAF1  47                 	db	71
  4740   00EAF2  3A                 	db	58
  4741   00EAF3  C5                 	db	197
  4742   00EAF4  F9                 	db	249
  4743   00EAF5  A0                 	db	160
  4744   00EAF6  21                 	db	33
  4745   00EAF7  D2                 	db	210
  4746   00EAF8  F9                 	db	249
  4747   00EAF9  A6                 	db	166
  4748   00EAFA  CA                 	db	202
  4749   00EAFB  8E                 	db	142
  4750   00EAFC  F5                 	db	245
  4751   00EAFD  C3                 	db	195
  4752   00EAFE  AC                 	db	172
  4753   00EAFF  F5                 	db	245
  4754   00EB00  01                 	db	1
  4755   00EB01  02                 	db	2
  4756   00EB02  00                 	db	0
  4757   00EB03  09                 	db	9
  4758   00EB04  34                 	db	52
  4759   00EB05  7E                 	db	126
  4760   00EB06  E6                 	db	230
  4761   00EB07  0F                 	db	15
  4762   00EB08  CA                 	db	202
  4763   00EB09  B6                 	db	182
  4764   00EB0A  F5                 	db	245
  4765   00EB0B  0E                 	db	14
  4766   00EB0C  0F                 	db	15
  4767   00EB0D  CD                 	db	205
  4768   00EB0E  18                 	db	24
  4769   00EB0F  F3                 	db	243
  4770   00EB10  CD                 	db	205
  4771   00EB11  F5                 	db	245
  4772   00EB12  F1                 	db	241
  4773   00EB13  C2                 	db	194
  4774   00EB14  AC                 	db	172
  4775   00EB15  F5                 	db	245
  4776   00EB16  3A                 	db	58
  4777   00EB17  D3                 	db	211
  4778   00EB18  F9                 	db	249
  4779   00EB19  3C                 	db	60
  4780   00EB1A  CA                 	db	202
  4781   00EB1B  B6                 	db	182
  4782   00EB1C  F5                 	db	245
  4783   00EB1D  CD                 	db	205
  4784   00EB1E  24                 	db	36
  4785   00EB1F  F5                 	db	245
  4786   00EB20  CD                 	db	205
  4787   00EB21  F5                 	db	245
  4788   00EB22  F1                 	db	241
  4789   00EB23  CA                 	db	202
  4790   00EB24  B6                 	db	182
  4791   00EB25  F5                 	db	245
  4792   00EB26  C3                 	db	195
  4793   00EB27  AF                 	db	175
  4794   00EB28  F5                 	db	245
  4795   00EB29  CD                 	db	205
  4796   00EB2A  5A                 	db	90
  4797   00EB2B  F4                 	db	244
  4798   00EB2C  CD                 	db	205
  4799   00EB2D  BB                 	db	187
  4800   00EB2E  F0                 	db	240
  4801   00EB2F  AF                 	db	175
  4802   00EB30  C3                 	db	195
  4803   00EB31  01                 	db	1
  4804   00EB32  EF                 	db	239
  4805   00EB33  CD                 	db	205
  4806   00EB34  05                 	db	5
  4807   00EB35  EF                 	db	239
  4808   00EB36  C3                 	db	195
  4809   00EB37  78                 	db	120
  4810   00EB38  F1                 	db	241
  4811   00EB39  3E                 	db	62
  4812   00EB3A  01                 	db	1
  4813   00EB3B  32                 	db	50
  4814   00EB3C  D5                 	db	213
  4815   00EB3D  F9                 	db	249
  4816   00EB3E  3E                 	db	62
  4817   00EB3F  FF                 	db	255
  4818   00EB40  32                 	db	50
  4819   00EB41  D3                 	db	211
  4820   00EB42  F9                 	db	249
  4821   00EB43  CD                 	db	205
  4822   00EB44  BB                 	db	187
  4823   00EB45  F0                 	db	240
  4824   00EB46  3A                 	db	58
  4825   00EB47  E3                 	db	227
  4826   00EB48  F9                 	db	249
  4827   00EB49  21                 	db	33
  4828   00EB4A  E1                 	db	225
  4829   00EB4B  F9                 	db	249
  4830   00EB4C  BE                 	db	190
  4831   00EB4D  DA                 	db	218
  4832   00EB4E  E6                 	db	230
  4833   00EB4F  F5                 	db	245
  4834   00EB50  FE                 	db	254
  4835   00EB51  80                 	db	128
  4836   00EB52  C2                 	db	194
  4837   00EB53  FB                 	db	251
  4838   00EB54  F5                 	db	245
  4839   00EB55  CD                 	db	205
  4840   00EB56  5A                 	db	90
  4841   00EB57  F5                 	db	245
  4842   00EB58  AF                 	db	175
  4843   00EB59  32                 	db	50
  4844   00EB5A  E3                 	db	227
  4845   00EB5B  F9                 	db	249
  4846   00EB5C  3A                 	db	58
  4847   00EB5D  45                 	db	69
  4848   00EB5E  EF                 	db	239
  4849   00EB5F  B7                 	db	183
  4850   00EB60  C2                 	db	194
  4851   00EB61  FB                 	db	251
  4852   00EB62  F5                 	db	245
  4853   00EB63  CD                 	db	205
  4854   00EB64  77                 	db	119
  4855   00EB65  F0                 	db	240
  4856   00EB66  CD                 	db	205
  4857   00EB67  84                 	db	132
  4858   00EB68  F0                 	db	240
  4859   00EB69  CA                 	db	202
  4860   00EB6A  FB                 	db	251
  4861   00EB6B  F5                 	db	245
  4862   00EB6C  CD                 	db	205
  4863   00EB6D  8A                 	db	138
  4864   00EB6E  F0                 	db	240
  4865   00EB6F  CD                 	db	205
  4866   00EB70  D1                 	db	209
  4867   00EB71  EF                 	db	239
  4868   00EB72  CD                 	db	205
  4869   00EB73  B2                 	db	178
  4870   00EB74  EF                 	db	239
  4871   00EB75  C3                 	db	195
  4872   00EB76  D2                 	db	210
  4873   00EB77  F0                 	db	240
  4874   00EB78  C3                 	db	195
  4875   00EB79  05                 	db	5
  4876   00EB7A  EF                 	db	239
  4877   00EB7B  3E                 	db	62
  4878   00EB7C  01                 	db	1
  4879   00EB7D  32                 	db	50
  4880   00EB7E  D5                 	db	213
  4881   00EB7F  F9                 	db	249
  4882   00EB80  3E                 	db	62
  4883   00EB81  00                 	db	0
  4884   00EB82  32                 	db	50
  4885   00EB83  D3                 	db	211
  4886   00EB84  F9                 	db	249
  4887   00EB85  CD                 	db	205
  4888   00EB86  54                 	db	84
  4889   00EB87  F1                 	db	241
  4890   00EB88  2A                 	db	42
  4891   00EB89  43                 	db	67
  4892   00EB8A  EF                 	db	239
  4893   00EB8B  CD                 	db	205
  4894   00EB8C  47                 	db	71
  4895   00EB8D  F1                 	db	241
  4896   00EB8E  CD                 	db	205
  4897   00EB8F  BB                 	db	187
  4898   00EB90  F0                 	db	240
  4899   00EB91  3A                 	db	58
  4900   00EB92  E3                 	db	227
  4901   00EB93  F9                 	db	249
  4902   00EB94  FE                 	db	254
  4903   00EB95  80                 	db	128
  4904   00EB96  D2                 	db	210
  4905   00EB97  05                 	db	5
  4906   00EB98  EF                 	db	239
  4907   00EB99  CD                 	db	205
  4908   00EB9A  77                 	db	119
  4909   00EB9B  F0                 	db	240
  4910   00EB9C  CD                 	db	205
  4911   00EB9D  84                 	db	132
  4912   00EB9E  F0                 	db	240
  4913   00EB9F  0E                 	db	14
  4914   00EBA0  00                 	db	0
  4915   00EBA1  C2                 	db	194
  4916   00EBA2  6E                 	db	110
  4917   00EBA3  F6                 	db	246
  4918   00EBA4  CD                 	db	205
  4919   00EBA5  3E                 	db	62
  4920   00EBA6  F0                 	db	240
  4921   00EBA7  32                 	db	50
  4922   00EBA8  D7                 	db	215
  4923   00EBA9  F9                 	db	249
  4924   00EBAA  01                 	db	1
  4925   00EBAB  00                 	db	0
  4926   00EBAC  00                 	db	0
  4927   00EBAD  B7                 	db	183
  4928   00EBAE  CA                 	db	202
  4929   00EBAF  3B                 	db	59
  4930   00EBB0  F6                 	db	246
  4931   00EBB1  4F                 	db	79
  4932   00EBB2  0B                 	db	11
  4933   00EBB3  CD                 	db	205
  4934   00EBB4  5E                 	db	94
  4935   00EBB5  F0                 	db	240
  4936   00EBB6  44                 	db	68
  4937   00EBB7  4D                 	db	77
  4938   00EBB8  CD                 	db	205
  4939   00EBB9  BE                 	db	190
  4940   00EBBA  F3                 	db	243
  4941   00EBBB  7D                 	db	125
  4942   00EBBC  B4                 	db	180
  4943   00EBBD  C2                 	db	194
  4944   00EBBE  48                 	db	72
  4945   00EBBF  F6                 	db	246
  4946   00EBC0  3E                 	db	62
  4947   00EBC1  02                 	db	2
  4948   00EBC2  C3                 	db	195
  4949   00EBC3  01                 	db	1
  4950   00EBC4  EF                 	db	239
  4951   00EBC5  22                 	db	34
  4952   00EBC6  E5                 	db	229
  4953   00EBC7  F9                 	db	249
  4954   00EBC8  EB                 	db	235
  4955   00EBC9  2A                 	db	42
  4956   00EBCA  43                 	db	67
  4957   00EBCB  EF                 	db	239
  4958   00EBCC  01                 	db	1
  4959   00EBCD  10                 	db	16
  4960   00EBCE  00                 	db	0
  4961   00EBCF  09                 	db	9
  4962   00EBD0  3A                 	db	58
  4963   00EBD1  DD                 	db	221
  4964   00EBD2  F9                 	db	249
  4965   00EBD3  B7                 	db	183
  4966   00EBD4  3A                 	db	58
  4967   00EBD5  D7                 	db	215
  4968   00EBD6  F9                 	db	249
  4969   00EBD7  CA                 	db	202
  4970   00EBD8  64                 	db	100
  4971   00EBD9  F6                 	db	246
  4972   00EBDA  CD                 	db	205
  4973   00EBDB  64                 	db	100
  4974   00EBDC  F1                 	db	241
  4975   00EBDD  73                 	db	115
  4976   00EBDE  C3                 	db	195
  4977   00EBDF  6C                 	db	108
  4978   00EBE0  F6                 	db	246
  4979   00EBE1  4F                 	db	79
  4980   00EBE2  06                 	db	6
  4981   00EBE3  00                 	db	0
  4982   00EBE4  09                 	db	9
  4983   00EBE5  09                 	db	9
  4984   00EBE6  73                 	db	115
  4985   00EBE7  23                 	db	35
  4986   00EBE8  72                 	db	114
  4987   00EBE9  0E                 	db	14
  4988   00EBEA  02                 	db	2
  4989   00EBEB  3A                 	db	58
  4990   00EBEC  45                 	db	69
  4991   00EBED  EF                 	db	239
  4992   00EBEE  B7                 	db	183
  4993   00EBEF  C0                 	db	192
  4994   00EBF0  C5                 	db	197
  4995   00EBF1  CD                 	db	205
  4996   00EBF2  8A                 	db	138
  4997   00EBF3  F0                 	db	240
  4998   00EBF4  3A                 	db	58
  4999   00EBF5  D5                 	db	213
  5000   00EBF6  F9                 	db	249
  5001   00EBF7  3D                 	db	61
  5002   00EBF8  3D                 	db	61
  5003   00EBF9  C2                 	db	194
  5004   00EBFA  BB                 	db	187
  5005   00EBFB  F6                 	db	246
  5006   00EBFC  C1                 	db	193
  5007   00EBFD  C5                 	db	197
  5008   00EBFE  79                 	db	121
  5009   00EBFF  3D                 	db	61
  5010   00EC00  3D                 	db	61
  5011   00EC01  C2                 	db	194
  5012   00EC02  BB                 	db	187
  5013   00EC03  F6                 	db	246
  5014   00EC04  E5                 	db	229
  5015   00EC05  2A                 	db	42
  5016   00EC06  B9                 	db	185
  5017   00EC07  F9                 	db	249
  5018   00EC08  57                 	db	87
  5019   00EC09  77                 	db	119
  5020   00EC0A  23                 	db	35
  5021   00EC0B  14                 	db	20
  5022   00EC0C  F2                 	db	242
  5023   00EC0D  8C                 	db	140
  5024   00EC0E  F6                 	db	246
  5025   00EC0F  CD                 	db	205
  5026   00EC10  E0                 	db	224
  5027   00EC11  F1                 	db	241
  5028   00EC12  2A                 	db	42
  5029   00EC13  E7                 	db	231
  5030   00EC14  F9                 	db	249
  5031   00EC15  0E                 	db	14
  5032   00EC16  02                 	db	2
  5033   00EC17  22                 	db	34
  5034   00EC18  E5                 	db	229
  5035   00EC19  F9                 	db	249
  5036   00EC1A  C5                 	db	197
  5037   00EC1B  CD                 	db	205
  5038   00EC1C  D1                 	db	209
  5039   00EC1D  EF                 	db	239
  5040   00EC1E  C1                 	db	193
  5041   00EC1F  CD                 	db	205
  5042   00EC20  B8                 	db	184
  5043   00EC21  EF                 	db	239
  5044   00EC22  2A                 	db	42
  5045   00EC23  E5                 	db	229
  5046   00EC24  F9                 	db	249
  5047   00EC25  0E                 	db	14
  5048   00EC26  00                 	db	0
  5049   00EC27  3A                 	db	58
  5050   00EC28  C4                 	db	196
  5051   00EC29  F9                 	db	249
  5052   00EC2A  47                 	db	71
  5053   00EC2B  A5                 	db	165
  5054   00EC2C  B8                 	db	184
  5055   00EC2D  23                 	db	35
  5056   00EC2E  C2                 	db	194
  5057   00EC2F  9A                 	db	154
  5058   00EC30  F6                 	db	246
  5059   00EC31  E1                 	db	225
  5060   00EC32  22                 	db	34
  5061   00EC33  E5                 	db	229
  5062   00EC34  F9                 	db	249
  5063   00EC35  CD                 	db	205
  5064   00EC36  DA                 	db	218
  5065   00EC37  F1                 	db	241
  5066   00EC38  CD                 	db	205
  5067   00EC39  D1                 	db	209
  5068   00EC3A  EF                 	db	239
  5069   00EC3B  C1                 	db	193
  5070   00EC3C  C5                 	db	197
  5071   00EC3D  CD                 	db	205
  5072   00EC3E  B8                 	db	184
  5073   00EC3F  EF                 	db	239
  5074   00EC40  C1                 	db	193
  5075   00EC41  3A                 	db	58
  5076   00EC42  E3                 	db	227
  5077   00EC43  F9                 	db	249
  5078   00EC44  21                 	db	33
  5079   00EC45  E1                 	db	225
  5080   00EC46  F9                 	db	249
  5081   00EC47  BE                 	db	190
  5082   00EC48  DA                 	db	218
  5083   00EC49  D2                 	db	210
  5084   00EC4A  F6                 	db	246
  5085   00EC4B  77                 	db	119
  5086   00EC4C  34                 	db	52
  5087   00EC4D  0E                 	db	14
  5088   00EC4E  02                 	db	2
  5089   00EC4F  00                 	db	0
  5090   00EC50  00                 	db	0
  5091   00EC51  21                 	db	33
  5092   00EC52  00                 	db	0
  5093   00EC53  00                 	db	0
  5094   00EC54  F5                 	db	245
  5095   00EC55  CD                 	db	205
  5096   00EC56  69                 	db	105
  5097   00EC57  F1                 	db	241
  5098   00EC58  E6                 	db	230
  5099   00EC59  7F                 	db	127
  5100   00EC5A  77                 	db	119
  5101   00EC5B  F1                 	db	241
  5102   00EC5C  FE                 	db	254
  5103   00EC5D  7F                 	db	127
  5104   00EC5E  C2                 	db	194
  5105   00EC5F  00                 	db	0
  5106   00EC60  F7                 	db	247
  5107   00EC61  3A                 	db	58
  5108   00EC62  D5                 	db	213
  5109   00EC63  F9                 	db	249
  5110   00EC64  FE                 	db	254
  5111   00EC65  01                 	db	1
  5112   00EC66  C2                 	db	194
  5113   00EC67  00                 	db	0
  5114   00EC68  F7                 	db	247
  5115   00EC69  CD                 	db	205
  5116   00EC6A  D2                 	db	210
  5117   00EC6B  F0                 	db	240
  5118   00EC6C  CD                 	db	205
  5119   00EC6D  5A                 	db	90
  5120   00EC6E  F5                 	db	245
  5121   00EC6F  21                 	db	33
  5122   00EC70  45                 	db	69
  5123   00EC71  EF                 	db	239
  5124   00EC72  7E                 	db	126
  5125   00EC73  B7                 	db	183
  5126   00EC74  C2                 	db	194
  5127   00EC75  FE                 	db	254
  5128   00EC76  F6                 	db	246
  5129   00EC77  3D                 	db	61
  5130   00EC78  32                 	db	50
  5131   00EC79  E3                 	db	227
  5132   00EC7A  F9                 	db	249
  5133   00EC7B  36                 	db	54
  5134   00EC7C  00                 	db	0
  5135   00EC7D  C3                 	db	195
  5136   00EC7E  D2                 	db	210
  5137   00EC7F  F0                 	db	240
  5138   00EC80  AF                 	db	175
  5139   00EC81  32                 	db	50
  5140   00EC82  D5                 	db	213
  5141   00EC83  F9                 	db	249
  5142   00EC84  C5                 	db	197
  5143   00EC85  2A                 	db	42
  5144   00EC86  43                 	db	67
  5145   00EC87  EF                 	db	239
  5146   00EC88  EB                 	db	235
  5147   00EC89  21                 	db	33
  5148   00EC8A  21                 	db	33
  5149   00EC8B  00                 	db	0
  5150   00EC8C  19                 	db	25
  5151   00EC8D  7E                 	db	126
  5152   00EC8E  E6                 	db	230
  5153   00EC8F  7F                 	db	127
  5154   00EC90  F5                 	db	245
  5155   00EC91  7E                 	db	126
  5156   00EC92  17                 	db	23
  5157   00EC93  23                 	db	35
  5158   00EC94  7E                 	db	126
  5159   00EC95  17                 	db	23
  5160   00EC96  E6                 	db	230
  5161   00EC97  1F                 	db	31
  5162   00EC98  4F                 	db	79
  5163   00EC99  7E                 	db	126
  5164   00EC9A  1F                 	db	31
  5165   00EC9B  1F                 	db	31
  5166   00EC9C  1F                 	db	31
  5167   00EC9D  1F                 	db	31
  5168   00EC9E  E6                 	db	230
  5169   00EC9F  0F                 	db	15
  5170   00ECA0  47                 	db	71
  5171   00ECA1  F1                 	db	241
  5172   00ECA2  23                 	db	35
  5173   00ECA3  6E                 	db	110
  5174   00ECA4  2C                 	db	44
  5175   00ECA5  2D                 	db	45
  5176   00ECA6  2E                 	db	46
  5177   00ECA7  06                 	db	6
  5178   00ECA8  C2                 	db	194
  5179   00ECA9  8B                 	db	139
  5180   00ECAA  F7                 	db	247
  5181   00ECAB  21                 	db	33
  5182   00ECAC  20                 	db	32
  5183   00ECAD  00                 	db	0
  5184   00ECAE  19                 	db	25
  5185   00ECAF  77                 	db	119
  5186   00ECB0  21                 	db	33
  5187   00ECB1  0C                 	db	12
  5188   00ECB2  00                 	db	0
  5189   00ECB3  19                 	db	25
  5190   00ECB4  79                 	db	121
  5191   00ECB5  96                 	db	150
  5192   00ECB6  C2                 	db	194
  5193   00ECB7  47                 	db	71
  5194   00ECB8  F7                 	db	247
  5195   00ECB9  21                 	db	33
  5196   00ECBA  0E                 	db	14
  5197   00ECBB  00                 	db	0
  5198   00ECBC  19                 	db	25
  5199   00ECBD  78                 	db	120
  5200   00ECBE  96                 	db	150
  5201   00ECBF  E6                 	db	230
  5202   00ECC0  7F                 	db	127
  5203   00ECC1  CA                 	db	202
  5204   00ECC2  7F                 	db	127
  5205   00ECC3  F7                 	db	247
  5206   00ECC4  C5                 	db	197
  5207   00ECC5  D5                 	db	213
  5208   00ECC6  CD                 	db	205
  5209   00ECC7  A2                 	db	162
  5210   00ECC8  F4                 	db	244
  5211   00ECC9  D1                 	db	209
  5212   00ECCA  C1                 	db	193
  5213   00ECCB  2E                 	db	46
  5214   00ECCC  03                 	db	3
  5215   00ECCD  3A                 	db	58
  5216   00ECCE  45                 	db	69
  5217   00ECCF  EF                 	db	239
  5218   00ECD0  3C                 	db	60
  5219   00ECD1  CA                 	db	202
  5220   00ECD2  84                 	db	132
  5221   00ECD3  F7                 	db	247
  5222   00ECD4  21                 	db	33
  5223   00ECD5  0C                 	db	12
  5224   00ECD6  00                 	db	0
  5225   00ECD7  19                 	db	25
  5226   00ECD8  71                 	db	113
  5227   00ECD9  21                 	db	33
  5228   00ECDA  0E                 	db	14
  5229   00ECDB  00                 	db	0
  5230   00ECDC  19                 	db	25
  5231   00ECDD  70                 	db	112
  5232   00ECDE  CD                 	db	205
  5233   00ECDF  51                 	db	81
  5234   00ECE0  F4                 	db	244
  5235   00ECE1  3A                 	db	58
  5236   00ECE2  45                 	db	69
  5237   00ECE3  EF                 	db	239
  5238   00ECE4  3C                 	db	60
  5239   00ECE5  C2                 	db	194
  5240   00ECE6  7F                 	db	127
  5241   00ECE7  F7                 	db	247
  5242   00ECE8  C1                 	db	193
  5243   00ECE9  C5                 	db	197
  5244   00ECEA  2E                 	db	46
  5245   00ECEB  04                 	db	4
  5246   00ECEC  0C                 	db	12
  5247   00ECED  CA                 	db	202
  5248   00ECEE  84                 	db	132
  5249   00ECEF  F7                 	db	247
  5250   00ECF0  CD                 	db	205
  5251   00ECF1  24                 	db	36
  5252   00ECF2  F5                 	db	245
  5253   00ECF3  2E                 	db	46
  5254   00ECF4  05                 	db	5
  5255   00ECF5  3A                 	db	58
  5256   00ECF6  45                 	db	69
  5257   00ECF7  EF                 	db	239
  5258   00ECF8  3C                 	db	60
  5259   00ECF9  CA                 	db	202
  5260   00ECFA  84                 	db	132
  5261   00ECFB  F7                 	db	247
  5262   00ECFC  C1                 	db	193
  5263   00ECFD  AF                 	db	175
  5264   00ECFE  C3                 	db	195
  5265   00ECFF  01                 	db	1
  5266   00ED00  EF                 	db	239
  5267   00ED01  E5                 	db	229
  5268   00ED02  CD                 	db	205
  5269   00ED03  69                 	db	105
  5270   00ED04  F1                 	db	241
  5271   00ED05  36                 	db	54
  5272   00ED06  C0                 	db	192
  5273   00ED07  E1                 	db	225
  5274   00ED08  C1                 	db	193
  5275   00ED09  7D                 	db	125
  5276   00ED0A  32                 	db	50
  5277   00ED0B  45                 	db	69
  5278   00ED0C  EF                 	db	239
  5279   00ED0D  C3                 	db	195
  5280   00ED0E  78                 	db	120
  5281   00ED0F  F1                 	db	241
  5282   00ED10  0E                 	db	14
  5283   00ED11  FF                 	db	255
  5284   00ED12  CD                 	db	205
  5285   00ED13  03                 	db	3
  5286   00ED14  F7                 	db	247
  5287   00ED15  CC                 	db	204
  5288   00ED16  C1                 	db	193
  5289   00ED17  F5                 	db	245
  5290   00ED18  C9                 	db	201
  5291   00ED19  0E                 	db	14
  5292   00ED1A  00                 	db	0
  5293   00ED1B  CD                 	db	205
  5294   00ED1C  03                 	db	3
  5295   00ED1D  F7                 	db	247
  5296   00ED1E  CC                 	db	204
  5297   00ED1F  03                 	db	3
  5298   00ED20  F6                 	db	246
  5299   00ED21  C9                 	db	201
  5300   00ED22  EB                 	db	235
  5301   00ED23  19                 	db	25
  5302   00ED24  4E                 	db	78
  5303   00ED25  06                 	db	6
  5304   00ED26  00                 	db	0
  5305   00ED27  21                 	db	33
  5306   00ED28  0C                 	db	12
  5307   00ED29  00                 	db	0
  5308   00ED2A  19                 	db	25
  5309   00ED2B  7E                 	db	126
  5310   00ED2C  0F                 	db	15
  5311   00ED2D  E6                 	db	230
  5312   00ED2E  80                 	db	128
  5313   00ED2F  81                 	db	129
  5314   00ED30  4F                 	db	79
  5315   00ED31  3E                 	db	62
  5316   00ED32  00                 	db	0
  5317   00ED33  88                 	db	136
  5318   00ED34  47                 	db	71
  5319   00ED35  7E                 	db	126
  5320   00ED36  0F                 	db	15
  5321   00ED37  E6                 	db	230
  5322   00ED38  0F                 	db	15
  5323   00ED39  80                 	db	128
  5324   00ED3A  47                 	db	71
  5325   00ED3B  21                 	db	33
  5326   00ED3C  0E                 	db	14
  5327   00ED3D  00                 	db	0
  5328   00ED3E  19                 	db	25
  5329   00ED3F  7E                 	db	126
  5330   00ED40  87                 	db	135
  5331   00ED41  87                 	db	135
  5332   00ED42  87                 	db	135
  5333   00ED43  87                 	db	135
  5334   00ED44  F5                 	db	245
  5335   00ED45  80                 	db	128
  5336   00ED46  47                 	db	71
  5337   00ED47  F5                 	db	245
  5338   00ED48  E1                 	db	225
  5339   00ED49  7D                 	db	125
  5340   00ED4A  E1                 	db	225
  5341   00ED4B  B5                 	db	181
  5342   00ED4C  E6                 	db	230
  5343   00ED4D  01                 	db	1
  5344   00ED4E  C9                 	db	201
  5345   00ED4F  0E                 	db	14
  5346   00ED50  0C                 	db	12
  5347   00ED51  CD                 	db	205
  5348   00ED52  18                 	db	24
  5349   00ED53  F3                 	db	243
  5350   00ED54  2A                 	db	42
  5351   00ED55  43                 	db	67
  5352   00ED56  EF                 	db	239
  5353   00ED57  11                 	db	17
  5354   00ED58  21                 	db	33
  5355   00ED59  00                 	db	0
  5356   00ED5A  19                 	db	25
  5357   00ED5B  E5                 	db	229
  5358   00ED5C  72                 	db	114
  5359   00ED5D  23                 	db	35
  5360   00ED5E  72                 	db	114
  5361   00ED5F  23                 	db	35
  5362   00ED60  72                 	db	114
  5363   00ED61  CD                 	db	205
  5364   00ED62  F5                 	db	245
  5365   00ED63  F1                 	db	241
  5366   00ED64  CA                 	db	202
  5367   00ED65  0C                 	db	12
  5368   00ED66  F8                 	db	248
  5369   00ED67  CD                 	db	205
  5370   00ED68  5E                 	db	94
  5371   00ED69  F1                 	db	241
  5372   00ED6A  11                 	db	17
  5373   00ED6B  0F                 	db	15
  5374   00ED6C  00                 	db	0
  5375   00ED6D  CD                 	db	205
  5376   00ED6E  A5                 	db	165
  5377   00ED6F  F7                 	db	247
  5378   00ED70  E1                 	db	225
  5379   00ED71  E5                 	db	229
  5380   00ED72  5F                 	db	95
  5381   00ED73  79                 	db	121
  5382   00ED74  96                 	db	150
  5383   00ED75  23                 	db	35
  5384   00ED76  78                 	db	120
  5385   00ED77  9E                 	db	158
  5386   00ED78  23                 	db	35
  5387   00ED79  7B                 	db	123
  5388   00ED7A  9E                 	db	158
  5389   00ED7B  DA                 	db	218
  5390   00ED7C  06                 	db	6
  5391   00ED7D  F8                 	db	248
  5392   00ED7E  73                 	db	115
  5393   00ED7F  2B                 	db	43
  5394   00ED80  70                 	db	112
  5395   00ED81  2B                 	db	43
  5396   00ED82  71                 	db	113
  5397   00ED83  CD                 	db	205
  5398   00ED84  2D                 	db	45
  5399   00ED85  F3                 	db	243
  5400   00ED86  C3                 	db	195
  5401   00ED87  E4                 	db	228
  5402   00ED88  F7                 	db	247
  5403   00ED89  E1                 	db	225
  5404   00ED8A  C9                 	db	201
  5405   00ED8B  2A                 	db	42
  5406   00ED8C  43                 	db	67
  5407   00ED8D  EF                 	db	239
  5408   00ED8E  11                 	db	17
  5409   00ED8F  20                 	db	32
  5410   00ED90  00                 	db	0
  5411   00ED91  CD                 	db	205
  5412   00ED92  A5                 	db	165
  5413   00ED93  F7                 	db	247
  5414   00ED94  21                 	db	33
  5415   00ED95  21                 	db	33
  5416   00ED96  00                 	db	0
  5417   00ED97  19                 	db	25
  5418   00ED98  71                 	db	113
  5419   00ED99  23                 	db	35
  5420   00ED9A  70                 	db	112
  5421   00ED9B  23                 	db	35
  5422   00ED9C  77                 	db	119
  5423   00ED9D  C9                 	db	201
  5424   00ED9E  2A                 	db	42
  5425   00ED9F  AF                 	db	175
  5426   00EDA0  F9                 	db	249
  5427   00EDA1  3A                 	db	58
  5428   00EDA2  42                 	db	66
  5429   00EDA3  EF                 	db	239
  5430   00EDA4  4F                 	db	79
  5431   00EDA5  CD                 	db	205
  5432   00EDA6  EA                 	db	234
  5433   00EDA7  F0                 	db	240
  5434   00EDA8  E5                 	db	229
  5435   00EDA9  EB                 	db	235
  5436   00EDAA  CD                 	db	205
  5437   00EDAB  59                 	db	89
  5438   00EDAC  EF                 	db	239
  5439   00EDAD  E1                 	db	225
  5440   00EDAE  CC                 	db	204
  5441   00EDAF  47                 	db	71
  5442   00EDB0  EF                 	db	239
  5443   00EDB1  7D                 	db	125
  5444   00EDB2  1F                 	db	31
  5445   00EDB3  D8                 	db	216
  5446   00EDB4  2A                 	db	42
  5447   00EDB5  AF                 	db	175
  5448   00EDB6  F9                 	db	249
  5449   00EDB7  4D                 	db	77
  5450   00EDB8  44                 	db	68
  5451   00EDB9  CD                 	db	205
  5452   00EDBA  0B                 	db	11
  5453   00EDBB  F1                 	db	241
  5454   00EDBC  22                 	db	34
  5455   00EDBD  AF                 	db	175
  5456   00EDBE  F9                 	db	249
  5457   00EDBF  C3                 	db	195
  5458   00EDC0  A3                 	db	163
  5459   00EDC1  F2                 	db	242
  5460   00EDC2  3A                 	db	58
  5461   00EDC3  D6                 	db	214
  5462   00EDC4  F9                 	db	249
  5463   00EDC5  21                 	db	33
  5464   00EDC6  42                 	db	66
  5465   00EDC7  EF                 	db	239
  5466   00EDC8  BE                 	db	190
  5467   00EDC9  C8                 	db	200
  5468   00EDCA  77                 	db	119
  5469   00EDCB  C3                 	db	195
  5470   00EDCC  21                 	db	33
  5471   00EDCD  F8                 	db	248
  5472   00EDCE  3E                 	db	62
  5473   00EDCF  FF                 	db	255
  5474   00EDD0  32                 	db	50
  5475   00EDD1  DE                 	db	222
  5476   00EDD2  F9                 	db	249
  5477   00EDD3  2A                 	db	42
  5478   00EDD4  43                 	db	67
  5479   00EDD5  EF                 	db	239
  5480   00EDD6  7E                 	db	126
  5481   00EDD7  E6                 	db	230
  5482   00EDD8  1F                 	db	31
  5483   00EDD9  3D                 	db	61
  5484   00EDDA  32                 	db	50
  5485   00EDDB  D6                 	db	214
  5486   00EDDC  F9                 	db	249
  5487   00EDDD  FE                 	db	254
  5488   00EDDE  1E                 	db	30
  5489   00EDDF  D2                 	db	210
  5490   00EDE0  75                 	db	117
  5491   00EDE1  F8                 	db	248
  5492   00EDE2  3A                 	db	58
  5493   00EDE3  42                 	db	66
  5494   00EDE4  EF                 	db	239
  5495   00EDE5  32                 	db	50
  5496   00EDE6  DF                 	db	223
  5497   00EDE7  F9                 	db	249
  5498   00EDE8  7E                 	db	126
  5499   00EDE9  32                 	db	50
  5500   00EDEA  E0                 	db	224
  5501   00EDEB  F9                 	db	249
  5502   00EDEC  E6                 	db	230
  5503   00EDED  E0                 	db	224
  5504   00EDEE  77                 	db	119
  5505   00EDEF  CD                 	db	205
  5506   00EDF0  45                 	db	69
  5507   00EDF1  F8                 	db	248
  5508   00EDF2  3A                 	db	58
  5509   00EDF3  41                 	db	65
  5510   00EDF4  EF                 	db	239
  5511   00EDF5  2A                 	db	42
  5512   00EDF6  43                 	db	67
  5513   00EDF7  EF                 	db	239
  5514   00EDF8  B6                 	db	182
  5515   00EDF9  77                 	db	119
  5516   00EDFA  C9                 	db	201
  5517   00EDFB  3E                 	db	62
  5518   00EDFC  22                 	db	34
  5519   00EDFD  C3                 	db	195
  5520   00EDFE  01                 	db	1
  5521   00EDFF  EF                 	db	239
  5522   00EE00  21                 	db	33
  5523   00EE01  00                 	db	0
  5524   00EE02  00                 	db	0
  5525   00EE03  22                 	db	34
  5526   00EE04  AD                 	db	173
  5527   00EE05  F9                 	db	249
  5528   00EE06  22                 	db	34
  5529   00EE07  AF                 	db	175
  5530   00EE08  F9                 	db	249
  5531   00EE09  AF                 	db	175
  5532   00EE0A  32                 	db	50
  5533   00EE0B  42                 	db	66
  5534   00EE0C  EF                 	db	239
  5535   00EE0D  21                 	db	33
  5536   00EE0E  80                 	db	128
  5537   00EE0F  00                 	db	0
  5538   00EE10  22                 	db	34
  5539   00EE11  B1                 	db	177
  5540   00EE12  F9                 	db	249
  5541   00EE13  CD                 	db	205
  5542   00EE14  DA                 	db	218
  5543   00EE15  F1                 	db	241
  5544   00EE16  C3                 	db	195
  5545   00EE17  21                 	db	33
  5546   00EE18  F8                 	db	248
  5547   00EE19  CD                 	db	205
  5548   00EE1A  72                 	db	114
  5549   00EE1B  F1                 	db	241
  5550   00EE1C  CD                 	db	205
  5551   00EE1D  51                 	db	81
  5552   00EE1E  F8                 	db	248
  5553   00EE1F  C3                 	db	195
  5554   00EE20  51                 	db	81
  5555   00EE21  F4                 	db	244
  5556   00EE22  CD                 	db	205
  5557   00EE23  51                 	db	81
  5558   00EE24  F8                 	db	248
  5559   00EE25  C3                 	db	195
  5560   00EE26  A2                 	db	162
  5561   00EE27  F4                 	db	244
  5562   00EE28  0E                 	db	14
  5563   00EE29  00                 	db	0
  5564   00EE2A  EB                 	db	235
  5565   00EE2B  7E                 	db	126
  5566   00EE2C  FE                 	db	254
  5567   00EE2D  3F                 	db	63
  5568   00EE2E  CA                 	db	202
  5569   00EE2F  C2                 	db	194
  5570   00EE30  F8                 	db	248
  5571   00EE31  CD                 	db	205
  5572   00EE32  A6                 	db	166
  5573   00EE33  F0                 	db	240
  5574   00EE34  7E                 	db	126
  5575   00EE35  FE                 	db	254
  5576   00EE36  3F                 	db	63
  5577   00EE37  C4                 	db	196
  5578   00EE38  72                 	db	114
  5579   00EE39  F1                 	db	241
  5580   00EE3A  CD                 	db	205
  5581   00EE3B  51                 	db	81
  5582   00EE3C  F8                 	db	248
  5583   00EE3D  0E                 	db	14
  5584   00EE3E  0F                 	db	15
  5585   00EE3F  CD                 	db	205
  5586   00EE40  18                 	db	24
  5587   00EE41  F3                 	db	243
  5588   00EE42  C3                 	db	195
  5589   00EE43  E9                 	db	233
  5590   00EE44  F1                 	db	241
  5591   00EE45  2A                 	db	42
  5592   00EE46  D9                 	db	217
  5593   00EE47  F9                 	db	249
  5594   00EE48  22                 	db	34
  5595   00EE49  43                 	db	67
  5596   00EE4A  EF                 	db	239
  5597   00EE4B  CD                 	db	205
  5598   00EE4C  51                 	db	81
  5599   00EE4D  F8                 	db	248
  5600   00EE4E  CD                 	db	205
  5601   00EE4F  2D                 	db	45
  5602   00EE50  F3                 	db	243
  5603   00EE51  C3                 	db	195
  5604   00EE52  E9                 	db	233
  5605   00EE53  F1                 	db	241
  5606   00EE54  CD                 	db	205
  5607   00EE55  51                 	db	81
  5608   00EE56  F8                 	db	248
  5609   00EE57  CD                 	db	205
  5610   00EE58  9C                 	db	156
  5611   00EE59  F3                 	db	243
  5612   00EE5A  C3                 	db	195
  5613   00EE5B  01                 	db	1
  5614   00EE5C  F3                 	db	243
  5615   00EE5D  CD                 	db	205
  5616   00EE5E  51                 	db	81
  5617   00EE5F  F8                 	db	248
  5618   00EE60  C3                 	db	195
  5619   00EE61  BC                 	db	188
  5620   00EE62  F5                 	db	245
  5621   00EE63  CD                 	db	205
  5622   00EE64  51                 	db	81
  5623   00EE65  F8                 	db	248
  5624   00EE66  C3                 	db	195
  5625   00EE67  FE                 	db	254
  5626   00EE68  F5                 	db	245
  5627   00EE69  CD                 	db	205
  5628   00EE6A  72                 	db	114
  5629   00EE6B  F1                 	db	241
  5630   00EE6C  CD                 	db	205
  5631   00EE6D  51                 	db	81
  5632   00EE6E  F8                 	db	248
  5633   00EE6F  C3                 	db	195
  5634   00EE70  24                 	db	36
  5635   00EE71  F5                 	db	245
  5636   00EE72  CD                 	db	205
  5637   00EE73  51                 	db	81
  5638   00EE74  F8                 	db	248
  5639   00EE75  CD                 	db	205
  5640   00EE76  16                 	db	22
  5641   00EE77  F4                 	db	244
  5642   00EE78  C3                 	db	195
  5643   00EE79  01                 	db	1
  5644   00EE7A  F3                 	db	243
  5645   00EE7B  2A                 	db	42
  5646   00EE7C  AF                 	db	175
  5647   00EE7D  F9                 	db	249
  5648   00EE7E  C3                 	db	195
  5649   00EE7F  29                 	db	41
  5650   00EE80  F9                 	db	249
  5651   00EE81  3A                 	db	58
  5652   00EE82  42                 	db	66
  5653   00EE83  EF                 	db	239
  5654   00EE84  C3                 	db	195
  5655   00EE85  01                 	db	1
  5656   00EE86  EF                 	db	239
  5657   00EE87  EB                 	db	235
  5658   00EE88  22                 	db	34
  5659   00EE89  B1                 	db	177
  5660   00EE8A  F9                 	db	249
  5661   00EE8B  C3                 	db	195
  5662   00EE8C  DA                 	db	218
  5663   00EE8D  F1                 	db	241
  5664   00EE8E  2A                 	db	42
  5665   00EE8F  BF                 	db	191
  5666   00EE90  F9                 	db	249
  5667   00EE91  C3                 	db	195
  5668   00EE92  29                 	db	41
  5669   00EE93  F9                 	db	249
  5670   00EE94  2A                 	db	42
  5671   00EE95  AD                 	db	173
  5672   00EE96  F9                 	db	249
  5673   00EE97  C3                 	db	195
  5674   00EE98  29                 	db	41
  5675   00EE99  F9                 	db	249
  5676   00EE9A  CD                 	db	205
  5677   00EE9B  51                 	db	81
  5678   00EE9C  F8                 	db	248
  5679   00EE9D  CD                 	db	205
  5680   00EE9E  3B                 	db	59
  5681   00EE9F  F4                 	db	244
  5682   00EEA0  C3                 	db	195
  5683   00EEA1  01                 	db	1
  5684   00EEA2  F3                 	db	243
  5685   00EEA3  2A                 	db	42
  5686   00EEA4  BB                 	db	187
  5687   00EEA5  F9                 	db	249
  5688   00EEA6  22                 	db	34
  5689   00EEA7  45                 	db	69
  5690   00EEA8  EF                 	db	239
  5691   00EEA9  C9                 	db	201
  5692   00EEAA  3A                 	db	58
  5693   00EEAB  D6                 	db	214
  5694   00EEAC  F9                 	db	249
  5695   00EEAD  FE                 	db	254
  5696   00EEAE  FF                 	db	255
  5697   00EEAF  C2                 	db	194
  5698   00EEB0  3B                 	db	59
  5699   00EEB1  F9                 	db	249
  5700   00EEB2  3A                 	db	58
  5701   00EEB3  41                 	db	65
  5702   00EEB4  EF                 	db	239
  5703   00EEB5  C3                 	db	195
  5704   00EEB6  01                 	db	1
  5705   00EEB7  EF                 	db	239
  5706   00EEB8  E6                 	db	230
  5707   00EEB9  1F                 	db	31
  5708   00EEBA  32                 	db	50
  5709   00EEBB  41                 	db	65
  5710   00EEBC  EF                 	db	239
  5711   00EEBD  C9                 	db	201
  5712   00EEBE  CD                 	db	205
  5713   00EEBF  51                 	db	81
  5714   00EEC0  F8                 	db	248
  5715   00EEC1  C3                 	db	195
  5716   00EEC2  93                 	db	147
  5717   00EEC3  F7                 	db	247
  5718   00EEC4  CD                 	db	205
  5719   00EEC5  51                 	db	81
  5720   00EEC6  F8                 	db	248
  5721   00EEC7  C3                 	db	195
  5722   00EEC8  9C                 	db	156
  5723   00EEC9  F7                 	db	247
  5724   00EECA  CD                 	db	205
  5725   00EECB  51                 	db	81
  5726   00EECC  F8                 	db	248
  5727   00EECD  C3                 	db	195
  5728   00EECE  D2                 	db	210
  5729   00EECF  F7                 	db	247
  5730   00EED0  2A                 	db	42
  5731   00EED1  43                 	db	67
  5732   00EED2  EF                 	db	239
  5733   00EED3  7D                 	db	125
  5734   00EED4  2F                 	db	47
  5735   00EED5  5F                 	db	95
  5736   00EED6  7C                 	db	124
  5737   00EED7  2F                 	db	47
  5738   00EED8  2A                 	db	42
  5739   00EED9  AF                 	db	175
  5740   00EEDA  F9                 	db	249
  5741   00EEDB  A4                 	db	164
  5742   00EEDC  57                 	db	87
  5743   00EEDD  7D                 	db	125
  5744   00EEDE  A3                 	db	163
  5745   00EEDF  5F                 	db	95
  5746   00EEE0  2A                 	db	42
  5747   00EEE1  AD                 	db	173
  5748   00EEE2  F9                 	db	249
  5749   00EEE3  EB                 	db	235
  5750   00EEE4  22                 	db	34
  5751   00EEE5  AF                 	db	175
  5752   00EEE6  F9                 	db	249
  5753   00EEE7  7D                 	db	125
  5754   00EEE8  A3                 	db	163
  5755   00EEE9  6F                 	db	111
  5756   00EEEA  7C                 	db	124
  5757   00EEEB  A2                 	db	162
  5758   00EEEC  67                 	db	103
  5759   00EEED  22                 	db	34
  5760   00EEEE  AD                 	db	173
  5761   00EEEF  F9                 	db	249
  5762   00EEF0  C9                 	db	201
  5763   00EEF1  3A                 	db	58
  5764   00EEF2  DE                 	db	222
  5765   00EEF3  F9                 	db	249
  5766   00EEF4  B7                 	db	183
  5767   00EEF5  CA                 	db	202
  5768   00EEF6  91                 	db	145
  5769   00EEF7  F9                 	db	249
  5770   00EEF8  2A                 	db	42
  5771   00EEF9  43                 	db	67
  5772   00EEFA  EF                 	db	239
  5773   00EEFB  36                 	db	54
  5774   00EEFC  00                 	db	0
  5775   00EEFD  3A                 	db	58
  5776   00EEFE  E0                 	db	224
  5777   00EEFF  F9                 	db	249
  5778   00EF00  B7                 	db	183
  5779   00EF01  CA                 	db	202
  5780   00EF02  91                 	db	145
  5781   00EF03  F9                 	db	249
  5782   00EF04  77                 	db	119
  5783   00EF05  3A                 	db	58
  5784   00EF06  DF                 	db	223
  5785   00EF07  F9                 	db	249
  5786   00EF08  32                 	db	50
  5787   00EF09  D6                 	db	214
  5788   00EF0A  F9                 	db	249
  5789   00EF0B  CD                 	db	205
  5790   00EF0C  45                 	db	69
  5791   00EF0D  F8                 	db	248
  5792   00EF0E  2A                 	db	42
  5793   00EF0F  0F                 	db	15
  5794   00EF10  EF                 	db	239
  5795   00EF11  F9                 	db	249
  5796   00EF12  2A                 	db	42
  5797   00EF13  45                 	db	69
  5798   00EF14  EF                 	db	239
  5799   00EF15  7D                 	db	125
  5800   00EF16  44                 	db	68
  5801   00EF17  C9                 	db	201
  5802   00EF18  CD                 	db	205
  5803   00EF19  51                 	db	81
  5804   00EF1A  F8                 	db	248
  5805   00EF1B  3E                 	db	62
  5806   00EF1C  02                 	db	2
  5807   00EF1D  32                 	db	50
  5808   00EF1E  D5                 	db	213
  5809   00EF1F  F9                 	db	249
  5810   00EF20  0E                 	db	14
  5811   00EF21  00                 	db	0
  5812   00EF22  CD                 	db	205
  5813   00EF23  07                 	db	7
  5814   00EF24  F7                 	db	247
  5815   00EF25  CC                 	db	204
  5816   00EF26  03                 	db	3
  5817   00EF27  F6                 	db	246
  5818   00EF28  C9                 	db	201
  5819   00EF29  E5                 	db	229
  5820   00EF2A  00                 	db	0
  5821   00EF2B  00                 	db	0
  5822   00EF2C  00                 	db	0
  5823   00EF2D  00                 	db	0
  5824   00EF2E  80                 	db	128
  5825   00EF2F  00                 	db	0
  5826   00EF30  00                 	db	0
  5827   00EF31  00                 	db	0
  5828   00EF32  00                 	db	0
  5829   00EF33  00                 	db	0
  5830   00EF34  00                 	db	0
  5831   00EF35  00                 	db	0
  5832   00EF36  00                 	db	0
  5833   00EF37  00                 	db	0
  5834   00EF38  00                 	db	0
  5835   00EF39  00                 	db	0
  5836   00EF3A  00                 	db	0
  5837   00EF3B  00                 	db	0
  5838   00EF3C  00                 	db	0
  5839   00EF3D  00                 	db	0
  5840   00EF3E  00                 	db	0
  5841   00EF3F  00                 	db	0
  5842   00EF40  00                 	db	0
  5843   00EF41  00                 	db	0
  5844   00EF42  00                 	db	0
  5845   00EF43  00                 	db	0
  5846   00EF44  00                 	db	0
  5847   00EF45  00                 	db	0
  5848   00EF46  00                 	db	0
  5849   00EF47  00                 	db	0
  5850   00EF48  00                 	db	0
  5851   00EF49  00                 	db	0
  5852   00EF4A  00                 	db	0
  5853   00EF4B  00                 	db	0
  5854   00EF4C  00                 	db	0
  5855   00EF4D  00                 	db	0
  5856   00EF4E  00                 	db	0
  5857   00EF4F  00                 	db	0
  5858   00EF50  00                 	db	0
  5859   00EF51  00                 	db	0
  5860   00EF52  00                 	db	0
  5861   00EF53  00                 	db	0
  5862   00EF54  00                 	db	0
  5863   00EF55  00                 	db	0
  5864   00EF56  00                 	db	0
  5865   00EF57  00                 	db	0
  5866   00EF58  00                 	db	0
  5867   00EF59  00                 	db	0
  5868   00EF5A  00                 	db	0
  5869   00EF5B  00                 	db	0
  5870   00EF5C  00                 	db	0
  5871   00EF5D  00                 	db	0
  5872   00EF5E  00                 	db	0
  5873   00EF5F  00                 	db	0
  5874   00EF60  00                 	db	0
  5875   00EF61  00                 	db	0
  5876   00EF62  00                 	db	0
  5877   00EF63  00                 	db	0
  5878   00EF64  00                 	db	0
  5879   00EF65  00                 	db	0
  5880   00EF66  00                 	db	0
  5881   00EF67  00                 	db	0
  5882   00EF68  00                 	db	0
  5883   00EF69  00                 	db	0
  5884   00EF6A  00                 	db	0
  5885   00EF6B  00                 	db	0
  5886   00EF6C  00                 	db	0
  5887   00EF6D  00                 	db	0
  5888   00EF6E  00                 	db	0
  5889   00EF6F  00                 	db	0
  5890   00EF70  00                 	db	0
  5891   00EF71  00                 	db	0
  5892   00EF72  00                 	db	0
  5893   00EF73  00                 	db	0
  5894   00EF74  00                 	db	0
  5895   00EF75  00                 	db	0
  5896   00EF76  00                 	db	0
  5897   00EF77  00                 	db	0
  5898   00EF78  00                 	db	0
  5899   00EF79  00                 	db	0
  5900   00EF7A  00                 	db	0
  5901   00EF7B  00                 	db	0
  5902   00EF7C  00                 	db	0
  5903   00EF7D  C3                 	db	195
  5904   00EF7E  00                 	db	0
  5905   00EF7F  00                 	db	0
  5906   00EF80  C3                 	db	195
  5907   00EF81  00                 	db	0
  5908   00EF82  00                 	db	0
  5909   00EF83  C3                 	db	195
  5910   00EF84  00                 	db	0
  5911   00EF85  00                 	db	0
  5912   00EF86  C3                 	db	195
  5913   00EF87  00                 	db	0
  5914   00EF88  00                 	db	0
  5915   00EF89  C3                 	db	195
  5916   00EF8A  00                 	db	0
  5917   00EF8B  00                 	db	0
  5918   00EF8C  C3                 	db	195
  5919   00EF8D  00                 	db	0
  5920   00EF8E  00                 	db	0
  5921   00EF8F  C3                 	db	195
  5922   00EF90  00                 	db	0
  5923   00EF91  00                 	db	0
  5924   00EF92  C3                 	db	195
  5925   00EF93  00                 	db	0
  5926   00EF94  00                 	db	0
  5927   00EF95  C3                 	db	195
  5928   00EF96  00                 	db	0
  5929   00EF97  00                 	db	0
  5930   00EF98  C3                 	db	195
  5931   00EF99  00                 	db	0
  5932   00EF9A  00                 	db	0
  5933   00EF9B  C3                 	db	195
  5934   00EF9C  00                 	db	0
  5935   00EF9D  00                 	db	0
  5936   00EF9E  C3                 	db	195
  5937   00EF9F  00                 	db	0
  5938   00EFA0  00                 	db	0
  5939   00EFA1  C3                 	db	195
  5940   00EFA2  00                 	db	0
  5941   00EFA3  00                 	db	0
  5942   00EFA4  C3                 	db	195
  5943   00EFA5  00                 	db	0
  5944   00EFA6  00                 	db	0
  5945   00EFA7  C3                 	db	195
  5946   00EFA8  00                 	db	0
  5947   00EFA9  00                 	db	0
  5948   00EFAA  C3                 	db	195
  5949   00EFAB  00                 	db	0
  5950   00EFAC  00                 	db	0
  5951   00EFAD  C3                 	db	195
  5952   00EFAE  00                 	db	0
  5953   00EFAF  00                 	db	0
  5954   00EFB0                     __end_of_bdosccp:
  5955                           	callstack 0
  5956   00EFB0                     _bios:
  5957                           	callstack 0
  5958   00EFB0  C3                 	db	195
  5959   00EFB1  3B                 	db	59
  5960   00EFB2  FB                 	db	251
  5961   00EFB3  C3                 	db	195
  5962   00EFB4  4E                 	db	78
  5963   00EFB5  FB                 	db	251
  5964   00EFB6  C3                 	db	195
  5965   00EFB7  74                 	db	116
  5966   00EFB8  FB                 	db	251
  5967   00EFB9  C3                 	db	195
  5968   00EFBA  80                 	db	128
  5969   00EFBB  FB                 	db	251
  5970   00EFBC  C3                 	db	195
  5971   00EFBD  8A                 	db	138
  5972   00EFBE  FB                 	db	251
  5973   00EFBF  C3                 	db	195
  5974   00EFC0  97                 	db	151
  5975   00EFC1  FB                 	db	251
  5976   00EFC2  C3                 	db	195
  5977   00EFC3  97                 	db	151
  5978   00EFC4  FB                 	db	251
  5979   00EFC5  C3                 	db	195
  5980   00EFC6  97                 	db	151
  5981   00EFC7  FB                 	db	251
  5982   00EFC8  C3                 	db	195
  5983   00EFC9  98                 	db	152
  5984   00EFCA  FB                 	db	251
  5985   00EFCB  C3                 	db	195
  5986   00EFCC  9D                 	db	157
  5987   00EFCD  FB                 	db	251
  5988   00EFCE  C3                 	db	195
  5989   00EFCF  CB                 	db	203
  5990   00EFD0  FB                 	db	251
  5991   00EFD1  C3                 	db	195
  5992   00EFD2  D0                 	db	208
  5993   00EFD3  FB                 	db	251
  5994   00EFD4  C3                 	db	195
  5995   00EFD5  E6                 	db	230
  5996   00EFD6  FB                 	db	251
  5997   00EFD7  C3                 	db	195
  5998   00EFD8  EF                 	db	239
  5999   00EFD9  FB                 	db	251
  6000   00EFDA  C3                 	db	195
  6001   00EFDB  F5                 	db	245
  6002   00EFDC  FB                 	db	251
  6003   00EFDD  C3                 	db	195
  6004   00EFDE  95                 	db	149
  6005   00EFDF  FB                 	db	251
  6006   00EFE0  C3                 	db	195
  6007   00EFE1  D5                 	db	213
  6008   00EFE2  FB                 	db	251
  6009   00EFE3  73                 	db	115
  6010   00EFE4  FA                 	db	250
  6011   00EFE5  00                 	db	0
  6012   00EFE6  00                 	db	0
  6013   00EFE7  00                 	db	0
  6014   00EFE8  00                 	db	0
  6015   00EFE9  00                 	db	0
  6016   00EFEA  00                 	db	0
  6017   00EFEB  FA                 	db	250
  6018   00EFEC  FB                 	db	251
  6019   00EFED  8D                 	db	141
  6020   00EFEE  FA                 	db	250
  6021   00EFEF  F4                 	db	244
  6022   00EFF0  FE                 	db	254
  6023   00EFF1  7A                 	db	122
  6024   00EFF2  FC                 	db	252
  6025   00EFF3  73                 	db	115
  6026   00EFF4  FA                 	db	250
  6027   00EFF5  00                 	db	0
  6028   00EFF6  00                 	db	0
  6029   00EFF7  00                 	db	0
  6030   00EFF8  00                 	db	0
  6031   00EFF9  00                 	db	0
  6032   00EFFA  00                 	db	0
  6033   00EFFB  FA                 	db	250
  6034   00EFFC  FB                 	db	251
  6035   00EFFD  8D                 	db	141
  6036   00EFFE  FA                 	db	250
  6037   00EFFF  04                 	db	4
  6038   00F000  FF                 	db	255
  6039   00F001  99                 	db	153
  6040   00F002  FC                 	db	252
  6041   00F003  73                 	db	115
  6042   00F004  FA                 	db	250
  6043   00F005  00                 	db	0
  6044   00F006  00                 	db	0
  6045   00F007  00                 	db	0
  6046   00F008  00                 	db	0
  6047   00F009  00                 	db	0
  6048   00F00A  00                 	db	0
  6049   00F00B  FA                 	db	250
  6050   00F00C  FB                 	db	251
  6051   00F00D  8D                 	db	141
  6052   00F00E  FA                 	db	250
  6053   00F00F  14                 	db	20
  6054   00F010  FF                 	db	255
  6055   00F011  B8                 	db	184
  6056   00F012  FC                 	db	252
  6057   00F013  73                 	db	115
  6058   00F014  FA                 	db	250
  6059   00F015  00                 	db	0
  6060   00F016  00                 	db	0
  6061   00F017  00                 	db	0
  6062   00F018  00                 	db	0
  6063   00F019  00                 	db	0
  6064   00F01A  00                 	db	0
  6065   00F01B  FA                 	db	250
  6066   00F01C  FB                 	db	251
  6067   00F01D  8D                 	db	141
  6068   00F01E  FA                 	db	250
  6069   00F01F  24                 	db	36
  6070   00F020  FF                 	db	255
  6071   00F021  D7                 	db	215
  6072   00F022  FC                 	db	252
  6073   00F023  01                 	db	1
  6074   00F024  07                 	db	7
  6075   00F025  0D                 	db	13
  6076   00F026  13                 	db	19
  6077   00F027  19                 	db	25
  6078   00F028  05                 	db	5
  6079   00F029  0B                 	db	11
  6080   00F02A  11                 	db	17
  6081   00F02B  17                 	db	23
  6082   00F02C  03                 	db	3
  6083   00F02D  09                 	db	9
  6084   00F02E  0F                 	db	15
  6085   00F02F  15                 	db	21
  6086   00F030  02                 	db	2
  6087   00F031  08                 	db	8
  6088   00F032  0E                 	db	14
  6089   00F033  14                 	db	20
  6090   00F034  1A                 	db	26
  6091   00F035  06                 	db	6
  6092   00F036  0C                 	db	12
  6093   00F037  12                 	db	18
  6094   00F038  18                 	db	24
  6095   00F039  04                 	db	4
  6096   00F03A  0A                 	db	10
  6097   00F03B  10                 	db	16
  6098   00F03C  16                 	db	22
  6099   00F03D  1A                 	db	26
  6100   00F03E  00                 	db	0
  6101   00F03F  03                 	db	3
  6102   00F040  07                 	db	7
  6103   00F041  00                 	db	0
  6104   00F042  F2                 	db	242
  6105   00F043  00                 	db	0
  6106   00F044  3F                 	db	63
  6107   00F045  00                 	db	0
  6108   00F046  C0                 	db	192
  6109   00F047  00                 	db	0
  6110   00F048  10                 	db	16
  6111   00F049  00                 	db	0
  6112   00F04A  02                 	db	2
  6113   00F04B  00                 	db	0
  6114   00F04C  00                 	db	0
  6115   00F04D  00                 	db	0
  6116   00F04E  00                 	db	0
  6117   00F04F  00                 	db	0
  6118   00F050  00                 	db	0
  6119   00F051  00                 	db	0
  6120   00F052  00                 	db	0
  6121   00F053  00                 	db	0
  6122   00F054  FA                 	db	250
  6123   00F055  FB                 	db	251
  6124   00F056  BC                 	db	188
  6125   00F057  FA                 	db	250
  6126   00F058  34                 	db	52
  6127   00F059  FF                 	db	255
  6128   00F05A  F6                 	db	246
  6129   00F05B  FC                 	db	252
  6130   00F05C  00                 	db	0
  6131   00F05D  00                 	db	0
  6132   00F05E  00                 	db	0
  6133   00F05F  00                 	db	0
  6134   00F060  00                 	db	0
  6135   00F061  00                 	db	0
  6136   00F062  00                 	db	0
  6137   00F063  00                 	db	0
  6138   00F064  FA                 	db	250
  6139   00F065  FB                 	db	251
  6140   00F066  BC                 	db	188
  6141   00F067  FA                 	db	250
  6142   00F068  34                 	db	52
  6143   00F069  FF                 	db	255
  6144   00F06A  F5                 	db	245
  6145   00F06B  FD                 	db	253
  6146   00F06C  80                 	db	128
  6147   00F06D  00                 	db	0
  6148   00F06E  04                 	db	4
  6149   00F06F  0F                 	db	15
  6150   00F070  00                 	db	0
  6151   00F071  F7                 	db	247
  6152   00F072  07                 	db	7
  6153   00F073  FF                 	db	255
  6154   00F074  03                 	db	3
  6155   00F075  FF                 	db	255
  6156   00F076  FF                 	db	255
  6157   00F077  00                 	db	0
  6158   00F078  00                 	db	0
  6159   00F079  00                 	db	0
  6160   00F07A  00                 	db	0
  6161   00F07B  36                 	db	54
  6162   00F07C  34                 	db	52
  6163   00F07D  4B                 	db	75
  6164   00F07E  20                 	db	32
  6165   00F07F  43                 	db	67
  6166   00F080  50                 	db	80
  6167   00F081  2F                 	db	47
  6168   00F082  4D                 	db	77
  6169   00F083  20                 	db	32
  6170   00F084  56                 	db	86
  6171   00F085  65                 	db	101
  6172   00F086  72                 	db	114
  6173   00F087  73                 	db	115
  6174   00F088  2E                 	db	46
  6175   00F089  20                 	db	32
  6176   00F08A  32                 	db	50
  6177   00F08B  2E                 	db	46
  6178   00F08C  32                 	db	50
  6179   00F08D  20                 	db	32
  6180   00F08E  28                 	db	40
  6181   00F08F  5A                 	db	90
  6182   00F090  38                 	db	56
  6183   00F091  30                 	db	48
  6184   00F092  20                 	db	32
  6185   00F093  43                 	db	67
  6186   00F094  42                 	db	66
  6187   00F095  49                 	db	73
  6188   00F096  4F                 	db	79
  6189   00F097  53                 	db	83
  6190   00F098  20                 	db	32
  6191   00F099  56                 	db	86
  6192   00F09A  31                 	db	49
  6193   00F09B  2E                 	db	46
  6194   00F09C  32                 	db	50
  6195   00F09D  20                 	db	32
  6196   00F09E  66                 	db	102
  6197   00F09F  6F                 	db	111
  6198   00F0A0  72                 	db	114
  6199   00F0A1  20                 	db	32
  6200   00F0A2  5A                 	db	90
  6201   00F0A3  38                 	db	56
  6202   00F0A4  30                 	db	48
  6203   00F0A5  53                 	db	83
  6204   00F0A6  49                 	db	73
  6205   00F0A7  4D                 	db	77
  6206   00F0A8  2C                 	db	44
  6207   00F0A9  20                 	db	32
  6208   00F0AA  43                 	db	67
  6209   00F0AB  6F                 	db	111
  6210   00F0AC  70                 	db	112
  6211   00F0AD  79                 	db	121
  6212   00F0AE  72                 	db	114
  6213   00F0AF  69                 	db	105
  6214   00F0B0  67                 	db	103
  6215   00F0B1  68                 	db	104
  6216   00F0B2  74                 	db	116
  6217   00F0B3  20                 	db	32
  6218   00F0B4  31                 	db	49
  6219   00F0B5  39                 	db	57
  6220   00F0B6  38                 	db	56
  6221   00F0B7  38                 	db	56
  6222   00F0B8  2D                 	db	45
  6223   00F0B9  32                 	db	50
  6224   00F0BA  30                 	db	48
  6225   00F0BB  30                 	db	48
  6226   00F0BC  37                 	db	55
  6227   00F0BD  20                 	db	32
  6228   00F0BE  62                 	db	98
  6229   00F0BF  79                 	db	121
  6230   00F0C0  20                 	db	32
  6231   00F0C1  55                 	db	85
  6232   00F0C2  64                 	db	100
  6233   00F0C3  6F                 	db	111
  6234   00F0C4  20                 	db	32
  6235   00F0C5  4D                 	db	77
  6236   00F0C6  75                 	db	117
  6237   00F0C7  6E                 	db	110
  6238   00F0C8  6B                 	db	107
  6239   00F0C9  29                 	db	41
  6240   00F0CA  0D                 	db	13
  6241   00F0CB  0A                 	db	10
  6242   00F0CC  00                 	db	0
  6243   00F0CD  FF                 	db	255
  6244   00F0CE  FF                 	db	255
  6245   00F0CF  FF                 	db	255
  6246   00F0D0  FF                 	db	255
  6247   00F0D1  FF                 	db	255
  6248   00F0D2  FF                 	db	255
  6249   00F0D3  FF                 	db	255
  6250   00F0D4  FF                 	db	255
  6251   00F0D5  FF                 	db	255
  6252   00F0D6  FF                 	db	255
  6253   00F0D7  FF                 	db	255
  6254   00F0D8  FF                 	db	255
  6255   00F0D9  FF                 	db	255
  6256   00F0DA  FF                 	db	255
  6257   00F0DB  FF                 	db	255
  6258   00F0DC  FF                 	db	255
  6259   00F0DD  FF                 	db	255
  6260   00F0DE  FF                 	db	255
  6261   00F0DF  FF                 	db	255
  6262   00F0E0  7E                 	db	126
  6263   00F0E1  B7                 	db	183
  6264   00F0E2  C8                 	db	200
  6265   00F0E3  4F                 	db	79
  6266   00F0E4  CD                 	db	205
  6267   00F0E5  8A                 	db	138
  6268   00F0E6  FB                 	db	251
  6269   00F0E7  23                 	db	35
  6270   00F0E8  C3                 	db	195
  6271   00F0E9  30                 	db	48
  6272   00F0EA  FB                 	db	251
  6273   00F0EB  31                 	db	49
  6274   00F0EC  80                 	db	128
  6275   00F0ED  00                 	db	0
  6276   00F0EE  21                 	db	33
  6277   00F0EF  CB                 	db	203
  6278   00F0F0  FA                 	db	250
  6279   00F0F1  CD                 	db	205
  6280   00F0F2  30                 	db	48
  6281   00F0F3  FB                 	db	251
  6282   00F0F4  AF                 	db	175
  6283   00F0F5  32                 	db	50
  6284   00F0F6  03                 	db	3
  6285   00F0F7  00                 	db	0
  6286   00F0F8  32                 	db	50
  6287   00F0F9  04                 	db	4
  6288   00F0FA  00                 	db	0
  6289   00F0FB  C3                 	db	195
  6290   00F0FC  53                 	db	83
  6291   00F0FD  FB                 	db	251
  6292   00F0FE  31                 	db	49
  6293   00F0FF  80                 	db	128
  6294   00F100  00                 	db	0
  6295   00F101  DB                 	db	219
  6296   00F102  46                 	db	70
  6297   00F103  3E                 	db	62
  6298   00F104  C3                 	db	195
  6299   00F105  32                 	db	50
  6300   00F106  00                 	db	0
  6301   00F107  00                 	db	0
  6302   00F108  21                 	db	33
  6303   00F109  03                 	db	3
  6304   00F10A  FA                 	db	250
  6305   00F10B  22                 	db	34
  6306   00F10C  01                 	db	1
  6307   00F10D  00                 	db	0
  6308   00F10E  32                 	db	50
  6309   00F10F  05                 	db	5
  6310   00F110  00                 	db	0
  6311   00F111  21                 	db	33
  6312   00F112  06                 	db	6
  6313   00F113  EC                 	db	236
  6314   00F114  22                 	db	34
  6315   00F115  06                 	db	6
  6316   00F116  00                 	db	0
  6317   00F117  01                 	db	1
  6318   00F118  80                 	db	128
  6319   00F119  00                 	db	0
  6320   00F11A  CD                 	db	205
  6321   00F11B  E6                 	db	230
  6322   00F11C  FB                 	db	251
  6323   00F11D  3A                 	db	58
  6324   00F11E  04                 	db	4
  6325   00F11F  00                 	db	0
  6326   00F120  4F                 	db	79
  6327   00F121  C3                 	db	195
  6328   00F122  00                 	db	0
  6329   00F123  E4                 	db	228
  6330   00F124  DB                 	db	219
  6331   00F125  01                 	db	1
  6332   00F126  E6                 	db	230
  6333   00F127  02                 	db	2
  6334   00F128  CA                 	db	202
  6335   00F129  7E                 	db	126
  6336   00F12A  FB                 	db	251
  6337   00F12B  3E                 	db	62
  6338   00F12C  FF                 	db	255
  6339   00F12D  C9                 	db	201
  6340   00F12E  AF                 	db	175
  6341   00F12F  C9                 	db	201
  6342   00F130  DB                 	db	219
  6343   00F131  01                 	db	1
  6344   00F132  E6                 	db	230
  6345   00F133  02                 	db	2
  6346   00F134  CA                 	db	202
  6347   00F135  80                 	db	128
  6348   00F136  FB                 	db	251
  6349   00F137  DB                 	db	219
  6350   00F138  00                 	db	0
  6351   00F139  C9                 	db	201
  6352   00F13A  DB                 	db	219
  6353   00F13B  01                 	db	1
  6354   00F13C  E6                 	db	230
  6355   00F13D  01                 	db	1
  6356   00F13E  CA                 	db	202
  6357   00F13F  8A                 	db	138
  6358   00F140  FB                 	db	251
  6359   00F141  79                 	db	121
  6360   00F142  D3                 	db	211
  6361   00F143  00                 	db	0
  6362   00F144  C9                 	db	201
  6363   00F145  3E                 	db	62
  6364   00F146  FF                 	db	255
  6365   00F147  C9                 	db	201
  6366   00F148  AF                 	db	175
  6367   00F149  32                 	db	50
  6368   00F14A  21                 	db	33
  6369   00F14B  FB                 	db	251
  6370   00F14C  C9                 	db	201
  6371   00F14D  21                 	db	33
  6372   00F14E  00                 	db	0
  6373   00F14F  00                 	db	0
  6374   00F150  79                 	db	121
  6375   00F151  FE                 	db	254
  6376   00F152  04                 	db	4
  6377   00F153  DA                 	db	218
  6378   00F154  B1                 	db	177
  6379   00F155  FB                 	db	251
  6380   00F156  FE                 	db	254
  6381   00F157  08                 	db	8
  6382   00F158  CA                 	db	202
  6383   00F159  BE                 	db	190
  6384   00F15A  FB                 	db	251
  6385   00F15B  FE                 	db	254
  6386   00F15C  09                 	db	9
  6387   00F15D  CA                 	db	202
  6388   00F15E  C4                 	db	196
  6389   00F15F  FB                 	db	251
  6390   00F160  C9                 	db	201
  6391   00F161  32                 	db	50
  6392   00F162  20                 	db	32
  6393   00F163  FB                 	db	251
  6394   00F164  6F                 	db	111
  6395   00F165  29                 	db	41
  6396   00F166  29                 	db	41
  6397   00F167  29                 	db	41
  6398   00F168  29                 	db	41
  6399   00F169  11                 	db	17
  6400   00F16A  33                 	db	51
  6401   00F16B  FA                 	db	250
  6402   00F16C  19                 	db	25
  6403   00F16D  C9                 	db	201
  6404   00F16E  21                 	db	33
  6405   00F16F  9C                 	db	156
  6406   00F170  FA                 	db	250
  6407   00F171  C3                 	db	195
  6408   00F172  C7                 	db	199
  6409   00F173  FB                 	db	251
  6410   00F174  21                 	db	33
  6411   00F175  AC                 	db	172
  6412   00F176  FA                 	db	250
  6413   00F177  32                 	db	50
  6414   00F178  20                 	db	32
  6415   00F179  FB                 	db	251
  6416   00F17A  C9                 	db	201
  6417   00F17B  79                 	db	121
  6418   00F17C  32                 	db	50
  6419   00F17D  21                 	db	33
  6420   00F17E  FB                 	db	251
  6421   00F17F  C9                 	db	201
  6422   00F180  79                 	db	121
  6423   00F181  32                 	db	50
  6424   00F182  22                 	db	34
  6425   00F183  FB                 	db	251
  6426   00F184  C9                 	db	201
  6427   00F185  7A                 	db	122
  6428   00F186  B3                 	db	179
  6429   00F187  C2                 	db	194
  6430   00F188  E0                 	db	224
  6431   00F189  FB                 	db	251
  6432   00F18A  69                 	db	105
  6433   00F18B  60                 	db	96
  6434   00F18C  2C                 	db	44
  6435   00F18D  C0                 	db	192
  6436   00F18E  24                 	db	36
  6437   00F18F  C9                 	db	201
  6438   00F190  EB                 	db	235
  6439   00F191  09                 	db	9
  6440   00F192  6E                 	db	110
  6441   00F193  26                 	db	38
  6442   00F194  00                 	db	0
  6443   00F195  C9                 	db	201
  6444   00F196  79                 	db	121
  6445   00F197  32                 	db	50
  6446   00F198  23                 	db	35
  6447   00F199  FB                 	db	251
  6448   00F19A  78                 	db	120
  6449   00F19B  32                 	db	50
  6450   00F19C  24                 	db	36
  6451   00F19D  FB                 	db	251
  6452   00F19E  C9                 	db	201
  6453   00F19F  DB                 	db	219
  6454   00F1A0  52                 	db	82
  6455   00F1A1  DB                 	db	219
  6456   00F1A2  4E                 	db	78
  6457   00F1A3  B7                 	db	183
  6458   00F1A4  C9                 	db	201
  6459   00F1A5  DB                 	db	219
  6460   00F1A6  53                 	db	83
  6461   00F1A7  DB                 	db	219
  6462   00F1A8  4E                 	db	78
  6463   00F1A9  C9                 	db	201
  6464   00F1AA  00                 	db	0
  6465   00F1AB  00                 	db	0
  6466   00F1AC  00                 	db	0
  6467   00F1AD  00                 	db	0
  6468   00F1AE  00                 	db	0
  6469   00F1AF  00                 	db	0
  6470   00F1B0  00                 	db	0
  6471   00F1B1  00                 	db	0
  6472   00F1B2  00                 	db	0
  6473   00F1B3  00                 	db	0
  6474   00F1B4  00                 	db	0
  6475   00F1B5  00                 	db	0
  6476   00F1B6  00                 	db	0
  6477   00F1B7  00                 	db	0
  6478   00F1B8  00                 	db	0
  6479   00F1B9  00                 	db	0
  6480   00F1BA  00                 	db	0
  6481   00F1BB  00                 	db	0
  6482   00F1BC  00                 	db	0
  6483   00F1BD  00                 	db	0
  6484   00F1BE  00                 	db	0
  6485   00F1BF  00                 	db	0
  6486   00F1C0  00                 	db	0
  6487   00F1C1  00                 	db	0
  6488   00F1C2  00                 	db	0
  6489   00F1C3  00                 	db	0
  6490   00F1C4  00                 	db	0
  6491   00F1C5  00                 	db	0
  6492   00F1C6  00                 	db	0
  6493   00F1C7  00                 	db	0
  6494   00F1C8  00                 	db	0
  6495   00F1C9  00                 	db	0
  6496   00F1CA  00                 	db	0
  6497   00F1CB  00                 	db	0
  6498   00F1CC  00                 	db	0
  6499   00F1CD  00                 	db	0
  6500   00F1CE  00                 	db	0
  6501   00F1CF  00                 	db	0
  6502   00F1D0  00                 	db	0
  6503   00F1D1  00                 	db	0
  6504   00F1D2  00                 	db	0
  6505   00F1D3  00                 	db	0
  6506   00F1D4  00                 	db	0
  6507   00F1D5  00                 	db	0
  6508   00F1D6  00                 	db	0
  6509   00F1D7  00                 	db	0
  6510   00F1D8  00                 	db	0
  6511   00F1D9  00                 	db	0
  6512   00F1DA  00                 	db	0
  6513   00F1DB  00                 	db	0
  6514   00F1DC  00                 	db	0
  6515   00F1DD  00                 	db	0
  6516   00F1DE  00                 	db	0
  6517   00F1DF  00                 	db	0
  6518   00F1E0  00                 	db	0
  6519   00F1E1  00                 	db	0
  6520   00F1E2  00                 	db	0
  6521   00F1E3  00                 	db	0
  6522   00F1E4  00                 	db	0
  6523   00F1E5  00                 	db	0
  6524   00F1E6  00                 	db	0
  6525   00F1E7  00                 	db	0
  6526   00F1E8  00                 	db	0
  6527   00F1E9  00                 	db	0
  6528   00F1EA  00                 	db	0
  6529   00F1EB  00                 	db	0
  6530   00F1EC  00                 	db	0
  6531   00F1ED  00                 	db	0
  6532   00F1EE  00                 	db	0
  6533   00F1EF  00                 	db	0
  6534   00F1F0  00                 	db	0
  6535   00F1F1  00                 	db	0
  6536   00F1F2  00                 	db	0
  6537   00F1F3  00                 	db	0
  6538   00F1F4  00                 	db	0
  6539   00F1F5  00                 	db	0
  6540   00F1F6  00                 	db	0
  6541   00F1F7  00                 	db	0
  6542   00F1F8  00                 	db	0
  6543   00F1F9  00                 	db	0
  6544   00F1FA  00                 	db	0
  6545   00F1FB  00                 	db	0
  6546   00F1FC  00                 	db	0
  6547   00F1FD  00                 	db	0
  6548   00F1FE  00                 	db	0
  6549   00F1FF  00                 	db	0
  6550   00F200  00                 	db	0
  6551   00F201  00                 	db	0
  6552   00F202  00                 	db	0
  6553   00F203  00                 	db	0
  6554   00F204  00                 	db	0
  6555   00F205  00                 	db	0
  6556   00F206  00                 	db	0
  6557   00F207  00                 	db	0
  6558   00F208  00                 	db	0
  6559   00F209  00                 	db	0
  6560   00F20A  00                 	db	0
  6561   00F20B  00                 	db	0
  6562   00F20C  00                 	db	0
  6563   00F20D  00                 	db	0
  6564   00F20E  00                 	db	0
  6565   00F20F  00                 	db	0
  6566   00F210  00                 	db	0
  6567   00F211  00                 	db	0
  6568   00F212  00                 	db	0
  6569   00F213  00                 	db	0
  6570   00F214  00                 	db	0
  6571   00F215  00                 	db	0
  6572   00F216  00                 	db	0
  6573   00F217  00                 	db	0
  6574   00F218  00                 	db	0
  6575   00F219  00                 	db	0
  6576   00F21A  00                 	db	0
  6577   00F21B  00                 	db	0
  6578   00F21C  00                 	db	0
  6579   00F21D  00                 	db	0
  6580   00F21E  00                 	db	0
  6581   00F21F  00                 	db	0
  6582   00F220  00                 	db	0
  6583   00F221  00                 	db	0
  6584   00F222  00                 	db	0
  6585   00F223  00                 	db	0
  6586   00F224  00                 	db	0
  6587   00F225  00                 	db	0
  6588   00F226  00                 	db	0
  6589   00F227  00                 	db	0
  6590   00F228  00                 	db	0
  6591   00F229  00                 	db	0
  6592   00F22A  00                 	db	0
  6593   00F22B  00                 	db	0
  6594   00F22C  00                 	db	0
  6595   00F22D  00                 	db	0
  6596   00F22E  00                 	db	0
  6597   00F22F  00                 	db	0
  6598   00F230  00                 	db	0
  6599   00F231  00                 	db	0
  6600   00F232  00                 	db	0
  6601   00F233  00                 	db	0
  6602   00F234  00                 	db	0
  6603   00F235  00                 	db	0
  6604   00F236  00                 	db	0
  6605   00F237  00                 	db	0
  6606   00F238  00                 	db	0
  6607   00F239  00                 	db	0
  6608   00F23A  00                 	db	0
  6609   00F23B  00                 	db	0
  6610   00F23C  00                 	db	0
  6611   00F23D  00                 	db	0
  6612   00F23E  00                 	db	0
  6613   00F23F  00                 	db	0
  6614   00F240  00                 	db	0
  6615   00F241  00                 	db	0
  6616   00F242  00                 	db	0
  6617   00F243  00                 	db	0
  6618   00F244  00                 	db	0
  6619   00F245  00                 	db	0
  6620   00F246  00                 	db	0
  6621   00F247  00                 	db	0
  6622   00F248  00                 	db	0
  6623   00F249  00                 	db	0
  6624   00F24A  00                 	db	0
  6625   00F24B  00                 	db	0
  6626   00F24C  00                 	db	0
  6627   00F24D  00                 	db	0
  6628   00F24E  00                 	db	0
  6629   00F24F  00                 	db	0
  6630   00F250  00                 	db	0
  6631   00F251  00                 	db	0
  6632   00F252  00                 	db	0
  6633   00F253  00                 	db	0
  6634   00F254  00                 	db	0
  6635   00F255  00                 	db	0
  6636   00F256  00                 	db	0
  6637   00F257  00                 	db	0
  6638   00F258  00                 	db	0
  6639   00F259  00                 	db	0
  6640   00F25A  00                 	db	0
  6641   00F25B  00                 	db	0
  6642   00F25C  00                 	db	0
  6643   00F25D  00                 	db	0
  6644   00F25E  00                 	db	0
  6645   00F25F  00                 	db	0
  6646   00F260  00                 	db	0
  6647   00F261  00                 	db	0
  6648   00F262  00                 	db	0
  6649   00F263  00                 	db	0
  6650   00F264  00                 	db	0
  6651   00F265  00                 	db	0
  6652   00F266  00                 	db	0
  6653   00F267  00                 	db	0
  6654   00F268  00                 	db	0
  6655   00F269  00                 	db	0
  6656   00F26A  00                 	db	0
  6657   00F26B  00                 	db	0
  6658   00F26C  00                 	db	0
  6659   00F26D  00                 	db	0
  6660   00F26E  00                 	db	0
  6661   00F26F  00                 	db	0
  6662   00F270  00                 	db	0
  6663   00F271  00                 	db	0
  6664   00F272  00                 	db	0
  6665   00F273  00                 	db	0
  6666   00F274  00                 	db	0
  6667   00F275  00                 	db	0
  6668   00F276  00                 	db	0
  6669   00F277  00                 	db	0
  6670   00F278  00                 	db	0
  6671   00F279  00                 	db	0
  6672   00F27A  00                 	db	0
  6673   00F27B  00                 	db	0
  6674   00F27C  00                 	db	0
  6675   00F27D  00                 	db	0
  6676   00F27E  00                 	db	0
  6677   00F27F  00                 	db	0
  6678   00F280  00                 	db	0
  6679   00F281  00                 	db	0
  6680   00F282  00                 	db	0
  6681   00F283  00                 	db	0
  6682   00F284  00                 	db	0
  6683   00F285  00                 	db	0
  6684   00F286  00                 	db	0
  6685   00F287  00                 	db	0
  6686   00F288  00                 	db	0
  6687   00F289  00                 	db	0
  6688   00F28A  00                 	db	0
  6689   00F28B  00                 	db	0
  6690   00F28C  00                 	db	0
  6691   00F28D  00                 	db	0
  6692   00F28E  00                 	db	0
  6693   00F28F  00                 	db	0
  6694   00F290  00                 	db	0
  6695   00F291  00                 	db	0
  6696   00F292  00                 	db	0
  6697   00F293  00                 	db	0
  6698   00F294  00                 	db	0
  6699   00F295  00                 	db	0
  6700   00F296  00                 	db	0
  6701   00F297  00                 	db	0
  6702   00F298  00                 	db	0
  6703   00F299  00                 	db	0
  6704   00F29A  00                 	db	0
  6705   00F29B  00                 	db	0
  6706   00F29C  00                 	db	0
  6707   00F29D  00                 	db	0
  6708   00F29E  00                 	db	0
  6709   00F29F  00                 	db	0
  6710   00F2A0  00                 	db	0
  6711   00F2A1  00                 	db	0
  6712   00F2A2  00                 	db	0
  6713   00F2A3  00                 	db	0
  6714   00F2A4  00                 	db	0
  6715   00F2A5  00                 	db	0
  6716   00F2A6  00                 	db	0
  6717   00F2A7  00                 	db	0
  6718   00F2A8  00                 	db	0
  6719   00F2A9  00                 	db	0
  6720   00F2AA  00                 	db	0
  6721   00F2AB  00                 	db	0
  6722   00F2AC  00                 	db	0
  6723   00F2AD  00                 	db	0
  6724   00F2AE  00                 	db	0
  6725   00F2AF  00                 	db	0
  6726   00F2B0  00                 	db	0
  6727   00F2B1  00                 	db	0
  6728   00F2B2  00                 	db	0
  6729   00F2B3  00                 	db	0
  6730   00F2B4  00                 	db	0
  6731   00F2B5  00                 	db	0
  6732   00F2B6  00                 	db	0
  6733   00F2B7  00                 	db	0
  6734   00F2B8  00                 	db	0
  6735   00F2B9  00                 	db	0
  6736   00F2BA  00                 	db	0
  6737   00F2BB  00                 	db	0
  6738   00F2BC  00                 	db	0
  6739   00F2BD  00                 	db	0
  6740   00F2BE  00                 	db	0
  6741   00F2BF  00                 	db	0
  6742   00F2C0  00                 	db	0
  6743   00F2C1  00                 	db	0
  6744   00F2C2  00                 	db	0
  6745   00F2C3  00                 	db	0
  6746   00F2C4  00                 	db	0
  6747   00F2C5  00                 	db	0
  6748   00F2C6  00                 	db	0
  6749   00F2C7  00                 	db	0
  6750   00F2C8  00                 	db	0
  6751   00F2C9  00                 	db	0
  6752   00F2CA  00                 	db	0
  6753   00F2CB  00                 	db	0
  6754   00F2CC  00                 	db	0
  6755   00F2CD  00                 	db	0
  6756   00F2CE  00                 	db	0
  6757   00F2CF  00                 	db	0
  6758   00F2D0  00                 	db	0
  6759   00F2D1  00                 	db	0
  6760   00F2D2  00                 	db	0
  6761   00F2D3  00                 	db	0
  6762   00F2D4  00                 	db	0
  6763   00F2D5  00                 	db	0
  6764   00F2D6  00                 	db	0
  6765   00F2D7  00                 	db	0
  6766   00F2D8  00                 	db	0
  6767   00F2D9  00                 	db	0
  6768   00F2DA  00                 	db	0
  6769   00F2DB  00                 	db	0
  6770   00F2DC  00                 	db	0
  6771   00F2DD  00                 	db	0
  6772   00F2DE  00                 	db	0
  6773   00F2DF  00                 	db	0
  6774   00F2E0  00                 	db	0
  6775   00F2E1  00                 	db	0
  6776   00F2E2  00                 	db	0
  6777   00F2E3  00                 	db	0
  6778   00F2E4  00                 	db	0
  6779   00F2E5  00                 	db	0
  6780   00F2E6  00                 	db	0
  6781   00F2E7  00                 	db	0
  6782   00F2E8  00                 	db	0
  6783   00F2E9  00                 	db	0
  6784   00F2EA  00                 	db	0
  6785   00F2EB  00                 	db	0
  6786   00F2EC  00                 	db	0
  6787   00F2ED  00                 	db	0
  6788   00F2EE  00                 	db	0
  6789   00F2EF  00                 	db	0
  6790   00F2F0  00                 	db	0
  6791   00F2F1  00                 	db	0
  6792   00F2F2  00                 	db	0
  6793   00F2F3  00                 	db	0
  6794   00F2F4  00                 	db	0
  6795   00F2F5  00                 	db	0
  6796   00F2F6  00                 	db	0
  6797   00F2F7  00                 	db	0
  6798   00F2F8  00                 	db	0
  6799   00F2F9  00                 	db	0
  6800   00F2FA  00                 	db	0
  6801   00F2FB  00                 	db	0
  6802   00F2FC  00                 	db	0
  6803   00F2FD  00                 	db	0
  6804   00F2FE  00                 	db	0
  6805   00F2FF  00                 	db	0
  6806   00F300  00                 	db	0
  6807   00F301  00                 	db	0
  6808   00F302  00                 	db	0
  6809   00F303  00                 	db	0
  6810   00F304  00                 	db	0
  6811   00F305  00                 	db	0
  6812   00F306  00                 	db	0
  6813   00F307  00                 	db	0
  6814   00F308  00                 	db	0
  6815   00F309  00                 	db	0
  6816   00F30A  00                 	db	0
  6817   00F30B  00                 	db	0
  6818   00F30C  00                 	db	0
  6819   00F30D  00                 	db	0
  6820   00F30E  00                 	db	0
  6821   00F30F  00                 	db	0
  6822   00F310  00                 	db	0
  6823   00F311  00                 	db	0
  6824   00F312  00                 	db	0
  6825   00F313  00                 	db	0
  6826   00F314  00                 	db	0
  6827   00F315  00                 	db	0
  6828   00F316  00                 	db	0
  6829   00F317  00                 	db	0
  6830   00F318  00                 	db	0
  6831   00F319  00                 	db	0
  6832   00F31A  00                 	db	0
  6833   00F31B  00                 	db	0
  6834   00F31C  00                 	db	0
  6835   00F31D  00                 	db	0
  6836   00F31E  00                 	db	0
  6837   00F31F  00                 	db	0
  6838   00F320  00                 	db	0
  6839   00F321  00                 	db	0
  6840   00F322  00                 	db	0
  6841   00F323  00                 	db	0
  6842   00F324  00                 	db	0
  6843   00F325  00                 	db	0
  6844   00F326  00                 	db	0
  6845   00F327  00                 	db	0
  6846   00F328  00                 	db	0
  6847   00F329  00                 	db	0
  6848   00F32A  00                 	db	0
  6849   00F32B  00                 	db	0
  6850   00F32C  00                 	db	0
  6851   00F32D  00                 	db	0
  6852   00F32E  00                 	db	0
  6853   00F32F  00                 	db	0
  6854   00F330  00                 	db	0
  6855   00F331  00                 	db	0
  6856   00F332  00                 	db	0
  6857   00F333  00                 	db	0
  6858   00F334  00                 	db	0
  6859   00F335  00                 	db	0
  6860   00F336  00                 	db	0
  6861   00F337  00                 	db	0
  6862   00F338  00                 	db	0
  6863   00F339  00                 	db	0
  6864   00F33A  00                 	db	0
  6865   00F33B  00                 	db	0
  6866   00F33C  00                 	db	0
  6867   00F33D  00                 	db	0
  6868   00F33E  00                 	db	0
  6869   00F33F  00                 	db	0
  6870   00F340  00                 	db	0
  6871   00F341  00                 	db	0
  6872   00F342  00                 	db	0
  6873   00F343  00                 	db	0
  6874   00F344  00                 	db	0
  6875   00F345  00                 	db	0
  6876   00F346  00                 	db	0
  6877   00F347  00                 	db	0
  6878   00F348  00                 	db	0
  6879   00F349  00                 	db	0
  6880   00F34A  00                 	db	0
  6881   00F34B  00                 	db	0
  6882   00F34C  00                 	db	0
  6883   00F34D  00                 	db	0
  6884   00F34E  00                 	db	0
  6885   00F34F  00                 	db	0
  6886   00F350  00                 	db	0
  6887   00F351  00                 	db	0
  6888   00F352  00                 	db	0
  6889   00F353  00                 	db	0
  6890   00F354  00                 	db	0
  6891   00F355  00                 	db	0
  6892   00F356  00                 	db	0
  6893   00F357  00                 	db	0
  6894   00F358  00                 	db	0
  6895   00F359  00                 	db	0
  6896   00F35A  00                 	db	0
  6897   00F35B  00                 	db	0
  6898   00F35C  00                 	db	0
  6899   00F35D  00                 	db	0
  6900   00F35E  00                 	db	0
  6901   00F35F  00                 	db	0
  6902   00F360  00                 	db	0
  6903   00F361  00                 	db	0
  6904   00F362  00                 	db	0
  6905   00F363  00                 	db	0
  6906   00F364  00                 	db	0
  6907   00F365  00                 	db	0
  6908   00F366  00                 	db	0
  6909   00F367  00                 	db	0
  6910   00F368  00                 	db	0
  6911   00F369  00                 	db	0
  6912   00F36A  00                 	db	0
  6913   00F36B  00                 	db	0
  6914   00F36C  00                 	db	0
  6915   00F36D  00                 	db	0
  6916   00F36E  00                 	db	0
  6917   00F36F  00                 	db	0
  6918   00F370  00                 	db	0
  6919   00F371  00                 	db	0
  6920   00F372  00                 	db	0
  6921   00F373  00                 	db	0
  6922   00F374  00                 	db	0
  6923   00F375  00                 	db	0
  6924   00F376  00                 	db	0
  6925   00F377  00                 	db	0
  6926   00F378  00                 	db	0
  6927   00F379  00                 	db	0
  6928   00F37A  00                 	db	0
  6929   00F37B  00                 	db	0
  6930   00F37C  00                 	db	0
  6931   00F37D  00                 	db	0
  6932   00F37E  00                 	db	0
  6933   00F37F  00                 	db	0
  6934   00F380  00                 	db	0
  6935   00F381  00                 	db	0
  6936   00F382  00                 	db	0
  6937   00F383  00                 	db	0
  6938   00F384  00                 	db	0
  6939   00F385  00                 	db	0
  6940   00F386  00                 	db	0
  6941   00F387  00                 	db	0
  6942   00F388  00                 	db	0
  6943   00F389  00                 	db	0
  6944   00F38A  00                 	db	0
  6945   00F38B  00                 	db	0
  6946   00F38C  00                 	db	0
  6947   00F38D  00                 	db	0
  6948   00F38E  00                 	db	0
  6949   00F38F  00                 	db	0
  6950   00F390  00                 	db	0
  6951   00F391  00                 	db	0
  6952   00F392  00                 	db	0
  6953   00F393  00                 	db	0
  6954   00F394  00                 	db	0
  6955   00F395  00                 	db	0
  6956   00F396  00                 	db	0
  6957   00F397  00                 	db	0
  6958   00F398  00                 	db	0
  6959   00F399  00                 	db	0
  6960   00F39A  00                 	db	0
  6961   00F39B  00                 	db	0
  6962   00F39C  00                 	db	0
  6963   00F39D  00                 	db	0
  6964   00F39E  00                 	db	0
  6965   00F39F  00                 	db	0
  6966   00F3A0  00                 	db	0
  6967   00F3A1  00                 	db	0
  6968   00F3A2  00                 	db	0
  6969   00F3A3  00                 	db	0
  6970   00F3A4  00                 	db	0
  6971   00F3A5  00                 	db	0
  6972   00F3A6  00                 	db	0
  6973   00F3A7  00                 	db	0
  6974   00F3A8  00                 	db	0
  6975   00F3A9  00                 	db	0
  6976   00F3AA  00                 	db	0
  6977   00F3AB  00                 	db	0
  6978   00F3AC  00                 	db	0
  6979   00F3AD  00                 	db	0
  6980   00F3AE  00                 	db	0
  6981   00F3AF  00                 	db	0
  6982   00F3B0  00                 	db	0
  6983   00F3B1  00                 	db	0
  6984   00F3B2  00                 	db	0
  6985   00F3B3  00                 	db	0
  6986   00F3B4  00                 	db	0
  6987   00F3B5  00                 	db	0
  6988   00F3B6  00                 	db	0
  6989   00F3B7  00                 	db	0
  6990   00F3B8  00                 	db	0
  6991   00F3B9  00                 	db	0
  6992   00F3BA  00                 	db	0
  6993   00F3BB  00                 	db	0
  6994   00F3BC  00                 	db	0
  6995   00F3BD  00                 	db	0
  6996   00F3BE  00                 	db	0
  6997   00F3BF  00                 	db	0
  6998   00F3C0  00                 	db	0
  6999   00F3C1  00                 	db	0
  7000   00F3C2  00                 	db	0
  7001   00F3C3  00                 	db	0
  7002   00F3C4  00                 	db	0
  7003   00F3C5  00                 	db	0
  7004   00F3C6  00                 	db	0
  7005   00F3C7  00                 	db	0
  7006   00F3C8  00                 	db	0
  7007   00F3C9  00                 	db	0
  7008   00F3CA  00                 	db	0
  7009   00F3CB  00                 	db	0
  7010   00F3CC  00                 	db	0
  7011   00F3CD  00                 	db	0
  7012   00F3CE  00                 	db	0
  7013   00F3CF  00                 	db	0
  7014   00F3D0  00                 	db	0
  7015   00F3D1  00                 	db	0
  7016   00F3D2  00                 	db	0
  7017   00F3D3  00                 	db	0
  7018   00F3D4  00                 	db	0
  7019   00F3D5  00                 	db	0
  7020   00F3D6  00                 	db	0
  7021   00F3D7  00                 	db	0
  7022   00F3D8  00                 	db	0
  7023   00F3D9  00                 	db	0
  7024   00F3DA  00                 	db	0
  7025   00F3DB  00                 	db	0
  7026   00F3DC  00                 	db	0
  7027   00F3DD  00                 	db	0
  7028   00F3DE  00                 	db	0
  7029   00F3DF  00                 	db	0
  7030   00F3E0  00                 	db	0
  7031   00F3E1  00                 	db	0
  7032   00F3E2  00                 	db	0
  7033   00F3E3  00                 	db	0
  7034   00F3E4  00                 	db	0
  7035   00F3E5  00                 	db	0
  7036   00F3E6  00                 	db	0
  7037   00F3E7  00                 	db	0
  7038   00F3E8  00                 	db	0
  7039   00F3E9  00                 	db	0
  7040   00F3EA  00                 	db	0
  7041   00F3EB  00                 	db	0
  7042   00F3EC  00                 	db	0
  7043   00F3ED  00                 	db	0
  7044   00F3EE  00                 	db	0
  7045   00F3EF  00                 	db	0
  7046   00F3F0  00                 	db	0
  7047   00F3F1  00                 	db	0
  7048   00F3F2  00                 	db	0
  7049   00F3F3  00                 	db	0
  7050   00F3F4  00                 	db	0
  7051   00F3F5  00                 	db	0
  7052   00F3F6  00                 	db	0
  7053   00F3F7  00                 	db	0
  7054   00F3F8  00                 	db	0
  7055   00F3F9  00                 	db	0
  7056   00F3FA  00                 	db	0
  7057   00F3FB  00                 	db	0
  7058   00F3FC  00                 	db	0
  7059   00F3FD  00                 	db	0
  7060   00F3FE  00                 	db	0
  7061   00F3FF  00                 	db	0
  7062   00F400  00                 	db	0
  7063   00F401  00                 	db	0
  7064   00F402  00                 	db	0
  7065   00F403  00                 	db	0
  7066   00F404  00                 	db	0
  7067   00F405  00                 	db	0
  7068   00F406  00                 	db	0
  7069   00F407  00                 	db	0
  7070   00F408  00                 	db	0
  7071   00F409  00                 	db	0
  7072   00F40A  00                 	db	0
  7073   00F40B  00                 	db	0
  7074   00F40C  00                 	db	0
  7075   00F40D  00                 	db	0
  7076   00F40E  00                 	db	0
  7077   00F40F  00                 	db	0
  7078   00F410  00                 	db	0
  7079   00F411  00                 	db	0
  7080   00F412  00                 	db	0
  7081   00F413  00                 	db	0
  7082   00F414  00                 	db	0
  7083   00F415  00                 	db	0
  7084   00F416  00                 	db	0
  7085   00F417  00                 	db	0
  7086   00F418  00                 	db	0
  7087   00F419  00                 	db	0
  7088   00F41A  00                 	db	0
  7089   00F41B  00                 	db	0
  7090   00F41C  00                 	db	0
  7091   00F41D  00                 	db	0
  7092   00F41E  00                 	db	0
  7093   00F41F  00                 	db	0
  7094   00F420  00                 	db	0
  7095   00F421  00                 	db	0
  7096   00F422  00                 	db	0
  7097   00F423  00                 	db	0
  7098   00F424  00                 	db	0
  7099   00F425  00                 	db	0
  7100   00F426  00                 	db	0
  7101   00F427  00                 	db	0
  7102   00F428  00                 	db	0
  7103   00F429  00                 	db	0
  7104   00F42A  00                 	db	0
  7105   00F42B  00                 	db	0
  7106   00F42C  00                 	db	0
  7107   00F42D  00                 	db	0
  7108   00F42E  00                 	db	0
  7109   00F42F  00                 	db	0
  7110   00F430  00                 	db	0
  7111   00F431  00                 	db	0
  7112   00F432  00                 	db	0
  7113   00F433  00                 	db	0
  7114   00F434  00                 	db	0
  7115   00F435  00                 	db	0
  7116   00F436  00                 	db	0
  7117   00F437  00                 	db	0
  7118   00F438  00                 	db	0
  7119   00F439  00                 	db	0
  7120   00F43A  00                 	db	0
  7121   00F43B  00                 	db	0
  7122   00F43C  00                 	db	0
  7123   00F43D  00                 	db	0
  7124   00F43E  00                 	db	0
  7125   00F43F  00                 	db	0
  7126   00F440  00                 	db	0
  7127   00F441  00                 	db	0
  7128   00F442  00                 	db	0
  7129   00F443  00                 	db	0
  7130   00F444  00                 	db	0
  7131   00F445  00                 	db	0
  7132   00F446  00                 	db	0
  7133   00F447  00                 	db	0
  7134   00F448  00                 	db	0
  7135   00F449  00                 	db	0
  7136   00F44A  00                 	db	0
  7137   00F44B  00                 	db	0
  7138   00F44C  00                 	db	0
  7139   00F44D  00                 	db	0
  7140   00F44E  00                 	db	0
  7141   00F44F  00                 	db	0
  7142   00F450  00                 	db	0
  7143   00F451  00                 	db	0
  7144   00F452  00                 	db	0
  7145   00F453  00                 	db	0
  7146   00F454  00                 	db	0
  7147   00F455  00                 	db	0
  7148   00F456  00                 	db	0
  7149   00F457  00                 	db	0
  7150   00F458  00                 	db	0
  7151   00F459  00                 	db	0
  7152   00F45A  00                 	db	0
  7153   00F45B  00                 	db	0
  7154   00F45C  00                 	db	0
  7155   00F45D  00                 	db	0
  7156   00F45E  00                 	db	0
  7157   00F45F  00                 	db	0
  7158   00F460  00                 	db	0
  7159   00F461  00                 	db	0
  7160   00F462  00                 	db	0
  7161   00F463  00                 	db	0
  7162   00F464  00                 	db	0
  7163   00F465  00                 	db	0
  7164   00F466  00                 	db	0
  7165   00F467  00                 	db	0
  7166   00F468  00                 	db	0
  7167   00F469  00                 	db	0
  7168   00F46A  00                 	db	0
  7169   00F46B  00                 	db	0
  7170   00F46C  00                 	db	0
  7171   00F46D  00                 	db	0
  7172   00F46E  00                 	db	0
  7173   00F46F  00                 	db	0
  7174   00F470  00                 	db	0
  7175   00F471  00                 	db	0
  7176   00F472  00                 	db	0
  7177   00F473  00                 	db	0
  7178   00F474  00                 	db	0
  7179   00F475  00                 	db	0
  7180   00F476  00                 	db	0
  7181   00F477  00                 	db	0
  7182   00F478  00                 	db	0
  7183   00F479  00                 	db	0
  7184   00F47A  00                 	db	0
  7185   00F47B  00                 	db	0
  7186   00F47C  00                 	db	0
  7187   00F47D  00                 	db	0
  7188   00F47E  00                 	db	0
  7189   00F47F  00                 	db	0
  7190   00F480  00                 	db	0
  7191   00F481  00                 	db	0
  7192   00F482  00                 	db	0
  7193   00F483  00                 	db	0
  7194   00F484  00                 	db	0
  7195   00F485  00                 	db	0
  7196   00F486  00                 	db	0
  7197   00F487  00                 	db	0
  7198   00F488  00                 	db	0
  7199   00F489  00                 	db	0
  7200   00F48A  00                 	db	0
  7201   00F48B  00                 	db	0
  7202   00F48C  00                 	db	0
  7203   00F48D  00                 	db	0
  7204   00F48E  00                 	db	0
  7205   00F48F  00                 	db	0
  7206   00F490  00                 	db	0
  7207   00F491  00                 	db	0
  7208   00F492  00                 	db	0
  7209   00F493  00                 	db	0
  7210   00F494  00                 	db	0
  7211   00F495  00                 	db	0
  7212   00F496  00                 	db	0
  7213   00F497  00                 	db	0
  7214   00F498  00                 	db	0
  7215   00F499  00                 	db	0
  7216   00F49A  00                 	db	0
  7217   00F49B  00                 	db	0
  7218   00F49C  00                 	db	0
  7219   00F49D  00                 	db	0
  7220   00F49E  00                 	db	0
  7221   00F49F  00                 	db	0
  7222   00F4A0  00                 	db	0
  7223   00F4A1  00                 	db	0
  7224   00F4A2  00                 	db	0
  7225   00F4A3  00                 	db	0
  7226   00F4A4  00                 	db	0
  7227   00F4A5  00                 	db	0
  7228   00F4A6  00                 	db	0
  7229   00F4A7  00                 	db	0
  7230   00F4A8  00                 	db	0
  7231   00F4A9  00                 	db	0
  7232   00F4AA  00                 	db	0
  7233   00F4AB  00                 	db	0
  7234   00F4AC  00                 	db	0
  7235   00F4AD  00                 	db	0
  7236   00F4AE  00                 	db	0
  7237   00F4AF  00                 	db	0
  7238   00F4B0  00                 	db	0
  7239   00F4B1  00                 	db	0
  7240   00F4B2  00                 	db	0
  7241   00F4B3  00                 	db	0
  7242   00F4B4  00                 	db	0
  7243   00F4B5  00                 	db	0
  7244   00F4B6  00                 	db	0
  7245   00F4B7  00                 	db	0
  7246   00F4B8  00                 	db	0
  7247   00F4B9  00                 	db	0
  7248   00F4BA  00                 	db	0
  7249   00F4BB  00                 	db	0
  7250   00F4BC  00                 	db	0
  7251   00F4BD  00                 	db	0
  7252   00F4BE  00                 	db	0
  7253   00F4BF  00                 	db	0
  7254   00F4C0  00                 	db	0
  7255   00F4C1  00                 	db	0
  7256   00F4C2  00                 	db	0
  7257   00F4C3  00                 	db	0
  7258   00F4C4  00                 	db	0
  7259   00F4C5  00                 	db	0
  7260   00F4C6  00                 	db	0
  7261   00F4C7  00                 	db	0
  7262   00F4C8  00                 	db	0
  7263   00F4C9  00                 	db	0
  7264   00F4CA  00                 	db	0
  7265   00F4CB  00                 	db	0
  7266   00F4CC  00                 	db	0
  7267   00F4CD  00                 	db	0
  7268   00F4CE  00                 	db	0
  7269   00F4CF  00                 	db	0
  7270   00F4D0  00                 	db	0
  7271   00F4D1  00                 	db	0
  7272   00F4D2  00                 	db	0
  7273   00F4D3  00                 	db	0
  7274   00F4D4  00                 	db	0
  7275   00F4D5  00                 	db	0
  7276   00F4D6  00                 	db	0
  7277   00F4D7  00                 	db	0
  7278   00F4D8  00                 	db	0
  7279   00F4D9  00                 	db	0
  7280   00F4DA  00                 	db	0
  7281   00F4DB  00                 	db	0
  7282   00F4DC  00                 	db	0
  7283   00F4DD  00                 	db	0
  7284   00F4DE  00                 	db	0
  7285   00F4DF  00                 	db	0
  7286   00F4E0  00                 	db	0
  7287   00F4E1  00                 	db	0
  7288   00F4E2  00                 	db	0
  7289   00F4E3  00                 	db	0
  7290   00F4E4                     __end_of_bios:
  7291                           	callstack 0
  7292   00F4E4                     _rom:
  7293                           	callstack 0
  7294   00F4E4  00                 	db	0
  7295   00F4E5  00                 	db	0
  7296   00F4E6  00                 	db	0
  7297   00F4E7  F3                 	db	243
  7298   00F4E8  C3                 	db	195
  7299   00F4E9  87                 	db	135
  7300   00F4EA  00                 	db	0
  7301   00F4EB  FF                 	db	255
  7302   00F4EC  FF                 	db	255
  7303   00F4ED  FF                 	db	255
  7304   00F4EE  FF                 	db	255
  7305   00F4EF  FF                 	db	255
  7306   00F4F0  FF                 	db	255
  7307   00F4F1  FF                 	db	255
  7308   00F4F2  FF                 	db	255
  7309   00F4F3  FF                 	db	255
  7310   00F4F4  FF                 	db	255
  7311   00F4F5  FF                 	db	255
  7312   00F4F6  FF                 	db	255
  7313   00F4F7  FF                 	db	255
  7314   00F4F8  FF                 	db	255
  7315   00F4F9  FF                 	db	255
  7316   00F4FA  FF                 	db	255
  7317   00F4FB  FF                 	db	255
  7318   00F4FC  FF                 	db	255
  7319   00F4FD  FF                 	db	255
  7320   00F4FE  FF                 	db	255
  7321   00F4FF  FF                 	db	255
  7322   00F500  FF                 	db	255
  7323   00F501  FF                 	db	255
  7324   00F502  FF                 	db	255
  7325   00F503  FF                 	db	255
  7326   00F504  FF                 	db	255
  7327   00F505  FF                 	db	255
  7328   00F506  FF                 	db	255
  7329   00F507  FF                 	db	255
  7330   00F508  FF                 	db	255
  7331   00F509  FF                 	db	255
  7332   00F50A  FF                 	db	255
  7333   00F50B  FF                 	db	255
  7334   00F50C  FF                 	db	255
  7335   00F50D  FF                 	db	255
  7336   00F50E  FF                 	db	255
  7337   00F50F  FF                 	db	255
  7338   00F510  FF                 	db	255
  7339   00F511  FF                 	db	255
  7340   00F512  FF                 	db	255
  7341   00F513  FF                 	db	255
  7342   00F514  FF                 	db	255
  7343   00F515  FF                 	db	255
  7344   00F516  FF                 	db	255
  7345   00F517  FF                 	db	255
  7346   00F518  FF                 	db	255
  7347   00F519  FF                 	db	255
  7348   00F51A  FF                 	db	255
  7349   00F51B  FF                 	db	255
  7350   00F51C  FF                 	db	255
  7351   00F51D  FF                 	db	255
  7352   00F51E  FF                 	db	255
  7353   00F51F  FF                 	db	255
  7354   00F520  FF                 	db	255
  7355   00F521  FF                 	db	255
  7356   00F522  FF                 	db	255
  7357   00F523  FF                 	db	255
  7358   00F524  FF                 	db	255
  7359   00F525  FF                 	db	255
  7360   00F526  FF                 	db	255
  7361   00F527  FF                 	db	255
  7362   00F528  FF                 	db	255
  7363   00F529  FF                 	db	255
  7364   00F52A  FF                 	db	255
  7365   00F52B  FF                 	db	255
  7366   00F52C  FF                 	db	255
  7367   00F52D  FF                 	db	255
  7368   00F52E  FF                 	db	255
  7369   00F52F  FF                 	db	255
  7370   00F530  FF                 	db	255
  7371   00F531  FF                 	db	255
  7372   00F532  FF                 	db	255
  7373   00F533  FF                 	db	255
  7374   00F534  FF                 	db	255
  7375   00F535  FF                 	db	255
  7376   00F536  FF                 	db	255
  7377   00F537  FF                 	db	255
  7378   00F538  FF                 	db	255
  7379   00F539  FF                 	db	255
  7380   00F53A  FF                 	db	255
  7381   00F53B  FF                 	db	255
  7382   00F53C  FF                 	db	255
  7383   00F53D  FF                 	db	255
  7384   00F53E  FF                 	db	255
  7385   00F53F  FF                 	db	255
  7386   00F540  FF                 	db	255
  7387   00F541  FF                 	db	255
  7388   00F542  FF                 	db	255
  7389   00F543  FF                 	db	255
  7390   00F544  FF                 	db	255
  7391   00F545  FF                 	db	255
  7392   00F546  FF                 	db	255
  7393   00F547  FF                 	db	255
  7394   00F548  FF                 	db	255
  7395   00F549  FF                 	db	255
  7396   00F54A  FF                 	db	255
  7397   00F54B  FF                 	db	255
  7398   00F54C  FF                 	db	255
  7399   00F54D  FF                 	db	255
  7400   00F54E  FF                 	db	255
  7401   00F54F  FF                 	db	255
  7402   00F550  FF                 	db	255
  7403   00F551  FF                 	db	255
  7404   00F552  FF                 	db	255
  7405   00F553  FF                 	db	255
  7406   00F554  FF                 	db	255
  7407   00F555  FF                 	db	255
  7408   00F556  FF                 	db	255
  7409   00F557  FF                 	db	255
  7410   00F558  FF                 	db	255
  7411   00F559  FF                 	db	255
  7412   00F55A  FF                 	db	255
  7413   00F55B  FF                 	db	255
  7414   00F55C  FF                 	db	255
  7415   00F55D  FF                 	db	255
  7416   00F55E  FF                 	db	255
  7417   00F55F  FF                 	db	255
  7418   00F560  FF                 	db	255
  7419   00F561  FF                 	db	255
  7420   00F562  FF                 	db	255
  7421   00F563  FF                 	db	255
  7422   00F564  0D                 	db	13
  7423   00F565  0A                 	db	10
  7424   00F566  49                 	db	73
  7425   00F567  50                 	db	80
  7426   00F568  4C                 	db	76
  7427   00F569  3A                 	db	58
  7428   00F56A  00                 	db	0
  7429   00F56B  F3                 	db	243
  7430   00F56C  31                 	db	49
  7431   00F56D  80                 	db	128
  7432   00F56E  00                 	db	0
  7433   00F56F  21                 	db	33
  7434   00F570  80                 	db	128
  7435   00F571  00                 	db	0
  7436   00F572  CD                 	db	205
  7437   00F573  29                 	db	41
  7438   00F574  03                 	db	3
  7439   00F575  3E                 	db	62
  7440   00F576  7F                 	db	127
  7441   00F577  3C                 	db	60
  7442   00F578  EA                 	db	234
  7443   00F579  CC                 	db	204
  7444   00F57A  00                 	db	0
  7445   00F57B  01                 	db	1
  7446   00F57C  FF                 	db	255
  7447   00F57D  FF                 	db	255
  7448   00F57E  C5                 	db	197
  7449   00F57F  F1                 	db	241
  7450   00F580  F5                 	db	245
  7451   00F581  D1                 	db	209
  7452   00F582  7B                 	db	123
  7453   00F583  E6                 	db	230
  7454   00F584  22                 	db	34
  7455   00F585  CA                 	db	202
  7456   00F586  7C                 	db	124
  7457   00F587  02                 	db	2
  7458   00F588  7B                 	db	123
  7459   00F589  E6                 	db	230
  7460   00F58A  2A                 	db	42
  7461   00F58B  FE                 	db	254
  7462   00F58C  02                 	db	2
  7463   00F58D  CA                 	db	202
  7464   00F58E  89                 	db	137
  7465   00F58F  01                 	db	1
  7466   00F590  7B                 	db	123
  7467   00F591  E6                 	db	230
  7468   00F592  0A                 	db	10
  7469   00F593  FE                 	db	254
  7470   00F594  0A                 	db	10
  7471   00F595  CA                 	db	202
  7472   00F596  D9                 	db	217
  7473   00F597  01                 	db	1
  7474   00F598  7B                 	db	123
  7475   00F599  E6                 	db	230
  7476   00F59A  2A                 	db	42
  7477   00F59B  FE                 	db	254
  7478   00F59C  22                 	db	34
  7479   00F59D  C2                 	db	194
  7480   00F59E  22                 	db	34
  7481   00F59F  03                 	db	3
  7482   00F5A0  01                 	db	1
  7483   00F5A1  00                 	db	0
  7484   00F5A2  00                 	db	0
  7485   00F5A3  C5                 	db	197
  7486   00F5A4  F1                 	db	241
  7487   00F5A5  F5                 	db	245
  7488   00F5A6  D1                 	db	209
  7489   00F5A7  7B                 	db	123
  7490   00F5A8  E6                 	db	230
  7491   00F5A9  2A                 	db	42
  7492   00F5AA  CA                 	db	202
  7493   00F5AB  2A                 	db	42
  7494   00F5AC  02                 	db	2
  7495   00F5AD  C3                 	db	195
  7496   00F5AE  22                 	db	34
  7497   00F5AF  03                 	db	3
  7498   00F5B0  01                 	db	1
  7499   00F5B1  FF                 	db	255
  7500   00F5B2  00                 	db	0
  7501   00F5B3  ED                 	db	237
  7502   00F5B4  4C                 	db	76
  7503   00F5B5  78                 	db	120
  7504   00F5B6  B1                 	db	177
  7505   00F5B7  C2                 	db	194
  7506   00F5B8  D0                 	db	208
  7507   00F5B9  02                 	db	2
  7508   00F5BA  3E                 	db	62
  7509   00F5BB  C0                 	db	192
  7510   00F5BC  ED                 	db	237
  7511   00F5BD  39                 	db	57
  7512   00F5BE  3F                 	db	63
  7513   00F5BF  3E                 	db	62
  7514   00F5C0  00                 	db	0
  7515   00F5C1  ED                 	db	237
  7516   00F5C2  39                 	db	57
  7517   00F5C3  F2                 	db	242
  7518   00F5C4  3E                 	db	62
  7519   00F5C5  00                 	db	0
  7520   00F5C6  ED                 	db	237
  7521   00F5C7  39                 	db	57
  7522   00F5C8  F6                 	db	246
  7523   00F5C9  3E                 	db	62
  7524   00F5CA  7F                 	db	127
  7525   00F5CB  ED                 	db	237
  7526   00F5CC  39                 	db	57
  7527   00F5CD  FE                 	db	254
  7528   00F5CE  ED                 	db	237
  7529   00F5CF  38                 	db	56
  7530   00F5D0  FE                 	db	254
  7531   00F5D1  E6                 	db	230
  7532   00F5D2  80                 	db	128
  7533   00F5D3  20                 	db	32
  7534   00F5D4  5A                 	db	90
  7535   00F5D5  3E                 	db	62
  7536   00F5D6  E0                 	db	224
  7537   00F5D7  ED                 	db	237
  7538   00F5D8  39                 	db	57
  7539   00F5D9  FE                 	db	254
  7540   00F5DA  AF                 	db	175
  7541   00F5DB  ED                 	db	237
  7542   00F5DC  39                 	db	57
  7543   00F5DD  D2                 	db	210
  7544   00F5DE  ED                 	db	237
  7545   00F5DF  38                 	db	56
  7546   00F5E0  D2                 	db	210
  7547   00F5E1  E6                 	db	230
  7548   00F5E2  40                 	db	64
  7549   00F5E3  20                 	db	32
  7550   00F5E4  4A                 	db	74
  7551   00F5E5  3E                 	db	62
  7552   00F5E6  10                 	db	16
  7553   00F5E7  ED                 	db	237
  7554   00F5E8  39                 	db	57
  7555   00F5E9  F2                 	db	242
  7556   00F5EA  3E                 	db	62
  7557   00F5EB  80                 	db	128
  7558   00F5EC  ED                 	db	237
  7559   00F5ED  39                 	db	57
  7560   00F5EE  DF                 	db	223
  7561   00F5EF  3E                 	db	62
  7562   00F5F0  FF                 	db	255
  7563   00F5F1  ED                 	db	237
  7564   00F5F2  39                 	db	57
  7565   00F5F3  DE                 	db	222
  7566   00F5F4  21                 	db	33
  7567   00F5F5  19                 	db	25
  7568   00F5F6  01                 	db	1
  7569   00F5F7  CD                 	db	205
  7570   00F5F8  29                 	db	41
  7571   00F5F9  03                 	db	3
  7572   00F5FA  C3                 	db	195
  7573   00F5FB  22                 	db	34
  7574   00F5FC  03                 	db	3
  7575   00F5FD  5A                 	db	90
  7576   00F5FE  38                 	db	56
  7577   00F5FF  53                 	db	83
  7578   00F600  31                 	db	49
  7579   00F601  38                 	db	56
  7580   00F602  30                 	db	48
  7581   00F603  20                 	db	32
  7582   00F604  72                 	db	114
  7583   00F605  75                 	db	117
  7584   00F606  6E                 	db	110
  7585   00F607  6E                 	db	110
  7586   00F608  69                 	db	105
  7587   00F609  6E                 	db	110
  7588   00F60A  67                 	db	103
  7589   00F60B  20                 	db	32
  7590   00F60C  6D                 	db	109
  7591   00F60D  65                 	db	101
  7592   00F60E  6D                 	db	109
  7593   00F60F  6F                 	db	111
  7594   00F610  72                 	db	114
  7595   00F611  79                 	db	121
  7596   00F612  20                 	db	32
  7597   00F613  30                 	db	48
  7598   00F614  77                 	db	119
  7599   00F615  61                 	db	97
  7600   00F616  69                 	db	105
  7601   00F617  74                 	db	116
  7602   00F618  20                 	db	32
  7603   00F619  49                 	db	73
  7604   00F61A  2F                 	db	47
  7605   00F61B  4F                 	db	79
  7606   00F61C  20                 	db	32
  7607   00F61D  32                 	db	50
  7608   00F61E  77                 	db	119
  7609   00F61F  61                 	db	97
  7610   00F620  69                 	db	105
  7611   00F621  74                 	db	116
  7612   00F622  20                 	db	32
  7613   00F623  32                 	db	50
  7614   00F624  78                 	db	120
  7615   00F625  20                 	db	32
  7616   00F626  63                 	db	99
  7617   00F627  6C                 	db	108
  7618   00F628  6F                 	db	111
  7619   00F629  63                 	db	99
  7620   00F62A  6B                 	db	107
  7621   00F62B  0D                 	db	13
  7622   00F62C  0A                 	db	10
  7623   00F62D  0A                 	db	10
  7624   00F62E  00                 	db	0
  7625   00F62F  21                 	db	33
  7626   00F630  54                 	db	84
  7627   00F631  01                 	db	1
  7628   00F632  CD                 	db	205
  7629   00F633  29                 	db	41
  7630   00F634  03                 	db	3
  7631   00F635  C3                 	db	195
  7632   00F636  22                 	db	34
  7633   00F637  03                 	db	3
  7634   00F638  48                 	db	72
  7635   00F639  44                 	db	68
  7636   00F63A  36                 	db	54
  7637   00F63B  34                 	db	52
  7638   00F63C  31                 	db	49
  7639   00F63D  38                 	db	56
  7640   00F63E  30                 	db	48
  7641   00F63F  20                 	db	32
  7642   00F640  72                 	db	114
  7643   00F641  75                 	db	117
  7644   00F642  6E                 	db	110
  7645   00F643  6E                 	db	110
  7646   00F644  69                 	db	105
  7647   00F645  6E                 	db	110
  7648   00F646  67                 	db	103
  7649   00F647  20                 	db	32
  7650   00F648  6D                 	db	109
  7651   00F649  65                 	db	101
  7652   00F64A  6D                 	db	109
  7653   00F64B  6F                 	db	111
  7654   00F64C  72                 	db	114
  7655   00F64D  79                 	db	121
  7656   00F64E  20                 	db	32
  7657   00F64F  30                 	db	48
  7658   00F650  77                 	db	119
  7659   00F651  61                 	db	97
  7660   00F652  69                 	db	105
  7661   00F653  74                 	db	116
  7662   00F654  20                 	db	32
  7663   00F655  49                 	db	73
  7664   00F656  2F                 	db	47
  7665   00F657  4F                 	db	79
  7666   00F658  20                 	db	32
  7667   00F659  31                 	db	49
  7668   00F65A  77                 	db	119
  7669   00F65B  61                 	db	97
  7670   00F65C  69                 	db	105
  7671   00F65D  74                 	db	116
  7672   00F65E  20                 	db	32
  7673   00F65F  30                 	db	48
  7674   00F660  2E                 	db	46
  7675   00F661  35                 	db	53
  7676   00F662  78                 	db	120
  7677   00F663  20                 	db	32
  7678   00F664  63                 	db	99
  7679   00F665  6C                 	db	108
  7680   00F666  6F                 	db	111
  7681   00F667  63                 	db	99
  7682   00F668  6B                 	db	107
  7683   00F669  0D                 	db	13
  7684   00F66A  0A                 	db	10
  7685   00F66B  0A                 	db	10
  7686   00F66C  00                 	db	0
  7687   00F66D  21                 	db	33
  7688   00F66E  92                 	db	146
  7689   00F66F  01                 	db	1
  7690   00F670  CD                 	db	205
  7691   00F671  29                 	db	41
  7692   00F672  03                 	db	3
  7693   00F673  C3                 	db	195
  7694   00F674  22                 	db	34
  7695   00F675  03                 	db	3
  7696   00F676  69                 	db	105
  7697   00F677  38                 	db	56
  7698   00F678  30                 	db	48
  7699   00F679  38                 	db	56
  7700   00F67A  30                 	db	48
  7701   00F67B  20                 	db	32
  7702   00F67C  72                 	db	114
  7703   00F67D  75                 	db	117
  7704   00F67E  6E                 	db	110
  7705   00F67F  6E                 	db	110
  7706   00F680  69                 	db	105
  7707   00F681  6E                 	db	110
  7708   00F682  67                 	db	103
  7709   00F683  20                 	db	32
  7710   00F684  28                 	db	40
  7711   00F685  66                 	db	102
  7712   00F686  6C                 	db	108
  7713   00F687  61                 	db	97
  7714   00F688  67                 	db	103
  7715   00F689  20                 	db	32
  7716   00F68A  62                 	db	98
  7717   00F68B  69                 	db	105
  7718   00F68C  74                 	db	116
  7719   00F68D  32                 	db	50
  7720   00F68E  20                 	db	32
  7721   00F68F  69                 	db	105
  7722   00F690  73                 	db	115
  7723   00F691  20                 	db	32
  7724   00F692  50                 	db	80
  7725   00F693  61                 	db	97
  7726   00F694  72                 	db	114
  7727   00F695  69                 	db	105
  7728   00F696  74                 	db	116
  7729   00F697  79                 	db	121
  7730   00F698  20                 	db	32
  7731   00F699  61                 	db	97
  7732   00F69A  66                 	db	102
  7733   00F69B  74                 	db	116
  7734   00F69C  65                 	db	101
  7735   00F69D  72                 	db	114
  7736   00F69E  20                 	db	32
  7737   00F69F  61                 	db	97
  7738   00F6A0  72                 	db	114
  7739   00F6A1  69                 	db	105
  7740   00F6A2  74                 	db	116
  7741   00F6A3  68                 	db	104
  7742   00F6A4  6D                 	db	109
  7743   00F6A5  61                 	db	97
  7744   00F6A6  74                 	db	116
  7745   00F6A7  69                 	db	105
  7746   00F6A8  63                 	db	99
  7747   00F6A9  2C                 	db	44
  7748   00F6AA  20                 	db	32
  7749   00F6AB  62                 	db	98
  7750   00F6AC  69                 	db	105
  7751   00F6AD  74                 	db	116
  7752   00F6AE  35                 	db	53
  7753   00F6AF  33                 	db	51
  7754   00F6B0  31                 	db	49
  7755   00F6B1  20                 	db	32
  7756   00F6B2  69                 	db	105
  7757   00F6B3  73                 	db	115
  7758   00F6B4  20                 	db	32
  7759   00F6B5  30                 	db	48
  7760   00F6B6  30                 	db	48
  7761   00F6B7  31                 	db	49
  7762   00F6B8  29                 	db	41
  7763   00F6B9  0D                 	db	13
  7764   00F6BA  0A                 	db	10
  7765   00F6BB  0A                 	db	10
  7766   00F6BC  00                 	db	0
  7767   00F6BD  21                 	db	33
  7768   00F6BE  E2                 	db	226
  7769   00F6BF  01                 	db	1
  7770   00F6C0  CD                 	db	205
  7771   00F6C1  29                 	db	41
  7772   00F6C2  03                 	db	3
  7773   00F6C3  C3                 	db	195
  7774   00F6C4  22                 	db	34
  7775   00F6C5  03                 	db	3
  7776   00F6C6  75                 	db	117
  7777   00F6C7  50                 	db	80
  7778   00F6C8  44                 	db	68
  7779   00F6C9  38                 	db	56
  7780   00F6CA  30                 	db	48
  7781   00F6CB  38                 	db	56
  7782   00F6CC  30                 	db	48
  7783   00F6CD  41                 	db	65
  7784   00F6CE  20                 	db	32
  7785   00F6CF  72                 	db	114
  7786   00F6D0  75                 	db	117
  7787   00F6D1  6E                 	db	110
  7788   00F6D2  6E                 	db	110
  7789   00F6D3  69                 	db	105
  7790   00F6D4  6E                 	db	110
  7791   00F6D5  67                 	db	103
  7792   00F6D6  20                 	db	32
  7793   00F6D7  28                 	db	40
  7794   00F6D8  66                 	db	102
  7795   00F6D9  6C                 	db	108
  7796   00F6DA  61                 	db	97
  7797   00F6DB  67                 	db	103
  7798   00F6DC  20                 	db	32
  7799   00F6DD  62                 	db	98
  7800   00F6DE  69                 	db	105
  7801   00F6DF  74                 	db	116
  7802   00F6E0  32                 	db	50
  7803   00F6E1  20                 	db	32
  7804   00F6E2  69                 	db	105
  7805   00F6E3  73                 	db	115
  7806   00F6E4  20                 	db	32
  7807   00F6E5  50                 	db	80
  7808   00F6E6  61                 	db	97
  7809   00F6E7  72                 	db	114
  7810   00F6E8  69                 	db	105
  7811   00F6E9  74                 	db	116
  7812   00F6EA  79                 	db	121
  7813   00F6EB  20                 	db	32
  7814   00F6EC  61                 	db	97
  7815   00F6ED  66                 	db	102
  7816   00F6EE  74                 	db	116
  7817   00F6EF  65                 	db	101
  7818   00F6F0  72                 	db	114
  7819   00F6F1  20                 	db	32
  7820   00F6F2  61                 	db	97
  7821   00F6F3  72                 	db	114
  7822   00F6F4  69                 	db	105
  7823   00F6F5  74                 	db	116
  7824   00F6F6  68                 	db	104
  7825   00F6F7  6D                 	db	109
  7826   00F6F8  61                 	db	97
  7827   00F6F9  74                 	db	116
  7828   00F6FA  69                 	db	105
  7829   00F6FB  63                 	db	99
  7830   00F6FC  2C                 	db	44
  7831   00F6FD  20                 	db	32
  7832   00F6FE  62                 	db	98
  7833   00F6FF  69                 	db	105
  7834   00F700  74                 	db	116
  7835   00F701  33                 	db	51
  7836   00F702  31                 	db	49
  7837   00F703  20                 	db	32
  7838   00F704  69                 	db	105
  7839   00F705  73                 	db	115
  7840   00F706  20                 	db	32
  7841   00F707  31                 	db	49
  7842   00F708  31                 	db	49
  7843   00F709  29                 	db	41
  7844   00F70A  0D                 	db	13
  7845   00F70B  0A                 	db	10
  7846   00F70C  0A                 	db	10
  7847   00F70D  00                 	db	0
  7848   00F70E  21                 	db	33
  7849   00F70F  33                 	db	51
  7850   00F710  02                 	db	2
  7851   00F711  CD                 	db	205
  7852   00F712  29                 	db	41
  7853   00F713  03                 	db	3
  7854   00F714  C3                 	db	195
  7855   00F715  22                 	db	34
  7856   00F716  03                 	db	3
  7857   00F717  69                 	db	105
  7858   00F718  38                 	db	56
  7859   00F719  30                 	db	48
  7860   00F71A  38                 	db	56
  7861   00F71B  35                 	db	53
  7862   00F71C  20                 	db	32
  7863   00F71D  72                 	db	114
  7864   00F71E  75                 	db	117
  7865   00F71F  6E                 	db	110
  7866   00F720  6E                 	db	110
  7867   00F721  69                 	db	105
  7868   00F722  6E                 	db	110
  7869   00F723  67                 	db	103
  7870   00F724  20                 	db	32
  7871   00F725  28                 	db	40
  7872   00F726  66                 	db	102
  7873   00F727  6C                 	db	108
  7874   00F728  61                 	db	97
  7875   00F729  67                 	db	103
  7876   00F72A  20                 	db	32
  7877   00F72B  62                 	db	98
  7878   00F72C  69                 	db	105
  7879   00F72D  74                 	db	116
  7880   00F72E  32                 	db	50
  7881   00F72F  20                 	db	32
  7882   00F730  69                 	db	105
  7883   00F731  73                 	db	115
  7884   00F732  20                 	db	32
  7885   00F733  50                 	db	80
  7886   00F734  61                 	db	97
  7887   00F735  72                 	db	114
  7888   00F736  69                 	db	105
  7889   00F737  74                 	db	116
  7890   00F738  79                 	db	121
  7891   00F739  20                 	db	32
  7892   00F73A  61                 	db	97
  7893   00F73B  66                 	db	102
  7894   00F73C  74                 	db	116
  7895   00F73D  65                 	db	101
  7896   00F73E  72                 	db	114
  7897   00F73F  20                 	db	32
  7898   00F740  61                 	db	97
  7899   00F741  72                 	db	114
  7900   00F742  69                 	db	105
  7901   00F743  74                 	db	116
  7902   00F744  68                 	db	104
  7903   00F745  6D                 	db	109
  7904   00F746  61                 	db	97
  7905   00F747  74                 	db	116
  7906   00F748  69                 	db	105
  7907   00F749  63                 	db	99
  7908   00F74A  2C                 	db	44
  7909   00F74B  20                 	db	32
  7910   00F74C  62                 	db	98
  7911   00F74D  69                 	db	105
  7912   00F74E  74                 	db	116
  7913   00F74F  35                 	db	53
  7914   00F750  2C                 	db	44
  7915   00F751  31                 	db	49
  7916   00F752  20                 	db	32
  7917   00F753  77                 	db	119
  7918   00F754  72                 	db	114
  7919   00F755  69                 	db	105
  7920   00F756  74                 	db	116
  7921   00F757  61                 	db	97
  7922   00F758  62                 	db	98
  7923   00F759  6C                 	db	108
  7924   00F75A  65                 	db	101
  7925   00F75B  29                 	db	41
  7926   00F75C  0D                 	db	13
  7927   00F75D  0A                 	db	10
  7928   00F75E  0A                 	db	10
  7929   00F75F  00                 	db	0
  7930   00F760  21                 	db	33
  7931   00F761  85                 	db	133
  7932   00F762  02                 	db	2
  7933   00F763  CD                 	db	205
  7934   00F764  29                 	db	41
  7935   00F765  03                 	db	3
  7936   00F766  C3                 	db	195
  7937   00F767  22                 	db	34
  7938   00F768  03                 	db	3
  7939   00F769  4D                 	db	77
  7940   00F76A  59                 	db	89
  7941   00F76B  43                 	db	67
  7942   00F76C  50                 	db	80
  7943   00F76D  55                 	db	85
  7944   00F76E  38                 	db	56
  7945   00F76F  30                 	db	48
  7946   00F770  20                 	db	32
  7947   00F771  72                 	db	114
  7948   00F772  75                 	db	117
  7949   00F773  6E                 	db	110
  7950   00F774  6E                 	db	110
  7951   00F775  69                 	db	105
  7952   00F776  6E                 	db	110
  7953   00F777  67                 	db	103
  7954   00F778  20                 	db	32
  7955   00F779  28                 	db	40
  7956   00F77A  66                 	db	102
  7957   00F77B  6C                 	db	108
  7958   00F77C  61                 	db	97
  7959   00F77D  67                 	db	103
  7960   00F77E  20                 	db	32
  7961   00F77F  62                 	db	98
  7962   00F780  69                 	db	105
  7963   00F781  74                 	db	116
  7964   00F782  32                 	db	50
  7965   00F783  20                 	db	32
  7966   00F784  69                 	db	105
  7967   00F785  73                 	db	115
  7968   00F786  20                 	db	32
  7969   00F787  50                 	db	80
  7970   00F788  61                 	db	97
  7971   00F789  72                 	db	114
  7972   00F78A  69                 	db	105
  7973   00F78B  74                 	db	116
  7974   00F78C  79                 	db	121
  7975   00F78D  20                 	db	32
  7976   00F78E  61                 	db	97
  7977   00F78F  66                 	db	102
  7978   00F790  74                 	db	116
  7979   00F791  65                 	db	101
  7980   00F792  72                 	db	114
  7981   00F793  20                 	db	32
  7982   00F794  61                 	db	97
  7983   00F795  72                 	db	114
  7984   00F796  69                 	db	105
  7985   00F797  74                 	db	116
  7986   00F798  68                 	db	104
  7987   00F799  6D                 	db	109
  7988   00F79A  61                 	db	97
  7989   00F79B  74                 	db	116
  7990   00F79C  69                 	db	105
  7991   00F79D  63                 	db	99
  7992   00F79E  2C                 	db	44
  7993   00F79F  20                 	db	32
  7994   00F7A0  62                 	db	98
  7995   00F7A1  69                 	db	105
  7996   00F7A2  74                 	db	116
  7997   00F7A3  31                 	db	49
  7998   00F7A4  2C                 	db	44
  7999   00F7A5  35                 	db	53
  8000   00F7A6  20                 	db	32
  8001   00F7A7  61                 	db	97
  8002   00F7A8  6C                 	db	108
  8003   00F7A9  77                 	db	119
  8004   00F7AA  61                 	db	97
  8005   00F7AB  79                 	db	121
  8006   00F7AC  73                 	db	115
  8007   00F7AD  20                 	db	32
  8008   00F7AE  30                 	db	48
  8009   00F7AF  29                 	db	41
  8010   00F7B0  0D                 	db	13
  8011   00F7B1  0A                 	db	10
  8012   00F7B2  0A                 	db	10
  8013   00F7B3  00                 	db	0
  8014   00F7B4  21                 	db	33
  8015   00F7B5  D9                 	db	217
  8016   00F7B6  02                 	db	2
  8017   00F7B7  CD                 	db	205
  8018   00F7B8  29                 	db	41
  8019   00F7B9  03                 	db	3
  8020   00F7BA  C3                 	db	195
  8021   00F7BB  22                 	db	34
  8022   00F7BC  03                 	db	3
  8023   00F7BD  5A                 	db	90
  8024   00F7BE  38                 	db	56
  8025   00F7BF  30                 	db	48
  8026   00F7C0  20                 	db	32
  8027   00F7C1  72                 	db	114
  8028   00F7C2  75                 	db	117
  8029   00F7C3  6E                 	db	110
  8030   00F7C4  6E                 	db	110
  8031   00F7C5  69                 	db	105
  8032   00F7C6  6E                 	db	110
  8033   00F7C7  67                 	db	103
  8034   00F7C8  20                 	db	32
  8035   00F7C9  28                 	db	40
  8036   00F7CA  66                 	db	102
  8037   00F7CB  6C                 	db	108
  8038   00F7CC  61                 	db	97
  8039   00F7CD  67                 	db	103
  8040   00F7CE  20                 	db	32
  8041   00F7CF  62                 	db	98
  8042   00F7D0  69                 	db	105
  8043   00F7D1  74                 	db	116
  8044   00F7D2  32                 	db	50
  8045   00F7D3  20                 	db	32
  8046   00F7D4  69                 	db	105
  8047   00F7D5  73                 	db	115
  8048   00F7D6  20                 	db	32
  8049   00F7D7  4F                 	db	79
  8050   00F7D8  76                 	db	118
  8051   00F7D9  65                 	db	101
  8052   00F7DA  72                 	db	114
  8053   00F7DB  66                 	db	102
  8054   00F7DC  6C                 	db	108
  8055   00F7DD  6F                 	db	111
  8056   00F7DE  77                 	db	119
  8057   00F7DF  20                 	db	32
  8058   00F7E0  61                 	db	97
  8059   00F7E1  66                 	db	102
  8060   00F7E2  74                 	db	116
  8061   00F7E3  65                 	db	101
  8062   00F7E4  72                 	db	114
  8063   00F7E5  20                 	db	32
  8064   00F7E6  61                 	db	97
  8065   00F7E7  72                 	db	114
  8066   00F7E8  69                 	db	105
  8067   00F7E9  74                 	db	116
  8068   00F7EA  68                 	db	104
  8069   00F7EB  6D                 	db	109
  8070   00F7EC  61                 	db	97
  8071   00F7ED  74                 	db	116
  8072   00F7EE  69                 	db	105
  8073   00F7EF  63                 	db	99
  8074   00F7F0  2C                 	db	44
  8075   00F7F1  20                 	db	32
  8076   00F7F2  6E                 	db	110
  8077   00F7F3  6F                 	db	111
  8078   00F7F4  20                 	db	32
  8079   00F7F5  4D                 	db	77
  8080   00F7F6  4C                 	db	76
  8081   00F7F7  54                 	db	84
  8082   00F7F8  20                 	db	32
  8083   00F7F9  66                 	db	102
  8084   00F7FA  75                 	db	117
  8085   00F7FB  6E                 	db	110
  8086   00F7FC  63                 	db	99
  8087   00F7FD  74                 	db	116
  8088   00F7FE  69                 	db	105
  8089   00F7FF  6F                 	db	111
  8090   00F800  6E                 	db	110
  8091   00F801  29                 	db	41
  8092   00F802  0D                 	db	13
  8093   00F803  0A                 	db	10
  8094   00F804  0A                 	db	10
  8095   00F805  00                 	db	0
  8096   00F806  DB                 	db	219
  8097   00F807  47                 	db	71
  8098   00F808  DB                 	db	219
  8099   00F809  46                 	db	70
  8100   00F80A  C3                 	db	195
  8101   00F80B  00                 	db	0
  8102   00F80C  FA                 	db	250
  8103   00F80D  7E                 	db	126
  8104   00F80E  B7                 	db	183
  8105   00F80F  C8                 	db	200
  8106   00F810  4F                 	db	79
  8107   00F811  CD                 	db	205
  8108   00F812  34                 	db	52
  8109   00F813  03                 	db	3
  8110   00F814  23                 	db	35
  8111   00F815  C3                 	db	195
  8112   00F816  29                 	db	41
  8113   00F817  03                 	db	3
  8114   00F818  DB                 	db	219
  8115   00F819  01                 	db	1
  8116   00F81A  E6                 	db	230
  8117   00F81B  01                 	db	1
  8118   00F81C  CA                 	db	202
  8119   00F81D  34                 	db	52
  8120   00F81E  03                 	db	3
  8121   00F81F  79                 	db	121
  8122   00F820  D3                 	db	211
  8123   00F821  00                 	db	0
  8124   00F822  C9                 	db	201
  8125   00F823                     __end_of_rom:
  8126                           	callstack 0
  8127   000000                     _PORTB	set	1231
  8128   000000                     _CLCSELECT	set	213
  8129   000000                     _LATF	set	1219
  8130   000000                     _LATB	set	1215
  8131   000000                     _LATD	set	1217
  8132   000000                     _TRISF	set	1227
  8133   000000                     _TRISD	set	1225
  8134   000000                     _TRISE1	set	9809
  8135   000000                     _LATE1	set	9745
  8136   000000                     _TRISC5	set	9797
  8137   000000                     _TRISA5	set	9781
  8138   000000                     _LATC5	set	9733
  8139   000000                     _SPI1CON1bits	set	133
  8140   000000                     _SPI1CON0bits	set	132
  8141   000000                     _G3POL	set	1722
  8142   000000                     _U3TXEN	set	5773
  8143   000000                     _IVTLOCKbits	set	1113
  8144   000000                     _WPUC5	set	8333
  8145   000000                     _WPUA5	set	8205
  8146   000000                     _WPUA1	set	8201
  8147   000000                     _WPUA0	set	8200
  8148   000000                     _WPUA7	set	8207
  8149   000000                     _WPUC3	set	8331
  8150   000000                     _NCO1EN	set	8759
  8151   000000                     _ANSELE2	set	8450
  8152   000000                     _ANSELE1	set	8449
  8153   000000                     _U3RXIF	set	9656
  8154   000000                     _LATC4	set	9732
  8155   000000                     _TRISC4	set	9796
  8156   000000                     _TRISC2	set	9794
  8157   000000                     _TRISC0	set	9792
  8158   000000                     _TRISC1	set	9793
  8159   000000                     _TRISA4	set	9780
  8160   000000                     _TRISA1	set	9777
  8161   000000                     _TRISA0	set	9776
  8162   000000                     _TRISE2	set	9810
  8163   000000                     _LATE2	set	9746
  8164   000000                     _TRISA6	set	9782
  8165   000000                     _LATA6	set	9718
  8166   000000                     _TRISA7	set	9783
  8167   000000                     _TRISC3	set	9795
  8168   000000                     _TRISC6	set	9798
  8169   000000                     _TRISE0	set	9808
  8170   000000                     _LATE0	set	9744
  8171   000000                     _TRISA3	set	9779
  8172   000000                     _TRISC7	set	9799
  8173   000000                     _LATC7	set	9735
  8174   000000                     _SPI1RXB	set	128
  8175   000000                     _SPI1TXB	set	129
  8176   000000                     _SPI1TCNTL	set	130
  8177   000000                     _SPI1TCNTH	set	131
  8178   000000                     _SPI1CON0	set	132
  8179   000000                     _OSCFRQ	set	177
  8180   000000                     _TRISB	set	1223
  8181   000000                     _LATA5	set	9717
  8182   000000                     _RC6	set	9862
  8183   000000                     _PORTF	set	1235
  8184   000000                     _RA0	set	9840
  8185   000000                     _GIE	set	9911
  8186   000000                     _CLCDATA	set	212
  8187   000000                     _CLCnCON	set	214
  8188   000000                     _CLCnPOL	set	215
  8189   000000                     _CLCnSEL0	set	216
  8190   000000                     _RA3PPS	set	516
  8191   000000                     _ANSELA	set	1024
  8192   000000                     _ANSELB	set	1032
  8193   000000                     _WPUA3	set	8203
  8194   000000                     _WPUB	set	1033
  8195   000000                     _ANSELC	set	1040
  8196   000000                     _SLRCONCbits	set	1043
  8197   000000                     _ANSELD	set	1048
  8198   000000                     _WPUC6	set	8334
  8199   000000                     _WPUD	set	1049
  8200   000000                     _ANSELE0	set	8448
  8201   000000                     _ANSELF	set	1064
  8202   000000                     _ODCE1	set	8465
  8203   000000                     _NCO1INC	set	1091
  8204   000000                     _WPUF	set	1065
  8205   000000                     _NCO1OUT	set	8757
  8206   000000                     _U3BRG	set	724
  8207   000000                     _RA4PPS	set	517
  8208   000000                     _RA6PPS	set	519
  8209   000000                     _U3RXPPS	set	630
  8210   000000                     _U3RXEN	set	5772
  8211   000000                     _IVTLOCK	set	1113
  8212   000000                     _U3ON	set	5783
  8213   000000                     _U3RXB	set	711
  8214   000000                     _RC0PPS	set	529
  8215   000000                     _CLCIN0PPS	set	609
  8216   000000                     _IVTBASE	set	1117
  8217   000000                     _CLC1IE	set	9461
  8218   000000                     _CLC1IF	set	9589
  8219   000000                     _SPI1SCKPPS	set	618
  8220   000000                     _CLCIN7PPS	set	616
  8221   000000                     _CLCIN6PPS	set	615
  8222   000000                     _CLCIN5PPS	set	614
  8223   000000                     _CLCIN4PPS	set	613
  8224   000000                     _CLCIN3PPS	set	612
  8225   000000                     _CLCIN2PPS	set	611
  8226   000000                     _CLCIN1PPS	set	610
  8227   000000                     _CLCnGLS3	set	223
  8228   000000                     _CLCnGLS2	set	222
  8229   000000                     _CLCnGLS1	set	221
  8230   000000                     _CLCnGLS0	set	220
  8231   000000                     _CLCnSEL3	set	219
  8232   000000                     _CLCnSEL2	set	218
  8233   000000                     _CLCnSEL1	set	217
  8234   000000                     _SPI1RXIF	set	9608
  8235   000000                     _RC1PPS	set	530
  8236   000000                     _SPI1CON2bits	set	134
  8237   000000                     _SPI1TWIDTH	set	136
  8238   000000                     _SPI1CON1	set	133
  8239   000000                     _SPI1SDIPPS	set	619
  8240   000000                     _SPI1BAUD	set	137
  8241   000000                     _SPI1INTE	set	139
  8242   000000                     _SPI1CLK	set	140
  8243   000000                     _U3TXIF	set	9657
  8244   000000                     _BSR	set	1248
  8245   000000                     _U3TXB	set	713
  8246   00F823  53                 	db	83	;'S'
  8247   00F824  44                 	db	68	;'D'
  8248   00F825  20                 	db	32
  8249   00F826  43                 	db	67	;'C'
  8250   00F827  61                 	db	97	;'a'
  8251   00F828  72                 	db	114	;'r'
  8252   00F829  64                 	db	100	;'d'
  8253   00F82A  3A                 	db	58	;':'
  8254   00F82B  20                 	db	32
  8255   00F82C  72                 	db	114	;'r'
  8256   00F82D  65                 	db	101	;'e'
  8257   00F82E  61                 	db	97	;'a'
  8258   00F82F  64                 	db	100	;'d'
  8259   00F830  35                 	db	53	;'5'
  8260   00F831  31                 	db	49	;'1'
  8261   00F832  32                 	db	50	;'2'
  8262   00F833  3A                 	db	58	;':'
  8263   00F834  20                 	db	32
  8264   00F835  43                 	db	67	;'C'
  8265   00F836  52                 	db	82	;'R'
  8266   00F837  43                 	db	67	;'C'
  8267   00F838  20                 	db	32
  8268   00F839  65                 	db	101	;'e'
  8269   00F83A  72                 	db	114	;'r'
  8270   00F83B  72                 	db	114	;'r'
  8271   00F83C  6F                 	db	111	;'o'
  8272   00F83D  72                 	db	114	;'r'
  8273   00F83E  20                 	db	32
  8274   00F83F  28                 	db	40
  8275   00F840  25                 	db	37
  8276   00F841  30                 	db	48	;'0'
  8277   00F842  34                 	db	52	;'4'
  8278   00F843  78                 	db	120	;'x'
  8279   00F844  20                 	db	32
  8280   00F845  21                 	db	33
  8281   00F846  3D                 	db	61	;'='
  8282   00F847  20                 	db	32
  8283   00F848  25                 	db	37
  8284   00F849  30                 	db	48	;'0'
  8285   00F84A  34                 	db	52	;'4'
  8286   00F84B  78                 	db	120	;'x'
  8287   00F84C  2C                 	db	44
  8288   00F84D  20                 	db	32
  8289   00F84E  72                 	db	114	;'r'
  8290   00F84F  65                 	db	101	;'e'
  8291   00F850  74                 	db	116	;'t'
  8292   00F851  72                 	db	114	;'r'
  8293   00F852  79                 	db	121	;'y'
  8294   00F853  3D                 	db	61	;'='
  8295   00F854  25                 	db	37
  8296   00F855  64                 	db	100	;'d'
  8297   00F856  29                 	db	41
  8298   00F857  0A                 	db	10
  8299   00F858  0D                 	db	13
  8300   00F859  00                 	db	0
  8301   00F85A                     STR_78:
  8302   00F85A  49                 	db	73	;'I'
  8303   00F85B  6D                 	db	109	;'m'
  8304   00F85C  61                 	db	97	;'a'
  8305   00F85D  67                 	db	103	;'g'
  8306   00F85E  65                 	db	101	;'e'
  8307   00F85F  20                 	db	32
  8308   00F860  66                 	db	102	;'f'
  8309   00F861  69                 	db	105	;'i'
  8310   00F862  6C                 	db	108	;'l'
  8311   00F863  65                 	db	101	;'e'
  8312   00F864  20                 	db	32
  8313   00F865  25                 	db	37
  8314   00F866  73                 	db	115	;'s'
  8315   00F867  2F                 	db	47
  8316   00F868  44                 	db	68	;'D'
  8317   00F869  52                 	db	82	;'R'
  8318   00F86A  49                 	db	73	;'I'
  8319   00F86B  56                 	db	86	;'V'
  8320   00F86C  45                 	db	69	;'E'
  8321   00F86D  25                 	db	37
  8322   00F86E  63                 	db	99	;'c'
  8323   00F86F  2E                 	db	46
  8324   00F870  44                 	db	68	;'D'
  8325   00F871  53                 	db	83	;'S'
  8326   00F872  4B                 	db	75	;'K'
  8327   00F873  20                 	db	32
  8328   00F874  69                 	db	105	;'i'
  8329   00F875  73                 	db	115	;'s'
  8330   00F876  20                 	db	32
  8331   00F877  61                 	db	97	;'a'
  8332   00F878  73                 	db	115	;'s'
  8333   00F879  73                 	db	115	;'s'
  8334   00F87A  69                 	db	105	;'i'
  8335   00F87B  67                 	db	103	;'g'
  8336   00F87C  6E                 	db	110	;'n'
  8337   00F87D  65                 	db	101	;'e'
  8338   00F87E  64                 	db	100	;'d'
  8339   00F87F  20                 	db	32
  8340   00F880  74                 	db	116	;'t'
  8341   00F881  6F                 	db	111	;'o'
  8342   00F882  20                 	db	32
  8343   00F883  64                 	db	100	;'d'
  8344   00F884  72                 	db	114	;'r'
  8345   00F885  69                 	db	105	;'i'
  8346   00F886  76                 	db	118	;'v'
  8347   00F887  65                 	db	101	;'e'
  8348   00F888  20                 	db	32
  8349   00F889  25                 	db	37
  8350   00F88A  63                 	db	99	;'c'
  8351   00F88B  0A                 	db	10
  8352   00F88C  0D                 	db	13
  8353   00F88D  00                 	db	0
  8354   00F88E  53                 	db	83	;'S'
  8355   00F88F  44                 	db	68	;'D'
  8356   00F890  20                 	db	32
  8357   00F891  43                 	db	67	;'C'
  8358   00F892  61                 	db	97	;'a'
  8359   00F893  72                 	db	114	;'r'
  8360   00F894  64                 	db	100	;'d'
  8361   00F895  3A                 	db	58	;':'
  8362   00F896  20                 	db	32
  8363   00F897  20                 	db	32
  8364   00F898  72                 	db	114	;'r'
  8365   00F899  65                 	db	101	;'e'
  8366   00F89A  61                 	db	97	;'a'
  8367   00F89B  64                 	db	100	;'d'
  8368   00F89C  35                 	db	53	;'5'
  8369   00F89D  31                 	db	49	;'1'
  8370   00F89E  32                 	db	50	;'2'
  8371   00F89F  3A                 	db	58	;':'
  8372   00F8A0  20                 	db	32
  8373   00F8A1  61                 	db	97	;'a'
  8374   00F8A2  64                 	db	100	;'d'
  8375   00F8A3  64                 	db	100	;'d'
  8376   00F8A4  72                 	db	114	;'r'
  8377   00F8A5  3D                 	db	61	;'='
  8378   00F8A6  25                 	db	37
  8379   00F8A7  38                 	db	56	;'8'
  8380   00F8A8  6C                 	db	108	;'l'
  8381   00F8A9  64                 	db	100	;'d'
  8382   00F8AA  2C                 	db	44
  8383   00F8AB  20                 	db	32
  8384   00F8AC  6F                 	db	111	;'o'
  8385   00F8AD  66                 	db	102	;'f'
  8386   00F8AE  66                 	db	102	;'f'
  8387   00F8AF  73                 	db	115	;'s'
  8388   00F8B0  3D                 	db	61	;'='
  8389   00F8B1  25                 	db	37
  8390   00F8B2  64                 	db	100	;'d'
  8391   00F8B3  2C                 	db	44
  8392   00F8B4  20                 	db	32
  8393   00F8B5  63                 	db	99	;'c'
  8394   00F8B6  6F                 	db	111	;'o'
  8395   00F8B7  75                 	db	117	;'u'
  8396   00F8B8  6E                 	db	110	;'n'
  8397   00F8B9  74                 	db	116	;'t'
  8398   00F8BA  3D                 	db	61	;'='
  8399   00F8BB  25                 	db	37
  8400   00F8BC  64                 	db	100	;'d'
  8401   00F8BD  0A                 	db	10
  8402   00F8BE  0D                 	db	13
  8403   00F8BF  00                 	db	0
  8404   00F8C0  53                 	db	83	;'S'
  8405   00F8C1  44                 	db	68	;'D'
  8406   00F8C2  20                 	db	32
  8407   00F8C3  43                 	db	67	;'C'
  8408   00F8C4  61                 	db	97	;'a'
  8409   00F8C5  72                 	db	114	;'r'
  8410   00F8C6  64                 	db	100	;'d'
  8411   00F8C7  3A                 	db	58	;':'
  8412   00F8C8  20                 	db	32
  8413   00F8C9  77                 	db	119	;'w'
  8414   00F8CA  72                 	db	114	;'r'
  8415   00F8CB  69                 	db	105	;'i'
  8416   00F8CC  74                 	db	116	;'t'
  8417   00F8CD  65                 	db	101	;'e'
  8418   00F8CE  35                 	db	53	;'5'
  8419   00F8CF  31                 	db	49	;'1'
  8420   00F8D0  32                 	db	50	;'2'
  8421   00F8D1  3A                 	db	58	;':'
  8422   00F8D2  20                 	db	32
  8423   00F8D3  61                 	db	97	;'a'
  8424   00F8D4  64                 	db	100	;'d'
  8425   00F8D5  64                 	db	100	;'d'
  8426   00F8D6  72                 	db	114	;'r'
  8427   00F8D7  3D                 	db	61	;'='
  8428   00F8D8  25                 	db	37
  8429   00F8D9  38                 	db	56	;'8'
  8430   00F8DA  6C                 	db	108	;'l'
  8431   00F8DB  64                 	db	100	;'d'
  8432   00F8DC  2C                 	db	44
  8433   00F8DD  20                 	db	32
  8434   00F8DE  6F                 	db	111	;'o'
  8435   00F8DF  66                 	db	102	;'f'
  8436   00F8E0  66                 	db	102	;'f'
  8437   00F8E1  73                 	db	115	;'s'
  8438   00F8E2  3D                 	db	61	;'='
  8439   00F8E3  25                 	db	37
  8440   00F8E4  64                 	db	100	;'d'
  8441   00F8E5  2C                 	db	44
  8442   00F8E6  20                 	db	32
  8443   00F8E7  63                 	db	99	;'c'
  8444   00F8E8  6F                 	db	111	;'o'
  8445   00F8E9  75                 	db	117	;'u'
  8446   00F8EA  6E                 	db	110	;'n'
  8447   00F8EB  74                 	db	116	;'t'
  8448   00F8EC  3D                 	db	61	;'='
  8449   00F8ED  25                 	db	37
  8450   00F8EE  64                 	db	100	;'d'
  8451   00F8EF  0A                 	db	10
  8452   00F8F0  0D                 	db	13
  8453   00F8F1  00                 	db	0
  8454   00F8F2  53                 	db	83	;'S'
  8455   00F8F3  44                 	db	68	;'D'
  8456   00F8F4  20                 	db	32
  8457   00F8F5  43                 	db	67	;'C'
  8458   00F8F6  61                 	db	97	;'a'
  8459   00F8F7  72                 	db	114	;'r'
  8460   00F8F8  64                 	db	100	;'d'
  8461   00F8F9  3A                 	db	58	;':'
  8462   00F8FA  20                 	db	32
  8463   00F8FB  77                 	db	119	;'w'
  8464   00F8FC  72                 	db	114	;'r'
  8465   00F8FD  69                 	db	105	;'i'
  8466   00F8FE  74                 	db	116	;'t'
  8467   00F8FF  65                 	db	101	;'e'
  8468   00F900  35                 	db	53	;'5'
  8469   00F901  31                 	db	49	;'1'
  8470   00F902  32                 	db	50	;'2'
  8471   00F903  3A                 	db	58	;':'
  8472   00F904  20                 	db	32
  8473   00F905  66                 	db	102	;'f'
  8474   00F906  61                 	db	97	;'a'
  8475   00F907  69                 	db	105	;'i'
  8476   00F908  6C                 	db	108	;'l'
  8477   00F909  65                 	db	101	;'e'
  8478   00F90A  64                 	db	100	;'d'
  8479   00F90B  20                 	db	32
  8480   00F90C  74                 	db	116	;'t'
  8481   00F90D  6F                 	db	111	;'o'
  8482   00F90E  20                 	db	32
  8483   00F90F  67                 	db	103	;'g'
  8484   00F910  65                 	db	101	;'e'
  8485   00F911  74                 	db	116	;'t'
  8486   00F912  20                 	db	32
  8487   00F913  74                 	db	116	;'t'
  8488   00F914  6F                 	db	111	;'o'
  8489   00F915  6B                 	db	107	;'k'
  8490   00F916  65                 	db	101	;'e'
  8491   00F917  6E                 	db	110	;'n'
  8492   00F918  2C                 	db	44
  8493   00F919  20                 	db	32
  8494   00F91A  74                 	db	116	;'t'
  8495   00F91B  69                 	db	105	;'i'
  8496   00F91C  6D                 	db	109	;'m'
  8497   00F91D  65                 	db	101	;'e'
  8498   00F91E  6F                 	db	111	;'o'
  8499   00F91F  75                 	db	117	;'u'
  8500   00F920  74                 	db	116	;'t'
  8501   00F921  0A                 	db	10
  8502   00F922  0D                 	db	13
  8503   00F923  00                 	db	0
  8504   00F924  64                 	db	100	;'d'
  8505   00F925  69                 	db	105	;'i'
  8506   00F926  73                 	db	115	;'s'
  8507   00F927  6B                 	db	107	;'k'
  8508   00F928  5F                 	db	95	;'_'
  8509   00F929  69                 	db	105	;'i'
  8510   00F92A  6F                 	db	111	;'o'
  8511   00F92B  63                 	db	99	;'c'
  8512   00F92C  74                 	db	116	;'t'
  8513   00F92D  6C                 	db	108	;'l'
  8514   00F92E  3A                 	db	58	;':'
  8515   00F92F  20                 	db	32
  8516   00F930  70                 	db	112	;'p'
  8517   00F931  64                 	db	100	;'d'
  8518   00F932  72                 	db	114	;'r'
  8519   00F933  76                 	db	118	;'v'
  8520   00F934  3D                 	db	61	;'='
  8521   00F935  25                 	db	37
  8522   00F936  64                 	db	100	;'d'
  8523   00F937  2C                 	db	44
  8524   00F938  20                 	db	32
  8525   00F939  63                 	db	99	;'c'
  8526   00F93A  6D                 	db	109	;'m'
  8527   00F93B  64                 	db	100	;'d'
  8528   00F93C  3D                 	db	61	;'='
  8529   00F93D  25                 	db	37
  8530   00F93E  64                 	db	100	;'d'
  8531   00F93F  2C                 	db	44
  8532   00F940  20                 	db	32
  8533   00F941  62                 	db	98	;'b'
  8534   00F942  75                 	db	117	;'u'
  8535   00F943  66                 	db	102	;'f'
  8536   00F944  66                 	db	102	;'f'
  8537   00F945  3D                 	db	61	;'='
  8538   00F946  30                 	db	48	;'0'
  8539   00F947  78                 	db	120	;'x'
  8540   00F948  25                 	db	37
  8541   00F949  6C                 	db	108	;'l'
  8542   00F94A  78                 	db	120	;'x'
  8543   00F94B  3A                 	db	58	;':'
  8544   00F94C  20                 	db	32
  8545   00F94D  72                 	db	114	;'r'
  8546   00F94E  65                 	db	101	;'e'
  8547   00F94F  73                 	db	115	;'s'
  8548   00F950  3D                 	db	61	;'='
  8549   00F951  25                 	db	37
  8550   00F952  64                 	db	100	;'d'
  8551   00F953  0A                 	db	10
  8552   00F954  0D                 	db	13
  8553   00F955  00                 	db	0
  8554   00F956  53                 	db	83	;'S'
  8555   00F957  44                 	db	68	;'D'
  8556   00F958  20                 	db	32
  8557   00F959  43                 	db	67	;'C'
  8558   00F95A  61                 	db	97	;'a'
  8559   00F95B  72                 	db	114	;'r'
  8560   00F95C  64                 	db	100	;'d'
  8561   00F95D  3A                 	db	58	;':'
  8562   00F95E  20                 	db	32
  8563   00F95F  77                 	db	119	;'w'
  8564   00F960  72                 	db	114	;'r'
  8565   00F961  69                 	db	105	;'i'
  8566   00F962  74                 	db	116	;'t'
  8567   00F963  65                 	db	101	;'e'
  8568   00F964  35                 	db	53	;'5'
  8569   00F965  31                 	db	49	;'1'
  8570   00F966  32                 	db	50	;'2'
  8571   00F967  3A                 	db	58	;':'
  8572   00F968  20                 	db	32
  8573   00F969  74                 	db	116	;'t'
  8574   00F96A  69                 	db	105	;'i'
  8575   00F96B  6D                 	db	109	;'m'
  8576   00F96C  65                 	db	101	;'e'
  8577   00F96D  6F                 	db	111	;'o'
  8578   00F96E  75                 	db	117	;'u'
  8579   00F96F  74                 	db	116	;'t'
  8580   00F970  2C                 	db	44
  8581   00F971  20                 	db	32
  8582   00F972  72                 	db	114	;'r'
  8583   00F973  65                 	db	101	;'e'
  8584   00F974  73                 	db	115	;'s'
  8585   00F975  70                 	db	112	;'p'
  8586   00F976  6F                 	db	111	;'o'
  8587   00F977  6E                 	db	110	;'n'
  8588   00F978  73                 	db	115	;'s'
  8589   00F979  65                 	db	101	;'e'
  8590   00F97A  20                 	db	32
  8591   00F97B  69                 	db	105	;'i'
  8592   00F97C  73                 	db	115	;'s'
  8593   00F97D  20                 	db	32
  8594   00F97E  25                 	db	37
  8595   00F97F  30                 	db	48	;'0'
  8596   00F980  32                 	db	50	;'2'
  8597   00F981  78                 	db	120	;'x'
  8598   00F982  0A                 	db	10
  8599   00F983  0D                 	db	13
  8600   00F984  00                 	db	0
  8601   00F985  53                 	db	83	;'S'
  8602   00F986  44                 	db	68	;'D'
  8603   00F987  20                 	db	32
  8604   00F988  43                 	db	67	;'C'
  8605   00F989  61                 	db	97	;'a'
  8606   00F98A  72                 	db	114	;'r'
  8607   00F98B  64                 	db	100	;'d'
  8608   00F98C  3A                 	db	58	;':'
  8609   00F98D  20                 	db	32
  8610   00F98E  43                 	db	67	;'C'
  8611   00F98F  4D                 	db	77	;'M'
  8612   00F990  44                 	db	68	;'D'
  8613   00F991  35                 	db	53	;'5'
  8614   00F992  38                 	db	56	;'8'
  8615   00F993  2C                 	db	44
  8616   00F994  20                 	db	32
  8617   00F995  52                 	db	82	;'R'
  8618   00F996  33                 	db	51	;'3'
  8619   00F997  3D                 	db	61	;'='
  8620   00F998  25                 	db	37
  8621   00F999  30                 	db	48	;'0'
  8622   00F99A  32                 	db	50	;'2'
  8623   00F99B  78                 	db	120	;'x'
  8624   00F99C  20                 	db	32
  8625   00F99D  25                 	db	37
  8626   00F99E  30                 	db	48	;'0'
  8627   00F99F  32                 	db	50	;'2'
  8628   00F9A0  78                 	db	120	;'x'
  8629   00F9A1  20                 	db	32
  8630   00F9A2  25                 	db	37
  8631   00F9A3  30                 	db	48	;'0'
  8632   00F9A4  32                 	db	50	;'2'
  8633   00F9A5  78                 	db	120	;'x'
  8634   00F9A6  20                 	db	32
  8635   00F9A7  25                 	db	37
  8636   00F9A8  30                 	db	48	;'0'
  8637   00F9A9  32                 	db	50	;'2'
  8638   00F9AA  78                 	db	120	;'x'
  8639   00F9AB  20                 	db	32
  8640   00F9AC  25                 	db	37
  8641   00F9AD  30                 	db	48	;'0'
  8642   00F9AE  32                 	db	50	;'2'
  8643   00F9AF  78                 	db	120	;'x'
  8644   00F9B0  0A                 	db	10
  8645   00F9B1  0D                 	db	13
  8646   00F9B2  00                 	db	0
  8647   00F9B3                     STR_33:
  8648   00F9B3  25                 	db	37
  8649   00F9B4  73                 	db	115	;'s'
  8650   00F9B5  3A                 	db	58	;':'
  8651   00F9B6  20                 	db	32
  8652   00F9B7  45                 	db	69	;'E'
  8653   00F9B8  52                 	db	82	;'R'
  8654   00F9B9  52                 	db	82	;'R'
  8655   00F9BA  4F                 	db	79	;'O'
  8656   00F9BB  52                 	db	82	;'R'
  8657   00F9BC  3A                 	db	58	;':'
  8658   00F9BD  20                 	db	32
  8659   00F9BE  63                 	db	99	;'c'
  8660   00F9BF  6C                 	db	108	;'l'
  8661   00F9C0  6F                 	db	111	;'o'
  8662   00F9C1  63                 	db	99	;'c'
  8663   00F9C2  6B                 	db	107	;'k'
  8664   00F9C3  20                 	db	32
  8665   00F9C4  73                 	db	115	;'s'
  8666   00F9C5  70                 	db	112	;'p'
  8667   00F9C6  65                 	db	101	;'e'
  8668   00F9C7  65                 	db	101	;'e'
  8669   00F9C8  64                 	db	100	;'d'
  8670   00F9C9  20                 	db	32
  8671   00F9CA  25                 	db	37
  8672   00F9CB  64                 	db	100	;'d'
  8673   00F9CC  20                 	db	32
  8674   00F9CD  69                 	db	105	;'i'
  8675   00F9CE  73                 	db	115	;'s'
  8676   00F9CF  20                 	db	32
  8677   00F9D0  6E                 	db	110	;'n'
  8678   00F9D1  6F                 	db	111	;'o'
  8679   00F9D2  74                 	db	116	;'t'
  8680   00F9D3  20                 	db	32
  8681   00F9D4  73                 	db	115	;'s'
  8682   00F9D5  75                 	db	117	;'u'
  8683   00F9D6  70                 	db	112	;'p'
  8684   00F9D7  70                 	db	112	;'p'
  8685   00F9D8  6F                 	db	111	;'o'
  8686   00F9D9  72                 	db	114	;'r'
  8687   00F9DA  74                 	db	116	;'t'
  8688   00F9DB  65                 	db	101	;'e'
  8689   00F9DC  64                 	db	100	;'d'
  8690   00F9DD  0A                 	db	10
  8691   00F9DE  0D                 	db	13
  8692   00F9DF  00                 	db	0
  8693   00F9E0  53                 	db	83	;'S'
  8694   00F9E1  44                 	db	68	;'D'
  8695   00F9E2  20                 	db	32
  8696   00F9E3  43                 	db	67	;'C'
  8697   00F9E4  61                 	db	97	;'a'
  8698   00F9E5  72                 	db	114	;'r'
  8699   00F9E6  64                 	db	100	;'d'
  8700   00F9E7  3A                 	db	58	;':'
  8701   00F9E8  20                 	db	32
  8702   00F9E9  43                 	db	67	;'C'
  8703   00F9EA  4D                 	db	77	;'M'
  8704   00F9EB  44                 	db	68	;'D'
  8705   00F9EC  38                 	db	56	;'8'
  8706   00F9ED  2C                 	db	44
  8707   00F9EE  20                 	db	32
  8708   00F9EF  52                 	db	82	;'R'
  8709   00F9F0  37                 	db	55	;'7'
  8710   00F9F1  3D                 	db	61	;'='
  8711   00F9F2  25                 	db	37
  8712   00F9F3  30                 	db	48	;'0'
  8713   00F9F4  32                 	db	50	;'2'
  8714   00F9F5  78                 	db	120	;'x'
  8715   00F9F6  20                 	db	32
  8716   00F9F7  25                 	db	37
  8717   00F9F8  30                 	db	48	;'0'
  8718   00F9F9  32                 	db	50	;'2'
  8719   00F9FA  78                 	db	120	;'x'
  8720   00F9FB  20                 	db	32
  8721   00F9FC  25                 	db	37
  8722   00F9FD  30                 	db	48	;'0'
  8723   00F9FE  32                 	db	50	;'2'
  8724   00F9FF  78                 	db	120	;'x'
  8725   00FA00  20                 	db	32
  8726   00FA01  25                 	db	37
  8727   00FA02  30                 	db	48	;'0'
  8728   00FA03  32                 	db	50	;'2'
  8729   00FA04  78                 	db	120	;'x'
  8730   00FA05  20                 	db	32
  8731   00FA06  25                 	db	37
  8732   00FA07  30                 	db	48	;'0'
  8733   00FA08  32                 	db	50	;'2'
  8734   00FA09  78                 	db	120	;'x'
  8735   00FA0A  0A                 	db	10
  8736   00FA0B  0D                 	db	13
  8737   00FA0C  00                 	db	0
  8738   00FA0D                     STR_17:
  8739   00FA0D  64                 	db	100	;'d'
  8740   00FA0E  69                 	db	105	;'i'
  8741   00FA0F  73                 	db	115	;'s'
  8742   00FA10  6B                 	db	107	;'k'
  8743   00FA11  5F                 	db	95	;'_'
  8744   00FA12  69                 	db	105	;'i'
  8745   00FA13  6F                 	db	111	;'o'
  8746   00FA14  63                 	db	99	;'c'
  8747   00FA15  74                 	db	116	;'t'
  8748   00FA16  6C                 	db	108	;'l'
  8749   00FA17  3A                 	db	58	;':'
  8750   00FA18  20                 	db	32
  8751   00FA19  70                 	db	112	;'p'
  8752   00FA1A  64                 	db	100	;'d'
  8753   00FA1B  72                 	db	114	;'r'
  8754   00FA1C  76                 	db	118	;'v'
  8755   00FA1D  3D                 	db	61	;'='
  8756   00FA1E  25                 	db	37
  8757   00FA1F  64                 	db	100	;'d'
  8758   00FA20  2C                 	db	44
  8759   00FA21  20                 	db	32
  8760   00FA22  63                 	db	99	;'c'
  8761   00FA23  6D                 	db	109	;'m'
  8762   00FA24  64                 	db	100	;'d'
  8763   00FA25  3D                 	db	61	;'='
  8764   00FA26  25                 	db	37
  8765   00FA27  64                 	db	100	;'d'
  8766   00FA28  3A                 	db	58	;':'
  8767   00FA29  20                 	db	32
  8768   00FA2A  4E                 	db	78	;'N'
  8769   00FA2B  6F                 	db	111	;'o'
  8770   00FA2C  74                 	db	116	;'t'
  8771   00FA2D  20                 	db	32
  8772   00FA2E  68                 	db	104	;'h'
  8773   00FA2F  61                 	db	97	;'a'
  8774   00FA30  6E                 	db	110	;'n'
  8775   00FA31  64                 	db	100	;'d'
  8776   00FA32  6C                 	db	108	;'l'
  8777   00FA33  65                 	db	101	;'e'
  8778   00FA34  64                 	db	100	;'d'
  8779   00FA35  2E                 	db	46
  8780   00FA36  0A                 	db	10
  8781   00FA37  0D                 	db	13
  8782   00FA38  00                 	db	0
  8783   00FA39  64                 	db	100	;'d'
  8784   00FA3A  69                 	db	105	;'i'
  8785   00FA3B  73                 	db	115	;'s'
  8786   00FA3C  6B                 	db	107	;'k'
  8787   00FA3D  5F                 	db	95	;'_'
  8788   00FA3E  72                 	db	114	;'r'
  8789   00FA3F  65                 	db	101	;'e'
  8790   00FA40  61                 	db	97	;'a'
  8791   00FA41  64                 	db	100	;'d'
  8792   00FA42  3A                 	db	58	;':'
  8793   00FA43  20                 	db	32
  8794   00FA44  20                 	db	32
  8795   00FA45  70                 	db	112	;'p'
  8796   00FA46  64                 	db	100	;'d'
  8797   00FA47  72                 	db	114	;'r'
  8798   00FA48  76                 	db	118	;'v'
  8799   00FA49  3D                 	db	61	;'='
  8800   00FA4A  25                 	db	37
  8801   00FA4B  64                 	db	100	;'d'
  8802   00FA4C  2C                 	db	44
  8803   00FA4D  20                 	db	32
  8804   00FA4E  73                 	db	115	;'s'
  8805   00FA4F  65                 	db	101	;'e'
  8806   00FA50  63                 	db	99	;'c'
  8807   00FA51  74                 	db	116	;'t'
  8808   00FA52  6F                 	db	111	;'o'
  8809   00FA53  72                 	db	114	;'r'
  8810   00FA54  3D                 	db	61	;'='
  8811   00FA55  25                 	db	37
  8812   00FA56  6C                 	db	108	;'l'
  8813   00FA57  64                 	db	100	;'d'
  8814   00FA58  2C                 	db	44
  8815   00FA59  20                 	db	32
  8816   00FA5A  63                 	db	99	;'c'
  8817   00FA5B  6F                 	db	111	;'o'
  8818   00FA5C  75                 	db	117	;'u'
  8819   00FA5D  6E                 	db	110	;'n'
  8820   00FA5E  74                 	db	116	;'t'
  8821   00FA5F  3D                 	db	61	;'='
  8822   00FA60  25                 	db	37
  8823   00FA61  64                 	db	100	;'d'
  8824   00FA62  0A                 	db	10
  8825   00FA63  0D                 	db	13
  8826   00FA64  00                 	db	0
  8827   00FA65  64                 	db	100	;'d'
  8828   00FA66  69                 	db	105	;'i'
  8829   00FA67  73                 	db	115	;'s'
  8830   00FA68  6B                 	db	107	;'k'
  8831   00FA69  5F                 	db	95	;'_'
  8832   00FA6A  77                 	db	119	;'w'
  8833   00FA6B  72                 	db	114	;'r'
  8834   00FA6C  69                 	db	105	;'i'
  8835   00FA6D  74                 	db	116	;'t'
  8836   00FA6E  65                 	db	101	;'e'
  8837   00FA6F  3A                 	db	58	;':'
  8838   00FA70  20                 	db	32
  8839   00FA71  70                 	db	112	;'p'
  8840   00FA72  64                 	db	100	;'d'
  8841   00FA73  72                 	db	114	;'r'
  8842   00FA74  76                 	db	118	;'v'
  8843   00FA75  3D                 	db	61	;'='
  8844   00FA76  25                 	db	37
  8845   00FA77  64                 	db	100	;'d'
  8846   00FA78  2C                 	db	44
  8847   00FA79  20                 	db	32
  8848   00FA7A  73                 	db	115	;'s'
  8849   00FA7B  65                 	db	101	;'e'
  8850   00FA7C  63                 	db	99	;'c'
  8851   00FA7D  74                 	db	116	;'t'
  8852   00FA7E  6F                 	db	111	;'o'
  8853   00FA7F  72                 	db	114	;'r'
  8854   00FA80  3D                 	db	61	;'='
  8855   00FA81  25                 	db	37
  8856   00FA82  6C                 	db	108	;'l'
  8857   00FA83  64                 	db	100	;'d'
  8858   00FA84  2C                 	db	44
  8859   00FA85  20                 	db	32
  8860   00FA86  63                 	db	99	;'c'
  8861   00FA87  6F                 	db	111	;'o'
  8862   00FA88  75                 	db	117	;'u'
  8863   00FA89  6E                 	db	110	;'n'
  8864   00FA8A  74                 	db	116	;'t'
  8865   00FA8B  3D                 	db	61	;'='
  8866   00FA8C  25                 	db	37
  8867   00FA8D  64                 	db	100	;'d'
  8868   00FA8E  0A                 	db	10
  8869   00FA8F  0D                 	db	13
  8870   00FA90  00                 	db	0
  8871   00FA91  53                 	db	83	;'S'
  8872   00FA92  44                 	db	68	;'D'
  8873   00FA93  20                 	db	32
  8874   00FA94  43                 	db	67	;'C'
  8875   00FA95  61                 	db	97	;'a'
  8876   00FA96  72                 	db	114	;'r'
  8877   00FA97  64                 	db	100	;'d'
  8878   00FA98  3A                 	db	58	;':'
  8879   00FA99  20                 	db	32
  8880   00FA9A  43                 	db	67	;'C'
  8881   00FA9B  43                 	db	67	;'C'
  8882   00FA9C  53                 	db	83	;'S'
  8883   00FA9D  20                 	db	32
  8884   00FA9E  28                 	db	40
  8885   00FA9F  43                 	db	67	;'C'
  8886   00FAA0  61                 	db	97	;'a'
  8887   00FAA1  72                 	db	114	;'r'
  8888   00FAA2  64                 	db	100	;'d'
  8889   00FAA3  20                 	db	32
  8890   00FAA4  43                 	db	67	;'C'
  8891   00FAA5  61                 	db	97	;'a'
  8892   00FAA6  70                 	db	112	;'p'
  8893   00FAA7  61                 	db	97	;'a'
  8894   00FAA8  63                 	db	99	;'c'
  8895   00FAA9  69                 	db	105	;'i'
  8896   00FAAA  74                 	db	116	;'t'
  8897   00FAAB  79                 	db	121	;'y'
  8898   00FAAC  20                 	db	32
  8899   00FAAD  53                 	db	83	;'S'
  8900   00FAAE  74                 	db	116	;'t'
  8901   00FAAF  61                 	db	97	;'a'
  8902   00FAB0  74                 	db	116	;'t'
  8903   00FAB1  75                 	db	117	;'u'
  8904   00FAB2  73                 	db	115	;'s'
  8905   00FAB3  29                 	db	41
  8906   00FAB4  20                 	db	32
  8907   00FAB5  69                 	db	105	;'i'
  8908   00FAB6  73                 	db	115	;'s'
  8909   00FAB7  20                 	db	32
  8910   00FAB8  30                 	db	48	;'0'
  8911   00FAB9  0A                 	db	10
  8912   00FABA  0D                 	db	13
  8913   00FABB  00                 	db	0
  8914   00FABC  53                 	db	83	;'S'
  8915   00FABD  44                 	db	68	;'D'
  8916   00FABE  20                 	db	32
  8917   00FABF  43                 	db	67	;'C'
  8918   00FAC0  61                 	db	97	;'a'
  8919   00FAC1  72                 	db	114	;'r'
  8920   00FAC2  64                 	db	100	;'d'
  8921   00FAC3  3A                 	db	58	;':'
  8922   00FAC4  20                 	db	32
  8923   00FAC5  77                 	db	119	;'w'
  8924   00FAC6  72                 	db	114	;'r'
  8925   00FAC7  69                 	db	105	;'i'
  8926   00FAC8  74                 	db	116	;'t'
  8927   00FAC9  65                 	db	101	;'e'
  8928   00FACA  35                 	db	53	;'5'
  8929   00FACB  31                 	db	49	;'1'
  8930   00FACC  32                 	db	50	;'2'
  8931   00FACD  3A                 	db	58	;':'
  8932   00FACE  20                 	db	32
  8933   00FACF  43                 	db	67	;'C'
  8934   00FAD0  52                 	db	82	;'R'
  8935   00FAD1  43                 	db	67	;'C'
  8936   00FAD2  20                 	db	32
  8937   00FAD3  65                 	db	101	;'e'
  8938   00FAD4  72                 	db	114	;'r'
  8939   00FAD5  72                 	db	114	;'r'
  8940   00FAD6  6F                 	db	111	;'o'
  8941   00FAD7  72                 	db	114	;'r'
  8942   00FAD8  20                 	db	32
  8943   00FAD9  28                 	db	40
  8944   00FADA  72                 	db	114	;'r'
  8945   00FADB  65                 	db	101	;'e'
  8946   00FADC  74                 	db	116	;'t'
  8947   00FADD  72                 	db	114	;'r'
  8948   00FADE  79                 	db	121	;'y'
  8949   00FADF  3D                 	db	61	;'='
  8950   00FAE0  25                 	db	37
  8951   00FAE1  64                 	db	100	;'d'
  8952   00FAE2  29                 	db	41
  8953   00FAE3  0A                 	db	10
  8954   00FAE4  0D                 	db	13
  8955   00FAE5  00                 	db	0
  8956   00FAE6  53                 	db	83	;'S'
  8957   00FAE7  44                 	db	68	;'D'
  8958   00FAE8  20                 	db	32
  8959   00FAE9  43                 	db	67	;'C'
  8960   00FAEA  61                 	db	97	;'a'
  8961   00FAEB  72                 	db	114	;'r'
  8962   00FAEC  64                 	db	100	;'d'
  8963   00FAED  3A                 	db	58	;':'
  8964   00FAEE  20                 	db	32
  8965   00FAEF  43                 	db	67	;'C'
  8966   00FAF0  61                 	db	97	;'a'
  8967   00FAF1  72                 	db	114	;'r'
  8968   00FAF2  64                 	db	100	;'d'
  8969   00FAF3  20                 	db	32
  8970   00FAF4  70                 	db	112	;'p'
  8971   00FAF5  6F                 	db	111	;'o'
  8972   00FAF6  77                 	db	119	;'w'
  8973   00FAF7  65                 	db	101	;'e'
  8974   00FAF8  72                 	db	114	;'r'
  8975   00FAF9  20                 	db	32
  8976   00FAFA  75                 	db	117	;'u'
  8977   00FAFB  70                 	db	112	;'p'
  8978   00FAFC  20                 	db	32
  8979   00FAFD  73                 	db	115	;'s'
  8980   00FAFE  74                 	db	116	;'t'
  8981   00FAFF  61                 	db	97	;'a'
  8982   00FB00  74                 	db	116	;'t'
  8983   00FB01  75                 	db	117	;'u'
  8984   00FB02  73                 	db	115	;'s'
  8985   00FB03  20                 	db	32
  8986   00FB04  62                 	db	98	;'b'
  8987   00FB05  69                 	db	105	;'i'
  8988   00FB06  73                 	db	115	;'s'
  8989   00FB07  20                 	db	32
  8990   00FB08  69                 	db	105	;'i'
  8991   00FB09  73                 	db	115	;'s'
  8992   00FB0A  20                 	db	32
  8993   00FB0B  30                 	db	48	;'0'
  8994   00FB0C  0A                 	db	10
  8995   00FB0D  0D                 	db	13
  8996   00FB0E  00                 	db	0
  8997   00FB0F                     STR_60:
  8998   00FB0F  55                 	db	85	;'U'
  8999   00FB10  73                 	db	115	;'s'
  9000   00FB11  65                 	db	101	;'e'
  9001   00FB12  20                 	db	32
  9002   00FB13  4E                 	db	78	;'N'
  9003   00FB14  43                 	db	67	;'C'
  9004   00FB15  4F                 	db	79	;'O'
  9005   00FB16  31                 	db	49	;'1'
  9006   00FB17  2D                 	db	45
  9007   00FB18  3E                 	db	62	;'>'
  9008   00FB19  52                 	db	82	;'R'
  9009   00FB1A  41                 	db	65	;'A'
  9010   00FB1B  33                 	db	51	;'3'
  9011   00FB1C  20                 	db	32
  9012   00FB1D  25                 	db	37
  9013   00FB1E  2E                 	db	46
  9014   00FB1F  32                 	db	50	;'2'
  9015   00FB20  66                 	db	102	;'f'
  9016   00FB21  20                 	db	32
  9017   00FB22  4D                 	db	77	;'M'
  9018   00FB23  48                 	db	72	;'H'
  9019   00FB24  7A                 	db	122	;'z'
  9020   00FB25  20                 	db	32
  9021   00FB26  66                 	db	102	;'f'
  9022   00FB27  6F                 	db	111	;'o'
  9023   00FB28  72                 	db	114	;'r'
  9024   00FB29  20                 	db	32
  9025   00FB2A  38                 	db	56	;'8'
  9026   00FB2B  30                 	db	48	;'0'
  9027   00FB2C  38                 	db	56	;'8'
  9028   00FB2D  35                 	db	53	;'5'
  9029   00FB2E  20                 	db	32
  9030   00FB2F  63                 	db	99	;'c'
  9031   00FB30  6C                 	db	108	;'l'
  9032   00FB31  6F                 	db	111	;'o'
  9033   00FB32  63                 	db	99	;'c'
  9034   00FB33  6B                 	db	107	;'k'
  9035   00FB34  0A                 	db	10
  9036   00FB35  0D                 	db	13
  9037   00FB36  00                 	db	0
  9038   00FB37  72                 	db	114	;'r'
  9039   00FB38  65                 	db	101	;'e'
  9040   00FB39  61                 	db	97	;'a'
  9041   00FB3A  64                 	db	100	;'d'
  9042   00FB3B  20                 	db	32
  9043   00FB3C  4D                 	db	77	;'M'
  9044   00FB3D  42                 	db	66	;'B'
  9045   00FB3E  52                 	db	82	;'R'
  9046   00FB3F  20                 	db	32
  9047   00FB40  70                 	db	112	;'p'
  9048   00FB41  61                 	db	97	;'a'
  9049   00FB42  72                 	db	114	;'r'
  9050   00FB43  74                 	db	116	;'t'
  9051   00FB44  69                 	db	105	;'i'
  9052   00FB45  74                 	db	116	;'t'
  9053   00FB46  69                 	db	105	;'i'
  9054   00FB47  6F                 	db	111	;'o'
  9055   00FB48  6E                 	db	110	;'n'
  9056   00FB49  20                 	db	32
  9057   00FB4A  74                 	db	116	;'t'
  9058   00FB4B  61                 	db	97	;'a'
  9059   00FB4C  62                 	db	98	;'b'
  9060   00FB4D  6C                 	db	108	;'l'
  9061   00FB4E  65                 	db	101	;'e'
  9062   00FB4F  20                 	db	32
  9063   00FB50  61                 	db	97	;'a'
  9064   00FB51  74                 	db	116	;'t'
  9065   00FB52  20                 	db	32
  9066   00FB53  73                 	db	115	;'s'
  9067   00FB54  65                 	db	101	;'e'
  9068   00FB55  63                 	db	99	;'c'
  9069   00FB56  74                 	db	116	;'t'
  9070   00FB57  6F                 	db	111	;'o'
  9071   00FB58  72                 	db	114	;'r'
  9072   00FB59  20                 	db	32
  9073   00FB5A  30                 	db	48	;'0'
  9074   00FB5B  0A                 	db	10
  9075   00FB5C  0D                 	db	13
  9076   00FB5D  00                 	db	0
  9077   00FB5E  53                 	db	83	;'S'
  9078   00FB5F  44                 	db	68	;'D'
  9079   00FB60  20                 	db	32
  9080   00FB61  43                 	db	67	;'C'
  9081   00FB62  61                 	db	97	;'a'
  9082   00FB63  72                 	db	114	;'r'
  9083   00FB64  64                 	db	100	;'d'
  9084   00FB65  3A                 	db	58	;':'
  9085   00FB66  20                 	db	32
  9086   00FB67  53                 	db	83	;'S'
  9087   00FB68  44                 	db	68	;'D'
  9088   00FB69  48                 	db	72	;'H'
  9089   00FB6A  43                 	db	67	;'C'
  9090   00FB6B  20                 	db	32
  9091   00FB6C  6F                 	db	111	;'o'
  9092   00FB6D  72                 	db	114	;'r'
  9093   00FB6E  20                 	db	32
  9094   00FB6F  53                 	db	83	;'S'
  9095   00FB70  44                 	db	68	;'D'
  9096   00FB71  58                 	db	88	;'X'
  9097   00FB72  43                 	db	67	;'C'
  9098   00FB73  20                 	db	32
  9099   00FB74  63                 	db	99	;'c'
  9100   00FB75  61                 	db	97	;'a'
  9101   00FB76  72                 	db	114	;'r'
  9102   00FB77  64                 	db	100	;'d'
  9103   00FB78  20                 	db	32
  9104   00FB79  64                 	db	100	;'d'
  9105   00FB7A  65                 	db	101	;'e'
  9106   00FB7B  74                 	db	116	;'t'
  9107   00FB7C  65                 	db	101	;'e'
  9108   00FB7D  63                 	db	99	;'c'
  9109   00FB7E  74                 	db	116	;'t'
  9110   00FB7F  65                 	db	101	;'e'
  9111   00FB80  64                 	db	100	;'d'
  9112   00FB81  0A                 	db	10
  9113   00FB82  0D                 	db	13
  9114   00FB83  00                 	db	0
  9115   00FB84                     STR_31:
  9116   00FB84  25                 	db	37
  9117   00FB85  73                 	db	115	;'s'
  9118   00FB86  3A                 	db	58	;':'
  9119   00FB87  20                 	db	32
  9120   00FB88  45                 	db	69	;'E'
  9121   00FB89  52                 	db	82	;'R'
  9122   00FB8A  52                 	db	82	;'R'
  9123   00FB8B  4F                 	db	79	;'O'
  9124   00FB8C  52                 	db	82	;'R'
  9125   00FB8D  3A                 	db	58	;':'
  9126   00FB8E  20                 	db	32
  9127   00FB8F  6D                 	db	109	;'m'
  9128   00FB90  6F                 	db	111	;'o'
  9129   00FB91  64                 	db	100	;'d'
  9130   00FB92  65                 	db	101	;'e'
  9131   00FB93  20                 	db	32
  9132   00FB94  25                 	db	37
  9133   00FB95  64                 	db	100	;'d'
  9134   00FB96  20                 	db	32
  9135   00FB97  69                 	db	105	;'i'
  9136   00FB98  73                 	db	115	;'s'
  9137   00FB99  20                 	db	32
  9138   00FB9A  6E                 	db	110	;'n'
  9139   00FB9B  6F                 	db	111	;'o'
  9140   00FB9C  74                 	db	116	;'t'
  9141   00FB9D  20                 	db	32
  9142   00FB9E  73                 	db	115	;'s'
  9143   00FB9F  75                 	db	117	;'u'
  9144   00FBA0  70                 	db	112	;'p'
  9145   00FBA1  70                 	db	112	;'p'
  9146   00FBA2  6F                 	db	111	;'o'
  9147   00FBA3  72                 	db	114	;'r'
  9148   00FBA4  74                 	db	116	;'t'
  9149   00FBA5  65                 	db	101	;'e'
  9150   00FBA6  64                 	db	100	;'d'
  9151   00FBA7  0A                 	db	10
  9152   00FBA8  0D                 	db	13
  9153   00FBA9  00                 	db	0
  9154   00FBAA                     STR_64:
  9155   00FBAA  57                 	db	87	;'W'
  9156   00FBAB  41                 	db	65	;'A'
  9157   00FBAC  52                 	db	82	;'R'
  9158   00FBAD  4E                 	db	78	;'N'
  9159   00FBAE  49                 	db	73	;'I'
  9160   00FBAF  4E                 	db	78	;'N'
  9161   00FBB0  47                 	db	71	;'G'
  9162   00FBB1  3A                 	db	58	;':'
  9163   00FBB2  20                 	db	32
  9164   00FBB3  75                 	db	117	;'u'
  9165   00FBB4  6E                 	db	110	;'n'
  9166   00FBB5  6B                 	db	107	;'k'
  9167   00FBB6  6E                 	db	110	;'n'
  9168   00FBB7  6F                 	db	111	;'o'
  9169   00FBB8  77                 	db	119	;'w'
  9170   00FBB9  6E                 	db	110	;'n'
  9171   00FBBA  20                 	db	32
  9172   00FBBB  49                 	db	73	;'I'
  9173   00FBBC  2F                 	db	47
  9174   00FBBD  4F                 	db	79	;'O'
  9175   00FBBE  20                 	db	32
  9176   00FBBF  72                 	db	114	;'r'
  9177   00FBC0  65                 	db	101	;'e'
  9178   00FBC1  61                 	db	97	;'a'
  9179   00FBC2  64                 	db	100	;'d'
  9180   00FBC3  20                 	db	32
  9181   00FBC4  28                 	db	40
  9182   00FBC5  25                 	db	37
  9183   00FBC6  30                 	db	48	;'0'
  9184   00FBC7  32                 	db	50	;'2'
  9185   00FBC8  58                 	db	88	;'X'
  9186   00FBC9  48                 	db	72	;'H'
  9187   00FBCA  29                 	db	41
  9188   00FBCB  0A                 	db	10
  9189   00FBCC  0D                 	db	13
  9190   00FBCD  00                 	db	0
  9191   00FBCE  53                 	db	83	;'S'
  9192   00FBCF  44                 	db	68	;'D'
  9193   00FBD0  20                 	db	32
  9194   00FBD1  43                 	db	67	;'C'
  9195   00FBD2  61                 	db	97	;'a'
  9196   00FBD3  72                 	db	114	;'r'
  9197   00FBD4  64                 	db	100	;'d'
  9198   00FBD5  3A                 	db	58	;':'
  9199   00FBD6  20                 	db	32
  9200   00FBD7  69                 	db	105	;'i'
  9201   00FBD8  6E                 	db	110	;'n'
  9202   00FBD9  69                 	db	105	;'i'
  9203   00FBDA  74                 	db	116	;'t'
  9204   00FBDB  69                 	db	105	;'i'
  9205   00FBDC  61                 	db	97	;'a'
  9206   00FBDD  6C                 	db	108	;'l'
  9207   00FBDE  69                 	db	105	;'i'
  9208   00FBDF  7A                 	db	122	;'z'
  9209   00FBE0  65                 	db	101	;'e'
  9210   00FBE1  20                 	db	32
  9211   00FBE2  2E                 	db	46
  9212   00FBE3  2E                 	db	46
  9213   00FBE4  2E                 	db	46
  9214   00FBE5  20                 	db	32
  9215   00FBE6  73                 	db	115	;'s'
  9216   00FBE7  75                 	db	117	;'u'
  9217   00FBE8  63                 	db	99	;'c'
  9218   00FBE9  63                 	db	99	;'c'
  9219   00FBEA  65                 	db	101	;'e'
  9220   00FBEB  65                 	db	101	;'e'
  9221   00FBEC  64                 	db	100	;'d'
  9222   00FBED  65                 	db	101	;'e'
  9223   00FBEE  64                 	db	100	;'d'
  9224   00FBEF  0A                 	db	10
  9225   00FBF0  0D                 	db	13
  9226   00FBF1  00                 	db	0
  9227   00FBF2  53                 	db	83	;'S'
  9228   00FBF3  44                 	db	68	;'D'
  9229   00FBF4  20                 	db	32
  9230   00FBF5  43                 	db	67	;'C'
  9231   00FBF6  61                 	db	97	;'a'
  9232   00FBF7  72                 	db	114	;'r'
  9233   00FBF8  64                 	db	100	;'d'
  9234   00FBF9  3A                 	db	58	;':'
  9235   00FBFA  20                 	db	32
  9236   00FBFB  75                 	db	117	;'u'
  9237   00FBFC  6E                 	db	110	;'n'
  9238   00FBFD  65                 	db	101	;'e'
  9239   00FBFE  78                 	db	120	;'x'
  9240   00FBFF  70                 	db	112	;'p'
  9241   00FC00  65                 	db	101	;'e'
  9242   00FC01  63                 	db	99	;'c'
  9243   00FC02  74                 	db	116	;'t'
  9244   00FC03  65                 	db	101	;'e'
  9245   00FC04  64                 	db	100	;'d'
  9246   00FC05  20                 	db	32
  9247   00FC06  72                 	db	114	;'r'
  9248   00FC07  65                 	db	101	;'e'
  9249   00FC08  73                 	db	115	;'s'
  9250   00FC09  70                 	db	112	;'p'
  9251   00FC0A  6F                 	db	111	;'o'
  9252   00FC0B  6E                 	db	110	;'n'
  9253   00FC0C  73                 	db	115	;'s'
  9254   00FC0D  65                 	db	101	;'e'
  9255   00FC0E  20                 	db	32
  9256   00FC0F  25                 	db	37
  9257   00FC10  30                 	db	48	;'0'
  9258   00FC11  32                 	db	50	;'2'
  9259   00FC12  78                 	db	120	;'x'
  9260   00FC13  0A                 	db	10
  9261   00FC14  0D                 	db	13
  9262   00FC15  00                 	db	0
  9263   00FC16  53                 	db	83	;'S'
  9264   00FC17  44                 	db	68	;'D'
  9265   00FC18  20                 	db	32
  9266   00FC19  43                 	db	67	;'C'
  9267   00FC1A  61                 	db	97	;'a'
  9268   00FC1B  72                 	db	114	;'r'
  9269   00FC1C  64                 	db	100	;'d'
  9270   00FC1D  3A                 	db	58	;':'
  9271   00FC1E  20                 	db	32
  9272   00FC1F  41                 	db	65	;'A'
  9273   00FC20  43                 	db	67	;'C'
  9274   00FC21  4D                 	db	77	;'M'
  9275   00FC22  44                 	db	68	;'D'
  9276   00FC23  34                 	db	52	;'4'
  9277   00FC24  31                 	db	49	;'1'
  9278   00FC25  20                 	db	32
  9279   00FC26  72                 	db	114	;'r'
  9280   00FC27  65                 	db	101	;'e'
  9281   00FC28  73                 	db	115	;'s'
  9282   00FC29  70                 	db	112	;'p'
  9283   00FC2A  6F                 	db	111	;'o'
  9284   00FC2B  6E                 	db	110	;'n'
  9285   00FC2C  73                 	db	115	;'s'
  9286   00FC2D  65                 	db	101	;'e'
  9287   00FC2E  20                 	db	32
  9288   00FC2F  69                 	db	105	;'i'
  9289   00FC30  73                 	db	115	;'s'
  9290   00FC31  20                 	db	32
  9291   00FC32  25                 	db	37
  9292   00FC33  30                 	db	48	;'0'
  9293   00FC34  32                 	db	50	;'2'
  9294   00FC35  78                 	db	120	;'x'
  9295   00FC36  0A                 	db	10
  9296   00FC37  0D                 	db	13
  9297   00FC38  00                 	db	0
  9298   00FC39  53                 	db	83	;'S'
  9299   00FC3A  44                 	db	68	;'D'
  9300   00FC3B  20                 	db	32
  9301   00FC3C  43                 	db	67	;'C'
  9302   00FC3D  61                 	db	97	;'a'
  9303   00FC3E  72                 	db	114	;'r'
  9304   00FC3F  64                 	db	100	;'d'
  9305   00FC40  3A                 	db	58	;':'
  9306   00FC41  20                 	db	32
  9307   00FC42  77                 	db	119	;'w'
  9308   00FC43  72                 	db	114	;'r'
  9309   00FC44  69                 	db	105	;'i'
  9310   00FC45  74                 	db	116	;'t'
  9311   00FC46  65                 	db	101	;'e'
  9312   00FC47  35                 	db	53	;'5'
  9313   00FC48  31                 	db	49	;'1'
  9314   00FC49  32                 	db	50	;'2'
  9315   00FC4A  3A                 	db	58	;':'
  9316   00FC4B  20                 	db	32
  9317   00FC4C  74                 	db	116	;'t'
  9318   00FC4D  6F                 	db	111	;'o'
  9319   00FC4E  6B                 	db	107	;'k'
  9320   00FC4F  65                 	db	101	;'e'
  9321   00FC50  6E                 	db	110	;'n'
  9322   00FC51  20                 	db	32
  9323   00FC52  69                 	db	105	;'i'
  9324   00FC53  73                 	db	115	;'s'
  9325   00FC54  20                 	db	32
  9326   00FC55  25                 	db	37
  9327   00FC56  30                 	db	48	;'0'
  9328   00FC57  32                 	db	50	;'2'
  9329   00FC58  78                 	db	120	;'x'
  9330   00FC59  0A                 	db	10
  9331   00FC5A  0D                 	db	13
  9332   00FC5B  00                 	db	0
  9333   00FC5C                     STR_81:
  9334   00FC5C  4D                 	db	77	;'M'
  9335   00FC5D  65                 	db	101	;'e'
  9336   00FC5E  6D                 	db	109	;'m'
  9337   00FC5F  6F                 	db	111	;'o'
  9338   00FC60  72                 	db	114	;'r'
  9339   00FC61  79                 	db	121	;'y'
  9340   00FC62  20                 	db	32
  9341   00FC63  30                 	db	48	;'0'
  9342   00FC64  30                 	db	48	;'0'
  9343   00FC65  30                 	db	48	;'0'
  9344   00FC66  30                 	db	48	;'0'
  9345   00FC67  30                 	db	48	;'0'
  9346   00FC68  30                 	db	48	;'0'
  9347   00FC69  20                 	db	32
  9348   00FC6A  2D                 	db	45
  9349   00FC6B  20                 	db	32
  9350   00FC6C  25                 	db	37
  9351   00FC6D  30                 	db	48	;'0'
  9352   00FC6E  36                 	db	54	;'6'
  9353   00FC6F  6C                 	db	108	;'l'
  9354   00FC70  58                 	db	88	;'X'
  9355   00FC71  48                 	db	72	;'H'
  9356   00FC72  20                 	db	32
  9357   00FC73  25                 	db	37
  9358   00FC74  64                 	db	100	;'d'
  9359   00FC75  20                 	db	32
  9360   00FC76  4B                 	db	75	;'K'
  9361   00FC77  42                 	db	66	;'B'
  9362   00FC78  20                 	db	32
  9363   00FC79  4F                 	db	79	;'O'
  9364   00FC7A  4B                 	db	75	;'K'
  9365   00FC7B  0D                 	db	13
  9366   00FC7C  0A                 	db	10
  9367   00FC7D  00                 	db	0
  9368   00FC7E  53                 	db	83	;'S'
  9369   00FC7F  44                 	db	68	;'D'
  9370   00FC80  20                 	db	32
  9371   00FC81  43                 	db	67	;'C'
  9372   00FC82  61                 	db	97	;'a'
  9373   00FC83  72                 	db	114	;'r'
  9374   00FC84  64                 	db	100	;'d'
  9375   00FC85  3A                 	db	58	;':'
  9376   00FC86  20                 	db	32
  9377   00FC87  43                 	db	67	;'C'
  9378   00FC88  4D                 	db	77	;'M'
  9379   00FC89  44                 	db	68	;'D'
  9380   00FC8A  35                 	db	53	;'5'
  9381   00FC8B  39                 	db	57	;'9'
  9382   00FC8C  20                 	db	32
  9383   00FC8D  72                 	db	114	;'r'
  9384   00FC8E  65                 	db	101	;'e'
  9385   00FC8F  73                 	db	115	;'s'
  9386   00FC90  70                 	db	112	;'p'
  9387   00FC91  6F                 	db	111	;'o'
  9388   00FC92  6E                 	db	110	;'n'
  9389   00FC93  73                 	db	115	;'s'
  9390   00FC94  65                 	db	101	;'e'
  9391   00FC95  20                 	db	32
  9392   00FC96  69                 	db	105	;'i'
  9393   00FC97  73                 	db	115	;'s'
  9394   00FC98  20                 	db	32
  9395   00FC99  25                 	db	37
  9396   00FC9A  30                 	db	48	;'0'
  9397   00FC9B  32                 	db	50	;'2'
  9398   00FC9C  78                 	db	120	;'x'
  9399   00FC9D  0A                 	db	10
  9400   00FC9E  0D                 	db	13
  9401   00FC9F  00                 	db	0
  9402   00FCA0  70                 	db	112	;'p'
  9403   00FCA1  61                 	db	97	;'a'
  9404   00FCA2  72                 	db	114	;'r'
  9405   00FCA3  74                 	db	116	;'t'
  9406   00FCA4  69                 	db	105	;'i'
  9407   00FCA5  74                 	db	116	;'t'
  9408   00FCA6  69                 	db	105	;'i'
  9409   00FCA7  6F                 	db	111	;'o'
  9410   00FCA8  6E                 	db	110	;'n'
  9411   00FCA9  20                 	db	32
  9412   00FCAA  73                 	db	115	;'s'
  9413   00FCAB  74                 	db	116	;'t'
  9414   00FCAC  61                 	db	97	;'a'
  9415   00FCAD  72                 	db	114	;'r'
  9416   00FCAE  74                 	db	116	;'t'
  9417   00FCAF  73                 	db	115	;'s'
  9418   00FCB0  20                 	db	32
  9419   00FCB1  61                 	db	97	;'a'
  9420   00FCB2  74                 	db	116	;'t'
  9421   00FCB3  20                 	db	32
  9422   00FCB4  73                 	db	115	;'s'
  9423   00FCB5  65                 	db	101	;'e'
  9424   00FCB6  63                 	db	99	;'c'
  9425   00FCB7  74                 	db	116	;'t'
  9426   00FCB8  6F                 	db	111	;'o'
  9427   00FCB9  72                 	db	114	;'r'
  9428   00FCBA  20                 	db	32
  9429   00FCBB  25                 	db	37
  9430   00FCBC  6C                 	db	108	;'l'
  9431   00FCBD  64                 	db	100	;'d'
  9432   00FCBE  0A                 	db	10
  9433   00FCBF  0D                 	db	13
  9434   00FCC0  00                 	db	0
  9435   00FCC1                     STR_89:
  9436   00FCC1  66                 	db	102	;'f'
  9437   00FCC2  5F                 	db	95	;'_'
  9438   00FCC3  77                 	db	119	;'w'
  9439   00FCC4  72                 	db	114	;'r'
  9440   00FCC5  69                 	db	105	;'i'
  9441   00FCC6  74                 	db	116	;'t'
  9442   00FCC7  65                 	db	101	;'e'
  9443   00FCC8  28                 	db	40
  9444   00FCC9  29                 	db	41
  9445   00FCCA  3A                 	db	58	;':'
  9446   00FCCB  20                 	db	32
  9447   00FCCC  45                 	db	69	;'E'
  9448   00FCCD  52                 	db	82	;'R'
  9449   00FCCE  52                 	db	82	;'R'
  9450   00FCCF  4F                 	db	79	;'O'
  9451   00FCD0  52                 	db	82	;'R'
  9452   00FCD1  20                 	db	32
  9453   00FCD2  72                 	db	114	;'r'
  9454   00FCD3  65                 	db	101	;'e'
  9455   00FCD4  73                 	db	115	;'s'
  9456   00FCD5  3D                 	db	61	;'='
  9457   00FCD6  25                 	db	37
  9458   00FCD7  64                 	db	100	;'d'
  9459   00FCD8  2C                 	db	44
  9460   00FCD9  20                 	db	32
  9461   00FCDA  6E                 	db	110	;'n'
  9462   00FCDB  3D                 	db	61	;'='
  9463   00FCDC  25                 	db	37
  9464   00FCDD  64                 	db	100	;'d'
  9465   00FCDE  0A                 	db	10
  9466   00FCDF  0D                 	db	13
  9467   00FCE0  00                 	db	0
  9468   00FCE1                     STR_88:
  9469   00FCE1  66                 	db	102	;'f'
  9470   00FCE2  5F                 	db	95	;'_'
  9471   00FCE3  72                 	db	114	;'r'
  9472   00FCE4  65                 	db	101	;'e'
  9473   00FCE5  61                 	db	97	;'a'
  9474   00FCE6  64                 	db	100	;'d'
  9475   00FCE7  28                 	db	40
  9476   00FCE8  29                 	db	41
  9477   00FCE9  3A                 	db	58	;':'
  9478   00FCEA  20                 	db	32
  9479   00FCEB  45                 	db	69	;'E'
  9480   00FCEC  52                 	db	82	;'R'
  9481   00FCED  52                 	db	82	;'R'
  9482   00FCEE  4F                 	db	79	;'O'
  9483   00FCEF  52                 	db	82	;'R'
  9484   00FCF0  20                 	db	32
  9485   00FCF1  72                 	db	114	;'r'
  9486   00FCF2  65                 	db	101	;'e'
  9487   00FCF3  73                 	db	115	;'s'
  9488   00FCF4  3D                 	db	61	;'='
  9489   00FCF5  25                 	db	37
  9490   00FCF6  64                 	db	100	;'d'
  9491   00FCF7  2C                 	db	44
  9492   00FCF8  20                 	db	32
  9493   00FCF9  6E                 	db	110	;'n'
  9494   00FCFA  3D                 	db	61	;'='
  9495   00FCFB  25                 	db	37
  9496   00FCFC  64                 	db	100	;'d'
  9497   00FCFD  0A                 	db	10
  9498   00FCFE  0D                 	db	13
  9499   00FCFF  00                 	db	0
  9500   00FD00                     STR_59:
  9501   00FD00  42                 	db	66	;'B'
  9502   00FD01  6F                 	db	111	;'o'
  9503   00FD02  61                 	db	97	;'a'
  9504   00FD03  72                 	db	114	;'r'
  9505   00FD04  64                 	db	100	;'d'
  9506   00FD05  3A                 	db	58	;':'
  9507   00FD06  20                 	db	32
  9508   00FD07  53                 	db	83	;'S'
  9509   00FD08  42                 	db	66	;'B'
  9510   00FD09  43                 	db	67	;'C'
  9511   00FD0A  38                 	db	56	;'8'
  9512   00FD0B  30                 	db	48	;'0'
  9513   00FD0C  38                 	db	56	;'8'
  9514   00FD0D  30                 	db	48	;'0'
  9515   00FD0E  20                 	db	32
  9516   00FD0F  2B                 	db	43
  9517   00FD10  20                 	db	32
  9518   00FD11  45                 	db	69	;'E'
  9519   00FD12  4D                 	db	77	;'M'
  9520   00FD13  55                 	db	85	;'U'
  9521   00FD14  5A                 	db	90	;'Z'
  9522   00FD15  38                 	db	56	;'8'
  9523   00FD16  30                 	db	48	;'0'
  9524   00FD17  2D                 	db	45
  9525   00FD18  35                 	db	53	;'5'
  9526   00FD19  37                 	db	55	;'7'
  9527   00FD1A  51                 	db	81	;'Q'
  9528   00FD1B  0A                 	db	10
  9529   00FD1C  0D                 	db	13
  9530   00FD1D  00                 	db	0
  9531   00FD1E  66                 	db	102	;'f'
  9532   00FD1F  61                 	db	97	;'a'
  9533   00FD20  69                 	db	105	;'i'
  9534   00FD21  6C                 	db	108	;'l'
  9535   00FD22  65                 	db	101	;'e'
  9536   00FD23  64                 	db	100	;'d'
  9537   00FD24  20                 	db	32
  9538   00FD25  74                 	db	116	;'t'
  9539   00FD26  6F                 	db	111	;'o'
  9540   00FD27  20                 	db	32
  9541   00FD28  77                 	db	119	;'w'
  9542   00FD29  72                 	db	114	;'r'
  9543   00FD2A  69                 	db	105	;'i'
  9544   00FD2B  74                 	db	116	;'t'
  9545   00FD2C  65                 	db	101	;'e'
  9546   00FD2D  20                 	db	32
  9547   00FD2E  73                 	db	115	;'s'
  9548   00FD2F  65                 	db	101	;'e'
  9549   00FD30  63                 	db	99	;'c'
  9550   00FD31  74                 	db	116	;'t'
  9551   00FD32  6F                 	db	111	;'o'
  9552   00FD33  72                 	db	114	;'r'
  9553   00FD34  20                 	db	32
  9554   00FD35  25                 	db	37
  9555   00FD36  6C                 	db	108	;'l'
  9556   00FD37  64                 	db	100	;'d'
  9557   00FD38  0A                 	db	10
  9558   00FD39  0D                 	db	13
  9559   00FD3A  00                 	db	0
  9560   00FD3B  0A                 	db	10
  9561   00FD3C  0D                 	db	13
  9562   00FD3D  53                 	db	83	;'S'
  9563   00FD3E  44                 	db	68	;'D'
  9564   00FD3F  20                 	db	32
  9565   00FD40  43                 	db	67	;'C'
  9566   00FD41  61                 	db	97	;'a'
  9567   00FD42  72                 	db	114	;'r'
  9568   00FD43  64                 	db	100	;'d'
  9569   00FD44  3A                 	db	58	;':'
  9570   00FD45  20                 	db	32
  9571   00FD46  69                 	db	105	;'i'
  9572   00FD47  6E                 	db	110	;'n'
  9573   00FD48  69                 	db	105	;'i'
  9574   00FD49  74                 	db	116	;'t'
  9575   00FD4A  69                 	db	105	;'i'
  9576   00FD4B  61                 	db	97	;'a'
  9577   00FD4C  6C                 	db	108	;'l'
  9578   00FD4D  69                 	db	105	;'i'
  9579   00FD4E  7A                 	db	122	;'z'
  9580   00FD4F  65                 	db	101	;'e'
  9581   00FD50  20                 	db	32
  9582   00FD51  2E                 	db	46
  9583   00FD52  2E                 	db	46
  9584   00FD53  2E                 	db	46
  9585   00FD54  0A                 	db	10
  9586   00FD55  0D                 	db	13
  9587   00FD56  00                 	db	0
  9588   00FD57  66                 	db	102	;'f'
  9589   00FD58  61                 	db	97	;'a'
  9590   00FD59  69                 	db	105	;'i'
  9591   00FD5A  6C                 	db	108	;'l'
  9592   00FD5B  65                 	db	101	;'e'
  9593   00FD5C  64                 	db	100	;'d'
  9594   00FD5D  20                 	db	32
  9595   00FD5E  74                 	db	116	;'t'
  9596   00FD5F  6F                 	db	111	;'o'
  9597   00FD60  20                 	db	32
  9598   00FD61  72                 	db	114	;'r'
  9599   00FD62  65                 	db	101	;'e'
  9600   00FD63  61                 	db	97	;'a'
  9601   00FD64  64                 	db	100	;'d'
  9602   00FD65  20                 	db	32
  9603   00FD66  73                 	db	115	;'s'
  9604   00FD67  65                 	db	101	;'e'
  9605   00FD68  63                 	db	99	;'c'
  9606   00FD69  74                 	db	116	;'t'
  9607   00FD6A  6F                 	db	111	;'o'
  9608   00FD6B  72                 	db	114	;'r'
  9609   00FD6C  20                 	db	32
  9610   00FD6D  25                 	db	37
  9611   00FD6E  6C                 	db	108	;'l'
  9612   00FD6F  64                 	db	100	;'d'
  9613   00FD70  0A                 	db	10
  9614   00FD71  0D                 	db	13
  9615   00FD72  00                 	db	0
  9616   00FD73                     STR_66:
  9617   00FD73  46                 	db	70	;'F'
  9618   00FD74  61                 	db	97	;'a'
  9619   00FD75  69                 	db	105	;'i'
  9620   00FD76  6C                 	db	108	;'l'
  9621   00FD77  65                 	db	101	;'e'
  9622   00FD78  64                 	db	100	;'d'
  9623   00FD79  20                 	db	32
  9624   00FD7A  74                 	db	116	;'t'
  9625   00FD7B  6F                 	db	111	;'o'
  9626   00FD7C  20                 	db	32
  9627   00FD7D  6F                 	db	111	;'o'
  9628   00FD7E  70                 	db	112	;'p'
  9629   00FD7F  65                 	db	101	;'e'
  9630   00FD80  6E                 	db	110	;'n'
  9631   00FD81  20                 	db	32
  9632   00FD82  53                 	db	83	;'S'
  9633   00FD83  44                 	db	68	;'D'
  9634   00FD84  20                 	db	32
  9635   00FD85  43                 	db	67	;'C'
  9636   00FD86  61                 	db	97	;'a'
  9637   00FD87  72                 	db	114	;'r'
  9638   00FD88  64                 	db	100	;'d'
  9639   00FD89  2E                 	db	46
  9640   00FD8A  2E                 	db	46
  9641   00FD8B  0A                 	db	10
  9642   00FD8C  0D                 	db	13
  9643   00FD8D  00                 	db	0
  9644   00FD8E                     STR_63:
  9645   00FD8E  46                 	db	70	;'F'
  9646   00FD8F  61                 	db	97	;'a'
  9647   00FD90  69                 	db	105	;'i'
  9648   00FD91  6C                 	db	108	;'l'
  9649   00FD92  65                 	db	101	;'e'
  9650   00FD93  64                 	db	100	;'d'
  9651   00FD94  20                 	db	32
  9652   00FD95  74                 	db	116	;'t'
  9653   00FD96  6F                 	db	111	;'o'
  9654   00FD97  20                 	db	32
  9655   00FD98  6D                 	db	109	;'m'
  9656   00FD99  6F                 	db	111	;'o'
  9657   00FD9A  75                 	db	117	;'u'
  9658   00FD9B  6E                 	db	110	;'n'
  9659   00FD9C  74                 	db	116	;'t'
  9660   00FD9D  20                 	db	32
  9661   00FD9E  53                 	db	83	;'S'
  9662   00FD9F  44                 	db	68	;'D'
  9663   00FDA0  20                 	db	32
  9664   00FDA1  43                 	db	67	;'C'
  9665   00FDA2  61                 	db	97	;'a'
  9666   00FDA3  72                 	db	114	;'r'
  9667   00FDA4  64                 	db	100	;'d'
  9668   00FDA5  2E                 	db	46
  9669   00FDA6  0A                 	db	10
  9670   00FDA7  0D                 	db	13
  9671   00FDA8  00                 	db	0
  9672   00FDA9  53                 	db	83	;'S'
  9673   00FDAA  44                 	db	68	;'D'
  9674   00FDAB  20                 	db	32
  9675   00FDAC  43                 	db	67	;'C'
  9676   00FDAD  61                 	db	97	;'a'
  9677   00FDAE  72                 	db	114	;'r'
  9678   00FDAF  64                 	db	100	;'d'
  9679   00FDB0  3A                 	db	58	;':'
  9680   00FDB1  20                 	db	32
  9681   00FDB2  41                 	db	65	;'A'
  9682   00FDB3  43                 	db	67	;'C'
  9683   00FDB4  4D                 	db	77	;'M'
  9684   00FDB5  44                 	db	68	;'D'
  9685   00FDB6  34                 	db	52	;'4'
  9686   00FDB7  31                 	db	49	;'1'
  9687   00FDB8  2C                 	db	44
  9688   00FDB9  20                 	db	32
  9689   00FDBA  52                 	db	82	;'R'
  9690   00FDBB  31                 	db	49	;'1'
  9691   00FDBC  3D                 	db	61	;'='
  9692   00FDBD  25                 	db	37
  9693   00FDBE  30                 	db	48	;'0'
  9694   00FDBF  32                 	db	50	;'2'
  9695   00FDC0  78                 	db	120	;'x'
  9696   00FDC1  0A                 	db	10
  9697   00FDC2  0D                 	db	13
  9698   00FDC3  00                 	db	0
  9699   00FDC4  66                 	db	102	;'f'
  9700   00FDC5  61                 	db	97	;'a'
  9701   00FDC6  69                 	db	105	;'i'
  9702   00FDC7  6C                 	db	108	;'l'
  9703   00FDC8  65                 	db	101	;'e'
  9704   00FDC9  64                 	db	100	;'d'
  9705   00FDCA  20                 	db	32
  9706   00FDCB  74                 	db	116	;'t'
  9707   00FDCC  6F                 	db	111	;'o'
  9708   00FDCD  20                 	db	32
  9709   00FDCE  72                 	db	114	;'r'
  9710   00FDCF  65                 	db	101	;'e'
  9711   00FDD0  61                 	db	97	;'a'
  9712   00FDD1  64                 	db	100	;'d'
  9713   00FDD2  20                 	db	32
  9714   00FDD3  73                 	db	115	;'s'
  9715   00FDD4  65                 	db	101	;'e'
  9716   00FDD5  63                 	db	99	;'c'
  9717   00FDD6  74                 	db	116	;'t'
  9718   00FDD7  6F                 	db	111	;'o'
  9719   00FDD8  72                 	db	114	;'r'
  9720   00FDD9  20                 	db	32
  9721   00FDDA  30                 	db	48	;'0'
  9722   00FDDB  0A                 	db	10
  9723   00FDDC  0D                 	db	13
  9724   00FDDD  00                 	db	0
  9725   00FDDE                     STR_84:
  9726   00FDDE  20                 	db	32
  9727   00FDDF  20                 	db	32
  9728   00FDE0  20                 	db	32
  9729   00FDE1  20                 	db	32
  9730   00FDE2  20                 	db	32
  9731   00FDE3  20                 	db	32
  9732   00FDE4  20                 	db	32
  9733   00FDE5  20                 	db	32
  9734   00FDE6  20                 	db	32
  9735   00FDE7  20                 	db	32
  9736   00FDE8  20                 	db	32
  9737   00FDE9  20                 	db	32
  9738   00FDEA  20                 	db	32
  9739   00FDEB  20                 	db	32
  9740   00FDEC  20                 	db	32
  9741   00FDED  20                 	db	32
  9742   00FDEE  20                 	db	32
  9743   00FDEF  20                 	db	32
  9744   00FDF0  20                 	db	32
  9745   00FDF1  20                 	db	32
  9746   00FDF2  20                 	db	32
  9747   00FDF3  20                 	db	32
  9748   00FDF4  20                 	db	32
  9749   00FDF5  0D                 	db	13
  9750   00FDF6  00                 	db	0
  9751   00FDF7                     STR_83:
  9752   00FDF7  77                 	db	119	;'w'
  9753   00FDF8  61                 	db	97	;'a'
  9754   00FDF9  69                 	db	105	;'i'
  9755   00FDFA  74                 	db	116	;'t'
  9756   00FDFB  20                 	db	32
  9757   00FDFC  66                 	db	102	;'f'
  9758   00FDFD  6F                 	db	111	;'o'
  9759   00FDFE  72                 	db	114	;'r'
  9760   00FDFF  20                 	db	32
  9761   00FE00  70                 	db	112	;'p'
  9762   00FE01  72                 	db	114	;'r'
  9763   00FE02  6F                 	db	111	;'o'
  9764   00FE03  67                 	db	103	;'g'
  9765   00FE04  72                 	db	114	;'r'
  9766   00FE05  61                 	db	97	;'a'
  9767   00FE06  6D                 	db	109	;'m'
  9768   00FE07  6D                 	db	109	;'m'
  9769   00FE08  65                 	db	101	;'e'
  9770   00FE09  72                 	db	114	;'r'
  9771   00FE0A  20                 	db	32
  9772   00FE0B  2E                 	db	46
  9773   00FE0C  2E                 	db	46
  9774   00FE0D  2E                 	db	46
  9775   00FE0E  0D                 	db	13
  9776   00FE0F  00                 	db	0
  9777   00FE10  53                 	db	83	;'S'
  9778   00FE11  44                 	db	68	;'D'
  9779   00FE12  20                 	db	32
  9780   00FE13  43                 	db	67	;'C'
  9781   00FE14  61                 	db	97	;'a'
  9782   00FE15  72                 	db	114	;'r'
  9783   00FE16  64                 	db	100	;'d'
  9784   00FE17  3A                 	db	58	;':'
  9785   00FE18  20                 	db	32
  9786   00FE19  6E                 	db	110	;'n'
  9787   00FE1A  6F                 	db	111	;'o'
  9788   00FE1B  74                 	db	116	;'t'
  9789   00FE1C  20                 	db	32
  9790   00FE1D  73                 	db	115	;'s'
  9791   00FE1E  75                 	db	117	;'u'
  9792   00FE1F  70                 	db	112	;'p'
  9793   00FE20  6F                 	db	111	;'o'
  9794   00FE21  70                 	db	112	;'p'
  9795   00FE22  72                 	db	114	;'r'
  9796   00FE23  74                 	db	116	;'t'
  9797   00FE24  65                 	db	101	;'e'
  9798   00FE25  64                 	db	100	;'d'
  9799   00FE26  0A                 	db	10
  9800   00FE27  0D                 	db	13
  9801   00FE28  00                 	db	0
  9802   00FE29  53                 	db	83	;'S'
  9803   00FE2A  44                 	db	68	;'D'
  9804   00FE2B  20                 	db	32
  9805   00FE2C  43                 	db	67	;'C'
  9806   00FE2D  61                 	db	97	;'a'
  9807   00FE2E  72                 	db	114	;'r'
  9808   00FE2F  64                 	db	100	;'d'
  9809   00FE30  3A                 	db	58	;':'
  9810   00FE31  20                 	db	32
  9811   00FE32  43                 	db	67	;'C'
  9812   00FE33  4D                 	db	77	;'M'
  9813   00FE34  44                 	db	68	;'D'
  9814   00FE35  30                 	db	48	;'0'
  9815   00FE36  2C                 	db	44
  9816   00FE37  20                 	db	32
  9817   00FE38  52                 	db	82	;'R'
  9818   00FE39  31                 	db	49	;'1'
  9819   00FE3A  3D                 	db	61	;'='
  9820   00FE3B  25                 	db	37
  9821   00FE3C  30                 	db	48	;'0'
  9822   00FE3D  32                 	db	50	;'2'
  9823   00FE3E  78                 	db	120	;'x'
  9824   00FE3F  0A                 	db	10
  9825   00FE40  0D                 	db	13
  9826   00FE41  00                 	db	0
  9827   00FE42  64                 	db	100	;'d'
  9828   00FE43  69                 	db	105	;'i'
  9829   00FE44  73                 	db	115	;'s'
  9830   00FE45  6B                 	db	107	;'k'
  9831   00FE46  5F                 	db	95	;'_'
  9832   00FE47  69                 	db	105	;'i'
  9833   00FE48  6E                 	db	110	;'n'
  9834   00FE49  69                 	db	105	;'i'
  9835   00FE4A  74                 	db	116	;'t'
  9836   00FE4B  69                 	db	105	;'i'
  9837   00FE4C  61                 	db	97	;'a'
  9838   00FE4D  6C                 	db	108	;'l'
  9839   00FE4E  69                 	db	105	;'i'
  9840   00FE4F  7A                 	db	122	;'z'
  9841   00FE50  65                 	db	101	;'e'
  9842   00FE51  28                 	db	40
  9843   00FE52  25                 	db	37
  9844   00FE53  64                 	db	100	;'d'
  9845   00FE54  29                 	db	41
  9846   00FE55  2E                 	db	46
  9847   00FE56  2E                 	db	46
  9848   00FE57  2E                 	db	46
  9849   00FE58  0A                 	db	10
  9850   00FE59  0D                 	db	13
  9851   00FE5A  00                 	db	0
  9852   00FE5B                     STR_80:
  9853   00FE5B  4D                 	db	77	;'M'
  9854   00FE5C  65                 	db	101	;'e'
  9855   00FE5D  6D                 	db	109	;'m'
  9856   00FE5E  6F                 	db	111	;'o'
  9857   00FE5F  72                 	db	114	;'r'
  9858   00FE60  79                 	db	121	;'y'
  9859   00FE61  20                 	db	32
  9860   00FE62  30                 	db	48	;'0'
  9861   00FE63  30                 	db	48	;'0'
  9862   00FE64  30                 	db	48	;'0'
  9863   00FE65  30                 	db	48	;'0'
  9864   00FE66  30                 	db	48	;'0'
  9865   00FE67  30                 	db	48	;'0'
  9866   00FE68  20                 	db	32
  9867   00FE69  2D                 	db	45
  9868   00FE6A  20                 	db	32
  9869   00FE6B  25                 	db	37
  9870   00FE6C  30                 	db	48	;'0'
  9871   00FE6D  36                 	db	54	;'6'
  9872   00FE6E  6C                 	db	108	;'l'
  9873   00FE6F  58                 	db	88	;'X'
  9874   00FE70  48                 	db	72	;'H'
  9875   00FE71  0D                 	db	13
  9876   00FE72  00                 	db	0
  9877   00FE73  25                 	db	37
  9878   00FE74  73                 	db	115	;'s'
  9879   00FE75  25                 	db	37
  9880   00FE76  35                 	db	53	;'5'
  9881   00FE77  33                 	db	51	;'3'
  9882   00FE78  73                 	db	115	;'s'
  9883   00FE79  20                 	db	32
  9884   00FE7A  43                 	db	67	;'C'
  9885   00FE7B  48                 	db	72	;'H'
  9886   00FE7C  45                 	db	69	;'E'
  9887   00FE7D  43                 	db	67	;'C'
  9888   00FE7E  4B                 	db	75	;'K'
  9889   00FE7F  53                 	db	83	;'S'
  9890   00FE80  55                 	db	85	;'U'
  9891   00FE81  4D                 	db	77	;'M'
  9892   00FE82  3A                 	db	58	;':'
  9893   00FE83  20                 	db	32
  9894   00FE84  25                 	db	37
  9895   00FE85  30                 	db	48	;'0'
  9896   00FE86  32                 	db	50	;'2'
  9897   00FE87  78                 	db	120	;'x'
  9898   00FE88  0A                 	db	10
  9899   00FE89  0D                 	db	13
  9900   00FE8A  00                 	db	0
  9901   00FE8B                     STR_2:
  9902   00FE8B  70                 	db	112	;'p'
  9903   00FE8C  68                 	db	104	;'h'
  9904   00FE8D  79                 	db	121	;'y'
  9905   00FE8E  73                 	db	115	;'s'
  9906   00FE8F  69                 	db	105	;'i'
  9907   00FE90  63                 	db	99	;'c'
  9908   00FE91  61                 	db	97	;'a'
  9909   00FE92  6C                 	db	108	;'l'
  9910   00FE93  20                 	db	32
  9911   00FE94  64                 	db	100	;'d'
  9912   00FE95  72                 	db	114	;'r'
  9913   00FE96  69                 	db	105	;'i'
  9914   00FE97  76                 	db	118	;'v'
  9915   00FE98  65                 	db	101	;'e'
  9916   00FE99  72                 	db	114	;'r'
  9917   00FE9A  20                 	db	32
  9918   00FE9B  21                 	db	33
  9919   00FE9C  3D                 	db	61	;'='
  9920   00FE9D  20                 	db	32
  9921   00FE9E  30                 	db	48	;'0'
  9922   00FE9F  0A                 	db	10
  9923   00FEA0  0D                 	db	13
  9924   00FEA1  00                 	db	0
  9925   00FEA2                     STR_87:
  9926   00FEA2  66                 	db	102	;'f'
  9927   00FEA3  5F                 	db	95	;'_'
  9928   00FEA4  6C                 	db	108	;'l'
  9929   00FEA5  73                 	db	115	;'s'
  9930   00FEA6  65                 	db	101	;'e'
  9931   00FEA7  65                 	db	101	;'e'
  9932   00FEA8  6B                 	db	107	;'k'
  9933   00FEA9  28                 	db	40
  9934   00FEAA  29                 	db	41
  9935   00FEAB  3A                 	db	58	;':'
  9936   00FEAC  20                 	db	32
  9937   00FEAD  45                 	db	69	;'E'
  9938   00FEAE  52                 	db	82	;'R'
  9939   00FEAF  52                 	db	82	;'R'
  9940   00FEB0  4F                 	db	79	;'O'
  9941   00FEB1  52                 	db	82	;'R'
  9942   00FEB2  20                 	db	32
  9943   00FEB3  25                 	db	37
  9944   00FEB4  64                 	db	100	;'d'
  9945   00FEB5  0A                 	db	10
  9946   00FEB6  0D                 	db	13
  9947   00FEB7  00                 	db	0
  9948   00FEB8                     STR_90:
  9949   00FEB8  66                 	db	102	;'f'
  9950   00FEB9  5F                 	db	95	;'_'
  9951   00FEBA  73                 	db	115	;'s'
  9952   00FEBB  79                 	db	121	;'y'
  9953   00FEBC  6E                 	db	110	;'n'
  9954   00FEBD  63                 	db	99	;'c'
  9955   00FEBE  28                 	db	40
  9956   00FEBF  29                 	db	41
  9957   00FEC0  3A                 	db	58	;':'
  9958   00FEC1  20                 	db	32
  9959   00FEC2  45                 	db	69	;'E'
  9960   00FEC3  52                 	db	82	;'R'
  9961   00FEC4  52                 	db	82	;'R'
  9962   00FEC5  4F                 	db	79	;'O'
  9963   00FEC6  52                 	db	82	;'R'
  9964   00FEC7  20                 	db	32
  9965   00FEC8  25                 	db	37
  9966   00FEC9  64                 	db	100	;'d'
  9967   00FECA  0A                 	db	10
  9968   00FECB  0D                 	db	13
  9969   00FECC  00                 	db	0
  9970   00FECD  6E                 	db	110	;'n'
  9971   00FECE  6F                 	db	111	;'o'
  9972   00FECF  20                 	db	32
  9973   00FED0  46                 	db	70	;'F'
  9974   00FED1  41                 	db	65	;'A'
  9975   00FED2  54                 	db	84	;'T'
  9976   00FED3  33                 	db	51	;'3'
  9977   00FED4  32                 	db	50	;'2'
  9978   00FED5  20                 	db	32
  9979   00FED6  70                 	db	112	;'p'
  9980   00FED7  61                 	db	97	;'a'
  9981   00FED8  72                 	db	114	;'r'
  9982   00FED9  74                 	db	116	;'t'
  9983   00FEDA  69                 	db	105	;'i'
  9984   00FEDB  74                 	db	116	;'t'
  9985   00FEDC  69                 	db	105	;'i'
  9986   00FEDD  6F                 	db	111	;'o'
  9987   00FEDE  6E                 	db	110	;'n'
  9988   00FEDF  0A                 	db	10
  9989   00FEE0  0D                 	db	13
  9990   00FEE1  00                 	db	0
  9991   00FEE2  53                 	db	83	;'S'
  9992   00FEE3  44                 	db	68	;'D'
  9993   00FEE4  20                 	db	32
  9994   00FEE5  43                 	db	67	;'C'
  9995   00FEE6  61                 	db	97	;'a'
  9996   00FEE7  72                 	db	114	;'r'
  9997   00FEE8  64                 	db	100	;'d'
  9998   00FEE9  3A                 	db	58	;':'
  9999   00FEEA  20                 	db	32
 10000   00FEEB  74                 	db	116	;'t'
 10001   00FEEC  69                 	db	105	;'i'
 10002   00FEED  6D                 	db	109	;'m'
 10003   00FEEE  65                 	db	101	;'e'
 10004   00FEEF  6F                 	db	111	;'o'
 10005   00FEF0  75                 	db	117	;'u'
 10006   00FEF1  74                 	db	116	;'t'
 10007   00FEF2  0A                 	db	10
 10008   00FEF3  0D                 	db	13
 10009   00FEF4  00                 	db	0
 10010   00FEF5  6E                 	db	110	;'n'
 10011   00FEF6  6F                 	db	111	;'o'
 10012   00FEF7  20                 	db	32
 10013   00FEF8  4D                 	db	77	;'M'
 10014   00FEF9  42                 	db	66	;'B'
 10015   00FEFA  52                 	db	82	;'R'
 10016   00FEFB  20                 	db	32
 10017   00FEFC  73                 	db	115	;'s'
 10018   00FEFD  69                 	db	105	;'i'
 10019   00FEFE  67                 	db	103	;'g'
 10020   00FEFF  6E                 	db	110	;'n'
 10021   00FF00  61                 	db	97	;'a'
 10022   00FF01  74                 	db	116	;'t'
 10023   00FF02  75                 	db	117	;'u'
 10024   00FF03  72                 	db	114	;'r'
 10025   00FF04  65                 	db	101	;'e'
 10026   00FF05  0A                 	db	10
 10027   00FF06  0D                 	db	13
 10028   00FF07  00                 	db	0
 10029   00FF08                     STR_75:
 10030   00FF08  25                 	db	37
 10031   00FF09  73                 	db	115	;'s'
 10032   00FF0A  20                 	db	32
 10033   00FF0B  69                 	db	105	;'i'
 10034   00FF0C  73                 	db	115	;'s'
 10035   00FF0D  20                 	db	32
 10036   00FF0E  73                 	db	115	;'s'
 10037   00FF0F  65                 	db	101	;'e'
 10038   00FF10  6C                 	db	108	;'l'
 10039   00FF11  65                 	db	101	;'e'
 10040   00FF12  63                 	db	99	;'c'
 10041   00FF13  74                 	db	116	;'t'
 10042   00FF14  65                 	db	101	;'e'
 10043   00FF15  64                 	db	100	;'d'
 10044   00FF16  2E                 	db	46
 10045   00FF17  0A                 	db	10
 10046   00FF18  0D                 	db	13
 10047   00FF19  00                 	db	0
 10048   00FF1A                     STR_86:
 10049   00FF1A  73                 	db	115	;'s'
 10050   00FF1B  65                 	db	101	;'e'
 10051   00FF1C  6C                 	db	108	;'l'
 10052   00FF1D  65                 	db	101	;'e'
 10053   00FF1E  63                 	db	99	;'c'
 10054   00FF1F  74                 	db	116	;'t'
 10055   00FF20  20                 	db	32
 10056   00FF21  45                 	db	69	;'E'
 10057   00FF22  52                 	db	82	;'R'
 10058   00FF23  52                 	db	82	;'R'
 10059   00FF24  4F                 	db	79	;'O'
 10060   00FF25  52                 	db	82	;'R'
 10061   00FF26  20                 	db	32
 10062   00FF27  25                 	db	37
 10063   00FF28  64                 	db	100	;'d'
 10064   00FF29  0A                 	db	10
 10065   00FF2A  0D                 	db	13
 10066   00FF2B  00                 	db	0
 10067   00FF2C  53                 	db	83	;'S'
 10068   00FF2D  44                 	db	68	;'D'
 10069   00FF2E  20                 	db	32
 10070   00FF2F  43                 	db	67	;'C'
 10071   00FF30  61                 	db	97	;'a'
 10072   00FF31  72                 	db	114	;'r'
 10073   00FF32  64                 	db	100	;'d'
 10074   00FF33  3A                 	db	58	;':'
 10075   00FF34  20                 	db	32
 10076   00FF35  72                 	db	114	;'r'
 10077   00FF36  65                 	db	101	;'e'
 10078   00FF37  61                 	db	97	;'a'
 10079   00FF38  64                 	db	100	;'d'
 10080   00FF39  79                 	db	121	;'y'
 10081   00FF3A  2E                 	db	46
 10082   00FF3B  0A                 	db	10
 10083   00FF3C  0D                 	db	13
 10084   00FF3D  00                 	db	0
 10085   00FF3E  6E                 	db	110	;'n'
 10086   00FF3F  6F                 	db	111	;'o'
 10087   00FF40  20                 	db	32
 10088   00FF41  76                 	db	118	;'v'
 10089   00FF42  61                 	db	97	;'a'
 10090   00FF43  6C                 	db	108	;'l'
 10091   00FF44  69                 	db	105	;'i'
 10092   00FF45  64                 	db	100	;'d'
 10093   00FF46  20                 	db	32
 10094   00FF47  76                 	db	118	;'v'
 10095   00FF48  6F                 	db	111	;'o'
 10096   00FF49  6C                 	db	108	;'l'
 10097   00FF4A  75                 	db	117	;'u'
 10098   00FF4B  6D                 	db	109	;'m'
 10099   00FF4C  65                 	db	101	;'e'
 10100   00FF4D  0A                 	db	10
 10101   00FF4E  0D                 	db	13
 10102   00FF4F  00                 	db	0
 10103   00FF50                     STR_32:
 10104   00FF50  53                 	db	83	;'S'
 10105   00FF51  50                 	db	80	;'P'
 10106   00FF52  49                 	db	73	;'I'
 10107   00FF53  5F                 	db	95	;'_'
 10108   00FF54  53                 	db	83	;'S'
 10109   00FF55  44                 	db	68	;'D'
 10110   00FF56  5F                 	db	95	;'_'
 10111   00FF57  63                 	db	99	;'c'
 10112   00FF58  6F                 	db	111	;'o'
 10113   00FF59  6E                 	db	110	;'n'
 10114   00FF5A  66                 	db	102	;'f'
 10115   00FF5B  69                 	db	105	;'i'
 10116   00FF5C  67                 	db	103	;'g'
 10117   00FF5D  75                 	db	117	;'u'
 10118   00FF5E  72                 	db	114	;'r'
 10119   00FF5F  65                 	db	101	;'e'
 10120   00FF60  00                 	db	0
 10121   00FF61                     STR_79:
 10122   00FF61  4E                 	db	78	;'N'
 10123   00FF62  6F                 	db	111	;'o'
 10124   00FF63  20                 	db	32
 10125   00FF64  62                 	db	98	;'b'
 10126   00FF65  6F                 	db	111	;'o'
 10127   00FF66  6F                 	db	111	;'o'
 10128   00FF67  74                 	db	116	;'t'
 10129   00FF68  20                 	db	32
 10130   00FF69  64                 	db	100	;'d'
 10131   00FF6A  69                 	db	105	;'i'
 10132   00FF6B  73                 	db	115	;'s'
 10133   00FF6C  6B                 	db	107	;'k'
 10134   00FF6D  2E                 	db	46
 10135   00FF6E  0A                 	db	10
 10136   00FF6F  0D                 	db	13
 10137   00FF70  00                 	db	0
 10138   00FF71                     STR_77:
 10139   00FF71  25                 	db	37
 10140   00FF72  73                 	db	115	;'s'
 10141   00FF73  2F                 	db	47
 10142   00FF74  44                 	db	68	;'D'
 10143   00FF75  52                 	db	82	;'R'
 10144   00FF76  49                 	db	73	;'I'
 10145   00FF77  56                 	db	86	;'V'
 10146   00FF78  45                 	db	69	;'E'
 10147   00FF79  25                 	db	37
 10148   00FF7A  63                 	db	99	;'c'
 10149   00FF7B  2E                 	db	46
 10150   00FF7C  44                 	db	68	;'D'
 10151   00FF7D  53                 	db	83	;'S'
 10152   00FF7E  4B                 	db	75	;'K'
 10153   00FF7F  00                 	db	0
 10154   00FF80                     STR_27:
 10155   00FF80  2A                 	db	42
 10156   00FF81  2B                 	db	43
 10157   00FF82  2C                 	db	44
 10158   00FF83  3A                 	db	58	;':'
 10159   00FF84  3B                 	db	59	;';'
 10160   00FF85  3C                 	db	60	;'<'
 10161   00FF86  3D                 	db	61	;'='
 10162   00FF87  3E                 	db	62	;'>'
 10163   00FF88  5B                 	db	91	;'['
 10164   00FF89  5D                 	db	93	;']'
 10165   00FF8A  7C                 	db	124
 10166   00FF8B  22                 	db	34
 10167   00FF8C  3F                 	db	63	;'?'
 10168   00FF8D  7F                 	db	127
 10169   00FF8E  00                 	db	0
 10170   00FF8F                     STR_85:
 10171   00FF8F  4E                 	db	78	;'N'
 10172   00FF90  6F                 	db	111	;'o'
 10173   00FF91  20                 	db	32
 10174   00FF92  53                 	db	83	;'S'
 10175   00FF93  44                 	db	68	;'D'
 10176   00FF94  20                 	db	32
 10177   00FF95  43                 	db	67	;'C'
 10178   00FF96  61                 	db	97	;'a'
 10179   00FF97  72                 	db	114	;'r'
 10180   00FF98  64                 	db	100	;'d'
 10181   00FF99  3F                 	db	63	;'?'
 10182   00FF9A  0A                 	db	10
 10183   00FF9B  0D                 	db	13
 10184   00FF9C  00                 	db	0
 10185   00FF9D                     STR_69:
 10186   00FF9D  25                 	db	37
 10187   00FF9E  64                 	db	100	;'d'
 10188   00FF9F  3A                 	db	58	;':'
 10189   00FFA0  20                 	db	32
 10190   00FFA1  25                 	db	37
 10191   00FFA2  73                 	db	115	;'s'
 10192   00FFA3  0A                 	db	10
 10193   00FFA4  0D                 	db	13
 10194   00FFA5  00                 	db	0
 10195   00FFA6                     STR_71:
 10196   00FFA6  53                 	db	83	;'S'
 10197   00FFA7  65                 	db	101	;'e'
 10198   00FFA8  6C                 	db	108	;'l'
 10199   00FFA9  65                 	db	101	;'e'
 10200   00FFAA  63                 	db	99	;'c'
 10201   00FFAB  74                 	db	116	;'t'
 10202   00FFAC  3A                 	db	58	;':'
 10203   00FFAD  20                 	db	32
 10204   00FFAE  00                 	db	0
 10205   00FFAF                     STR_67:
 10206   00FFAF  43                 	db	67	;'C'
 10207   00FFB0  50                 	db	80	;'P'
 10208   00FFB1  4D                 	db	77	;'M'
 10209   00FFB2  44                 	db	68	;'D'
 10210   00FFB3  49                 	db	73	;'I'
 10211   00FFB4  53                 	db	83	;'S'
 10212   00FFB5  4B                 	db	75	;'K'
 10213   00FFB6  53                 	db	83	;'S'
 10214   00FFB7  00                 	db	0
 10215   00FFB8                     STR_29:
 10216   00FFB8  46                 	db	70	;'F'
 10217   00FFB9  41                 	db	65	;'A'
 10218   00FFBA  54                 	db	84	;'T'
 10219   00FFBB  33                 	db	51	;'3'
 10220   00FFBC  32                 	db	50	;'2'
 10221   00FFBD  20                 	db	32
 10222   00FFBE  20                 	db	32
 10223   00FFBF  20                 	db	32
 10224   00FFC0  00                 	db	0
 10225   00FFC1                     STR_22:
 10226   00FFC1  25                 	db	37
 10227   00FFC2  73                 	db	115	;'s'
 10228   00FFC3  25                 	db	37
 10229   00FFC4  30                 	db	48	;'0'
 10230   00FFC5  36                 	db	54	;'6'
 10231   00FFC6  6C                 	db	108	;'l'
 10232   00FFC7  78                 	db	120	;'x'
 10233   00FFC8  3A                 	db	58	;':'
 10234   00FFC9  00                 	db	0
 10235   00FFCA                     STR_68:
 10236   00FFCA  43                 	db	67	;'C'
 10237   00FFCB  50                 	db	80	;'P'
 10238   00FFCC  4D                 	db	77	;'M'
 10239   00FFCD  44                 	db	68	;'D'
 10240   00FFCE  49                 	db	73	;'I'
 10241   00FFCF  53                 	db	83	;'S'
 10242   00FFD0  7E                 	db	126
 10243   00FFD1  00                 	db	0
 10244   00FFD2                     STR_19:
 10245   00FFD2  25                 	db	37
 10246   00FFD3  73                 	db	115	;'s'
 10247   00FFD4  25                 	db	37
 10248   00FFD5  30                 	db	48	;'0'
 10249   00FFD6  34                 	db	52	;'4'
 10250   00FFD7  78                 	db	120	;'x'
 10251   00FFD8  3A                 	db	58	;':'
 10252   00FFD9  00                 	db	0
 10253   00FFDA                     STR_97:
 10254   00FFDA  28                 	db	40
 10255   00FFDB  6E                 	db	110	;'n'
 10256   00FFDC  75                 	db	117	;'u'
 10257   00FFDD  6C                 	db	108	;'l'
 10258   00FFDE  6C                 	db	108	;'l'
 10259   00FFDF  29                 	db	41
 10260   00FFE0  00                 	db	0
 10261   00FFE1                     STR_20:
 10262   00FFE1  20                 	db	32
 10263   00FFE2  25                 	db	37
 10264   00FFE3  30                 	db	48	;'0'
 10265   00FFE4  32                 	db	50	;'2'
 10266   00FFE5  78                 	db	120	;'x'
 10267   00FFE6  00                 	db	0
 10268   00FFE7                     STR_13:
 10269   00FFE7  66                 	db	102	;'f'
 10270   00FFE8  61                 	db	97	;'a'
 10271   00FFE9  74                 	db	116	;'t'
 10272   00FFEA  3A                 	db	58	;':'
 10273   00FFEB  20                 	db	32
 10274   00FFEC  00                 	db	0
 10275   00FFED                     STR_51:
 10276   00FFED  53                 	db	83	;'S'
 10277   00FFEE  44                 	db	68	;'D'
 10278   00FFEF  3A                 	db	58	;':'
 10279   00FFF0  20                 	db	32
 10280   00FFF1  00                 	db	0
 10281   00FFF2                     STR_62:
 10282   00FFF2  30                 	db	48	;'0'
 10283   00FFF3  3A                 	db	58	;':'
 10284   00FFF4  2F                 	db	47
 10285   00FFF5  2F                 	db	47
 10286   00FFF6  00                 	db	0
 10287   00FFF7                     STR_91:
 10288   00FFF7  69                 	db	105	;'i'
 10289   00FFF8  6E                 	db	110	;'n'
 10290   00FFF9  66                 	db	102	;'f'
 10291   00FFFA  00                 	db	0
 10292   00FFFB                     STR_94:
 10293   00FFFB  6E                 	db	110	;'n'
 10294   00FFFC  61                 	db	97	;'a'
 10295   00FFFD  6E                 	db	110	;'n'
 10296   00FFFE  00                 	db	0
 10297   00FFFF  00                 	db	0	; dummy byte at the end
 10298   000000                     
 10299                           ; #config settings
 10300                           
 10301                           	psect	cinit
 10302   019420                     __pcinit:
 10303                           	callstack 0
 10304   019420                     start_initialization:
 10305                           	callstack 0
 10306   019420                     __initialization:
 10307                           	callstack 0
 10308                           
 10309                           ; Initialize objects allocated to BANK8 (64 bytes)
 10310                           ; load TBLPTR registers with __pidataBANK8
 10311   019420  0E2A               	movlw	low __pidataBANK8
 10312   019422  6EF6               	movwf	tblptrl,c
 10313   019424  0E9C               	movlw	high __pidataBANK8
 10314   019426  6EF7               	movwf	tblptrh,c
 10315   019428  0E01               	movlw	low (__pidataBANK8 shr (0+16))
 10316   01942A  6EF8               	movwf	tblptru,c
 10317   01942C  EE02  F080         	lfsr	0,__pdataBANK8
 10318   019430  EE10 F040          	lfsr	1,64
 10319   019434                     copy_data0:
 10320   019434  0009               	tblrd		*+
 10321   019436  C4F5 F4EE          	movff	tablat,postinc0
 10322   01943A  50E5               	movf	postdec1,w,c
 10323   01943C  50E1               	movf	fsr1l,w,c
 10324   01943E  E1FA               	bnz	copy_data0
 10325                           
 10326                           ; Initialize objects allocated to BANK7 (7 bytes)
 10327                           ; load TBLPTR registers with __pidataBANK7
 10328   019440  0EF8               	movlw	low __pidataBANK7
 10329   019442  6EF6               	movwf	tblptrl,c
 10330   019444  0E9F               	movlw	high __pidataBANK7
 10331   019446  6EF7               	movwf	tblptrh,c
 10332   019448  0E01               	movlw	low (__pidataBANK7 shr (0+16))
 10333   01944A  6EF8               	movwf	tblptru,c
 10334   01944C  EE01  F3D4         	lfsr	0,__pdataBANK7
 10335   019450  EE10 F007          	lfsr	1,7
 10336   019454                     copy_data1:
 10337   019454  0009               	tblrd		*+
 10338   019456  C4F5 F4EE          	movff	tablat,postinc0
 10339   01945A  50E5               	movf	postdec1,w,c
 10340   01945C  50E1               	movf	fsr1l,w,c
 10341   01945E  E1FA               	bnz	copy_data1
 10342                           
 10343                           ; Clear objects allocated to BIGRAM (4348 bytes)
 10344   019460  EE02  F0C0         	lfsr	0,__pbssBIGRAM
 10345   019464  EE14 F0FC          	lfsr	1,4348
 10346   019468                     clear_0:
 10347   019468  6AEE               	clrf	postinc0,c
 10348   01946A  50E5               	movf	postdec1,w,c
 10349   01946C  50E1               	movf	fsr1l,w,c
 10350   01946E  E1FC               	bnz	clear_0
 10351   019470  50E2               	movf	fsr1h,w,c
 10352   019472  E1FA               	bnz	clear_0
 10353                           
 10354                           ; Clear objects allocated to BANK8 (128 bytes)
 10355   019474  EE02  F000         	lfsr	0,__pbssBANK8
 10356   019478  0E80               	movlw	128
 10357   01947A                     clear_1:
 10358   01947A  6AEE               	clrf	postinc0,c
 10359   01947C  06E8               	decf	wreg,f,c
 10360   01947E  E1FD               	bnz	clear_1
 10361                           
 10362                           ; Clear objects allocated to BANK7 (190 bytes)
 10363   019480  EE01  F300         	lfsr	0,__pbssBANK7
 10364   019484  0EBE               	movlw	190
 10365   019486                     clear_2:
 10366   019486  6AEE               	clrf	postinc0,c
 10367   019488  06E8               	decf	wreg,f,c
 10368   01948A  E1FD               	bnz	clear_2
 10369                           
 10370                           ; Clear objects allocated to BANK6 (1 bytes)
 10371   01948C  0106               	movlb	6
 10372   01948E  6BFF               	clrf	__pbssBANK6& (0+255),b
 10373   019490                     end_of_initialization:
 10374                           	callstack 0
 10375   019490                     __end_of__initialization:
 10376                           	callstack 0
 10377   019490  0100               	movlb	0
 10378   019492  EFF9  F0AC         	goto	_main	;jump to C main() function
 10379                           
 10380                           	psect	bssBANK6
 10381   0006FF                     __pbssBANK6:
 10382                           	callstack 0
 10383   0006FF                     _flags:
 10384                           	callstack 0
 10385   0006FF                     	ds	1
 10386                           
 10387                           	psect	bssBANK7
 10388   000700                     __pbssBANK7:
 10389                           	callstack 0
 10390   000700                     _debug:
 10391                           	callstack 0
 10392   000700                     	ds	6
 10393   000706                     _ctx_:
 10394                           	callstack 0
 10395   000706                     	ds	5
 10396   00070B                     floorf@F521:
 10397                           	callstack 0
 10398   00070B                     	ds	4
 10399   00070F                     ___fpclassifyf@F465:
 10400                           	callstack 0
 10401   00070F                     	ds	4
 10402   000713                     _width:
 10403                           	callstack 0
 10404   000713                     	ds	2
 10405   000715                     _prec:
 10406                           	callstack 0
 10407   000715                     	ds	2
 10408   000717                     disk_io_handle@disk_datap:
 10409                           	callstack 0
 10410   000717                     	ds	2
 10411   000719                     disk_io_handle@disk_sector:
 10412                           	callstack 0
 10413   000719                     	ds	2
 10414   00071B                     SD_init@retry:
 10415                           	callstack 0
 10416   00071B                     	ds	2
 10417   00071D                     _num_files:
 10418                           	callstack 0
 10419   00071D                     	ds	2
 10420   00071F                     	ds	2
 10421   000721                     _Fsid:
 10422                           	callstack 0
 10423   000721                     	ds	2
 10424   000723                     _FatFs:
 10425                           	callstack 0
 10426   000723                     	ds	2
 10427   000725                     	ds	2
 10428   000727                     disk_io_handle@disk_dmah:
 10429                           	callstack 0
 10430   000727                     	ds	1
 10431   000728                     disk_io_handle@disk_dmal:
 10432                           	callstack 0
 10433   000728                     	ds	1
 10434   000729                     disk_io_handle@disk_track:
 10435                           	callstack 0
 10436   000729                     	ds	1
 10437   00072A                     disk_io_handle@disk_drive:
 10438                           	callstack 0
 10439   00072A                     	ds	1
 10440   00072B                     _io_addr:
 10441                           	callstack 0
 10442   00072B                     	ds	1
 10443   00072C                     _dbuf:
 10444                           	callstack 0
 10445   00072C                     	ds	80
 10446   00077C                     _fsdir:
 10447                           	callstack 0
 10448   00077C                     	ds	40
 10449   0007A4                     _fileinfo:
 10450                           	callstack 0
 10451   0007A4                     	ds	22
 10452   0007BA                     _pic18f47q43_spi_ctx:
 10453                           	callstack 0
 10454   0007BA                     	ds	4
 10455                           
 10456                           	psect	dataBANK7
 10457   0007D4                     __pdataBANK7:
 10458                           	callstack 0
 10459   0007D4                     _start_lba:
 10460                           	callstack 0
 10461   0007D4                     	ds	4
 10462   0007D8                     _SPI_SD_ctx:
 10463                           	callstack 0
 10464   0007D8                     	ds	2
 10465   0007DA                     _disk_stat:
 10466                           	callstack 0
 10467   0007DA                     	ds	1
 10468                           
 10469                           	psect	bssBANK8
 10470   000800                     __pbssBANK8:
 10471                           	callstack 0
 10472   000800                     _disk_buf:
 10473                           	callstack 0
 10474   000800                     	ds	128
 10475                           
 10476                           	psect	dataBANK8
 10477   000880                     __pdataBANK8:
 10478                           	callstack 0
 10479   000880                     _drives:
 10480                           	callstack 0
 10481   000880                     	ds	64
 10482                           
 10483                           	psect	bssBIGRAM
 10484   0008C0                     __pbssBIGRAM:
 10485                           	callstack 0
 10486   0008C0                     _files:
 10487                           	callstack 0
 10488   0008C0                     	ds	3276
 10489   00158C                     _fs:
 10490                           	callstack 0
 10491   00158C                     	ds	560
 10492   0017BC                     _tmp_buf:
 10493                           	callstack 0
 10494   0017BC                     	ds	512
 10495                           
 10496                           	psect	cstackBANK7
 10497   0007BE                     __pcstackBANK7:
 10498                           	callstack 0
 10499   0007BE                     ?_menu_select:
 10500                           	callstack 0
 10501                           
 10502                           ; 2 bytes @ 0x0
 10503   0007BE                     	ds	2
 10504   0007C0                     ??_menu_select:
 10505                           
 10506                           ; 1 bytes @ 0x2
 10507   0007C0                     	ds	4
 10508   0007C4                     _menu_select$3959:
 10509                           	callstack 0
 10510                           
 10511                           ; 2 bytes @ 0x6
 10512   0007C4                     	ds	2
 10513   0007C6                     menu_select@buf:
 10514                           	callstack 0
 10515                           
 10516                           ; 2 bytes @ 0x8
 10517   0007C6                     	ds	2
 10518   0007C8                     menu_select@drive:
 10519                           	callstack 0
 10520                           
 10521                           ; 2 bytes @ 0xA
 10522   0007C8                     	ds	2
 10523   0007CA                     menu_select@drive_letter:
 10524                           	callstack 0
 10525                           
 10526                           ; 1 bytes @ 0xC
 10527   0007CA                     	ds	1
 10528   0007CB                     menu_select@selection:
 10529                           	callstack 0
 10530                           
 10531                           ; 2 bytes @ 0xD
 10532   0007CB                     	ds	2
 10533   0007CD                     menu_select@i:
 10534                           	callstack 0
 10535                           
 10536                           ; 2 bytes @ 0xF
 10537   0007CD                     	ds	2
 10538   0007CF                     menu_select@c:
 10539                           	callstack 0
 10540                           
 10541                           ; 1 bytes @ 0x11
 10542   0007CF                     	ds	1
 10543   0007D0                     _main$3958:
 10544                           	callstack 0
 10545                           
 10546                           ; 4 bytes @ 0x12
 10547   0007D0                     	ds	4
 10548                           
 10549                           	psect	cstackBANK6
 10550   000600                     __pcstackBANK6:
 10551                           	callstack 0
 10552   000600                     move_window@fs:
 10553                           	callstack 0
 10554   000600                     sync_fs@fs:
 10555                           	callstack 0
 10556   000600                     dir_clear@fs:
 10557                           	callstack 0
 10558   000600                     disk_initialize@buf:
 10559                           	callstack 0
 10560                           
 10561                           ; 128 bytes @ 0x0
 10562   000600                     	ds	2
 10563   000602                     ??_sync_fs:
 10564   000602                     move_window@sect:
 10565                           	callstack 0
 10566   000602                     dir_clear@clst:
 10567                           	callstack 0
 10568                           
 10569                           ; 4 bytes @ 0x2
 10570   000602                     	ds	4
 10571   000606                     
 10572                           ; 1 bytes @ 0x6
 10573   000606                     	ds	2
 10574   000608                     dir_clear@ibuf:
 10575                           	callstack 0
 10576                           
 10577                           ; 2 bytes @ 0x8
 10578   000608                     	ds	2
 10579   00060A                     ?_check_fs:
 10580                           	callstack 0
 10581   00060A                     ?_get_fat:
 10582                           	callstack 0
 10583   00060A                     get_fat@obj:
 10584                           	callstack 0
 10585   00060A                     put_fat@fs:
 10586                           	callstack 0
 10587   00060A                     check_fs@fs:
 10588                           	callstack 0
 10589   00060A                     f_sync@fp:
 10590                           	callstack 0
 10591   00060A                     dir_clear@sect:
 10592                           	callstack 0
 10593                           
 10594                           ; 4 bytes @ 0xA
 10595   00060A                     	ds	2
 10596   00060C                     get_fat@clst:
 10597                           	callstack 0
 10598   00060C                     put_fat@clst:
 10599                           	callstack 0
 10600   00060C                     check_fs@sect:
 10601                           	callstack 0
 10602   00060C                     f_sync@tm:
 10603                           	callstack 0
 10604                           
 10605                           ; 4 bytes @ 0xC
 10606   00060C                     	ds	2
 10607   00060E                     dir_clear@szb:
 10608                           	callstack 0
 10609                           
 10610                           ; 2 bytes @ 0xE
 10611   00060E                     	ds	2
 10612   000610                     ??_get_fat:
 10613   000610                     ??_check_fs:
 10614   000610                     f_sync@res:
 10615                           	callstack 0
 10616   000610                     dir_clear@n:
 10617                           	callstack 0
 10618   000610                     put_fat@val:
 10619                           	callstack 0
 10620                           
 10621                           ; 4 bytes @ 0x10
 10622   000610                     	ds	1
 10623   000611                     f_sync@dir:
 10624                           	callstack 0
 10625                           
 10626                           ; 2 bytes @ 0x11
 10627   000611                     	ds	2
 10628   000613                     check_fs@sign:
 10629                           	callstack 0
 10630   000613                     f_sync@fs:
 10631                           	callstack 0
 10632                           
 10633                           ; 2 bytes @ 0x13
 10634   000613                     	ds	1
 10635   000614                     ??_put_fat:
 10636                           
 10637                           ; 1 bytes @ 0x14
 10638   000614                     	ds	1
 10639   000615                     check_fs@w:
 10640                           	callstack 0
 10641                           
 10642                           ; 2 bytes @ 0x15
 10643   000615                     	ds	2
 10644   000617                     check_fs@b:
 10645                           	callstack 0
 10646                           
 10647                           ; 1 bytes @ 0x17
 10648   000617                     	ds	1
 10649   000618                     ?_find_volume:
 10650                           	callstack 0
 10651   000618                     _get_fat$406:
 10652                           	callstack 0
 10653   000618                     find_volume@fs:
 10654                           	callstack 0
 10655                           
 10656                           ; 2 bytes @ 0x18
 10657   000618                     	ds	2
 10658   00061A                     find_volume@part:
 10659                           	callstack 0
 10660   00061A                     get_fat@val:
 10661                           	callstack 0
 10662                           
 10663                           ; 4 bytes @ 0x1A
 10664   00061A                     	ds	2
 10665   00061C                     ??_find_volume:
 10666                           
 10667                           ; 1 bytes @ 0x1C
 10668   00061C                     	ds	2
 10669   00061E                     get_fat@wc:
 10670                           	callstack 0
 10671                           
 10672                           ; 2 bytes @ 0x1E
 10673   00061E                     	ds	2
 10674   000620                     get_fat@bc:
 10675                           	callstack 0
 10676                           
 10677                           ; 2 bytes @ 0x20
 10678   000620                     	ds	2
 10679   000622                     get_fat@fs:
 10680                           	callstack 0
 10681   000622                     _put_fat$435:
 10682                           	callstack 0
 10683   000622                     find_volume@mbr_pt:
 10684                           	callstack 0
 10685                           
 10686                           ; 16 bytes @ 0x22
 10687   000622                     	ds	2
 10688   000624                     _put_fat$436:
 10689                           	callstack 0
 10690   000624                     dir_sdi@dp:
 10691                           	callstack 0
 10692   000624                     f_read@fp:
 10693                           	callstack 0
 10694                           
 10695                           ; 2 bytes @ 0x24
 10696   000624                     	ds	2
 10697   000626                     put_fat@p:
 10698                           	callstack 0
 10699   000626                     f_read@buff:
 10700                           	callstack 0
 10701   000626                     dir_sdi@ofs:
 10702                           	callstack 0
 10703                           
 10704                           ; 4 bytes @ 0x26
 10705   000626                     	ds	2
 10706   000628                     put_fat@bc:
 10707                           	callstack 0
 10708   000628                     f_read@btr:
 10709                           	callstack 0
 10710                           
 10711                           ; 2 bytes @ 0x28
 10712   000628                     	ds	2
 10713   00062A                     ??_dir_sdi:
 10714   00062A                     put_fat@res:
 10715                           	callstack 0
 10716   00062A                     f_read@br:
 10717                           	callstack 0
 10718                           
 10719                           ; 2 bytes @ 0x2A
 10720   00062A                     	ds	1
 10721   00062B                     ?_create_chain:
 10722                           	callstack 0
 10723   00062B                     remove_chain@obj:
 10724                           	callstack 0
 10725   00062B                     create_chain@obj:
 10726                           	callstack 0
 10727                           
 10728                           ; 2 bytes @ 0x2B
 10729   00062B                     	ds	1
 10730   00062C                     ??_f_read:
 10731                           
 10732                           ; 1 bytes @ 0x2C
 10733   00062C                     	ds	1
 10734   00062D                     remove_chain@clst:
 10735                           	callstack 0
 10736   00062D                     create_chain@clst:
 10737                           	callstack 0
 10738                           
 10739                           ; 4 bytes @ 0x2D
 10740   00062D                     	ds	4
 10741   000631                     ??_create_chain:
 10742   000631                     remove_chain@pclst:
 10743                           	callstack 0
 10744                           
 10745                           ; 4 bytes @ 0x31
 10746   000631                     	ds	1
 10747   000632                     find_volume@fmt:
 10748                           	callstack 0
 10749                           
 10750                           ; 2 bytes @ 0x32
 10751   000632                     	ds	2
 10752   000634                     find_volume@i:
 10753                           	callstack 0
 10754   000634                     dir_sdi@csz:
 10755                           	callstack 0
 10756                           
 10757                           ; 4 bytes @ 0x34
 10758   000634                     	ds	1
 10759   000635                     ??_remove_chain:
 10760                           
 10761                           ; 1 bytes @ 0x35
 10762   000635                     	ds	3
 10763   000638                     dir_sdi@clst:
 10764                           	callstack 0
 10765   000638                     f_read@remain:
 10766                           	callstack 0
 10767                           
 10768                           ; 4 bytes @ 0x38
 10769   000638                     	ds	1
 10770   000639                     create_chain@res:
 10771                           	callstack 0
 10772                           
 10773                           ; 1 bytes @ 0x39
 10774   000639                     	ds	1
 10775   00063A                     create_chain@scl:
 10776                           	callstack 0
 10777                           
 10778                           ; 4 bytes @ 0x3A
 10779   00063A                     	ds	2
 10780   00063C                     f_read@res:
 10781                           	callstack 0
 10782   00063C                     dir_sdi@fs:
 10783                           	callstack 0
 10784                           
 10785                           ; 2 bytes @ 0x3C
 10786   00063C                     	ds	1
 10787   00063D                     remove_chain@nxt:
 10788                           	callstack 0
 10789   00063D                     f_read@clst:
 10790                           	callstack 0
 10791                           
 10792                           ; 4 bytes @ 0x3D
 10793   00063D                     	ds	1
 10794   00063E                     create_chain@ncl:
 10795                           	callstack 0
 10796                           
 10797                           ; 4 bytes @ 0x3E
 10798   00063E                     	ds	3
 10799   000641                     remove_chain@res:
 10800                           	callstack 0
 10801   000641                     f_read@rbuff:
 10802                           	callstack 0
 10803                           
 10804                           ; 2 bytes @ 0x41
 10805   000641                     	ds	1
 10806   000642                     remove_chain@fs:
 10807                           	callstack 0
 10808   000642                     create_chain@fs:
 10809                           	callstack 0
 10810                           
 10811                           ; 2 bytes @ 0x42
 10812   000642                     	ds	1
 10813   000643                     f_read@csect:
 10814                           	callstack 0
 10815                           
 10816                           ; 2 bytes @ 0x43
 10817   000643                     	ds	1
 10818   000644                     create_chain@cs:
 10819                           	callstack 0
 10820                           
 10821                           ; 4 bytes @ 0x44
 10822   000644                     	ds	1
 10823   000645                     f_read@cc:
 10824                           	callstack 0
 10825                           
 10826                           ; 2 bytes @ 0x45
 10827   000645                     	ds	2
 10828   000647                     f_read@rcnt:
 10829                           	callstack 0
 10830                           
 10831                           ; 2 bytes @ 0x47
 10832   000647                     	ds	1
 10833   000648                     dir_next@dp:
 10834                           	callstack 0
 10835   000648                     f_write@fp:
 10836                           	callstack 0
 10837   000648                     f_lseek@fp:
 10838                           	callstack 0
 10839                           
 10840                           ; 2 bytes @ 0x48
 10841   000648                     	ds	1
 10842   000649                     f_read@sect:
 10843                           	callstack 0
 10844                           
 10845                           ; 4 bytes @ 0x49
 10846   000649                     	ds	1
 10847   00064A                     dir_next@stretch:
 10848                           	callstack 0
 10849   00064A                     f_write@buff:
 10850                           	callstack 0
 10851   00064A                     f_lseek@ofs:
 10852                           	callstack 0
 10853                           
 10854                           ; 4 bytes @ 0x4A
 10855   00064A                     	ds	2
 10856   00064C                     ??_dir_next:
 10857   00064C                     f_write@btw:
 10858                           	callstack 0
 10859                           
 10860                           ; 2 bytes @ 0x4C
 10861   00064C                     	ds	1
 10862   00064D                     f_read@fs:
 10863                           	callstack 0
 10864                           
 10865                           ; 2 bytes @ 0x4D
 10866   00064D                     	ds	1
 10867   00064E                     ??_f_lseek:
 10868   00064E                     f_write@bw:
 10869                           	callstack 0
 10870                           
 10871                           ; 2 bytes @ 0x4E
 10872   00064E                     	ds	2
 10873   000650                     ??_f_write:
 10874                           
 10875                           ; 1 bytes @ 0x50
 10876   000650                     	ds	8
 10877   000658                     dir_next@ofs:
 10878                           	callstack 0
 10879                           
 10880                           ; 4 bytes @ 0x58
 10881   000658                     	ds	4
 10882   00065C                     dir_next@fs:
 10883                           	callstack 0
 10884   00065C                     _f_write$1360:
 10885                           	callstack 0
 10886                           
 10887                           ; 4 bytes @ 0x5C
 10888   00065C                     	ds	2
 10889   00065E                     dir_next@clst:
 10890                           	callstack 0
 10891   00065E                     f_lseek@ifptr:
 10892                           	callstack 0
 10893                           
 10894                           ; 4 bytes @ 0x5E
 10895   00065E                     	ds	2
 10896   000660                     f_write@res:
 10897                           	callstack 0
 10898                           
 10899                           ; 1 bytes @ 0x60
 10900   000660                     	ds	1
 10901   000661                     f_write@wbuff:
 10902                           	callstack 0
 10903                           
 10904                           ; 2 bytes @ 0x61
 10905   000661                     	ds	1
 10906   000662                     dir_alloc@dp:
 10907                           	callstack 0
 10908   000662                     dir_read@dp:
 10909                           	callstack 0
 10910   000662                     dir_find@dp:
 10911                           	callstack 0
 10912   000662                     f_lseek@nsect:
 10913                           	callstack 0
 10914                           
 10915                           ; 4 bytes @ 0x62
 10916   000662                     	ds	1
 10917   000663                     f_write@csect:
 10918                           	callstack 0
 10919                           
 10920                           ; 2 bytes @ 0x63
 10921   000663                     	ds	1
 10922   000664                     ??_dir_find:
 10923   000664                     dir_alloc@n_ent:
 10924                           	callstack 0
 10925   000664                     dir_read@vol:
 10926                           	callstack 0
 10927                           
 10928                           ; 2 bytes @ 0x64
 10929   000664                     	ds	1
 10930   000665                     f_write@cc:
 10931                           	callstack 0
 10932                           
 10933                           ; 2 bytes @ 0x65
 10934   000665                     	ds	1
 10935   000666                     ??_dir_alloc:
 10936   000666                     ??_dir_read:
 10937   000666                     f_lseek@res:
 10938                           	callstack 0
 10939   000666                     dir_find@fs:
 10940                           	callstack 0
 10941                           
 10942                           ; 2 bytes @ 0x66
 10943   000666                     	ds	1
 10944   000667                     f_write@clst:
 10945                           	callstack 0
 10946   000667                     f_lseek@bcs:
 10947                           	callstack 0
 10948                           
 10949                           ; 4 bytes @ 0x67
 10950   000667                     	ds	1
 10951   000668                     dir_find@c:
 10952                           	callstack 0
 10953                           
 10954                           ; 1 bytes @ 0x68
 10955   000668                     	ds	1
 10956   000669                     dir_find@res:
 10957                           	callstack 0
 10958   000669                     dir_alloc@fs:
 10959                           	callstack 0
 10960                           
 10961                           ; 2 bytes @ 0x69
 10962   000669                     	ds	1
 10963   00066A                     dir_read@fs:
 10964                           	callstack 0
 10965   00066A                     follow_path@dp:
 10966                           	callstack 0
 10967                           
 10968                           ; 2 bytes @ 0x6A
 10969   00066A                     	ds	1
 10970   00066B                     dir_alloc@n:
 10971                           	callstack 0
 10972   00066B                     f_write@wcnt:
 10973                           	callstack 0
 10974   00066B                     f_lseek@fs:
 10975                           	callstack 0
 10976                           
 10977                           ; 2 bytes @ 0x6B
 10978   00066B                     	ds	1
 10979   00066C                     dir_read@attr:
 10980                           	callstack 0
 10981   00066C                     follow_path@path:
 10982                           	callstack 0
 10983                           
 10984                           ; 2 bytes @ 0x6C
 10985   00066C                     	ds	1
 10986   00066D                     dir_alloc@res:
 10987                           	callstack 0
 10988   00066D                     dir_read@b:
 10989                           	callstack 0
 10990   00066D                     f_write@sect:
 10991                           	callstack 0
 10992   00066D                     f_lseek@clst:
 10993                           	callstack 0
 10994                           
 10995                           ; 4 bytes @ 0x6D
 10996   00066D                     	ds	1
 10997   00066E                     ??_follow_path:
 10998   00066E                     dir_read@res:
 10999                           	callstack 0
 11000   00066E                     dir_register@dp:
 11001                           	callstack 0
 11002                           
 11003                           ; 2 bytes @ 0x6E
 11004   00066E                     	ds	1
 11005   00066F                     f_readdir@dp:
 11006                           	callstack 0
 11007                           
 11008                           ; 2 bytes @ 0x6F
 11009   00066F                     	ds	1
 11010   000670                     dir_register@fs:
 11011                           	callstack 0
 11012                           
 11013                           ; 2 bytes @ 0x70
 11014   000670                     	ds	1
 11015   000671                     f_write@fs:
 11016                           	callstack 0
 11017   000671                     f_readdir@fno:
 11018                           	callstack 0
 11019                           
 11020                           ; 2 bytes @ 0x71
 11021   000671                     	ds	1
 11022   000672                     dir_register@res:
 11023                           	callstack 0
 11024                           
 11025                           ; 1 bytes @ 0x72
 11026   000672                     	ds	1
 11027   000673                     ??_disk_io_handle:
 11028   000673                     f_readdir@fs:
 11029                           	callstack 0
 11030                           
 11031                           ; 2 bytes @ 0x73
 11032   000673                     	ds	1
 11033   000674                     follow_path@fs:
 11034                           	callstack 0
 11035                           
 11036                           ; 2 bytes @ 0x74
 11037   000674                     	ds	1
 11038   000675                     f_readdir@res:
 11039                           	callstack 0
 11040                           
 11041                           ; 1 bytes @ 0x75
 11042   000675                     	ds	1
 11043   000676                     follow_path@ns:
 11044                           	callstack 0
 11045                           
 11046                           ; 1 bytes @ 0x76
 11047   000676                     	ds	1
 11048   000677                     follow_path@res:
 11049                           	callstack 0
 11050   000677                     disk_io_handle@addr:
 11051                           	callstack 0
 11052                           
 11053                           ; 2 bytes @ 0x77
 11054   000677                     	ds	2
 11055   000679                     disk_io_handle@addr_2826:
 11056                           	callstack 0
 11057                           
 11058                           ; 2 bytes @ 0x79
 11059   000679                     	ds	2
 11060   00067B                     disk_io_handle@sector:
 11061                           	callstack 0
 11062                           
 11063                           ; 4 bytes @ 0x7B
 11064   00067B                     	ds	4
 11065   00067F                     disk_io_handle@filep:
 11066                           	callstack 0
 11067                           
 11068                           ; 2 bytes @ 0x7F
 11069   00067F                     	ds	1
 11070   000680                     disk_initialize@pdrv:
 11071                           	callstack 0
 11072                           
 11073                           ; 1 bytes @ 0x80
 11074   000680                     	ds	1
 11075   000681                     disk_io_handle@fres:
 11076                           	callstack 0
 11077   000681                     mount_volume@path:
 11078                           	callstack 0
 11079                           
 11080                           ; 2 bytes @ 0x81
 11081   000681                     	ds	1
 11082   000682                     disk_io_handle@n:
 11083                           	callstack 0
 11084                           
 11085                           ; 2 bytes @ 0x82
 11086   000682                     	ds	1
 11087   000683                     mount_volume@rfs:
 11088                           	callstack 0
 11089                           
 11090                           ; 2 bytes @ 0x83
 11091   000683                     	ds	2
 11092   000685                     mount_volume@mode:
 11093                           	callstack 0
 11094                           
 11095                           ; 1 bytes @ 0x85
 11096   000685                     	ds	1
 11097   000686                     ??_mount_volume:
 11098                           
 11099                           ; 1 bytes @ 0x86
 11100   000686                     	ds	8
 11101   00068E                     mount_volume@szbfat:
 11102                           	callstack 0
 11103                           
 11104                           ; 4 bytes @ 0x8E
 11105   00068E                     	ds	4
 11106   000692                     mount_volume@vol:
 11107                           	callstack 0
 11108                           
 11109                           ; 2 bytes @ 0x92
 11110   000692                     	ds	2
 11111   000694                     mount_volume@sysect:
 11112                           	callstack 0
 11113                           
 11114                           ; 4 bytes @ 0x94
 11115   000694                     	ds	4
 11116   000698                     mount_volume@nrsv:
 11117                           	callstack 0
 11118                           
 11119                           ; 2 bytes @ 0x98
 11120   000698                     	ds	2
 11121   00069A                     mount_volume@tsect:
 11122                           	callstack 0
 11123                           
 11124                           ; 4 bytes @ 0x9A
 11125   00069A                     	ds	4
 11126   00069E                     mount_volume@bsect:
 11127                           	callstack 0
 11128                           
 11129                           ; 4 bytes @ 0x9E
 11130   00069E                     	ds	4
 11131   0006A2                     mount_volume@stat:
 11132                           	callstack 0
 11133                           
 11134                           ; 1 bytes @ 0xA2
 11135   0006A2                     	ds	1
 11136   0006A3                     mount_volume@nclst:
 11137                           	callstack 0
 11138                           
 11139                           ; 4 bytes @ 0xA3
 11140   0006A3                     	ds	4
 11141   0006A7                     mount_volume@fasize:
 11142                           	callstack 0
 11143                           
 11144                           ; 4 bytes @ 0xA7
 11145   0006A7                     	ds	4
 11146   0006AB                     mount_volume@fmt:
 11147                           	callstack 0
 11148                           
 11149                           ; 2 bytes @ 0xAB
 11150   0006AB                     	ds	2
 11151   0006AD                     mount_volume@fs:
 11152                           	callstack 0
 11153                           
 11154                           ; 2 bytes @ 0xAD
 11155   0006AD                     	ds	2
 11156   0006AF                     f_mount@fs:
 11157                           	callstack 0
 11158   0006AF                     f_open@fp:
 11159                           	callstack 0
 11160   0006AF                     f_opendir@dp:
 11161                           	callstack 0
 11162                           
 11163                           ; 2 bytes @ 0xAF
 11164   0006AF                     	ds	2
 11165   0006B1                     f_mount@path:
 11166                           	callstack 0
 11167   0006B1                     f_open@path:
 11168                           	callstack 0
 11169   0006B1                     f_opendir@path:
 11170                           	callstack 0
 11171                           
 11172                           ; 2 bytes @ 0xB1
 11173   0006B1                     	ds	2
 11174   0006B3                     f_mount@opt:
 11175                           	callstack 0
 11176   0006B3                     f_open@mode:
 11177                           	callstack 0
 11178   0006B3                     f_opendir@fs:
 11179                           	callstack 0
 11180                           
 11181                           ; 2 bytes @ 0xB3
 11182   0006B3                     	ds	1
 11183   0006B4                     ??_f_open:
 11184   0006B4                     f_mount@res:
 11185                           	callstack 0
 11186                           
 11187                           ; 1 bytes @ 0xB4
 11188   0006B4                     	ds	1
 11189   0006B5                     f_opendir@res:
 11190                           	callstack 0
 11191   0006B5                     f_mount@rp:
 11192                           	callstack 0
 11193                           
 11194                           ; 2 bytes @ 0xB5
 11195   0006B5                     	ds	2
 11196   0006B7                     f_mount@cfs:
 11197                           	callstack 0
 11198                           
 11199                           ; 2 bytes @ 0xB7
 11200   0006B7                     	ds	2
 11201   0006B9                     f_mount@vol:
 11202                           	callstack 0
 11203                           
 11204                           ; 2 bytes @ 0xB9
 11205   0006B9                     	ds	3
 11206   0006BC                     f_open@bcs:
 11207                           	callstack 0
 11208                           
 11209                           ; 4 bytes @ 0xBC
 11210   0006BC                     	ds	4
 11211   0006C0                     f_open@tm:
 11212                           	callstack 0
 11213                           
 11214                           ; 4 bytes @ 0xC0
 11215   0006C0                     	ds	4
 11216   0006C4                     f_open@cl:
 11217                           	callstack 0
 11218                           
 11219                           ; 4 bytes @ 0xC4
 11220   0006C4                     	ds	4
 11221   0006C8                     f_open@sc:
 11222                           	callstack 0
 11223                           
 11224                           ; 4 bytes @ 0xC8
 11225   0006C8                     	ds	4
 11226   0006CC                     f_open@ofs:
 11227                           	callstack 0
 11228                           
 11229                           ; 4 bytes @ 0xCC
 11230   0006CC                     	ds	4
 11231   0006D0                     f_open@clst:
 11232                           	callstack 0
 11233                           
 11234                           ; 4 bytes @ 0xD0
 11235   0006D0                     	ds	4
 11236   0006D4                     f_open@fs:
 11237                           	callstack 0
 11238                           
 11239                           ; 2 bytes @ 0xD4
 11240   0006D4                     	ds	2
 11241   0006D6                     f_open@res:
 11242                           	callstack 0
 11243                           
 11244                           ; 1 bytes @ 0xD6
 11245   0006D6                     	ds	1
 11246   0006D7                     f_open@dj:
 11247                           	callstack 0
 11248                           
 11249                           ; 40 bytes @ 0xD7
 11250   0006D7                     	ds	40
 11251                           
 11252                           	psect	cstackBANK5
 11253   000560                     __pcstackBANK5:
 11254                           	callstack 0
 11255   000560                     efgtoa@ne:
 11256                           	callstack 0
 11257                           
 11258                           ; 2 bytes @ 0x0
 11259   000560                     	ds	2
 11260   000562                     efgtoa@p:
 11261                           	callstack 0
 11262                           
 11263                           ; 2 bytes @ 0x2
 11264   000562                     	ds	2
 11265   000564                     efgtoa@t:
 11266                           	callstack 0
 11267                           
 11268                           ; 2 bytes @ 0x4
 11269   000564                     	ds	2
 11270   000566                     _efgtoa$3420:
 11271                           	callstack 0
 11272                           
 11273                           ; 2 bytes @ 0x6
 11274   000566                     	ds	2
 11275   000568                     efgtoa@pp:
 11276                           	callstack 0
 11277                           
 11278                           ; 1 bytes @ 0x8
 11279   000568                     	ds	1
 11280   000569                     efgtoa@mode:
 11281                           	callstack 0
 11282                           
 11283                           ; 1 bytes @ 0x9
 11284   000569                     	ds	1
 11285   00056A                     efgtoa@nmode:
 11286                           	callstack 0
 11287                           
 11288                           ; 1 bytes @ 0xA
 11289   00056A                     	ds	1
 11290   00056B                     efgtoa@d:
 11291                           	callstack 0
 11292                           
 11293                           ; 2 bytes @ 0xB
 11294   00056B                     	ds	2
 11295   00056D                     efgtoa@m:
 11296                           	callstack 0
 11297                           
 11298                           ; 2 bytes @ 0xD
 11299   00056D                     	ds	2
 11300   00056F                     efgtoa@e:
 11301                           	callstack 0
 11302                           
 11303                           ; 2 bytes @ 0xF
 11304   00056F                     	ds	2
 11305   000571                     efgtoa@w:
 11306                           	callstack 0
 11307                           
 11308                           ; 2 bytes @ 0x11
 11309   000571                     	ds	2
 11310   000573                     efgtoa@ou:
 11311                           	callstack 0
 11312                           
 11313                           ; 4 bytes @ 0x13
 11314   000573                     	ds	4
 11315   000577                     efgtoa@h:
 11316                           	callstack 0
 11317                           
 11318                           ; 4 bytes @ 0x17
 11319   000577                     	ds	4
 11320   00057B                     efgtoa@l:
 11321                           	callstack 0
 11322                           
 11323                           ; 4 bytes @ 0x1B
 11324   00057B                     	ds	4
 11325   00057F                     efgtoa@i:
 11326                           	callstack 0
 11327                           
 11328                           ; 2 bytes @ 0x1F
 11329   00057F                     	ds	2
 11330   000581                     efgtoa@sign:
 11331                           	callstack 0
 11332                           
 11333                           ; 1 bytes @ 0x21
 11334   000581                     	ds	1
 11335   000582                     efgtoa@g:
 11336                           	callstack 0
 11337                           
 11338                           ; 4 bytes @ 0x22
 11339   000582                     	ds	4
 11340   000586                     efgtoa@n:
 11341                           	callstack 0
 11342                           
 11343                           ; 2 bytes @ 0x26
 11344   000586                     	ds	2
 11345   000588                     efgtoa@u:
 11346                           	callstack 0
 11347                           
 11348                           ; 4 bytes @ 0x28
 11349   000588                     	ds	4
 11350   00058C                     vfpfcnvrt@done:
 11351                           	callstack 0
 11352                           
 11353                           ; 1 bytes @ 0x2C
 11354   00058C                     	ds	1
 11355   00058D                     vfpfcnvrt@convarg:
 11356                           	callstack 0
 11357                           
 11358                           ; 4 bytes @ 0x2D
 11359   00058D                     	ds	4
 11360   000591                     vfpfcnvrt@c:
 11361                           	callstack 0
 11362                           
 11363                           ; 1 bytes @ 0x31
 11364   000591                     	ds	1
 11365   000592                     vfpfcnvrt@cp:
 11366                           	callstack 0
 11367                           
 11368                           ; 2 bytes @ 0x32
 11369   000592                     	ds	2
 11370   000594                     ?_vfprintf:
 11371                           	callstack 0
 11372   000594                     vfprintf@fp:
 11373                           	callstack 0
 11374                           
 11375                           ; 2 bytes @ 0x34
 11376   000594                     	ds	2
 11377   000596                     vfprintf@fmt:
 11378                           	callstack 0
 11379                           
 11380                           ; 2 bytes @ 0x36
 11381   000596                     	ds	2
 11382   000598                     vfprintf@ap:
 11383                           	callstack 0
 11384                           
 11385                           ; 2 bytes @ 0x38
 11386   000598                     	ds	2
 11387   00059A                     ?_printf:
 11388                           	callstack 0
 11389   00059A                     ?_sprintf:
 11390                           	callstack 0
 11391   00059A                     sprintf@s:
 11392                           	callstack 0
 11393   00059A                     printf@fmt:
 11394                           	callstack 0
 11395                           
 11396                           ; 2 bytes @ 0x3A
 11397   00059A                     	ds	2
 11398   00059C                     sprintf@fmt:
 11399                           	callstack 0
 11400                           
 11401                           ; 2 bytes @ 0x3C
 11402   00059C                     	ds	6
 11403   0005A2                     sprintf@ap:
 11404                           	callstack 0
 11405                           
 11406                           ; 2 bytes @ 0x42
 11407   0005A2                     	ds	2
 11408   0005A4                     sprintf@f:
 11409                           	callstack 0
 11410                           
 11411                           ; 12 bytes @ 0x44
 11412   0005A4                     	ds	2
 11413   0005A6                     ??_wait_for_programmer:
 11414   0005A6                     ??_mem_init:
 11415   0005A6                     disk_ioctl@cmd:
 11416                           	callstack 0
 11417   0005A6                     util_hexdump@header:
 11418                           	callstack 0
 11419   0005A6                     util_addrdump@header:
 11420                           	callstack 0
 11421   0005A6                     validate@obj:
 11422                           	callstack 0
 11423   0005A6                     SPI_SD_configure@ctx_:
 11424                           	callstack 0
 11425                           
 11426                           ; 2 bytes @ 0x46
 11427   0005A6                     	ds	1
 11428   0005A7                     disk_ioctl@buff:
 11429                           	callstack 0
 11430                           
 11431                           ; 2 bytes @ 0x47
 11432   0005A7                     	ds	1
 11433   0005A8                     util_hexdump@addr:
 11434                           	callstack 0
 11435   0005A8                     validate@rfs:
 11436                           	callstack 0
 11437   0005A8                     SPI_SD_configure@clock_speed:
 11438                           	callstack 0
 11439   0005A8                     util_addrdump@addr_offs:
 11440                           	callstack 0
 11441                           
 11442                           ; 4 bytes @ 0x48
 11443   0005A8                     	ds	1
 11444   0005A9                     disk_ioctl@pdrv:
 11445                           	callstack 0
 11446                           
 11447                           ; 1 bytes @ 0x49
 11448   0005A9                     	ds	1
 11449   0005AA                     ??_validate:
 11450   0005AA                     disk_ioctl@res:
 11451                           	callstack 0
 11452   0005AA                     SPI_SD_configure@bit_order:
 11453                           	callstack 0
 11454   0005AA                     util_hexdump@size:
 11455                           	callstack 0
 11456   0005AA                     mem_init@i:
 11457                           	callstack 0
 11458                           
 11459                           ; 2 bytes @ 0x4A
 11460   0005AA                     	ds	1
 11461   0005AB                     SPI_SD_configure@data_mode:
 11462                           	callstack 0
 11463                           
 11464                           ; 1 bytes @ 0x4B
 11465   0005AB                     	ds	1
 11466   0005AC                     ??_util_hexdump:
 11467   0005AC                     ??_SPI_SD_configure:
 11468   0005AC                     util_addrdump@addr:
 11469                           	callstack 0
 11470   0005AC                     mem_init@addr:
 11471                           	callstack 0
 11472                           
 11473                           ; 4 bytes @ 0x4C
 11474   0005AC                     	ds	2
 11475   0005AE                     ?_SDCard_init:
 11476                           	callstack 0
 11477   0005AE                     util_addrdump@size:
 11478                           	callstack 0
 11479   0005AE                     _validate$1075:
 11480                           	callstack 0
 11481   0005AE                     SDCard_init@initial_clock_speed:
 11482                           	callstack 0
 11483   0005AE                     util_hexdump@chars:
 11484                           	callstack 0
 11485                           
 11486                           ; 17 bytes @ 0x4E
 11487   0005AE                     	ds	2
 11488   0005B0                     ??_util_addrdump:
 11489   0005B0                     validate@res:
 11490                           	callstack 0
 11491   0005B0                     SDCard_init@clock_speed:
 11492                           	callstack 0
 11493                           
 11494                           ; 2 bytes @ 0x50
 11495   0005B0                     	ds	1
 11496   0005B1                     f_closedir@dp:
 11497                           	callstack 0
 11498                           
 11499                           ; 2 bytes @ 0x51
 11500   0005B1                     	ds	1
 11501   0005B2                     SDCard_init@timeout:
 11502                           	callstack 0
 11503   0005B2                     util_addrdump@chars:
 11504                           	callstack 0
 11505                           
 11506                           ; 17 bytes @ 0x52
 11507   0005B2                     	ds	1
 11508   0005B3                     f_closedir@fs:
 11509                           	callstack 0
 11510                           
 11511                           ; 2 bytes @ 0x53
 11512   0005B3                     	ds	1
 11513   0005B4                     SDCard_init@i:
 11514                           	callstack 0
 11515                           
 11516                           ; 2 bytes @ 0x54
 11517   0005B4                     	ds	1
 11518   0005B5                     f_closedir@res:
 11519                           	callstack 0
 11520                           
 11521                           ; 1 bytes @ 0x55
 11522   0005B5                     	ds	1
 11523   0005B6                     SDCard_init@spi:
 11524                           	callstack 0
 11525                           
 11526                           ; 2 bytes @ 0x56
 11527   0005B6                     	ds	2
 11528   0005B8                     SDCard_init@buf:
 11529                           	callstack 0
 11530                           
 11531                           ; 5 bytes @ 0x58
 11532   0005B8                     	ds	5
 11533   0005BD                     ??_SD_init:
 11534                           
 11535                           ; 1 bytes @ 0x5D
 11536   0005BD                     	ds	2
 11537   0005BF                     util_hexdump@buf:
 11538                           	callstack 0
 11539                           
 11540                           ; 2 bytes @ 0x5F
 11541   0005BF                     	ds	2
 11542   0005C1                     util_hexdump@i:
 11543                           	callstack 0
 11544                           
 11545                           ; 2 bytes @ 0x61
 11546   0005C1                     	ds	2
 11547   0005C3                     util_addrdump@buf:
 11548                           	callstack 0
 11549                           
 11550                           ; 2 bytes @ 0x63
 11551   0005C3                     	ds	2
 11552   0005C5                     util_addrdump@i:
 11553                           	callstack 0
 11554                           
 11555                           ; 2 bytes @ 0x65
 11556   0005C5                     	ds	2
 11557   0005C7                     ?_SDCard_read512:
 11558                           	callstack 0
 11559   0005C7                     ?_SDCard_write512:
 11560                           	callstack 0
 11561   0005C7                     SDCard_read512@addr:
 11562                           	callstack 0
 11563   0005C7                     SDCard_write512@addr:
 11564                           	callstack 0
 11565                           
 11566                           ; 4 bytes @ 0x67
 11567   0005C7                     	ds	4
 11568   0005CB                     SDCard_read512@offs:
 11569                           	callstack 0
 11570   0005CB                     SDCard_write512@offs:
 11571                           	callstack 0
 11572                           
 11573                           ; 2 bytes @ 0x6B
 11574   0005CB                     	ds	2
 11575   0005CD                     SDCard_read512@buf:
 11576                           	callstack 0
 11577   0005CD                     SDCard_write512@buf:
 11578                           	callstack 0
 11579                           
 11580                           ; 2 bytes @ 0x6D
 11581   0005CD                     	ds	2
 11582   0005CF                     SDCard_read512@count:
 11583                           	callstack 0
 11584   0005CF                     SDCard_write512@count:
 11585                           	callstack 0
 11586                           
 11587                           ; 2 bytes @ 0x6F
 11588   0005CF                     	ds	2
 11589   0005D1                     ??_SDCard_read512:
 11590   0005D1                     ??_SDCard_write512:
 11591                           
 11592                           ; 1 bytes @ 0x71
 11593   0005D1                     	ds	4
 11594   0005D5                     SDCard_read512@i:
 11595                           	callstack 0
 11596   0005D5                     SDCard_write512@i:
 11597                           	callstack 0
 11598                           
 11599                           ; 2 bytes @ 0x75
 11600   0005D5                     	ds	2
 11601   0005D7                     SDCard_read512@i_2487:
 11602                           	callstack 0
 11603   0005D7                     SDCard_write512@i_2504:
 11604                           	callstack 0
 11605                           
 11606                           ; 2 bytes @ 0x77
 11607   0005D7                     	ds	2
 11608   0005D9                     SDCard_read512@retry:
 11609                           	callstack 0
 11610   0005D9                     SDCard_write512@retry:
 11611                           	callstack 0
 11612                           
 11613                           ; 2 bytes @ 0x79
 11614   0005D9                     	ds	2
 11615   0005DB                     SDCard_read512@resp_crc:
 11616                           	callstack 0
 11617   0005DB                     SDCard_write512@result:
 11618                           	callstack 0
 11619                           
 11620                           ; 2 bytes @ 0x7B
 11621   0005DB                     	ds	2
 11622   0005DD                     SDCard_read512@result:
 11623                           	callstack 0
 11624   0005DD                     SDCard_write512@spi:
 11625                           	callstack 0
 11626                           
 11627                           ; 2 bytes @ 0x7D
 11628   0005DD                     	ds	2
 11629   0005DF                     SDCard_read512@spi:
 11630                           	callstack 0
 11631   0005DF                     SDCard_write512@crc:
 11632                           	callstack 0
 11633                           
 11634                           ; 2 bytes @ 0x7F
 11635   0005DF                     	ds	2
 11636   0005E1                     SDCard_write512@response:
 11637                           	callstack 0
 11638   0005E1                     SDCard_read512@crc:
 11639                           	callstack 0
 11640                           
 11641                           ; 2 bytes @ 0x81
 11642   0005E1                     	ds	1
 11643   0005E2                     disk_write@buff:
 11644                           	callstack 0
 11645                           
 11646                           ; 2 bytes @ 0x82
 11647   0005E2                     	ds	1
 11648   0005E3                     SDCard_read512@response:
 11649                           	callstack 0
 11650                           
 11651                           ; 1 bytes @ 0x83
 11652   0005E3                     	ds	1
 11653   0005E4                     ??_disk_initialize:
 11654   0005E4                     disk_read@buff:
 11655                           	callstack 0
 11656   0005E4                     disk_write@sector:
 11657                           	callstack 0
 11658                           
 11659                           ; 4 bytes @ 0x84
 11660   0005E4                     	ds	2
 11661   0005E6                     disk_read@sector:
 11662                           	callstack 0
 11663                           
 11664                           ; 4 bytes @ 0x86
 11665   0005E6                     	ds	2
 11666   0005E8                     disk_write@count:
 11667                           	callstack 0
 11668                           
 11669                           ; 2 bytes @ 0x88
 11670   0005E8                     	ds	2
 11671   0005EA                     disk_write@pdrv:
 11672                           	callstack 0
 11673   0005EA                     disk_read@count:
 11674                           	callstack 0
 11675                           
 11676                           ; 2 bytes @ 0x8A
 11677   0005EA                     	ds	1
 11678   0005EB                     disk_write@i:
 11679                           	callstack 0
 11680                           
 11681                           ; 2 bytes @ 0x8B
 11682   0005EB                     	ds	1
 11683   0005EC                     disk_read@pdrv:
 11684                           	callstack 0
 11685                           
 11686                           ; 1 bytes @ 0x8C
 11687   0005EC                     	ds	1
 11688   0005ED                     disk_read@i:
 11689                           	callstack 0
 11690   0005ED                     sync_window@fs:
 11691                           	callstack 0
 11692                           
 11693                           ; 2 bytes @ 0x8D
 11694   0005ED                     	ds	2
 11695   0005EF                     ??_sync_window:
 11696                           
 11697                           ; 1 bytes @ 0x8F
 11698   0005EF                     	ds	16
 11699   0005FF                     move_window@res:
 11700                           	callstack 0
 11701   0005FF                     sync_fs@res:
 11702                           	callstack 0
 11703                           
 11704                           ; 1 bytes @ 0x9F
 11705   0005FF                     	ds	1
 11706                           
 11707                           	psect	cstackCOMRAM
 11708   000501                     __pcstackCOMRAM:
 11709                           	callstack 0
 11710   000501                     ??_emuz80_57q_start_cpu:
 11711   000501                     ?_memcmp:
 11712                           	callstack 0
 11713   000501                     ?_strchr:
 11714                           	callstack 0
 11715   000501                     ?___SDCard_crc16:
 11716                           	callstack 0
 11717   000501                     ?_strncmp:
 11718                           	callstack 0
 11719   000501                     ?_strcmp:
 11720                           	callstack 0
 11721   000501                     ?___fpclassifyf:
 11722                           	callstack 0
 11723   000501                     ?_ld_word:
 11724                           	callstack 0
 11725   000501                     ?_dbc_1st:
 11726                           	callstack 0
 11727   000501                     ?_dbc_2nd:
 11728                           	callstack 0
 11729   000501                     ?_get_ldnumber:
 11730                           	callstack 0
 11731   000501                     ?_getch:
 11732                           	callstack 0
 11733   000501                     ?___wmul:
 11734                           	callstack 0
 11735   000501                     ?___fladd:
 11736                           	callstack 0
 11737   000501                     ?___flmul:
 11738                           	callstack 0
 11739   000501                     ?_labs:
 11740                           	callstack 0
 11741   000501                     ?_get_fattime:
 11742                           	callstack 0
 11743   000501                     ?_ld_dword:
 11744                           	callstack 0
 11745   000501                     ?___lmul:
 11746                           	callstack 0
 11747   000501                     ?___lldiv:
 11748                           	callstack 0
 11749   000501                     ?___aldiv:
 11750                           	callstack 0
 11751   000501                     ?___almod:
 11752                           	callstack 0
 11753   000501                     ?___flneg:
 11754                           	callstack 0
 11755   000501                     ?___fltol:
 11756                           	callstack 0
 11757   000501                     putch@c:
 11758                           	callstack 0
 11759   000501                     ld_word@ptr:
 11760                           	callstack 0
 11761   000501                     ld_dword@ptr:
 11762                           	callstack 0
 11763   000501                     st_word@ptr:
 11764                           	callstack 0
 11765   000501                     st_dword@ptr:
 11766                           	callstack 0
 11767   000501                     get_ldnumber@path:
 11768                           	callstack 0
 11769   000501                     emuz80_57q_get_from_sram@addr:
 11770                           	callstack 0
 11771   000501                     emuz80_57q_write_to_sram@addr:
 11772                           	callstack 0
 11773   000501                     emuz80_57q_read_from_sram@addr:
 11774                           	callstack 0
 11775   000501                     acquire_bus@ctx_:
 11776                           	callstack 0
 11777   000501                     release_bus@ctx_:
 11778                           	callstack 0
 11779   000501                     SPI_SD_begin@ctx_:
 11780                           	callstack 0
 11781   000501                     SPI_SD_send@ctx_:
 11782                           	callstack 0
 11783   000501                     SPI_SD_receive@ctx_:
 11784                           	callstack 0
 11785   000501                     SPI_SD_select@ctx_:
 11786                           	callstack 0
 11787   000501                     SDCard_crc@buf:
 11788                           	callstack 0
 11789   000501                     ___SDCard_crc16@crc:
 11790                           	callstack 0
 11791   000501                     ___wmul@multiplier:
 11792                           	callstack 0
 11793   000501                     memcmp@vl:
 11794                           	callstack 0
 11795   000501                     memcpy@d1:
 11796                           	callstack 0
 11797   000501                     memset@dest:
 11798                           	callstack 0
 11799   000501                     strchr@s:
 11800                           	callstack 0
 11801   000501                     strcmp@l:
 11802                           	callstack 0
 11803   000501                     strcpy@dest:
 11804                           	callstack 0
 11805   000501                     strncmp@l:
 11806                           	callstack 0
 11807   000501                     ___lmul@multiplier:
 11808                           	callstack 0
 11809   000501                     ___lldiv@dividend:
 11810                           	callstack 0
 11811   000501                     ___aldiv@dividend:
 11812                           	callstack 0
 11813   000501                     ___almod@dividend:
 11814                           	callstack 0
 11815   000501                     ___fleq@ff1:
 11816                           	callstack 0
 11817   000501                     ___flneg@f1:
 11818                           	callstack 0
 11819   000501                     ___fltol@f1:
 11820                           	callstack 0
 11821   000501                     ___fladd@b:
 11822                           	callstack 0
 11823   000501                     ___flmul@b:
 11824                           	callstack 0
 11825   000501                     ___fpclassifyf@x:
 11826                           	callstack 0
 11827   000501                     labs@a:
 11828                           	callstack 0
 11829                           
 11830                           ; 4 bytes @ 0x0
 11831   000501                     	ds	1
 11832   000502                     fputc@c:
 11833                           	callstack 0
 11834                           
 11835                           ; 2 bytes @ 0x1
 11836   000502                     	ds	1
 11837   000503                     ??_ld_word:
 11838   000503                     ??_get_ldnumber:
 11839   000503                     dbc_1st@c:
 11840                           	callstack 0
 11841   000503                     dbc_2nd@c:
 11842                           	callstack 0
 11843   000503                     emuz80_57q_get_from_sram@ret_val:
 11844                           	callstack 0
 11845   000503                     st_word@val:
 11846                           	callstack 0
 11847   000503                     emuz80_57q_write_to_sram@buf:
 11848                           	callstack 0
 11849   000503                     emuz80_57q_read_from_sram@buf:
 11850                           	callstack 0
 11851   000503                     acquire_bus@ctx:
 11852                           	callstack 0
 11853   000503                     release_bus@ctx:
 11854                           	callstack 0
 11855   000503                     SPI_SD_begin@ctx:
 11856                           	callstack 0
 11857   000503                     SPI_SD_send@buf:
 11858                           	callstack 0
 11859   000503                     SPI_SD_receive@buf:
 11860                           	callstack 0
 11861   000503                     SPI_SD_select@select:
 11862                           	callstack 0
 11863   000503                     SDCard_crc@count:
 11864                           	callstack 0
 11865   000503                     ___SDCard_crc16@buf:
 11866                           	callstack 0
 11867   000503                     ___wmul@multiplicand:
 11868                           	callstack 0
 11869   000503                     memcmp@vr:
 11870                           	callstack 0
 11871   000503                     memcpy@s1:
 11872                           	callstack 0
 11873   000503                     memset@c:
 11874                           	callstack 0
 11875   000503                     strchr@c:
 11876                           	callstack 0
 11877   000503                     strcmp@r:
 11878                           	callstack 0
 11879   000503                     strcpy@src:
 11880                           	callstack 0
 11881   000503                     strncmp@r:
 11882                           	callstack 0
 11883   000503                     st_dword@val:
 11884                           	callstack 0
 11885                           
 11886                           ; 4 bytes @ 0x2
 11887   000503                     	ds	1
 11888   000504                     emuz80_57q_get_from_sram@ab:
 11889                           	callstack 0
 11890   000504                     fputc@fp:
 11891                           	callstack 0
 11892                           
 11893                           ; 2 bytes @ 0x3
 11894   000504                     	ds	1
 11895   000505                     ??_strcmp:
 11896   000505                     ??___fpclassifyf:
 11897   000505                     ??_labs:
 11898   000505                     ??_ld_dword:
 11899   000505                     ??___fltol:
 11900   000505                     st_clust@fs:
 11901                           	callstack 0
 11902   000505                     get_ldnumber@i:
 11903                           	callstack 0
 11904   000505                     emuz80_57q_write_to_sram@len:
 11905                           	callstack 0
 11906   000505                     emuz80_57q_read_from_sram@len:
 11907                           	callstack 0
 11908   000505                     SPI_SD_begin_transaction@ctx_:
 11909                           	callstack 0
 11910   000505                     SPI_SD_end_transaction@ctx_:
 11911                           	callstack 0
 11912   000505                     SPI_SD_send@count:
 11913                           	callstack 0
 11914   000505                     SPI_SD_receive@count:
 11915                           	callstack 0
 11916   000505                     SDCard_crc@endp:
 11917                           	callstack 0
 11918   000505                     ___SDCard_crc16@count:
 11919                           	callstack 0
 11920   000505                     ___wmul@product:
 11921                           	callstack 0
 11922   000505                     memcmp@n:
 11923                           	callstack 0
 11924   000505                     memcpy@n:
 11925                           	callstack 0
 11926   000505                     memset@n:
 11927                           	callstack 0
 11928   000505                     strcpy@d:
 11929                           	callstack 0
 11930   000505                     strncmp@n:
 11931                           	callstack 0
 11932   000505                     ___lmul@multiplicand:
 11933                           	callstack 0
 11934   000505                     ___lldiv@divisor:
 11935                           	callstack 0
 11936   000505                     ___aldiv@divisor:
 11937                           	callstack 0
 11938   000505                     ___almod@divisor:
 11939                           	callstack 0
 11940   000505                     ___fleq@ff2:
 11941                           	callstack 0
 11942   000505                     ___fladd@a:
 11943                           	callstack 0
 11944   000505                     ___flmul@a:
 11945                           	callstack 0
 11946                           
 11947                           ; 4 bytes @ 0x4
 11948   000505                     	ds	1
 11949   000506                     ??_fputc:
 11950   000506                     ld_word@rv:
 11951                           	callstack 0
 11952                           
 11953                           ; 2 bytes @ 0x5
 11954   000506                     	ds	1
 11955   000507                     ??_memcmp:
 11956   000507                     ??___SDCard_crc16:
 11957   000507                     ??_strncmp:
 11958   000507                     ??_emuz80_57q_write_to_sram:
 11959   000507                     ??_SPI_SD_receive:
 11960   000507                     ?_read_prec_or_width:
 11961                           	callstack 0
 11962   000507                     st_clust@dir:
 11963                           	callstack 0
 11964   000507                     get_ldnumber@tt:
 11965                           	callstack 0
 11966   000507                     emuz80_57q_read_from_sram@i:
 11967                           	callstack 0
 11968   000507                     SPI_SD_send@i:
 11969                           	callstack 0
 11970   000507                     SDCard_crc@i:
 11971                           	callstack 0
 11972   000507                     memcpy@d:
 11973                           	callstack 0
 11974   000507                     memset@p:
 11975                           	callstack 0
 11976   000507                     read_prec_or_width@fmt:
 11977                           	callstack 0
 11978                           
 11979                           ; 2 bytes @ 0x6
 11980   000507                     	ds	1
 11981   000508                     ?_ld_clust:
 11982                           	callstack 0
 11983   000508                     ld_clust@fs:
 11984                           	callstack 0
 11985                           
 11986                           ; 2 bytes @ 0x7
 11987   000508                     	ds	1
 11988   000509                     ??___fladd:
 11989   000509                     ??___flmul:
 11990   000509                     ??___fleq:
 11991   000509                     get_ldnumber@tc:
 11992                           	callstack 0
 11993   000509                     SDCard_crc@crc:
 11994                           	callstack 0
 11995   000509                     ___aldiv@counter:
 11996                           	callstack 0
 11997   000509                     ___almod@counter:
 11998                           	callstack 0
 11999   000509                     ___fltol@sign1:
 12000                           	callstack 0
 12001   000509                     create_name@dp:
 12002                           	callstack 0
 12003   000509                     emuz80_57q_write_to_sram@i:
 12004                           	callstack 0
 12005   000509                     emuz80_57q_read_from_sram@ab:
 12006                           	callstack 0
 12007   000509                     SPI_SD_send@p:
 12008                           	callstack 0
 12009   000509                     SPI_SD_receive@i:
 12010                           	callstack 0
 12011   000509                     memcmp@l:
 12012                           	callstack 0
 12013   000509                     memcpy@s:
 12014                           	callstack 0
 12015   000509                     read_prec_or_width@ap:
 12016                           	callstack 0
 12017   000509                     ___fpclassifyf@e:
 12018                           	callstack 0
 12019   000509                     st_clust@cl:
 12020                           	callstack 0
 12021   000509                     ___lmul@product:
 12022                           	callstack 0
 12023   000509                     ___lldiv@quotient:
 12024                           	callstack 0
 12025                           
 12026                           ; 4 bytes @ 0x8
 12027   000509                     	ds	1
 12028   00050A                     ___aldiv@sign:
 12029                           	callstack 0
 12030   00050A                     ___almod@sign:
 12031                           	callstack 0
 12032   00050A                     ___fltol@exp1:
 12033                           	callstack 0
 12034   00050A                     ld_clust@dir:
 12035                           	callstack 0
 12036   00050A                     get_ldnumber@vol:
 12037                           	callstack 0
 12038   00050A                     SDCard_crc@p:
 12039                           	callstack 0
 12040   00050A                     ___SDCard_crc16@endp:
 12041                           	callstack 0
 12042   00050A                     ld_dword@rv:
 12043                           	callstack 0
 12044                           
 12045                           ; 4 bytes @ 0x9
 12046   00050A                     	ds	1
 12047   00050B                     ??_read_prec_or_width:
 12048   00050B                     ?_abs:
 12049                           	callstack 0
 12050   00050B                     SPI_SD_receive@repeat:
 12051                           	callstack 0
 12052   00050B                     memcpy@tmp:
 12053                           	callstack 0
 12054   00050B                     create_name@path:
 12055                           	callstack 0
 12056   00050B                     emuz80_57q_write_to_sram@ab:
 12057                           	callstack 0
 12058   00050B                     SPI_SD_dummy_clocks@ctx_:
 12059                           	callstack 0
 12060   00050B                     memcmp@r:
 12061                           	callstack 0
 12062   00050B                     ctoa@fp:
 12063                           	callstack 0
 12064   00050B                     stoa@fp:
 12065                           	callstack 0
 12066   00050B                     abs@a:
 12067                           	callstack 0
 12068   00050B                     fputs@s:
 12069                           	callstack 0
 12070   00050B                     ___aldiv@quotient:
 12071                           	callstack 0
 12072   00050B                     ___fpclassifyf@u:
 12073                           	callstack 0
 12074                           
 12075                           ; 4 bytes @ 0xA
 12076   00050B                     	ds	1
 12077   00050C                     ??_ld_clust:
 12078   00050C                     SPI_SD_receive@i_2404:
 12079                           	callstack 0
 12080   00050C                     get_ldnumber@tp:
 12081                           	callstack 0
 12082   00050C                     ___SDCard_crc16@p:
 12083                           	callstack 0
 12084                           
 12085                           ; 2 bytes @ 0xB
 12086   00050C                     	ds	1
 12087   00050D                     ??_abs:
 12088   00050D                     ??_create_name:
 12089   00050D                     ?_clst2sect:
 12090                           	callstack 0
 12091   00050D                     ?___xxtofl:
 12092                           	callstack 0
 12093   00050D                     ___lldiv@counter:
 12094                           	callstack 0
 12095   00050D                     ___fladd@signs:
 12096                           	callstack 0
 12097   00050D                     ___flmul@sign:
 12098                           	callstack 0
 12099   00050D                     ctoa@c:
 12100                           	callstack 0
 12101   00050D                     read_prec_or_width@c:
 12102                           	callstack 0
 12103   00050D                     clst2sect@fs:
 12104                           	callstack 0
 12105   00050D                     SPI_SD_receive@p:
 12106                           	callstack 0
 12107   00050D                     SPI_SD_dummy_clocks@clocks:
 12108                           	callstack 0
 12109   00050D                     stoa@s:
 12110                           	callstack 0
 12111   00050D                     fputs@fp:
 12112                           	callstack 0
 12113   00050D                     ___xxtofl@val:
 12114                           	callstack 0
 12115                           
 12116                           ; 4 bytes @ 0xC
 12117   00050D                     	ds	1
 12118   00050E                     ??_ctoa:
 12119   00050E                     ___fladd@aexp:
 12120                           	callstack 0
 12121   00050E                     ___flmul@aexp:
 12122                           	callstack 0
 12123   00050E                     get_fileinfo@dp:
 12124                           	callstack 0
 12125   00050E                     read_prec_or_width@n:
 12126                           	callstack 0
 12127                           
 12128                           ; 2 bytes @ 0xD
 12129   00050E                     	ds	1
 12130   00050F                     ??_stoa:
 12131   00050F                     ___fladd@bexp:
 12132                           	callstack 0
 12133   00050F                     fputs@c:
 12134                           	callstack 0
 12135   00050F                     SPI_SD_dummy_clocks@i:
 12136                           	callstack 0
 12137   00050F                     SPI_SD_receive_byte@ctx_:
 12138                           	callstack 0
 12139   00050F                     ctoa@l:
 12140                           	callstack 0
 12141   00050F                     clst2sect@clst:
 12142                           	callstack 0
 12143   00050F                     ___flmul@grs:
 12144                           	callstack 0
 12145                           
 12146                           ; 4 bytes @ 0xE
 12147   00050F                     	ds	1
 12148   000510                     ___fladd@grs:
 12149                           	callstack 0
 12150   000510                     get_fileinfo@fno:
 12151                           	callstack 0
 12152   000510                     _create_name$887:
 12153                           	callstack 0
 12154   000510                     fputs@i:
 12155                           	callstack 0
 12156   000510                     ld_clust@cl:
 12157                           	callstack 0
 12158                           
 12159                           ; 4 bytes @ 0xF
 12160   000510                     	ds	1
 12161   000511                     ??___xxtofl:
 12162   000511                     SPI_SD_dummy_clocks@dummy:
 12163                           	callstack 0
 12164   000511                     SPI_SD_receive_byte@dummy:
 12165                           	callstack 0
 12166   000511                     ctoa@w:
 12167                           	callstack 0
 12168   000511                     stoa@p:
 12169                           	callstack 0
 12170                           
 12171                           ; 2 bytes @ 0x10
 12172   000511                     	ds	1
 12173   000512                     ??_get_fileinfo:
 12174   000512                     create_name@d:
 12175                           	callstack 0
 12176   000512                     SDCard_end_transaction@spi:
 12177                           	callstack 0
 12178   000512                     ___SDCard_wait_response@attempts:
 12179                           	callstack 0
 12180   000512                     pad@fp:
 12181                           	callstack 0
 12182                           
 12183                           ; 2 bytes @ 0x11
 12184   000512                     	ds	1
 12185   000513                     ??_clst2sect:
 12186   000513                     ___flmul@bexp:
 12187                           	callstack 0
 12188   000513                     create_name@ni:
 12189                           	callstack 0
 12190   000513                     stoa@w:
 12191                           	callstack 0
 12192                           
 12193                           ; 2 bytes @ 0x12
 12194   000513                     	ds	1
 12195   000514                     ___SDCard_wait_response@spi:
 12196                           	callstack 0
 12197   000514                     pad@buf:
 12198                           	callstack 0
 12199   000514                     ___flmul@prod:
 12200                           	callstack 0
 12201                           
 12202                           ; 4 bytes @ 0x13
 12203   000514                     	ds	1
 12204   000515                     ___xxtofl@sign:
 12205                           	callstack 0
 12206   000515                     create_name@p:
 12207                           	callstack 0
 12208   000515                     stoa@cp:
 12209                           	callstack 0
 12210                           
 12211                           ; 2 bytes @ 0x14
 12212   000515                     	ds	1
 12213   000516                     ___SDCard_wait_response@no_response:
 12214                           	callstack 0
 12215   000516                     ___xxtofl@exp:
 12216                           	callstack 0
 12217   000516                     get_fileinfo@si:
 12218                           	callstack 0
 12219   000516                     pad@p:
 12220                           	callstack 0
 12221                           
 12222                           ; 2 bytes @ 0x15
 12223   000516                     	ds	1
 12224   000517                     ___SDCard_wait_response@response:
 12225                           	callstack 0
 12226   000517                     create_name@si:
 12227                           	callstack 0
 12228   000517                     stoa@l:
 12229                           	callstack 0
 12230   000517                     ___xxtofl@arg:
 12231                           	callstack 0
 12232                           
 12233                           ; 4 bytes @ 0x16
 12234   000517                     	ds	1
 12235   000518                     ??_pad:
 12236   000518                     ?___SDCard_command_r1:
 12237                           	callstack 0
 12238   000518                     get_fileinfo@di:
 12239                           	callstack 0
 12240   000518                     ___flmul@temp:
 12241                           	callstack 0
 12242   000518                     ___SDCard_command_r1@argument:
 12243                           	callstack 0
 12244                           
 12245                           ; 4 bytes @ 0x17
 12246   000518                     	ds	1
 12247   000519                     create_name@sfn:
 12248                           	callstack 0
 12249   000519                     pad@i:
 12250                           	callstack 0
 12251                           
 12252                           ; 2 bytes @ 0x18
 12253   000519                     	ds	1
 12254   00051A                     ?___flsub:
 12255                           	callstack 0
 12256   00051A                     get_fileinfo@c:
 12257                           	callstack 0
 12258   00051A                     ___flge@ff1:
 12259                           	callstack 0
 12260   00051A                     ___flsub@b:
 12261                           	callstack 0
 12262                           
 12263                           ; 4 bytes @ 0x19
 12264   00051A                     	ds	1
 12265   00051B                     ?___fldiv:
 12266                           	callstack 0
 12267   00051B                     create_name@i:
 12268                           	callstack 0
 12269   00051B                     dtoa@fp:
 12270                           	callstack 0
 12271   00051B                     xtoa@fp:
 12272                           	callstack 0
 12273   00051B                     ___fldiv@b:
 12274                           	callstack 0
 12275                           
 12276                           ; 4 bytes @ 0x1A
 12277   00051B                     	ds	1
 12278   00051C                     ___SDCard_command_r1@r1:
 12279                           	callstack 0
 12280                           
 12281                           ; 2 bytes @ 0x1B
 12282   00051C                     	ds	1
 12283   00051D                     create_name@c:
 12284                           	callstack 0
 12285   00051D                     dtoa@d:
 12286                           	callstack 0
 12287   00051D                     xtoa@d:
 12288                           	callstack 0
 12289                           
 12290                           ; 4 bytes @ 0x1C
 12291   00051D                     	ds	1
 12292   00051E                     ___SDCard_command_r1@command:
 12293                           	callstack 0
 12294   00051E                     ___flge@ff2:
 12295                           	callstack 0
 12296   00051E                     ___flsub@a:
 12297                           	callstack 0
 12298                           
 12299                           ; 4 bytes @ 0x1D
 12300   00051E                     	ds	1
 12301   00051F                     ___fldiv@a:
 12302                           	callstack 0
 12303   00051F                     ___SDCard_command_r1@buf:
 12304                           	callstack 0
 12305                           
 12306                           ; 6 bytes @ 0x1E
 12307   00051F                     	ds	2
 12308   000521                     xtoa@x:
 12309                           	callstack 0
 12310   000521                     _dtoa$3389:
 12311                           	callstack 0
 12312                           
 12313                           ; 2 bytes @ 0x20
 12314   000521                     	ds	1
 12315   000522                     ??___flge:
 12316   000522                     ??_xtoa:
 12317                           
 12318                           ; 1 bytes @ 0x21
 12319   000522                     	ds	1
 12320   000523                     ??___fldiv:
 12321   000523                     dtoa@p:
 12322                           	callstack 0
 12323                           
 12324                           ; 2 bytes @ 0x22
 12325   000523                     	ds	2
 12326   000525                     ___SDCard_command_r1@response:
 12327                           	callstack 0
 12328   000525                     dtoa@w:
 12329                           	callstack 0
 12330                           
 12331                           ; 2 bytes @ 0x24
 12332   000525                     	ds	1
 12333   000526                     ___SDCard_command_r1@spi:
 12334                           	callstack 0
 12335   000526                     _xtoa$3442:
 12336                           	callstack 0
 12337                           
 12338                           ; 2 bytes @ 0x25
 12339   000526                     	ds	1
 12340   000527                     dtoa@s:
 12341                           	callstack 0
 12342   000527                     ___fldiv@rem:
 12343                           	callstack 0
 12344                           
 12345                           ; 4 bytes @ 0x26
 12346   000527                     	ds	1
 12347   000528                     xtoa@a:
 12348                           	callstack 0
 12349   000528                     dtoa@i:
 12350                           	callstack 0
 12351   000528                     SDCard_command@argument:
 12352                           	callstack 0
 12353                           
 12354                           ; 4 bytes @ 0x27
 12355   000528                     	ds	1
 12356   000529                     xtoa@p:
 12357                           	callstack 0
 12358                           
 12359                           ; 2 bytes @ 0x28
 12360   000529                     	ds	2
 12361   00052B                     ___fldiv@sign:
 12362                           	callstack 0
 12363   00052B                     xtoa@w:
 12364                           	callstack 0
 12365                           
 12366                           ; 2 bytes @ 0x2A
 12367   00052B                     	ds	1
 12368   00052C                     SDCard_command@response_buffer:
 12369                           	callstack 0
 12370   00052C                     ___fldiv@new_exp:
 12371                           	callstack 0
 12372                           
 12373                           ; 2 bytes @ 0x2B
 12374   00052C                     	ds	1
 12375   00052D                     xtoa@c:
 12376                           	callstack 0
 12377                           
 12378                           ; 1 bytes @ 0x2C
 12379   00052D                     	ds	1
 12380   00052E                     SDCard_command@length:
 12381                           	callstack 0
 12382   00052E                     xtoa@i:
 12383                           	callstack 0
 12384   00052E                     ___fldiv@grs:
 12385                           	callstack 0
 12386                           
 12387                           ; 4 bytes @ 0x2D
 12388   00052E                     	ds	2
 12389   000530                     SDCard_command@spi:
 12390                           	callstack 0
 12391                           
 12392                           ; 2 bytes @ 0x2F
 12393   000530                     	ds	2
 12394   000532                     SDCard_command@command:
 12395                           	callstack 0
 12396   000532                     ___fldiv@bexp:
 12397                           	callstack 0
 12398                           
 12399                           ; 1 bytes @ 0x31
 12400   000532                     	ds	1
 12401   000533                     ___fldiv@aexp:
 12402                           	callstack 0
 12403   000533                     SDCard_command@result:
 12404                           	callstack 0
 12405                           
 12406                           ; 2 bytes @ 0x32
 12407   000533                     	ds	1
 12408   000534                     ?_floorf:
 12409                           	callstack 0
 12410   000534                     floorf@x:
 12411                           	callstack 0
 12412                           
 12413                           ; 4 bytes @ 0x33
 12414   000534                     	ds	1
 12415   000535                     SDCard_command@responsep:
 12416                           	callstack 0
 12417                           
 12418                           ; 2 bytes @ 0x34
 12419   000535                     	ds	3
 12420   000538                     ??_floorf:
 12421                           
 12422                           ; 1 bytes @ 0x37
 12423   000538                     	ds	6
 12424   00053E                     floorf@m:
 12425                           	callstack 0
 12426                           
 12427                           ; 4 bytes @ 0x3D
 12428   00053E                     	ds	4
 12429   000542                     floorf@e:
 12430                           	callstack 0
 12431                           
 12432                           ; 2 bytes @ 0x41
 12433   000542                     	ds	2
 12434   000544                     floorf@u:
 12435                           	callstack 0
 12436                           
 12437                           ; 4 bytes @ 0x43
 12438   000544                     	ds	4
 12439   000548                     efgtoa@fp:
 12440                           	callstack 0
 12441                           
 12442                           ; 2 bytes @ 0x47
 12443   000548                     	ds	2
 12444   00054A                     efgtoa@f:
 12445                           	callstack 0
 12446                           
 12447                           ; 4 bytes @ 0x49
 12448   00054A                     	ds	4
 12449   00054E                     efgtoa@c:
 12450                           	callstack 0
 12451                           
 12452                           ; 1 bytes @ 0x4D
 12453   00054E                     	ds	1
 12454   00054F                     ??_efgtoa:
 12455                           
 12456                           ; 1 bytes @ 0x4E
 12457   00054F                     	ds	2
 12458   000551                     vfpfcnvrt@fp:
 12459                           	callstack 0
 12460                           
 12461                           ; 2 bytes @ 0x50
 12462   000551                     	ds	2
 12463   000553                     vfpfcnvrt@fmt:
 12464                           	callstack 0
 12465                           
 12466                           ; 2 bytes @ 0x52
 12467   000553                     	ds	2
 12468   000555                     vfpfcnvrt@ap:
 12469                           	callstack 0
 12470                           
 12471                           ; 2 bytes @ 0x54
 12472   000555                     	ds	2
 12473   000557                     ??_vfpfcnvrt:
 12474                           
 12475                           ; 1 bytes @ 0x56
 12476   000557                     	ds	4
 12477   00055B                     vfprintf@cfmt:
 12478                           	callstack 0
 12479                           
 12480                           ; 2 bytes @ 0x5A
 12481   00055B                     	ds	2
 12482   00055D                     printf@ap:
 12483                           	callstack 0
 12484                           
 12485                           ; 2 bytes @ 0x5C
 12486   00055D                     	ds	2
 12487   00055F                     ??_SDCard_init:
 12488   00055F                     disk_status@pdrv:
 12489                           	callstack 0
 12490   00055F                     sync_window@res:
 12491                           	callstack 0
 12492                           
 12493                           ; 1 bytes @ 0x5E
 12494   00055F                     	ds	1
 12495   000560                     
 12496                           ; 1 bytes @ 0x5F
 12497 ;;
 12498 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 12499 ;;
 12500 ;; *************** function _main *****************
 12501 ;; Defined at:
 12502 ;;		line 432 in file "src/boards/SBC8080-57Q.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;		None
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;		None
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  1    wreg      void 
 12509 ;; Registers used:
 12510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12511 ;; Tracked objects:
 12512 ;;		On entry : 0/0
 12513 ;;		On exit  : 3F/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12517 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12519 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12520 ;;Total ram usage:        4 bytes
 12521 ;; Hardware stack levels required when called: 20
 12522 ;; This function calls:
 12523 ;;		_SD_init
 12524 ;;		___fldiv
 12525 ;;		___lmul
 12526 ;;		___xxtofl
 12527 ;;		_disk_io_handle
 12528 ;;		_emuz80_57q_enter_bus_master
 12529 ;;		_emuz80_57q_exit_bus_master
 12530 ;;		_emuz80_57q_start_cpu
 12531 ;;		_emuz80_57q_sys_init
 12532 ;;		_emuz80_57q_write_to_sram
 12533 ;;		_f_mount
 12534 ;;		_mem_init
 12535 ;;		_menu_select
 12536 ;;		_printf
 12537 ;;		_wait_for_programmer
 12538 ;; This function is called by:
 12539 ;;		Startup code after reset
 12540 ;; This function uses a non-reentrant model
 12541 ;;
 12542                           
 12543                           ;# 
 12544                           
 12545                           	psect	text0
 12546   0159F2                     __ptext0:
 12547                           	callstack 0
 12548   0159F2                     _main:
 12549                           	callstack 107
 12550                           
 12551                           ;src/boards/SBC8080-57Q.c: 434:  emuz80_57q_sys_init();
 12552                           
 12553                           ;incstack = 0
 12554   0159F2  EC44  F0C7         	call	_emuz80_57q_sys_init	;wreg free
 12555                           
 12556                           ; BSR set to: 4
 12557                           ;src/boards/SBC8080-57Q.c: 435:  wait_for_programmer();
 12558   0159F6  ECD3  F0CD         	call	_wait_for_programmer	;wreg free
 12559                           
 12560                           ; BSR set to: 5
 12561                           ;src/boards/SBC8080-57Q.c: 436:  printf("Board: SBC8080 + EMUZ80-57Q\n\r");
 12562   0159FA  0E00               	movlw	low STR_59
 12563   0159FC  6F9A               	movwf	printf@fmt& (0+255),b
 12564   0159FE  0EFD               	movlw	high STR_59
 12565   015A00  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12566   015A02  EC53  F0CF         	call	_printf	;wreg free
 12567                           
 12568                           ; BSR set to: 5
 12569                           ;src/boards/SBC8080-57Q.c: 437:  mem_init();
 12570   015A06  EC64  F0B6         	call	_mem_init	;wreg free
 12571                           
 12572                           ; BSR set to: 5
 12573                           ;src/boards/SBC8080-57Q.c: 439:  if(NCO1EN) {
 12574   015A0A  0104               	movlb	4	; () banked
 12575   015A0C  AF46               	btfss	70,7,b	;volatile
 12576   015A0E  D04A               	goto	l12829
 12577                           
 12578                           ; BSR set to: 4
 12579                           ;src/boards/SBC8080-57Q.c: 440:   printf("Use NCO1->RA3 %.2f MHz for 8085 clock\n\r", ((
      +                          uint32_t)NCO1INC * 61 / 2) / 1000000.0);
 12580   015A10  5143               	movf	67,w,b	;volatile
 12581   015A12  6E01               	movwf	___lmul@multiplier^(0+1280),c
 12582   015A14  5144               	movf	68,w,b	;volatile
 12583   015A16  6E02               	movwf	(___lmul@multiplier+1)^(0+1280),c
 12584   015A18  5145               	movf	69,w,b	;volatile
 12585   015A1A  6E03               	movwf	(___lmul@multiplier+2)^(0+1280),c
 12586   015A1C  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 12587   015A1E  0E3D               	movlw	61
 12588   015A20  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 12589   015A22  0E00               	movlw	0
 12590   015A24  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 12591   015A26  0E00               	movlw	0
 12592   015A28  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 12593   015A2A  0E00               	movlw	0
 12594   015A2C  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 12595   015A2E  EC33  F0CC         	call	___lmul	;wreg free
 12596   015A32  90D8               	bcf	status,0,c
 12597   015A34  3204               	rrcf	(?___lmul+3)^(0+1280),f,c
 12598   015A36  3203               	rrcf	(?___lmul+2)^(0+1280),f,c
 12599   015A38  3202               	rrcf	(?___lmul+1)^(0+1280),f,c
 12600   015A3A  3201               	rrcf	?___lmul^(0+1280),f,c
 12601   015A3C  C501  F50D         	movff	?___lmul,___xxtofl@val
 12602   015A40  C502  F50E         	movff	?___lmul+1,___xxtofl@val+1
 12603   015A44  C503  F50F         	movff	?___lmul+2,___xxtofl@val+2
 12604   015A48  C504  F510         	movff	?___lmul+3,___xxtofl@val+3
 12605   015A4C  0E00               	movlw	0
 12606   015A4E  ECA3  F0BA         	call	___xxtofl
 12607   015A52  C50D  F51B         	movff	?___xxtofl,___fldiv@b
 12608   015A56  C50E  F51C         	movff	?___xxtofl+1,___fldiv@b+1
 12609   015A5A  C50F  F51D         	movff	?___xxtofl+2,___fldiv@b+2
 12610   015A5E  C510  F51E         	movff	?___xxtofl+3,___fldiv@b+3
 12611   015A62  0E00               	movlw	0
 12612   015A64  6E1F               	movwf	___fldiv@a^(0+1280),c
 12613   015A66  0E24               	movlw	36
 12614   015A68  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 12615   015A6A  0E74               	movlw	116
 12616   015A6C  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 12617   015A6E  0E49               	movlw	73
 12618   015A70  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 12619   015A72  EC63  F0A9         	call	___fldiv	;wreg free
 12620   015A76  C51B  F7D0         	movff	?___fldiv,_main$3958
 12621   015A7A  C51C  F7D1         	movff	?___fldiv+1,_main$3958+1
 12622   015A7E  C51D  F7D2         	movff	?___fldiv+2,_main$3958+2
 12623   015A82  C51E  F7D3         	movff	?___fldiv+3,_main$3958+3
 12624                           
 12625                           ;src/boards/SBC8080-57Q.c: 440:   printf("Use NCO1->RA3 %.2f MHz for 8085 clock\n\r", ((
      +                          uint32_t)NCO1INC * 61 / 2) / 1000000.0);
 12626   015A86  0E0F               	movlw	low STR_60
 12627   015A88  0105               	movlb	5	; () banked
 12628   015A8A  6F9A               	movwf	printf@fmt& (0+255),b
 12629   015A8C  0EFB               	movlw	high STR_60
 12630   015A8E  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12631   015A90  C7D0  F59C         	movff	_main$3958,?_printf+2
 12632   015A94  C7D1  F59D         	movff	_main$3958+1,?_printf+3
 12633   015A98  C7D2  F59E         	movff	_main$3958+2,?_printf+4
 12634   015A9C  C7D3  F59F         	movff	_main$3958+3,?_printf+5
 12635   015AA0  EC53  F0CF         	call	_printf	;wreg free
 12636   015AA4                     l12829:
 12637                           
 12638                           ;src/boards/SBC8080-57Q.c: 442:  printf("\n\r");
 12639   015AA4  0ECB               	movlw	low (STR_64+33)
 12640   015AA6  0105               	movlb	5	; () banked
 12641   015AA8  6F9A               	movwf	printf@fmt& (0+255),b
 12642   015AAA  0EFB               	movlw	high (STR_64+33)
 12643   015AAC  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12644   015AAE  EC53  F0CF         	call	_printf	;wreg free
 12645                           
 12646                           ; BSR set to: 5
 12647                           ;src/boards/SBC8080-57Q.c: 444:  SD_init();
 12648   015AB2  ECC1  F0CA         	call	_SD_init	;wreg free
 12649                           
 12650                           ; BSR set to: 5
 12651                           ;src/boards/SBC8080-57Q.c: 446:  if (f_mount(&fs, "0://", 1) != FR_OK) {
 12652   015AB6  0E8C               	movlw	low _fs
 12653   015AB8  0106               	movlb	6	; () banked
 12654   015ABA  6FAF               	movwf	f_mount@fs& (0+255),b
 12655   015ABC  0E15               	movlw	high _fs
 12656   015ABE  6FB0               	movwf	(f_mount@fs+1)& (0+255),b
 12657   015AC0  0EF2               	movlw	low STR_62
 12658   015AC2  6FB1               	movwf	f_mount@path& (0+255),b
 12659   015AC4  0EFF               	movlw	high STR_62
 12660   015AC6  6FB2               	movwf	(f_mount@path+1)& (0+255),b
 12661   015AC8  0E01               	movlw	1
 12662   015ACA  6FB3               	movwf	f_mount@opt& (0+255),b
 12663   015ACC  ECCB  F0C1         	call	_f_mount	;wreg free
 12664   015AD0  0900               	iorlw	0
 12665   015AD2  B4D8               	btfsc	status,2,c
 12666   015AD4  D008               	goto	l12837
 12667                           
 12668                           ; BSR set to: 6
 12669                           ;src/boards/SBC8080-57Q.c: 447:   printf("Failed to mount SD Card.\n\r");
 12670   015AD6  0E8E               	movlw	low STR_63
 12671   015AD8  0105               	movlb	5	; () banked
 12672   015ADA  6F9A               	movwf	printf@fmt& (0+255),b
 12673   015ADC  0EFD               	movlw	high STR_63
 12674   015ADE  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12675   015AE0  EC53  F0CF         	call	_printf	;wreg free
 12676   015AE4                     l1509:
 12677   015AE4  D7FF               	goto	l1509
 12678   015AE6                     l12837:
 12679                           
 12680                           ; BSR set to: 6
 12681                           ;src/boards/SBC8080-57Q.c: 451:  if (menu_select() < 0)
 12682   015AE6  ECD8  F09C         	call	_menu_select	;wreg free
 12683   015AEA  BFBF               	btfsc	(?_menu_select+1)& (0+255),7,b
 12684   015AEC                     u16470:
 12685                           
 12686                           ;src/boards/SBC8080-57Q.c: 452:   while (1);
 12687   015AEC  D7FF               	goto	u16470
 12688                           
 12689                           ; BSR set to: 7
 12690                           ;src/boards/SBC8080-57Q.c: 455:  emuz80_57q_write_to_sram(0x00000,(uint8_t*)rom, sizeof(
      +                          rom));
 12691   015AEE  0E00               	movlw	0
 12692   015AF0  6E02               	movwf	(emuz80_57q_write_to_sram@addr+1)^(0+1280),c
 12693   015AF2  0E00               	movlw	0
 12694   015AF4  6E01               	movwf	emuz80_57q_write_to_sram@addr^(0+1280),c
 12695   015AF6  0EE4               	movlw	low _rom
 12696   015AF8  6E03               	movwf	emuz80_57q_write_to_sram@buf^(0+1280),c
 12697   015AFA  0EF4               	movlw	high _rom
 12698   015AFC  6E04               	movwf	(emuz80_57q_write_to_sram@buf+1)^(0+1280),c
 12699   015AFE  0E03               	movlw	3
 12700   015B00  6E06               	movwf	(emuz80_57q_write_to_sram@len+1)^(0+1280),c
 12701   015B02  0E3F               	movlw	63
 12702   015B04  6E05               	movwf	emuz80_57q_write_to_sram@len^(0+1280),c
 12703   015B06  EC86  F0CA         	call	_emuz80_57q_write_to_sram	;wreg free
 12704                           
 12705                           ;src/boards/SBC8080-57Q.c: 456:  emuz80_57q_start_cpu();
 12706   015B0A  ECE2  F0BF         	call	_emuz80_57q_start_cpu	;wreg free
 12707                           
 12708                           ;src/boards/SBC8080-57Q.c: 458:  GIE = 0;
 12709   015B0E  9ED6               	bcf	1238,7,c	;volatile
 12710                           
 12711                           ;src/boards/SBC8080-57Q.c: 459:  goto IO_wait_loop;
 12712   015B10  D008               	goto	l12851
 12713   015B12                     l12845:
 12714                           
 12715                           ; BSR set to: 7
 12716                           ;src/boards/SBC8080-57Q.c: 462:  TRISF = 0;
 12717   015B12  0E00               	movlw	0
 12718   015B14  6ECB               	movwf	203,c	;volatile
 12719                           
 12720                           ; BSR set to: 7
 12721                           ;src/boards/SBC8080-57Q.c: 463:  G3POL = 1;
 12722   015B16  0100               	movlb	0	; () banked
 12723   015B18  85D7               	bsf	215,2,b	;volatile
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;src/boards/SBC8080-57Q.c: 464:  G3POL = 0;
 12727   015B1A  95D7               	bcf	215,2,b	;volatile
 12728   015B1C                     l1518:
 12729   015B1C  A0CE               	btfss	1230,0,c	;volatile
 12730   015B1E  D7FE               	goto	l1518
 12731                           
 12732                           ;src/boards/SBC8080-57Q.c: 466:  TRISF = 0xff;
 12733   015B20  68CB               	setf	203,c	;volatile
 12734   015B22                     l12851:
 12735                           
 12736                           ;src/boards/SBC8080-57Q.c: 468:  BSR = 0;
 12737   015B22  0E00               	movlw	0
 12738   015B24  6EE0               	movwf	224,c	;volatile
 12739   015B26                     CLC3_check:
 12740                           
 12741                           ;# 
 12742   015B26  B5D4               	btfsc	212,2,b	;# 
 12743   015B28  D7FE               	bra	CLC3_check	;# 
 12744   015B2A  B3D4               	btfsc	212,1,b	;# 
 12745   015B2C  D009               	bra	CLC3_exit	;# 
 12746   015B2E  50D3               	movf	1235,w,c	;# 
 12747   015B30                     CLC2_check:
 12748                           
 12749                           ;# 
 12750   015B30  B2CE               	btfsc	1230,1,c	;# 
 12751   015B32  D002               	bra	CLC2_exit	;# 
 12752   015B34  50D3               	movf	1235,w,c	;# 
 12753   015B36  D7FC               	bra	CLC2_check	;# 
 12754   015B38                     CLC2_exit:
 12755                           
 12756                           ;# 
 12757   015B38  0102               	movlb	2	;# 
 12758   015B3A  6FC9               	movwf	713,b	;# 
 12759   015B3C  0100               	movlb	0	;# 
 12760   015B3E  D7F3               	bra	CLC3_check	;# 
 12761   015B40                     CLC3_exit:
 12762                           
 12763                           ;src/boards/SBC8080-57Q.c: 492:  io_addr = PORTB;
 12764   015B40  C4CF F72B          	movff	1231,_io_addr	;volatile
 12765                           
 12766                           ;src/boards/SBC8080-57Q.c: 494:  switch (io_addr) {
 12767   015B44  D045               	goto	l12883
 12768   015B46                     l12855:
 12769                           
 12770                           ; BSR set to: 7
 12771                           ;src/boards/SBC8080-57Q.c: 497:   LATF = U3TXIF + U3RXIF*2;
 12772   015B46  0E00               	movlw	0
 12773   015B48  B0B7               	btfsc	1207,0,c	;volatile
 12774   015B4A  0E01               	movlw	1
 12775   015B4C  0D02               	mullw	2
 12776   015B4E  50F3               	movf	243,w,c
 12777   015B50  B2B7               	btfsc	1207,1,c	;volatile
 12778   015B52  0F01               	addlw	1
 12779   015B54  6EC3               	movwf	195,c	;volatile
 12780                           
 12781                           ;src/boards/SBC8080-57Q.c: 498:   goto IO_wait_loop0;
 12782   015B56  D7DD               	goto	l12845
 12783   015B58                     l1523:
 12784                           
 12785                           ; BSR set to: 7
 12786                           ;src/boards/SBC8080-57Q.c: 501:   LATF = U3RXB;
 12787   015B58  C2C7 F4C3          	movff	711,1219	;volatile
 12788                           
 12789                           ;src/boards/SBC8080-57Q.c: 502:   goto IO_wait_loop0;
 12790   015B5C  D7DA               	goto	l12845
 12791   015B5E                     l1524:
 12792                           
 12793                           ; BSR set to: 7
 12794                           ;src/boards/SBC8080-57Q.c: 505:   LATF = disk_stat;
 12795   015B5E  C7DA  F4C3         	movff	_disk_stat,1219	;volatile
 12796                           
 12797                           ;src/boards/SBC8080-57Q.c: 506:   goto IO_wait_loop0;
 12798   015B62  D7D7               	goto	l12845
 12799   015B64                     l1526:
 12800                           
 12801                           ; BSR set to: 7
 12802                           ;src/boards/SBC8080-57Q.c: 510:   LATE0 = 1;
 12803   015B64  80C2               	bsf	1218,0,c	;volatile
 12804                           
 12805                           ;src/boards/SBC8080-57Q.c: 511:   G3POL = 1;
 12806   015B66  0100               	movlb	0	; () banked
 12807   015B68  85D7               	bsf	215,2,b	;volatile
 12808                           
 12809                           ;src/boards/SBC8080-57Q.c: 512:   G3POL = 0;
 12810   015B6A  95D7               	bcf	215,2,b	;volatile
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;src/boards/SBC8080-57Q.c: 513:   emuz80_57q_enter_bus_master();
 12814   015B6C  ECCE  F0CF         	call	_emuz80_57q_enter_bus_master	;wreg free
 12815                           
 12816                           ; BSR set to: 0
 12817                           ;src/boards/SBC8080-57Q.c: 514:   disk_io_handle();
 12818   015B70  ECA5  F0A6         	call	_disk_io_handle	;wreg free
 12819   015B74                     l12861:
 12820                           
 12821                           ;src/boards/SBC8080-57Q.c: 515:   emuz80_57q_exit_bus_master();
 12822   015B74  ECF0  F0CF         	call	_emuz80_57q_exit_bus_master	;wreg free
 12823                           
 12824                           ;src/boards/SBC8080-57Q.c: 516:   LATE0 = 0;
 12825   015B78  90C2               	bcf	1218,0,c	;volatile
 12826                           
 12827                           ;src/boards/SBC8080-57Q.c: 517:   goto IO_wait_loop;
 12828   015B7A  D7D3               	goto	l12851
 12829   015B7C                     l1527:
 12830                           
 12831                           ; BSR set to: 7
 12832                           ;src/boards/SBC8080-57Q.c: 520:   LATE0 = 1;
 12833   015B7C  80C2               	bsf	1218,0,c	;volatile
 12834                           
 12835                           ;src/boards/SBC8080-57Q.c: 521:   G3POL = 1;
 12836   015B7E  0100               	movlb	0	; () banked
 12837   015B80  85D7               	bsf	215,2,b	;volatile
 12838                           
 12839                           ;src/boards/SBC8080-57Q.c: 522:   G3POL = 0;
 12840   015B82  95D7               	bcf	215,2,b	;volatile
 12841                           
 12842                           ; BSR set to: 0
 12843                           ;src/boards/SBC8080-57Q.c: 523:   emuz80_57q_enter_bus_master();
 12844   015B84  ECCE  F0CF         	call	_emuz80_57q_enter_bus_master	;wreg free
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;src/boards/SBC8080-57Q.c: 524:   emuz80_57q_write_to_sram(0xe400, (uint8_t*)bdosccp, 0x
      +                          1600);
 12848   015B88  0EE4               	movlw	228
 12849   015B8A  6E02               	movwf	(emuz80_57q_write_to_sram@addr+1)^(0+1280),c
 12850   015B8C  0E00               	movlw	0
 12851   015B8E  6E01               	movwf	emuz80_57q_write_to_sram@addr^(0+1280),c
 12852   015B90  0E7D               	movlw	low _bdosccp
 12853   015B92  6E03               	movwf	emuz80_57q_write_to_sram@buf^(0+1280),c
 12854   015B94  0ED9               	movlw	high _bdosccp
 12855   015B96  6E04               	movwf	(emuz80_57q_write_to_sram@buf+1)^(0+1280),c
 12856   015B98  0E16               	movlw	22
 12857   015B9A  6E06               	movwf	(emuz80_57q_write_to_sram@len+1)^(0+1280),c
 12858   015B9C  0E00               	movlw	0
 12859   015B9E  6E05               	movwf	emuz80_57q_write_to_sram@len^(0+1280),c
 12860   015BA0  EC86  F0CA         	call	_emuz80_57q_write_to_sram	;wreg free
 12861   015BA4  D7E7               	goto	l12861
 12862   015BA6                     l1528:
 12863                           
 12864                           ; BSR set to: 7
 12865                           ;src/boards/SBC8080-57Q.c: 530:   LATE0 = 1;
 12866   015BA6  80C2               	bsf	1218,0,c	;volatile
 12867                           
 12868                           ;src/boards/SBC8080-57Q.c: 531:   G3POL = 1;
 12869   015BA8  0100               	movlb	0	; () banked
 12870   015BAA  85D7               	bsf	215,2,b	;volatile
 12871                           
 12872                           ;src/boards/SBC8080-57Q.c: 532:   G3POL = 0;
 12873   015BAC  95D7               	bcf	215,2,b	;volatile
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;src/boards/SBC8080-57Q.c: 533:   emuz80_57q_enter_bus_master();
 12877   015BAE  ECCE  F0CF         	call	_emuz80_57q_enter_bus_master	;wreg free
 12878                           
 12879                           ; BSR set to: 0
 12880                           ;src/boards/SBC8080-57Q.c: 534:   emuz80_57q_write_to_sram(0xfa00, (uint8_t*)bios, sizeo
      +                          f(bios));
 12881   015BB2  0EFA               	movlw	250
 12882   015BB4  6E02               	movwf	(emuz80_57q_write_to_sram@addr+1)^(0+1280),c
 12883   015BB6  0E00               	movlw	0
 12884   015BB8  6E01               	movwf	emuz80_57q_write_to_sram@addr^(0+1280),c
 12885   015BBA  0EB0               	movlw	low _bios
 12886   015BBC  6E03               	movwf	emuz80_57q_write_to_sram@buf^(0+1280),c
 12887   015BBE  0EEF               	movlw	high _bios
 12888   015BC0  6E04               	movwf	(emuz80_57q_write_to_sram@buf+1)^(0+1280),c
 12889   015BC2  0E05               	movlw	5
 12890   015BC4  6E06               	movwf	(emuz80_57q_write_to_sram@len+1)^(0+1280),c
 12891   015BC6  0E34               	movlw	52
 12892   015BC8  6E05               	movwf	emuz80_57q_write_to_sram@len^(0+1280),c
 12893   015BCA  EC86  F0CA         	call	_emuz80_57q_write_to_sram	;wreg free
 12894   015BCE  D7D2               	goto	l12861
 12895   015BD0                     l12883:
 12896   015BD0  0107               	movlb	7	; () banked
 12897   015BD2  512B               	movf	_io_addr& (0+255),w,b
 12898                           
 12899                           ; Switch size 1, requested type "simple"
 12900                           ; Number of cases is 7, Range of values is 0 to 83
 12901                           ; switch strategies available:
 12902                           ; Name         Instructions Cycles
 12903                           ; simple_byte           22    12 (average)
 12904                           ;	Chosen strategy is simple_byte
 12905   015BD4  0A00               	xorlw	0	; case 0
 12906   015BD6  B4D8               	btfsc	status,2,c
 12907   015BD8  D7BF               	goto	l1523
 12908   015BDA  0A01               	xorlw	1	; case 1
 12909   015BDC  B4D8               	btfsc	status,2,c
 12910   015BDE  D7B3               	goto	l12855
 12911   015BE0  0A47               	xorlw	71	; case 70
 12912   015BE2  B4D8               	btfsc	status,2,c
 12913   015BE4  D7CB               	goto	l1527
 12914   015BE6  0A01               	xorlw	1	; case 71
 12915   015BE8  B4D8               	btfsc	status,2,c
 12916   015BEA  D7DD               	goto	l1528
 12917   015BEC  0A09               	xorlw	9	; case 78
 12918   015BEE  B4D8               	btfsc	status,2,c
 12919   015BF0  D7B6               	goto	l1524
 12920   015BF2  0A1C               	xorlw	28	; case 82
 12921   015BF4  B4D8               	btfsc	status,2,c
 12922   015BF6  D7B6               	goto	l1526
 12923   015BF8  0A01               	xorlw	1	; case 83
 12924   015BFA  B4D8               	btfsc	status,2,c
 12925   015BFC  D7B3               	goto	l1526
 12926                           
 12927                           ; BSR set to: 7
 12928                           ;src/boards/SBC8080-57Q.c: 540:  printf("WARNING: unknown I/O read (%02XH)\n\r", io_addr
      +                          );
 12929   015BFE  0EAA               	movlw	low STR_64
 12930   015C00  0105               	movlb	5	; () banked
 12931   015C02  6F9A               	movwf	printf@fmt& (0+255),b
 12932   015C04  0EFB               	movlw	high STR_64
 12933   015C06  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12934   015C08  C72B  F59C         	movff	_io_addr,?_printf+2
 12935   015C0C  6B9D               	clrf	(?_printf+3)& (0+255),b
 12936   015C0E  EC53  F0CF         	call	_printf	;wreg free
 12937                           
 12938                           ; BSR set to: 5
 12939                           ;src/boards/SBC8080-57Q.c: 541:  G3POL = 1;
 12940   015C12  0100               	movlb	0	; () banked
 12941   015C14  85D7               	bsf	215,2,b	;volatile
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;src/boards/SBC8080-57Q.c: 542:  G3POL = 0;
 12945   015C16  95D7               	bcf	215,2,b	;volatile
 12946                           
 12947                           ;src/boards/SBC8080-57Q.c: 543:  goto IO_wait_loop;
 12948   015C18  D784               	goto	l12851
 12949   015C1A                     __end_of_main:
 12950                           	callstack 0
 12951                           
 12952 ;; *************** function _wait_for_programmer *****************
 12953 ;; Defined at:
 12954 ;;		line 217 in file "src/io.c"
 12955 ;; Parameters:    Size  Location     Type
 12956 ;;		None
 12957 ;; Auto vars:     Size  Location     Type
 12958 ;;		None
 12959 ;; Return value:  Size  Location     Type
 12960 ;;                  1    wreg      void 
 12961 ;; Registers used:
 12962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12963 ;; Tracked objects:
 12964 ;;		On entry : 3F/4
 12965 ;;		On exit  : 3F/5
 12966 ;;		Unchanged: 0/0
 12967 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12970 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12971 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12972 ;;Total ram usage:        2 bytes
 12973 ;; Hardware stack levels used: 1
 12974 ;; Hardware stack levels required when called: 8
 12975 ;; This function calls:
 12976 ;;		_printf
 12977 ;; This function is called by:
 12978 ;;		_main
 12979 ;; This function uses a non-reentrant model
 12980 ;;
 12981                           
 12982                           	psect	text1
 12983   019BA6                     __ptext1:
 12984                           	callstack 0
 12985   019BA6                     _wait_for_programmer:
 12986                           	callstack 118
 12987                           
 12988                           ; BSR set to: 4
 12989                           ;src/io.c: 223:  printf("\n\r");
 12990                           
 12991                           ; BSR set to: 0
 12992                           ;incstack = 0
 12993   019BA6  0ECB               	movlw	low (STR_64+33)
 12994   019BA8  0105               	movlb	5	; () banked
 12995   019BAA  6F9A               	movwf	printf@fmt& (0+255),b
 12996   019BAC  0EFB               	movlw	high (STR_64+33)
 12997   019BAE  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12998   019BB0  EC53  F0CF         	call	_printf	;wreg free
 12999                           
 13000                           ;src/io.c: 224:  printf("wait for programmer ...\r");
 13001   019BB4  0EF7               	movlw	low STR_83
 13002   019BB6  6F9A               	movwf	printf@fmt& (0+255),b
 13003   019BB8  0EFD               	movlw	high STR_83
 13004   019BBA  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13005   019BBC  EC53  F0CF         	call	_printf	;wreg free
 13006                           
 13007                           ; BSR set to: 5
 13008                           ;src/io.c: 225:  _delay((unsigned long)((200)*(64000000UL/4000.0)));
 13009   019BC0  0E11               	movlw	17
 13010   019BC2  0105               	movlb	5	; () banked
 13011   019BC4  6FA7               	movwf	(??_wait_for_programmer+1)& (0+255),b
 13012   019BC6  0E3C               	movlw	60
 13013   019BC8  6FA6               	movwf	??_wait_for_programmer& (0+255),b
 13014   019BCA  0ECB               	movlw	203
 13015   019BCC                     u16497:
 13016   019BCC  2EE8               	decfsz	wreg,f,c
 13017   019BCE  D7FE               	bra	u16497
 13018   019BD0  2FA6               	decfsz	??_wait_for_programmer& (0+255),f,b
 13019   019BD2  D7FC               	bra	u16497
 13020   019BD4  2FA7               	decfsz	(??_wait_for_programmer+1)& (0+255),f,b
 13021   019BD6  D7FA               	bra	u16497
 13022                           
 13023                           ;src/io.c: 226:  printf("                       \r");
 13024   019BD8  0EDE               	movlw	low STR_84
 13025   019BDA  0105               	movlb	5	; () banked
 13026   019BDC  6F9A               	movwf	printf@fmt& (0+255),b
 13027   019BDE  0EFD               	movlw	high STR_84
 13028   019BE0  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13029   019BE2  EC53  F0CF         	call	_printf	;wreg free
 13030                           
 13031                           ; BSR set to: 5
 13032   019BE6  0012               	return		;funcret
 13033   019BE8                     __end_of_wait_for_programmer:
 13034                           	callstack 0
 13035                           
 13036 ;; *************** function _menu_select *****************
 13037 ;; Defined at:
 13038 ;;		line 112 in file "src/io.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;		None
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;  buf             2    8[BANK7 ] const PTR unsigned char 
 13043 ;;		 -> tmp_buf(512), 
 13044 ;;  drive_letter    1   12[BANK7 ] unsigned char 
 13045 ;;  c               1   17[BANK7 ] unsigned char 
 13046 ;;  i               2   15[BANK7 ] int 
 13047 ;;  selection       2   13[BANK7 ] int 
 13048 ;;  drive           2   10[BANK7 ] unsigned int 
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  2    0[BANK7 ] int 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13053 ;; Tracked objects:
 13054 ;;		On entry : 3F/6
 13055 ;;		On exit  : 3F/7
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13058 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13061 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13062 ;;Total ram usage:       18 bytes
 13063 ;; Hardware stack levels used: 1
 13064 ;; Hardware stack levels required when called: 19
 13065 ;; This function calls:
 13066 ;;		___wmul
 13067 ;;		_f_closedir
 13068 ;;		_f_open
 13069 ;;		_f_opendir
 13070 ;;		_f_readdir
 13071 ;;		_getch
 13072 ;;		_printf
 13073 ;;		_sprintf
 13074 ;;		_strcmp
 13075 ;;		_strcpy
 13076 ;;		_strncmp
 13077 ;; This function is called by:
 13078 ;;		_main
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           	psect	text2
 13083   0139B0                     __ptext2:
 13084                           	callstack 0
 13085   0139B0                     _menu_select:
 13086                           	callstack 107
 13087                           
 13088                           ; BSR set to: 6
 13089                           ;src/io.c: 114:     int i;;src/io.c: 115:     unsigned int drive;;src/io.c: 119:     if 
      +                          (f_opendir(&fsdir, "/") != FR_OK) {
 13090                           
 13091                           ; BSR set to: 5
 13092                           ;incstack = 0
 13093   0139B0  0E7C               	movlw	low _fsdir
 13094   0139B2  6FAF               	movwf	f_opendir@dp& (0+255),b
 13095   0139B4  0E07               	movlw	high _fsdir
 13096   0139B6  6FB0               	movwf	(f_opendir@dp+1)& (0+255),b
 13097   0139B8  0EF5               	movlw	low (STR_62+3)
 13098   0139BA  6FB1               	movwf	f_opendir@path& (0+255),b
 13099   0139BC  0EFF               	movlw	high (STR_62+3)
 13100   0139BE  6FB2               	movwf	(f_opendir@path+1)& (0+255),b
 13101   0139C0  ECA5  F0BD         	call	_f_opendir	;wreg free
 13102   0139C4  0900               	iorlw	0
 13103   0139C6  B4D8               	btfsc	status,2,c
 13104   0139C8  D00D               	goto	l12593
 13105                           
 13106                           ; BSR set to: 6
 13107                           ;src/io.c: 120:         printf("Failed to open SD Card..\n\r");
 13108   0139CA  0E73               	movlw	low STR_66
 13109   0139CC  0105               	movlb	5	; () banked
 13110   0139CE  6F9A               	movwf	printf@fmt& (0+255),b
 13111   0139D0  0EFD               	movlw	high STR_66
 13112   0139D2  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13113   0139D4  EC53  F0CF         	call	_printf	;wreg free
 13114                           
 13115                           ; BSR set to: 5
 13116                           ;src/io.c: 121:         return -3;
 13117   0139D8  0EFF               	movlw	255
 13118   0139DA  0107               	movlb	7	; () banked
 13119   0139DC  6FBF               	movwf	(?_menu_select+1)& (0+255),b
 13120   0139DE  0EFD               	movlw	253
 13121   0139E0  6FBE               	movwf	?_menu_select& (0+255),b
 13122   0139E2  0012               	return	
 13123   0139E4                     l12593:
 13124                           
 13125                           ; BSR set to: 6
 13126                           ;src/io.c: 124:     i = 0;
 13127   0139E4  0E00               	movlw	0
 13128   0139E6  0107               	movlb	7	; () banked
 13129   0139E8  6FCE               	movwf	(menu_select@i+1)& (0+255),b
 13130   0139EA  0E00               	movlw	0
 13131   0139EC  6FCD               	movwf	menu_select@i& (0+255),b
 13132                           
 13133                           ; BSR set to: 7
 13134                           ;src/io.c: 125:     int selection = -1;
 13135   0139EE  69CB               	setf	menu_select@selection& (0+255),b
 13136   0139F0  69CC               	setf	(menu_select@selection+1)& (0+255),b
 13137                           
 13138                           ; BSR set to: 7
 13139                           ;src/io.c: 126:     f_readdir((&fsdir), 0);
 13140   0139F2  0E7C               	movlw	low _fsdir
 13141   0139F4  0106               	movlb	6	; () banked
 13142   0139F6  6F6F               	movwf	f_readdir@dp& (0+255),b
 13143   0139F8  0E07               	movlw	high _fsdir
 13144   0139FA  6F70               	movwf	(f_readdir@dp+1)& (0+255),b
 13145   0139FC  0E00               	movlw	0
 13146   0139FE  6F71               	movwf	f_readdir@fno& (0+255),b
 13147   013A00  0E00               	movlw	0
 13148   013A02  6F72               	movwf	(f_readdir@fno+1)& (0+255),b
 13149   013A04  ECED  F0C5         	call	_f_readdir	;wreg free
 13150                           
 13151                           ;src/io.c: 127:     while (f_readdir(&fsdir, &fileinfo) == FR_OK && fileinfo.fname[0] !=
      +                           0) {
 13152   013A08  D048               	goto	l12611
 13153   013A0A                     l12599:
 13154                           
 13155                           ; BSR set to: 7
 13156                           ;src/io.c: 128:         if (strncmp(fileinfo.fname, "CPMDISKS", 8) == 0 ||
 13157   013A0A  0EAD               	movlw	low (_fileinfo+9)
 13158   013A0C  6E01               	movwf	strncmp@l^(0+1280),c
 13159   013A0E  0E07               	movlw	high (_fileinfo+9)
 13160   013A10  6E02               	movwf	(strncmp@l+1)^(0+1280),c
 13161   013A12  0EAF               	movlw	low STR_67
 13162   013A14  6E03               	movwf	strncmp@r^(0+1280),c
 13163   013A16  0EFF               	movlw	high STR_67
 13164   013A18  6E04               	movwf	(strncmp@r+1)^(0+1280),c
 13165   013A1A  0E00               	movlw	0
 13166   013A1C  6E06               	movwf	(strncmp@n+1)^(0+1280),c
 13167   013A1E  0E08               	movlw	8
 13168   013A20  6E05               	movwf	strncmp@n^(0+1280),c
 13169   013A22  ECE6  F0C7         	call	_strncmp	;wreg free
 13170   013A26  5001               	movf	?_strncmp^(0+1280),w,c
 13171   013A28  1002               	iorwf	(?_strncmp+1)^(0+1280),w,c
 13172   013A2A  B4D8               	btfsc	status,2,c
 13173   013A2C  D012               	goto	u16040
 13174   013A2E  0EAD               	movlw	low (_fileinfo+9)
 13175   013A30  6E01               	movwf	strncmp@l^(0+1280),c
 13176   013A32  0E07               	movlw	high (_fileinfo+9)
 13177   013A34  6E02               	movwf	(strncmp@l+1)^(0+1280),c
 13178   013A36  0ECA               	movlw	low STR_68
 13179   013A38  6E03               	movwf	strncmp@r^(0+1280),c
 13180   013A3A  0EFF               	movlw	high STR_68
 13181   013A3C  6E04               	movwf	(strncmp@r+1)^(0+1280),c
 13182   013A3E  0E00               	movlw	0
 13183   013A40  6E06               	movwf	(strncmp@n+1)^(0+1280),c
 13184   013A42  0E07               	movlw	7
 13185   013A44  6E05               	movwf	strncmp@n^(0+1280),c
 13186   013A46  ECE6  F0C7         	call	_strncmp	;wreg free
 13187   013A4A  5001               	movf	?_strncmp^(0+1280),w,c
 13188   013A4C  1002               	iorwf	(?_strncmp+1)^(0+1280),w,c
 13189   013A4E  A4D8               	btfss	status,2,c
 13190   013A50  D024               	goto	l12611
 13191   013A52                     u16040:
 13192                           
 13193                           ;src/io.c: 129:             strncmp(fileinfo.fname, "CPMDIS~", 7) == 0) {;src/io.c: 130:
      +                                       printf("%d: %s\n\r", i, fileinfo.fname);
 13194   013A52  0E9D               	movlw	low STR_69
 13195   013A54  0105               	movlb	5	; () banked
 13196   013A56  6F9A               	movwf	printf@fmt& (0+255),b
 13197   013A58  0EFF               	movlw	high STR_69
 13198   013A5A  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13199   013A5C  C7CD  F59C         	movff	menu_select@i,?_printf+2
 13200   013A60  C7CE  F59D         	movff	menu_select@i+1,?_printf+3
 13201   013A64  0EAD               	movlw	low (_fileinfo+9)
 13202   013A66  6F9E               	movwf	(?_printf+4)& (0+255),b
 13203   013A68  0E07               	movlw	high (_fileinfo+9)
 13204   013A6A  6F9F               	movwf	(?_printf+5)& (0+255),b
 13205   013A6C  EC53  F0CF         	call	_printf	;wreg free
 13206                           
 13207                           ; BSR set to: 5
 13208                           ;src/io.c: 131:             if (strcmp(fileinfo.fname, "CPMDISKS") == 0)
 13209   013A70  0EAD               	movlw	low (_fileinfo+9)
 13210   013A72  6E01               	movwf	strcmp@l^(0+1280),c
 13211   013A74  0E07               	movlw	high (_fileinfo+9)
 13212   013A76  6E02               	movwf	(strcmp@l+1)^(0+1280),c
 13213   013A78  0EAF               	movlw	low STR_67
 13214   013A7A  6E03               	movwf	strcmp@r^(0+1280),c
 13215   013A7C  0EFF               	movlw	high STR_67
 13216   013A7E  6E04               	movwf	(strcmp@r+1)^(0+1280),c
 13217   013A80  ECD1  F0CB         	call	_strcmp	;wreg free
 13218   013A84  5001               	movf	?_strcmp^(0+1280),w,c
 13219   013A86  1002               	iorwf	(?_strcmp+1)^(0+1280),w,c
 13220   013A88  A4D8               	btfss	status,2,c
 13221   013A8A  D004               	goto	l12609
 13222                           
 13223                           ; BSR set to: 5
 13224                           ;src/io.c: 132:                 selection = i;
 13225   013A8C  C7CD  F7CB         	movff	menu_select@i,menu_select@selection
 13226   013A90  C7CE  F7CC         	movff	menu_select@i+1,menu_select@selection+1
 13227   013A94                     l12609:
 13228                           
 13229                           ; BSR set to: 5
 13230                           ;src/io.c: 133:             i++;
 13231   013A94  0107               	movlb	7	; () banked
 13232   013A96  4BCD               	infsnz	menu_select@i& (0+255),f,b
 13233   013A98  2BCE               	incf	(menu_select@i+1)& (0+255),f,b
 13234   013A9A                     l12611:
 13235                           
 13236                           ;src/io.c: 127:     while (f_readdir(&fsdir, &fileinfo) == FR_OK && fileinfo.fname[0] !=
      +                           0) {
 13237   013A9A  0E7C               	movlw	low _fsdir
 13238   013A9C  0106               	movlb	6	; () banked
 13239   013A9E  6F6F               	movwf	f_readdir@dp& (0+255),b
 13240   013AA0  0E07               	movlw	high _fsdir
 13241   013AA2  6F70               	movwf	(f_readdir@dp+1)& (0+255),b
 13242   013AA4  0EA4               	movlw	low _fileinfo
 13243   013AA6  6F71               	movwf	f_readdir@fno& (0+255),b
 13244   013AA8  0E07               	movlw	high _fileinfo
 13245   013AAA  6F72               	movwf	(f_readdir@fno+1)& (0+255),b
 13246   013AAC  ECED  F0C5         	call	_f_readdir	;wreg free
 13247   013AB0  0900               	iorlw	0
 13248   013AB2  A4D8               	btfss	status,2,c
 13249   013AB4  D004               	goto	u16070
 13250                           
 13251                           ; BSR set to: 6
 13252   013AB6  0107               	movlb	7	; () banked
 13253   013AB8  51AD               	movf	(_fileinfo+9)& (0+255),w,b
 13254   013ABA  A4D8               	btfss	status,2,c
 13255   013ABC  D7A6               	goto	l12599
 13256   013ABE                     u16070:
 13257                           
 13258                           ;src/io.c: 137:     if (1 < i) {
 13259   013ABE  0107               	movlb	7	; () banked
 13260   013AC0  BFCE               	btfsc	(menu_select@i+1)& (0+255),7,b
 13261   013AC2  D09D               	goto	l12659
 13262   013AC4  51CE               	movf	(menu_select@i+1)& (0+255),w,b
 13263   013AC6  E104               	bnz	u16080
 13264   013AC8  0E02               	movlw	2
 13265   013ACA  5DCD               	subwf	menu_select@i& (0+255),w,b
 13266   013ACC  A0D8               	btfss	status,0,c
 13267   013ACE  D097               	goto	l12659
 13268   013AD0                     u16080:
 13269                           
 13270                           ; BSR set to: 7
 13271                           ;src/io.c: 138:         printf("Select: ");
 13272   013AD0  0EA6               	movlw	low STR_71
 13273   013AD2  0105               	movlb	5	; () banked
 13274   013AD4  6F9A               	movwf	printf@fmt& (0+255),b
 13275   013AD6  0EFF               	movlw	high STR_71
 13276   013AD8  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13277   013ADA  EC53  F0CF         	call	_printf	;wreg free
 13278   013ADE                     l12619:
 13279                           
 13280                           ;src/io.c: 140:    uint8_t c = (uint8_t)getch();
 13281   013ADE  ECEA  F0CF         	call	_getch	;wreg free
 13282   013AE2  5001               	movf	?_getch^(0+1280),w,c
 13283   013AE4  0107               	movlb	7	; () banked
 13284   013AE6  6FCF               	movwf	menu_select@c& (0+255),b
 13285                           
 13286                           ; BSR set to: 7
 13287                           ;src/io.c: 141:    if ('0' <= c && c <= '9' && c - '0' < i) {
 13288   013AE8  0E2F               	movlw	47
 13289   013AEA  65CF               	cpfsgt	menu_select@c& (0+255),b
 13290   013AEC  D016               	goto	l12629
 13291                           
 13292                           ; BSR set to: 7
 13293   013AEE  0E3A               	movlw	58
 13294   013AF0  61CF               	cpfslt	menu_select@c& (0+255),b
 13295   013AF2  D013               	goto	l12629
 13296                           
 13297                           ; BSR set to: 7
 13298   013AF4  0ED0               	movlw	208
 13299   013AF6  25CF               	addwf	menu_select@c& (0+255),w,b
 13300   013AF8  6FC0               	movwf	??_menu_select& (0+255),b
 13301   013AFA  6BC1               	clrf	(??_menu_select+1)& (0+255),b
 13302   013AFC  0EFF               	movlw	255
 13303   013AFE  23C1               	addwfc	(??_menu_select+1)& (0+255),f,b
 13304   013B00  51CD               	movf	menu_select@i& (0+255),w,b
 13305   013B02  5DC0               	subwf	??_menu_select& (0+255),w,b
 13306   013B04  51CE               	movf	(menu_select@i+1)& (0+255),w,b
 13307   013B06  59C1               	subwfb	(??_menu_select+1)& (0+255),w,b
 13308   013B08  B0D8               	btfsc	status,0,c
 13309   013B0A  D007               	goto	l12629
 13310                           
 13311                           ; BSR set to: 7
 13312                           ;src/io.c: 142:     selection = c - '0';
 13313   013B0C  0ED0               	movlw	208
 13314   013B0E  25CF               	addwf	menu_select@c& (0+255),w,b
 13315   013B10  6FCB               	movwf	menu_select@selection& (0+255),b
 13316   013B12  6BCC               	clrf	(menu_select@selection+1)& (0+255),b
 13317   013B14  0EFF               	movlw	255
 13318   013B16  23CC               	addwfc	(menu_select@selection+1)& (0+255),f,b
 13319                           
 13320                           ;src/io.c: 143:     break;
 13321   013B18  D00A               	goto	u16140
 13322   013B1A                     l12629:
 13323                           
 13324                           ; BSR set to: 7
 13325                           ;src/io.c: 145:    if ((c == 0x0d || c == 0x0a) && 0 <= selection)
 13326   013B1A  0E0D               	movlw	13
 13327   013B1C  19CF               	xorwf	menu_select@c& (0+255),w,b
 13328   013B1E  B4D8               	btfsc	status,2,c
 13329   013B20  D004               	goto	u16130
 13330                           
 13331                           ; BSR set to: 7
 13332   013B22  0E0A               	movlw	10
 13333   013B24  19CF               	xorwf	menu_select@c& (0+255),w,b
 13334   013B26  A4D8               	btfss	status,2,c
 13335   013B28  D7DA               	goto	l12619
 13336   013B2A                     u16130:
 13337                           
 13338                           ; BSR set to: 7
 13339   013B2A  BFCC               	btfsc	(menu_select@selection+1)& (0+255),7,b
 13340   013B2C  D7D8               	goto	l12619
 13341   013B2E                     u16140:
 13342                           
 13343                           ; BSR set to: 7
 13344                           ;src/io.c: 148:   printf("%d\n\r", selection);
 13345   013B2E  0EC8               	movlw	low (STR_90+16)
 13346   013B30  0105               	movlb	5	; () banked
 13347   013B32  6F9A               	movwf	printf@fmt& (0+255),b
 13348   013B34  0EFE               	movlw	high (STR_90+16)
 13349   013B36  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13350   013B38  C7CB  F59C         	movff	menu_select@selection,?_printf+2
 13351   013B3C  C7CC  F59D         	movff	menu_select@selection+1,?_printf+3
 13352   013B40  EC53  F0CF         	call	_printf	;wreg free
 13353                           
 13354                           ; BSR set to: 5
 13355                           ;src/io.c: 149:   f_readdir((&fsdir), 0);
 13356   013B44  0E7C               	movlw	low _fsdir
 13357   013B46  0106               	movlb	6	; () banked
 13358   013B48  6F6F               	movwf	f_readdir@dp& (0+255),b
 13359   013B4A  0E07               	movlw	high _fsdir
 13360   013B4C  6F70               	movwf	(f_readdir@dp+1)& (0+255),b
 13361   013B4E  0E00               	movlw	0
 13362   013B50  6F71               	movwf	f_readdir@fno& (0+255),b
 13363   013B52  0E00               	movlw	0
 13364   013B54  6F72               	movwf	(f_readdir@fno+1)& (0+255),b
 13365   013B56  ECED  F0C5         	call	_f_readdir	;wreg free
 13366                           
 13367                           ; BSR set to: 6
 13368                           ;src/io.c: 150:   i = 0;
 13369   013B5A  0E00               	movlw	0
 13370   013B5C  0107               	movlb	7	; () banked
 13371   013B5E  6FCE               	movwf	(menu_select@i+1)& (0+255),b
 13372   013B60  0E00               	movlw	0
 13373   013B62  6FCD               	movwf	menu_select@i& (0+255),b
 13374                           
 13375                           ;src/io.c: 151:   while (f_readdir(&fsdir, &fileinfo) == FR_OK && fileinfo.fname[0] != 0
      +                          ) {
 13376   013B64  D02E               	goto	l12653
 13377   013B66                     l12643:
 13378                           
 13379                           ; BSR set to: 7
 13380                           ;src/io.c: 152:    if (strncmp(fileinfo.fname, "CPMDISKS", 8) == 0 ||
 13381   013B66  0EAD               	movlw	low (_fileinfo+9)
 13382   013B68  6E01               	movwf	strncmp@l^(0+1280),c
 13383   013B6A  0E07               	movlw	high (_fileinfo+9)
 13384   013B6C  6E02               	movwf	(strncmp@l+1)^(0+1280),c
 13385   013B6E  0EAF               	movlw	low STR_67
 13386   013B70  6E03               	movwf	strncmp@r^(0+1280),c
 13387   013B72  0EFF               	movlw	high STR_67
 13388   013B74  6E04               	movwf	(strncmp@r+1)^(0+1280),c
 13389   013B76  0E00               	movlw	0
 13390   013B78  6E06               	movwf	(strncmp@n+1)^(0+1280),c
 13391   013B7A  0E08               	movlw	8
 13392   013B7C  6E05               	movwf	strncmp@n^(0+1280),c
 13393   013B7E  ECE6  F0C7         	call	_strncmp	;wreg free
 13394   013B82  5001               	movf	?_strncmp^(0+1280),w,c
 13395   013B84  1002               	iorwf	(?_strncmp+1)^(0+1280),w,c
 13396   013B86  B4D8               	btfsc	status,2,c
 13397   013B88  D012               	goto	u16160
 13398   013B8A  0EAD               	movlw	low (_fileinfo+9)
 13399   013B8C  6E01               	movwf	strncmp@l^(0+1280),c
 13400   013B8E  0E07               	movlw	high (_fileinfo+9)
 13401   013B90  6E02               	movwf	(strncmp@l+1)^(0+1280),c
 13402   013B92  0ECA               	movlw	low STR_68
 13403   013B94  6E03               	movwf	strncmp@r^(0+1280),c
 13404   013B96  0EFF               	movlw	high STR_68
 13405   013B98  6E04               	movwf	(strncmp@r+1)^(0+1280),c
 13406   013B9A  0E00               	movlw	0
 13407   013B9C  6E06               	movwf	(strncmp@n+1)^(0+1280),c
 13408   013B9E  0E07               	movlw	7
 13409   013BA0  6E05               	movwf	strncmp@n^(0+1280),c
 13410   013BA2  ECE6  F0C7         	call	_strncmp	;wreg free
 13411   013BA6  5001               	movf	?_strncmp^(0+1280),w,c
 13412   013BA8  1002               	iorwf	(?_strncmp+1)^(0+1280),w,c
 13413   013BAA  A4D8               	btfss	status,2,c
 13414   013BAC  D00A               	goto	l12653
 13415   013BAE                     u16160:
 13416                           
 13417                           ;src/io.c: 153:     strncmp(fileinfo.fname, "CPMDIS~", 7) == 0) {;src/io.c: 154:     if 
      +                          (selection == i)
 13418   013BAE  0107               	movlb	7	; () banked
 13419   013BB0  51CD               	movf	menu_select@i& (0+255),w,b
 13420   013BB2  19CB               	xorwf	menu_select@selection& (0+255),w,b
 13421   013BB4  E104               	bnz	l12651
 13422   013BB6  51CE               	movf	(menu_select@i+1)& (0+255),w,b
 13423   013BB8  19CC               	xorwf	(menu_select@selection+1)& (0+255),w,b
 13424   013BBA  B4D8               	btfsc	status,2,c
 13425   013BBC  D014               	goto	u16190
 13426   013BBE                     l12651:
 13427                           
 13428                           ; BSR set to: 7
 13429                           ;src/io.c: 156:     i++;
 13430   013BBE  4BCD               	infsnz	menu_select@i& (0+255),f,b
 13431   013BC0  2BCE               	incf	(menu_select@i+1)& (0+255),f,b
 13432   013BC2                     l12653:
 13433                           
 13434                           ;src/io.c: 151:   while (f_readdir(&fsdir, &fileinfo) == FR_OK && fileinfo.fname[0] != 0
      +                          ) {
 13435   013BC2  0E7C               	movlw	low _fsdir
 13436   013BC4  0106               	movlb	6	; () banked
 13437   013BC6  6F6F               	movwf	f_readdir@dp& (0+255),b
 13438   013BC8  0E07               	movlw	high _fsdir
 13439   013BCA  6F70               	movwf	(f_readdir@dp+1)& (0+255),b
 13440   013BCC  0EA4               	movlw	low _fileinfo
 13441   013BCE  6F71               	movwf	f_readdir@fno& (0+255),b
 13442   013BD0  0E07               	movlw	high _fileinfo
 13443   013BD2  6F72               	movwf	(f_readdir@fno+1)& (0+255),b
 13444   013BD4  ECED  F0C5         	call	_f_readdir	;wreg free
 13445   013BD8  0900               	iorlw	0
 13446   013BDA  A4D8               	btfss	status,2,c
 13447   013BDC  D004               	goto	u16190
 13448                           
 13449                           ; BSR set to: 6
 13450   013BDE  0107               	movlb	7	; () banked
 13451   013BE0  51AD               	movf	(_fileinfo+9)& (0+255),w,b
 13452   013BE2  A4D8               	btfss	status,2,c
 13453   013BE4  D7C0               	goto	l12643
 13454   013BE6                     u16190:
 13455                           
 13456                           ;src/io.c: 159:   printf("%s is selected.\n\r", fileinfo.fname);
 13457   013BE6  0E08               	movlw	low STR_75
 13458   013BE8  0105               	movlb	5	; () banked
 13459   013BEA  6F9A               	movwf	printf@fmt& (0+255),b
 13460   013BEC  0EFF               	movlw	high STR_75
 13461   013BEE  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13462   013BF0  0EAD               	movlw	low (_fileinfo+9)
 13463   013BF2  6F9C               	movwf	(?_printf+2)& (0+255),b
 13464   013BF4  0E07               	movlw	high (_fileinfo+9)
 13465   013BF6  6F9D               	movwf	(?_printf+3)& (0+255),b
 13466   013BF8  EC53  F0CF         	call	_printf	;wreg free
 13467                           
 13468                           ;src/io.c: 160:  } else {
 13469   013BFC  D00A               	goto	l12661
 13470   013BFE                     l12659:
 13471                           
 13472                           ; BSR set to: 7
 13473                           ;src/io.c: 161:   strcpy(fileinfo.fname, "CPMDISKS");
 13474   013BFE  0EAD               	movlw	low (_fileinfo+9)
 13475   013C00  6E01               	movwf	strcpy@dest^(0+1280),c
 13476   013C02  0E07               	movlw	high (_fileinfo+9)
 13477   013C04  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 13478   013C06  0EAF               	movlw	low STR_67
 13479   013C08  6E03               	movwf	strcpy@src^(0+1280),c
 13480   013C0A  0EFF               	movlw	high STR_67
 13481   013C0C  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 13482   013C0E  EC89  F0CE         	call	_strcpy	;wreg free
 13483   013C12                     l12661:
 13484                           
 13485                           ;src/io.c: 163:  f_closedir(&fsdir);
 13486   013C12  0E7C               	movlw	low _fsdir
 13487   013C14  0105               	movlb	5	; () banked
 13488   013C16  6FB1               	movwf	f_closedir@dp& (0+255),b
 13489   013C18  0E07               	movlw	high _fsdir
 13490   013C1A  6FB2               	movwf	(f_closedir@dp+1)& (0+255),b
 13491   013C1C  EC01  F0CF         	call	_f_closedir	;wreg free
 13492                           
 13493                           ; BSR set to: 5
 13494                           ;src/io.c: 167:  for (drive = 0; drive < num_drives && num_files < 6; drive++) {
 13495   013C20  0E00               	movlw	0
 13496   013C22  0107               	movlb	7	; () banked
 13497   013C24  6FC9               	movwf	(menu_select@drive+1)& (0+255),b
 13498   013C26  0E00               	movlw	0
 13499   013C28  6FC8               	movwf	menu_select@drive& (0+255),b
 13500   013C2A  D079               	goto	l12681
 13501   013C2C                     l12665:
 13502                           
 13503                           ; BSR set to: 7
 13504                           ;src/io.c: 168:   char drive_letter = (char)('A' + drive);
 13505   013C2C  51C8               	movf	menu_select@drive& (0+255),w,b
 13506   013C2E  0F41               	addlw	65
 13507   013C30  6FCA               	movwf	menu_select@drive_letter& (0+255),b
 13508                           
 13509                           ;src/io.c: 169:   char * const buf = (char *)tmp_buf[0];
 13510   013C32  0EBC               	movlw	low _tmp_buf
 13511   013C34  6FC6               	movwf	menu_select@buf& (0+255),b
 13512   013C36  0E17               	movlw	high _tmp_buf
 13513   013C38  6FC7               	movwf	(menu_select@buf+1)& (0+255),b
 13514                           
 13515                           ; BSR set to: 7
 13516                           ;src/io.c: 170:   sprintf(buf, "%s/DRIVE%c.DSK", fileinfo.fname, drive_letter);
 13517   013C3A  C7C6  F59A         	movff	menu_select@buf,sprintf@s
 13518   013C3E  C7C7  F59B         	movff	menu_select@buf+1,sprintf@s+1
 13519   013C42  0E71               	movlw	low STR_77
 13520   013C44  0105               	movlb	5	; () banked
 13521   013C46  6F9C               	movwf	sprintf@fmt& (0+255),b
 13522   013C48  0EFF               	movlw	high STR_77
 13523   013C4A  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
 13524   013C4C  0EAD               	movlw	low (_fileinfo+9)
 13525   013C4E  6F9E               	movwf	(?_sprintf+4)& (0+255),b
 13526   013C50  0E07               	movlw	high (_fileinfo+9)
 13527   013C52  6F9F               	movwf	(?_sprintf+5)& (0+255),b
 13528   013C54  C7CA  F5A0         	movff	menu_select@drive_letter,?_sprintf+6
 13529   013C58  6BA1               	clrf	(?_sprintf+7)& (0+255),b
 13530   013C5A  ECD8  F0CC         	call	_sprintf	;wreg free
 13531                           
 13532                           ; BSR set to: 5
 13533                           ;src/io.c: 171:   if (f_open(&files[num_files], buf, 0x01|0x02) == FR_OK) {
 13534   013C5E  C71D  F501         	movff	_num_files,___wmul@multiplier
 13535   013C62  C71E  F502         	movff	_num_files+1,___wmul@multiplier+1
 13536   013C66  0E02               	movlw	2
 13537   013C68  6E04               	movwf	(___wmul@multiplicand+1)^(0+1280),c
 13538   013C6A  0E22               	movlw	34
 13539   013C6C  6E03               	movwf	___wmul@multiplicand^(0+1280),c
 13540   013C6E  EC66  F0CF         	call	___wmul	;wreg free
 13541   013C72  0EC0               	movlw	low _files
 13542   013C74  2401               	addwf	?___wmul^(0+1280),w,c
 13543   013C76  0107               	movlb	7	; () banked
 13544   013C78  6FC4               	movwf	_menu_select$3959& (0+255),b
 13545   013C7A  0E08               	movlw	high _files
 13546   013C7C  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
 13547   013C7E  6FC5               	movwf	(_menu_select$3959+1)& (0+255),b
 13548                           
 13549                           ; BSR set to: 7
 13550                           ;src/io.c: 171:   if (f_open(&files[num_files], buf, 0x01|0x02) == FR_OK) {
 13551   013C80  C7C4  F6AF         	movff	_menu_select$3959,f_open@fp
 13552   013C84  C7C5  F6B0         	movff	_menu_select$3959+1,f_open@fp+1
 13553   013C88  C7C6  F6B1         	movff	menu_select@buf,f_open@path
 13554   013C8C  C7C7  F6B2         	movff	menu_select@buf+1,f_open@path+1
 13555   013C90  0E03               	movlw	3
 13556   013C92  0106               	movlb	6	; () banked
 13557   013C94  6FB3               	movwf	f_open@mode& (0+255),b
 13558   013C96  ECA4  F08F         	call	_f_open	;wreg free
 13559   013C9A  0900               	iorlw	0
 13560   013C9C  A4D8               	btfss	status,2,c
 13561   013C9E  D03C               	goto	l12679
 13562                           
 13563                           ; BSR set to: 6
 13564                           ;src/io.c: 172:    printf("Image file %s/DRIVE%c.DSK is assigned to drive %c\n\r",
 13565   013CA0  0E5A               	movlw	low STR_78
 13566   013CA2  0105               	movlb	5	; () banked
 13567   013CA4  6F9A               	movwf	printf@fmt& (0+255),b
 13568   013CA6  0EF8               	movlw	high STR_78
 13569   013CA8  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13570   013CAA  0EAD               	movlw	low (_fileinfo+9)
 13571   013CAC  6F9C               	movwf	(?_printf+2)& (0+255),b
 13572   013CAE  0E07               	movlw	high (_fileinfo+9)
 13573   013CB0  6F9D               	movwf	(?_printf+3)& (0+255),b
 13574   013CB2  C7CA  F59E         	movff	menu_select@drive_letter,?_printf+4
 13575   013CB6  6B9F               	clrf	(?_printf+5)& (0+255),b
 13576   013CB8  C7CA  F5A0         	movff	menu_select@drive_letter,?_printf+6
 13577   013CBC  6BA1               	clrf	(?_printf+7)& (0+255),b
 13578   013CBE  EC53  F0CF         	call	_printf	;wreg free
 13579                           
 13580                           ; BSR set to: 5
 13581                           ;src/io.c: 174:    drives[drive].filep = &files[num_files];
 13582   013CC2  C71D  F501         	movff	_num_files,___wmul@multiplier
 13583   013CC6  C71E  F502         	movff	_num_files+1,___wmul@multiplier+1
 13584   013CCA  0E02               	movlw	2
 13585   013CCC  6E04               	movwf	(___wmul@multiplicand+1)^(0+1280),c
 13586   013CCE  0E22               	movlw	34
 13587   013CD0  6E03               	movwf	___wmul@multiplicand^(0+1280),c
 13588   013CD2  EC66  F0CF         	call	___wmul	;wreg free
 13589   013CD6  0EC0               	movlw	low _files
 13590   013CD8  2401               	addwf	?___wmul^(0+1280),w,c
 13591   013CDA  0107               	movlb	7	; () banked
 13592   013CDC  6FC0               	movwf	??_menu_select& (0+255),b
 13593   013CDE  0E08               	movlw	high _files
 13594   013CE0  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
 13595   013CE2  6FC1               	movwf	(??_menu_select+1)& (0+255),b
 13596   013CE4  0E80               	movlw	low _drives
 13597   013CE6  6FC2               	movwf	(??_menu_select+2)& (0+255),b
 13598   013CE8  0E08               	movlw	high _drives
 13599   013CEA  6FC3               	movwf	(??_menu_select+3)& (0+255),b
 13600   013CEC  0E02               	movlw	2
 13601   013CEE  27C2               	addwf	(??_menu_select+2)& (0+255),f,b
 13602   013CF0  0E00               	movlw	0
 13603   013CF2  23C3               	addwfc	(??_menu_select+3)& (0+255),f,b
 13604   013CF4  90D8               	bcf	status,0,c
 13605   013CF6  35C8               	rlcf	menu_select@drive& (0+255),w,b
 13606   013CF8  6ED9               	movwf	fsr2l,c
 13607   013CFA  35C9               	rlcf	(menu_select@drive+1)& (0+255),w,b
 13608   013CFC  6EDA               	movwf	fsr2h,c
 13609   013CFE  90D8               	bcf	status,0,c
 13610   013D00  36D9               	rlcf	fsr2l,f,c
 13611   013D02  36DA               	rlcf	fsr2h,f,c
 13612   013D04  51C2               	movf	(??_menu_select+2)& (0+255),w,b
 13613   013D06  26D9               	addwf	fsr2l,f,c
 13614   013D08  51C3               	movf	(??_menu_select+3)& (0+255),w,b
 13615   013D0A  22DA               	addwfc	fsr2h,f,c
 13616   013D0C  C7C0  F4DE         	movff	??_menu_select,postinc2
 13617   013D10  C7C1  F4DD         	movff	??_menu_select+1,postdec2
 13618                           
 13619                           ; BSR set to: 7
 13620                           ;src/io.c: 175:    num_files++;
 13621   013D14  4B1D               	infsnz	_num_files& (0+255),f,b
 13622   013D16  2B1E               	incf	(_num_files+1)& (0+255),f,b
 13623   013D18                     l12679:
 13624                           
 13625                           ;src/io.c: 177:  }
 13626   013D18  0107               	movlb	7	; () banked
 13627   013D1A  4BC8               	infsnz	menu_select@drive& (0+255),f,b
 13628   013D1C  2BC9               	incf	(menu_select@drive+1)& (0+255),f,b
 13629   013D1E                     l12681:
 13630                           
 13631                           ; BSR set to: 7
 13632   013D1E  51C9               	movf	(menu_select@drive+1)& (0+255),w,b
 13633   013D20  E10C               	bnz	l12685
 13634   013D22  0E10               	movlw	16
 13635   013D24  5DC8               	subwf	menu_select@drive& (0+255),w,b
 13636   013D26  B0D8               	btfsc	status,0,c
 13637   013D28  D008               	goto	u16220
 13638                           
 13639                           ; BSR set to: 7
 13640   013D2A  BF1E               	btfsc	(_num_files+1)& (0+255),7,b
 13641   013D2C  D77F               	goto	l12665
 13642   013D2E  511E               	movf	(_num_files+1)& (0+255),w,b
 13643   013D30  E104               	bnz	u16220
 13644   013D32  0E06               	movlw	6
 13645   013D34  5D1D               	subwf	_num_files& (0+255),w,b
 13646   013D36  A0D8               	btfss	status,0,c
 13647   013D38  D779               	goto	l12665
 13648   013D3A                     u16220:
 13649   013D3A                     l12685:
 13650                           
 13651                           ; BSR set to: 7
 13652                           ;src/io.c: 178:  if (drives[0].filep == ((void*)0)) {
 13653   013D3A  0108               	movlb	8	; () banked
 13654   013D3C  5182               	movf	(_drives+2)& (0+255),w,b
 13655   013D3E  1183               	iorwf	(_drives+3)& (0+255),w,b
 13656   013D40  A4D8               	btfss	status,2,c
 13657   013D42  D00D               	goto	l12693
 13658                           
 13659                           ; BSR set to: 8
 13660                           ;src/io.c: 179:   printf("No boot disk.\n\r");
 13661   013D44  0E61               	movlw	low STR_79
 13662   013D46  0105               	movlb	5	; () banked
 13663   013D48  6F9A               	movwf	printf@fmt& (0+255),b
 13664   013D4A  0EFF               	movlw	high STR_79
 13665   013D4C  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13666   013D4E  EC53  F0CF         	call	_printf	;wreg free
 13667                           
 13668                           ; BSR set to: 5
 13669                           ;src/io.c: 180:   return -4;
 13670   013D52  0EFF               	movlw	255
 13671   013D54  0107               	movlb	7	; () banked
 13672   013D56  6FBF               	movwf	(?_menu_select+1)& (0+255),b
 13673   013D58  0EFC               	movlw	252
 13674   013D5A  6FBE               	movwf	?_menu_select& (0+255),b
 13675   013D5C  0012               	return	
 13676   013D5E                     l12693:
 13677                           
 13678                           ; BSR set to: 8
 13679                           ;src/io.c: 182: return 0;
 13680   013D5E  0E00               	movlw	0
 13681   013D60  0107               	movlb	7	; () banked
 13682   013D62  6FBF               	movwf	(?_menu_select+1)& (0+255),b
 13683   013D64  0E00               	movlw	0
 13684   013D66  6FBE               	movwf	?_menu_select& (0+255),b
 13685                           
 13686                           ; BSR set to: 7
 13687   013D68  0012               	return		;funcret
 13688   013D6A                     __end_of_menu_select:
 13689                           	callstack 0
 13690                           
 13691 ;; *************** function _strncmp *****************
 13692 ;; Defined at:
 13693 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;  l               2    0[COMRAM] PTR const unsigned char 
 13696 ;;		 -> fileinfo$fname(13), fileinfo(22), 
 13697 ;;  r               2    2[COMRAM] PTR const unsigned char 
 13698 ;;		 -> STR_74(8), STR_73(9), STR_68(8), STR_67(9), 
 13699 ;;  n               2    4[COMRAM] unsigned int 
 13700 ;; Auto vars:     Size  Location     Type
 13701 ;;		None
 13702 ;; Return value:  Size  Location     Type
 13703 ;;                  2    0[COMRAM] int 
 13704 ;; Registers used:
 13705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13706 ;; Tracked objects:
 13707 ;;		On entry : 0/7
 13708 ;;		On exit  : 0/0
 13709 ;;		Unchanged: 0/0
 13710 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13711 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13714 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13715 ;;Total ram usage:        7 bytes
 13716 ;; Hardware stack levels used: 1
 13717 ;; This function calls:
 13718 ;;		Nothing
 13719 ;; This function is called by:
 13720 ;;		_menu_select
 13721 ;; This function uses a non-reentrant model
 13722 ;;
 13723                           
 13724                           	psect	text3
 13725   018FCC                     __ptext3:
 13726                           	callstack 0
 13727   018FCC                     _strncmp:
 13728                           	callstack 125
 13729                           
 13730                           ; BSR set to: 7
 13731                           ;incstack = 0
 13732   018FCC  0605               	decf	strncmp@n^(0+1280),f,c
 13733   018FCE  A0D8               	btfss	status,0,c
 13734   018FD0  0606               	decf	(strncmp@n+1)^(0+1280),f,c
 13735   018FD2  2805               	incf	strncmp@n^(0+1280),w,c
 13736   018FD4  E10F               	bnz	l12337
 13737   018FD6  2806               	incf	(strncmp@n+1)^(0+1280),w,c
 13738   018FD8  A4D8               	btfss	status,2,c
 13739   018FDA  D00C               	goto	l12337
 13740   018FDC  0E00               	movlw	0
 13741   018FDE  6E02               	movwf	(?_strncmp+1)^(0+1280),c
 13742   018FE0  0E00               	movlw	0
 13743   018FE2  6E01               	movwf	?_strncmp^(0+1280),c
 13744   018FE4  0012               	return	
 13745   018FE6                     l12335:
 13746   018FE6  4A01               	infsnz	strncmp@l^(0+1280),f,c
 13747   018FE8  2A02               	incf	(strncmp@l+1)^(0+1280),f,c
 13748   018FEA  4A03               	infsnz	strncmp@r^(0+1280),f,c
 13749   018FEC  2A04               	incf	(strncmp@r+1)^(0+1280),f,c
 13750   018FEE  0605               	decf	strncmp@n^(0+1280),f,c
 13751   018FF0  A0D8               	btfss	status,0,c
 13752   018FF2  0606               	decf	(strncmp@n+1)^(0+1280),f,c
 13753   018FF4                     l12337:
 13754   018FF4  C501  F4D9         	movff	strncmp@l,fsr2l
 13755   018FF8  C502  F4DA         	movff	strncmp@l+1,fsr2h
 13756   018FFC  50DF               	movf	indf2,w,c
 13757   018FFE  B4D8               	btfsc	status,2,c
 13758   019000  D020               	goto	u15850
 13759   019002  C503  F4F6         	movff	strncmp@r,tblptrl
 13760   019006  C504  F4F7         	movff	strncmp@r+1,tblptrh
 13761   01900A                     	if	0	;tblptru may be non-zero
 13762   01900A                     	endif
 13763   01900A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13764   01900A  0E00               	movlw	low (__mediumconst shr (0+16))
 13765   01900C  6EF8               	movwf	tblptru,c
 13766   01900E                     	endif
 13767   01900E  0008               	tblrd		*
 13768   019010  50F5               	movf	tablat,w,c
 13769   019012  0900               	iorlw	0
 13770   019014  B4D8               	btfsc	status,2,c
 13771   019016  D015               	goto	u15850
 13772   019018  5005               	movf	strncmp@n^(0+1280),w,c
 13773   01901A  1006               	iorwf	(strncmp@n+1)^(0+1280),w,c
 13774   01901C  B4D8               	btfsc	status,2,c
 13775   01901E  D011               	goto	u15850
 13776   019020  C501  F4D9         	movff	strncmp@l,fsr2l
 13777   019024  C502  F4DA         	movff	strncmp@l+1,fsr2h
 13778   019028  50DF               	movf	indf2,w,c
 13779   01902A  6E07               	movwf	??_strncmp^(0+1280),c
 13780   01902C  C503  F4F6         	movff	strncmp@r,tblptrl
 13781   019030  C504  F4F7         	movff	strncmp@r+1,tblptrh
 13782   019034                     	if	0	;tblptru may be non-zero
 13783   019034                     	endif
 13784   019034                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13785   019034  0E00               	movlw	low (__mediumconst shr (0+16))
 13786   019036  6EF8               	movwf	tblptru,c
 13787   019038                     	endif
 13788   019038  0008               	tblrd		*
 13789   01903A  50F5               	movf	tablat,w,c
 13790   01903C  1807               	xorwf	??_strncmp^(0+1280),w,c
 13791   01903E  B4D8               	btfsc	status,2,c
 13792   019040  D7D2               	goto	l12335
 13793   019042                     u15850:
 13794   019042  C501  F4D9         	movff	strncmp@l,fsr2l
 13795   019046  C502  F4DA         	movff	strncmp@l+1,fsr2h
 13796   01904A  50DF               	movf	indf2,w,c
 13797   01904C  6E07               	movwf	??_strncmp^(0+1280),c
 13798   01904E  C503  F4F6         	movff	strncmp@r,tblptrl
 13799   019052  C504  F4F7         	movff	strncmp@r+1,tblptrh
 13800   019056                     	if	0	;tblptru may be non-zero
 13801   019056                     	endif
 13802   019056                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13803   019056  0E00               	movlw	low (__mediumconst shr (0+16))
 13804   019058  6EF8               	movwf	tblptru,c
 13805   01905A                     	endif
 13806   01905A  0008               	tblrd		*
 13807   01905C  50F5               	movf	tablat,w,c
 13808   01905E  5C07               	subwf	??_strncmp^(0+1280),w,c
 13809   019060  6E01               	movwf	?_strncmp^(0+1280),c
 13810   019062  6A02               	clrf	(?_strncmp+1)^(0+1280),c
 13811   019064  A0D8               	btfss	status,0,c
 13812   019066  0602               	decf	(?_strncmp+1)^(0+1280),f,c
 13813   019068  0012               	return		;funcret
 13814   01906A                     __end_of_strncmp:
 13815                           	callstack 0
 13816                           
 13817 ;; *************** function _strcmp *****************
 13818 ;; Defined at:
 13819 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
 13820 ;; Parameters:    Size  Location     Type
 13821 ;;  l               2    0[COMRAM] PTR const unsigned char 
 13822 ;;		 -> fileinfo$fname(13), fileinfo(22), 
 13823 ;;  r               2    2[COMRAM] PTR const unsigned char 
 13824 ;;		 -> STR_70(9), 
 13825 ;; Auto vars:     Size  Location     Type
 13826 ;;		None
 13827 ;; Return value:  Size  Location     Type
 13828 ;;                  2    0[COMRAM] int 
 13829 ;; Registers used:
 13830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13831 ;; Tracked objects:
 13832 ;;		On entry : 3F/5
 13833 ;;		On exit  : 3F/5
 13834 ;;		Unchanged: 3E/0
 13835 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13839 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13840 ;;Total ram usage:        5 bytes
 13841 ;; Hardware stack levels used: 1
 13842 ;; This function calls:
 13843 ;;		Nothing
 13844 ;; This function is called by:
 13845 ;;		_menu_select
 13846 ;; This function uses a non-reentrant model
 13847 ;;
 13848                           
 13849                           	psect	text4
 13850   0197A2                     __ptext4:
 13851                           	callstack 0
 13852   0197A2                     _strcmp:
 13853                           	callstack 125
 13854                           
 13855                           ; BSR set to: 5
 13856                           
 13857                           ;incstack = 0
 13858   0197A2  D004               	goto	l12353
 13859   0197A4                     l12351:
 13860                           
 13861                           ; BSR set to: 5
 13862   0197A4  4A01               	infsnz	strcmp@l^(0+1280),f,c
 13863   0197A6  2A02               	incf	(strcmp@l+1)^(0+1280),f,c
 13864   0197A8  4A03               	infsnz	strcmp@r^(0+1280),f,c
 13865   0197AA  2A04               	incf	(strcmp@r+1)^(0+1280),f,c
 13866   0197AC                     l12353:
 13867                           
 13868                           ; BSR set to: 5
 13869   0197AC  C501  F4D9         	movff	strcmp@l,fsr2l
 13870   0197B0  C502  F4DA         	movff	strcmp@l+1,fsr2h
 13871   0197B4  50DF               	movf	indf2,w,c
 13872   0197B6  6E05               	movwf	??_strcmp^(0+1280),c
 13873   0197B8  C503  F4F6         	movff	strcmp@r,tblptrl
 13874   0197BC  C504  F4F7         	movff	strcmp@r+1,tblptrh
 13875   0197C0                     	if	0	;tblptru may be non-zero
 13876   0197C0                     	endif
 13877   0197C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13878   0197C0  0E00               	movlw	low (__mediumconst shr (0+16))
 13879   0197C2  6EF8               	movwf	tblptru,c
 13880   0197C4                     	endif
 13881   0197C4  0008               	tblrd		*
 13882   0197C6  50F5               	movf	tablat,w,c
 13883   0197C8  1805               	xorwf	??_strcmp^(0+1280),w,c
 13884   0197CA  A4D8               	btfss	status,2,c
 13885   0197CC  D007               	goto	u15870
 13886                           
 13887                           ; BSR set to: 5
 13888   0197CE  C501  F4D9         	movff	strcmp@l,fsr2l
 13889   0197D2  C502  F4DA         	movff	strcmp@l+1,fsr2h
 13890   0197D6  50DF               	movf	indf2,w,c
 13891   0197D8  A4D8               	btfss	status,2,c
 13892   0197DA  D7E4               	goto	l12351
 13893   0197DC                     u15870:
 13894                           
 13895                           ; BSR set to: 5
 13896   0197DC  C501  F4D9         	movff	strcmp@l,fsr2l
 13897   0197E0  C502  F4DA         	movff	strcmp@l+1,fsr2h
 13898   0197E4  50DF               	movf	indf2,w,c
 13899   0197E6  6E05               	movwf	??_strcmp^(0+1280),c
 13900   0197E8  C503  F4F6         	movff	strcmp@r,tblptrl
 13901   0197EC  C504  F4F7         	movff	strcmp@r+1,tblptrh
 13902   0197F0                     	if	0	;tblptru may be non-zero
 13903   0197F0                     	endif
 13904   0197F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13905   0197F0  0E00               	movlw	low (__mediumconst shr (0+16))
 13906   0197F2  6EF8               	movwf	tblptru,c
 13907   0197F4                     	endif
 13908   0197F4  0008               	tblrd		*
 13909   0197F6  50F5               	movf	tablat,w,c
 13910   0197F8  5C05               	subwf	??_strcmp^(0+1280),w,c
 13911   0197FA  6E01               	movwf	?_strcmp^(0+1280),c
 13912   0197FC  6A02               	clrf	(?_strcmp+1)^(0+1280),c
 13913   0197FE  A0D8               	btfss	status,0,c
 13914   019800  0602               	decf	(?_strcmp+1)^(0+1280),f,c
 13915                           
 13916                           ; BSR set to: 5
 13917   019802  0012               	return		;funcret
 13918   019804                     __end_of_strcmp:
 13919                           	callstack 0
 13920                           
 13921 ;; *************** function _sprintf *****************
 13922 ;; Defined at:
 13923 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
 13924 ;; Parameters:    Size  Location     Type
 13925 ;;  s               2   58[BANK5 ] PTR unsigned char 
 13926 ;;		 -> tmp_buf(512), 
 13927 ;;  fmt             2   60[BANK5 ] PTR const unsigned char 
 13928 ;;		 -> STR_77(15), 
 13929 ;; Auto vars:     Size  Location     Type
 13930 ;;  f              12   68[BANK5 ] struct _IO_FILE
 13931 ;;  ap              2   66[BANK5 ] PTR void [1]
 13932 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13933 ;;  ret             2    0        int 
 13934 ;; Return value:  Size  Location     Type
 13935 ;;                  2   58[BANK5 ] int 
 13936 ;; Registers used:
 13937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13938 ;; Tracked objects:
 13939 ;;		On entry : 3F/5
 13940 ;;		On exit  : 3F/5
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13943 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13944 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13946 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13947 ;;Total ram usage:       22 bytes
 13948 ;; Hardware stack levels used: 1
 13949 ;; Hardware stack levels required when called: 7
 13950 ;; This function calls:
 13951 ;;		_vfprintf
 13952 ;; This function is called by:
 13953 ;;		_menu_select
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           	psect	text5
 13958   0199B0                     __ptext5:
 13959                           	callstack 0
 13960   0199B0                     _sprintf:
 13961                           	callstack 118
 13962                           
 13963                           ; BSR set to: 5
 13964                           
 13965                           ; BSR set to: 5
 13966                           ;incstack = 0
 13967   0199B0  0E9E               	movlw	low (?_sprintf+4)
 13968   0199B2  6FA2               	movwf	sprintf@ap& (0+255),b
 13969   0199B4  0E05               	movlw	high (?_sprintf+4)
 13970   0199B6  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
 13971   0199B8  C59A  F5A4         	movff	sprintf@s,sprintf@f
 13972   0199BC  C59B  F5A5         	movff	sprintf@s+1,sprintf@f+1
 13973                           
 13974                           ; BSR set to: 5
 13975   0199C0  0E00               	movlw	0
 13976   0199C2  6FA8               	movwf	(sprintf@f+4)& (0+255),b
 13977   0199C4  0E00               	movlw	0
 13978   0199C6  6FA7               	movwf	(sprintf@f+3)& (0+255),b
 13979                           
 13980                           ; BSR set to: 5
 13981   0199C8  0E00               	movlw	0
 13982   0199CA  6FAF               	movwf	(sprintf@f+11)& (0+255),b
 13983   0199CC  0E00               	movlw	0
 13984   0199CE  6FAE               	movwf	(sprintf@f+10)& (0+255),b
 13985                           
 13986                           ; BSR set to: 5
 13987   0199D0  0EA4               	movlw	low sprintf@f
 13988   0199D2  6F94               	movwf	vfprintf@fp& (0+255),b
 13989   0199D4  0E05               	movlw	high sprintf@f
 13990   0199D6  6F95               	movwf	(vfprintf@fp+1)& (0+255),b
 13991   0199D8  C59C  F596         	movff	sprintf@fmt,vfprintf@fmt
 13992   0199DC  C59D  F597         	movff	sprintf@fmt+1,vfprintf@fmt+1
 13993   0199E0  0EA2               	movlw	low sprintf@ap
 13994   0199E2  6F98               	movwf	vfprintf@ap& (0+255),b
 13995   0199E4  0E05               	movlw	high sprintf@ap
 13996   0199E6  6F99               	movwf	(vfprintf@ap+1)& (0+255),b
 13997   0199E8  EC48  F0CD         	call	_vfprintf	;wreg free
 13998                           
 13999                           ; BSR set to: 5
 14000   0199EC  51A7               	movf	(sprintf@f+3)& (0+255),w,b
 14001   0199EE  259A               	addwf	sprintf@s& (0+255),w,b
 14002   0199F0  6ED9               	movwf	fsr2l,c
 14003   0199F2  51A8               	movf	(sprintf@f+4)& (0+255),w,b
 14004   0199F4  219B               	addwfc	(sprintf@s+1)& (0+255),w,b
 14005   0199F6  6EDA               	movwf	fsr2h,c
 14006   0199F8  6ADF               	clrf	indf2,c
 14007                           
 14008                           ; BSR set to: 5
 14009   0199FA  0012               	return		;funcret
 14010   0199FC                     __end_of_sprintf:
 14011                           	callstack 0
 14012                           
 14013 ;; *************** function _getch *****************
 14014 ;; Defined at:
 14015 ;;		line 107 in file "src/io.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;		None
 14018 ;; Auto vars:     Size  Location     Type
 14019 ;;		None
 14020 ;; Return value:  Size  Location     Type
 14021 ;;                  2    0[COMRAM] int 
 14022 ;; Registers used:
 14023 ;;		None
 14024 ;; Tracked objects:
 14025 ;;		On entry : 3C/5
 14026 ;;		On exit  : 3C/4
 14027 ;;		Unchanged: 3C/0
 14028 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14033 ;;Total ram usage:        2 bytes
 14034 ;; Hardware stack levels used: 1
 14035 ;; This function calls:
 14036 ;;		Nothing
 14037 ;; This function is called by:
 14038 ;;		_menu_select
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text6
 14043   019FD4                     __ptext6:
 14044                           	callstack 0
 14045   019FD4                     _getch:
 14046                           	callstack 125
 14047                           
 14048                           ;src/io.c: 108:  while(!U3RXIF);
 14049                           
 14050                           ; BSR set to: 5
 14051                           ;incstack = 0
 14052   019FD4  A0B7               	btfss	1207,0,c	;volatile
 14053   019FD6  D7FE               	goto	__ptext6
 14054                           
 14055                           ;src/io.c: 109:  return U3RXB;
 14056   019FD8  C2C7 F501          	movff	711,?_getch	;volatile
 14057   019FDC  6A02               	clrf	(?_getch+1)^(0+1280),c
 14058   019FDE  0012               	return		;funcret
 14059   019FE0                     __end_of_getch:
 14060                           	callstack 0
 14061                           
 14062 ;; *************** function _f_readdir *****************
 14063 ;; Defined at:
 14064 ;;		line 4693 in file "fatfs/ff.c"
 14065 ;; Parameters:    Size  Location     Type
 14066 ;;  dp              2  111[BANK6 ] PTR struct .
 14067 ;;		 -> fsdir(40), 
 14068 ;;  fno             2  113[BANK6 ] PTR struct .
 14069 ;;		 -> fileinfo(22), NULL(0), 
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;  fs              2  115[BANK6 ] PTR struct .
 14072 ;;		 -> fs(560), NULL(0), 
 14073 ;;  res             1  117[BANK6 ] enum E275
 14074 ;; Return value:  Size  Location     Type
 14075 ;;                  1    wreg      enum E275
 14076 ;; Registers used:
 14077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14078 ;; Tracked objects:
 14079 ;;		On entry : 3F/6
 14080 ;;		On exit  : 3F/6
 14081 ;;		Unchanged: 0/0
 14082 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14083 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14084 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14086 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14087 ;;Total ram usage:        7 bytes
 14088 ;; Hardware stack levels used: 1
 14089 ;; Hardware stack levels required when called: 17
 14090 ;; This function calls:
 14091 ;;		_dir_next
 14092 ;;		_dir_read
 14093 ;;		_dir_sdi
 14094 ;;		_get_fileinfo
 14095 ;;		_validate
 14096 ;; This function is called by:
 14097 ;;		_menu_select
 14098 ;; This function uses a non-reentrant model
 14099 ;;
 14100                           
 14101                           	psect	text7
 14102   018BDA                     __ptext7:
 14103                           	callstack 0
 14104   018BDA                     _f_readdir:
 14105                           	callstack 108
 14106                           
 14107                           ; BSR set to: 6
 14108                           ;fatfs/ff.c: 4694:  DIR* dp,;fatfs/ff.c: 4695:  FILINFO* fno;fatfs/ff.c: 4697: {;fatfs/f
      +                          f.c: 4698:  FRESULT res;;fatfs/ff.c: 4699:  FATFS *fs;;fatfs/ff.c: 4703:  res = validate
      +                          (&dp->obj, &fs);
 14109                           
 14110                           ;incstack = 0
 14111   018BDA  C66F  F5A6         	movff	f_readdir@dp,validate@obj
 14112   018BDE  C670  F5A7         	movff	f_readdir@dp+1,validate@obj+1
 14113   018BE2  0E73               	movlw	low f_readdir@fs
 14114   018BE4  0105               	movlb	5	; () banked
 14115   018BE6  6FA8               	movwf	validate@rfs& (0+255),b
 14116   018BE8  0E06               	movlw	high f_readdir@fs
 14117   018BEA  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 14118   018BEC  EC62  F0C3         	call	_validate	;wreg free
 14119   018BF0  0106               	movlb	6	; () banked
 14120   018BF2  6F75               	movwf	f_readdir@res& (0+255),b
 14121                           
 14122                           ; BSR set to: 6
 14123                           ;fatfs/ff.c: 4704:  if (res == FR_OK) {
 14124   018BF4  5175               	movf	f_readdir@res& (0+255),w,b
 14125   018BF6  A4D8               	btfss	status,2,c
 14126   018BF8  D044               	goto	l771
 14127                           
 14128                           ; BSR set to: 6
 14129                           ;fatfs/ff.c: 4705:   if (!fno) {
 14130   018BFA  5171               	movf	f_readdir@fno& (0+255),w,b
 14131   018BFC  1172               	iorwf	(f_readdir@fno+1)& (0+255),w,b
 14132   018BFE  A4D8               	btfss	status,2,c
 14133   018C00  D00F               	goto	l12151
 14134                           
 14135                           ; BSR set to: 6
 14136                           ;fatfs/ff.c: 4706:    res = dir_sdi(dp, 0);
 14137   018C02  C66F  F624         	movff	f_readdir@dp,dir_sdi@dp
 14138   018C06  C670  F625         	movff	f_readdir@dp+1,dir_sdi@dp+1
 14139   018C0A  0E00               	movlw	0
 14140   018C0C  6F26               	movwf	dir_sdi@ofs& (0+255),b
 14141   018C0E  0E00               	movlw	0
 14142   018C10  6F27               	movwf	(dir_sdi@ofs+1)& (0+255),b
 14143   018C12  0E00               	movlw	0
 14144   018C14  6F28               	movwf	(dir_sdi@ofs+2)& (0+255),b
 14145   018C16  0E00               	movlw	0
 14146   018C18  6F29               	movwf	(dir_sdi@ofs+3)& (0+255),b
 14147   018C1A  EC33  F0A5         	call	_dir_sdi	;wreg free
 14148   018C1E  D030               	goto	L1
 14149   018C20                     l12151:
 14150                           
 14151                           ; BSR set to: 6
 14152                           ;fatfs/ff.c: 4709:    res = dir_read(dp, 0);
 14153   018C20  C66F  F662         	movff	f_readdir@dp,dir_read@dp
 14154   018C24  C670  F663         	movff	f_readdir@dp+1,dir_read@dp+1
 14155   018C28  0E00               	movlw	0
 14156   018C2A  6F65               	movwf	(dir_read@vol+1)& (0+255),b
 14157   018C2C  0E00               	movlw	0
 14158   018C2E  6F64               	movwf	dir_read@vol& (0+255),b
 14159   018C30  EC77  F0BC         	call	_dir_read	;wreg free
 14160   018C34  6F75               	movwf	f_readdir@res& (0+255),b
 14161                           
 14162                           ; BSR set to: 6
 14163                           ;fatfs/ff.c: 4710:    if (res == FR_NO_FILE) res = FR_OK;
 14164   018C36  0E04               	movlw	4
 14165   018C38  1975               	xorwf	f_readdir@res& (0+255),w,b
 14166   018C3A  A4D8               	btfss	status,2,c
 14167   018C3C  D002               	goto	l774
 14168                           
 14169                           ; BSR set to: 6
 14170   018C3E  0E00               	movlw	0
 14171   018C40  6F75               	movwf	f_readdir@res& (0+255),b
 14172   018C42                     l774:
 14173                           
 14174                           ; BSR set to: 6
 14175                           ;fatfs/ff.c: 4711:    if (res == FR_OK) {
 14176   018C42  5175               	movf	f_readdir@res& (0+255),w,b
 14177   018C44  A4D8               	btfss	status,2,c
 14178   018C46  D01D               	goto	l771
 14179                           
 14180                           ; BSR set to: 6
 14181                           ;fatfs/ff.c: 4712:     get_fileinfo(dp, fno);
 14182   018C48  C66F  F50E         	movff	f_readdir@dp,get_fileinfo@dp
 14183   018C4C  C670  F50F         	movff	f_readdir@dp+1,get_fileinfo@dp+1
 14184   018C50  C671  F510         	movff	f_readdir@fno,get_fileinfo@fno
 14185   018C54  C672  F511         	movff	f_readdir@fno+1,get_fileinfo@fno+1
 14186   018C58  EC04  F0B3         	call	_get_fileinfo	;wreg free
 14187                           
 14188                           ;fatfs/ff.c: 4713:     res = dir_next(dp, 0);
 14189   018C5C  C66F  F648         	movff	f_readdir@dp,dir_next@dp
 14190   018C60  C670  F649         	movff	f_readdir@dp+1,dir_next@dp+1
 14191   018C64  0E00               	movlw	0
 14192   018C66  0106               	movlb	6	; () banked
 14193   018C68  6F4B               	movwf	(dir_next@stretch+1)& (0+255),b
 14194   018C6A  0E00               	movlw	0
 14195   018C6C  6F4A               	movwf	dir_next@stretch& (0+255),b
 14196   018C6E  ECB5  F09E         	call	_dir_next	;wreg free
 14197   018C72  0106               	movlb	6	; () banked
 14198   018C74  6F75               	movwf	f_readdir@res& (0+255),b
 14199                           
 14200                           ; BSR set to: 6
 14201                           ;fatfs/ff.c: 4714:     if (res == FR_NO_FILE) res = FR_OK;
 14202   018C76  0E04               	movlw	4
 14203   018C78  1975               	xorwf	f_readdir@res& (0+255),w,b
 14204   018C7A  A4D8               	btfss	status,2,c
 14205   018C7C  D002               	goto	l771
 14206                           
 14207                           ; BSR set to: 6
 14208   018C7E  0E00               	movlw	0
 14209   018C80                     L1:
 14210   018C80  6F75               	movwf	f_readdir@res& (0+255),b
 14211   018C82                     l771:
 14212                           
 14213                           ; BSR set to: 6
 14214                           ;fatfs/ff.c: 4719:  return res;
 14215   018C82  5175               	movf	f_readdir@res& (0+255),w,b
 14216                           
 14217                           ; BSR set to: 6
 14218   018C84  0012               	return		;funcret
 14219   018C86                     __end_of_f_readdir:
 14220                           	callstack 0
 14221                           
 14222 ;; *************** function _get_fileinfo *****************
 14223 ;; Defined at:
 14224 ;;		line 2617 in file "fatfs/ff.c"
 14225 ;; Parameters:    Size  Location     Type
 14226 ;;  dp              2   13[COMRAM] PTR struct .
 14227 ;;		 -> fsdir(40), f_stat@dj(40), 
 14228 ;;  fno             2   15[COMRAM] PTR struct .
 14229 ;;		 -> fileinfo(22), NULL(0), 
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;  di              2   23[COMRAM] unsigned int 
 14232 ;;  si              2   21[COMRAM] unsigned int 
 14233 ;;  c               1   25[COMRAM] unsigned char 
 14234 ;; Return value:  Size  Location     Type
 14235 ;;                  1    wreg      void 
 14236 ;; Registers used:
 14237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14238 ;; Tracked objects:
 14239 ;;		On entry : 3F/6
 14240 ;;		On exit  : 0/0
 14241 ;;		Unchanged: 0/0
 14242 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14244 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14245 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14246 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14247 ;;Total ram usage:       13 bytes
 14248 ;; Hardware stack levels used: 1
 14249 ;; Hardware stack levels required when called: 1
 14250 ;; This function calls:
 14251 ;;		_ld_dword
 14252 ;;		_ld_word
 14253 ;; This function is called by:
 14254 ;;		_f_readdir
 14255 ;; This function uses a non-reentrant model
 14256 ;;
 14257                           
 14258                           	psect	text8
 14259   016608                     __ptext8:
 14260                           	callstack 0
 14261   016608                     _get_fileinfo:
 14262                           	callstack 123
 14263                           
 14264                           ; BSR set to: 6
 14265                           ;fatfs/ff.c: 2618:  DIR* dp,;fatfs/ff.c: 2619:  FILINFO* fno;fatfs/ff.c: 2621: {;fatfs/f
      +                          f.c: 2622:  UINT si, di;;fatfs/ff.c: 2629:  TCHAR c;;fatfs/ff.c: 2633:  fno->fname[0] = 
      +                          0;
 14266                           
 14267                           ; BSR set to: 6
 14268                           ;incstack = 0
 14269   016608  EE20 F009          	lfsr	2,9
 14270   01660C  5010               	movf	get_fileinfo@fno^(0+1280),w,c
 14271   01660E  26D9               	addwf	fsr2l,f,c
 14272   016610  5011               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 14273   016612  22DA               	addwfc	fsr2h,f,c
 14274   016614  6ADF               	clrf	indf2,c
 14275                           
 14276                           ;fatfs/ff.c: 2634:  if (dp->sect == 0) return;
 14277   016616  EE20 F016          	lfsr	2,22
 14278   01661A  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14279   01661C  26D9               	addwf	fsr2l,f,c
 14280   01661E  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14281   016620  22DA               	addwfc	fsr2h,f,c
 14282   016622  50DE               	movf	postinc2,w,c
 14283   016624  10DE               	iorwf	postinc2,w,c
 14284   016626  10DE               	iorwf	postinc2,w,c
 14285   016628  10DE               	iorwf	postinc2,w,c
 14286   01662A  B4D8               	btfsc	status,2,c
 14287   01662C  0012               	return	
 14288                           
 14289                           ; BSR set to: 6
 14290                           ;fatfs/ff.c: 2733:  si = di = 0;
 14291   01662E  0E00               	movlw	0
 14292   016630  6E19               	movwf	(get_fileinfo@di+1)^(0+1280),c
 14293   016632  0E00               	movlw	0
 14294   016634  6E18               	movwf	get_fileinfo@di^(0+1280),c
 14295   016636  C518  F516         	movff	get_fileinfo@di,get_fileinfo@si
 14296   01663A  C519  F517         	movff	get_fileinfo@di+1,get_fileinfo@si+1
 14297                           
 14298                           ;fatfs/ff.c: 2734:  while (si < 11) {
 14299   01663E  D043               	goto	l11043
 14300   016640                     l11023:
 14301                           
 14302                           ; BSR set to: 6
 14303                           ;fatfs/ff.c: 2735:   c = (TCHAR)dp->dir[si++];
 14304   016640  EE20 F01A          	lfsr	2,26
 14305   016644  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14306   016646  26D9               	addwf	fsr2l,f,c
 14307   016648  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14308   01664A  22DA               	addwfc	fsr2h,f,c
 14309   01664C  C4DE F512          	movff	postinc2,??_get_fileinfo
 14310   016650  C4DD F513          	movff	postdec2,??_get_fileinfo+1
 14311   016654  5016               	movf	get_fileinfo@si^(0+1280),w,c
 14312   016656  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14313   016658  6ED9               	movwf	fsr2l,c
 14314   01665A  5017               	movf	(get_fileinfo@si+1)^(0+1280),w,c
 14315   01665C  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14316   01665E  6EDA               	movwf	fsr2h,c
 14317   016660  50DF               	movf	indf2,w,c
 14318   016662  6E1A               	movwf	get_fileinfo@c^(0+1280),c
 14319                           
 14320                           ; BSR set to: 6
 14321   016664  4A16               	infsnz	get_fileinfo@si^(0+1280),f,c
 14322   016666  2A17               	incf	(get_fileinfo@si+1)^(0+1280),f,c
 14323                           
 14324                           ; BSR set to: 6
 14325                           ;fatfs/ff.c: 2736:   if (c == ' ') continue;
 14326   016668  0E20               	movlw	32
 14327   01666A  181A               	xorwf	get_fileinfo@c^(0+1280),w,c
 14328   01666C  B4D8               	btfsc	status,2,c
 14329   01666E  D02B               	goto	l11043
 14330                           
 14331                           ; BSR set to: 6
 14332                           ;fatfs/ff.c: 2737:   if (c == 0x05) c = 0xE5;
 14333   016670  0E05               	movlw	5
 14334   016672  181A               	xorwf	get_fileinfo@c^(0+1280),w,c
 14335   016674  A4D8               	btfss	status,2,c
 14336   016676  D002               	goto	l11035
 14337                           
 14338                           ; BSR set to: 6
 14339   016678  0EE5               	movlw	229
 14340   01667A  6E1A               	movwf	get_fileinfo@c^(0+1280),c
 14341   01667C                     l11035:
 14342                           
 14343                           ; BSR set to: 6
 14344                           ;fatfs/ff.c: 2738:   if (si == 9) fno->fname[di++] = '.';
 14345   01667C  0E09               	movlw	9
 14346   01667E  1816               	xorwf	get_fileinfo@si^(0+1280),w,c
 14347   016680  1017               	iorwf	(get_fileinfo@si+1)^(0+1280),w,c
 14348   016682  A4D8               	btfss	status,2,c
 14349   016684  D010               	goto	l11041
 14350                           
 14351                           ; BSR set to: 6
 14352   016686  5018               	movf	get_fileinfo@di^(0+1280),w,c
 14353   016688  2410               	addwf	get_fileinfo@fno^(0+1280),w,c
 14354   01668A  6E12               	movwf	??_get_fileinfo^(0+1280),c
 14355   01668C  5019               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 14356   01668E  2011               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 14357   016690  6E13               	movwf	(??_get_fileinfo+1)^(0+1280),c
 14358   016692  0E09               	movlw	9
 14359   016694  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14360   016696  6ED9               	movwf	fsr2l,c
 14361   016698  0E00               	movlw	0
 14362   01669A  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14363   01669C  6EDA               	movwf	fsr2h,c
 14364   01669E  0E2E               	movlw	46
 14365   0166A0  6EDF               	movwf	indf2,c
 14366                           
 14367                           ; BSR set to: 6
 14368   0166A2  4A18               	infsnz	get_fileinfo@di^(0+1280),f,c
 14369   0166A4  2A19               	incf	(get_fileinfo@di+1)^(0+1280),f,c
 14370   0166A6                     l11041:
 14371                           
 14372                           ; BSR set to: 6
 14373                           ;fatfs/ff.c: 2739:   fno->fname[di++] = c;
 14374   0166A6  5018               	movf	get_fileinfo@di^(0+1280),w,c
 14375   0166A8  2410               	addwf	get_fileinfo@fno^(0+1280),w,c
 14376   0166AA  6E12               	movwf	??_get_fileinfo^(0+1280),c
 14377   0166AC  5019               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 14378   0166AE  2011               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 14379   0166B0  6E13               	movwf	(??_get_fileinfo+1)^(0+1280),c
 14380   0166B2  0E09               	movlw	9
 14381   0166B4  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14382   0166B6  6ED9               	movwf	fsr2l,c
 14383   0166B8  0E00               	movlw	0
 14384   0166BA  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14385   0166BC  6EDA               	movwf	fsr2h,c
 14386   0166BE  C51A  F4DF         	movff	get_fileinfo@c,indf2
 14387   0166C2  4A18               	infsnz	get_fileinfo@di^(0+1280),f,c
 14388   0166C4  2A19               	incf	(get_fileinfo@di+1)^(0+1280),f,c
 14389   0166C6                     l11043:
 14390                           
 14391                           ; BSR set to: 6
 14392                           ;fatfs/ff.c: 2734:  while (si < 11) {
 14393   0166C6  5017               	movf	(get_fileinfo@si+1)^(0+1280),w,c
 14394   0166C8  E104               	bnz	u13680
 14395   0166CA  0E0B               	movlw	11
 14396   0166CC  5C16               	subwf	get_fileinfo@si^(0+1280),w,c
 14397   0166CE  A0D8               	btfss	status,0,c
 14398   0166D0  D7B7               	goto	l11023
 14399   0166D2                     u13680:
 14400                           
 14401                           ; BSR set to: 6
 14402                           ;fatfs/ff.c: 2741:  fno->fname[di] = 0;
 14403   0166D2  5018               	movf	get_fileinfo@di^(0+1280),w,c
 14404   0166D4  2410               	addwf	get_fileinfo@fno^(0+1280),w,c
 14405   0166D6  6E12               	movwf	??_get_fileinfo^(0+1280),c
 14406   0166D8  5019               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 14407   0166DA  2011               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 14408   0166DC  6E13               	movwf	(??_get_fileinfo+1)^(0+1280),c
 14409   0166DE  0E09               	movlw	9
 14410   0166E0  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14411   0166E2  6ED9               	movwf	fsr2l,c
 14412   0166E4  0E00               	movlw	0
 14413   0166E6  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14414   0166E8  6EDA               	movwf	fsr2h,c
 14415   0166EA  6ADF               	clrf	indf2,c
 14416                           
 14417                           ; BSR set to: 6
 14418                           ;fatfs/ff.c: 2744:  fno->fattrib = dp->dir[11] & 0x3F;
 14419   0166EC  EE20 F008          	lfsr	2,8
 14420   0166F0  5010               	movf	get_fileinfo@fno^(0+1280),w,c
 14421   0166F2  26D9               	addwf	fsr2l,f,c
 14422   0166F4  5011               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 14423   0166F6  22DA               	addwfc	fsr2h,f,c
 14424   0166F8  EE10 F01A          	lfsr	1,26
 14425   0166FC  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14426   0166FE  26E1               	addwf	fsr1l,f,c
 14427   016700  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14428   016702  22E2               	addwfc	fsr1h,f,c
 14429   016704  EE00 F00B          	lfsr	0,11
 14430   016708  50E6               	movf	postinc1,w,c
 14431   01670A  26E9               	addwf	fsr0l,f,c
 14432   01670C  50E5               	movf	postdec1,w,c
 14433   01670E  22EA               	addwfc	fsr0h,f,c
 14434   016710  50EF               	movf	indf0,w,c
 14435   016712  0B3F               	andlw	63
 14436   016714  6EDF               	movwf	indf2,c
 14437                           
 14438                           ; BSR set to: 6
 14439                           ;fatfs/ff.c: 2745:  fno->fsize = ld_dword(dp->dir + 28);
 14440   016716  EE20 F01A          	lfsr	2,26
 14441   01671A  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14442   01671C  26D9               	addwf	fsr2l,f,c
 14443   01671E  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14444   016720  22DA               	addwfc	fsr2h,f,c
 14445   016722  C4DE F512          	movff	postinc2,??_get_fileinfo
 14446   016726  C4DD F513          	movff	postdec2,??_get_fileinfo+1
 14447   01672A  0E1C               	movlw	28
 14448   01672C  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14449   01672E  6E01               	movwf	ld_dword@ptr^(0+1280),c
 14450   016730  0E00               	movlw	0
 14451   016732  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14452   016734  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 14453   016736  ECDE  F0C4         	call	_ld_dword	;wreg free
 14454   01673A  C510  F4D9         	movff	get_fileinfo@fno,fsr2l
 14455   01673E  C511  F4DA         	movff	get_fileinfo@fno+1,fsr2h
 14456   016742  C501  F4DE         	movff	?_ld_dword,postinc2
 14457   016746  C502  F4DE         	movff	?_ld_dword+1,postinc2
 14458   01674A  C503  F4DE         	movff	?_ld_dword+2,postinc2
 14459   01674E  C504  F4DE         	movff	?_ld_dword+3,postinc2
 14460                           
 14461                           ; BSR set to: 6
 14462                           ;fatfs/ff.c: 2746:  fno->ftime = ld_word(dp->dir + 22 + 0);
 14463   016752  EE20 F01A          	lfsr	2,26
 14464   016756  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14465   016758  26D9               	addwf	fsr2l,f,c
 14466   01675A  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14467   01675C  22DA               	addwfc	fsr2h,f,c
 14468   01675E  C4DE F512          	movff	postinc2,??_get_fileinfo
 14469   016762  C4DD F513          	movff	postdec2,??_get_fileinfo+1
 14470   016766  0E16               	movlw	22
 14471   016768  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14472   01676A  6E01               	movwf	ld_word@ptr^(0+1280),c
 14473   01676C  0E00               	movlw	0
 14474   01676E  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14475   016770  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 14476   016772  EC35  F0CE         	call	_ld_word	;wreg free
 14477   016776  EE20 F006          	lfsr	2,6
 14478   01677A  5010               	movf	get_fileinfo@fno^(0+1280),w,c
 14479   01677C  26D9               	addwf	fsr2l,f,c
 14480   01677E  5011               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 14481   016780  22DA               	addwfc	fsr2h,f,c
 14482   016782  C501  F4DE         	movff	?_ld_word,postinc2
 14483   016786  C502  F4DD         	movff	?_ld_word+1,postdec2
 14484                           
 14485                           ;fatfs/ff.c: 2747:  fno->fdate = ld_word(dp->dir + 22 + 2);
 14486   01678A  EE20 F01A          	lfsr	2,26
 14487   01678E  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14488   016790  26D9               	addwf	fsr2l,f,c
 14489   016792  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14490   016794  22DA               	addwfc	fsr2h,f,c
 14491   016796  C4DE F512          	movff	postinc2,??_get_fileinfo
 14492   01679A  C4DD F513          	movff	postdec2,??_get_fileinfo+1
 14493   01679E  0E18               	movlw	24
 14494   0167A0  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14495   0167A2  6E01               	movwf	ld_word@ptr^(0+1280),c
 14496   0167A4  0E00               	movlw	0
 14497   0167A6  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14498   0167A8  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 14499   0167AA  EC35  F0CE         	call	_ld_word	;wreg free
 14500   0167AE  EE20 F004          	lfsr	2,4
 14501   0167B2  5010               	movf	get_fileinfo@fno^(0+1280),w,c
 14502   0167B4  26D9               	addwf	fsr2l,f,c
 14503   0167B6  5011               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 14504   0167B8  22DA               	addwfc	fsr2h,f,c
 14505   0167BA  C501  F4DE         	movff	?_ld_word,postinc2
 14506   0167BE  C502  F4DD         	movff	?_ld_word+1,postdec2
 14507   0167C2  0012               	return		;funcret
 14508   0167C4                     __end_of_get_fileinfo:
 14509                           	callstack 0
 14510                           
 14511 ;; *************** function _dir_read *****************
 14512 ;; Defined at:
 14513 ;;		line 2306 in file "fatfs/ff.c"
 14514 ;; Parameters:    Size  Location     Type
 14515 ;;  dp              2   98[BANK6 ] PTR struct .
 14516 ;;		 -> fsdir(40), f_unlink@sdj(40), 
 14517 ;;  vol             2  100[BANK6 ] int 
 14518 ;; Auto vars:     Size  Location     Type
 14519 ;;  fs              2  106[BANK6 ] PTR struct .
 14520 ;;		 -> fs(560), NULL(0), 
 14521 ;;  res             1  110[BANK6 ] enum E275
 14522 ;;  b               1  109[BANK6 ] unsigned char 
 14523 ;;  attr            1  108[BANK6 ] unsigned char 
 14524 ;; Return value:  Size  Location     Type
 14525 ;;                  1    wreg      enum E275
 14526 ;; Registers used:
 14527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14528 ;; Tracked objects:
 14529 ;;		On entry : 3F/6
 14530 ;;		On exit  : 3F/6
 14531 ;;		Unchanged: 0/0
 14532 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14533 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14534 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14535 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14536 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14537 ;;Total ram usage:       13 bytes
 14538 ;; Hardware stack levels used: 1
 14539 ;; Hardware stack levels required when called: 16
 14540 ;; This function calls:
 14541 ;;		_dir_next
 14542 ;;		_move_window
 14543 ;; This function is called by:
 14544 ;;		_f_readdir
 14545 ;; This function uses a non-reentrant model
 14546 ;;
 14547                           
 14548                           	psect	text9
 14549   0178EE                     __ptext9:
 14550                           	callstack 0
 14551   0178EE                     _dir_read:
 14552                           	callstack 108
 14553                           
 14554                           ; BSR set to: 6
 14555                           ;fatfs/ff.c: 2307:  DIR* dp,;fatfs/ff.c: 2308:  int vol;fatfs/ff.c: 2310: {;fatfs/ff.c: 
      +                          2311:  FRESULT res = FR_NO_FILE;
 14556                           
 14557                           ;incstack = 0
 14558   0178EE  0E04               	movlw	4
 14559   0178F0  6F6E               	movwf	dir_read@res& (0+255),b
 14560                           
 14561                           ; BSR set to: 6
 14562                           ;fatfs/ff.c: 2312:  FATFS *fs = dp->obj.fs;
 14563   0178F2  C662  F4D9         	movff	dir_read@dp,fsr2l
 14564   0178F6  C663  F4DA         	movff	dir_read@dp+1,fsr2h
 14565   0178FA  C4DE F66A          	movff	postinc2,dir_read@fs
 14566   0178FE  C4DD F66B          	movff	postdec2,dir_read@fs+1
 14567                           
 14568                           ;fatfs/ff.c: 2313:  BYTE attr, b;;fatfs/ff.c: 2318:  while (dp->sect) {
 14569   017902  D072               	goto	l10989
 14570   017904                     l10959:
 14571                           
 14572                           ; BSR set to: 6
 14573                           ;fatfs/ff.c: 2319:   res = move_window(fs, dp->sect);
 14574   017904  C66A  F600         	movff	dir_read@fs,move_window@fs
 14575   017908  C66B  F601         	movff	dir_read@fs+1,move_window@fs+1
 14576   01790C  EE20 F016          	lfsr	2,22
 14577   017910  5162               	movf	dir_read@dp& (0+255),w,b
 14578   017912  26D9               	addwf	fsr2l,f,c
 14579   017914  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14580   017916  22DA               	addwfc	fsr2h,f,c
 14581   017918  C4DE F602          	movff	postinc2,move_window@sect
 14582   01791C  C4DE F603          	movff	postinc2,move_window@sect+1
 14583   017920  C4DE F604          	movff	postinc2,move_window@sect+2
 14584   017924  C4DE F605          	movff	postinc2,move_window@sect+3
 14585   017928  EC23  F0C4         	call	_move_window	;wreg free
 14586   01792C  0106               	movlb	6	; () banked
 14587   01792E  6F6E               	movwf	dir_read@res& (0+255),b
 14588                           
 14589                           ; BSR set to: 6
 14590                           ;fatfs/ff.c: 2320:   if (res != FR_OK) break;
 14591   017930  516E               	movf	dir_read@res& (0+255),w,b
 14592   017932  A4D8               	btfss	status,2,c
 14593   017934  D065               	goto	u13600
 14594                           
 14595                           ; BSR set to: 6
 14596                           ;fatfs/ff.c: 2321:   b = dp->dir[0];
 14597   017936  EE20 F01A          	lfsr	2,26
 14598   01793A  5162               	movf	dir_read@dp& (0+255),w,b
 14599   01793C  26D9               	addwf	fsr2l,f,c
 14600   01793E  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14601   017940  22DA               	addwfc	fsr2h,f,c
 14602   017942  C4DE F666          	movff	postinc2,??_dir_read
 14603   017946  C4DD F667          	movff	postdec2,??_dir_read+1
 14604   01794A  C666  F4D9         	movff	??_dir_read,fsr2l
 14605   01794E  C667  F4DA         	movff	??_dir_read+1,fsr2h
 14606   017952  50DF               	movf	indf2,w,c
 14607   017954  6F6D               	movwf	dir_read@b& (0+255),b
 14608                           
 14609                           ; BSR set to: 6
 14610                           ;fatfs/ff.c: 2322:   if (b == 0) {
 14611   017956  516D               	movf	dir_read@b& (0+255),w,b
 14612   017958  A4D8               	btfss	status,2,c
 14613   01795A  D003               	goto	l10971
 14614                           
 14615                           ; BSR set to: 6
 14616                           ;fatfs/ff.c: 2323:    res = FR_NO_FILE; break;
 14617   01795C  0E04               	movlw	4
 14618   01795E  6F6E               	movwf	dir_read@res& (0+255),b
 14619   017960  D04F               	goto	u13600
 14620   017962                     l10971:
 14621                           
 14622                           ; BSR set to: 6
 14623                           ;fatfs/ff.c: 2341:   {;fatfs/ff.c: 2342:    dp->obj.attr = attr = dp->dir[11] & 0x3F;
 14624   017962  EE20 F01A          	lfsr	2,26
 14625   017966  5162               	movf	dir_read@dp& (0+255),w,b
 14626   017968  26D9               	addwf	fsr2l,f,c
 14627   01796A  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14628   01796C  22DA               	addwfc	fsr2h,f,c
 14629   01796E  EE10 F00B          	lfsr	1,11
 14630   017972  50DE               	movf	postinc2,w,c
 14631   017974  26E1               	addwf	fsr1l,f,c
 14632   017976  50DD               	movf	postdec2,w,c
 14633   017978  22E2               	addwfc	fsr1h,f,c
 14634   01797A  50E7               	movf	indf1,w,c
 14635   01797C  0B3F               	andlw	63
 14636   01797E  6F6C               	movwf	dir_read@attr& (0+255),b
 14637   017980  EE20 F004          	lfsr	2,4
 14638   017984  5162               	movf	dir_read@dp& (0+255),w,b
 14639   017986  26D9               	addwf	fsr2l,f,c
 14640   017988  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14641   01798A  22DA               	addwfc	fsr2h,f,c
 14642   01798C  C66C  F4DF         	movff	dir_read@attr,indf2
 14643                           
 14644                           ; BSR set to: 6
 14645                           ;fatfs/ff.c: 2363:    if (b != 0xE5 && b != '.' && attr != 0x0F && (int)((attr & ~0x20) 
      +                          == 0x08) == vol) {
 14646   017990  0EE5               	movlw	229
 14647   017992  196D               	xorwf	dir_read@b& (0+255),w,b
 14648   017994  B4D8               	btfsc	status,2,c
 14649   017996  D019               	goto	l10983
 14650                           
 14651                           ; BSR set to: 6
 14652   017998  0E2E               	movlw	46
 14653   01799A  196D               	xorwf	dir_read@b& (0+255),w,b
 14654   01799C  B4D8               	btfsc	status,2,c
 14655   01799E  D015               	goto	l10983
 14656                           
 14657                           ; BSR set to: 6
 14658   0179A0  0E0F               	movlw	15
 14659   0179A2  196C               	xorwf	dir_read@attr& (0+255),w,b
 14660   0179A4  B4D8               	btfsc	status,2,c
 14661   0179A6  D011               	goto	l10983
 14662                           
 14663                           ; BSR set to: 6
 14664   0179A8  516C               	movf	dir_read@attr& (0+255),w,b
 14665   0179AA  0BDF               	andlw	223
 14666   0179AC  0A08               	xorlw	8
 14667   0179AE  A4D8               	btfss	status,2,c
 14668   0179B0  D002               	goto	u13560
 14669   0179B2  0E01               	movlw	1
 14670   0179B4  D001               	goto	u13570
 14671   0179B6                     u13560:
 14672   0179B6  0E00               	movlw	0
 14673   0179B8                     u13570:
 14674   0179B8  6F66               	movwf	??_dir_read& (0+255),b
 14675   0179BA  6B67               	clrf	(??_dir_read+1)& (0+255),b
 14676   0179BC  5164               	movf	dir_read@vol& (0+255),w,b
 14677   0179BE  1966               	xorwf	??_dir_read& (0+255),w,b
 14678   0179C0  E104               	bnz	l10983
 14679   0179C2  5165               	movf	(dir_read@vol+1)& (0+255),w,b
 14680   0179C4  1967               	xorwf	(??_dir_read+1)& (0+255),w,b
 14681   0179C6  B4D8               	btfsc	status,2,c
 14682   0179C8  D01B               	goto	u13600
 14683   0179CA                     l10983:
 14684                           
 14685                           ; BSR set to: 6
 14686                           ;fatfs/ff.c: 2367:   };fatfs/ff.c: 2368:   res = dir_next(dp, 0);
 14687   0179CA  C662  F648         	movff	dir_read@dp,dir_next@dp
 14688   0179CE  C663  F649         	movff	dir_read@dp+1,dir_next@dp+1
 14689   0179D2  0E00               	movlw	0
 14690   0179D4  6F4B               	movwf	(dir_next@stretch+1)& (0+255),b
 14691   0179D6  0E00               	movlw	0
 14692   0179D8  6F4A               	movwf	dir_next@stretch& (0+255),b
 14693   0179DA  ECB5  F09E         	call	_dir_next	;wreg free
 14694   0179DE  0106               	movlb	6	; () banked
 14695   0179E0  6F6E               	movwf	dir_read@res& (0+255),b
 14696                           
 14697                           ; BSR set to: 6
 14698                           ;fatfs/ff.c: 2369:   if (res != FR_OK) break;
 14699   0179E2  516E               	movf	dir_read@res& (0+255),w,b
 14700   0179E4  A4D8               	btfss	status,2,c
 14701   0179E6  D00C               	goto	u13600
 14702   0179E8                     l10989:
 14703                           
 14704                           ; BSR set to: 6
 14705                           ;fatfs/ff.c: 2318:  while (dp->sect) {
 14706   0179E8  EE20 F016          	lfsr	2,22
 14707   0179EC  5162               	movf	dir_read@dp& (0+255),w,b
 14708   0179EE  26D9               	addwf	fsr2l,f,c
 14709   0179F0  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14710   0179F2  22DA               	addwfc	fsr2h,f,c
 14711   0179F4  50DE               	movf	postinc2,w,c
 14712   0179F6  10DE               	iorwf	postinc2,w,c
 14713   0179F8  10DE               	iorwf	postinc2,w,c
 14714   0179FA  10DE               	iorwf	postinc2,w,c
 14715   0179FC  A4D8               	btfss	status,2,c
 14716   0179FE  D782               	goto	l10959
 14717   017A00                     u13600:
 14718                           
 14719                           ; BSR set to: 6
 14720                           ;fatfs/ff.c: 2372:  if (res != FR_OK) dp->sect = 0;
 14721   017A00  516E               	movf	dir_read@res& (0+255),w,b
 14722   017A02  B4D8               	btfsc	status,2,c
 14723   017A04  D00A               	goto	l10995
 14724                           
 14725                           ; BSR set to: 6
 14726   017A06  EE20 F016          	lfsr	2,22
 14727   017A0A  5162               	movf	dir_read@dp& (0+255),w,b
 14728   017A0C  26D9               	addwf	fsr2l,f,c
 14729   017A0E  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14730   017A10  22DA               	addwfc	fsr2h,f,c
 14731   017A12  6ADE               	clrf	postinc2,c
 14732   017A14  6ADE               	clrf	postinc2,c
 14733   017A16  6ADE               	clrf	postinc2,c
 14734   017A18  6ADD               	clrf	postdec2,c
 14735   017A1A                     l10995:
 14736                           
 14737                           ; BSR set to: 6
 14738                           ;fatfs/ff.c: 2373:  return res;
 14739   017A1A  516E               	movf	dir_read@res& (0+255),w,b
 14740                           
 14741                           ; BSR set to: 6
 14742   017A1C  0012               	return		;funcret
 14743   017A1E                     __end_of_dir_read:
 14744                           	callstack 0
 14745                           
 14746 ;; *************** function _f_opendir *****************
 14747 ;; Defined at:
 14748 ;;		line 4597 in file "fatfs/ff.c"
 14749 ;; Parameters:    Size  Location     Type
 14750 ;;  dp              2  175[BANK6 ] PTR struct .
 14751 ;;		 -> fsdir(40), 
 14752 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 14753 ;;		 -> tmp_buf(512), STR_65(2), STR_62(5), 
 14754 ;; Auto vars:     Size  Location     Type
 14755 ;;  fs              2  179[BANK6 ] PTR struct .
 14756 ;;		 -> fs(560), NULL(0), 
 14757 ;;  res             1  181[BANK6 ] enum E275
 14758 ;; Return value:  Size  Location     Type
 14759 ;;                  1    wreg      enum E275
 14760 ;; Registers used:
 14761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14762 ;; Tracked objects:
 14763 ;;		On entry : 3F/6
 14764 ;;		On exit  : 3F/6
 14765 ;;		Unchanged: 0/0
 14766 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14767 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14768 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14770 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14771 ;;Total ram usage:        7 bytes
 14772 ;; Hardware stack levels used: 1
 14773 ;; Hardware stack levels required when called: 18
 14774 ;; This function calls:
 14775 ;;		_dir_sdi
 14776 ;;		_follow_path
 14777 ;;		_ld_clust
 14778 ;;		_mount_volume
 14779 ;; This function is called by:
 14780 ;;		_menu_select
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           	psect	text10
 14785   017B4A                     __ptext10:
 14786                           	callstack 0
 14787   017B4A                     _f_opendir:
 14788                           	callstack 107
 14789                           
 14790                           ; BSR set to: 6
 14791                           ;fatfs/ff.c: 4598:  DIR* dp,;fatfs/ff.c: 4599:  const TCHAR* path;fatfs/ff.c: 4601: {;fa
      +                          tfs/ff.c: 4602:  FRESULT res;;fatfs/ff.c: 4603:  FATFS *fs;;fatfs/ff.c: 4607:  if (!dp) 
      +                          return FR_INVALID_OBJECT;
 14792                           
 14793                           ; BSR set to: 6
 14794                           ;incstack = 0
 14795   017B4A  51AF               	movf	f_opendir@dp& (0+255),w,b
 14796   017B4C  11B0               	iorwf	(f_opendir@dp+1)& (0+255),w,b
 14797   017B4E  A4D8               	btfss	status,2,c
 14798   017B50  D002               	goto	l12103
 14799                           
 14800                           ; BSR set to: 6
 14801   017B52  0E09               	movlw	9
 14802   017B54  0012               	return	
 14803   017B56                     l12103:
 14804                           
 14805                           ; BSR set to: 6
 14806                           ;fatfs/ff.c: 4610:  res = mount_volume(&path, &fs, 0);
 14807   017B56  0EB1               	movlw	low f_opendir@path
 14808   017B58  6F81               	movwf	mount_volume@path& (0+255),b
 14809   017B5A  0E06               	movlw	high f_opendir@path
 14810   017B5C  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 14811   017B5E  0EB3               	movlw	low f_opendir@fs
 14812   017B60  6F83               	movwf	mount_volume@rfs& (0+255),b
 14813   017B62  0E06               	movlw	high f_opendir@fs
 14814   017B64  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 14815   017B66  0E00               	movlw	0
 14816   017B68  6F85               	movwf	mount_volume@mode& (0+255),b
 14817   017B6A  EC70  F084         	call	_mount_volume	;wreg free
 14818   017B6E  0106               	movlb	6	; () banked
 14819   017B70  6FB5               	movwf	f_opendir@res& (0+255),b
 14820                           
 14821                           ; BSR set to: 6
 14822                           ;fatfs/ff.c: 4611:  if (res == FR_OK) {
 14823   017B72  51B5               	movf	f_opendir@res& (0+255),w,b
 14824   017B74  A4D8               	btfss	status,2,c
 14825   017B76  D070               	goto	l757
 14826                           
 14827                           ; BSR set to: 6
 14828                           ;fatfs/ff.c: 4612:   dp->obj.fs = fs;
 14829   017B78  C6AF  F4D9         	movff	f_opendir@dp,fsr2l
 14830   017B7C  C6B0  F4DA         	movff	f_opendir@dp+1,fsr2h
 14831   017B80  C6B3  F4DE         	movff	f_opendir@fs,postinc2
 14832   017B84  C6B4  F4DD         	movff	f_opendir@fs+1,postdec2
 14833                           
 14834                           ; BSR set to: 6
 14835                           ;fatfs/ff.c: 4614:   res = follow_path(dp, path);
 14836   017B88  C6AF  F66A         	movff	f_opendir@dp,follow_path@dp
 14837   017B8C  C6B0  F66B         	movff	f_opendir@dp+1,follow_path@dp+1
 14838   017B90  C6B1  F66C         	movff	f_opendir@path,follow_path@path
 14839   017B94  C6B2  F66D         	movff	f_opendir@path+1,follow_path@path+1
 14840   017B98  EC91  F0B5         	call	_follow_path	;wreg free
 14841   017B9C  6FB5               	movwf	f_opendir@res& (0+255),b
 14842                           
 14843                           ; BSR set to: 6
 14844                           ;fatfs/ff.c: 4615:   if (res == FR_OK) {
 14845   017B9E  51B5               	movf	f_opendir@res& (0+255),w,b
 14846   017BA0  A4D8               	btfss	status,2,c
 14847   017BA2  D054               	goto	l12125
 14848                           
 14849                           ; BSR set to: 6
 14850                           ;fatfs/ff.c: 4616:    if (!(dp->fn[11] & 0x80)) {
 14851   017BA4  EE20 F027          	lfsr	2,39
 14852   017BA8  51AF               	movf	f_opendir@dp& (0+255),w,b
 14853   017BAA  26D9               	addwf	fsr2l,f,c
 14854   017BAC  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 14855   017BAE  22DA               	addwfc	fsr2h,f,c
 14856   017BB0  BEDF               	btfsc	indf2,7,c
 14857   017BB2  D02A               	goto	l759
 14858                           
 14859                           ; BSR set to: 6
 14860                           ;fatfs/ff.c: 4617:     if (dp->obj.attr & 0x10) {
 14861   017BB4  EE20 F004          	lfsr	2,4
 14862   017BB8  51AF               	movf	f_opendir@dp& (0+255),w,b
 14863   017BBA  26D9               	addwf	fsr2l,f,c
 14864   017BBC  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 14865   017BBE  22DA               	addwfc	fsr2h,f,c
 14866   017BC0  A8DF               	btfss	indf2,4,c
 14867   017BC2  D020               	goto	l12119
 14868                           
 14869                           ; BSR set to: 6
 14870                           ;fatfs/ff.c: 4626:      {;fatfs/ff.c: 4627:       dp->obj.sclust = ld_clust(fs, dp->dir)
      +                          ;
 14871   017BC4  C6B3  F508         	movff	f_opendir@fs,ld_clust@fs
 14872   017BC8  C6B4  F509         	movff	f_opendir@fs+1,ld_clust@fs+1
 14873   017BCC  EE20 F01A          	lfsr	2,26
 14874   017BD0  51AF               	movf	f_opendir@dp& (0+255),w,b
 14875   017BD2  26D9               	addwf	fsr2l,f,c
 14876   017BD4  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 14877   017BD6  22DA               	addwfc	fsr2h,f,c
 14878   017BD8  C4DE F50A          	movff	postinc2,ld_clust@dir
 14879   017BDC  C4DD F50B          	movff	postdec2,ld_clust@dir+1
 14880   017BE0  EC4B  F0CA         	call	_ld_clust	;wreg free
 14881   017BE4  0106               	movlb	6	; () banked
 14882   017BE6  EE20 F006          	lfsr	2,6
 14883   017BEA  51AF               	movf	f_opendir@dp& (0+255),w,b
 14884   017BEC  26D9               	addwf	fsr2l,f,c
 14885   017BEE  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 14886   017BF0  22DA               	addwfc	fsr2h,f,c
 14887   017BF2  C508  F4DE         	movff	?_ld_clust,postinc2
 14888   017BF6  C509  F4DE         	movff	?_ld_clust+1,postinc2
 14889   017BFA  C50A  F4DE         	movff	?_ld_clust+2,postinc2
 14890   017BFE  C50B  F4DE         	movff	?_ld_clust+3,postinc2
 14891                           
 14892                           ;fatfs/ff.c: 4628:      };fatfs/ff.c: 4629:     } else {
 14893   017C02  D002               	goto	l759
 14894   017C04                     l12119:
 14895                           
 14896                           ; BSR set to: 6
 14897                           ;fatfs/ff.c: 4630:      res = FR_NO_PATH;
 14898   017C04  0E05               	movlw	5
 14899   017C06  6FB5               	movwf	f_opendir@res& (0+255),b
 14900   017C08                     l759:
 14901                           
 14902                           ; BSR set to: 6
 14903                           ;fatfs/ff.c: 4633:    if (res == FR_OK) {
 14904   017C08  51B5               	movf	f_opendir@res& (0+255),w,b
 14905   017C0A  A4D8               	btfss	status,2,c
 14906   017C0C  D01F               	goto	l12125
 14907                           
 14908                           ; BSR set to: 6
 14909                           ;fatfs/ff.c: 4634:     dp->obj.id = fs->id;
 14910   017C0E  EE20 F006          	lfsr	2,6
 14911   017C12  51B3               	movf	f_opendir@fs& (0+255),w,b
 14912   017C14  26D9               	addwf	fsr2l,f,c
 14913   017C16  51B4               	movf	(f_opendir@fs+1)& (0+255),w,b
 14914   017C18  22DA               	addwfc	fsr2h,f,c
 14915   017C1A  EE10 F002          	lfsr	1,2
 14916   017C1E  51AF               	movf	f_opendir@dp& (0+255),w,b
 14917   017C20  26E1               	addwf	fsr1l,f,c
 14918   017C22  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 14919   017C24  22E2               	addwfc	fsr1h,f,c
 14920   017C26  C4DE F4E6          	movff	postinc2,postinc1
 14921   017C2A  C4DD F4E5          	movff	postdec2,postdec1
 14922                           
 14923                           ; BSR set to: 6
 14924                           ;fatfs/ff.c: 4635:     res = dir_sdi(dp, 0);
 14925   017C2E  C6AF  F624         	movff	f_opendir@dp,dir_sdi@dp
 14926   017C32  C6B0  F625         	movff	f_opendir@dp+1,dir_sdi@dp+1
 14927   017C36  0E00               	movlw	0
 14928   017C38  6F26               	movwf	dir_sdi@ofs& (0+255),b
 14929   017C3A  0E00               	movlw	0
 14930   017C3C  6F27               	movwf	(dir_sdi@ofs+1)& (0+255),b
 14931   017C3E  0E00               	movlw	0
 14932   017C40  6F28               	movwf	(dir_sdi@ofs+2)& (0+255),b
 14933   017C42  0E00               	movlw	0
 14934   017C44  6F29               	movwf	(dir_sdi@ofs+3)& (0+255),b
 14935   017C46  EC33  F0A5         	call	_dir_sdi	;wreg free
 14936   017C4A  6FB5               	movwf	f_opendir@res& (0+255),b
 14937   017C4C                     l12125:
 14938                           
 14939                           ; BSR set to: 6
 14940                           ;fatfs/ff.c: 4649:   if (res == FR_NO_FILE) res = FR_NO_PATH;
 14941   017C4C  0E04               	movlw	4
 14942   017C4E  19B5               	xorwf	f_opendir@res& (0+255),w,b
 14943   017C50  A4D8               	btfss	status,2,c
 14944   017C52  D002               	goto	l757
 14945                           
 14946                           ; BSR set to: 6
 14947   017C54  0E05               	movlw	5
 14948   017C56  6FB5               	movwf	f_opendir@res& (0+255),b
 14949   017C58                     l757:
 14950                           
 14951                           ; BSR set to: 6
 14952                           ;fatfs/ff.c: 4651:  if (res != FR_OK) dp->obj.fs = 0;
 14953   017C58  51B5               	movf	f_opendir@res& (0+255),w,b
 14954   017C5A  B4D8               	btfsc	status,2,c
 14955   017C5C  D006               	goto	l12131
 14956                           
 14957                           ; BSR set to: 6
 14958   017C5E  C6AF  F4D9         	movff	f_opendir@dp,fsr2l
 14959   017C62  C6B0  F4DA         	movff	f_opendir@dp+1,fsr2h
 14960   017C66  6ADE               	clrf	postinc2,c
 14961   017C68  6ADD               	clrf	postdec2,c
 14962   017C6A                     l12131:
 14963                           
 14964                           ; BSR set to: 6
 14965                           ;fatfs/ff.c: 4653:  return res;
 14966   017C6A  51B5               	movf	f_opendir@res& (0+255),w,b
 14967                           
 14968                           ; BSR set to: 6
 14969   017C6C  0012               	return		;funcret
 14970   017C6E                     __end_of_f_opendir:
 14971                           	callstack 0
 14972                           
 14973 ;; *************** function _f_open *****************
 14974 ;; Defined at:
 14975 ;;		line 3717 in file "fatfs/ff.c"
 14976 ;; Parameters:    Size  Location     Type
 14977 ;;  fp              2  175[BANK6 ] PTR struct .
 14978 ;;		 -> files(3276), 
 14979 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 14980 ;;		 -> tmp_buf(512), STR_65(2), STR_62(5), 
 14981 ;;  mode            1  179[BANK6 ] unsigned char 
 14982 ;; Auto vars:     Size  Location     Type
 14983 ;;  dj             40  215[BANK6 ] struct .
 14984 ;;  clst            4  208[BANK6 ] unsigned long 
 14985 ;;  ofs             4  204[BANK6 ] unsigned long 
 14986 ;;  sc              4  200[BANK6 ] unsigned long 
 14987 ;;  cl              4  196[BANK6 ] unsigned long 
 14988 ;;  tm              4  192[BANK6 ] unsigned long 
 14989 ;;  bcs             4  188[BANK6 ] unsigned long 
 14990 ;;  fs              2  212[BANK6 ] PTR struct .
 14991 ;;		 -> fs(560), NULL(0), 
 14992 ;;  res             1  214[BANK6 ] enum E275
 14993 ;; Return value:  Size  Location     Type
 14994 ;;                  1    wreg      enum E275
 14995 ;; Registers used:
 14996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14997 ;; Tracked objects:
 14998 ;;		On entry : 3F/6
 14999 ;;		On exit  : 3F/6
 15000 ;;		Unchanged: 0/0
 15001 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15002 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15003 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15004 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15005 ;;      Totals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15006 ;;Total ram usage:       80 bytes
 15007 ;; Hardware stack levels used: 1
 15008 ;; Hardware stack levels required when called: 18
 15009 ;; This function calls:
 15010 ;;		_clst2sect
 15011 ;;		_dir_register
 15012 ;;		_disk_read
 15013 ;;		_follow_path
 15014 ;;		_get_fat
 15015 ;;		_get_fattime
 15016 ;;		_ld_clust
 15017 ;;		_ld_dword
 15018 ;;		_memset
 15019 ;;		_mount_volume
 15020 ;;		_move_window
 15021 ;;		_remove_chain
 15022 ;;		_st_clust
 15023 ;;		_st_dword
 15024 ;; This function is called by:
 15025 ;;		_menu_select
 15026 ;; This function uses a non-reentrant model
 15027 ;;
 15028                           
 15029                           	psect	text11
 15030   011F48                     __ptext11:
 15031                           	callstack 0
 15032   011F48                     _f_open:
 15033                           	callstack 107
 15034                           
 15035                           ; BSR set to: 6
 15036                           ;fatfs/ff.c: 3718:  FIL* fp,;fatfs/ff.c: 3719:  const TCHAR* path,;fatfs/ff.c: 3720:  BY
      +                          TE mode;fatfs/ff.c: 3722: {;fatfs/ff.c: 3723:  FRESULT res;;fatfs/ff.c: 3724:  DIR dj;;f
      +                          atfs/ff.c: 3725:  FATFS *fs;;fatfs/ff.c: 3727:  DWORD cl, bcs, clst, tm;;fatfs/ff.c: 372
      +                          8:  LBA_t sc;;fatfs/ff.c: 3729:  FSIZE_t ofs;;fatfs/ff.c: 3734:  if (!fp) return FR_INVA
      +                          LID_OBJECT;
 15037                           
 15038                           ; BSR set to: 6
 15039                           ;incstack = 0
 15040   011F48  51AF               	movf	f_open@fp& (0+255),w,b
 15041   011F4A  11B0               	iorwf	(f_open@fp+1)& (0+255),w,b
 15042   011F4C  A4D8               	btfss	status,2,c
 15043   011F4E  D002               	goto	l11451
 15044                           
 15045                           ; BSR set to: 6
 15046   011F50  0E09               	movlw	9
 15047   011F52  0012               	return	
 15048   011F54                     l11451:
 15049                           
 15050                           ; BSR set to: 6
 15051                           
 15052                           ; BSR set to: 6
 15053   011F54  0E3F               	movlw	63
 15054   011F56  17B3               	andwf	f_open@mode& (0+255),f,b
 15055                           
 15056                           ; BSR set to: 6
 15057                           ;fatfs/ff.c: 3738:  res = mount_volume(&path, &fs, mode);
 15058   011F58  0EB1               	movlw	low f_open@path
 15059   011F5A  6F81               	movwf	mount_volume@path& (0+255),b
 15060   011F5C  0E06               	movlw	high f_open@path
 15061   011F5E  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 15062   011F60  0ED4               	movlw	low f_open@fs
 15063   011F62  6F83               	movwf	mount_volume@rfs& (0+255),b
 15064   011F64  0E06               	movlw	high f_open@fs
 15065   011F66  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 15066   011F68  C6B3  F685         	movff	f_open@mode,mount_volume@mode
 15067   011F6C  EC70  F084         	call	_mount_volume	;wreg free
 15068   011F70  0106               	movlb	6	; () banked
 15069   011F72  6FD6               	movwf	f_open@res& (0+255),b
 15070                           
 15071                           ; BSR set to: 6
 15072                           ;fatfs/ff.c: 3739:  if (res == FR_OK) {
 15073   011F74  51D6               	movf	f_open@res& (0+255),w,b
 15074   011F76  A4D8               	btfss	status,2,c
 15075   011F78  D2EA               	goto	l632
 15076                           
 15077                           ; BSR set to: 6
 15078                           ;fatfs/ff.c: 3740:   dj.obj.fs = fs;
 15079   011F7A  C6D4  F6D7         	movff	f_open@fs,f_open@dj
 15080   011F7E  C6D5  F6D8         	movff	f_open@fs+1,f_open@dj+1
 15081                           
 15082                           ; BSR set to: 6
 15083                           ;fatfs/ff.c: 3742:   res = follow_path(&dj, path);
 15084   011F82  0ED7               	movlw	low f_open@dj
 15085   011F84  6F6A               	movwf	follow_path@dp& (0+255),b
 15086   011F86  0E06               	movlw	high f_open@dj
 15087   011F88  6F6B               	movwf	(follow_path@dp+1)& (0+255),b
 15088   011F8A  C6B1  F66C         	movff	f_open@path,follow_path@path
 15089   011F8E  C6B2  F66D         	movff	f_open@path+1,follow_path@path+1
 15090   011F92  EC91  F0B5         	call	_follow_path	;wreg free
 15091   011F96  6FD6               	movwf	f_open@res& (0+255),b
 15092                           
 15093                           ; BSR set to: 6
 15094                           ;fatfs/ff.c: 3744:   if (res == FR_OK) {
 15095   011F98  51D6               	movf	f_open@res& (0+255),w,b
 15096   011F9A  B4D8               	btfsc	status,2,c
 15097                           
 15098                           ; BSR set to: 6
 15099                           ;fatfs/ff.c: 3745:    if (dj.fn[11] & 0x80) {
 15100   011F9C  AFFE               	btfss	(f_open@dj+39)& (0+255),7,b
 15101   011F9E  D002               	goto	l11471
 15102                           
 15103                           ; BSR set to: 6
 15104                           ;fatfs/ff.c: 3746:     res = FR_INVALID_NAME;
 15105   011FA0  0E06               	movlw	6
 15106   011FA2  6FD6               	movwf	f_open@res& (0+255),b
 15107   011FA4                     l11471:
 15108                           
 15109                           ; BSR set to: 6
 15110                           ;fatfs/ff.c: 3755:   if (mode & (0x08 | 0x10 | 0x04)) {
 15111   011FA4  C6B3  F6B4         	movff	f_open@mode,??_f_open
 15112   011FA8  0E1C               	movlw	28
 15113   011FAA  17B4               	andwf	??_f_open& (0+255),f,b
 15114   011FAC  B4D8               	btfsc	status,2,c
 15115   011FAE  D0E9               	goto	l11517
 15116                           
 15117                           ; BSR set to: 6
 15118                           ;fatfs/ff.c: 3756:    if (res != FR_OK) {
 15119   011FB0  51D6               	movf	f_open@res& (0+255),w,b
 15120   011FB2  B4D8               	btfsc	status,2,c
 15121   011FB4  D00D               	goto	l11481
 15122                           
 15123                           ; BSR set to: 6
 15124                           ;fatfs/ff.c: 3757:     if (res == FR_NO_FILE) {
 15125   011FB6  0E04               	movlw	4
 15126   011FB8  19D6               	xorwf	f_open@res& (0+255),w,b
 15127   011FBA  A4D8               	btfss	status,2,c
 15128   011FBC  D007               	goto	l11479
 15129                           
 15130                           ; BSR set to: 6
 15131                           ;fatfs/ff.c: 3761:      res = dir_register(&dj);
 15132   011FBE  0ED7               	movlw	low f_open@dj
 15133   011FC0  6F6E               	movwf	dir_register@dp& (0+255),b
 15134   011FC2  0E06               	movlw	high f_open@dj
 15135   011FC4  6F6F               	movwf	(dir_register@dp+1)& (0+255),b
 15136   011FC6  ECFE  F0C2         	call	_dir_register	;wreg free
 15137   011FCA  6FD6               	movwf	f_open@res& (0+255),b
 15138   011FCC                     l11479:
 15139                           
 15140                           ; BSR set to: 6
 15141                           ;fatfs/ff.c: 3764:     mode |= 0x08;
 15142   011FCC  87B3               	bsf	f_open@mode& (0+255),3,b
 15143                           
 15144                           ;fatfs/ff.c: 3765:    }
 15145   011FCE  D00C               	goto	l617
 15146   011FD0                     l11481:
 15147                           
 15148                           ; BSR set to: 6
 15149                           ;fatfs/ff.c: 3767:     if (dj.obj.attr & (0x01 | 0x10)) {
 15150   011FD0  C6DB  F6B4         	movff	f_open@dj+4,??_f_open
 15151   011FD4  0E11               	movlw	17
 15152   011FD6  17B4               	andwf	??_f_open& (0+255),f,b
 15153   011FD8  B4D8               	btfsc	status,2,c
 15154   011FDA  D002               	goto	l618
 15155                           
 15156                           ; BSR set to: 6
 15157                           ;fatfs/ff.c: 3768:      res = FR_DENIED;
 15158   011FDC  0E07               	movlw	7
 15159   011FDE  D003               	goto	L2
 15160   011FE0                     l618:
 15161                           
 15162                           ; BSR set to: 6
 15163                           ;fatfs/ff.c: 3770:      if (mode & 0x04) res = FR_EXIST;
 15164   011FE0  A5B3               	btfss	f_open@mode& (0+255),2,b
 15165   011FE2  D002               	goto	l617
 15166                           
 15167                           ; BSR set to: 6
 15168   011FE4  0E08               	movlw	8
 15169   011FE6                     L2:
 15170   011FE6  6FD6               	movwf	f_open@res& (0+255),b
 15171   011FE8                     l617:
 15172                           
 15173                           ; BSR set to: 6
 15174                           ;fatfs/ff.c: 3773:    if (res == FR_OK && (mode & 0x08)) {
 15175   011FE8  51D6               	movf	f_open@res& (0+255),w,b
 15176   011FEA  B4D8               	btfsc	status,2,c
 15177                           
 15178                           ; BSR set to: 6
 15179   011FEC  A7B3               	btfss	f_open@mode& (0+255),3,b
 15180   011FEE  D0D5               	goto	l624
 15181                           
 15182                           ; BSR set to: 6
 15183                           ;fatfs/ff.c: 3792:     {;fatfs/ff.c: 3794:      tm = get_fattime();
 15184   011FF0  ECD9  F0CF         	call	_get_fattime	;wreg free
 15185   011FF4  C501  F6C0         	movff	?_get_fattime,f_open@tm
 15186   011FF8  C502  F6C1         	movff	?_get_fattime+1,f_open@tm+1
 15187   011FFC  C503  F6C2         	movff	?_get_fattime+2,f_open@tm+2
 15188   012000  C504  F6C3         	movff	?_get_fattime+3,f_open@tm+3
 15189                           
 15190                           ; BSR set to: 6
 15191                           ;fatfs/ff.c: 3795:      st_dword(dj.dir + 14, tm);
 15192   012004  0E0E               	movlw	14
 15193   012006  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 15194   012008  6E01               	movwf	st_dword@ptr^(0+1280),c
 15195   01200A  0E00               	movlw	0
 15196   01200C  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 15197   01200E  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 15198   012010  C6C0  F503         	movff	f_open@tm,st_dword@val
 15199   012014  C6C1  F504         	movff	f_open@tm+1,st_dword@val+1
 15200   012018  C6C2  F505         	movff	f_open@tm+2,st_dword@val+2
 15201   01201C  C6C3  F506         	movff	f_open@tm+3,st_dword@val+3
 15202   012020  EC68  F0CB         	call	_st_dword	;wreg free
 15203                           
 15204                           ; BSR set to: 6
 15205                           ;fatfs/ff.c: 3796:      st_dword(dj.dir + 22, tm);
 15206   012024  0E16               	movlw	22
 15207   012026  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 15208   012028  6E01               	movwf	st_dword@ptr^(0+1280),c
 15209   01202A  0E00               	movlw	0
 15210   01202C  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 15211   01202E  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 15212   012030  C6C0  F503         	movff	f_open@tm,st_dword@val
 15213   012034  C6C1  F504         	movff	f_open@tm+1,st_dword@val+1
 15214   012038  C6C2  F505         	movff	f_open@tm+2,st_dword@val+2
 15215   01203C  C6C3  F506         	movff	f_open@tm+3,st_dword@val+3
 15216   012040  EC68  F0CB         	call	_st_dword	;wreg free
 15217                           
 15218                           ; BSR set to: 6
 15219                           ;fatfs/ff.c: 3797:      cl = ld_clust(fs, dj.dir);
 15220   012044  C6D4  F508         	movff	f_open@fs,ld_clust@fs
 15221   012048  C6D5  F509         	movff	f_open@fs+1,ld_clust@fs+1
 15222   01204C  C6F1  F50A         	movff	f_open@dj+26,ld_clust@dir
 15223   012050  C6F2  F50B         	movff	f_open@dj+27,ld_clust@dir+1
 15224   012054  EC4B  F0CA         	call	_ld_clust	;wreg free
 15225   012058  C508  F6C4         	movff	?_ld_clust,f_open@cl
 15226   01205C  C509  F6C5         	movff	?_ld_clust+1,f_open@cl+1
 15227   012060  C50A  F6C6         	movff	?_ld_clust+2,f_open@cl+2
 15228   012064  C50B  F6C7         	movff	?_ld_clust+3,f_open@cl+3
 15229                           
 15230                           ;fatfs/ff.c: 3798:      dj.dir[11] = 0x20;
 15231   012068  0106               	movlb	6	; () banked
 15232   01206A  EE20 F00B          	lfsr	2,11
 15233   01206E  51F1               	movf	(f_open@dj+26)& (0+255),w,b
 15234   012070  26D9               	addwf	fsr2l,f,c
 15235   012072  51F2               	movf	(f_open@dj+27)& (0+255),w,b
 15236   012074  22DA               	addwfc	fsr2h,f,c
 15237   012076  0E20               	movlw	32
 15238   012078  6EDF               	movwf	indf2,c
 15239                           
 15240                           ; BSR set to: 6
 15241                           ;fatfs/ff.c: 3799:      st_clust(fs, dj.dir, 0);
 15242   01207A  C6D4  F505         	movff	f_open@fs,st_clust@fs
 15243   01207E  C6D5  F506         	movff	f_open@fs+1,st_clust@fs+1
 15244   012082  C6F1  F507         	movff	f_open@dj+26,st_clust@dir
 15245   012086  C6F2  F508         	movff	f_open@dj+27,st_clust@dir+1
 15246   01208A  0E00               	movlw	0
 15247   01208C  6E09               	movwf	st_clust@cl^(0+1280),c
 15248   01208E  0E00               	movlw	0
 15249   012090  6E0A               	movwf	(st_clust@cl+1)^(0+1280),c
 15250   012092  0E00               	movlw	0
 15251   012094  6E0B               	movwf	(st_clust@cl+2)^(0+1280),c
 15252   012096  0E00               	movlw	0
 15253   012098  6E0C               	movwf	(st_clust@cl+3)^(0+1280),c
 15254   01209A  ECF4  F0CD         	call	_st_clust	;wreg free
 15255                           
 15256                           ;fatfs/ff.c: 3800:      st_dword(dj.dir + 28, 0);
 15257   01209E  0E1C               	movlw	28
 15258   0120A0  0106               	movlb	6	; () banked
 15259   0120A2  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 15260   0120A4  6E01               	movwf	st_dword@ptr^(0+1280),c
 15261   0120A6  0E00               	movlw	0
 15262   0120A8  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 15263   0120AA  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 15264   0120AC  0E00               	movlw	0
 15265   0120AE  6E03               	movwf	st_dword@val^(0+1280),c
 15266   0120B0  0E00               	movlw	0
 15267   0120B2  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 15268   0120B4  0E00               	movlw	0
 15269   0120B6  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 15270   0120B8  0E00               	movlw	0
 15271   0120BA  6E06               	movwf	(st_dword@val+3)^(0+1280),c
 15272   0120BC  EC68  F0CB         	call	_st_dword	;wreg free
 15273                           
 15274                           ; BSR set to: 6
 15275                           ;fatfs/ff.c: 3801:      fs->wflag = 1;
 15276   0120C0  EE20 F004          	lfsr	2,4
 15277   0120C4  51D4               	movf	f_open@fs& (0+255),w,b
 15278   0120C6  26D9               	addwf	fsr2l,f,c
 15279   0120C8  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15280   0120CA  22DA               	addwfc	fsr2h,f,c
 15281   0120CC  0E01               	movlw	1
 15282   0120CE  6EDF               	movwf	indf2,c
 15283                           
 15284                           ; BSR set to: 6
 15285                           ;fatfs/ff.c: 3802:      if (cl != 0) {
 15286   0120D0  51C4               	movf	f_open@cl& (0+255),w,b
 15287   0120D2  11C5               	iorwf	(f_open@cl+1)& (0+255),w,b
 15288   0120D4  11C6               	iorwf	(f_open@cl+2)& (0+255),w,b
 15289   0120D6  11C7               	iorwf	(f_open@cl+3)& (0+255),w,b
 15290   0120D8  B4D8               	btfsc	status,2,c
 15291   0120DA  D05F               	goto	l624
 15292                           
 15293                           ; BSR set to: 6
 15294                           ;fatfs/ff.c: 3803:       sc = fs->winsect;
 15295   0120DC  EE20 F02C          	lfsr	2,44
 15296   0120E0  51D4               	movf	f_open@fs& (0+255),w,b
 15297   0120E2  26D9               	addwf	fsr2l,f,c
 15298   0120E4  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15299   0120E6  22DA               	addwfc	fsr2h,f,c
 15300   0120E8  C4DE F6C8          	movff	postinc2,f_open@sc
 15301   0120EC  C4DE F6C9          	movff	postinc2,f_open@sc+1
 15302   0120F0  C4DE F6CA          	movff	postinc2,f_open@sc+2
 15303   0120F4  C4DE F6CB          	movff	postinc2,f_open@sc+3
 15304                           
 15305                           ; BSR set to: 6
 15306                           ;fatfs/ff.c: 3804:       res = remove_chain(&dj.obj, cl, 0);
 15307   0120F8  0ED7               	movlw	low f_open@dj
 15308   0120FA  6F2B               	movwf	remove_chain@obj& (0+255),b
 15309   0120FC  0E06               	movlw	high f_open@dj
 15310   0120FE  6F2C               	movwf	(remove_chain@obj+1)& (0+255),b
 15311   012100  C6C4  F62D         	movff	f_open@cl,remove_chain@clst
 15312   012104  C6C5  F62E         	movff	f_open@cl+1,remove_chain@clst+1
 15313   012108  C6C6  F62F         	movff	f_open@cl+2,remove_chain@clst+2
 15314   01210C  C6C7  F630         	movff	f_open@cl+3,remove_chain@clst+3
 15315   012110  0E00               	movlw	0
 15316   012112  6F31               	movwf	remove_chain@pclst& (0+255),b
 15317   012114  0E00               	movlw	0
 15318   012116  6F32               	movwf	(remove_chain@pclst+1)& (0+255),b
 15319   012118  0E00               	movlw	0
 15320   01211A  6F33               	movwf	(remove_chain@pclst+2)& (0+255),b
 15321   01211C  0E00               	movlw	0
 15322   01211E  6F34               	movwf	(remove_chain@pclst+3)& (0+255),b
 15323   012120  ECE2  F0B3         	call	_remove_chain	;wreg free
 15324   012124  6FD6               	movwf	f_open@res& (0+255),b
 15325                           
 15326                           ; BSR set to: 6
 15327                           ;fatfs/ff.c: 3805:       if (res == FR_OK) {
 15328   012126  51D6               	movf	f_open@res& (0+255),w,b
 15329   012128  A4D8               	btfss	status,2,c
 15330   01212A  D037               	goto	l624
 15331                           
 15332                           ; BSR set to: 6
 15333                           ;fatfs/ff.c: 3806:        res = move_window(fs, sc);
 15334   01212C  C6D4  F600         	movff	f_open@fs,move_window@fs
 15335   012130  C6D5  F601         	movff	f_open@fs+1,move_window@fs+1
 15336   012134  C6C8  F602         	movff	f_open@sc,move_window@sect
 15337   012138  C6C9  F603         	movff	f_open@sc+1,move_window@sect+1
 15338   01213C  C6CA  F604         	movff	f_open@sc+2,move_window@sect+2
 15339   012140  C6CB  F605         	movff	f_open@sc+3,move_window@sect+3
 15340   012144  EC23  F0C4         	call	_move_window	;wreg free
 15341   012148  0106               	movlb	6	; () banked
 15342   01214A  6FD6               	movwf	f_open@res& (0+255),b
 15343                           
 15344                           ; BSR set to: 6
 15345                           ;fatfs/ff.c: 3807:        fs->last_clst = cl - 1;
 15346   01214C  0EFF               	movlw	255
 15347   01214E  25C4               	addwf	f_open@cl& (0+255),w,b
 15348   012150  6FB4               	movwf	??_f_open& (0+255),b
 15349   012152  0EFF               	movlw	255
 15350   012154  21C5               	addwfc	(f_open@cl+1)& (0+255),w,b
 15351   012156  6FB5               	movwf	(??_f_open+1)& (0+255),b
 15352   012158  0EFF               	movlw	255
 15353   01215A  21C6               	addwfc	(f_open@cl+2)& (0+255),w,b
 15354   01215C  6FB6               	movwf	(??_f_open+2)& (0+255),b
 15355   01215E  0EFF               	movlw	255
 15356   012160  21C7               	addwfc	(f_open@cl+3)& (0+255),w,b
 15357   012162  6FB7               	movwf	(??_f_open+3)& (0+255),b
 15358   012164  EE20 F00C          	lfsr	2,12
 15359   012168  51D4               	movf	f_open@fs& (0+255),w,b
 15360   01216A  26D9               	addwf	fsr2l,f,c
 15361   01216C  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15362   01216E  22DA               	addwfc	fsr2h,f,c
 15363   012170  C6B4  F4DE         	movff	??_f_open,postinc2
 15364   012174  C6B5  F4DE         	movff	??_f_open+1,postinc2
 15365   012178  C6B6  F4DE         	movff	??_f_open+2,postinc2
 15366   01217C  C6B7  F4DE         	movff	??_f_open+3,postinc2
 15367   012180  D00C               	goto	l624
 15368   012182                     l11517:
 15369                           
 15370                           ; BSR set to: 6
 15371                           ;fatfs/ff.c: 3814:    if (res == FR_OK) {
 15372   012182  51D6               	movf	f_open@res& (0+255),w,b
 15373   012184  A4D8               	btfss	status,2,c
 15374   012186  D009               	goto	l624
 15375                           
 15376                           ; BSR set to: 6
 15377                           ;fatfs/ff.c: 3815:     if (dj.obj.attr & 0x10) {
 15378   012188  A9DB               	btfss	(f_open@dj+4)& (0+255),4,b
 15379   01218A  D002               	goto	l626
 15380                           
 15381                           ; BSR set to: 6
 15382                           ;fatfs/ff.c: 3816:      res = FR_NO_FILE;
 15383   01218C  0E04               	movlw	4
 15384   01218E  D004               	goto	L3
 15385   012190                     l626:
 15386                           
 15387                           ; BSR set to: 6
 15388                           ;fatfs/ff.c: 3818:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
 15389   012190  B3B3               	btfsc	f_open@mode& (0+255),1,b
 15390                           
 15391                           ; BSR set to: 6
 15392   012192  A1DB               	btfss	(f_open@dj+4)& (0+255),0,b
 15393   012194  D002               	goto	l624
 15394                           
 15395                           ; BSR set to: 6
 15396                           ;fatfs/ff.c: 3819:       res = FR_DENIED;
 15397   012196  0E07               	movlw	7
 15398   012198                     L3:
 15399   012198  6FD6               	movwf	f_open@res& (0+255),b
 15400   01219A                     l624:
 15401                           
 15402                           ; BSR set to: 6
 15403                           ;fatfs/ff.c: 3824:   if (res == FR_OK) {
 15404   01219A  51D6               	movf	f_open@res& (0+255),w,b
 15405   01219C  A4D8               	btfss	status,2,c
 15406   01219E  D020               	goto	l11535
 15407                           
 15408                           ; BSR set to: 6
 15409                           ;fatfs/ff.c: 3825:    if (mode & 0x08) mode |= 0x40;
 15410   0121A0  B7B3               	btfsc	f_open@mode& (0+255),3,b
 15411                           
 15412                           ; BSR set to: 6
 15413   0121A2  8DB3               	bsf	f_open@mode& (0+255),6,b
 15414                           
 15415                           ; BSR set to: 6
 15416                           ;fatfs/ff.c: 3826:    fp->dir_sect = fs->winsect;
 15417   0121A4  EE20 F02C          	lfsr	2,44
 15418   0121A8  51D4               	movf	f_open@fs& (0+255),w,b
 15419   0121AA  26D9               	addwf	fsr2l,f,c
 15420   0121AC  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15421   0121AE  22DA               	addwfc	fsr2h,f,c
 15422   0121B0  EE10 F01C          	lfsr	1,28
 15423   0121B4  51AF               	movf	f_open@fp& (0+255),w,b
 15424   0121B6  26E1               	addwf	fsr1l,f,c
 15425   0121B8  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15426   0121BA  22E2               	addwfc	fsr1h,f,c
 15427   0121BC  C4DE F4E6          	movff	postinc2,postinc1
 15428   0121C0  C4DE F4E6          	movff	postinc2,postinc1
 15429   0121C4  C4DE F4E6          	movff	postinc2,postinc1
 15430   0121C8  C4DE F4E6          	movff	postinc2,postinc1
 15431                           
 15432                           ; BSR set to: 6
 15433                           ;fatfs/ff.c: 3827:    fp->dir_ptr = dj.dir;
 15434   0121CC  EE20 F020          	lfsr	2,32
 15435   0121D0  51AF               	movf	f_open@fp& (0+255),w,b
 15436   0121D2  26D9               	addwf	fsr2l,f,c
 15437   0121D4  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15438   0121D6  22DA               	addwfc	fsr2h,f,c
 15439   0121D8  C6F1  F4DE         	movff	f_open@dj+26,postinc2
 15440   0121DC  C6F2  F4DD         	movff	f_open@dj+27,postdec2
 15441   0121E0                     l11535:
 15442                           
 15443                           ; BSR set to: 6
 15444                           ;fatfs/ff.c: 3845:   if (res == FR_OK) {
 15445   0121E0  51D6               	movf	f_open@res& (0+255),w,b
 15446   0121E2  A4D8               	btfss	status,2,c
 15447   0121E4  D1B4               	goto	l632
 15448                           
 15449                           ; BSR set to: 6
 15450                           ;fatfs/ff.c: 3854:    {;fatfs/ff.c: 3855:     fp->obj.sclust = ld_clust(fs, dj.dir);
 15451   0121E6  C6D4  F508         	movff	f_open@fs,ld_clust@fs
 15452   0121EA  C6D5  F509         	movff	f_open@fs+1,ld_clust@fs+1
 15453   0121EE  C6F1  F50A         	movff	f_open@dj+26,ld_clust@dir
 15454   0121F2  C6F2  F50B         	movff	f_open@dj+27,ld_clust@dir+1
 15455   0121F6  EC4B  F0CA         	call	_ld_clust	;wreg free
 15456   0121FA  0106               	movlb	6	; () banked
 15457   0121FC  EE20 F006          	lfsr	2,6
 15458   012200  51AF               	movf	f_open@fp& (0+255),w,b
 15459   012202  26D9               	addwf	fsr2l,f,c
 15460   012204  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15461   012206  22DA               	addwfc	fsr2h,f,c
 15462   012208  C508  F4DE         	movff	?_ld_clust,postinc2
 15463   01220C  C509  F4DE         	movff	?_ld_clust+1,postinc2
 15464   012210  C50A  F4DE         	movff	?_ld_clust+2,postinc2
 15465   012214  C50B  F4DE         	movff	?_ld_clust+3,postinc2
 15466                           
 15467                           ;fatfs/ff.c: 3856:     fp->obj.objsize = ld_dword(dj.dir + 28);
 15468   012218  0E1C               	movlw	28
 15469   01221A  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 15470   01221C  6E01               	movwf	ld_dword@ptr^(0+1280),c
 15471   01221E  0E00               	movlw	0
 15472   012220  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 15473   012222  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 15474   012224  ECDE  F0C4         	call	_ld_dword	;wreg free
 15475   012228  EE20 F00A          	lfsr	2,10
 15476   01222C  51AF               	movf	f_open@fp& (0+255),w,b
 15477   01222E  26D9               	addwf	fsr2l,f,c
 15478   012230  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15479   012232  22DA               	addwfc	fsr2h,f,c
 15480   012234  C501  F4DE         	movff	?_ld_dword,postinc2
 15481   012238  C502  F4DE         	movff	?_ld_dword+1,postinc2
 15482   01223C  C503  F4DE         	movff	?_ld_dword+2,postinc2
 15483   012240  C504  F4DE         	movff	?_ld_dword+3,postinc2
 15484                           
 15485                           ; BSR set to: 6
 15486                           ;fatfs/ff.c: 3857:    };fatfs/ff.c: 3861:    fp->obj.fs = fs;
 15487   012244  C6AF  F4D9         	movff	f_open@fp,fsr2l
 15488   012248  C6B0  F4DA         	movff	f_open@fp+1,fsr2h
 15489   01224C  C6D4  F4DE         	movff	f_open@fs,postinc2
 15490   012250  C6D5  F4DD         	movff	f_open@fs+1,postdec2
 15491                           
 15492                           ; BSR set to: 6
 15493                           ;fatfs/ff.c: 3862:    fp->obj.id = fs->id;
 15494   012254  EE20 F006          	lfsr	2,6
 15495   012258  51D4               	movf	f_open@fs& (0+255),w,b
 15496   01225A  26D9               	addwf	fsr2l,f,c
 15497   01225C  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15498   01225E  22DA               	addwfc	fsr2h,f,c
 15499   012260  EE10 F002          	lfsr	1,2
 15500   012264  51AF               	movf	f_open@fp& (0+255),w,b
 15501   012266  26E1               	addwf	fsr1l,f,c
 15502   012268  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15503   01226A  22E2               	addwfc	fsr1h,f,c
 15504   01226C  C4DE F4E6          	movff	postinc2,postinc1
 15505   012270  C4DD F4E5          	movff	postdec2,postdec1
 15506                           
 15507                           ; BSR set to: 6
 15508                           ;fatfs/ff.c: 3863:    fp->flag = mode;
 15509   012274  EE20 F00E          	lfsr	2,14
 15510   012278  51AF               	movf	f_open@fp& (0+255),w,b
 15511   01227A  26D9               	addwf	fsr2l,f,c
 15512   01227C  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15513   01227E  22DA               	addwfc	fsr2h,f,c
 15514   012280  C6B3  F4DF         	movff	f_open@mode,indf2
 15515                           
 15516                           ; BSR set to: 6
 15517                           ;fatfs/ff.c: 3864:    fp->err = 0;
 15518   012284  EE20 F00F          	lfsr	2,15
 15519   012288  51AF               	movf	f_open@fp& (0+255),w,b
 15520   01228A  26D9               	addwf	fsr2l,f,c
 15521   01228C  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15522   01228E  22DA               	addwfc	fsr2h,f,c
 15523   012290  6ADF               	clrf	indf2,c
 15524                           
 15525                           ; BSR set to: 6
 15526                           ;fatfs/ff.c: 3865:    fp->sect = 0;
 15527   012292  EE20 F018          	lfsr	2,24
 15528   012296  51AF               	movf	f_open@fp& (0+255),w,b
 15529   012298  26D9               	addwf	fsr2l,f,c
 15530   01229A  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15531   01229C  22DA               	addwfc	fsr2h,f,c
 15532   01229E  6ADE               	clrf	postinc2,c
 15533   0122A0  6ADE               	clrf	postinc2,c
 15534   0122A2  6ADE               	clrf	postinc2,c
 15535   0122A4  6ADD               	clrf	postdec2,c
 15536                           
 15537                           ; BSR set to: 6
 15538                           ;fatfs/ff.c: 3866:    fp->fptr = 0;
 15539   0122A6  EE20 F010          	lfsr	2,16
 15540   0122AA  51AF               	movf	f_open@fp& (0+255),w,b
 15541   0122AC  26D9               	addwf	fsr2l,f,c
 15542   0122AE  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15543   0122B0  22DA               	addwfc	fsr2h,f,c
 15544   0122B2  6ADE               	clrf	postinc2,c
 15545   0122B4  6ADE               	clrf	postinc2,c
 15546   0122B6  6ADE               	clrf	postinc2,c
 15547   0122B8  6ADD               	clrf	postdec2,c
 15548                           
 15549                           ; BSR set to: 6
 15550                           ;fatfs/ff.c: 3869:    memset(fp->buf, 0, sizeof fp->buf);
 15551   0122BA  0E22               	movlw	34
 15552   0122BC  25AF               	addwf	f_open@fp& (0+255),w,b
 15553   0122BE  6E01               	movwf	memset@dest^(0+1280),c
 15554   0122C0  0E00               	movlw	0
 15555   0122C2  21B0               	addwfc	(f_open@fp+1)& (0+255),w,b
 15556   0122C4  6E02               	movwf	(memset@dest+1)^(0+1280),c
 15557   0122C6  0E00               	movlw	0
 15558   0122C8  6E04               	movwf	(memset@c+1)^(0+1280),c
 15559   0122CA  0E00               	movlw	0
 15560   0122CC  6E03               	movwf	memset@c^(0+1280),c
 15561   0122CE  0E02               	movlw	2
 15562   0122D0  6E06               	movwf	(memset@n+1)^(0+1280),c
 15563   0122D2  0E00               	movlw	0
 15564   0122D4  6E05               	movwf	memset@n^(0+1280),c
 15565   0122D6  ECEB  F0CE         	call	_memset	;wreg free
 15566                           
 15567                           ; BSR set to: 6
 15568                           ;fatfs/ff.c: 3871:    if ((mode & 0x20) && fp->obj.objsize > 0) {
 15569   0122DA  ABB3               	btfss	f_open@mode& (0+255),5,b
 15570   0122DC  D138               	goto	l632
 15571                           
 15572                           ; BSR set to: 6
 15573   0122DE  EE20 F00A          	lfsr	2,10
 15574   0122E2  51AF               	movf	f_open@fp& (0+255),w,b
 15575   0122E4  26D9               	addwf	fsr2l,f,c
 15576   0122E6  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15577   0122E8  22DA               	addwfc	fsr2h,f,c
 15578   0122EA  50DE               	movf	postinc2,w,c
 15579   0122EC  10DE               	iorwf	postinc2,w,c
 15580   0122EE  10DE               	iorwf	postinc2,w,c
 15581   0122F0  10DE               	iorwf	postinc2,w,c
 15582   0122F2  B4D8               	btfsc	status,2,c
 15583   0122F4  D12C               	goto	l632
 15584                           
 15585                           ; BSR set to: 6
 15586                           ;fatfs/ff.c: 3872:     fp->fptr = fp->obj.objsize;
 15587   0122F6  EE20 F00A          	lfsr	2,10
 15588   0122FA  51AF               	movf	f_open@fp& (0+255),w,b
 15589   0122FC  26D9               	addwf	fsr2l,f,c
 15590   0122FE  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15591   012300  22DA               	addwfc	fsr2h,f,c
 15592   012302  EE10 F010          	lfsr	1,16
 15593   012306  51AF               	movf	f_open@fp& (0+255),w,b
 15594   012308  26E1               	addwf	fsr1l,f,c
 15595   01230A  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15596   01230C  22E2               	addwfc	fsr1h,f,c
 15597   01230E  C4DE F4E6          	movff	postinc2,postinc1
 15598   012312  C4DE F4E6          	movff	postinc2,postinc1
 15599   012316  C4DE F4E6          	movff	postinc2,postinc1
 15600   01231A  C4DE F4E6          	movff	postinc2,postinc1
 15601                           
 15602                           ; BSR set to: 6
 15603                           ;fatfs/ff.c: 3873:     bcs = (DWORD)fs->csize * ((UINT)512);
 15604   01231E  EE20 F00A          	lfsr	2,10
 15605   012322  51D4               	movf	f_open@fs& (0+255),w,b
 15606   012324  26D9               	addwf	fsr2l,f,c
 15607   012326  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15608   012328  22DA               	addwfc	fsr2h,f,c
 15609   01232A  C4DE F6B4          	movff	postinc2,??_f_open
 15610   01232E  C4DD F6B5          	movff	postdec2,??_f_open+1
 15611   012332  51B4               	movf	??_f_open& (0+255),w,b
 15612   012334  6FB6               	movwf	(??_f_open+2)& (0+255),b
 15613   012336  51B5               	movf	(??_f_open+1)& (0+255),w,b
 15614   012338  6FB7               	movwf	(??_f_open+3)& (0+255),b
 15615   01233A  6BB8               	clrf	(??_f_open+4)& (0+255),b
 15616   01233C  6BB9               	clrf	(??_f_open+5)& (0+255),b
 15617   01233E  0E09               	movlw	9
 15618   012340                     u14535:
 15619   012340  90D8               	bcf	status,0,c
 15620   012342  37B6               	rlcf	(??_f_open+2)& (0+255),f,b
 15621   012344  37B7               	rlcf	(??_f_open+3)& (0+255),f,b
 15622   012346  37B8               	rlcf	(??_f_open+4)& (0+255),f,b
 15623   012348  37B9               	rlcf	(??_f_open+5)& (0+255),f,b
 15624   01234A  2EE8               	decfsz	wreg,f,c
 15625   01234C  D7F9               	goto	u14535
 15626   01234E  C6B6  F6BC         	movff	??_f_open+2,f_open@bcs
 15627   012352  C6B7  F6BD         	movff	??_f_open+3,f_open@bcs+1
 15628   012356  C6B8  F6BE         	movff	??_f_open+4,f_open@bcs+2
 15629   01235A  C6B9  F6BF         	movff	??_f_open+5,f_open@bcs+3
 15630                           
 15631                           ; BSR set to: 6
 15632                           ;fatfs/ff.c: 3874:     clst = fp->obj.sclust;
 15633   01235E  EE20 F006          	lfsr	2,6
 15634   012362  51AF               	movf	f_open@fp& (0+255),w,b
 15635   012364  26D9               	addwf	fsr2l,f,c
 15636   012366  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15637   012368  22DA               	addwfc	fsr2h,f,c
 15638   01236A  C4DE F6D0          	movff	postinc2,f_open@clst
 15639   01236E  C4DE F6D1          	movff	postinc2,f_open@clst+1
 15640   012372  C4DE F6D2          	movff	postinc2,f_open@clst+2
 15641   012376  C4DE F6D3          	movff	postinc2,f_open@clst+3
 15642                           
 15643                           ; BSR set to: 6
 15644                           ;fatfs/ff.c: 3875:     for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs
      +                          ) {
 15645   01237A  EE20 F00A          	lfsr	2,10
 15646   01237E  51AF               	movf	f_open@fp& (0+255),w,b
 15647   012380  26D9               	addwf	fsr2l,f,c
 15648   012382  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15649   012384  22DA               	addwfc	fsr2h,f,c
 15650   012386  C4DE F6CC          	movff	postinc2,f_open@ofs
 15651   01238A  C4DE F6CD          	movff	postinc2,f_open@ofs+1
 15652   01238E  C4DE F6CE          	movff	postinc2,f_open@ofs+2
 15653   012392  C4DE F6CF          	movff	postinc2,f_open@ofs+3
 15654   012396  D034               	goto	l11577
 15655   012398                     l11565:
 15656                           
 15657                           ; BSR set to: 6
 15658                           ;fatfs/ff.c: 3876:      clst = get_fat(&fp->obj, clst);
 15659   012398  C6AF  F60A         	movff	f_open@fp,get_fat@obj
 15660   01239C  C6B0  F60B         	movff	f_open@fp+1,get_fat@obj+1
 15661   0123A0  C6D0  F60C         	movff	f_open@clst,get_fat@clst
 15662   0123A4  C6D1  F60D         	movff	f_open@clst+1,get_fat@clst+1
 15663   0123A8  C6D2  F60E         	movff	f_open@clst+2,get_fat@clst+2
 15664   0123AC  C6D3  F60F         	movff	f_open@clst+3,get_fat@clst+3
 15665   0123B0  EC68  F0A0         	call	_get_fat	;wreg free
 15666   0123B4  C60A  F6D0         	movff	?_get_fat,f_open@clst
 15667   0123B8  C60B  F6D1         	movff	?_get_fat+1,f_open@clst+1
 15668   0123BC  C60C  F6D2         	movff	?_get_fat+2,f_open@clst+2
 15669   0123C0  C60D  F6D3         	movff	?_get_fat+3,f_open@clst+3
 15670                           
 15671                           ;fatfs/ff.c: 3877:      if (clst <= 1) res = FR_INT_ERR;
 15672   0123C4  0106               	movlb	6	; () banked
 15673   0123C6  51D3               	movf	(f_open@clst+3)& (0+255),w,b
 15674   0123C8  11D2               	iorwf	(f_open@clst+2)& (0+255),w,b
 15675   0123CA  11D1               	iorwf	(f_open@clst+1)& (0+255),w,b
 15676   0123CC  E106               	bnz	l11571
 15677   0123CE  0E02               	movlw	2
 15678   0123D0  5DD0               	subwf	f_open@clst& (0+255),w,b
 15679   0123D2  B0D8               	btfsc	status,0,c
 15680   0123D4  D002               	goto	l11571
 15681                           
 15682                           ; BSR set to: 6
 15683   0123D6  0E02               	movlw	2
 15684   0123D8  6FD6               	movwf	f_open@res& (0+255),b
 15685   0123DA                     l11571:
 15686                           
 15687                           ; BSR set to: 6
 15688                           ;fatfs/ff.c: 3878:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 15689   0123DA  29D0               	incf	f_open@clst& (0+255),w,b
 15690   0123DC  E109               	bnz	l11575
 15691   0123DE  29D1               	incf	(f_open@clst+1)& (0+255),w,b
 15692   0123E0  E107               	bnz	l11575
 15693   0123E2  29D2               	incf	(f_open@clst+2)& (0+255),w,b
 15694   0123E4  E105               	bnz	l11575
 15695   0123E6  29D3               	incf	(f_open@clst+3)& (0+255),w,b
 15696   0123E8  A4D8               	btfss	status,2,c
 15697   0123EA  D002               	goto	l11575
 15698                           
 15699                           ; BSR set to: 6
 15700   0123EC  0E01               	movlw	1
 15701   0123EE  6FD6               	movwf	f_open@res& (0+255),b
 15702   0123F0                     l11575:
 15703                           
 15704                           ; BSR set to: 6
 15705                           ;fatfs/ff.c: 3879:     }
 15706   0123F0  51BC               	movf	f_open@bcs& (0+255),w,b
 15707   0123F2  5FCC               	subwf	f_open@ofs& (0+255),f,b
 15708   0123F4  51BD               	movf	(f_open@bcs+1)& (0+255),w,b
 15709   0123F6  5BCD               	subwfb	(f_open@ofs+1)& (0+255),f,b
 15710   0123F8  51BE               	movf	(f_open@bcs+2)& (0+255),w,b
 15711   0123FA  5BCE               	subwfb	(f_open@ofs+2)& (0+255),f,b
 15712   0123FC  51BF               	movf	(f_open@bcs+3)& (0+255),w,b
 15713   0123FE  5BCF               	subwfb	(f_open@ofs+3)& (0+255),f,b
 15714   012400                     l11577:
 15715                           
 15716                           ; BSR set to: 6
 15717   012400  51D6               	movf	f_open@res& (0+255),w,b
 15718   012402  A4D8               	btfss	status,2,c
 15719   012404  D00A               	goto	u14570
 15720                           
 15721                           ; BSR set to: 6
 15722   012406  51CC               	movf	f_open@ofs& (0+255),w,b
 15723   012408  5DBC               	subwf	f_open@bcs& (0+255),w,b
 15724   01240A  51CD               	movf	(f_open@ofs+1)& (0+255),w,b
 15725   01240C  59BD               	subwfb	(f_open@bcs+1)& (0+255),w,b
 15726   01240E  51CE               	movf	(f_open@ofs+2)& (0+255),w,b
 15727   012410  59BE               	subwfb	(f_open@bcs+2)& (0+255),w,b
 15728   012412  51CF               	movf	(f_open@ofs+3)& (0+255),w,b
 15729   012414  59BF               	subwfb	(f_open@bcs+3)& (0+255),w,b
 15730   012416  A0D8               	btfss	status,0,c
 15731   012418  D7BF               	goto	l11565
 15732   01241A                     u14570:
 15733                           
 15734                           ; BSR set to: 6
 15735                           ;fatfs/ff.c: 3880:     fp->clust = clst;
 15736   01241A  EE20 F014          	lfsr	2,20
 15737   01241E  51AF               	movf	f_open@fp& (0+255),w,b
 15738   012420  26D9               	addwf	fsr2l,f,c
 15739   012422  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15740   012424  22DA               	addwfc	fsr2h,f,c
 15741   012426  C6D0  F4DE         	movff	f_open@clst,postinc2
 15742   01242A  C6D1  F4DE         	movff	f_open@clst+1,postinc2
 15743   01242E  C6D2  F4DE         	movff	f_open@clst+2,postinc2
 15744   012432  C6D3  F4DE         	movff	f_open@clst+3,postinc2
 15745                           
 15746                           ; BSR set to: 6
 15747                           ;fatfs/ff.c: 3881:     if (res == FR_OK && ofs % ((UINT)512)) {
 15748   012436  51D6               	movf	f_open@res& (0+255),w,b
 15749   012438  A4D8               	btfss	status,2,c
 15750   01243A  D089               	goto	l632
 15751                           
 15752                           ; BSR set to: 6
 15753   01243C  0EFF               	movlw	255
 15754   01243E  15CC               	andwf	f_open@ofs& (0+255),w,b
 15755   012440  6FB4               	movwf	??_f_open& (0+255),b
 15756   012442  0E01               	movlw	1
 15757   012444  15CD               	andwf	(f_open@ofs+1)& (0+255),w,b
 15758   012446  6FB5               	movwf	(??_f_open+1)& (0+255),b
 15759   012448  0E00               	movlw	0
 15760   01244A  15CE               	andwf	(f_open@ofs+2)& (0+255),w,b
 15761   01244C  6FB6               	movwf	(??_f_open+2)& (0+255),b
 15762   01244E  0E00               	movlw	0
 15763   012450  15CF               	andwf	(f_open@ofs+3)& (0+255),w,b
 15764   012452  6FB7               	movwf	(??_f_open+3)& (0+255),b
 15765   012454  51B4               	movf	??_f_open& (0+255),w,b
 15766   012456  11B5               	iorwf	(??_f_open+1)& (0+255),w,b
 15767   012458  11B6               	iorwf	(??_f_open+2)& (0+255),w,b
 15768   01245A  11B7               	iorwf	(??_f_open+3)& (0+255),w,b
 15769   01245C  B4D8               	btfsc	status,2,c
 15770   01245E  D077               	goto	l632
 15771                           
 15772                           ; BSR set to: 6
 15773                           ;fatfs/ff.c: 3882:      sc = clst2sect(fs, clst);
 15774   012460  C6D4  F50D         	movff	f_open@fs,clst2sect@fs
 15775   012464  C6D5  F50E         	movff	f_open@fs+1,clst2sect@fs+1
 15776   012468  C6D0  F50F         	movff	f_open@clst,clst2sect@clst
 15777   01246C  C6D1  F510         	movff	f_open@clst+1,clst2sect@clst+1
 15778   012470  C6D2  F511         	movff	f_open@clst+2,clst2sect@clst+2
 15779   012474  C6D3  F512         	movff	f_open@clst+3,clst2sect@clst+3
 15780   012478  ECC3  F0C3         	call	_clst2sect	;wreg free
 15781   01247C  C50D  F6C8         	movff	?_clst2sect,f_open@sc
 15782   012480  C50E  F6C9         	movff	?_clst2sect+1,f_open@sc+1
 15783   012484  C50F  F6CA         	movff	?_clst2sect+2,f_open@sc+2
 15784   012488  C510  F6CB         	movff	?_clst2sect+3,f_open@sc+3
 15785                           
 15786                           ;fatfs/ff.c: 3883:      if (sc == 0) {
 15787   01248C  0106               	movlb	6	; () banked
 15788   01248E  51C8               	movf	f_open@sc& (0+255),w,b
 15789   012490  11C9               	iorwf	(f_open@sc+1)& (0+255),w,b
 15790   012492  11CA               	iorwf	(f_open@sc+2)& (0+255),w,b
 15791   012494  11CB               	iorwf	(f_open@sc+3)& (0+255),w,b
 15792   012496  A4D8               	btfss	status,2,c
 15793   012498  D002               	goto	l11593
 15794                           
 15795                           ; BSR set to: 6
 15796                           ;fatfs/ff.c: 3884:       res = FR_INT_ERR;
 15797   01249A  0E02               	movlw	2
 15798   01249C  D057               	goto	L4
 15799   01249E                     l11593:
 15800                           
 15801                           ; BSR set to: 6
 15802                           ;fatfs/ff.c: 3886:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
 15803   01249E  C6CC  F6B4         	movff	f_open@ofs,??_f_open
 15804   0124A2  C6CD  F6B5         	movff	f_open@ofs+1,??_f_open+1
 15805   0124A6  C6CE  F6B6         	movff	f_open@ofs+2,??_f_open+2
 15806   0124AA  C6CF  F6B7         	movff	f_open@ofs+3,??_f_open+3
 15807   0124AE  0E0A               	movlw	10
 15808   0124B0  D005               	goto	u14610
 15809   0124B2                     u14615:
 15810   0124B2  90D8               	bcf	status,0,c
 15811   0124B4  33B7               	rrcf	(??_f_open+3)& (0+255),f,b
 15812   0124B6  33B6               	rrcf	(??_f_open+2)& (0+255),f,b
 15813   0124B8  33B5               	rrcf	(??_f_open+1)& (0+255),f,b
 15814   0124BA  33B4               	rrcf	??_f_open& (0+255),f,b
 15815   0124BC                     u14610:
 15816   0124BC  2EE8               	decfsz	wreg,f,c
 15817   0124BE  D7F9               	goto	u14615
 15818   0124C0  51C8               	movf	f_open@sc& (0+255),w,b
 15819   0124C2  25B4               	addwf	??_f_open& (0+255),w,b
 15820   0124C4  6FB8               	movwf	(??_f_open+4)& (0+255),b
 15821   0124C6  51C9               	movf	(f_open@sc+1)& (0+255),w,b
 15822   0124C8  21B5               	addwfc	(??_f_open+1)& (0+255),w,b
 15823   0124CA  6FB9               	movwf	(??_f_open+5)& (0+255),b
 15824   0124CC  51CA               	movf	(f_open@sc+2)& (0+255),w,b
 15825   0124CE  21B6               	addwfc	(??_f_open+2)& (0+255),w,b
 15826   0124D0  6FBA               	movwf	(??_f_open+6)& (0+255),b
 15827   0124D2  51CB               	movf	(f_open@sc+3)& (0+255),w,b
 15828   0124D4  21B7               	addwfc	(??_f_open+3)& (0+255),w,b
 15829   0124D6  6FBB               	movwf	(??_f_open+7)& (0+255),b
 15830   0124D8  EE20 F018          	lfsr	2,24
 15831   0124DC  51AF               	movf	f_open@fp& (0+255),w,b
 15832   0124DE  26D9               	addwf	fsr2l,f,c
 15833   0124E0  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15834   0124E2  22DA               	addwfc	fsr2h,f,c
 15835   0124E4  C6B8  F4DE         	movff	??_f_open+4,postinc2
 15836   0124E8  C6B9  F4DE         	movff	??_f_open+5,postinc2
 15837   0124EC  C6BA  F4DE         	movff	??_f_open+6,postinc2
 15838   0124F0  C6BB  F4DE         	movff	??_f_open+7,postinc2
 15839                           
 15840                           ; BSR set to: 6
 15841                           ;fatfs/ff.c: 3888:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res = 
      +                          FR_DISK_ERR;
 15842   0124F4  0E22               	movlw	34
 15843   0124F6  25AF               	addwf	f_open@fp& (0+255),w,b
 15844   0124F8  0105               	movlb	5	; () banked
 15845   0124FA  6FE4               	movwf	disk_read@buff& (0+255),b
 15846   0124FC  0E00               	movlw	0
 15847   0124FE  0106               	movlb	6	; () banked
 15848   012500  21B0               	addwfc	(f_open@fp+1)& (0+255),w,b
 15849   012502  0105               	movlb	5	; () banked
 15850   012504  6FE5               	movwf	(disk_read@buff+1)& (0+255),b
 15851   012506  0106               	movlb	6	; () banked
 15852   012508  EE20 F018          	lfsr	2,24
 15853   01250C  51AF               	movf	f_open@fp& (0+255),w,b
 15854   01250E  26D9               	addwf	fsr2l,f,c
 15855   012510  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15856   012512  22DA               	addwfc	fsr2h,f,c
 15857   012514  C4DE F5E6          	movff	postinc2,disk_read@sector
 15858   012518  C4DE F5E7          	movff	postinc2,disk_read@sector+1
 15859   01251C  C4DE F5E8          	movff	postinc2,disk_read@sector+2
 15860   012520  C4DE F5E9          	movff	postinc2,disk_read@sector+3
 15861   012524  0E00               	movlw	0
 15862   012526  0105               	movlb	5	; () banked
 15863   012528  6FEB               	movwf	(disk_read@count+1)& (0+255),b
 15864   01252A  0E01               	movlw	1
 15865   01252C  6FEA               	movwf	disk_read@count& (0+255),b
 15866   01252E  0106               	movlb	6	; () banked
 15867   012530  EE20 F001          	lfsr	2,1
 15868   012534  51D4               	movf	f_open@fs& (0+255),w,b
 15869   012536  26D9               	addwf	fsr2l,f,c
 15870   012538  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15871   01253A  22DA               	addwfc	fsr2h,f,c
 15872   01253C  50DF               	movf	indf2,w,c
 15873   01253E  EC52  F0C9         	call	_disk_read
 15874   012542  0900               	iorlw	0
 15875   012544  B4D8               	btfsc	status,2,c
 15876   012546  D003               	goto	l632
 15877                           
 15878                           ; BSR set to: 5
 15879   012548  0E01               	movlw	1
 15880   01254A  0106               	movlb	6	; () banked
 15881   01254C                     L4:
 15882   01254C  6FD6               	movwf	f_open@res& (0+255),b
 15883   01254E                     l632:
 15884                           
 15885                           ;fatfs/ff.c: 3902:  if (res != FR_OK) fp->obj.fs = 0;
 15886                           
 15887                           ; BSR set to: 5
 15888                           ;fatfs/ff.c: 3900:  }
 15889   01254E  0106               	movlb	6	; () banked
 15890   012550  51D6               	movf	f_open@res& (0+255),w,b
 15891   012552  B4D8               	btfsc	status,2,c
 15892   012554  D006               	goto	l11601
 15893                           
 15894                           ; BSR set to: 6
 15895   012556  C6AF  F4D9         	movff	f_open@fp,fsr2l
 15896   01255A  C6B0  F4DA         	movff	f_open@fp+1,fsr2h
 15897   01255E  6ADE               	clrf	postinc2,c
 15898   012560  6ADD               	clrf	postdec2,c
 15899   012562                     l11601:
 15900                           
 15901                           ; BSR set to: 6
 15902                           ;fatfs/ff.c: 3904:  return res;
 15903   012562  51D6               	movf	f_open@res& (0+255),w,b
 15904                           
 15905                           ; BSR set to: 6
 15906   012564  0012               	return		;funcret
 15907   012566                     __end_of_f_open:
 15908                           	callstack 0
 15909                           
 15910 ;; *************** function _remove_chain *****************
 15911 ;; Defined at:
 15912 ;;		line 1429 in file "fatfs/ff.c"
 15913 ;; Parameters:    Size  Location     Type
 15914 ;;  obj             2   43[BANK6 ] PTR struct .
 15915 ;;		 -> f_mkdir@sobj(14), f_unlink@dj(40), f_open@dj(40), 
 15916 ;;  clst            4   45[BANK6 ] unsigned long 
 15917 ;;  pclst           4   49[BANK6 ] unsigned long 
 15918 ;; Auto vars:     Size  Location     Type
 15919 ;;  nxt             4   61[BANK6 ] unsigned long 
 15920 ;;  fs              2   66[BANK6 ] PTR struct .
 15921 ;;		 -> fs(560), NULL(0), 
 15922 ;;  res             1   65[BANK6 ] enum E275
 15923 ;; Return value:  Size  Location     Type
 15924 ;;                  1    wreg      enum E275
 15925 ;; Registers used:
 15926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15927 ;; Tracked objects:
 15928 ;;		On entry : 3F/6
 15929 ;;		On exit  : 3F/6
 15930 ;;		Unchanged: 0/0
 15931 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15932 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15933 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15934 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15935 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15936 ;;Total ram usage:       25 bytes
 15937 ;; Hardware stack levels used: 1
 15938 ;; Hardware stack levels required when called: 14
 15939 ;; This function calls:
 15940 ;;		_get_fat
 15941 ;;		_put_fat
 15942 ;; This function is called by:
 15943 ;;		_f_open
 15944 ;; This function uses a non-reentrant model
 15945 ;;
 15946                           
 15947                           	psect	text12
 15948   0167C4                     __ptext12:
 15949                           	callstack 0
 15950   0167C4                     _remove_chain:
 15951                           	callstack 110
 15952                           
 15953                           ; BSR set to: 6
 15954                           ;fatfs/ff.c: 1436:  DWORD nxt;;fatfs/ff.c: 1437:  FATFS *fs = obj->fs;
 15955                           
 15956                           ; BSR set to: 6
 15957                           
 15958                           ; BSR set to: 6
 15959                           ;incstack = 0
 15960   0167C4  C62B  F4D9         	movff	remove_chain@obj,fsr2l
 15961   0167C8  C62C  F4DA         	movff	remove_chain@obj+1,fsr2h
 15962   0167CC  C4DE F642          	movff	postinc2,remove_chain@fs
 15963   0167D0  C4DD F643          	movff	postdec2,remove_chain@fs+1
 15964                           
 15965                           ; BSR set to: 6
 15966                           ;fatfs/ff.c: 1445:  if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
 15967   0167D4  5130               	movf	(remove_chain@clst+3)& (0+255),w,b
 15968   0167D6  112F               	iorwf	(remove_chain@clst+2)& (0+255),w,b
 15969   0167D8  112E               	iorwf	(remove_chain@clst+1)& (0+255),w,b
 15970   0167DA  E104               	bnz	u13400
 15971   0167DC  0E02               	movlw	2
 15972   0167DE  5D2D               	subwf	remove_chain@clst& (0+255),w,b
 15973   0167E0  A0D8               	btfss	status,0,c
 15974   0167E2  D010               	goto	u13410
 15975   0167E4                     u13400:
 15976                           
 15977                           ; BSR set to: 6
 15978   0167E4  EE20 F014          	lfsr	2,20
 15979   0167E8  5142               	movf	remove_chain@fs& (0+255),w,b
 15980   0167EA  26D9               	addwf	fsr2l,f,c
 15981   0167EC  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 15982   0167EE  22DA               	addwfc	fsr2h,f,c
 15983   0167F0  50DE               	movf	postinc2,w,c
 15984   0167F2  5D2D               	subwf	remove_chain@clst& (0+255),w,b
 15985   0167F4  50DE               	movf	postinc2,w,c
 15986   0167F6  592E               	subwfb	(remove_chain@clst+1)& (0+255),w,b
 15987   0167F8  50DE               	movf	postinc2,w,c
 15988   0167FA  592F               	subwfb	(remove_chain@clst+2)& (0+255),w,b
 15989   0167FC  50DE               	movf	postinc2,w,c
 15990   0167FE  5930               	subwfb	(remove_chain@clst+3)& (0+255),w,b
 15991   016800  A0D8               	btfss	status,0,c
 15992   016802  D002               	goto	l10895
 15993   016804                     u13410:
 15994                           
 15995                           ; BSR set to: 6
 15996   016804  0E02               	movlw	2
 15997   016806  0012               	return	
 15998   016808                     l10895:
 15999                           
 16000                           ; BSR set to: 6
 16001                           ;fatfs/ff.c: 1448:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj->stat != 2)) {
 16002   016808  5131               	movf	remove_chain@pclst& (0+255),w,b
 16003   01680A  1132               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
 16004   01680C  1133               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
 16005   01680E  1134               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
 16006   016810  B4D8               	btfsc	status,2,c
 16007   016812  D01C               	goto	l10911
 16008                           
 16009                           ; BSR set to: 6
 16010                           ;fatfs/ff.c: 1449:   res = put_fat(fs, pclst, 0xFFFFFFFF);
 16011   016814  C642  F60A         	movff	remove_chain@fs,put_fat@fs
 16012   016818  C643  F60B         	movff	remove_chain@fs+1,put_fat@fs+1
 16013   01681C  C631  F60C         	movff	remove_chain@pclst,put_fat@clst
 16014   016820  C632  F60D         	movff	remove_chain@pclst+1,put_fat@clst+1
 16015   016824  C633  F60E         	movff	remove_chain@pclst+2,put_fat@clst+2
 16016   016828  C634  F60F         	movff	remove_chain@pclst+3,put_fat@clst+3
 16017   01682C  0EFF               	movlw	255
 16018   01682E  6F10               	movwf	put_fat@val& (0+255),b
 16019   016830  0EFF               	movlw	255
 16020   016832  6F11               	movwf	(put_fat@val+1)& (0+255),b
 16021   016834  0EFF               	movlw	255
 16022   016836  6F12               	movwf	(put_fat@val+2)& (0+255),b
 16023   016838  0EFF               	movlw	255
 16024   01683A  6F13               	movwf	(put_fat@val+3)& (0+255),b
 16025   01683C  ECD8  F09A         	call	_put_fat	;wreg free
 16026   016840  6F41               	movwf	remove_chain@res& (0+255),b
 16027                           
 16028                           ; BSR set to: 6
 16029                           ;fatfs/ff.c: 1450:   if (res != FR_OK) return res;
 16030   016842  5141               	movf	remove_chain@res& (0+255),w,b
 16031   016844  B4D8               	btfsc	status,2,c
 16032   016846  D002               	goto	l10911
 16033   016848                     u13430:
 16034                           
 16035                           ; BSR set to: 6
 16036   016848  5141               	movf	remove_chain@res& (0+255),w,b
 16037   01684A  0012               	return	
 16038   01684C                     l10911:
 16039                           
 16040                           ; BSR set to: 6
 16041                           ;fatfs/ff.c: 1455:   nxt = get_fat(obj, clst);
 16042   01684C  C62B  F60A         	movff	remove_chain@obj,get_fat@obj
 16043   016850  C62C  F60B         	movff	remove_chain@obj+1,get_fat@obj+1
 16044   016854  C62D  F60C         	movff	remove_chain@clst,get_fat@clst
 16045   016858  C62E  F60D         	movff	remove_chain@clst+1,get_fat@clst+1
 16046   01685C  C62F  F60E         	movff	remove_chain@clst+2,get_fat@clst+2
 16047   016860  C630  F60F         	movff	remove_chain@clst+3,get_fat@clst+3
 16048   016864  EC68  F0A0         	call	_get_fat	;wreg free
 16049   016868  C60A  F63D         	movff	?_get_fat,remove_chain@nxt
 16050   01686C  C60B  F63E         	movff	?_get_fat+1,remove_chain@nxt+1
 16051   016870  C60C  F63F         	movff	?_get_fat+2,remove_chain@nxt+2
 16052   016874  C60D  F640         	movff	?_get_fat+3,remove_chain@nxt+3
 16053                           
 16054                           ;fatfs/ff.c: 1456:   if (nxt == 0) break;
 16055   016878  0106               	movlb	6	; () banked
 16056   01687A  513D               	movf	remove_chain@nxt& (0+255),w,b
 16057   01687C  113E               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 16058   01687E  113F               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
 16059   016880  1140               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
 16060   016882  B4D8               	btfsc	status,2,c
 16061   016884  D078               	goto	u13490
 16062                           
 16063                           ; BSR set to: 6
 16064                           ;fatfs/ff.c: 1457:   if (nxt == 1) return FR_INT_ERR;
 16065   016886  053D               	decf	remove_chain@nxt& (0+255),w,b
 16066   016888  113E               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 16067   01688A  113F               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
 16068   01688C  1140               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
 16069   01688E  B4D8               	btfsc	status,2,c
 16070   016890  D7B9               	goto	u13410
 16071                           
 16072                           ; BSR set to: 6
 16073                           ;fatfs/ff.c: 1458:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
 16074   016892  293D               	incf	remove_chain@nxt& (0+255),w,b
 16075   016894  E109               	bnz	l10931
 16076   016896  293E               	incf	(remove_chain@nxt+1)& (0+255),w,b
 16077   016898  E107               	bnz	l10931
 16078   01689A  293F               	incf	(remove_chain@nxt+2)& (0+255),w,b
 16079   01689C  E105               	bnz	l10931
 16080   01689E  2940               	incf	(remove_chain@nxt+3)& (0+255),w,b
 16081   0168A0  A4D8               	btfss	status,2,c
 16082   0168A2  D002               	goto	l10931
 16083                           
 16084                           ; BSR set to: 6
 16085   0168A4  0E01               	movlw	1
 16086   0168A6  0012               	return	
 16087   0168A8                     l10931:
 16088                           
 16089                           ; BSR set to: 6
 16090                           ;fatfs/ff.c: 1460:    res = put_fat(fs, clst, 0);
 16091   0168A8  C642  F60A         	movff	remove_chain@fs,put_fat@fs
 16092   0168AC  C643  F60B         	movff	remove_chain@fs+1,put_fat@fs+1
 16093   0168B0  C62D  F60C         	movff	remove_chain@clst,put_fat@clst
 16094   0168B4  C62E  F60D         	movff	remove_chain@clst+1,put_fat@clst+1
 16095   0168B8  C62F  F60E         	movff	remove_chain@clst+2,put_fat@clst+2
 16096   0168BC  C630  F60F         	movff	remove_chain@clst+3,put_fat@clst+3
 16097   0168C0  0E00               	movlw	0
 16098   0168C2  6F10               	movwf	put_fat@val& (0+255),b
 16099   0168C4  0E00               	movlw	0
 16100   0168C6  6F11               	movwf	(put_fat@val+1)& (0+255),b
 16101   0168C8  0E00               	movlw	0
 16102   0168CA  6F12               	movwf	(put_fat@val+2)& (0+255),b
 16103   0168CC  0E00               	movlw	0
 16104   0168CE  6F13               	movwf	(put_fat@val+3)& (0+255),b
 16105   0168D0  ECD8  F09A         	call	_put_fat	;wreg free
 16106   0168D4  6F41               	movwf	remove_chain@res& (0+255),b
 16107                           
 16108                           ; BSR set to: 6
 16109                           ;fatfs/ff.c: 1461:    if (res != FR_OK) return res;
 16110   0168D6  5141               	movf	remove_chain@res& (0+255),w,b
 16111   0168D8  A4D8               	btfss	status,2,c
 16112   0168DA  D7B6               	goto	u13430
 16113                           
 16114                           ; BSR set to: 6
 16115                           ;fatfs/ff.c: 1463:   if (fs->free_clst < fs->n_fatent - 2) {
 16116   0168DC  EE20 F014          	lfsr	2,20
 16117   0168E0  5142               	movf	remove_chain@fs& (0+255),w,b
 16118   0168E2  26D9               	addwf	fsr2l,f,c
 16119   0168E4  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 16120   0168E6  22DA               	addwfc	fsr2h,f,c
 16121   0168E8  0EFE               	movlw	254
 16122   0168EA  24DE               	addwf	postinc2,w,c
 16123   0168EC  6F35               	movwf	??_remove_chain& (0+255),b
 16124   0168EE  0EFF               	movlw	255
 16125   0168F0  20DE               	addwfc	postinc2,w,c
 16126   0168F2  6F36               	movwf	(??_remove_chain+1)& (0+255),b
 16127   0168F4  0EFF               	movlw	255
 16128   0168F6  20DE               	addwfc	postinc2,w,c
 16129   0168F8  6F37               	movwf	(??_remove_chain+2)& (0+255),b
 16130   0168FA  0EFF               	movlw	255
 16131   0168FC  20DE               	addwfc	postinc2,w,c
 16132   0168FE  6F38               	movwf	(??_remove_chain+3)& (0+255),b
 16133   016900  EE20 F010          	lfsr	2,16
 16134   016904  5142               	movf	remove_chain@fs& (0+255),w,b
 16135   016906  26D9               	addwf	fsr2l,f,c
 16136   016908  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 16137   01690A  22DA               	addwfc	fsr2h,f,c
 16138   01690C  5135               	movf	??_remove_chain& (0+255),w,b
 16139   01690E  5CDE               	subwf	postinc2,w,c
 16140   016910  5136               	movf	(??_remove_chain+1)& (0+255),w,b
 16141   016912  58DE               	subwfb	postinc2,w,c
 16142   016914  5137               	movf	(??_remove_chain+2)& (0+255),w,b
 16143   016916  58DE               	subwfb	postinc2,w,c
 16144   016918  5138               	movf	(??_remove_chain+3)& (0+255),w,b
 16145   01691A  58DE               	subwfb	postinc2,w,c
 16146   01691C  B0D8               	btfsc	status,0,c
 16147   01691E  D013               	goto	l10943
 16148                           
 16149                           ; BSR set to: 6
 16150                           ;fatfs/ff.c: 1464:    fs->free_clst++;
 16151   016920  EE20 F010          	lfsr	2,16
 16152   016924  5142               	movf	remove_chain@fs& (0+255),w,b
 16153   016926  26D9               	addwf	fsr2l,f,c
 16154   016928  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 16155   01692A  22DA               	addwfc	fsr2h,f,c
 16156   01692C  2ADE               	incf	postinc2,f,c
 16157   01692E  0E00               	movlw	0
 16158   016930  22DE               	addwfc	postinc2,f,c
 16159   016932  22DE               	addwfc	postinc2,f,c
 16160   016934  22DE               	addwfc	postinc2,f,c
 16161                           
 16162                           ;fatfs/ff.c: 1465:    fs->fsi_flag |= 1;
 16163   016936  EE20 F005          	lfsr	2,5
 16164   01693A  5142               	movf	remove_chain@fs& (0+255),w,b
 16165   01693C  26D9               	addwf	fsr2l,f,c
 16166   01693E  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 16167   016940  22DA               	addwfc	fsr2h,f,c
 16168   016942  0E00               	movlw	0
 16169   016944  80DB               	bsf	plusw2,0,c
 16170   016946                     l10943:
 16171                           
 16172                           ; BSR set to: 6
 16173                           ;fatfs/ff.c: 1485:   clst = nxt;
 16174   016946  C63D  F62D         	movff	remove_chain@nxt,remove_chain@clst
 16175   01694A  C63E  F62E         	movff	remove_chain@nxt+1,remove_chain@clst+1
 16176   01694E  C63F  F62F         	movff	remove_chain@nxt+2,remove_chain@clst+2
 16177   016952  C640  F630         	movff	remove_chain@nxt+3,remove_chain@clst+3
 16178                           
 16179                           ;fatfs/ff.c: 1486:  } while (clst < fs->n_fatent);
 16180   016956  EE20 F014          	lfsr	2,20
 16181   01695A  5142               	movf	remove_chain@fs& (0+255),w,b
 16182   01695C  26D9               	addwf	fsr2l,f,c
 16183   01695E  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 16184   016960  22DA               	addwfc	fsr2h,f,c
 16185   016962  50DE               	movf	postinc2,w,c
 16186   016964  5D2D               	subwf	remove_chain@clst& (0+255),w,b
 16187   016966  50DE               	movf	postinc2,w,c
 16188   016968  592E               	subwfb	(remove_chain@clst+1)& (0+255),w,b
 16189   01696A  50DE               	movf	postinc2,w,c
 16190   01696C  592F               	subwfb	(remove_chain@clst+2)& (0+255),w,b
 16191   01696E  50DE               	movf	postinc2,w,c
 16192   016970  5930               	subwfb	(remove_chain@clst+3)& (0+255),w,b
 16193   016972  A0D8               	btfss	status,0,c
 16194   016974  D76B               	goto	l10911
 16195   016976                     u13490:
 16196                           
 16197                           ; BSR set to: 6
 16198                           ;fatfs/ff.c: 1514:  return FR_OK;
 16199   016976  0E00               	movlw	0
 16200                           
 16201                           ; BSR set to: 6
 16202   016978  0012               	return		;funcret
 16203   01697A                     __end_of_remove_chain:
 16204                           	callstack 0
 16205                           
 16206 ;; *************** function _follow_path *****************
 16207 ;; Defined at:
 16208 ;;		line 3051 in file "fatfs/ff.c"
 16209 ;; Parameters:    Size  Location     Type
 16210 ;;  dp              2  106[BANK6 ] PTR struct .
 16211 ;;		 -> fsdir(40), f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), 
 16212 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_open@dj(40), 
 16213 ;;  path            2  108[BANK6 ] PTR const unsigned char 
 16214 ;;		 -> tmp_buf(512), STR_65(2), STR_62(5), 
 16215 ;; Auto vars:     Size  Location     Type
 16216 ;;  fs              2  116[BANK6 ] PTR struct .
 16217 ;;		 -> fs(560), NULL(0), 
 16218 ;;  res             1  119[BANK6 ] enum E275
 16219 ;;  ns              1  118[BANK6 ] unsigned char 
 16220 ;; Return value:  Size  Location     Type
 16221 ;;                  1    wreg      enum E275
 16222 ;; Registers used:
 16223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16224 ;; Tracked objects:
 16225 ;;		On entry : 3F/6
 16226 ;;		On exit  : 3F/6
 16227 ;;		Unchanged: 0/0
 16228 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16229 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16230 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16231 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16232 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16233 ;;Total ram usage:       14 bytes
 16234 ;; Hardware stack levels used: 1
 16235 ;; Hardware stack levels required when called: 17
 16236 ;; This function calls:
 16237 ;;		_create_name
 16238 ;;		_dir_find
 16239 ;;		_dir_sdi
 16240 ;;		_ld_clust
 16241 ;; This function is called by:
 16242 ;;		_f_open
 16243 ;;		_f_opendir
 16244 ;; This function uses a non-reentrant model
 16245 ;;
 16246                           
 16247                           	psect	text13
 16248   016B22                     __ptext13:
 16249                           	callstack 0
 16250   016B22                     _follow_path:
 16251                           	callstack 107
 16252                           
 16253                           ; BSR set to: 6
 16254                           ;fatfs/ff.c: 3052:  DIR* dp,;fatfs/ff.c: 3053:  const TCHAR* path;fatfs/ff.c: 3055: {;fa
      +                          tfs/ff.c: 3056:  FRESULT res;;fatfs/ff.c: 3057:  BYTE ns;;fatfs/ff.c: 3058:  FATFS *fs =
      +                           dp->obj.fs;
 16255                           
 16256                           ; BSR set to: 6
 16257                           ;incstack = 0
 16258   016B22  C66A  F4D9         	movff	follow_path@dp,fsr2l
 16259   016B26  C66B  F4DA         	movff	follow_path@dp+1,fsr2h
 16260   016B2A  C4DE F674          	movff	postinc2,follow_path@fs
 16261   016B2E  C4DD F675          	movff	postdec2,follow_path@fs+1
 16262                           
 16263                           ;fatfs/ff.c: 3066:  {;fatfs/ff.c: 3067:   while (((*path) == '/' || (*path) == '\\')) pa
      +                          th++;
 16264   016B32  D003               	goto	l11059
 16265   016B34                     l11057:
 16266   016B34  0106               	movlb	6	; () banked
 16267   016B36  4B6C               	infsnz	follow_path@path& (0+255),f,b
 16268   016B38  2B6D               	incf	(follow_path@path+1)& (0+255),f,b
 16269   016B3A                     l11059:
 16270                           
 16271                           ; BSR set to: 6
 16272   016B3A  C66C  F4F6         	movff	follow_path@path,tblptrl
 16273   016B3E  C66D  F4F7         	movff	follow_path@path+1,tblptrh
 16274   016B42  0E00               	movlw	low (__mediumconst shr (0+16))
 16275   016B44  6EF8               	movwf	tblptru,c
 16276   016B46  0E24               	movlw	(high __ramtop+-1)
 16277   016B48  64F7               	cpfsgt	tblptrh,c
 16278   016B4A  D003               	bra	u13697
 16279   016B4C  0008               	tblrd		*
 16280   016B4E  50F5               	movf	tablat,w,c
 16281   016B50  D005               	bra	u13690
 16282   016B52                     u13697:
 16283   016B52  C4F6 F4E9          	movff	tblptrl,fsr0l
 16284   016B56  C4F7 F4EA          	movff	tblptrh,fsr0h
 16285   016B5A  50EF               	movf	indf0,w,c
 16286   016B5C                     u13690:
 16287   016B5C  0A2F               	xorlw	47
 16288   016B5E  B4D8               	btfsc	status,2,c
 16289   016B60  D7E9               	goto	l11057
 16290   016B62  C66C  F4F6         	movff	follow_path@path,tblptrl
 16291   016B66  C66D  F4F7         	movff	follow_path@path+1,tblptrh
 16292   016B6A  0E00               	movlw	low (__mediumconst shr (0+16))
 16293   016B6C  6EF8               	movwf	tblptru,c
 16294   016B6E  0E24               	movlw	(high __ramtop+-1)
 16295   016B70  64F7               	cpfsgt	tblptrh,c
 16296   016B72  D003               	bra	u13717
 16297   016B74  0008               	tblrd		*
 16298   016B76  50F5               	movf	tablat,w,c
 16299   016B78  D005               	bra	u13710
 16300   016B7A                     u13717:
 16301   016B7A  C4F6 F4E9          	movff	tblptrl,fsr0l
 16302   016B7E  C4F7 F4EA          	movff	tblptrh,fsr0h
 16303   016B82  50EF               	movf	indf0,w,c
 16304   016B84                     u13710:
 16305   016B84  0A5C               	xorlw	92
 16306   016B86  B4D8               	btfsc	status,2,c
 16307   016B88  D7D5               	goto	l11057
 16308                           
 16309                           ;fatfs/ff.c: 3068:   dp->obj.sclust = 0;
 16310   016B8A  0106               	movlb	6	; () banked
 16311   016B8C  EE20 F006          	lfsr	2,6
 16312   016B90  516A               	movf	follow_path@dp& (0+255),w,b
 16313   016B92  26D9               	addwf	fsr2l,f,c
 16314   016B94  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16315   016B96  22DA               	addwfc	fsr2h,f,c
 16316   016B98  6ADE               	clrf	postinc2,c
 16317   016B9A  6ADE               	clrf	postinc2,c
 16318   016B9C  6ADE               	clrf	postinc2,c
 16319   016B9E  6ADD               	clrf	postdec2,c
 16320                           
 16321                           ; BSR set to: 6
 16322                           ;fatfs/ff.c: 3069:  };fatfs/ff.c: 3087:  if ((UINT)*path < ' ') {
 16323   016BA0  C66C  F4F6         	movff	follow_path@path,tblptrl
 16324   016BA4  C66D  F4F7         	movff	follow_path@path+1,tblptrh
 16325   016BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 16326   016BAA  6EF8               	movwf	tblptru,c
 16327   016BAC  0E24               	movlw	(high __ramtop+-1)
 16328   016BAE  64F7               	cpfsgt	tblptrh,c
 16329   016BB0  D003               	bra	u13737
 16330   016BB2  0008               	tblrd		*
 16331   016BB4  50F5               	movf	tablat,w,c
 16332   016BB6  D005               	bra	u13730
 16333   016BB8                     u13737:
 16334   016BB8  C4F6 F4E9          	movff	tblptrl,fsr0l
 16335   016BBC  C4F7 F4EA          	movff	tblptrh,fsr0h
 16336   016BC0  50EF               	movf	indf0,w,c
 16337   016BC2                     u13730:
 16338   016BC2  0106               	movlb	6	; () banked
 16339   016BC4  6F6E               	movwf	??_follow_path& (0+255),b
 16340   016BC6  0E20               	movlw	32
 16341   016BC8  616E               	cpfslt	??_follow_path& (0+255),b
 16342   016BCA  D017               	goto	l11071
 16343                           
 16344                           ; BSR set to: 6
 16345                           ;fatfs/ff.c: 3088:   dp->fn[11] = 0x80;
 16346   016BCC  EE20 F027          	lfsr	2,39
 16347   016BD0  516A               	movf	follow_path@dp& (0+255),w,b
 16348   016BD2  26D9               	addwf	fsr2l,f,c
 16349   016BD4  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16350   016BD6  22DA               	addwfc	fsr2h,f,c
 16351   016BD8  0E80               	movlw	128
 16352   016BDA  6EDF               	movwf	indf2,c
 16353                           
 16354                           ; BSR set to: 6
 16355                           ;fatfs/ff.c: 3089:   res = dir_sdi(dp, 0);
 16356   016BDC  C66A  F624         	movff	follow_path@dp,dir_sdi@dp
 16357   016BE0  C66B  F625         	movff	follow_path@dp+1,dir_sdi@dp+1
 16358   016BE4  0E00               	movlw	0
 16359   016BE6  6F26               	movwf	dir_sdi@ofs& (0+255),b
 16360   016BE8  0E00               	movlw	0
 16361   016BEA  6F27               	movwf	(dir_sdi@ofs+1)& (0+255),b
 16362   016BEC  0E00               	movlw	0
 16363   016BEE  6F28               	movwf	(dir_sdi@ofs+2)& (0+255),b
 16364   016BF0  0E00               	movlw	0
 16365   016BF2  6F29               	movwf	(dir_sdi@ofs+3)& (0+255),b
 16366   016BF4  EC33  F0A5         	call	_dir_sdi	;wreg free
 16367   016BF8  D027               	goto	L5
 16368   016BFA                     l11071:
 16369                           
 16370                           ; BSR set to: 6
 16371                           ;fatfs/ff.c: 3093:    res = create_name(dp, &path);
 16372   016BFA  C66A  F509         	movff	follow_path@dp,create_name@dp
 16373   016BFE  C66B  F50A         	movff	follow_path@dp+1,create_name@dp+1
 16374   016C02  0E6C               	movlw	low follow_path@path
 16375   016C04  6E0B               	movwf	create_name@path^(0+1280),c
 16376   016C06  0E06               	movlw	high follow_path@path
 16377   016C08  6E0C               	movwf	(create_name@path+1)^(0+1280),c
 16378   016C0A  EC09  F0A8         	call	_create_name	;wreg free
 16379   016C0E  0106               	movlb	6	; () banked
 16380   016C10  6F77               	movwf	follow_path@res& (0+255),b
 16381                           
 16382                           ; BSR set to: 6
 16383                           ;fatfs/ff.c: 3094:    if (res != FR_OK) break;
 16384   016C12  5177               	movf	follow_path@res& (0+255),w,b
 16385   016C14  A4D8               	btfss	status,2,c
 16386   016C16  D056               	goto	l11107
 16387                           
 16388                           ; BSR set to: 6
 16389                           ;fatfs/ff.c: 3095:    res = dir_find(dp);
 16390   016C18  C66A  F662         	movff	follow_path@dp,dir_find@dp
 16391   016C1C  C66B  F663         	movff	follow_path@dp+1,dir_find@dp+1
 16392   016C20  EC43  F0BB         	call	_dir_find	;wreg free
 16393   016C24  6F77               	movwf	follow_path@res& (0+255),b
 16394                           
 16395                           ; BSR set to: 6
 16396                           ;fatfs/ff.c: 3096:    ns = dp->fn[11];
 16397   016C26  EE20 F027          	lfsr	2,39
 16398   016C2A  516A               	movf	follow_path@dp& (0+255),w,b
 16399   016C2C  26D9               	addwf	fsr2l,f,c
 16400   016C2E  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16401   016C30  22DA               	addwfc	fsr2h,f,c
 16402   016C32  50DF               	movf	indf2,w,c
 16403   016C34  6F76               	movwf	follow_path@ns& (0+255),b
 16404                           
 16405                           ; BSR set to: 6
 16406                           ;fatfs/ff.c: 3097:    if (res != FR_OK) {
 16407   016C36  5177               	movf	follow_path@res& (0+255),w,b
 16408   016C38  B4D8               	btfsc	status,2,c
 16409   016C3A  D008               	goto	l487
 16410                           
 16411                           ; BSR set to: 6
 16412                           ;fatfs/ff.c: 3098:     if (res == FR_NO_FILE) {
 16413   016C3C  0E04               	movlw	4
 16414   016C3E  1977               	xorwf	follow_path@res& (0+255),w,b
 16415   016C40  B4D8               	btfsc	status,2,c
 16416                           
 16417                           ; BSR set to: 6
 16418                           ;fatfs/ff.c: 3104:       if (!(ns & 0x04)) res = FR_NO_PATH;
 16419   016C42  B576               	btfsc	follow_path@ns& (0+255),2,b
 16420   016C44  D03F               	goto	l11107
 16421   016C46                     u13780:
 16422                           
 16423                           ; BSR set to: 6
 16424   016C46  0E05               	movlw	5
 16425   016C48                     L5:
 16426   016C48  6F77               	movwf	follow_path@res& (0+255),b
 16427   016C4A  D03C               	goto	l11107
 16428   016C4C                     l487:
 16429                           
 16430                           ; BSR set to: 6
 16431                           ;fatfs/ff.c: 3109:    if (ns & 0x04) break;
 16432   016C4C  B576               	btfsc	follow_path@ns& (0+255),2,b
 16433   016C4E  D03A               	goto	l11107
 16434                           
 16435                           ; BSR set to: 6
 16436                           ;fatfs/ff.c: 3111:    if (!(dp->obj.attr & 0x10)) {
 16437   016C50  EE20 F004          	lfsr	2,4
 16438   016C54  516A               	movf	follow_path@dp& (0+255),w,b
 16439   016C56  26D9               	addwf	fsr2l,f,c
 16440   016C58  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16441   016C5A  22DA               	addwfc	fsr2h,f,c
 16442   016C5C  A8DF               	btfss	indf2,4,c
 16443   016C5E  D7F3               	goto	u13780
 16444                           
 16445                           ; BSR set to: 6
 16446                           ;fatfs/ff.c: 3122:    {;fatfs/ff.c: 3123:     dp->obj.sclust = ld_clust(fs, fs->win + dp
      +                          ->dptr % ((UINT)512));
 16447   016C60  C674  F508         	movff	follow_path@fs,ld_clust@fs
 16448   016C64  C675  F509         	movff	follow_path@fs+1,ld_clust@fs+1
 16449   016C68  EE20 F00E          	lfsr	2,14
 16450   016C6C  516A               	movf	follow_path@dp& (0+255),w,b
 16451   016C6E  26D9               	addwf	fsr2l,f,c
 16452   016C70  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16453   016C72  22DA               	addwfc	fsr2h,f,c
 16454   016C74  C4DE F66E          	movff	postinc2,??_follow_path
 16455   016C78  C4DD F66F          	movff	postdec2,??_follow_path+1
 16456   016C7C  0EFF               	movlw	255
 16457   016C7E  156E               	andwf	??_follow_path& (0+255),w,b
 16458   016C80  6F70               	movwf	(??_follow_path+2)& (0+255),b
 16459   016C82  0E01               	movlw	1
 16460   016C84  156F               	andwf	(??_follow_path+1)& (0+255),w,b
 16461   016C86  6F71               	movwf	(??_follow_path+3)& (0+255),b
 16462   016C88  5170               	movf	(??_follow_path+2)& (0+255),w,b
 16463   016C8A  2574               	addwf	follow_path@fs& (0+255),w,b
 16464   016C8C  6F72               	movwf	(??_follow_path+4)& (0+255),b
 16465   016C8E  5171               	movf	(??_follow_path+3)& (0+255),w,b
 16466   016C90  2175               	addwfc	(follow_path@fs+1)& (0+255),w,b
 16467   016C92  6F73               	movwf	(??_follow_path+5)& (0+255),b
 16468   016C94  0E30               	movlw	48
 16469   016C96  2572               	addwf	(??_follow_path+4)& (0+255),w,b
 16470   016C98  6E0A               	movwf	ld_clust@dir^(0+1280),c
 16471   016C9A  0E00               	movlw	0
 16472   016C9C  2173               	addwfc	(??_follow_path+5)& (0+255),w,b
 16473   016C9E  6E0B               	movwf	(ld_clust@dir+1)^(0+1280),c
 16474   016CA0  EC4B  F0CA         	call	_ld_clust	;wreg free
 16475   016CA4  0106               	movlb	6	; () banked
 16476   016CA6  EE20 F006          	lfsr	2,6
 16477   016CAA  516A               	movf	follow_path@dp& (0+255),w,b
 16478   016CAC  26D9               	addwf	fsr2l,f,c
 16479   016CAE  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16480   016CB0  22DA               	addwfc	fsr2h,f,c
 16481   016CB2  C508  F4DE         	movff	?_ld_clust,postinc2
 16482   016CB6  C509  F4DE         	movff	?_ld_clust+1,postinc2
 16483   016CBA  C50A  F4DE         	movff	?_ld_clust+2,postinc2
 16484   016CBE  C50B  F4DE         	movff	?_ld_clust+3,postinc2
 16485   016CC2  D79B               	goto	l11071
 16486   016CC4                     l11107:
 16487                           
 16488                           ; BSR set to: 6
 16489                           ;fatfs/ff.c: 3128:  return res;
 16490   016CC4  5177               	movf	follow_path@res& (0+255),w,b
 16491                           
 16492                           ; BSR set to: 6
 16493   016CC6  0012               	return		;funcret
 16494   016CC8                     __end_of_follow_path:
 16495                           	callstack 0
 16496                           
 16497 ;; *************** function _ld_clust *****************
 16498 ;; Defined at:
 16499 ;;		line 1848 in file "fatfs/ff.c"
 16500 ;; Parameters:    Size  Location     Type
 16501 ;;  fs              2    7[COMRAM] PTR struct .
 16502 ;;		 -> fs(560), NULL(0), 
 16503 ;;  dir             2    9[COMRAM] PTR const unsigned char 
 16504 ;;		 -> fs$win(512), fs(560), NULL(0), 
 16505 ;; Auto vars:     Size  Location     Type
 16506 ;;  cl              4   15[COMRAM] unsigned long 
 16507 ;; Return value:  Size  Location     Type
 16508 ;;                  4    7[COMRAM] unsigned long 
 16509 ;; Registers used:
 16510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16511 ;; Tracked objects:
 16512 ;;		On entry : 3F/6
 16513 ;;		On exit  : 0/0
 16514 ;;		Unchanged: 0/0
 16515 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16517 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16518 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16519 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16520 ;;Total ram usage:       12 bytes
 16521 ;; Hardware stack levels used: 1
 16522 ;; Hardware stack levels required when called: 1
 16523 ;; This function calls:
 16524 ;;		_ld_word
 16525 ;; This function is called by:
 16526 ;;		_follow_path
 16527 ;;		_f_open
 16528 ;;		_f_opendir
 16529 ;; This function uses a non-reentrant model
 16530 ;;
 16531                           
 16532                           	psect	text14
 16533   019496                     __ptext14:
 16534                           	callstack 0
 16535   019496                     _ld_clust:
 16536                           	callstack 123
 16537                           
 16538                           ; BSR set to: 6
 16539                           ;fatfs/ff.c: 1849:  FATFS* fs,;fatfs/ff.c: 1850:  const BYTE* dir;fatfs/ff.c: 1852: {;fa
      +                          tfs/ff.c: 1853:  DWORD cl;;fatfs/ff.c: 1855:  cl = ld_word(dir + 26);
 16540                           
 16541                           ; BSR set to: 6
 16542                           ;incstack = 0
 16543   019496  0E1A               	movlw	26
 16544   019498  240A               	addwf	ld_clust@dir^(0+1280),w,c
 16545   01949A  6E01               	movwf	ld_word@ptr^(0+1280),c
 16546   01949C  0E00               	movlw	0
 16547   01949E  200B               	addwfc	(ld_clust@dir+1)^(0+1280),w,c
 16548   0194A0  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 16549   0194A2  EC35  F0CE         	call	_ld_word	;wreg free
 16550   0194A6  C501  F510         	movff	?_ld_word,ld_clust@cl
 16551   0194AA  C502  F511         	movff	?_ld_word+1,ld_clust@cl+1
 16552   0194AE  6A12               	clrf	(ld_clust@cl+2)^(0+1280),c
 16553   0194B0  6A13               	clrf	(ld_clust@cl+3)^(0+1280),c
 16554                           
 16555                           ;fatfs/ff.c: 1856:  if (fs->fs_type == 3) {
 16556   0194B2  C508  F4D9         	movff	ld_clust@fs,fsr2l
 16557   0194B6  C509  F4DA         	movff	ld_clust@fs+1,fsr2h
 16558   0194BA  0E03               	movlw	3
 16559   0194BC  18DE               	xorwf	postinc2,w,c
 16560   0194BE  A4D8               	btfss	status,2,c
 16561   0194C0  D01C               	goto	l10599
 16562                           
 16563                           ;fatfs/ff.c: 1857:   cl |= (DWORD)ld_word(dir + 20) << 16;
 16564   0194C2  0E14               	movlw	20
 16565   0194C4  240A               	addwf	ld_clust@dir^(0+1280),w,c
 16566   0194C6  6E01               	movwf	ld_word@ptr^(0+1280),c
 16567   0194C8  0E00               	movlw	0
 16568   0194CA  200B               	addwfc	(ld_clust@dir+1)^(0+1280),w,c
 16569   0194CC  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 16570   0194CE  EC35  F0CE         	call	_ld_word	;wreg free
 16571   0194D2  5001               	movf	?_ld_word^(0+1280),w,c
 16572   0194D4  6E0C               	movwf	??_ld_clust^(0+1280),c
 16573   0194D6  5002               	movf	(?_ld_word+1)^(0+1280),w,c
 16574   0194D8  6E0D               	movwf	(??_ld_clust+1)^(0+1280),c
 16575   0194DA  6A0E               	clrf	(??_ld_clust+2)^(0+1280),c
 16576   0194DC  6A0F               	clrf	(??_ld_clust+3)^(0+1280),c
 16577   0194DE  C50D  F50F         	movff	??_ld_clust+1,??_ld_clust+3
 16578   0194E2  C50C  F50E         	movff	??_ld_clust,??_ld_clust+2
 16579   0194E6  6A0D               	clrf	(??_ld_clust+1)^(0+1280),c
 16580   0194E8  6A0C               	clrf	??_ld_clust^(0+1280),c
 16581   0194EA  500C               	movf	??_ld_clust^(0+1280),w,c
 16582   0194EC  1210               	iorwf	ld_clust@cl^(0+1280),f,c
 16583   0194EE  500D               	movf	(??_ld_clust+1)^(0+1280),w,c
 16584   0194F0  1211               	iorwf	(ld_clust@cl+1)^(0+1280),f,c
 16585   0194F2  500E               	movf	(??_ld_clust+2)^(0+1280),w,c
 16586   0194F4  1212               	iorwf	(ld_clust@cl+2)^(0+1280),f,c
 16587   0194F6  500F               	movf	(??_ld_clust+3)^(0+1280),w,c
 16588   0194F8  1213               	iorwf	(ld_clust@cl+3)^(0+1280),f,c
 16589   0194FA                     l10599:
 16590                           
 16591                           ;fatfs/ff.c: 1860:  return cl;
 16592   0194FA  C510  F508         	movff	ld_clust@cl,?_ld_clust
 16593   0194FE  C511  F509         	movff	ld_clust@cl+1,?_ld_clust+1
 16594   019502  C512  F50A         	movff	ld_clust@cl+2,?_ld_clust+2
 16595   019506  C513  F50B         	movff	ld_clust@cl+3,?_ld_clust+3
 16596   01950A  0012               	return		;funcret
 16597   01950C                     __end_of_ld_clust:
 16598                           	callstack 0
 16599                           
 16600 ;; *************** function _dir_find *****************
 16601 ;; Defined at:
 16602 ;;		line 2384 in file "fatfs/ff.c"
 16603 ;; Parameters:    Size  Location     Type
 16604 ;;  dp              2   98[BANK6 ] PTR struct .
 16605 ;;		 -> fsdir(40), f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), 
 16606 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_open@dj(40), 
 16607 ;; Auto vars:     Size  Location     Type
 16608 ;;  fs              2  102[BANK6 ] PTR struct .
 16609 ;;		 -> fs(560), NULL(0), 
 16610 ;;  res             1  105[BANK6 ] enum E275
 16611 ;;  c               1  104[BANK6 ] unsigned char 
 16612 ;; Return value:  Size  Location     Type
 16613 ;;                  1    wreg      enum E275
 16614 ;; Registers used:
 16615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16616 ;; Tracked objects:
 16617 ;;		On entry : 3F/6
 16618 ;;		On exit  : 3F/6
 16619 ;;		Unchanged: 0/0
 16620 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16621 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16622 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16623 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16624 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16625 ;;Total ram usage:        8 bytes
 16626 ;; Hardware stack levels used: 1
 16627 ;; Hardware stack levels required when called: 16
 16628 ;; This function calls:
 16629 ;;		_dir_next
 16630 ;;		_dir_sdi
 16631 ;;		_memcmp
 16632 ;;		_move_window
 16633 ;; This function is called by:
 16634 ;;		_follow_path
 16635 ;; This function uses a non-reentrant model
 16636 ;;
 16637                           
 16638                           	psect	text15
 16639   017686                     __ptext15:
 16640                           	callstack 0
 16641   017686                     _dir_find:
 16642                           	callstack 107
 16643                           
 16644                           ; BSR set to: 6
 16645                           ;fatfs/ff.c: 2385:  DIR* dp;fatfs/ff.c: 2387: {;fatfs/ff.c: 2388:  FRESULT res;;fatfs/ff
      +                          .c: 2389:  FATFS *fs = dp->obj.fs;
 16646                           
 16647                           ;incstack = 0
 16648   017686  C662  F4D9         	movff	dir_find@dp,fsr2l
 16649   01768A  C663  F4DA         	movff	dir_find@dp+1,fsr2h
 16650   01768E  C4DE F666          	movff	postinc2,dir_find@fs
 16651   017692  C4DD F667          	movff	postdec2,dir_find@fs+1
 16652                           
 16653                           ; BSR set to: 6
 16654                           ;fatfs/ff.c: 2390:  BYTE c;;fatfs/ff.c: 2395:  res = dir_sdi(dp, 0);
 16655   017696  C662  F624         	movff	dir_find@dp,dir_sdi@dp
 16656   01769A  C663  F625         	movff	dir_find@dp+1,dir_sdi@dp+1
 16657   01769E  0E00               	movlw	0
 16658   0176A0  6F26               	movwf	dir_sdi@ofs& (0+255),b
 16659   0176A2  0E00               	movlw	0
 16660   0176A4  6F27               	movwf	(dir_sdi@ofs+1)& (0+255),b
 16661   0176A6  0E00               	movlw	0
 16662   0176A8  6F28               	movwf	(dir_sdi@ofs+2)& (0+255),b
 16663   0176AA  0E00               	movlw	0
 16664   0176AC  6F29               	movwf	(dir_sdi@ofs+3)& (0+255),b
 16665   0176AE  EC33  F0A5         	call	_dir_sdi	;wreg free
 16666   0176B2  6F69               	movwf	dir_find@res& (0+255),b
 16667                           
 16668                           ; BSR set to: 6
 16669                           ;fatfs/ff.c: 2396:  if (res != FR_OK) return res;
 16670   0176B4  5169               	movf	dir_find@res& (0+255),w,b
 16671   0176B6  B4D8               	btfsc	status,2,c
 16672   0176B8  D003               	goto	l10613
 16673   0176BA                     u12820:
 16674   0176BA  0106               	movlb	6	; () banked
 16675   0176BC  5169               	movf	dir_find@res& (0+255),w,b
 16676   0176BE  0012               	return	
 16677   0176C0                     l10613:
 16678                           
 16679                           ; BSR set to: 6
 16680                           ;fatfs/ff.c: 2422:   res = move_window(fs, dp->sect);
 16681   0176C0  C666  F600         	movff	dir_find@fs,move_window@fs
 16682   0176C4  C667  F601         	movff	dir_find@fs+1,move_window@fs+1
 16683   0176C8  EE20 F016          	lfsr	2,22
 16684   0176CC  5162               	movf	dir_find@dp& (0+255),w,b
 16685   0176CE  26D9               	addwf	fsr2l,f,c
 16686   0176D0  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16687   0176D2  22DA               	addwfc	fsr2h,f,c
 16688   0176D4  C4DE F602          	movff	postinc2,move_window@sect
 16689   0176D8  C4DE F603          	movff	postinc2,move_window@sect+1
 16690   0176DC  C4DE F604          	movff	postinc2,move_window@sect+2
 16691   0176E0  C4DE F605          	movff	postinc2,move_window@sect+3
 16692   0176E4  EC23  F0C4         	call	_move_window	;wreg free
 16693   0176E8  0106               	movlb	6	; () banked
 16694   0176EA  6F69               	movwf	dir_find@res& (0+255),b
 16695                           
 16696                           ; BSR set to: 6
 16697                           ;fatfs/ff.c: 2423:   if (res != FR_OK) break;
 16698   0176EC  5169               	movf	dir_find@res& (0+255),w,b
 16699   0176EE  A4D8               	btfss	status,2,c
 16700   0176F0  D7E4               	goto	u12820
 16701                           
 16702                           ; BSR set to: 6
 16703                           ;fatfs/ff.c: 2424:   c = dp->dir[0];
 16704   0176F2  EE20 F01A          	lfsr	2,26
 16705   0176F6  5162               	movf	dir_find@dp& (0+255),w,b
 16706   0176F8  26D9               	addwf	fsr2l,f,c
 16707   0176FA  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16708   0176FC  22DA               	addwfc	fsr2h,f,c
 16709   0176FE  C4DE F664          	movff	postinc2,??_dir_find
 16710   017702  C4DD F665          	movff	postdec2,??_dir_find+1
 16711   017706  C664  F4D9         	movff	??_dir_find,fsr2l
 16712   01770A  C665  F4DA         	movff	??_dir_find+1,fsr2h
 16713   01770E  50DF               	movf	indf2,w,c
 16714   017710  6F68               	movwf	dir_find@c& (0+255),b
 16715                           
 16716                           ; BSR set to: 6
 16717                           ;fatfs/ff.c: 2425:   if (c == 0) { res = FR_NO_FILE; break; }
 16718   017712  5168               	movf	dir_find@c& (0+255),w,b
 16719   017714  A4D8               	btfss	status,2,c
 16720   017716  D003               	goto	l10625
 16721                           
 16722                           ; BSR set to: 6
 16723   017718  0E04               	movlw	4
 16724   01771A  6F69               	movwf	dir_find@res& (0+255),b
 16725   01771C  D7CE               	goto	u12820
 16726   01771E                     l10625:
 16727                           
 16728                           ; BSR set to: 6
 16729                           ;fatfs/ff.c: 2448:   dp->obj.attr = dp->dir[11] & 0x3F;
 16730   01771E  EE20 F004          	lfsr	2,4
 16731   017722  5162               	movf	dir_find@dp& (0+255),w,b
 16732   017724  26D9               	addwf	fsr2l,f,c
 16733   017726  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16734   017728  22DA               	addwfc	fsr2h,f,c
 16735   01772A  EE10 F01A          	lfsr	1,26
 16736   01772E  5162               	movf	dir_find@dp& (0+255),w,b
 16737   017730  26E1               	addwf	fsr1l,f,c
 16738   017732  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16739   017734  22E2               	addwfc	fsr1h,f,c
 16740   017736  EE00 F00B          	lfsr	0,11
 16741   01773A  50E6               	movf	postinc1,w,c
 16742   01773C  26E9               	addwf	fsr0l,f,c
 16743   01773E  50E5               	movf	postdec1,w,c
 16744   017740  22EA               	addwfc	fsr0h,f,c
 16745   017742  50EF               	movf	indf0,w,c
 16746   017744  0B3F               	andlw	63
 16747   017746  6EDF               	movwf	indf2,c
 16748                           
 16749                           ; BSR set to: 6
 16750                           ;fatfs/ff.c: 2449:   if (!(dp->dir[11] & 0x08) && !memcmp(dp->dir, dp->fn, 11)) break;
 16751   017748  EE20 F01A          	lfsr	2,26
 16752   01774C  5162               	movf	dir_find@dp& (0+255),w,b
 16753   01774E  26D9               	addwf	fsr2l,f,c
 16754   017750  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16755   017752  22DA               	addwfc	fsr2h,f,c
 16756   017754  EE10 F00B          	lfsr	1,11
 16757   017758  50DE               	movf	postinc2,w,c
 16758   01775A  26E1               	addwf	fsr1l,f,c
 16759   01775C  50DD               	movf	postdec2,w,c
 16760   01775E  22E2               	addwfc	fsr1h,f,c
 16761   017760  B6E7               	btfsc	indf1,3,c
 16762   017762  D01A               	goto	l10633
 16763                           
 16764                           ; BSR set to: 6
 16765   017764  EE20 F01A          	lfsr	2,26
 16766   017768  5162               	movf	dir_find@dp& (0+255),w,b
 16767   01776A  26D9               	addwf	fsr2l,f,c
 16768   01776C  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16769   01776E  22DA               	addwfc	fsr2h,f,c
 16770   017770  C4DE F501          	movff	postinc2,memcmp@vl
 16771   017774  C4DD F502          	movff	postdec2,memcmp@vl+1
 16772   017778  0E1C               	movlw	28
 16773   01777A  2562               	addwf	dir_find@dp& (0+255),w,b
 16774   01777C  6E03               	movwf	memcmp@vr^(0+1280),c
 16775   01777E  0E00               	movlw	0
 16776   017780  2163               	addwfc	(dir_find@dp+1)& (0+255),w,b
 16777   017782  6E04               	movwf	(memcmp@vr+1)^(0+1280),c
 16778   017784  0E00               	movlw	0
 16779   017786  6E06               	movwf	(memcmp@n+1)^(0+1280),c
 16780   017788  0E0B               	movlw	11
 16781   01778A  6E05               	movwf	memcmp@n^(0+1280),c
 16782   01778C  EC43  F0C6         	call	_memcmp	;wreg free
 16783   017790  5001               	movf	?_memcmp^(0+1280),w,c
 16784   017792  1002               	iorwf	(?_memcmp+1)^(0+1280),w,c
 16785   017794  B4D8               	btfsc	status,2,c
 16786   017796  D791               	goto	u12820
 16787   017798                     l10633:
 16788                           
 16789                           ;fatfs/ff.c: 2451:   res = dir_next(dp, 0);
 16790   017798  C662  F648         	movff	dir_find@dp,dir_next@dp
 16791   01779C  C663  F649         	movff	dir_find@dp+1,dir_next@dp+1
 16792   0177A0  0E00               	movlw	0
 16793   0177A2  0106               	movlb	6	; () banked
 16794   0177A4  6F4B               	movwf	(dir_next@stretch+1)& (0+255),b
 16795   0177A6  0E00               	movlw	0
 16796   0177A8  6F4A               	movwf	dir_next@stretch& (0+255),b
 16797   0177AA  ECB5  F09E         	call	_dir_next	;wreg free
 16798   0177AE  0106               	movlb	6	; () banked
 16799   0177B0  6F69               	movwf	dir_find@res& (0+255),b
 16800                           
 16801                           ; BSR set to: 6
 16802                           ;fatfs/ff.c: 2452:  } while (res == FR_OK);
 16803   0177B2  5169               	movf	dir_find@res& (0+255),w,b
 16804   0177B4  A4D8               	btfss	status,2,c
 16805   0177B6  D781               	goto	u12820
 16806   0177B8  D783               	goto	l10613
 16807   0177BA                     __end_of_dir_find:
 16808                           	callstack 0
 16809                           
 16810 ;; *************** function _create_name *****************
 16811 ;; Defined at:
 16812 ;;		line 2847 in file "fatfs/ff.c"
 16813 ;; Parameters:    Size  Location     Type
 16814 ;;  dp              2    8[COMRAM] PTR struct .
 16815 ;;		 -> fsdir(40), f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), 
 16816 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_open@dj(40), 
 16817 ;;  path            2   10[COMRAM] PTR PTR const unsigned c
 16818 ;;		 -> follow_path@path(2), 
 16819 ;; Auto vars:     Size  Location     Type
 16820 ;;  i               2   26[COMRAM] unsigned int 
 16821 ;;  sfn             2   24[COMRAM] PTR unsigned char 
 16822 ;;		 -> djn$fn(12), fsdir$fn(12), fsdir(40), f_rename@djn(40), 
 16823 ;;		 -> djo$fn(12), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
 16824 ;;		 -> f_stat@dj(40), dj$fn(12), f_open@dj(40), 
 16825 ;;  si              2   22[COMRAM] unsigned int 
 16826 ;;  p               2   20[COMRAM] PTR const unsigned char 
 16827 ;;		 -> tmp_buf(512), STR_65(2), STR_62(5), 
 16828 ;;  ni              2   18[COMRAM] unsigned int 
 16829 ;;  c               1   28[COMRAM] unsigned char 
 16830 ;;  d               1   17[COMRAM] unsigned char 
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  1    wreg      enum E275
 16833 ;; Registers used:
 16834 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16835 ;; Tracked objects:
 16836 ;;		On entry : 3F/6
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16841 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16842 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16843 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16844 ;;Total ram usage:       21 bytes
 16845 ;; Hardware stack levels used: 1
 16846 ;; Hardware stack levels required when called: 1
 16847 ;; This function calls:
 16848 ;;		_dbc_1st
 16849 ;;		_dbc_2nd
 16850 ;;		_memset
 16851 ;;		_strchr
 16852 ;; This function is called by:
 16853 ;;		_follow_path
 16854 ;; This function uses a non-reentrant model
 16855 ;;
 16856                           
 16857                           	psect	text16
 16858   015012                     __ptext16:
 16859                           	callstack 0
 16860   015012                     _create_name:
 16861                           	callstack 122
 16862                           
 16863                           ; BSR set to: 6
 16864                           ;fatfs/ff.c: 2848:  DIR* dp,;fatfs/ff.c: 2849:  const TCHAR** path;fatfs/ff.c: 2851: {;f
      +                          atfs/ff.c: 2980:  BYTE c, d;;fatfs/ff.c: 2981:  BYTE *sfn;;fatfs/ff.c: 2982:  UINT ni, s
      +                          i, i;;fatfs/ff.c: 2983:  const char *p;;fatfs/ff.c: 2986:  p = *path; sfn = dp->fn;
 16865                           
 16866                           ; BSR set to: 6
 16867                           ;incstack = 0
 16868   015012  C50B  F4D9         	movff	create_name@path,fsr2l
 16869   015016  C50C  F4DA         	movff	create_name@path+1,fsr2h
 16870   01501A  C4DE F515          	movff	postinc2,create_name@p
 16871   01501E  C4DD F516          	movff	postdec2,create_name@p+1
 16872                           
 16873                           ; BSR set to: 6
 16874   015022  0E1C               	movlw	28
 16875   015024  2409               	addwf	create_name@dp^(0+1280),w,c
 16876   015026  6E19               	movwf	create_name@sfn^(0+1280),c
 16877   015028  0E00               	movlw	0
 16878   01502A  200A               	addwfc	(create_name@dp+1)^(0+1280),w,c
 16879   01502C  6E1A               	movwf	(create_name@sfn+1)^(0+1280),c
 16880                           
 16881                           ; BSR set to: 6
 16882                           ;fatfs/ff.c: 2987:  memset(sfn, ' ', 11);
 16883   01502E  C519  F501         	movff	create_name@sfn,memset@dest
 16884   015032  C51A  F502         	movff	create_name@sfn+1,memset@dest+1
 16885   015036  0E00               	movlw	0
 16886   015038  6E04               	movwf	(memset@c+1)^(0+1280),c
 16887   01503A  0E20               	movlw	32
 16888   01503C  6E03               	movwf	memset@c^(0+1280),c
 16889   01503E  0E00               	movlw	0
 16890   015040  6E06               	movwf	(memset@n+1)^(0+1280),c
 16891   015042  0E0B               	movlw	11
 16892   015044  6E05               	movwf	memset@n^(0+1280),c
 16893   015046  ECEB  F0CE         	call	_memset	;wreg free
 16894                           
 16895                           ; BSR set to: 6
 16896                           ;fatfs/ff.c: 2988:  si = i = 0; ni = 8;
 16897   01504A  0E00               	movlw	0
 16898   01504C  6E1C               	movwf	(create_name@i+1)^(0+1280),c
 16899   01504E  0E00               	movlw	0
 16900   015050  6E1B               	movwf	create_name@i^(0+1280),c
 16901   015052  C51B  F517         	movff	create_name@i,create_name@si
 16902   015056  C51C  F518         	movff	create_name@i+1,create_name@si+1
 16903                           
 16904                           ; BSR set to: 6
 16905   01505A  0E00               	movlw	0
 16906   01505C  6E14               	movwf	(create_name@ni+1)^(0+1280),c
 16907   01505E  0E08               	movlw	8
 16908   015060  6E13               	movwf	create_name@ni^(0+1280),c
 16909   015062                     l10651:
 16910                           
 16911                           ;fatfs/ff.c: 3003:   c = (BYTE)p[si++];
 16912   015062  5017               	movf	create_name@si^(0+1280),w,c
 16913   015064  2415               	addwf	create_name@p^(0+1280),w,c
 16914   015066  6E0D               	movwf	??_create_name^(0+1280),c
 16915   015068  5018               	movf	(create_name@si+1)^(0+1280),w,c
 16916   01506A  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 16917   01506C  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 16918   01506E  C50D  F4F6         	movff	??_create_name,tblptrl
 16919   015072  C50E  F4F7         	movff	??_create_name+1,tblptrh
 16920   015076  0E00               	movlw	low (__mediumconst shr (0+16))
 16921   015078  6EF8               	movwf	tblptru,c
 16922   01507A  0E24               	movlw	(high __ramtop+-1)
 16923   01507C  64F7               	cpfsgt	tblptrh,c
 16924   01507E  D003               	bra	u12887
 16925   015080  0008               	tblrd		*
 16926   015082  50F5               	movf	tablat,w,c
 16927   015084  D005               	bra	u12880
 16928   015086                     u12887:
 16929   015086  C4F6 F4E9          	movff	tblptrl,fsr0l
 16930   01508A  C4F7 F4EA          	movff	tblptrh,fsr0h
 16931   01508E  50EF               	movf	indf0,w,c
 16932   015090                     u12880:
 16933   015090  6E1D               	movwf	create_name@c^(0+1280),c
 16934   015092  4A17               	infsnz	create_name@si^(0+1280),f,c
 16935   015094  2A18               	incf	(create_name@si+1)^(0+1280),f,c
 16936                           
 16937                           ;fatfs/ff.c: 3004:   if (c <= ' ') break;
 16938   015096  0E21               	movlw	33
 16939   015098  601D               	cpfslt	create_name@c^(0+1280),c
 16940   01509A  D001               	goto	l10659
 16941   01509C  D0C4               	goto	l10719
 16942   01509E                     l10659:
 16943                           
 16944                           ;fatfs/ff.c: 3005:   if (((c) == '/' || (c) == '\\')) {
 16945   01509E  0E2F               	movlw	47
 16946   0150A0  181D               	xorwf	create_name@c^(0+1280),w,c
 16947   0150A2  B4D8               	btfsc	status,2,c
 16948   0150A4  D007               	goto	l10665
 16949   0150A6  0E5C               	movlw	92
 16950   0150A8  181D               	xorwf	create_name@c^(0+1280),w,c
 16951   0150AA  B4D8               	btfsc	status,2,c
 16952   0150AC  D003               	goto	l10665
 16953   0150AE  D037               	goto	l10669
 16954   0150B0                     l10663:
 16955   0150B0  4A17               	infsnz	create_name@si^(0+1280),f,c
 16956   0150B2  2A18               	incf	(create_name@si+1)^(0+1280),f,c
 16957   0150B4                     l10665:
 16958   0150B4  5017               	movf	create_name@si^(0+1280),w,c
 16959   0150B6  2415               	addwf	create_name@p^(0+1280),w,c
 16960   0150B8  6E0D               	movwf	??_create_name^(0+1280),c
 16961   0150BA  5018               	movf	(create_name@si+1)^(0+1280),w,c
 16962   0150BC  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 16963   0150BE  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 16964   0150C0  C50D  F4F6         	movff	??_create_name,tblptrl
 16965   0150C4  C50E  F4F7         	movff	??_create_name+1,tblptrh
 16966   0150C8  0E00               	movlw	low (__mediumconst shr (0+16))
 16967   0150CA  6EF8               	movwf	tblptru,c
 16968   0150CC  0E24               	movlw	(high __ramtop+-1)
 16969   0150CE  64F7               	cpfsgt	tblptrh,c
 16970   0150D0  D003               	bra	u12927
 16971   0150D2  0008               	tblrd		*
 16972   0150D4  50F5               	movf	tablat,w,c
 16973   0150D6  D005               	bra	u12920
 16974   0150D8                     u12927:
 16975   0150D8  C4F6 F4E9          	movff	tblptrl,fsr0l
 16976   0150DC  C4F7 F4EA          	movff	tblptrh,fsr0h
 16977   0150E0  50EF               	movf	indf0,w,c
 16978   0150E2                     u12920:
 16979   0150E2  0A2F               	xorlw	47
 16980   0150E4  B4D8               	btfsc	status,2,c
 16981   0150E6  D7E4               	goto	l10663
 16982   0150E8  5017               	movf	create_name@si^(0+1280),w,c
 16983   0150EA  2415               	addwf	create_name@p^(0+1280),w,c
 16984   0150EC  6E0D               	movwf	??_create_name^(0+1280),c
 16985   0150EE  5018               	movf	(create_name@si+1)^(0+1280),w,c
 16986   0150F0  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 16987   0150F2  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 16988   0150F4  C50D  F4F6         	movff	??_create_name,tblptrl
 16989   0150F8  C50E  F4F7         	movff	??_create_name+1,tblptrh
 16990   0150FC  0E00               	movlw	low (__mediumconst shr (0+16))
 16991   0150FE  6EF8               	movwf	tblptru,c
 16992   015100  0E24               	movlw	(high __ramtop+-1)
 16993   015102  64F7               	cpfsgt	tblptrh,c
 16994   015104  D003               	bra	u12947
 16995   015106  0008               	tblrd		*
 16996   015108  50F5               	movf	tablat,w,c
 16997   01510A  D005               	bra	u12940
 16998   01510C                     u12947:
 16999   01510C  C4F6 F4E9          	movff	tblptrl,fsr0l
 17000   015110  C4F7 F4EA          	movff	tblptrh,fsr0h
 17001   015114  50EF               	movf	indf0,w,c
 17002   015116                     u12940:
 17003   015116  0A5C               	xorlw	92
 17004   015118  A4D8               	btfss	status,2,c
 17005   01511A  D085               	goto	l10719
 17006   01511C  D7C9               	goto	l10663
 17007   01511E                     l10669:
 17008                           
 17009                           ;fatfs/ff.c: 3009:   if (c == '.' || i >= ni) {
 17010   01511E  0E2E               	movlw	46
 17011   015120  181D               	xorwf	create_name@c^(0+1280),w,c
 17012   015122  B4D8               	btfsc	status,2,c
 17013   015124  D006               	goto	u12970
 17014   015126  5013               	movf	create_name@ni^(0+1280),w,c
 17015   015128  5C1B               	subwf	create_name@i^(0+1280),w,c
 17016   01512A  5014               	movf	(create_name@ni+1)^(0+1280),w,c
 17017   01512C  581C               	subwfb	(create_name@i+1)^(0+1280),w,c
 17018   01512E  A0D8               	btfss	status,0,c
 17019   015130  D013               	goto	l10683
 17020   015132                     u12970:
 17021                           
 17022                           ;fatfs/ff.c: 3010:    if (ni == 11 || c != '.') return FR_INVALID_NAME;
 17023   015132  0E0B               	movlw	11
 17024   015134  1813               	xorwf	create_name@ni^(0+1280),w,c
 17025   015136  1014               	iorwf	(create_name@ni+1)^(0+1280),w,c
 17026   015138  B4D8               	btfsc	status,2,c
 17027   01513A  D004               	goto	u12990
 17028   01513C  0E2E               	movlw	46
 17029   01513E  181D               	xorwf	create_name@c^(0+1280),w,c
 17030   015140  B4D8               	btfsc	status,2,c
 17031   015142  D002               	goto	l10681
 17032   015144                     u12990:
 17033   015144  0E06               	movlw	6
 17034   015146  0012               	return	
 17035   015148                     l10681:
 17036                           
 17037                           ;fatfs/ff.c: 3011:    i = 8; ni = 11;
 17038   015148  0E00               	movlw	0
 17039   01514A  6E1C               	movwf	(create_name@i+1)^(0+1280),c
 17040   01514C  0E08               	movlw	8
 17041   01514E  6E1B               	movwf	create_name@i^(0+1280),c
 17042   015150  0E00               	movlw	0
 17043   015152  6E14               	movwf	(create_name@ni+1)^(0+1280),c
 17044   015154  0E0B               	movlw	11
 17045   015156  D784               	goto	L6
 17046   015158                     l10683:
 17047                           
 17048                           ;fatfs/ff.c: 3023:   if (dbc_1st(c)) {
 17049   015158  501D               	movf	create_name@c^(0+1280),w,c
 17050   01515A  EC31  F0CB         	call	_dbc_1st
 17051   01515E  5001               	movf	?_dbc_1st^(0+1280),w,c
 17052   015160  1002               	iorwf	(?_dbc_1st+1)^(0+1280),w,c
 17053   015162  B4D8               	btfsc	status,2,c
 17054   015164  D040               	goto	l10703
 17055                           
 17056                           ;fatfs/ff.c: 3024:    d = (BYTE)p[si++];
 17057   015166  5017               	movf	create_name@si^(0+1280),w,c
 17058   015168  2415               	addwf	create_name@p^(0+1280),w,c
 17059   01516A  6E0D               	movwf	??_create_name^(0+1280),c
 17060   01516C  5018               	movf	(create_name@si+1)^(0+1280),w,c
 17061   01516E  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 17062   015170  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 17063   015172  C50D  F4F6         	movff	??_create_name,tblptrl
 17064   015176  C50E  F4F7         	movff	??_create_name+1,tblptrh
 17065   01517A  0E00               	movlw	low (__mediumconst shr (0+16))
 17066   01517C  6EF8               	movwf	tblptru,c
 17067   01517E  0E24               	movlw	(high __ramtop+-1)
 17068   015180  64F7               	cpfsgt	tblptrh,c
 17069   015182  D003               	bra	u13017
 17070   015184  0008               	tblrd		*
 17071   015186  50F5               	movf	tablat,w,c
 17072   015188  D005               	bra	u13010
 17073   01518A                     u13017:
 17074   01518A  C4F6 F4E9          	movff	tblptrl,fsr0l
 17075   01518E  C4F7 F4EA          	movff	tblptrh,fsr0h
 17076   015192  50EF               	movf	indf0,w,c
 17077   015194                     u13010:
 17078   015194  6E12               	movwf	create_name@d^(0+1280),c
 17079   015196  4A17               	infsnz	create_name@si^(0+1280),f,c
 17080   015198  2A18               	incf	(create_name@si+1)^(0+1280),f,c
 17081                           
 17082                           ;fatfs/ff.c: 3025:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVALID_NAME;
 17083   01519A  5012               	movf	create_name@d^(0+1280),w,c
 17084   01519C  EC35  F0C8         	call	_dbc_2nd
 17085   0151A0  5001               	movf	?_dbc_2nd^(0+1280),w,c
 17086   0151A2  1002               	iorwf	(?_dbc_2nd+1)^(0+1280),w,c
 17087   0151A4  B4D8               	btfsc	status,2,c
 17088   0151A6  D7CE               	goto	u12990
 17089   0151A8  0EFF               	movlw	255
 17090   0151AA  2413               	addwf	create_name@ni^(0+1280),w,c
 17091   0151AC  6E0D               	movwf	??_create_name^(0+1280),c
 17092   0151AE  0EFF               	movlw	255
 17093   0151B0  2014               	addwfc	(create_name@ni+1)^(0+1280),w,c
 17094   0151B2  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 17095   0151B4  500D               	movf	??_create_name^(0+1280),w,c
 17096   0151B6  5C1B               	subwf	create_name@i^(0+1280),w,c
 17097   0151B8  500E               	movf	(??_create_name+1)^(0+1280),w,c
 17098   0151BA  581C               	subwfb	(create_name@i+1)^(0+1280),w,c
 17099   0151BC  B0D8               	btfsc	status,0,c
 17100   0151BE  D7C2               	goto	u12990
 17101                           
 17102                           ;fatfs/ff.c: 3026:    sfn[i++] = c;
 17103   0151C0  501B               	movf	create_name@i^(0+1280),w,c
 17104   0151C2  2419               	addwf	create_name@sfn^(0+1280),w,c
 17105   0151C4  6ED9               	movwf	fsr2l,c
 17106   0151C6  501C               	movf	(create_name@i+1)^(0+1280),w,c
 17107   0151C8  201A               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 17108   0151CA  6EDA               	movwf	fsr2h,c
 17109   0151CC  C51D  F4DF         	movff	create_name@c,indf2
 17110   0151D0  4A1B               	infsnz	create_name@i^(0+1280),f,c
 17111   0151D2  2A1C               	incf	(create_name@i+1)^(0+1280),f,c
 17112                           
 17113                           ;fatfs/ff.c: 3027:    sfn[i++] = d;
 17114   0151D4  501B               	movf	create_name@i^(0+1280),w,c
 17115   0151D6  2419               	addwf	create_name@sfn^(0+1280),w,c
 17116   0151D8  6ED9               	movwf	fsr2l,c
 17117   0151DA  501C               	movf	(create_name@i+1)^(0+1280),w,c
 17118   0151DC  201A               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 17119   0151DE  6EDA               	movwf	fsr2h,c
 17120   0151E0  C512  F4DF         	movff	create_name@d,indf2
 17121   0151E4  D01D               	goto	l10717
 17122   0151E6                     l10703:
 17123                           
 17124                           ;fatfs/ff.c: 3029:    if (strchr("*+,:;<=>[]|\"\?\x7F", (int)c)) return FR_INVALID_NAME;
 17125   0151E6  0E80               	movlw	low STR_27
 17126   0151E8  6E01               	movwf	strchr@s^(0+1280),c
 17127   0151EA  0EFF               	movlw	high STR_27
 17128   0151EC  6E02               	movwf	(strchr@s+1)^(0+1280),c
 17129   0151EE  C51D  F503         	movff	create_name@c,strchr@c
 17130   0151F2  6A04               	clrf	(strchr@c+1)^(0+1280),c
 17131   0151F4  EC8F  F0CD         	call	_strchr	;wreg free
 17132   0151F8  5001               	movf	?_strchr^(0+1280),w,c
 17133   0151FA  1002               	iorwf	(?_strchr+1)^(0+1280),w,c
 17134   0151FC  A4D8               	btfss	status,2,c
 17135   0151FE  D7A2               	goto	u12990
 17136                           
 17137                           ;fatfs/ff.c: 3030:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
 17138   015200  0E60               	movlw	96
 17139   015202  641D               	cpfsgt	create_name@c^(0+1280),c
 17140   015204  D005               	goto	l10715
 17141   015206  0E7B               	movlw	123
 17142   015208  601D               	cpfslt	create_name@c^(0+1280),c
 17143   01520A  D002               	goto	l10715
 17144   01520C  0E20               	movlw	32
 17145   01520E  5E1D               	subwf	create_name@c^(0+1280),f,c
 17146   015210                     l10715:
 17147                           
 17148                           ;fatfs/ff.c: 3031:    sfn[i++] = c;
 17149   015210  501B               	movf	create_name@i^(0+1280),w,c
 17150   015212  2419               	addwf	create_name@sfn^(0+1280),w,c
 17151   015214  6ED9               	movwf	fsr2l,c
 17152   015216  501C               	movf	(create_name@i+1)^(0+1280),w,c
 17153   015218  201A               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 17154   01521A  6EDA               	movwf	fsr2h,c
 17155   01521C  C51D  F4DF         	movff	create_name@c,indf2
 17156   015220                     l10717:
 17157   015220  4A1B               	infsnz	create_name@i^(0+1280),f,c
 17158   015222  2A1C               	incf	(create_name@i+1)^(0+1280),f,c
 17159   015224  D71E               	goto	l10651
 17160   015226                     l10719:
 17161                           
 17162                           ;fatfs/ff.c: 3034:  *path = &p[si];
 17163   015226  5017               	movf	create_name@si^(0+1280),w,c
 17164   015228  2415               	addwf	create_name@p^(0+1280),w,c
 17165   01522A  6E0D               	movwf	??_create_name^(0+1280),c
 17166   01522C  5018               	movf	(create_name@si+1)^(0+1280),w,c
 17167   01522E  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 17168   015230  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 17169   015232  C50B  F4D9         	movff	create_name@path,fsr2l
 17170   015236  C50C  F4DA         	movff	create_name@path+1,fsr2h
 17171   01523A  C50D  F4DE         	movff	??_create_name,postinc2
 17172   01523E  C50E  F4DD         	movff	??_create_name+1,postdec2
 17173                           
 17174                           ;fatfs/ff.c: 3035:  if (i == 0) return FR_INVALID_NAME;
 17175   015242  501B               	movf	create_name@i^(0+1280),w,c
 17176   015244  101C               	iorwf	(create_name@i+1)^(0+1280),w,c
 17177   015246  B4D8               	btfsc	status,2,c
 17178   015248  D77D               	goto	u12990
 17179                           
 17180                           ;fatfs/ff.c: 3037:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
 17181   01524A  C519  F4D9         	movff	create_name@sfn,fsr2l
 17182   01524E  C51A  F4DA         	movff	create_name@sfn+1,fsr2h
 17183   015252  0EE5               	movlw	229
 17184   015254  18DE               	xorwf	postinc2,w,c
 17185   015256  A4D8               	btfss	status,2,c
 17186   015258  D006               	goto	l10731
 17187   01525A  C519  F4D9         	movff	create_name@sfn,fsr2l
 17188   01525E  C51A  F4DA         	movff	create_name@sfn+1,fsr2h
 17189   015262  0E05               	movlw	5
 17190   015264  6EDF               	movwf	indf2,c
 17191   015266                     l10731:
 17192                           
 17193                           ;fatfs/ff.c: 3038:  sfn[11] = (c <= ' ' || p[si] <= ' ') ? 0x04 : 0;
 17194   015266  0E20               	movlw	32
 17195   015268  641D               	cpfsgt	create_name@c^(0+1280),c
 17196   01526A  D01F               	goto	l10737
 17197   01526C  5017               	movf	create_name@si^(0+1280),w,c
 17198   01526E  2415               	addwf	create_name@p^(0+1280),w,c
 17199   015270  6E0D               	movwf	??_create_name^(0+1280),c
 17200   015272  5018               	movf	(create_name@si+1)^(0+1280),w,c
 17201   015274  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 17202   015276  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 17203   015278  C50D  F4F6         	movff	??_create_name,tblptrl
 17204   01527C  C50E  F4F7         	movff	??_create_name+1,tblptrh
 17205   015280  0E00               	movlw	low (__mediumconst shr (0+16))
 17206   015282  6EF8               	movwf	tblptru,c
 17207   015284  0E24               	movlw	(high __ramtop+-1)
 17208   015286  64F7               	cpfsgt	tblptrh,c
 17209   015288  D003               	bra	u13107
 17210   01528A  0008               	tblrd		*
 17211   01528C  50F5               	movf	tablat,w,c
 17212   01528E  D005               	bra	u13100
 17213   015290                     u13107:
 17214   015290  C4F6 F4E9          	movff	tblptrl,fsr0l
 17215   015294  C4F7 F4EA          	movff	tblptrh,fsr0h
 17216   015298  50EF               	movf	indf0,w,c
 17217   01529A                     u13100:
 17218   01529A  6E0F               	movwf	(??_create_name+2)^(0+1280),c
 17219   01529C  0E20               	movlw	32
 17220   01529E  640F               	cpfsgt	(??_create_name+2)^(0+1280),c
 17221   0152A0  D004               	goto	l10737
 17222   0152A2  0E00               	movlw	0
 17223   0152A4  6E11               	movwf	(_create_name$887+1)^(0+1280),c
 17224   0152A6  0E00               	movlw	0
 17225   0152A8  D003               	goto	L7
 17226   0152AA                     l10737:
 17227   0152AA  0E00               	movlw	0
 17228   0152AC  6E11               	movwf	(_create_name$887+1)^(0+1280),c
 17229   0152AE  0E04               	movlw	4
 17230   0152B0                     L7:
 17231   0152B0  6E10               	movwf	_create_name$887^(0+1280),c
 17232   0152B2  EE20 F00B          	lfsr	2,11
 17233   0152B6  5019               	movf	create_name@sfn^(0+1280),w,c
 17234   0152B8  26D9               	addwf	fsr2l,f,c
 17235   0152BA  501A               	movf	(create_name@sfn+1)^(0+1280),w,c
 17236   0152BC  22DA               	addwfc	fsr2h,f,c
 17237   0152BE  C510  F4DF         	movff	_create_name$887,indf2
 17238                           
 17239                           ;fatfs/ff.c: 3040:  return FR_OK;
 17240   0152C2  0E00               	movlw	0
 17241   0152C4  0012               	return		;funcret
 17242   0152C6                     __end_of_create_name:
 17243                           	callstack 0
 17244                           
 17245 ;; *************** function _strchr *****************
 17246 ;; Defined at:
 17247 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 17248 ;; Parameters:    Size  Location     Type
 17249 ;;  s               2    0[COMRAM] PTR const unsigned char 
 17250 ;;		 -> STR_28(15), 
 17251 ;;  c               2    2[COMRAM] int 
 17252 ;; Auto vars:     Size  Location     Type
 17253 ;;		None
 17254 ;; Return value:  Size  Location     Type
 17255 ;;                  2    0[COMRAM] PTR unsigned char 
 17256 ;; Registers used:
 17257 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17258 ;; Tracked objects:
 17259 ;;		On entry : 0/6
 17260 ;;		On exit  : 0/0
 17261 ;;		Unchanged: 0/0
 17262 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17266 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17267 ;;Total ram usage:        4 bytes
 17268 ;; Hardware stack levels used: 1
 17269 ;; This function calls:
 17270 ;;		Nothing
 17271 ;; This function is called by:
 17272 ;;		_create_name
 17273 ;; This function uses a non-reentrant model
 17274 ;;
 17275                           
 17276                           	psect	text17
 17277   019B1E                     __ptext17:
 17278                           	callstack 0
 17279   019B1E                     _strchr:
 17280                           	callstack 122
 17281                           
 17282                           ;incstack = 0
 17283   019B1E  C501  F4F6         	movff	strchr@s,tblptrl
 17284   019B22  C502  F4F7         	movff	strchr@s+1,tblptrh
 17285   019B26                     	if	0	;tblptru may be non-zero
 17286   019B26                     	endif
 17287   019B26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17288   019B26  0E00               	movlw	low (__mediumconst shr (0+16))
 17289   019B28  6EF8               	movwf	tblptru,c
 17290   019B2A                     	endif
 17291   019B2A  0008               	tblrd		*
 17292   019B2C  50F5               	movf	tablat,w,c
 17293   019B2E  1803               	xorwf	strchr@c^(0+1280),w,c
 17294   019B30  A4D8               	btfss	status,2,c
 17295   019B32  D005               	goto	l10387
 17296   019B34  C501  F501         	movff	strchr@s,?_strchr
 17297   019B38  C502  F502         	movff	strchr@s+1,?_strchr+1
 17298   019B3C  0012               	return	
 17299   019B3E                     l10387:
 17300   019B3E  C501  F4F6         	movff	strchr@s,tblptrl
 17301   019B42  C502  F4F7         	movff	strchr@s+1,tblptrh
 17302   019B46  4A01               	infsnz	strchr@s^(0+1280),f,c
 17303   019B48  2A02               	incf	(strchr@s+1)^(0+1280),f,c
 17304   019B4A                     	if	0	;tblptru may be non-zero
 17305   019B4A                     	endif
 17306   019B4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17307   019B4A  0E00               	movlw	low (__mediumconst shr (0+16))
 17308   019B4C  6EF8               	movwf	tblptru,c
 17309   019B4E                     	endif
 17310   019B4E  0008               	tblrd		*
 17311   019B50  50F5               	movf	tablat,w,c
 17312   019B52  0900               	iorlw	0
 17313   019B54  A4D8               	btfss	status,2,c
 17314   019B56  D7E3               	goto	__ptext17
 17315   019B58  0E00               	movlw	0
 17316   019B5A  6E01               	movwf	?_strchr^(0+1280),c
 17317   019B5C  0E00               	movlw	0
 17318   019B5E  6E02               	movwf	(?_strchr+1)^(0+1280),c
 17319   019B60  0012               	return		;funcret
 17320   019B62                     __end_of_strchr:
 17321                           	callstack 0
 17322                           
 17323 ;; *************** function _dbc_2nd *****************
 17324 ;; Defined at:
 17325 ;;		line 712 in file "fatfs/ff.c"
 17326 ;; Parameters:    Size  Location     Type
 17327 ;;  c               1    wreg     unsigned char 
 17328 ;; Auto vars:     Size  Location     Type
 17329 ;;  c               1    2[COMRAM] unsigned char 
 17330 ;; Return value:  Size  Location     Type
 17331 ;;                  2    0[COMRAM] int 
 17332 ;; Registers used:
 17333 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17334 ;; Tracked objects:
 17335 ;;		On entry : 0/6
 17336 ;;		On exit  : 0/0
 17337 ;;		Unchanged: 0/0
 17338 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17342 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17343 ;;Total ram usage:        3 bytes
 17344 ;; Hardware stack levels used: 1
 17345 ;; This function calls:
 17346 ;;		Nothing
 17347 ;; This function is called by:
 17348 ;;		_create_name
 17349 ;; This function uses a non-reentrant model
 17350 ;;
 17351                           
 17352                           	psect	text18
 17353   01906A                     __ptext18:
 17354                           	callstack 0
 17355   01906A                     _dbc_2nd:
 17356                           	callstack 122
 17357                           
 17358                           ;incstack = 0
 17359                           ;dbc_2nd@c stored from wreg
 17360   01906A  6E03               	movwf	dbc_2nd@c^(0+1280),c
 17361                           
 17362                           ;fatfs/ff.c: 712: static int dbc_2nd (BYTE c);fatfs/ff.c: 713: {;fatfs/ff.c: 721:  if (c
      +                           >= DbcTbl[4]) {
 17363   01906C  0E75               	movlw	low (_DbcTbl+4)
 17364   01906E  6EF6               	movwf	tblptrl,c
 17365   019070  0ED9               	movlw	high (_DbcTbl+4)
 17366   019072  6EF7               	movwf	tblptrh,c
 17367   019074                     	if	0	;tblptru may be non-zero
 17368   019074                     	endif
 17369   019074                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17370   019074  0E00               	movlw	low (__mediumconst shr (0+16))
 17371   019076  6EF8               	movwf	tblptru,c
 17372   019078                     	endif
 17373   019078  0009               	tblrd		*+
 17374   01907A  50F5               	movf	tablat,w,c
 17375   01907C  5C03               	subwf	dbc_2nd@c^(0+1280),w,c
 17376   01907E  A0D8               	btfss	status,0,c
 17377   019080  D03C               	goto	l10211
 17378                           
 17379                           ;fatfs/ff.c: 722:   if (c <= DbcTbl[5]) return 1;
 17380   019082  0E76               	movlw	low (_DbcTbl+5)
 17381   019084  6EF6               	movwf	tblptrl,c
 17382   019086  0ED9               	movlw	high (_DbcTbl+5)
 17383   019088  6EF7               	movwf	tblptrh,c
 17384   01908A                     	if	0	;tblptru may be non-zero
 17385   01908A                     	endif
 17386   01908A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17387   01908A  0E00               	movlw	low (__mediumconst shr (0+16))
 17388   01908C  6EF8               	movwf	tblptru,c
 17389   01908E                     	endif
 17390   01908E  5003               	movf	dbc_2nd@c^(0+1280),w,c
 17391   019090  0009               	tblrd		*+
 17392   019092  5CF5               	subwf	tablat,w,c
 17393   019094  A0D8               	btfss	status,0,c
 17394   019096  D005               	goto	l10195
 17395   019098                     u12070:
 17396   019098  0E00               	movlw	0
 17397   01909A  6E02               	movwf	(?_dbc_2nd+1)^(0+1280),c
 17398   01909C  0E01               	movlw	1
 17399   01909E  6E01               	movwf	?_dbc_2nd^(0+1280),c
 17400   0190A0  0012               	return	
 17401   0190A2                     l10195:
 17402                           
 17403                           ;fatfs/ff.c: 723:   if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 17404   0190A2  0E77               	movlw	low (_DbcTbl+6)
 17405   0190A4  6EF6               	movwf	tblptrl,c
 17406   0190A6  0ED9               	movlw	high (_DbcTbl+6)
 17407   0190A8  6EF7               	movwf	tblptrh,c
 17408   0190AA                     	if	0	;tblptru may be non-zero
 17409   0190AA                     	endif
 17410   0190AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17411   0190AA  0E00               	movlw	low (__mediumconst shr (0+16))
 17412   0190AC  6EF8               	movwf	tblptru,c
 17413   0190AE                     	endif
 17414   0190AE  0009               	tblrd		*+
 17415   0190B0  50F5               	movf	tablat,w,c
 17416   0190B2  5C03               	subwf	dbc_2nd@c^(0+1280),w,c
 17417   0190B4  A0D8               	btfss	status,0,c
 17418   0190B6  D00B               	goto	l10203
 17419   0190B8  0E78               	movlw	low (_DbcTbl+7)
 17420   0190BA  6EF6               	movwf	tblptrl,c
 17421   0190BC  0ED9               	movlw	high (_DbcTbl+7)
 17422   0190BE  6EF7               	movwf	tblptrh,c
 17423   0190C0                     	if	0	;tblptru may be non-zero
 17424   0190C0                     	endif
 17425   0190C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17426   0190C0  0E00               	movlw	low (__mediumconst shr (0+16))
 17427   0190C2  6EF8               	movwf	tblptru,c
 17428   0190C4                     	endif
 17429   0190C4  5003               	movf	dbc_2nd@c^(0+1280),w,c
 17430   0190C6  0009               	tblrd		*+
 17431   0190C8  5CF5               	subwf	tablat,w,c
 17432   0190CA  B0D8               	btfsc	status,0,c
 17433   0190CC  D7E5               	goto	u12070
 17434   0190CE                     l10203:
 17435                           
 17436                           ;fatfs/ff.c: 724:   if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 17437   0190CE  0E79               	movlw	low (_DbcTbl+8)
 17438   0190D0  6EF6               	movwf	tblptrl,c
 17439   0190D2  0ED9               	movlw	high (_DbcTbl+8)
 17440   0190D4  6EF7               	movwf	tblptrh,c
 17441   0190D6                     	if	0	;tblptru may be non-zero
 17442   0190D6                     	endif
 17443   0190D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17444   0190D6  0E00               	movlw	low (__mediumconst shr (0+16))
 17445   0190D8  6EF8               	movwf	tblptru,c
 17446   0190DA                     	endif
 17447   0190DA  0009               	tblrd		*+
 17448   0190DC  50F5               	movf	tablat,w,c
 17449   0190DE  5C03               	subwf	dbc_2nd@c^(0+1280),w,c
 17450   0190E0  A0D8               	btfss	status,0,c
 17451   0190E2  D00B               	goto	l10211
 17452   0190E4  0E7A               	movlw	low (_DbcTbl+9)
 17453   0190E6  6EF6               	movwf	tblptrl,c
 17454   0190E8  0ED9               	movlw	high (_DbcTbl+9)
 17455   0190EA  6EF7               	movwf	tblptrh,c
 17456   0190EC                     	if	0	;tblptru may be non-zero
 17457   0190EC                     	endif
 17458   0190EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17459   0190EC  0E00               	movlw	low (__mediumconst shr (0+16))
 17460   0190EE  6EF8               	movwf	tblptru,c
 17461   0190F0                     	endif
 17462   0190F0  5003               	movf	dbc_2nd@c^(0+1280),w,c
 17463   0190F2  0009               	tblrd		*+
 17464   0190F4  5CF5               	subwf	tablat,w,c
 17465   0190F6  B0D8               	btfsc	status,0,c
 17466   0190F8  D7CF               	goto	u12070
 17467   0190FA                     l10211:
 17468                           
 17469                           ;fatfs/ff.c: 729:  return 0;
 17470   0190FA  0E00               	movlw	0
 17471   0190FC  6E02               	movwf	(?_dbc_2nd+1)^(0+1280),c
 17472   0190FE  0E00               	movlw	0
 17473   019100  6E01               	movwf	?_dbc_2nd^(0+1280),c
 17474   019102  0012               	return		;funcret
 17475   019104                     __end_of_dbc_2nd:
 17476                           	callstack 0
 17477                           
 17478 ;; *************** function _dbc_1st *****************
 17479 ;; Defined at:
 17480 ;;		line 692 in file "fatfs/ff.c"
 17481 ;; Parameters:    Size  Location     Type
 17482 ;;  c               1    wreg     unsigned char 
 17483 ;; Auto vars:     Size  Location     Type
 17484 ;;  c               1    2[COMRAM] unsigned char 
 17485 ;; Return value:  Size  Location     Type
 17486 ;;                  2    0[COMRAM] int 
 17487 ;; Registers used:
 17488 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17489 ;; Tracked objects:
 17490 ;;		On entry : 0/6
 17491 ;;		On exit  : 0/0
 17492 ;;		Unchanged: 0/0
 17493 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17497 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17498 ;;Total ram usage:        3 bytes
 17499 ;; Hardware stack levels used: 1
 17500 ;; This function calls:
 17501 ;;		Nothing
 17502 ;; This function is called by:
 17503 ;;		_create_name
 17504 ;; This function uses a non-reentrant model
 17505 ;;
 17506                           
 17507                           	psect	text19
 17508   019662                     __ptext19:
 17509                           	callstack 0
 17510   019662                     _dbc_1st:
 17511                           	callstack 122
 17512                           
 17513                           ;incstack = 0
 17514                           ;dbc_1st@c stored from wreg
 17515   019662  6E03               	movwf	dbc_1st@c^(0+1280),c
 17516                           
 17517                           ;fatfs/ff.c: 692: static int dbc_1st (BYTE c);fatfs/ff.c: 693: {;fatfs/ff.c: 700:  if (c
      +                           >= DbcTbl[0]) {
 17518   019664  0E71               	movlw	low _DbcTbl
 17519   019666  6EF6               	movwf	tblptrl,c
 17520   019668                     	if	1	;There is more than 1 active tblptr byte
 17521   019668  0ED9               	movlw	high _DbcTbl
 17522   01966A  6EF7               	movwf	tblptrh,c
 17523   01966C                     	endif
 17524   01966C                     	if	1	;There are 3 active tblptr bytes
 17525   01966C  0E00               	movlw	low (_DbcTbl shr (0+16))
 17526   01966E  6EF8               	movwf	tblptru,c
 17527   019670                     	endif
 17528   019670  0009               	tblrd		*+
 17529   019672  50F5               	movf	tablat,w,c
 17530   019674  5C03               	subwf	dbc_1st@c^(0+1280),w,c
 17531   019676  A0D8               	btfss	status,0,c
 17532   019678  D026               	goto	l10183
 17533                           
 17534                           ;fatfs/ff.c: 701:   if (c <= DbcTbl[1]) return 1;
 17535   01967A  0E72               	movlw	low (_DbcTbl+1)
 17536   01967C  6EF6               	movwf	tblptrl,c
 17537   01967E  0ED9               	movlw	high (_DbcTbl+1)
 17538   019680  6EF7               	movwf	tblptrh,c
 17539   019682                     	if	0	;tblptru may be non-zero
 17540   019682                     	endif
 17541   019682                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17542   019682  0E00               	movlw	low (__mediumconst shr (0+16))
 17543   019684  6EF8               	movwf	tblptru,c
 17544   019686                     	endif
 17545   019686  5003               	movf	dbc_1st@c^(0+1280),w,c
 17546   019688  0009               	tblrd		*+
 17547   01968A  5CF5               	subwf	tablat,w,c
 17548   01968C  A0D8               	btfss	status,0,c
 17549   01968E  D005               	goto	l10175
 17550   019690                     u12030:
 17551   019690  0E00               	movlw	0
 17552   019692  6E02               	movwf	(?_dbc_1st+1)^(0+1280),c
 17553   019694  0E01               	movlw	1
 17554   019696  6E01               	movwf	?_dbc_1st^(0+1280),c
 17555   019698  0012               	return	
 17556   01969A                     l10175:
 17557                           
 17558                           ;fatfs/ff.c: 702:   if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 17559   01969A  0E73               	movlw	low (_DbcTbl+2)
 17560   01969C  6EF6               	movwf	tblptrl,c
 17561   01969E  0ED9               	movlw	high (_DbcTbl+2)
 17562   0196A0  6EF7               	movwf	tblptrh,c
 17563   0196A2                     	if	0	;tblptru may be non-zero
 17564   0196A2                     	endif
 17565   0196A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17566   0196A2  0E00               	movlw	low (__mediumconst shr (0+16))
 17567   0196A4  6EF8               	movwf	tblptru,c
 17568   0196A6                     	endif
 17569   0196A6  0009               	tblrd		*+
 17570   0196A8  50F5               	movf	tablat,w,c
 17571   0196AA  5C03               	subwf	dbc_1st@c^(0+1280),w,c
 17572   0196AC  A0D8               	btfss	status,0,c
 17573   0196AE  D00B               	goto	l10183
 17574   0196B0  0E74               	movlw	low (_DbcTbl+3)
 17575   0196B2  6EF6               	movwf	tblptrl,c
 17576   0196B4  0ED9               	movlw	high (_DbcTbl+3)
 17577   0196B6  6EF7               	movwf	tblptrh,c
 17578   0196B8                     	if	0	;tblptru may be non-zero
 17579   0196B8                     	endif
 17580   0196B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17581   0196B8  0E00               	movlw	low (__mediumconst shr (0+16))
 17582   0196BA  6EF8               	movwf	tblptru,c
 17583   0196BC                     	endif
 17584   0196BC  5003               	movf	dbc_1st@c^(0+1280),w,c
 17585   0196BE  0009               	tblrd		*+
 17586   0196C0  5CF5               	subwf	tablat,w,c
 17587   0196C2  B0D8               	btfsc	status,0,c
 17588   0196C4  D7E5               	goto	u12030
 17589   0196C6                     l10183:
 17590                           
 17591                           ;fatfs/ff.c: 707:  return 0;
 17592   0196C6  0E00               	movlw	0
 17593   0196C8  6E02               	movwf	(?_dbc_1st+1)^(0+1280),c
 17594   0196CA  0E00               	movlw	0
 17595   0196CC  6E01               	movwf	?_dbc_1st^(0+1280),c
 17596   0196CE  0012               	return		;funcret
 17597   0196D0                     __end_of_dbc_1st:
 17598                           	callstack 0
 17599                           
 17600 ;; *************** function _dir_register *****************
 17601 ;; Defined at:
 17602 ;;		line 2465 in file "fatfs/ff.c"
 17603 ;; Parameters:    Size  Location     Type
 17604 ;;  dp              2  110[BANK6 ] PTR struct .
 17605 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;  fs              2  112[BANK6 ] PTR struct .
 17608 ;;		 -> fs(560), NULL(0), 
 17609 ;;  res             1  114[BANK6 ] enum E275
 17610 ;; Return value:  Size  Location     Type
 17611 ;;                  1    wreg      enum E275
 17612 ;; Registers used:
 17613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17614 ;; Tracked objects:
 17615 ;;		On entry : 3F/6
 17616 ;;		On exit  : 3F/6
 17617 ;;		Unchanged: 0/0
 17618 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17619 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17620 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17622 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17623 ;;Total ram usage:        5 bytes
 17624 ;; Hardware stack levels used: 1
 17625 ;; Hardware stack levels required when called: 17
 17626 ;; This function calls:
 17627 ;;		_dir_alloc
 17628 ;;		_memcpy
 17629 ;;		_memset
 17630 ;;		_move_window
 17631 ;; This function is called by:
 17632 ;;		_f_open
 17633 ;; This function uses a non-reentrant model
 17634 ;;
 17635                           
 17636                           	psect	text20
 17637   0185FC                     __ptext20:
 17638                           	callstack 0
 17639   0185FC                     _dir_register:
 17640                           	callstack 107
 17641                           
 17642                           ; BSR set to: 6
 17643                           ;fatfs/ff.c: 2466:  DIR* dp;fatfs/ff.c: 2468: {;fatfs/ff.c: 2469:  FRESULT res;;fatfs/ff
      +                          .c: 2470:  FATFS *fs = dp->obj.fs;
 17644                           
 17645                           ;incstack = 0
 17646   0185FC  C66E  F4D9         	movff	dir_register@dp,fsr2l
 17647   018600  C66F  F4DA         	movff	dir_register@dp+1,fsr2h
 17648   018604  C4DE F670          	movff	postinc2,dir_register@fs
 17649   018608  C4DD F671          	movff	postdec2,dir_register@fs+1
 17650                           
 17651                           ; BSR set to: 6
 17652                           ;fatfs/ff.c: 2542:  res = dir_alloc(dp, 1);
 17653   01860C  C66E  F662         	movff	dir_register@dp,dir_alloc@dp
 17654   018610  C66F  F663         	movff	dir_register@dp+1,dir_alloc@dp+1
 17655   018614  0E00               	movlw	0
 17656   018616  6F65               	movwf	(dir_alloc@n_ent+1)& (0+255),b
 17657   018618  0E01               	movlw	1
 17658   01861A  6F64               	movwf	dir_alloc@n_ent& (0+255),b
 17659   01861C  EC6A  F0C0         	call	_dir_alloc	;wreg free
 17660   018620  6F72               	movwf	dir_register@res& (0+255),b
 17661                           
 17662                           ; BSR set to: 6
 17663                           ;fatfs/ff.c: 2547:  if (res == FR_OK) {
 17664   018622  5172               	movf	dir_register@res& (0+255),w,b
 17665   018624  A4D8               	btfss	status,2,c
 17666   018626  D04C               	goto	l11013
 17667                           
 17668                           ; BSR set to: 6
 17669                           ;fatfs/ff.c: 2548:   res = move_window(fs, dp->sect);
 17670   018628  C670  F600         	movff	dir_register@fs,move_window@fs
 17671   01862C  C671  F601         	movff	dir_register@fs+1,move_window@fs+1
 17672   018630  EE20 F016          	lfsr	2,22
 17673   018634  516E               	movf	dir_register@dp& (0+255),w,b
 17674   018636  26D9               	addwf	fsr2l,f,c
 17675   018638  516F               	movf	(dir_register@dp+1)& (0+255),w,b
 17676   01863A  22DA               	addwfc	fsr2h,f,c
 17677   01863C  C4DE F602          	movff	postinc2,move_window@sect
 17678   018640  C4DE F603          	movff	postinc2,move_window@sect+1
 17679   018644  C4DE F604          	movff	postinc2,move_window@sect+2
 17680   018648  C4DE F605          	movff	postinc2,move_window@sect+3
 17681   01864C  EC23  F0C4         	call	_move_window	;wreg free
 17682   018650  0106               	movlb	6	; () banked
 17683   018652  6F72               	movwf	dir_register@res& (0+255),b
 17684                           
 17685                           ; BSR set to: 6
 17686                           ;fatfs/ff.c: 2549:   if (res == FR_OK) {
 17687   018654  5172               	movf	dir_register@res& (0+255),w,b
 17688   018656  A4D8               	btfss	status,2,c
 17689   018658  D033               	goto	l11013
 17690                           
 17691                           ; BSR set to: 6
 17692                           ;fatfs/ff.c: 2550:    memset(dp->dir, 0, 32);
 17693   01865A  EE20 F01A          	lfsr	2,26
 17694   01865E  516E               	movf	dir_register@dp& (0+255),w,b
 17695   018660  26D9               	addwf	fsr2l,f,c
 17696   018662  516F               	movf	(dir_register@dp+1)& (0+255),w,b
 17697   018664  22DA               	addwfc	fsr2h,f,c
 17698   018666  C4DE F501          	movff	postinc2,memset@dest
 17699   01866A  C4DD F502          	movff	postdec2,memset@dest+1
 17700   01866E  0E00               	movlw	0
 17701   018670  6E04               	movwf	(memset@c+1)^(0+1280),c
 17702   018672  0E00               	movlw	0
 17703   018674  6E03               	movwf	memset@c^(0+1280),c
 17704   018676  0E00               	movlw	0
 17705   018678  6E06               	movwf	(memset@n+1)^(0+1280),c
 17706   01867A  0E20               	movlw	32
 17707   01867C  6E05               	movwf	memset@n^(0+1280),c
 17708   01867E  ECEB  F0CE         	call	_memset	;wreg free
 17709                           
 17710                           ;fatfs/ff.c: 2551:    memcpy(dp->dir + 0, dp->fn, 11);
 17711   018682  EE20 F01A          	lfsr	2,26
 17712   018686  516E               	movf	dir_register@dp& (0+255),w,b
 17713   018688  26D9               	addwf	fsr2l,f,c
 17714   01868A  516F               	movf	(dir_register@dp+1)& (0+255),w,b
 17715   01868C  22DA               	addwfc	fsr2h,f,c
 17716   01868E  C4DE F501          	movff	postinc2,memcpy@d1
 17717   018692  C4DD F502          	movff	postdec2,memcpy@d1+1
 17718   018696  0E1C               	movlw	28
 17719   018698  256E               	addwf	dir_register@dp& (0+255),w,b
 17720   01869A  6E03               	movwf	memcpy@s1^(0+1280),c
 17721   01869C  0E00               	movlw	0
 17722   01869E  216F               	addwfc	(dir_register@dp+1)& (0+255),w,b
 17723   0186A0  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
 17724   0186A2  0E00               	movlw	0
 17725   0186A4  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 17726   0186A6  0E0B               	movlw	11
 17727   0186A8  6E05               	movwf	memcpy@n^(0+1280),c
 17728   0186AA  ECB1  F0CD         	call	_memcpy	;wreg free
 17729                           
 17730                           ;fatfs/ff.c: 2555:    fs->wflag = 1;
 17731   0186AE  0106               	movlb	6	; () banked
 17732   0186B0  EE20 F004          	lfsr	2,4
 17733   0186B4  5170               	movf	dir_register@fs& (0+255),w,b
 17734   0186B6  26D9               	addwf	fsr2l,f,c
 17735   0186B8  5171               	movf	(dir_register@fs+1)& (0+255),w,b
 17736   0186BA  22DA               	addwfc	fsr2h,f,c
 17737   0186BC  0E01               	movlw	1
 17738   0186BE  6EDF               	movwf	indf2,c
 17739   0186C0                     l11013:
 17740                           
 17741                           ; BSR set to: 6
 17742                           ;fatfs/ff.c: 2559:  return res;
 17743   0186C0  5172               	movf	dir_register@res& (0+255),w,b
 17744                           
 17745                           ; BSR set to: 6
 17746   0186C2  0012               	return		;funcret
 17747   0186C4                     __end_of_dir_register:
 17748                           	callstack 0
 17749                           
 17750 ;; *************** function _dir_alloc *****************
 17751 ;; Defined at:
 17752 ;;		line 1806 in file "fatfs/ff.c"
 17753 ;; Parameters:    Size  Location     Type
 17754 ;;  dp              2   98[BANK6 ] PTR struct .
 17755 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
 17756 ;;  n_ent           2  100[BANK6 ] unsigned int 
 17757 ;; Auto vars:     Size  Location     Type
 17758 ;;  n               2  107[BANK6 ] unsigned int 
 17759 ;;  fs              2  105[BANK6 ] PTR struct .
 17760 ;;		 -> fs(560), NULL(0), 
 17761 ;;  res             1  109[BANK6 ] enum E275
 17762 ;; Return value:  Size  Location     Type
 17763 ;;                  1    wreg      enum E275
 17764 ;; Registers used:
 17765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17766 ;; Tracked objects:
 17767 ;;		On entry : 3F/6
 17768 ;;		On exit  : 3F/6
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17771 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17772 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17773 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17774 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17775 ;;Total ram usage:       12 bytes
 17776 ;; Hardware stack levels used: 1
 17777 ;; Hardware stack levels required when called: 16
 17778 ;; This function calls:
 17779 ;;		_dir_next
 17780 ;;		_dir_sdi
 17781 ;;		_move_window
 17782 ;; This function is called by:
 17783 ;;		_dir_register
 17784 ;; This function uses a non-reentrant model
 17785 ;;
 17786                           
 17787                           	psect	text21
 17788   0180D4                     __ptext21:
 17789                           	callstack 0
 17790   0180D4                     _dir_alloc:
 17791                           	callstack 107
 17792                           
 17793                           ; BSR set to: 6
 17794                           ;fatfs/ff.c: 1807:  DIR* dp,;fatfs/ff.c: 1808:  UINT n_ent;fatfs/ff.c: 1810: {;fatfs/ff.
      +                          c: 1811:  FRESULT res;;fatfs/ff.c: 1812:  UINT n;;fatfs/ff.c: 1813:  FATFS *fs = dp->obj
      +                          .fs;
 17795                           
 17796                           ; BSR set to: 6
 17797                           ;incstack = 0
 17798   0180D4  C662  F4D9         	movff	dir_alloc@dp,fsr2l
 17799   0180D8  C663  F4DA         	movff	dir_alloc@dp+1,fsr2h
 17800   0180DC  C4DE F669          	movff	postinc2,dir_alloc@fs
 17801   0180E0  C4DD F66A          	movff	postdec2,dir_alloc@fs+1
 17802                           
 17803                           ; BSR set to: 6
 17804                           ;fatfs/ff.c: 1816:  res = dir_sdi(dp, 0);
 17805   0180E4  C662  F624         	movff	dir_alloc@dp,dir_sdi@dp
 17806   0180E8  C663  F625         	movff	dir_alloc@dp+1,dir_sdi@dp+1
 17807   0180EC  0E00               	movlw	0
 17808   0180EE  6F26               	movwf	dir_sdi@ofs& (0+255),b
 17809   0180F0  0E00               	movlw	0
 17810   0180F2  6F27               	movwf	(dir_sdi@ofs+1)& (0+255),b
 17811   0180F4  0E00               	movlw	0
 17812   0180F6  6F28               	movwf	(dir_sdi@ofs+2)& (0+255),b
 17813   0180F8  0E00               	movlw	0
 17814   0180FA  6F29               	movwf	(dir_sdi@ofs+3)& (0+255),b
 17815   0180FC  EC33  F0A5         	call	_dir_sdi	;wreg free
 17816   018100  6F6D               	movwf	dir_alloc@res& (0+255),b
 17817                           
 17818                           ; BSR set to: 6
 17819                           ;fatfs/ff.c: 1817:  if (res == FR_OK) {
 17820   018102  516D               	movf	dir_alloc@res& (0+255),w,b
 17821   018104  A4D8               	btfss	status,2,c
 17822   018106  D05D               	goto	u12790
 17823                           
 17824                           ; BSR set to: 6
 17825                           ;fatfs/ff.c: 1818:   n = 0;
 17826   018108  0E00               	movlw	0
 17827   01810A  6F6C               	movwf	(dir_alloc@n+1)& (0+255),b
 17828   01810C  0E00               	movlw	0
 17829   01810E  6F6B               	movwf	dir_alloc@n& (0+255),b
 17830   018110                     l10567:
 17831                           
 17832                           ; BSR set to: 6
 17833                           ;fatfs/ff.c: 1820:    res = move_window(fs, dp->sect);
 17834   018110  C669  F600         	movff	dir_alloc@fs,move_window@fs
 17835   018114  C66A  F601         	movff	dir_alloc@fs+1,move_window@fs+1
 17836   018118  EE20 F016          	lfsr	2,22
 17837   01811C  5162               	movf	dir_alloc@dp& (0+255),w,b
 17838   01811E  26D9               	addwf	fsr2l,f,c
 17839   018120  5163               	movf	(dir_alloc@dp+1)& (0+255),w,b
 17840   018122  22DA               	addwfc	fsr2h,f,c
 17841   018124  C4DE F602          	movff	postinc2,move_window@sect
 17842   018128  C4DE F603          	movff	postinc2,move_window@sect+1
 17843   01812C  C4DE F604          	movff	postinc2,move_window@sect+2
 17844   018130  C4DE F605          	movff	postinc2,move_window@sect+3
 17845   018134  EC23  F0C4         	call	_move_window	;wreg free
 17846   018138  0106               	movlb	6	; () banked
 17847   01813A  6F6D               	movwf	dir_alloc@res& (0+255),b
 17848                           
 17849                           ; BSR set to: 6
 17850                           ;fatfs/ff.c: 1821:    if (res != FR_OK) break;
 17851   01813C  516D               	movf	dir_alloc@res& (0+255),w,b
 17852   01813E  A4D8               	btfss	status,2,c
 17853   018140  D040               	goto	u12790
 17854                           
 17855                           ; BSR set to: 6
 17856                           ;fatfs/ff.c: 1825:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
 17857   018142  EE20 F01A          	lfsr	2,26
 17858   018146  5162               	movf	dir_alloc@dp& (0+255),w,b
 17859   018148  26D9               	addwf	fsr2l,f,c
 17860   01814A  5163               	movf	(dir_alloc@dp+1)& (0+255),w,b
 17861   01814C  22DA               	addwfc	fsr2h,f,c
 17862   01814E  C4DE F666          	movff	postinc2,??_dir_alloc
 17863   018152  C4DD F667          	movff	postdec2,??_dir_alloc+1
 17864   018156  C666  F4D9         	movff	??_dir_alloc,fsr2l
 17865   01815A  C667  F4DA         	movff	??_dir_alloc+1,fsr2h
 17866   01815E  0EE5               	movlw	229
 17867   018160  18DE               	xorwf	postinc2,w,c
 17868   018162  B4D8               	btfsc	status,2,c
 17869   018164  D011               	goto	u12770
 17870                           
 17871                           ; BSR set to: 6
 17872   018166  EE20 F01A          	lfsr	2,26
 17873   01816A  5162               	movf	dir_alloc@dp& (0+255),w,b
 17874   01816C  26D9               	addwf	fsr2l,f,c
 17875   01816E  5163               	movf	(dir_alloc@dp+1)& (0+255),w,b
 17876   018170  22DA               	addwfc	fsr2h,f,c
 17877   018172  C4DE F666          	movff	postinc2,??_dir_alloc
 17878   018176  C4DD F667          	movff	postdec2,??_dir_alloc+1
 17879   01817A  C666  F4D9         	movff	??_dir_alloc,fsr2l
 17880   01817E  C667  F4DA         	movff	??_dir_alloc+1,fsr2h
 17881   018182  50DF               	movf	indf2,w,c
 17882   018184  A4D8               	btfss	status,2,c
 17883   018186  D00A               	goto	l10581
 17884   018188                     u12770:
 17885                           
 17886                           ; BSR set to: 6
 17887                           ;fatfs/ff.c: 1827:     if (++n == n_ent) break;
 17888   018188  4B6B               	infsnz	dir_alloc@n& (0+255),f,b
 17889   01818A  2B6C               	incf	(dir_alloc@n+1)& (0+255),f,b
 17890   01818C  5164               	movf	dir_alloc@n_ent& (0+255),w,b
 17891   01818E  196B               	xorwf	dir_alloc@n& (0+255),w,b
 17892   018190  E109               	bnz	l10583
 17893   018192  5165               	movf	(dir_alloc@n_ent+1)& (0+255),w,b
 17894   018194  196C               	xorwf	(dir_alloc@n+1)& (0+255),w,b
 17895   018196  B4D8               	btfsc	status,2,c
 17896   018198  D014               	goto	u12790
 17897   01819A  D004               	goto	l10583
 17898   01819C                     l10581:
 17899                           
 17900                           ; BSR set to: 6
 17901                           ;fatfs/ff.c: 1829:     n = 0;
 17902   01819C  0E00               	movlw	0
 17903   01819E  6F6C               	movwf	(dir_alloc@n+1)& (0+255),b
 17904   0181A0  0E00               	movlw	0
 17905   0181A2  6F6B               	movwf	dir_alloc@n& (0+255),b
 17906   0181A4                     l10583:
 17907                           
 17908                           ; BSR set to: 6
 17909                           ;fatfs/ff.c: 1831:    res = dir_next(dp, 1);
 17910   0181A4  C662  F648         	movff	dir_alloc@dp,dir_next@dp
 17911   0181A8  C663  F649         	movff	dir_alloc@dp+1,dir_next@dp+1
 17912   0181AC  0E00               	movlw	0
 17913   0181AE  6F4B               	movwf	(dir_next@stretch+1)& (0+255),b
 17914   0181B0  0E01               	movlw	1
 17915   0181B2  6F4A               	movwf	dir_next@stretch& (0+255),b
 17916   0181B4  ECB5  F09E         	call	_dir_next	;wreg free
 17917   0181B8  0106               	movlb	6	; () banked
 17918   0181BA  6F6D               	movwf	dir_alloc@res& (0+255),b
 17919                           
 17920                           ; BSR set to: 6
 17921                           ;fatfs/ff.c: 1832:   } while (res == FR_OK);
 17922   0181BC  516D               	movf	dir_alloc@res& (0+255),w,b
 17923   0181BE  B4D8               	btfsc	status,2,c
 17924   0181C0  D7A7               	goto	l10567
 17925   0181C2                     u12790:
 17926                           
 17927                           ; BSR set to: 6
 17928                           ;fatfs/ff.c: 1835:  if (res == FR_NO_FILE) res = FR_DENIED;
 17929   0181C2  0E04               	movlw	4
 17930   0181C4  196D               	xorwf	dir_alloc@res& (0+255),w,b
 17931   0181C6  A4D8               	btfss	status,2,c
 17932   0181C8  D002               	goto	l396
 17933                           
 17934                           ; BSR set to: 6
 17935   0181CA  0E07               	movlw	7
 17936   0181CC  6F6D               	movwf	dir_alloc@res& (0+255),b
 17937   0181CE                     l396:
 17938                           
 17939                           ; BSR set to: 6
 17940                           ;fatfs/ff.c: 1836:  return res;
 17941   0181CE  516D               	movf	dir_alloc@res& (0+255),w,b
 17942                           
 17943                           ; BSR set to: 6
 17944   0181D0  0012               	return		;funcret
 17945   0181D2                     __end_of_dir_alloc:
 17946                           	callstack 0
 17947                           
 17948 ;; *************** function _dir_sdi *****************
 17949 ;; Defined at:
 17950 ;;		line 1697 in file "fatfs/ff.c"
 17951 ;; Parameters:    Size  Location     Type
 17952 ;;  dp              2   36[BANK6 ] PTR struct .
 17953 ;;		 -> fsdir(40), f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), 
 17954 ;;		 -> f_unlink@sdj(40), f_unlink@dj(40), f_stat@dj(40), f_open@dj(40), 
 17955 ;;  ofs             4   38[BANK6 ] unsigned long 
 17956 ;; Auto vars:     Size  Location     Type
 17957 ;;  clst            4   56[BANK6 ] unsigned long 
 17958 ;;  csz             4   52[BANK6 ] unsigned long 
 17959 ;;  fs              2   60[BANK6 ] PTR struct .
 17960 ;;		 -> fs(560), NULL(0), 
 17961 ;; Return value:  Size  Location     Type
 17962 ;;                  1    wreg      enum E275
 17963 ;; Registers used:
 17964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17965 ;; Tracked objects:
 17966 ;;		On entry : 3F/6
 17967 ;;		On exit  : 3F/6
 17968 ;;		Unchanged: 0/0
 17969 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17970 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17971 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17972 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17973 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17974 ;;Total ram usage:       26 bytes
 17975 ;; Hardware stack levels used: 1
 17976 ;; Hardware stack levels required when called: 14
 17977 ;; This function calls:
 17978 ;;		_clst2sect
 17979 ;;		_get_fat
 17980 ;; This function is called by:
 17981 ;;		_dir_alloc
 17982 ;;		_dir_find
 17983 ;;		_follow_path
 17984 ;;		_f_opendir
 17985 ;;		_f_readdir
 17986 ;; This function uses a non-reentrant model
 17987 ;;
 17988                           
 17989                           	psect	text22
 17990   014A66                     __ptext22:
 17991                           	callstack 0
 17992   014A66                     _dir_sdi:
 17993                           	callstack 110
 17994                           
 17995                           ; BSR set to: 6
 17996                           ;fatfs/ff.c: 1698:  DIR* dp,;fatfs/ff.c: 1699:  DWORD ofs;fatfs/ff.c: 1701: {;fatfs/ff.c
      +                          : 1702:  DWORD csz, clst;;fatfs/ff.c: 1703:  FATFS *fs = dp->obj.fs;
 17997                           
 17998                           ; BSR set to: 6
 17999                           ;incstack = 0
 18000   014A66  C624  F4D9         	movff	dir_sdi@dp,fsr2l
 18001   014A6A  C625  F4DA         	movff	dir_sdi@dp+1,fsr2h
 18002   014A6E  C4DE F63C          	movff	postinc2,dir_sdi@fs
 18003   014A72  C4DD F63D          	movff	postdec2,dir_sdi@fs+1
 18004                           
 18005                           ; BSR set to: 6
 18006                           
 18007                           ; BSR set to: 6
 18008                           
 18009                           ;fatfs/ff.c: 1706:  if (ofs >= (DWORD)((0 && fs->fs_type == 4) ? 0x10000000 : 0x200000) 
      +                          || ofs % 32) {
 18010   014A76  5129               	movf	(dir_sdi@ofs+3)& (0+255),w,b
 18011   014A78  E10A               	bnz	l10227
 18012   014A7A  0E20               	movlw	32
 18013   014A7C  5D28               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
 18014   014A7E  B0D8               	btfsc	status,0,c
 18015   014A80  D006               	goto	u12130
 18016                           
 18017                           ; BSR set to: 6
 18018   014A82  C626  F62A         	movff	dir_sdi@ofs,??_dir_sdi
 18019   014A86  0E1F               	movlw	31
 18020   014A88  172A               	andwf	??_dir_sdi& (0+255),f,b
 18021   014A8A  B4D8               	btfsc	status,2,c
 18022   014A8C  D002               	goto	l10231
 18023   014A8E                     u12130:
 18024   014A8E                     l10227:
 18025                           
 18026                           ; BSR set to: 6
 18027                           ;fatfs/ff.c: 1707:   return FR_INT_ERR;
 18028   014A8E  0E02               	movlw	2
 18029   014A90  0012               	return	
 18030   014A92                     l10231:
 18031                           
 18032                           ; BSR set to: 6
 18033                           ;fatfs/ff.c: 1709:  dp->dptr = ofs;
 18034   014A92  EE20 F00E          	lfsr	2,14
 18035   014A96  5124               	movf	dir_sdi@dp& (0+255),w,b
 18036   014A98  26D9               	addwf	fsr2l,f,c
 18037   014A9A  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18038   014A9C  22DA               	addwfc	fsr2h,f,c
 18039   014A9E  C626  F4DE         	movff	dir_sdi@ofs,postinc2
 18040   014AA2  C627  F4DE         	movff	dir_sdi@ofs+1,postinc2
 18041   014AA6  C628  F4DE         	movff	dir_sdi@ofs+2,postinc2
 18042   014AAA  C629  F4DE         	movff	dir_sdi@ofs+3,postinc2
 18043                           
 18044                           ;fatfs/ff.c: 1710:  clst = dp->obj.sclust;
 18045   014AAE  EE20 F006          	lfsr	2,6
 18046   014AB2  5124               	movf	dir_sdi@dp& (0+255),w,b
 18047   014AB4  26D9               	addwf	fsr2l,f,c
 18048   014AB6  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18049   014AB8  22DA               	addwfc	fsr2h,f,c
 18050   014ABA  C4DE F638          	movff	postinc2,dir_sdi@clst
 18051   014ABE  C4DE F639          	movff	postinc2,dir_sdi@clst+1
 18052   014AC2  C4DE F63A          	movff	postinc2,dir_sdi@clst+2
 18053   014AC6  C4DE F63B          	movff	postinc2,dir_sdi@clst+3
 18054                           
 18055                           ; BSR set to: 6
 18056                           ;fatfs/ff.c: 1711:  if (clst == 0 && fs->fs_type >= 3) {
 18057   014ACA  5138               	movf	dir_sdi@clst& (0+255),w,b
 18058   014ACC  1139               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 18059   014ACE  113A               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 18060   014AD0  113B               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 18061   014AD2  A4D8               	btfss	status,2,c
 18062   014AD4  D015               	goto	l10241
 18063                           
 18064                           ; BSR set to: 6
 18065   014AD6  C63C  F4D9         	movff	dir_sdi@fs,fsr2l
 18066   014ADA  C63D  F4DA         	movff	dir_sdi@fs+1,fsr2h
 18067   014ADE  0E02               	movlw	2
 18068   014AE0  64DF               	cpfsgt	indf2,c
 18069   014AE2  D00E               	goto	l10241
 18070                           
 18071                           ; BSR set to: 6
 18072                           ;fatfs/ff.c: 1712:   clst = (DWORD)fs->dirbase;
 18073   014AE4  EE20 F024          	lfsr	2,36
 18074   014AE8  513C               	movf	dir_sdi@fs& (0+255),w,b
 18075   014AEA  26D9               	addwf	fsr2l,f,c
 18076   014AEC  513D               	movf	(dir_sdi@fs+1)& (0+255),w,b
 18077   014AEE  22DA               	addwfc	fsr2h,f,c
 18078   014AF0  C4DE F638          	movff	postinc2,dir_sdi@clst
 18079   014AF4  C4DE F639          	movff	postinc2,dir_sdi@clst+1
 18080   014AF8  C4DE F63A          	movff	postinc2,dir_sdi@clst+2
 18081   014AFC  C4DE F63B          	movff	postinc2,dir_sdi@clst+3
 18082   014B00                     l10241:
 18083                           
 18084                           ; BSR set to: 6
 18085                           ;fatfs/ff.c: 1716:  if (clst == 0) {
 18086   014B00  5138               	movf	dir_sdi@clst& (0+255),w,b
 18087   014B02  1139               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 18088   014B04  113A               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 18089   014B06  113B               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 18090   014B08  A4D8               	btfss	status,2,c
 18091   014B0A  D040               	goto	l10251
 18092                           
 18093                           ; BSR set to: 6
 18094                           ;fatfs/ff.c: 1717:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ERR;
 18095   014B0C  EE20 F008          	lfsr	2,8
 18096   014B10  513C               	movf	dir_sdi@fs& (0+255),w,b
 18097   014B12  26D9               	addwf	fsr2l,f,c
 18098   014B14  513D               	movf	(dir_sdi@fs+1)& (0+255),w,b
 18099   014B16  22DA               	addwfc	fsr2h,f,c
 18100   014B18  C4DE F62A          	movff	postinc2,??_dir_sdi
 18101   014B1C  C4DD F62B          	movff	postdec2,??_dir_sdi+1
 18102   014B20  512A               	movf	??_dir_sdi& (0+255),w,b
 18103   014B22  6F2C               	movwf	(??_dir_sdi+2)& (0+255),b
 18104   014B24  512B               	movf	(??_dir_sdi+1)& (0+255),w,b
 18105   014B26  6F2D               	movwf	(??_dir_sdi+3)& (0+255),b
 18106   014B28  6B2E               	clrf	(??_dir_sdi+4)& (0+255),b
 18107   014B2A  6B2F               	clrf	(??_dir_sdi+5)& (0+255),b
 18108   014B2C  C626  F630         	movff	dir_sdi@ofs,??_dir_sdi+6
 18109   014B30  C627  F631         	movff	dir_sdi@ofs+1,??_dir_sdi+7
 18110   014B34  C628  F632         	movff	dir_sdi@ofs+2,??_dir_sdi+8
 18111   014B38  C629  F633         	movff	dir_sdi@ofs+3,??_dir_sdi+9
 18112   014B3C  0E06               	movlw	6
 18113   014B3E  D005               	goto	u12170
 18114   014B40                     u12175:
 18115   014B40  90D8               	bcf	status,0,c
 18116   014B42  3333               	rrcf	(??_dir_sdi+9)& (0+255),f,b
 18117   014B44  3332               	rrcf	(??_dir_sdi+8)& (0+255),f,b
 18118   014B46  3331               	rrcf	(??_dir_sdi+7)& (0+255),f,b
 18119   014B48  3330               	rrcf	(??_dir_sdi+6)& (0+255),f,b
 18120   014B4A                     u12170:
 18121   014B4A  2EE8               	decfsz	wreg,f,c
 18122   014B4C  D7F9               	goto	u12175
 18123   014B4E  512C               	movf	(??_dir_sdi+2)& (0+255),w,b
 18124   014B50  5D30               	subwf	(??_dir_sdi+6)& (0+255),w,b
 18125   014B52  512D               	movf	(??_dir_sdi+3)& (0+255),w,b
 18126   014B54  5931               	subwfb	(??_dir_sdi+7)& (0+255),w,b
 18127   014B56  512E               	movf	(??_dir_sdi+4)& (0+255),w,b
 18128   014B58  5932               	subwfb	(??_dir_sdi+8)& (0+255),w,b
 18129   014B5A  512F               	movf	(??_dir_sdi+5)& (0+255),w,b
 18130   014B5C  5933               	subwfb	(??_dir_sdi+9)& (0+255),w,b
 18131   014B5E  B0D8               	btfsc	status,0,c
 18132   014B60  D796               	goto	u12130
 18133                           
 18134                           ; BSR set to: 6
 18135                           ;fatfs/ff.c: 1718:   dp->sect = fs->dirbase;
 18136   014B62  EE20 F024          	lfsr	2,36
 18137   014B66  513C               	movf	dir_sdi@fs& (0+255),w,b
 18138   014B68  26D9               	addwf	fsr2l,f,c
 18139   014B6A  513D               	movf	(dir_sdi@fs+1)& (0+255),w,b
 18140   014B6C  22DA               	addwfc	fsr2h,f,c
 18141   014B6E  EE10 F016          	lfsr	1,22
 18142   014B72  5124               	movf	dir_sdi@dp& (0+255),w,b
 18143   014B74  26E1               	addwf	fsr1l,f,c
 18144   014B76  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18145   014B78  22E2               	addwfc	fsr1h,f,c
 18146   014B7A  C4DE F4E6          	movff	postinc2,postinc1
 18147   014B7E  C4DE F4E6          	movff	postinc2,postinc1
 18148   014B82  C4DE F4E6          	movff	postinc2,postinc1
 18149   014B86  C4DE F4E6          	movff	postinc2,postinc1
 18150                           
 18151                           ;fatfs/ff.c: 1720:  } else {
 18152   014B8A  D08A               	goto	l10273
 18153   014B8C                     l10251:
 18154                           
 18155                           ; BSR set to: 6
 18156                           ;fatfs/ff.c: 1721:   csz = (DWORD)fs->csize * ((UINT)512);
 18157   014B8C  EE20 F00A          	lfsr	2,10
 18158   014B90  513C               	movf	dir_sdi@fs& (0+255),w,b
 18159   014B92  26D9               	addwf	fsr2l,f,c
 18160   014B94  513D               	movf	(dir_sdi@fs+1)& (0+255),w,b
 18161   014B96  22DA               	addwfc	fsr2h,f,c
 18162   014B98  C4DE F62A          	movff	postinc2,??_dir_sdi
 18163   014B9C  C4DD F62B          	movff	postdec2,??_dir_sdi+1
 18164   014BA0  512A               	movf	??_dir_sdi& (0+255),w,b
 18165   014BA2  6F2C               	movwf	(??_dir_sdi+2)& (0+255),b
 18166   014BA4  512B               	movf	(??_dir_sdi+1)& (0+255),w,b
 18167   014BA6  6F2D               	movwf	(??_dir_sdi+3)& (0+255),b
 18168   014BA8  6B2E               	clrf	(??_dir_sdi+4)& (0+255),b
 18169   014BAA  6B2F               	clrf	(??_dir_sdi+5)& (0+255),b
 18170   014BAC  0E09               	movlw	9
 18171   014BAE                     u12195:
 18172   014BAE  90D8               	bcf	status,0,c
 18173   014BB0  372C               	rlcf	(??_dir_sdi+2)& (0+255),f,b
 18174   014BB2  372D               	rlcf	(??_dir_sdi+3)& (0+255),f,b
 18175   014BB4  372E               	rlcf	(??_dir_sdi+4)& (0+255),f,b
 18176   014BB6  372F               	rlcf	(??_dir_sdi+5)& (0+255),f,b
 18177   014BB8  2EE8               	decfsz	wreg,f,c
 18178   014BBA  D7F9               	goto	u12195
 18179   014BBC  C62C  F634         	movff	??_dir_sdi+2,dir_sdi@csz
 18180   014BC0  C62D  F635         	movff	??_dir_sdi+3,dir_sdi@csz+1
 18181   014BC4  C62E  F636         	movff	??_dir_sdi+4,dir_sdi@csz+2
 18182   014BC8  C62F  F637         	movff	??_dir_sdi+5,dir_sdi@csz+3
 18183                           
 18184                           ;fatfs/ff.c: 1722:   while (ofs >= csz) {
 18185   014BCC  D042               	goto	l352
 18186   014BCE                     l10253:
 18187                           
 18188                           ; BSR set to: 6
 18189                           ;fatfs/ff.c: 1723:    clst = get_fat(&dp->obj, clst);
 18190   014BCE  C624  F60A         	movff	dir_sdi@dp,get_fat@obj
 18191   014BD2  C625  F60B         	movff	dir_sdi@dp+1,get_fat@obj+1
 18192   014BD6  C638  F60C         	movff	dir_sdi@clst,get_fat@clst
 18193   014BDA  C639  F60D         	movff	dir_sdi@clst+1,get_fat@clst+1
 18194   014BDE  C63A  F60E         	movff	dir_sdi@clst+2,get_fat@clst+2
 18195   014BE2  C63B  F60F         	movff	dir_sdi@clst+3,get_fat@clst+3
 18196   014BE6  EC68  F0A0         	call	_get_fat	;wreg free
 18197   014BEA  C60A  F638         	movff	?_get_fat,dir_sdi@clst
 18198   014BEE  C60B  F639         	movff	?_get_fat+1,dir_sdi@clst+1
 18199   014BF2  C60C  F63A         	movff	?_get_fat+2,dir_sdi@clst+2
 18200   014BF6  C60D  F63B         	movff	?_get_fat+3,dir_sdi@clst+3
 18201                           
 18202                           ;fatfs/ff.c: 1724:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 18203   014BFA  0106               	movlb	6	; () banked
 18204   014BFC  2938               	incf	dir_sdi@clst& (0+255),w,b
 18205   014BFE  E109               	bnz	l10261
 18206   014C00  2939               	incf	(dir_sdi@clst+1)& (0+255),w,b
 18207   014C02  E107               	bnz	l10261
 18208   014C04  293A               	incf	(dir_sdi@clst+2)& (0+255),w,b
 18209   014C06  E105               	bnz	l10261
 18210   014C08  293B               	incf	(dir_sdi@clst+3)& (0+255),w,b
 18211   014C0A  A4D8               	btfss	status,2,c
 18212   014C0C  D002               	goto	l10261
 18213                           
 18214                           ; BSR set to: 6
 18215   014C0E  0E01               	movlw	1
 18216   014C10  0012               	return	
 18217   014C12                     l10261:
 18218                           
 18219                           ; BSR set to: 6
 18220                           ;fatfs/ff.c: 1725:    if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
 18221   014C12  513B               	movf	(dir_sdi@clst+3)& (0+255),w,b
 18222   014C14  113A               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 18223   014C16  1139               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 18224   014C18  E104               	bnz	u12210
 18225   014C1A  0E02               	movlw	2
 18226   014C1C  5D38               	subwf	dir_sdi@clst& (0+255),w,b
 18227   014C1E  A0D8               	btfss	status,0,c
 18228   014C20  D736               	goto	u12130
 18229   014C22                     u12210:
 18230                           
 18231                           ; BSR set to: 6
 18232   014C22  EE20 F014          	lfsr	2,20
 18233   014C26  513C               	movf	dir_sdi@fs& (0+255),w,b
 18234   014C28  26D9               	addwf	fsr2l,f,c
 18235   014C2A  513D               	movf	(dir_sdi@fs+1)& (0+255),w,b
 18236   014C2C  22DA               	addwfc	fsr2h,f,c
 18237   014C2E  50DE               	movf	postinc2,w,c
 18238   014C30  5D38               	subwf	dir_sdi@clst& (0+255),w,b
 18239   014C32  50DE               	movf	postinc2,w,c
 18240   014C34  5939               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
 18241   014C36  50DE               	movf	postinc2,w,c
 18242   014C38  593A               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
 18243   014C3A  50DE               	movf	postinc2,w,c
 18244   014C3C  593B               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
 18245   014C3E  B0D8               	btfsc	status,0,c
 18246   014C40  D726               	goto	u12130
 18247                           
 18248                           ; BSR set to: 6
 18249                           ;fatfs/ff.c: 1726:    ofs -= csz;
 18250   014C42  5134               	movf	dir_sdi@csz& (0+255),w,b
 18251   014C44  5F26               	subwf	dir_sdi@ofs& (0+255),f,b
 18252   014C46  5135               	movf	(dir_sdi@csz+1)& (0+255),w,b
 18253   014C48  5B27               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
 18254   014C4A  5136               	movf	(dir_sdi@csz+2)& (0+255),w,b
 18255   014C4C  5B28               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
 18256   014C4E  5137               	movf	(dir_sdi@csz+3)& (0+255),w,b
 18257   014C50  5B29               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
 18258   014C52                     l352:
 18259                           
 18260                           ; BSR set to: 6
 18261                           ;fatfs/ff.c: 1722:   while (ofs >= csz) {
 18262   014C52  5134               	movf	dir_sdi@csz& (0+255),w,b
 18263   014C54  5D26               	subwf	dir_sdi@ofs& (0+255),w,b
 18264   014C56  5135               	movf	(dir_sdi@csz+1)& (0+255),w,b
 18265   014C58  5927               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
 18266   014C5A  5136               	movf	(dir_sdi@csz+2)& (0+255),w,b
 18267   014C5C  5928               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
 18268   014C5E  5137               	movf	(dir_sdi@csz+3)& (0+255),w,b
 18269   014C60  5929               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
 18270   014C62  B0D8               	btfsc	status,0,c
 18271   014C64  D7B4               	goto	l10253
 18272                           
 18273                           ; BSR set to: 6
 18274                           ;fatfs/ff.c: 1728:   dp->sect = clst2sect(fs, clst);
 18275   014C66  C63C  F50D         	movff	dir_sdi@fs,clst2sect@fs
 18276   014C6A  C63D  F50E         	movff	dir_sdi@fs+1,clst2sect@fs+1
 18277   014C6E  C638  F50F         	movff	dir_sdi@clst,clst2sect@clst
 18278   014C72  C639  F510         	movff	dir_sdi@clst+1,clst2sect@clst+1
 18279   014C76  C63A  F511         	movff	dir_sdi@clst+2,clst2sect@clst+2
 18280   014C7A  C63B  F512         	movff	dir_sdi@clst+3,clst2sect@clst+3
 18281   014C7E  ECC3  F0C3         	call	_clst2sect	;wreg free
 18282   014C82  0106               	movlb	6	; () banked
 18283   014C84  EE20 F016          	lfsr	2,22
 18284   014C88  5124               	movf	dir_sdi@dp& (0+255),w,b
 18285   014C8A  26D9               	addwf	fsr2l,f,c
 18286   014C8C  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18287   014C8E  22DA               	addwfc	fsr2h,f,c
 18288   014C90  C50D  F4DE         	movff	?_clst2sect,postinc2
 18289   014C94  C50E  F4DE         	movff	?_clst2sect+1,postinc2
 18290   014C98  C50F  F4DE         	movff	?_clst2sect+2,postinc2
 18291   014C9C  C510  F4DE         	movff	?_clst2sect+3,postinc2
 18292   014CA0                     l10273:
 18293                           
 18294                           ; BSR set to: 6
 18295                           ;fatfs/ff.c: 1730:  dp->clust = clst;
 18296   014CA0  EE20 F012          	lfsr	2,18
 18297   014CA4  5124               	movf	dir_sdi@dp& (0+255),w,b
 18298   014CA6  26D9               	addwf	fsr2l,f,c
 18299   014CA8  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18300   014CAA  22DA               	addwfc	fsr2h,f,c
 18301   014CAC  C638  F4DE         	movff	dir_sdi@clst,postinc2
 18302   014CB0  C639  F4DE         	movff	dir_sdi@clst+1,postinc2
 18303   014CB4  C63A  F4DE         	movff	dir_sdi@clst+2,postinc2
 18304   014CB8  C63B  F4DE         	movff	dir_sdi@clst+3,postinc2
 18305                           
 18306                           ; BSR set to: 6
 18307                           ;fatfs/ff.c: 1731:  if (dp->sect == 0) return FR_INT_ERR;
 18308   014CBC  EE20 F016          	lfsr	2,22
 18309   014CC0  5124               	movf	dir_sdi@dp& (0+255),w,b
 18310   014CC2  26D9               	addwf	fsr2l,f,c
 18311   014CC4  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18312   014CC6  22DA               	addwfc	fsr2h,f,c
 18313   014CC8  50DE               	movf	postinc2,w,c
 18314   014CCA  10DE               	iorwf	postinc2,w,c
 18315   014CCC  10DE               	iorwf	postinc2,w,c
 18316   014CCE  10DE               	iorwf	postinc2,w,c
 18317   014CD0  B4D8               	btfsc	status,2,c
 18318   014CD2  D6DD               	goto	u12130
 18319                           
 18320                           ; BSR set to: 6
 18321                           ;fatfs/ff.c: 1732:  dp->sect += ofs / ((UINT)512);
 18322   014CD4  C626  F62A         	movff	dir_sdi@ofs,??_dir_sdi
 18323   014CD8  C627  F62B         	movff	dir_sdi@ofs+1,??_dir_sdi+1
 18324   014CDC  C628  F62C         	movff	dir_sdi@ofs+2,??_dir_sdi+2
 18325   014CE0  C629  F62D         	movff	dir_sdi@ofs+3,??_dir_sdi+3
 18326   014CE4  0E0A               	movlw	10
 18327   014CE6  D005               	goto	u12250
 18328   014CE8                     u12255:
 18329   014CE8  90D8               	bcf	status,0,c
 18330   014CEA  332D               	rrcf	(??_dir_sdi+3)& (0+255),f,b
 18331   014CEC  332C               	rrcf	(??_dir_sdi+2)& (0+255),f,b
 18332   014CEE  332B               	rrcf	(??_dir_sdi+1)& (0+255),f,b
 18333   014CF0  332A               	rrcf	??_dir_sdi& (0+255),f,b
 18334   014CF2                     u12250:
 18335   014CF2  2EE8               	decfsz	wreg,f,c
 18336   014CF4  D7F9               	goto	u12255
 18337   014CF6  EE20 F016          	lfsr	2,22
 18338   014CFA  5124               	movf	dir_sdi@dp& (0+255),w,b
 18339   014CFC  26D9               	addwf	fsr2l,f,c
 18340   014CFE  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18341   014D00  22DA               	addwfc	fsr2h,f,c
 18342   014D02  512A               	movf	??_dir_sdi& (0+255),w,b
 18343   014D04  26DE               	addwf	postinc2,f,c
 18344   014D06  512B               	movf	(??_dir_sdi+1)& (0+255),w,b
 18345   014D08  22DE               	addwfc	postinc2,f,c
 18346   014D0A  512C               	movf	(??_dir_sdi+2)& (0+255),w,b
 18347   014D0C  22DE               	addwfc	postinc2,f,c
 18348   014D0E  512D               	movf	(??_dir_sdi+3)& (0+255),w,b
 18349   014D10  22DE               	addwfc	postinc2,f,c
 18350                           
 18351                           ;fatfs/ff.c: 1733:  dp->dir = fs->win + (ofs % ((UINT)512));
 18352   014D12  0EFF               	movlw	255
 18353   014D14  1526               	andwf	dir_sdi@ofs& (0+255),w,b
 18354   014D16  6F2A               	movwf	??_dir_sdi& (0+255),b
 18355   014D18  0E01               	movlw	1
 18356   014D1A  1527               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 18357   014D1C  6F2B               	movwf	(??_dir_sdi+1)& (0+255),b
 18358   014D1E  512A               	movf	??_dir_sdi& (0+255),w,b
 18359   014D20  253C               	addwf	dir_sdi@fs& (0+255),w,b
 18360   014D22  6F2C               	movwf	(??_dir_sdi+2)& (0+255),b
 18361   014D24  512B               	movf	(??_dir_sdi+1)& (0+255),w,b
 18362   014D26  213D               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
 18363   014D28  6F2D               	movwf	(??_dir_sdi+3)& (0+255),b
 18364   014D2A  0E30               	movlw	48
 18365   014D2C  272C               	addwf	(??_dir_sdi+2)& (0+255),f,b
 18366   014D2E  0E00               	movlw	0
 18367   014D30  232D               	addwfc	(??_dir_sdi+3)& (0+255),f,b
 18368   014D32  EE20 F01A          	lfsr	2,26
 18369   014D36  5124               	movf	dir_sdi@dp& (0+255),w,b
 18370   014D38  26D9               	addwf	fsr2l,f,c
 18371   014D3A  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18372   014D3C  22DA               	addwfc	fsr2h,f,c
 18373   014D3E  C62C  F4DE         	movff	??_dir_sdi+2,postinc2
 18374   014D42  C62D  F4DD         	movff	??_dir_sdi+3,postdec2
 18375                           
 18376                           ; BSR set to: 6
 18377                           ;fatfs/ff.c: 1735:  return FR_OK;
 18378   014D46  0E00               	movlw	0
 18379                           
 18380                           ; BSR set to: 6
 18381   014D48  0012               	return		;funcret
 18382   014D4A                     __end_of_dir_sdi:
 18383                           	callstack 0
 18384                           
 18385 ;; *************** function _dir_next *****************
 18386 ;; Defined at:
 18387 ;;		line 1745 in file "fatfs/ff.c"
 18388 ;; Parameters:    Size  Location     Type
 18389 ;;  dp              2   72[BANK6 ] PTR struct .
 18390 ;;		 -> fsdir(40), f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), 
 18391 ;;		 -> f_unlink@sdj(40), f_unlink@dj(40), f_stat@dj(40), f_open@dj(40), 
 18392 ;;  stretch         2   74[BANK6 ] int 
 18393 ;; Auto vars:     Size  Location     Type
 18394 ;;  clst            4   94[BANK6 ] unsigned long 
 18395 ;;  ofs             4   88[BANK6 ] unsigned long 
 18396 ;;  fs              2   92[BANK6 ] PTR struct .
 18397 ;;		 -> fs(560), NULL(0), 
 18398 ;; Return value:  Size  Location     Type
 18399 ;;                  1    wreg      enum E275
 18400 ;; Registers used:
 18401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18402 ;; Tracked objects:
 18403 ;;		On entry : 3F/6
 18404 ;;		On exit  : 3C/4
 18405 ;;		Unchanged: 0/0
 18406 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18407 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18408 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18409 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18410 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18411 ;;Total ram usage:       26 bytes
 18412 ;; Hardware stack levels used: 1
 18413 ;; Hardware stack levels required when called: 15
 18414 ;; This function calls:
 18415 ;;		_clst2sect
 18416 ;;		_create_chain
 18417 ;;		_dir_clear
 18418 ;;		_get_fat
 18419 ;; This function is called by:
 18420 ;;		_dir_alloc
 18421 ;;		_dir_read
 18422 ;;		_dir_find
 18423 ;;		_f_readdir
 18424 ;; This function uses a non-reentrant model
 18425 ;;
 18426                           
 18427                           	psect	text23
 18428   013D6A                     __ptext23:
 18429                           	callstack 0
 18430   013D6A                     _dir_next:
 18431                           	callstack 108
 18432                           
 18433                           ; BSR set to: 6
 18434                           ;fatfs/ff.c: 1746:  DIR* dp,;fatfs/ff.c: 1747:  int stretch;fatfs/ff.c: 1749: {;fatfs/ff
      +                          .c: 1750:  DWORD ofs, clst;;fatfs/ff.c: 1751:  FATFS *fs = dp->obj.fs;
 18435                           
 18436                           ; BSR set to: 6
 18437                           ;incstack = 0
 18438   013D6A  C648  F4D9         	movff	dir_next@dp,fsr2l
 18439   013D6E  C649  F4DA         	movff	dir_next@dp+1,fsr2h
 18440   013D72  C4DE F65C          	movff	postinc2,dir_next@fs
 18441   013D76  C4DD F65D          	movff	postdec2,dir_next@fs+1
 18442                           
 18443                           ; BSR set to: 6
 18444                           ;fatfs/ff.c: 1754:  ofs = dp->dptr + 32;
 18445   013D7A  EE20 F00E          	lfsr	2,14
 18446   013D7E  5148               	movf	dir_next@dp& (0+255),w,b
 18447   013D80  26D9               	addwf	fsr2l,f,c
 18448   013D82  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18449   013D84  22DA               	addwfc	fsr2h,f,c
 18450   013D86  C4DE F64C          	movff	postinc2,??_dir_next
 18451   013D8A  C4DE F64D          	movff	postinc2,??_dir_next+1
 18452   013D8E  C4DE F64E          	movff	postinc2,??_dir_next+2
 18453   013D92  C4DE F64F          	movff	postinc2,??_dir_next+3
 18454   013D96  0E20               	movlw	32
 18455   013D98  254C               	addwf	??_dir_next& (0+255),w,b
 18456   013D9A  6F58               	movwf	dir_next@ofs& (0+255),b
 18457   013D9C  0E00               	movlw	0
 18458   013D9E  214D               	addwfc	(??_dir_next+1)& (0+255),w,b
 18459   013DA0  6F59               	movwf	(dir_next@ofs+1)& (0+255),b
 18460   013DA2  0E00               	movlw	0
 18461   013DA4  214E               	addwfc	(??_dir_next+2)& (0+255),w,b
 18462   013DA6  6F5A               	movwf	(dir_next@ofs+2)& (0+255),b
 18463   013DA8  0E00               	movlw	0
 18464   013DAA  214F               	addwfc	(??_dir_next+3)& (0+255),w,b
 18465   013DAC  6F5B               	movwf	(dir_next@ofs+3)& (0+255),b
 18466                           
 18467                           ; BSR set to: 6
 18468                           
 18469                           ; BSR set to: 6
 18470                           
 18471                           ;fatfs/ff.c: 1755:  if (ofs >= (DWORD)((0 && fs->fs_type == 4) ? 0x10000000 : 0x200000))
      +                           dp->sect = 0;
 18472   013DAE  515B               	movf	(dir_next@ofs+3)& (0+255),w,b
 18473   013DB0  E104               	bnz	u12260
 18474   013DB2  0E20               	movlw	32
 18475   013DB4  5D5A               	subwf	(dir_next@ofs+2)& (0+255),w,b
 18476   013DB6  A0D8               	btfss	status,0,c
 18477   013DB8  D00A               	goto	l362
 18478   013DBA                     u12260:
 18479                           
 18480                           ; BSR set to: 6
 18481   013DBA  EE20 F016          	lfsr	2,22
 18482   013DBE  5148               	movf	dir_next@dp& (0+255),w,b
 18483   013DC0  26D9               	addwf	fsr2l,f,c
 18484   013DC2  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18485   013DC4  22DA               	addwfc	fsr2h,f,c
 18486   013DC6  6ADE               	clrf	postinc2,c
 18487   013DC8  6ADE               	clrf	postinc2,c
 18488   013DCA  6ADE               	clrf	postinc2,c
 18489   013DCC  6ADD               	clrf	postdec2,c
 18490   013DCE                     l362:
 18491                           
 18492                           ; BSR set to: 6
 18493                           ;fatfs/ff.c: 1756:  if (dp->sect == 0) return FR_NO_FILE;
 18494   013DCE  EE20 F016          	lfsr	2,22
 18495   013DD2  5148               	movf	dir_next@dp& (0+255),w,b
 18496   013DD4  26D9               	addwf	fsr2l,f,c
 18497   013DD6  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18498   013DD8  22DA               	addwfc	fsr2h,f,c
 18499   013DDA  50DE               	movf	postinc2,w,c
 18500   013DDC  10DE               	iorwf	postinc2,w,c
 18501   013DDE  10DE               	iorwf	postinc2,w,c
 18502   013DE0  10DE               	iorwf	postinc2,w,c
 18503   013DE2  A4D8               	btfss	status,2,c
 18504   013DE4  D002               	goto	l10305
 18505   013DE6                     u12270:
 18506                           
 18507                           ; BSR set to: 6
 18508   013DE6  0E04               	movlw	4
 18509   013DE8  0012               	return	
 18510   013DEA                     l10305:
 18511                           
 18512                           ; BSR set to: 6
 18513                           ;fatfs/ff.c: 1758:  if (ofs % ((UINT)512) == 0) {
 18514   013DEA  0EFF               	movlw	255
 18515   013DEC  1558               	andwf	dir_next@ofs& (0+255),w,b
 18516   013DEE  6F4C               	movwf	??_dir_next& (0+255),b
 18517   013DF0  0E01               	movlw	1
 18518   013DF2  1559               	andwf	(dir_next@ofs+1)& (0+255),w,b
 18519   013DF4  6F4D               	movwf	(??_dir_next+1)& (0+255),b
 18520   013DF6  0E00               	movlw	0
 18521   013DF8  155A               	andwf	(dir_next@ofs+2)& (0+255),w,b
 18522   013DFA  6F4E               	movwf	(??_dir_next+2)& (0+255),b
 18523   013DFC  0E00               	movlw	0
 18524   013DFE  155B               	andwf	(dir_next@ofs+3)& (0+255),w,b
 18525   013E00  6F4F               	movwf	(??_dir_next+3)& (0+255),b
 18526   013E02  514C               	movf	??_dir_next& (0+255),w,b
 18527   013E04  114D               	iorwf	(??_dir_next+1)& (0+255),w,b
 18528   013E06  114E               	iorwf	(??_dir_next+2)& (0+255),w,b
 18529   013E08  114F               	iorwf	(??_dir_next+3)& (0+255),w,b
 18530   013E0A  A4D8               	btfss	status,2,c
 18531   013E0C  D137               	goto	l10373
 18532                           
 18533                           ; BSR set to: 6
 18534                           ;fatfs/ff.c: 1759:   dp->sect++;
 18535   013E0E  EE20 F016          	lfsr	2,22
 18536   013E12  5148               	movf	dir_next@dp& (0+255),w,b
 18537   013E14  26D9               	addwf	fsr2l,f,c
 18538   013E16  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18539   013E18  22DA               	addwfc	fsr2h,f,c
 18540   013E1A  2ADE               	incf	postinc2,f,c
 18541   013E1C  0E00               	movlw	0
 18542   013E1E  22DE               	addwfc	postinc2,f,c
 18543   013E20  22DE               	addwfc	postinc2,f,c
 18544   013E22  22DE               	addwfc	postinc2,f,c
 18545                           
 18546                           ;fatfs/ff.c: 1761:   if (dp->clust == 0) {
 18547   013E24  EE20 F012          	lfsr	2,18
 18548   013E28  5148               	movf	dir_next@dp& (0+255),w,b
 18549   013E2A  26D9               	addwf	fsr2l,f,c
 18550   013E2C  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18551   013E2E  22DA               	addwfc	fsr2h,f,c
 18552   013E30  50DE               	movf	postinc2,w,c
 18553   013E32  10DE               	iorwf	postinc2,w,c
 18554   013E34  10DE               	iorwf	postinc2,w,c
 18555   013E36  10DE               	iorwf	postinc2,w,c
 18556   013E38  A4D8               	btfss	status,2,c
 18557   013E3A  D02C               	goto	l10317
 18558                           
 18559                           ; BSR set to: 6
 18560                           ;fatfs/ff.c: 1762:    if (ofs / 32 >= fs->n_rootdir) {
 18561   013E3C  EE20 F008          	lfsr	2,8
 18562   013E40  515C               	movf	dir_next@fs& (0+255),w,b
 18563   013E42  26D9               	addwf	fsr2l,f,c
 18564   013E44  515D               	movf	(dir_next@fs+1)& (0+255),w,b
 18565   013E46  22DA               	addwfc	fsr2h,f,c
 18566   013E48  C4DE F64C          	movff	postinc2,??_dir_next
 18567   013E4C  C4DD F64D          	movff	postdec2,??_dir_next+1
 18568   013E50  514C               	movf	??_dir_next& (0+255),w,b
 18569   013E52  6F4E               	movwf	(??_dir_next+2)& (0+255),b
 18570   013E54  514D               	movf	(??_dir_next+1)& (0+255),w,b
 18571   013E56  6F4F               	movwf	(??_dir_next+3)& (0+255),b
 18572   013E58  6B50               	clrf	(??_dir_next+4)& (0+255),b
 18573   013E5A  6B51               	clrf	(??_dir_next+5)& (0+255),b
 18574   013E5C  C658  F652         	movff	dir_next@ofs,??_dir_next+6
 18575   013E60  C659  F653         	movff	dir_next@ofs+1,??_dir_next+7
 18576   013E64  C65A  F654         	movff	dir_next@ofs+2,??_dir_next+8
 18577   013E68  C65B  F655         	movff	dir_next@ofs+3,??_dir_next+9
 18578   013E6C  0E06               	movlw	6
 18579   013E6E  D005               	goto	u12300
 18580   013E70                     u12305:
 18581   013E70  90D8               	bcf	status,0,c
 18582   013E72  3355               	rrcf	(??_dir_next+9)& (0+255),f,b
 18583   013E74  3354               	rrcf	(??_dir_next+8)& (0+255),f,b
 18584   013E76  3353               	rrcf	(??_dir_next+7)& (0+255),f,b
 18585   013E78  3352               	rrcf	(??_dir_next+6)& (0+255),f,b
 18586   013E7A                     u12300:
 18587   013E7A  2EE8               	decfsz	wreg,f,c
 18588   013E7C  D7F9               	goto	u12305
 18589   013E7E  514E               	movf	(??_dir_next+2)& (0+255),w,b
 18590   013E80  5D52               	subwf	(??_dir_next+6)& (0+255),w,b
 18591   013E82  514F               	movf	(??_dir_next+3)& (0+255),w,b
 18592   013E84  5953               	subwfb	(??_dir_next+7)& (0+255),w,b
 18593   013E86  5150               	movf	(??_dir_next+4)& (0+255),w,b
 18594   013E88  5954               	subwfb	(??_dir_next+8)& (0+255),w,b
 18595   013E8A  5151               	movf	(??_dir_next+5)& (0+255),w,b
 18596   013E8C  5955               	subwfb	(??_dir_next+9)& (0+255),w,b
 18597   013E8E  A0D8               	btfss	status,0,c
 18598   013E90  D0F5               	goto	l10373
 18599   013E92  D079               	goto	u12370
 18600   013E94                     l10317:
 18601                           
 18602                           ; BSR set to: 6
 18603                           ;fatfs/ff.c: 1767:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0) {
 18604   013E94  EE20 F00A          	lfsr	2,10
 18605   013E98  515C               	movf	dir_next@fs& (0+255),w,b
 18606   013E9A  26D9               	addwf	fsr2l,f,c
 18607   013E9C  515D               	movf	(dir_next@fs+1)& (0+255),w,b
 18608   013E9E  22DA               	addwfc	fsr2h,f,c
 18609   013EA0  C4DE F64C          	movff	postinc2,??_dir_next
 18610   013EA4  C4DD F64D          	movff	postdec2,??_dir_next+1
 18611   013EA8  0EFF               	movlw	255
 18612   013EAA  254C               	addwf	??_dir_next& (0+255),w,b
 18613   013EAC  6F4E               	movwf	(??_dir_next+2)& (0+255),b
 18614   013EAE  0EFF               	movlw	255
 18615   013EB0  214D               	addwfc	(??_dir_next+1)& (0+255),w,b
 18616   013EB2  6F4F               	movwf	(??_dir_next+3)& (0+255),b
 18617   013EB4  C658  F650         	movff	dir_next@ofs,??_dir_next+4
 18618   013EB8  C659  F651         	movff	dir_next@ofs+1,??_dir_next+5
 18619   013EBC  C65A  F652         	movff	dir_next@ofs+2,??_dir_next+6
 18620   013EC0  C65B  F653         	movff	dir_next@ofs+3,??_dir_next+7
 18621   013EC4  0E0A               	movlw	10
 18622   013EC6  D005               	goto	u12320
 18623   013EC8                     u12325:
 18624   013EC8  90D8               	bcf	status,0,c
 18625   013ECA  3353               	rrcf	(??_dir_next+7)& (0+255),f,b
 18626   013ECC  3352               	rrcf	(??_dir_next+6)& (0+255),f,b
 18627   013ECE  3351               	rrcf	(??_dir_next+5)& (0+255),f,b
 18628   013ED0  3350               	rrcf	(??_dir_next+4)& (0+255),f,b
 18629   013ED2                     u12320:
 18630   013ED2  2EE8               	decfsz	wreg,f,c
 18631   013ED4  D7F9               	goto	u12325
 18632   013ED6  514E               	movf	(??_dir_next+2)& (0+255),w,b
 18633   013ED8  1550               	andwf	(??_dir_next+4)& (0+255),w,b
 18634   013EDA  6F54               	movwf	(??_dir_next+8)& (0+255),b
 18635   013EDC  514F               	movf	(??_dir_next+3)& (0+255),w,b
 18636   013EDE  1551               	andwf	(??_dir_next+5)& (0+255),w,b
 18637   013EE0  6F55               	movwf	(??_dir_next+9)& (0+255),b
 18638   013EE2  0E00               	movlw	0
 18639   013EE4  1552               	andwf	(??_dir_next+6)& (0+255),w,b
 18640   013EE6  6F56               	movwf	(??_dir_next+10)& (0+255),b
 18641   013EE8  0E00               	movlw	0
 18642   013EEA  1553               	andwf	(??_dir_next+7)& (0+255),w,b
 18643   013EEC  6F57               	movwf	(??_dir_next+11)& (0+255),b
 18644   013EEE  5154               	movf	(??_dir_next+8)& (0+255),w,b
 18645   013EF0  1155               	iorwf	(??_dir_next+9)& (0+255),w,b
 18646   013EF2  1156               	iorwf	(??_dir_next+10)& (0+255),w,b
 18647   013EF4  1157               	iorwf	(??_dir_next+11)& (0+255),w,b
 18648   013EF6  A4D8               	btfss	status,2,c
 18649   013EF8  D0C1               	goto	l10373
 18650                           
 18651                           ; BSR set to: 6
 18652                           ;fatfs/ff.c: 1768:     clst = get_fat(&dp->obj, dp->clust);
 18653   013EFA  C648  F60A         	movff	dir_next@dp,get_fat@obj
 18654   013EFE  C649  F60B         	movff	dir_next@dp+1,get_fat@obj+1
 18655   013F02  EE20 F012          	lfsr	2,18
 18656   013F06  5148               	movf	dir_next@dp& (0+255),w,b
 18657   013F08  26D9               	addwf	fsr2l,f,c
 18658   013F0A  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18659   013F0C  22DA               	addwfc	fsr2h,f,c
 18660   013F0E  C4DE F60C          	movff	postinc2,get_fat@clst
 18661   013F12  C4DE F60D          	movff	postinc2,get_fat@clst+1
 18662   013F16  C4DE F60E          	movff	postinc2,get_fat@clst+2
 18663   013F1A  C4DE F60F          	movff	postinc2,get_fat@clst+3
 18664   013F1E  EC68  F0A0         	call	_get_fat	;wreg free
 18665   013F22  C60A  F65E         	movff	?_get_fat,dir_next@clst
 18666   013F26  C60B  F65F         	movff	?_get_fat+1,dir_next@clst+1
 18667   013F2A  C60C  F660         	movff	?_get_fat+2,dir_next@clst+2
 18668   013F2E  C60D  F661         	movff	?_get_fat+3,dir_next@clst+3
 18669                           
 18670                           ;fatfs/ff.c: 1769:     if (clst <= 1) return FR_INT_ERR;
 18671   013F32  0106               	movlb	6	; () banked
 18672   013F34  5161               	movf	(dir_next@clst+3)& (0+255),w,b
 18673   013F36  1160               	iorwf	(dir_next@clst+2)& (0+255),w,b
 18674   013F38  115F               	iorwf	(dir_next@clst+1)& (0+255),w,b
 18675   013F3A  E106               	bnz	l10327
 18676   013F3C  0E02               	movlw	2
 18677   013F3E  5D5E               	subwf	dir_next@clst& (0+255),w,b
 18678   013F40  B0D8               	btfsc	status,0,c
 18679   013F42  D002               	goto	l10327
 18680   013F44                     u12340:
 18681                           
 18682                           ; BSR set to: 6
 18683   013F44  0E02               	movlw	2
 18684   013F46  0012               	return	
 18685   013F48                     l10327:
 18686                           
 18687                           ; BSR set to: 6
 18688                           ;fatfs/ff.c: 1770:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 18689   013F48  295E               	incf	dir_next@clst& (0+255),w,b
 18690   013F4A  E109               	bnz	l10333
 18691   013F4C  295F               	incf	(dir_next@clst+1)& (0+255),w,b
 18692   013F4E  E107               	bnz	l10333
 18693   013F50  2960               	incf	(dir_next@clst+2)& (0+255),w,b
 18694   013F52  E105               	bnz	l10333
 18695   013F54  2961               	incf	(dir_next@clst+3)& (0+255),w,b
 18696   013F56  A4D8               	btfss	status,2,c
 18697   013F58  D002               	goto	l10333
 18698   013F5A                     u12350:
 18699   013F5A  0E01               	movlw	1
 18700   013F5C  0012               	return	
 18701   013F5E                     l10333:
 18702                           
 18703                           ; BSR set to: 6
 18704                           ;fatfs/ff.c: 1771:     if (clst >= fs->n_fatent) {
 18705   013F5E  EE20 F014          	lfsr	2,20
 18706   013F62  515C               	movf	dir_next@fs& (0+255),w,b
 18707   013F64  26D9               	addwf	fsr2l,f,c
 18708   013F66  515D               	movf	(dir_next@fs+1)& (0+255),w,b
 18709   013F68  22DA               	addwfc	fsr2h,f,c
 18710   013F6A  50DE               	movf	postinc2,w,c
 18711   013F6C  5D5E               	subwf	dir_next@clst& (0+255),w,b
 18712   013F6E  50DE               	movf	postinc2,w,c
 18713   013F70  595F               	subwfb	(dir_next@clst+1)& (0+255),w,b
 18714   013F72  50DE               	movf	postinc2,w,c
 18715   013F74  5960               	subwfb	(dir_next@clst+2)& (0+255),w,b
 18716   013F76  50DE               	movf	postinc2,w,c
 18717   013F78  5961               	subwfb	(dir_next@clst+3)& (0+255),w,b
 18718   013F7A  A0D8               	btfss	status,0,c
 18719   013F7C  D053               	goto	l378
 18720                           
 18721                           ; BSR set to: 6
 18722                           ;fatfs/ff.c: 1773:      if (!stretch) {
 18723   013F7E  514A               	movf	dir_next@stretch& (0+255),w,b
 18724   013F80  114B               	iorwf	(dir_next@stretch+1)& (0+255),w,b
 18725   013F82  A4D8               	btfss	status,2,c
 18726   013F84  D00B               	goto	l10343
 18727   013F86                     u12370:
 18728                           
 18729                           ; BSR set to: 6
 18730                           ;fatfs/ff.c: 1774:       dp->sect = 0; return FR_NO_FILE;
 18731   013F86  EE20 F016          	lfsr	2,22
 18732   013F8A  5148               	movf	dir_next@dp& (0+255),w,b
 18733   013F8C  26D9               	addwf	fsr2l,f,c
 18734   013F8E  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18735   013F90  22DA               	addwfc	fsr2h,f,c
 18736   013F92  6ADE               	clrf	postinc2,c
 18737   013F94  6ADE               	clrf	postinc2,c
 18738   013F96  6ADE               	clrf	postinc2,c
 18739   013F98  6ADD               	clrf	postdec2,c
 18740   013F9A  D725               	goto	u12270
 18741   013F9C                     l10343:
 18742                           
 18743                           ; BSR set to: 6
 18744                           ;fatfs/ff.c: 1776:      clst = create_chain(&dp->obj, dp->clust);
 18745   013F9C  C648  F62B         	movff	dir_next@dp,create_chain@obj
 18746   013FA0  C649  F62C         	movff	dir_next@dp+1,create_chain@obj+1
 18747   013FA4  EE20 F012          	lfsr	2,18
 18748   013FA8  5148               	movf	dir_next@dp& (0+255),w,b
 18749   013FAA  26D9               	addwf	fsr2l,f,c
 18750   013FAC  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18751   013FAE  22DA               	addwfc	fsr2h,f,c
 18752   013FB0  C4DE F62D          	movff	postinc2,create_chain@clst
 18753   013FB4  C4DE F62E          	movff	postinc2,create_chain@clst+1
 18754   013FB8  C4DE F62F          	movff	postinc2,create_chain@clst+2
 18755   013FBC  C4DE F630          	movff	postinc2,create_chain@clst+3
 18756   013FC0  EC96  F098         	call	_create_chain	;wreg free
 18757   013FC4  C62B  F65E         	movff	?_create_chain,dir_next@clst
 18758   013FC8  C62C  F65F         	movff	?_create_chain+1,dir_next@clst+1
 18759   013FCC  C62D  F660         	movff	?_create_chain+2,dir_next@clst+2
 18760   013FD0  C62E  F661         	movff	?_create_chain+3,dir_next@clst+3
 18761                           
 18762                           ; BSR set to: 6
 18763                           ;fatfs/ff.c: 1777:      if (clst == 0) return FR_DENIED;
 18764   013FD4  515E               	movf	dir_next@clst& (0+255),w,b
 18765   013FD6  115F               	iorwf	(dir_next@clst+1)& (0+255),w,b
 18766   013FD8  1160               	iorwf	(dir_next@clst+2)& (0+255),w,b
 18767   013FDA  1161               	iorwf	(dir_next@clst+3)& (0+255),w,b
 18768   013FDC  A4D8               	btfss	status,2,c
 18769   013FDE  D002               	goto	l10351
 18770                           
 18771                           ; BSR set to: 6
 18772   013FE0  0E07               	movlw	7
 18773   013FE2  0012               	return	
 18774   013FE4                     l10351:
 18775                           
 18776                           ; BSR set to: 6
 18777                           ;fatfs/ff.c: 1778:      if (clst == 1) return FR_INT_ERR;
 18778   013FE4  055E               	decf	dir_next@clst& (0+255),w,b
 18779   013FE6  115F               	iorwf	(dir_next@clst+1)& (0+255),w,b
 18780   013FE8  1160               	iorwf	(dir_next@clst+2)& (0+255),w,b
 18781   013FEA  1161               	iorwf	(dir_next@clst+3)& (0+255),w,b
 18782   013FEC  B4D8               	btfsc	status,2,c
 18783   013FEE  D7AA               	goto	u12340
 18784                           
 18785                           ; BSR set to: 6
 18786                           ;fatfs/ff.c: 1779:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 18787   013FF0  295E               	incf	dir_next@clst& (0+255),w,b
 18788   013FF2  E107               	bnz	l10363
 18789   013FF4  295F               	incf	(dir_next@clst+1)& (0+255),w,b
 18790   013FF6  E105               	bnz	l10363
 18791   013FF8  2960               	incf	(dir_next@clst+2)& (0+255),w,b
 18792   013FFA  E103               	bnz	l10363
 18793   013FFC  2961               	incf	(dir_next@clst+3)& (0+255),w,b
 18794   013FFE  B4D8               	btfsc	status,2,c
 18795   014000  D7AC               	goto	u12350
 18796   014002                     l10363:
 18797                           
 18798                           ; BSR set to: 6
 18799                           ;fatfs/ff.c: 1780:      if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;
 18800   014002  C65C  F600         	movff	dir_next@fs,dir_clear@fs
 18801   014006  C65D  F601         	movff	dir_next@fs+1,dir_clear@fs+1
 18802   01400A  C65E  F602         	movff	dir_next@clst,dir_clear@clst
 18803   01400E  C65F  F603         	movff	dir_next@clst+1,dir_clear@clst+1
 18804   014012  C660  F604         	movff	dir_next@clst+2,dir_clear@clst+2
 18805   014016  C661  F605         	movff	dir_next@clst+3,dir_clear@clst+3
 18806   01401A  ECDD  F0BB         	call	_dir_clear	;wreg free
 18807   01401E  0900               	iorlw	0
 18808   014020  A4D8               	btfss	status,2,c
 18809   014022  D79B               	goto	u12350
 18810   014024                     l378:
 18811                           
 18812                           ;fatfs/ff.c: 1787:     dp->clust = clst;
 18813   014024  0106               	movlb	6	; () banked
 18814   014026  EE20 F012          	lfsr	2,18
 18815   01402A  5148               	movf	dir_next@dp& (0+255),w,b
 18816   01402C  26D9               	addwf	fsr2l,f,c
 18817   01402E  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18818   014030  22DA               	addwfc	fsr2h,f,c
 18819   014032  C65E  F4DE         	movff	dir_next@clst,postinc2
 18820   014036  C65F  F4DE         	movff	dir_next@clst+1,postinc2
 18821   01403A  C660  F4DE         	movff	dir_next@clst+2,postinc2
 18822   01403E  C661  F4DE         	movff	dir_next@clst+3,postinc2
 18823                           
 18824                           ; BSR set to: 6
 18825                           ;fatfs/ff.c: 1788:     dp->sect = clst2sect(fs, clst);
 18826   014042  C65C  F50D         	movff	dir_next@fs,clst2sect@fs
 18827   014046  C65D  F50E         	movff	dir_next@fs+1,clst2sect@fs+1
 18828   01404A  C65E  F50F         	movff	dir_next@clst,clst2sect@clst
 18829   01404E  C65F  F510         	movff	dir_next@clst+1,clst2sect@clst+1
 18830   014052  C660  F511         	movff	dir_next@clst+2,clst2sect@clst+2
 18831   014056  C661  F512         	movff	dir_next@clst+3,clst2sect@clst+3
 18832   01405A  ECC3  F0C3         	call	_clst2sect	;wreg free
 18833   01405E  0106               	movlb	6	; () banked
 18834   014060  EE20 F016          	lfsr	2,22
 18835   014064  5148               	movf	dir_next@dp& (0+255),w,b
 18836   014066  26D9               	addwf	fsr2l,f,c
 18837   014068  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18838   01406A  22DA               	addwfc	fsr2h,f,c
 18839   01406C  C50D  F4DE         	movff	?_clst2sect,postinc2
 18840   014070  C50E  F4DE         	movff	?_clst2sect+1,postinc2
 18841   014074  C50F  F4DE         	movff	?_clst2sect+2,postinc2
 18842   014078  C510  F4DE         	movff	?_clst2sect+3,postinc2
 18843   01407C                     l10373:
 18844                           
 18845                           ; BSR set to: 6
 18846                           ;fatfs/ff.c: 1792:  dp->dptr = ofs;
 18847   01407C  EE20 F00E          	lfsr	2,14
 18848   014080  5148               	movf	dir_next@dp& (0+255),w,b
 18849   014082  26D9               	addwf	fsr2l,f,c
 18850   014084  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18851   014086  22DA               	addwfc	fsr2h,f,c
 18852   014088  C658  F4DE         	movff	dir_next@ofs,postinc2
 18853   01408C  C659  F4DE         	movff	dir_next@ofs+1,postinc2
 18854   014090  C65A  F4DE         	movff	dir_next@ofs+2,postinc2
 18855   014094  C65B  F4DE         	movff	dir_next@ofs+3,postinc2
 18856                           
 18857                           ; BSR set to: 6
 18858                           ;fatfs/ff.c: 1793:  dp->dir = fs->win + ofs % ((UINT)512);
 18859   014098  0EFF               	movlw	255
 18860   01409A  1558               	andwf	dir_next@ofs& (0+255),w,b
 18861   01409C  6F4C               	movwf	??_dir_next& (0+255),b
 18862   01409E  0E01               	movlw	1
 18863   0140A0  1559               	andwf	(dir_next@ofs+1)& (0+255),w,b
 18864   0140A2  6F4D               	movwf	(??_dir_next+1)& (0+255),b
 18865   0140A4  514C               	movf	??_dir_next& (0+255),w,b
 18866   0140A6  255C               	addwf	dir_next@fs& (0+255),w,b
 18867   0140A8  6F4E               	movwf	(??_dir_next+2)& (0+255),b
 18868   0140AA  514D               	movf	(??_dir_next+1)& (0+255),w,b
 18869   0140AC  215D               	addwfc	(dir_next@fs+1)& (0+255),w,b
 18870   0140AE  6F4F               	movwf	(??_dir_next+3)& (0+255),b
 18871   0140B0  0E30               	movlw	48
 18872   0140B2  274E               	addwf	(??_dir_next+2)& (0+255),f,b
 18873   0140B4  0E00               	movlw	0
 18874   0140B6  234F               	addwfc	(??_dir_next+3)& (0+255),f,b
 18875   0140B8  EE20 F01A          	lfsr	2,26
 18876   0140BC  5148               	movf	dir_next@dp& (0+255),w,b
 18877   0140BE  26D9               	addwf	fsr2l,f,c
 18878   0140C0  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18879   0140C2  22DA               	addwfc	fsr2h,f,c
 18880   0140C4  C64E  F4DE         	movff	??_dir_next+2,postinc2
 18881   0140C8  C64F  F4DD         	movff	??_dir_next+3,postdec2
 18882                           
 18883                           ; BSR set to: 6
 18884                           ;fatfs/ff.c: 1795:  return FR_OK;
 18885   0140CC  0E00               	movlw	0
 18886   0140CE  0012               	return		;funcret
 18887   0140D0                     __end_of_dir_next:
 18888                           	callstack 0
 18889                           
 18890 ;; *************** function _dir_clear *****************
 18891 ;; Defined at:
 18892 ;;		line 1658 in file "fatfs/ff.c"
 18893 ;; Parameters:    Size  Location     Type
 18894 ;;  fs              2    0[BANK6 ] PTR struct .
 18895 ;;		 -> fs(560), NULL(0), 
 18896 ;;  clst            4    2[BANK6 ] unsigned long 
 18897 ;; Auto vars:     Size  Location     Type
 18898 ;;  sect            4   10[BANK6 ] unsigned long 
 18899 ;;  n               2   16[BANK6 ] unsigned int 
 18900 ;;  szb             2   14[BANK6 ] unsigned int 
 18901 ;;  ibuf            2    8[BANK6 ] PTR unsigned char 
 18902 ;;		 -> fs$win(512), fs(560), NULL(0), 
 18903 ;; Return value:  Size  Location     Type
 18904 ;;                  1    wreg      enum E275
 18905 ;; Registers used:
 18906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18907 ;; Tracked objects:
 18908 ;;		On entry : 3F/6
 18909 ;;		On exit  : 3C/4
 18910 ;;		Unchanged: 0/0
 18911 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18912 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18913 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18914 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18915 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18916 ;;Total ram usage:       18 bytes
 18917 ;; Hardware stack levels used: 1
 18918 ;; Hardware stack levels required when called: 12
 18919 ;; This function calls:
 18920 ;;		_clst2sect
 18921 ;;		_disk_write
 18922 ;;		_memset
 18923 ;;		_sync_window
 18924 ;; This function is called by:
 18925 ;;		_dir_next
 18926 ;; This function uses a non-reentrant model
 18927 ;;
 18928                           
 18929                           	psect	text24
 18930   0177BA                     __ptext24:
 18931                           	callstack 0
 18932   0177BA                     _dir_clear:
 18933                           	callstack 110
 18934                           
 18935                           ; BSR set to: 6
 18936                           ;fatfs/ff.c: 1659:  FATFS *fs,;fatfs/ff.c: 1660:  DWORD clst;fatfs/ff.c: 1662: {;fatfs/f
      +                          f.c: 1663:  LBA_t sect;;fatfs/ff.c: 1664:  UINT n, szb;;fatfs/ff.c: 1665:  BYTE *ibuf;;f
      +                          atfs/ff.c: 1668:  if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 18937                           
 18938                           ;incstack = 0
 18939   0177BA  C600  F5ED         	movff	dir_clear@fs,sync_window@fs
 18940   0177BE  C601  F5EE         	movff	dir_clear@fs+1,sync_window@fs+1
 18941   0177C2  ECEF  F0B7         	call	_sync_window	;wreg free
 18942   0177C6  0900               	iorlw	0
 18943   0177C8  B4D8               	btfsc	status,2,c
 18944   0177CA  D002               	goto	l10103
 18945                           
 18946                           ; BSR set to: 5
 18947   0177CC  0E01               	movlw	1
 18948   0177CE  0012               	return	
 18949   0177D0                     l10103:
 18950                           
 18951                           ; BSR set to: 5
 18952                           ;fatfs/ff.c: 1669:  sect = clst2sect(fs, clst);
 18953   0177D0  C600  F50D         	movff	dir_clear@fs,clst2sect@fs
 18954   0177D4  C601  F50E         	movff	dir_clear@fs+1,clst2sect@fs+1
 18955   0177D8  C602  F50F         	movff	dir_clear@clst,clst2sect@clst
 18956   0177DC  C603  F510         	movff	dir_clear@clst+1,clst2sect@clst+1
 18957   0177E0  C604  F511         	movff	dir_clear@clst+2,clst2sect@clst+2
 18958   0177E4  C605  F512         	movff	dir_clear@clst+3,clst2sect@clst+3
 18959   0177E8  ECC3  F0C3         	call	_clst2sect	;wreg free
 18960   0177EC  C50D  F60A         	movff	?_clst2sect,dir_clear@sect
 18961   0177F0  C50E  F60B         	movff	?_clst2sect+1,dir_clear@sect+1
 18962   0177F4  C50F  F60C         	movff	?_clst2sect+2,dir_clear@sect+2
 18963   0177F8  C510  F60D         	movff	?_clst2sect+3,dir_clear@sect+3
 18964                           
 18965                           ;fatfs/ff.c: 1670:  fs->winsect = sect;
 18966   0177FC  0106               	movlb	6	; () banked
 18967   0177FE  EE20 F02C          	lfsr	2,44
 18968   017802  5100               	movf	dir_clear@fs& (0+255),w,b
 18969   017804  26D9               	addwf	fsr2l,f,c
 18970   017806  5101               	movf	(dir_clear@fs+1)& (0+255),w,b
 18971   017808  22DA               	addwfc	fsr2h,f,c
 18972   01780A  C60A  F4DE         	movff	dir_clear@sect,postinc2
 18973   01780E  C60B  F4DE         	movff	dir_clear@sect+1,postinc2
 18974   017812  C60C  F4DE         	movff	dir_clear@sect+2,postinc2
 18975   017816  C60D  F4DE         	movff	dir_clear@sect+3,postinc2
 18976                           
 18977                           ; BSR set to: 6
 18978                           ;fatfs/ff.c: 1671:  memset(fs->win, 0, sizeof fs->win);
 18979   01781A  0E30               	movlw	48
 18980   01781C  2500               	addwf	dir_clear@fs& (0+255),w,b
 18981   01781E  6E01               	movwf	memset@dest^(0+1280),c
 18982   017820  0E00               	movlw	0
 18983   017822  2101               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 18984   017824  6E02               	movwf	(memset@dest+1)^(0+1280),c
 18985   017826  0E00               	movlw	0
 18986   017828  6E04               	movwf	(memset@c+1)^(0+1280),c
 18987   01782A  0E00               	movlw	0
 18988   01782C  6E03               	movwf	memset@c^(0+1280),c
 18989   01782E  0E02               	movlw	2
 18990   017830  6E06               	movwf	(memset@n+1)^(0+1280),c
 18991   017832  0E00               	movlw	0
 18992   017834  6E05               	movwf	memset@n^(0+1280),c
 18993   017836  ECEB  F0CE         	call	_memset	;wreg free
 18994                           
 18995                           ; BSR set to: 6
 18996                           ;fatfs/ff.c: 1682:  {;fatfs/ff.c: 1683:   ibuf = fs->win; szb = 1;
 18997   01783A  0E30               	movlw	48
 18998   01783C  2500               	addwf	dir_clear@fs& (0+255),w,b
 18999   01783E  6F08               	movwf	dir_clear@ibuf& (0+255),b
 19000   017840  0E00               	movlw	0
 19001   017842  2101               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 19002   017844  6F09               	movwf	(dir_clear@ibuf+1)& (0+255),b
 19003                           
 19004                           ; BSR set to: 6
 19005   017846  0E00               	movlw	0
 19006   017848  6F0F               	movwf	(dir_clear@szb+1)& (0+255),b
 19007   01784A  0E01               	movlw	1
 19008   01784C  6F0E               	movwf	dir_clear@szb& (0+255),b
 19009                           
 19010                           ; BSR set to: 6
 19011                           ;fatfs/ff.c: 1684:   for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, s
      +                          zb) == RES_OK; n += szb) ;
 19012   01784E  0E00               	movlw	0
 19013   017850  6F11               	movwf	(dir_clear@n+1)& (0+255),b
 19014   017852  0E00               	movlw	0
 19015   017854  6F10               	movwf	dir_clear@n& (0+255),b
 19016   017856  D005               	goto	l10117
 19017   017858                     l10115:
 19018                           
 19019                           ; BSR set to: 5
 19020   017858  0106               	movlb	6	; () banked
 19021   01785A  510E               	movf	dir_clear@szb& (0+255),w,b
 19022   01785C  2710               	addwf	dir_clear@n& (0+255),f,b
 19023   01785E  510F               	movf	(dir_clear@szb+1)& (0+255),w,b
 19024   017860  2311               	addwfc	(dir_clear@n+1)& (0+255),f,b
 19025   017862                     l10117:
 19026                           
 19027                           ; BSR set to: 6
 19028   017862  EE20 F00A          	lfsr	2,10
 19029   017866  5100               	movf	dir_clear@fs& (0+255),w,b
 19030   017868  26D9               	addwf	fsr2l,f,c
 19031   01786A  5101               	movf	(dir_clear@fs+1)& (0+255),w,b
 19032   01786C  22DA               	addwfc	fsr2h,f,c
 19033   01786E  50DE               	movf	postinc2,w,c
 19034   017870  5D10               	subwf	dir_clear@n& (0+255),w,b
 19035   017872  50DE               	movf	postinc2,w,c
 19036   017874  5911               	subwfb	(dir_clear@n+1)& (0+255),w,b
 19037   017876  B0D8               	btfsc	status,0,c
 19038   017878  D028               	goto	u11890
 19039                           
 19040                           ; BSR set to: 6
 19041   01787A  C608  F5E2         	movff	dir_clear@ibuf,disk_write@buff
 19042   01787E  C609  F5E3         	movff	dir_clear@ibuf+1,disk_write@buff+1
 19043   017882  5110               	movf	dir_clear@n& (0+255),w,b
 19044   017884  250A               	addwf	dir_clear@sect& (0+255),w,b
 19045   017886  0105               	movlb	5	; () banked
 19046   017888  6FE4               	movwf	disk_write@sector& (0+255),b
 19047   01788A  0106               	movlb	6	; () banked
 19048   01788C  5111               	movf	(dir_clear@n+1)& (0+255),w,b
 19049   01788E  210B               	addwfc	(dir_clear@sect+1)& (0+255),w,b
 19050   017890  0105               	movlb	5	; () banked
 19051   017892  6FE5               	movwf	(disk_write@sector+1)& (0+255),b
 19052   017894  0E00               	movlw	0
 19053   017896  0106               	movlb	6	; () banked
 19054   017898  210C               	addwfc	(dir_clear@sect+2)& (0+255),w,b
 19055   01789A  0105               	movlb	5	; () banked
 19056   01789C  6FE6               	movwf	(disk_write@sector+2)& (0+255),b
 19057   01789E  0E00               	movlw	0
 19058   0178A0  0106               	movlb	6	; () banked
 19059   0178A2  210D               	addwfc	(dir_clear@sect+3)& (0+255),w,b
 19060   0178A4  0105               	movlb	5	; () banked
 19061   0178A6  6FE7               	movwf	(disk_write@sector+3)& (0+255),b
 19062   0178A8  C60E  F5E8         	movff	dir_clear@szb,disk_write@count
 19063   0178AC  C60F  F5E9         	movff	dir_clear@szb+1,disk_write@count+1
 19064   0178B0  0106               	movlb	6	; () banked
 19065   0178B2  EE20 F001          	lfsr	2,1
 19066   0178B6  5100               	movf	dir_clear@fs& (0+255),w,b
 19067   0178B8  26D9               	addwf	fsr2l,f,c
 19068   0178BA  5101               	movf	(dir_clear@fs+1)& (0+255),w,b
 19069   0178BC  22DA               	addwfc	fsr2h,f,c
 19070   0178BE  50DF               	movf	indf2,w,c
 19071   0178C0  EC11  F0C9         	call	_disk_write
 19072   0178C4  0900               	iorlw	0
 19073   0178C6  B4D8               	btfsc	status,2,c
 19074   0178C8  D7C7               	goto	l10115
 19075   0178CA                     u11890:
 19076                           
 19077                           ;fatfs/ff.c: 1685:  };fatfs/ff.c: 1686:  return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
 19078   0178CA  0106               	movlb	6	; () banked
 19079   0178CC  EE20 F00A          	lfsr	2,10
 19080   0178D0  5100               	movf	dir_clear@fs& (0+255),w,b
 19081   0178D2  26D9               	addwf	fsr2l,f,c
 19082   0178D4  5101               	movf	(dir_clear@fs+1)& (0+255),w,b
 19083   0178D6  22DA               	addwfc	fsr2h,f,c
 19084   0178D8  5110               	movf	dir_clear@n& (0+255),w,b
 19085   0178DA  18DE               	xorwf	postinc2,w,c
 19086   0178DC  E104               	bnz	u11901
 19087   0178DE  5111               	movf	(dir_clear@n+1)& (0+255),w,b
 19088   0178E0  18DE               	xorwf	postinc2,w,c
 19089   0178E2  B4D8               	btfsc	status,2,c
 19090   0178E4  D002               	goto	u11900
 19091   0178E6                     u11901:
 19092   0178E6  0E01               	movlw	1
 19093   0178E8  0012               	return	
 19094   0178EA                     u11900:
 19095   0178EA  0E00               	movlw	0
 19096   0178EC  0012               	return		;funcret
 19097   0178EE                     __end_of_dir_clear:
 19098                           	callstack 0
 19099                           
 19100 ;; *************** function _f_closedir *****************
 19101 ;; Defined at:
 19102 ;;		line 4663 in file "fatfs/ff.c"
 19103 ;; Parameters:    Size  Location     Type
 19104 ;;  dp              2   81[BANK5 ] PTR struct .
 19105 ;;		 -> fsdir(40), 
 19106 ;; Auto vars:     Size  Location     Type
 19107 ;;  fs              2   83[BANK5 ] PTR struct .
 19108 ;;		 -> fs(560), NULL(0), 
 19109 ;;  res             1   85[BANK5 ] enum E275
 19110 ;; Return value:  Size  Location     Type
 19111 ;;                  1    wreg      enum E275
 19112 ;; Registers used:
 19113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19114 ;; Tracked objects:
 19115 ;;		On entry : 3F/5
 19116 ;;		On exit  : 3F/5
 19117 ;;		Unchanged: 0/0
 19118 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19119 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19120 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19122 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19123 ;;Total ram usage:        5 bytes
 19124 ;; Hardware stack levels used: 1
 19125 ;; Hardware stack levels required when called: 10
 19126 ;; This function calls:
 19127 ;;		_validate
 19128 ;; This function is called by:
 19129 ;;		_menu_select
 19130 ;; This function uses a non-reentrant model
 19131 ;;
 19132                           
 19133                           	psect	text25
 19134   019E02                     __ptext25:
 19135                           	callstack 0
 19136   019E02                     _f_closedir:
 19137                           	callstack 115
 19138                           
 19139                           ; BSR set to: 5
 19140                           ;fatfs/ff.c: 4664:  DIR *dp;fatfs/ff.c: 4666: {;fatfs/ff.c: 4667:  FRESULT res;;fatfs/ff
      +                          .c: 4668:  FATFS *fs;;fatfs/ff.c: 4671:  res = validate(&dp->obj, &fs);
 19141                           
 19142                           ;incstack = 0
 19143   019E02  C5B1  F5A6         	movff	f_closedir@dp,validate@obj
 19144   019E06  C5B2  F5A7         	movff	f_closedir@dp+1,validate@obj+1
 19145   019E0A  0EB3               	movlw	low f_closedir@fs
 19146   019E0C  6FA8               	movwf	validate@rfs& (0+255),b
 19147   019E0E  0E05               	movlw	high f_closedir@fs
 19148   019E10  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 19149   019E12  EC62  F0C3         	call	_validate	;wreg free
 19150   019E16  6FB5               	movwf	f_closedir@res& (0+255),b
 19151                           
 19152                           ; BSR set to: 5
 19153                           ;fatfs/ff.c: 4672:  if (res == FR_OK) {
 19154   019E18  51B5               	movf	f_closedir@res& (0+255),w,b
 19155   019E1A  A4D8               	btfss	status,2,c
 19156   019E1C  0012               	return	
 19157                           
 19158                           ; BSR set to: 5
 19159                           ;fatfs/ff.c: 4677:   dp->obj.fs = 0;
 19160   019E1E  C5B1  F4D9         	movff	f_closedir@dp,fsr2l
 19161   019E22  C5B2  F4DA         	movff	f_closedir@dp+1,fsr2h
 19162   019E26  6ADE               	clrf	postinc2,c
 19163   019E28  6ADD               	clrf	postdec2,c
 19164                           
 19165                           ; BSR set to: 5
 19166   019E2A  0012               	return		;funcret
 19167   019E2C                     __end_of_f_closedir:
 19168                           	callstack 0
 19169                           
 19170 ;; *************** function _mem_init *****************
 19171 ;; Defined at:
 19172 ;;		line 185 in file "src/io.c"
 19173 ;; Parameters:    Size  Location     Type
 19174 ;;		None
 19175 ;; Auto vars:     Size  Location     Type
 19176 ;;  addr            4   76[BANK5 ] unsigned long 
 19177 ;;  i               2   74[BANK5 ] unsigned int 
 19178 ;; Return value:  Size  Location     Type
 19179 ;;                  1    wreg      void 
 19180 ;; Registers used:
 19181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19182 ;; Tracked objects:
 19183 ;;		On entry : 3F/5
 19184 ;;		On exit  : 3F/5
 19185 ;;		Unchanged: 0/0
 19186 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19188 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19189 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19190 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19191 ;;Total ram usage:       10 bytes
 19192 ;; Hardware stack levels used: 1
 19193 ;; Hardware stack levels required when called: 8
 19194 ;; This function calls:
 19195 ;;		_emuz80_57q_read_from_sram
 19196 ;;		_emuz80_57q_write_to_sram
 19197 ;;		_memcmp
 19198 ;;		_printf
 19199 ;; This function is called by:
 19200 ;;		_main
 19201 ;; This function uses a non-reentrant model
 19202 ;;
 19203                           
 19204                           	psect	text26
 19205   016CC8                     __ptext26:
 19206                           	callstack 0
 19207   016CC8                     _mem_init:
 19208                           	callstack 118
 19209                           
 19210                           ; BSR set to: 5
 19211                           ;src/io.c: 187:     unsigned int i;;src/io.c: 188:     uint32_t addr;;src/io.c: 191:    
      +                           for (i = 0; i < 256; i += 2) {
 19212                           
 19213                           ; BSR set to: 5
 19214                           ;incstack = 0
 19215   016CC8  0E00               	movlw	0
 19216   016CCA  6FAB               	movwf	(mem_init@i+1)& (0+255),b
 19217   016CCC  0E00               	movlw	0
 19218   016CCE  6FAA               	movwf	mem_init@i& (0+255),b
 19219   016CD0                     l12529:
 19220                           
 19221                           ; BSR set to: 5
 19222                           ;src/io.c: 192:         tmp_buf[0][i + 0] = 0xa5;
 19223   016CD0  0EBC               	movlw	low _tmp_buf
 19224   016CD2  25AA               	addwf	mem_init@i& (0+255),w,b
 19225   016CD4  6ED9               	movwf	fsr2l,c
 19226   016CD6  0E17               	movlw	high _tmp_buf
 19227   016CD8  21AB               	addwfc	(mem_init@i+1)& (0+255),w,b
 19228   016CDA  6EDA               	movwf	fsr2h,c
 19229   016CDC  0EA5               	movlw	165
 19230   016CDE  6EDF               	movwf	indf2,c
 19231                           
 19232                           ;src/io.c: 193:         tmp_buf[0][i + 1] = 0x5a;
 19233   016CE0  0EBD               	movlw	low (_tmp_buf+1)
 19234   016CE2  25AA               	addwf	mem_init@i& (0+255),w,b
 19235   016CE4  6ED9               	movwf	fsr2l,c
 19236   016CE6  0E17               	movlw	high (_tmp_buf+1)
 19237   016CE8  21AB               	addwfc	(mem_init@i+1)& (0+255),w,b
 19238   016CEA  6EDA               	movwf	fsr2h,c
 19239   016CEC  0E5A               	movlw	90
 19240   016CEE  6EDF               	movwf	indf2,c
 19241                           
 19242                           ; BSR set to: 5
 19243                           ;src/io.c: 194:     }
 19244   016CF0  0E02               	movlw	2
 19245   016CF2  27AA               	addwf	mem_init@i& (0+255),f,b
 19246   016CF4  0E00               	movlw	0
 19247   016CF6  23AB               	addwfc	(mem_init@i+1)& (0+255),f,b
 19248                           
 19249                           ; BSR set to: 5
 19250   016CF8  05AB               	decf	(mem_init@i+1)& (0+255),w,b
 19251   016CFA  A0D8               	btfss	status,0,c
 19252   016CFC  D7E9               	goto	l12529
 19253                           
 19254                           ; BSR set to: 5
 19255                           ;src/io.c: 195:     for (addr = 0; addr < 0x00100000; addr += 256 * 16) {
 19256   016CFE  0E00               	movlw	0
 19257   016D00  6FAC               	movwf	mem_init@addr& (0+255),b
 19258   016D02  0E00               	movlw	0
 19259   016D04  6FAD               	movwf	(mem_init@addr+1)& (0+255),b
 19260   016D06  0E00               	movlw	0
 19261   016D08  6FAE               	movwf	(mem_init@addr+2)& (0+255),b
 19262   016D0A  0E00               	movlw	0
 19263   016D0C  6FAF               	movwf	(mem_init@addr+3)& (0+255),b
 19264   016D0E                     l12541:
 19265                           
 19266                           ; BSR set to: 5
 19267                           ;src/io.c: 196:         printf("Memory 000000 - %06lXH\r", addr);
 19268   016D0E  0E5B               	movlw	low STR_80
 19269   016D10  6F9A               	movwf	printf@fmt& (0+255),b
 19270   016D12  0EFE               	movlw	high STR_80
 19271   016D14  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 19272   016D16  C5AC  F59C         	movff	mem_init@addr,?_printf+2
 19273   016D1A  C5AD  F59D         	movff	mem_init@addr+1,?_printf+3
 19274   016D1E  C5AE  F59E         	movff	mem_init@addr+2,?_printf+4
 19275   016D22  C5AF  F59F         	movff	mem_init@addr+3,?_printf+5
 19276   016D26  EC53  F0CF         	call	_printf	;wreg free
 19277                           
 19278                           ; BSR set to: 5
 19279                           ;src/io.c: 197:         tmp_buf[0][0] = (addr >> 0) & 0xff;
 19280   016D2A  EE25  F3BC         	lfsr	2,_tmp_buf
 19281   016D2E  C5AC  F4DF         	movff	mem_init@addr,indf2
 19282                           
 19283                           ; BSR set to: 5
 19284                           ;src/io.c: 198:         tmp_buf[0][1] = (addr >> 8) & 0xff;
 19285   016D32  EE25  F3BD         	lfsr	2,_tmp_buf+1
 19286   016D36  C5AD  F4DF         	movff	mem_init@addr+1,indf2
 19287                           
 19288                           ; BSR set to: 5
 19289                           ;src/io.c: 199:         tmp_buf[0][2] = (addr >> 16) & 0xff;
 19290   016D3A  EE25  F3BE         	lfsr	2,_tmp_buf+2
 19291   016D3E  C5AE  F4DF         	movff	mem_init@addr+2,indf2
 19292                           
 19293                           ; BSR set to: 5
 19294                           ;src/io.c: 200:         emuz80_57q_write_to_sram((uint16_t)addr, tmp_buf[0], 256);
 19295   016D42  C5AC  F501         	movff	mem_init@addr,emuz80_57q_write_to_sram@addr
 19296   016D46  C5AD  F502         	movff	mem_init@addr+1,emuz80_57q_write_to_sram@addr+1
 19297   016D4A  0EBC               	movlw	low _tmp_buf
 19298   016D4C  6E03               	movwf	emuz80_57q_write_to_sram@buf^(0+1280),c
 19299   016D4E  0E17               	movlw	high _tmp_buf
 19300   016D50  6E04               	movwf	(emuz80_57q_write_to_sram@buf+1)^(0+1280),c
 19301   016D52  0E01               	movlw	1
 19302   016D54  6E06               	movwf	(emuz80_57q_write_to_sram@len+1)^(0+1280),c
 19303   016D56  0E00               	movlw	0
 19304   016D58  6E05               	movwf	emuz80_57q_write_to_sram@len^(0+1280),c
 19305   016D5A  EC86  F0CA         	call	_emuz80_57q_write_to_sram	;wreg free
 19306                           
 19307                           ;src/io.c: 201:         emuz80_57q_read_from_sram((uint16_t)addr, tmp_buf[1], 256);
 19308   016D5E  C5AC  F501         	movff	mem_init@addr,emuz80_57q_read_from_sram@addr
 19309   016D62  C5AD  F502         	movff	mem_init@addr+1,emuz80_57q_read_from_sram@addr+1
 19310   016D66  0EBC               	movlw	low (_tmp_buf+256)
 19311   016D68  6E03               	movwf	emuz80_57q_read_from_sram@buf^(0+1280),c
 19312   016D6A  0E18               	movlw	high (_tmp_buf+256)
 19313   016D6C  6E04               	movwf	(emuz80_57q_read_from_sram@buf+1)^(0+1280),c
 19314   016D6E  0E01               	movlw	1
 19315   016D70  6E06               	movwf	(emuz80_57q_read_from_sram@len+1)^(0+1280),c
 19316   016D72  0E00               	movlw	0
 19317   016D74  6E05               	movwf	emuz80_57q_read_from_sram@len^(0+1280),c
 19318   016D76  EC5E  F0CC         	call	_emuz80_57q_read_from_sram	;wreg free
 19319                           
 19320                           ;src/io.c: 202:         if (memcmp(tmp_buf[0], tmp_buf[1], 256) != 0) {
 19321   016D7A  0EBC               	movlw	low _tmp_buf
 19322   016D7C  6E01               	movwf	memcmp@vl^(0+1280),c
 19323   016D7E  0E17               	movlw	high _tmp_buf
 19324   016D80  6E02               	movwf	(memcmp@vl+1)^(0+1280),c
 19325   016D82  0EBC               	movlw	low (_tmp_buf+256)
 19326   016D84  6E03               	movwf	memcmp@vr^(0+1280),c
 19327   016D86  0E18               	movlw	high (_tmp_buf+256)
 19328   016D88  6E04               	movwf	(memcmp@vr+1)^(0+1280),c
 19329   016D8A  0E01               	movlw	1
 19330   016D8C  6E06               	movwf	(memcmp@n+1)^(0+1280),c
 19331   016D8E  0E00               	movlw	0
 19332   016D90  6E05               	movwf	memcmp@n^(0+1280),c
 19333   016D92  EC43  F0C6         	call	_memcmp	;wreg free
 19334   016D96  5001               	movf	?_memcmp^(0+1280),w,c
 19335   016D98  1002               	iorwf	(?_memcmp+1)^(0+1280),w,c
 19336   016D9A  A4D8               	btfss	status,2,c
 19337   016D9C  D036               	goto	u15980
 19338                           
 19339                           ;src/io.c: 205:         if (addr == 0)
 19340   016D9E  0105               	movlb	5	; () banked
 19341   016DA0  51AC               	movf	mem_init@addr& (0+255),w,b
 19342   016DA2  11AD               	iorwf	(mem_init@addr+1)& (0+255),w,b
 19343   016DA4  11AE               	iorwf	(mem_init@addr+2)& (0+255),w,b
 19344   016DA6  11AF               	iorwf	(mem_init@addr+3)& (0+255),w,b
 19345   016DA8  B4D8               	btfsc	status,2,c
 19346   016DAA  D020               	goto	l12567
 19347                           
 19348                           ; BSR set to: 5
 19349                           ;src/io.c: 207:         emuz80_57q_read_from_sram(0, tmp_buf[1], 256);
 19350   016DAC  0E00               	movlw	0
 19351   016DAE  6E02               	movwf	(emuz80_57q_read_from_sram@addr+1)^(0+1280),c
 19352   016DB0  0E00               	movlw	0
 19353   016DB2  6E01               	movwf	emuz80_57q_read_from_sram@addr^(0+1280),c
 19354   016DB4  0EBC               	movlw	low (_tmp_buf+256)
 19355   016DB6  6E03               	movwf	emuz80_57q_read_from_sram@buf^(0+1280),c
 19356   016DB8  0E18               	movlw	high (_tmp_buf+256)
 19357   016DBA  6E04               	movwf	(emuz80_57q_read_from_sram@buf+1)^(0+1280),c
 19358   016DBC  0E01               	movlw	1
 19359   016DBE  6E06               	movwf	(emuz80_57q_read_from_sram@len+1)^(0+1280),c
 19360   016DC0  0E00               	movlw	0
 19361   016DC2  6E05               	movwf	emuz80_57q_read_from_sram@len^(0+1280),c
 19362   016DC4  EC5E  F0CC         	call	_emuz80_57q_read_from_sram	;wreg free
 19363                           
 19364                           ;src/io.c: 208:         if (memcmp(tmp_buf[0], tmp_buf[1], 256) == 0) {
 19365   016DC8  0EBC               	movlw	low _tmp_buf
 19366   016DCA  6E01               	movwf	memcmp@vl^(0+1280),c
 19367   016DCC  0E17               	movlw	high _tmp_buf
 19368   016DCE  6E02               	movwf	(memcmp@vl+1)^(0+1280),c
 19369   016DD0  0EBC               	movlw	low (_tmp_buf+256)
 19370   016DD2  6E03               	movwf	memcmp@vr^(0+1280),c
 19371   016DD4  0E18               	movlw	high (_tmp_buf+256)
 19372   016DD6  6E04               	movwf	(memcmp@vr+1)^(0+1280),c
 19373   016DD8  0E01               	movlw	1
 19374   016DDA  6E06               	movwf	(memcmp@n+1)^(0+1280),c
 19375   016DDC  0E00               	movlw	0
 19376   016DDE  6E05               	movwf	memcmp@n^(0+1280),c
 19377   016DE0  EC43  F0C6         	call	_memcmp	;wreg free
 19378   016DE4  5001               	movf	?_memcmp^(0+1280),w,c
 19379   016DE6  1002               	iorwf	(?_memcmp+1)^(0+1280),w,c
 19380   016DE8  B4D8               	btfsc	status,2,c
 19381   016DEA  D00F               	goto	u15980
 19382   016DEC                     l12567:
 19383   016DEC  0E00               	movlw	0
 19384   016DEE  0105               	movlb	5	; () banked
 19385   016DF0  27AC               	addwf	mem_init@addr& (0+255),f,b
 19386   016DF2  0E10               	movlw	16
 19387   016DF4  23AD               	addwfc	(mem_init@addr+1)& (0+255),f,b
 19388   016DF6  0E00               	movlw	0
 19389   016DF8  23AE               	addwfc	(mem_init@addr+2)& (0+255),f,b
 19390   016DFA  0E00               	movlw	0
 19391   016DFC  23AF               	addwfc	(mem_init@addr+3)& (0+255),f,b
 19392   016DFE  51AF               	movf	(mem_init@addr+3)& (0+255),w,b
 19393   016E00  E104               	bnz	u15980
 19394   016E02  0E10               	movlw	16
 19395   016E04  5DAE               	subwf	(mem_init@addr+2)& (0+255),w,b
 19396   016E06  A0D8               	btfss	status,0,c
 19397   016E08  D782               	goto	l12541
 19398   016E0A                     u15980:
 19399                           
 19400                           ;src/io.c: 214:  printf("Memory 000000 - %06lXH %d KB OK\r\n", addr, (int)(addr / 1024))
      +                          ;
 19401   016E0A  0E5C               	movlw	low STR_81
 19402   016E0C  0105               	movlb	5	; () banked
 19403   016E0E  6F9A               	movwf	printf@fmt& (0+255),b
 19404   016E10  0EFC               	movlw	high STR_81
 19405   016E12  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 19406   016E14  C5AC  F59C         	movff	mem_init@addr,?_printf+2
 19407   016E18  C5AD  F59D         	movff	mem_init@addr+1,?_printf+3
 19408   016E1C  C5AE  F59E         	movff	mem_init@addr+2,?_printf+4
 19409   016E20  C5AF  F59F         	movff	mem_init@addr+3,?_printf+5
 19410   016E24  C5AC  F5A6         	movff	mem_init@addr,??_mem_init
 19411   016E28  C5AD  F5A7         	movff	mem_init@addr+1,??_mem_init+1
 19412   016E2C  C5AE  F5A8         	movff	mem_init@addr+2,??_mem_init+2
 19413   016E30  C5AF  F5A9         	movff	mem_init@addr+3,??_mem_init+3
 19414   016E34  0E0B               	movlw	11
 19415   016E36  D005               	goto	u15990
 19416   016E38                     u15995:
 19417   016E38  90D8               	bcf	status,0,c
 19418   016E3A  33A9               	rrcf	(??_mem_init+3)& (0+255),f,b
 19419   016E3C  33A8               	rrcf	(??_mem_init+2)& (0+255),f,b
 19420   016E3E  33A7               	rrcf	(??_mem_init+1)& (0+255),f,b
 19421   016E40  33A6               	rrcf	??_mem_init& (0+255),f,b
 19422   016E42                     u15990:
 19423   016E42  2EE8               	decfsz	wreg,f,c
 19424   016E44  D7F9               	goto	u15995
 19425   016E46  C5A6  F5A0         	movff	??_mem_init,?_printf+6
 19426   016E4A  C5A7  F5A1         	movff	??_mem_init+1,?_printf+7
 19427   016E4E  EC53  F0CF         	call	_printf	;wreg free
 19428                           
 19429                           ; BSR set to: 5
 19430   016E52  0012               	return		;funcret
 19431   016E54                     __end_of_mem_init:
 19432                           	callstack 0
 19433                           
 19434 ;; *************** function _f_mount *****************
 19435 ;; Defined at:
 19436 ;;		line 3657 in file "fatfs/ff.c"
 19437 ;; Parameters:    Size  Location     Type
 19438 ;;  fs              2  175[BANK6 ] PTR struct .
 19439 ;;		 -> fs(560), NULL(0), 
 19440 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 19441 ;;		 -> tmp_buf(512), STR_65(2), STR_62(5), 
 19442 ;;  opt             1  179[BANK6 ] unsigned char 
 19443 ;; Auto vars:     Size  Location     Type
 19444 ;;  vol             2  185[BANK6 ] int 
 19445 ;;  cfs             2  183[BANK6 ] PTR struct .
 19446 ;;		 -> fs(560), NULL(0), 
 19447 ;;  rp              2  181[BANK6 ] PTR const unsigned char 
 19448 ;;		 -> tmp_buf(512), STR_65(2), STR_62(5), 
 19449 ;;  res             1  180[BANK6 ] enum E275
 19450 ;; Return value:  Size  Location     Type
 19451 ;;                  1    wreg      enum E275
 19452 ;; Registers used:
 19453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19454 ;; Tracked objects:
 19455 ;;		On entry : 3F/6
 19456 ;;		On exit  : 3F/6
 19457 ;;		Unchanged: 0/0
 19458 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19459 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19460 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19462 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19463 ;;Total ram usage:       12 bytes
 19464 ;; Hardware stack levels used: 1
 19465 ;; Hardware stack levels required when called: 16
 19466 ;; This function calls:
 19467 ;;		_get_ldnumber
 19468 ;;		_mount_volume
 19469 ;; This function is called by:
 19470 ;;		_main
 19471 ;; This function uses a non-reentrant model
 19472 ;;
 19473                           
 19474                           	psect	text27
 19475   018396                     __ptext27:
 19476                           	callstack 0
 19477   018396                     _f_mount:
 19478                           	callstack 110
 19479                           
 19480                           ; BSR set to: 6
 19481                           ;fatfs/ff.c: 3658:  FATFS* fs,;fatfs/ff.c: 3659:  const TCHAR* path,;fatfs/ff.c: 3660:  
      +                          BYTE opt;fatfs/ff.c: 3662: {;fatfs/ff.c: 3663:  FATFS *cfs;;fatfs/ff.c: 3664:  int vol;;
      +                          fatfs/ff.c: 3665:  FRESULT res;;fatfs/ff.c: 3666:  const TCHAR *rp = path;
 19482                           
 19483                           ; BSR set to: 5
 19484                           ;incstack = 0
 19485   018396  C6B1  F6B5         	movff	f_mount@path,f_mount@rp
 19486   01839A  C6B2  F6B6         	movff	f_mount@path+1,f_mount@rp+1
 19487                           
 19488                           ; BSR set to: 6
 19489                           ;fatfs/ff.c: 3670:  vol = get_ldnumber(&rp);
 19490   01839E  0EB5               	movlw	low f_mount@rp
 19491   0183A0  6E01               	movwf	get_ldnumber@path^(0+1280),c
 19492   0183A2  0E06               	movlw	high f_mount@rp
 19493   0183A4  6E02               	movwf	(get_ldnumber@path+1)^(0+1280),c
 19494   0183A6  EC5E  F0B9         	call	_get_ldnumber	;wreg free
 19495   0183AA  C501  F6B9         	movff	?_get_ldnumber,f_mount@vol
 19496   0183AE  C502  F6BA         	movff	?_get_ldnumber+1,f_mount@vol+1
 19497                           
 19498                           ;fatfs/ff.c: 3671:  if (vol < 0) return FR_INVALID_DRIVE;
 19499   0183B2  0106               	movlb	6	; () banked
 19500   0183B4  AFBA               	btfss	(f_mount@vol+1)& (0+255),7,b
 19501   0183B6  D002               	goto	l12383
 19502                           
 19503                           ; BSR set to: 6
 19504   0183B8  0E0B               	movlw	11
 19505   0183BA  0012               	return	
 19506   0183BC                     l12383:
 19507                           
 19508                           ; BSR set to: 6
 19509                           ;fatfs/ff.c: 3672:  cfs = FatFs[vol];
 19510   0183BC  90D8               	bcf	status,0,c
 19511   0183BE  35B9               	rlcf	f_mount@vol& (0+255),w,b
 19512   0183C0  6ED9               	movwf	fsr2l,c
 19513   0183C2  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 19514   0183C4  6EDA               	movwf	fsr2h,c
 19515   0183C6  0E23               	movlw	low _FatFs
 19516   0183C8  26D9               	addwf	fsr2l,f,c
 19517   0183CA  0E07               	movlw	high _FatFs
 19518   0183CC  22DA               	addwfc	fsr2h,f,c
 19519   0183CE  C4DE F6B7          	movff	postinc2,f_mount@cfs
 19520   0183D2  C4DD F6B8          	movff	postdec2,f_mount@cfs+1
 19521                           
 19522                           ; BSR set to: 6
 19523                           ;fatfs/ff.c: 3674:  if (cfs) {
 19524   0183D6  51B7               	movf	f_mount@cfs& (0+255),w,b
 19525   0183D8  11B8               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 19526   0183DA  B4D8               	btfsc	status,2,c
 19527   0183DC  D010               	goto	l600
 19528                           
 19529                           ; BSR set to: 6
 19530                           ;fatfs/ff.c: 3675:   FatFs[vol] = 0;
 19531   0183DE  90D8               	bcf	status,0,c
 19532   0183E0  35B9               	rlcf	f_mount@vol& (0+255),w,b
 19533   0183E2  6ED9               	movwf	fsr2l,c
 19534   0183E4  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 19535   0183E6  6EDA               	movwf	fsr2h,c
 19536   0183E8  0E23               	movlw	low _FatFs
 19537   0183EA  26D9               	addwf	fsr2l,f,c
 19538   0183EC  0E07               	movlw	high _FatFs
 19539   0183EE  22DA               	addwfc	fsr2h,f,c
 19540   0183F0  6ADE               	clrf	postinc2,c
 19541   0183F2  6ADD               	clrf	postdec2,c
 19542                           
 19543                           ; BSR set to: 6
 19544                           ;fatfs/ff.c: 3682:   cfs->fs_type = 0;
 19545   0183F4  C6B7  F4D9         	movff	f_mount@cfs,fsr2l
 19546   0183F8  C6B8  F4DA         	movff	f_mount@cfs+1,fsr2h
 19547   0183FC  6ADF               	clrf	indf2,c
 19548   0183FE                     l600:
 19549                           
 19550                           ; BSR set to: 6
 19551                           ;fatfs/ff.c: 3685:  if (fs) {
 19552   0183FE  51AF               	movf	f_mount@fs& (0+255),w,b
 19553   018400  11B0               	iorwf	(f_mount@fs+1)& (0+255),w,b
 19554   018402  B4D8               	btfsc	status,2,c
 19555   018404  D01A               	goto	l12397
 19556                           
 19557                           ; BSR set to: 6
 19558                           ;fatfs/ff.c: 3686:   fs->pdrv = (BYTE)(vol);
 19559   018406  EE20 F001          	lfsr	2,1
 19560   01840A  51AF               	movf	f_mount@fs& (0+255),w,b
 19561   01840C  26D9               	addwf	fsr2l,f,c
 19562   01840E  51B0               	movf	(f_mount@fs+1)& (0+255),w,b
 19563   018410  22DA               	addwfc	fsr2h,f,c
 19564   018412  C6B9  F4DF         	movff	f_mount@vol,indf2
 19565                           
 19566                           ; BSR set to: 6
 19567                           ;fatfs/ff.c: 3700:   fs->fs_type = 0;
 19568   018416  C6AF  F4D9         	movff	f_mount@fs,fsr2l
 19569   01841A  C6B0  F4DA         	movff	f_mount@fs+1,fsr2h
 19570   01841E  6ADF               	clrf	indf2,c
 19571                           
 19572                           ; BSR set to: 6
 19573                           ;fatfs/ff.c: 3701:   FatFs[vol] = fs;
 19574   018420  90D8               	bcf	status,0,c
 19575   018422  35B9               	rlcf	f_mount@vol& (0+255),w,b
 19576   018424  6ED9               	movwf	fsr2l,c
 19577   018426  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 19578   018428  6EDA               	movwf	fsr2h,c
 19579   01842A  0E23               	movlw	low _FatFs
 19580   01842C  26D9               	addwf	fsr2l,f,c
 19581   01842E  0E07               	movlw	high _FatFs
 19582   018430  22DA               	addwfc	fsr2h,f,c
 19583   018432  C6AF  F4DE         	movff	f_mount@fs,postinc2
 19584   018436  C6B0  F4DD         	movff	f_mount@fs+1,postdec2
 19585   01843A                     l12397:
 19586                           
 19587                           ; BSR set to: 6
 19588                           ;fatfs/ff.c: 3704:  if (opt == 0) return FR_OK;
 19589   01843A  51B3               	movf	f_mount@opt& (0+255),w,b
 19590   01843C  A4D8               	btfss	status,2,c
 19591   01843E  D002               	goto	l12403
 19592                           
 19593                           ; BSR set to: 6
 19594   018440  0E00               	movlw	0
 19595   018442  0012               	return	
 19596   018444                     l12403:
 19597                           
 19598                           ; BSR set to: 6
 19599                           ;fatfs/ff.c: 3706:  res = mount_volume(&path, &fs, 0);
 19600   018444  0EB1               	movlw	low f_mount@path
 19601   018446  6F81               	movwf	mount_volume@path& (0+255),b
 19602   018448  0E06               	movlw	high f_mount@path
 19603   01844A  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 19604   01844C  0EAF               	movlw	low f_mount@fs
 19605   01844E  6F83               	movwf	mount_volume@rfs& (0+255),b
 19606   018450  0E06               	movlw	high f_mount@fs
 19607   018452  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 19608   018454  0E00               	movlw	0
 19609   018456  6F85               	movwf	mount_volume@mode& (0+255),b
 19610   018458  EC70  F084         	call	_mount_volume	;wreg free
 19611   01845C  0106               	movlb	6	; () banked
 19612   01845E  6FB4               	movwf	f_mount@res& (0+255),b
 19613                           
 19614                           ; BSR set to: 6
 19615                           ;fatfs/ff.c: 3707:  return res;
 19616   018460  51B4               	movf	f_mount@res& (0+255),w,b
 19617                           
 19618                           ; BSR set to: 6
 19619   018462  0012               	return		;funcret
 19620   018464                     __end_of_f_mount:
 19621                           	callstack 0
 19622                           
 19623 ;; *************** function _mount_volume *****************
 19624 ;; Defined at:
 19625 ;;		line 3385 in file "fatfs/ff.c"
 19626 ;; Parameters:    Size  Location     Type
 19627 ;;  path            2  129[BANK6 ] PTR PTR const unsigned c
 19628 ;;		 -> f_rename@path_old(2), f_mkdir@path(2), f_unlink@path(2), f_getfree@path(2), 
 19629 ;;		 -> f_stat@path(2), f_opendir@path(2), f_open@path(2), f_mount@path(2), 
 19630 ;;  rfs             2  131[BANK6 ] PTR PTR struct .
 19631 ;;		 -> f_rename@fs(2), f_mkdir@fs(2), f_unlink@fs(2), f_getfree@fs(2), 
 19632 ;;		 -> f_opendir@fs(2), dj$obj(15), f_open@dj(40), f_open@fs(2), 
 19633 ;;		 -> f_mount@fs(2), 
 19634 ;;  mode            1  133[BANK6 ] unsigned char 
 19635 ;; Auto vars:     Size  Location     Type
 19636 ;;  fasize          4  167[BANK6 ] unsigned long 
 19637 ;;  nclst           4  163[BANK6 ] unsigned long 
 19638 ;;  bsect           4  158[BANK6 ] unsigned long 
 19639 ;;  tsect           4  154[BANK6 ] unsigned long 
 19640 ;;  sysect          4  148[BANK6 ] unsigned long 
 19641 ;;  szbfat          4  142[BANK6 ] unsigned long 
 19642 ;;  fs              2  173[BANK6 ] PTR struct .
 19643 ;;		 -> fs(560), NULL(0), 
 19644 ;;  fmt             2  171[BANK6 ] unsigned int 
 19645 ;;  nrsv            2  152[BANK6 ] unsigned short 
 19646 ;;  vol             2  146[BANK6 ] int 
 19647 ;;  stat            1  162[BANK6 ] unsigned char 
 19648 ;; Return value:  Size  Location     Type
 19649 ;;                  1    wreg      enum E275
 19650 ;; Registers used:
 19651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19652 ;; Tracked objects:
 19653 ;;		On entry : 3F/6
 19654 ;;		On exit  : 0/0
 19655 ;;		Unchanged: 0/0
 19656 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19657 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19658 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19659 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19660 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19661 ;;Total ram usage:       46 bytes
 19662 ;; Hardware stack levels used: 1
 19663 ;; Hardware stack levels required when called: 15
 19664 ;; This function calls:
 19665 ;;		___lldiv
 19666 ;;		___lmul
 19667 ;;		_disk_initialize
 19668 ;;		_disk_status
 19669 ;;		_find_volume
 19670 ;;		_get_ldnumber
 19671 ;;		_ld_dword
 19672 ;;		_ld_word
 19673 ;;		_move_window
 19674 ;; This function is called by:
 19675 ;;		_f_mount
 19676 ;;		_f_open
 19677 ;;		_f_opendir
 19678 ;; This function uses a non-reentrant model
 19679 ;;
 19680                           
 19681                           	psect	text28
 19682   0108E0                     __ptext28:
 19683                           	callstack 0
 19684   0108E0                     _mount_volume:
 19685                           	callstack 109
 19686                           
 19687                           ; BSR set to: 6
 19688                           ;fatfs/ff.c: 3386:  const TCHAR** path,;fatfs/ff.c: 3387:  FATFS** rfs,;fatfs/ff.c: 3388
      +                          :  BYTE mode;fatfs/ff.c: 3390: {;fatfs/ff.c: 3391:  int vol;;fatfs/ff.c: 3392:  FATFS *f
      +                          s;;fatfs/ff.c: 3393:  DSTATUS stat;;fatfs/ff.c: 3394:  LBA_t bsect;;fatfs/ff.c: 3395:  D
      +                          WORD tsect, sysect, fasize, nclst, szbfat;;fatfs/ff.c: 3396:  WORD nrsv;;fatfs/ff.c: 339
      +                          7:  UINT fmt;;fatfs/ff.c: 3401:  *rfs = 0;
 19689                           
 19690                           ; BSR set to: 6
 19691                           ;incstack = 0
 19692   0108E0  C683  F4D9         	movff	mount_volume@rfs,fsr2l
 19693   0108E4  C684  F4DA         	movff	mount_volume@rfs+1,fsr2h
 19694   0108E8  6ADE               	clrf	postinc2,c
 19695   0108EA  6ADD               	clrf	postdec2,c
 19696                           
 19697                           ; BSR set to: 6
 19698                           ;fatfs/ff.c: 3402:  vol = get_ldnumber(path);
 19699   0108EC  C681  F501         	movff	mount_volume@path,get_ldnumber@path
 19700   0108F0  C682  F502         	movff	mount_volume@path+1,get_ldnumber@path+1
 19701   0108F4  EC5E  F0B9         	call	_get_ldnumber	;wreg free
 19702   0108F8  C501  F692         	movff	?_get_ldnumber,mount_volume@vol
 19703   0108FC  C502  F693         	movff	?_get_ldnumber+1,mount_volume@vol+1
 19704                           
 19705                           ;fatfs/ff.c: 3403:  if (vol < 0) return FR_INVALID_DRIVE;
 19706   010900  0106               	movlb	6	; () banked
 19707   010902  AF93               	btfss	(mount_volume@vol+1)& (0+255),7,b
 19708   010904  D002               	goto	l11121
 19709                           
 19710                           ; BSR set to: 6
 19711   010906  0E0B               	movlw	11
 19712   010908  0012               	return	
 19713   01090A                     l11121:
 19714                           
 19715                           ; BSR set to: 6
 19716                           ;fatfs/ff.c: 3406:  fs = FatFs[vol];
 19717   01090A  90D8               	bcf	status,0,c
 19718   01090C  3592               	rlcf	mount_volume@vol& (0+255),w,b
 19719   01090E  6ED9               	movwf	fsr2l,c
 19720   010910  3593               	rlcf	(mount_volume@vol+1)& (0+255),w,b
 19721   010912  6EDA               	movwf	fsr2h,c
 19722   010914  0E23               	movlw	low _FatFs
 19723   010916  26D9               	addwf	fsr2l,f,c
 19724   010918  0E07               	movlw	high _FatFs
 19725   01091A  22DA               	addwfc	fsr2h,f,c
 19726   01091C  C4DE F6AD          	movff	postinc2,mount_volume@fs
 19727   010920  C4DD F6AE          	movff	postdec2,mount_volume@fs+1
 19728                           
 19729                           ; BSR set to: 6
 19730                           ;fatfs/ff.c: 3407:  if (!fs) return FR_NOT_ENABLED;
 19731   010924  51AD               	movf	mount_volume@fs& (0+255),w,b
 19732   010926  11AE               	iorwf	(mount_volume@fs+1)& (0+255),w,b
 19733   010928  A4D8               	btfss	status,2,c
 19734   01092A  D002               	goto	l11129
 19735                           
 19736                           ; BSR set to: 6
 19737   01092C  0E0C               	movlw	12
 19738   01092E  0012               	return	
 19739   010930                     l11129:
 19740                           
 19741                           ; BSR set to: 6
 19742                           ;fatfs/ff.c: 3411:  *rfs = fs;
 19743   010930  C683  F4D9         	movff	mount_volume@rfs,fsr2l
 19744   010934  C684  F4DA         	movff	mount_volume@rfs+1,fsr2h
 19745   010938  C6AD  F4DE         	movff	mount_volume@fs,postinc2
 19746   01093C  C6AE  F4DD         	movff	mount_volume@fs+1,postdec2
 19747                           
 19748                           ; BSR set to: 6
 19749                           ;fatfs/ff.c: 3413:  mode &= (BYTE)~0x01;
 19750   010940  9185               	bcf	mount_volume@mode& (0+255),0,b
 19751                           
 19752                           ; BSR set to: 6
 19753                           ;fatfs/ff.c: 3414:  if (fs->fs_type != 0) {
 19754   010942  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 19755   010946  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 19756   01094A  50DF               	movf	indf2,w,c
 19757   01094C  B4D8               	btfsc	status,2,c
 19758   01094E  D015               	goto	l11151
 19759                           
 19760                           ; BSR set to: 6
 19761                           ;fatfs/ff.c: 3415:   stat = disk_status(fs->pdrv);
 19762   010950  EE20 F001          	lfsr	2,1
 19763   010954  51AD               	movf	mount_volume@fs& (0+255),w,b
 19764   010956  26D9               	addwf	fsr2l,f,c
 19765   010958  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19766   01095A  22DA               	addwfc	fsr2h,f,c
 19767   01095C  50DF               	movf	indf2,w,c
 19768   01095E  EC79  F0CF         	call	_disk_status
 19769   010962  0106               	movlb	6	; () banked
 19770   010964  6FA2               	movwf	mount_volume@stat& (0+255),b
 19771                           
 19772                           ; BSR set to: 6
 19773                           ;fatfs/ff.c: 3417:    if (!0 && mode && (stat & 0x04)) {
 19774   010966  B1A2               	btfsc	mount_volume@stat& (0+255),0,b
 19775   010968  D008               	goto	l11151
 19776                           
 19777                           ; BSR set to: 6
 19778   01096A  5185               	movf	mount_volume@mode& (0+255),w,b
 19779   01096C  A4D8               	btfss	status,2,c
 19780                           
 19781                           ; BSR set to: 6
 19782   01096E  A5A2               	btfss	mount_volume@stat& (0+255),2,b
 19783   010970  D002               	goto	l11147
 19784   010972                     u13860:
 19785                           
 19786                           ; BSR set to: 6
 19787                           ;fatfs/ff.c: 3418:     return FR_WRITE_PROTECTED;
 19788   010972  0E0A               	movlw	10
 19789   010974  0012               	return	
 19790   010976                     l11147:
 19791                           
 19792                           ; BSR set to: 6
 19793                           ;fatfs/ff.c: 3420:    return FR_OK;
 19794   010976  0E00               	movlw	0
 19795   010978  0012               	return	
 19796   01097A                     l11151:
 19797                           
 19798                           ; BSR set to: 6
 19799                           ;fatfs/ff.c: 3427:  fs->fs_type = 0;
 19800   01097A  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 19801   01097E  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 19802   010982  6ADF               	clrf	indf2,c
 19803                           
 19804                           ; BSR set to: 6
 19805                           ;fatfs/ff.c: 3428:  stat = disk_initialize(fs->pdrv);
 19806   010984  EE20 F001          	lfsr	2,1
 19807   010988  51AD               	movf	mount_volume@fs& (0+255),w,b
 19808   01098A  26D9               	addwf	fsr2l,f,c
 19809   01098C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19810   01098E  22DA               	addwfc	fsr2h,f,c
 19811   010990  50DF               	movf	indf2,w,c
 19812   010992  EC0F  F0BD         	call	_disk_initialize
 19813   010996  0106               	movlb	6	; () banked
 19814   010998  6FA2               	movwf	mount_volume@stat& (0+255),b
 19815                           
 19816                           ; BSR set to: 6
 19817                           ;fatfs/ff.c: 3429:  if (stat & 0x01) {
 19818   01099A  A1A2               	btfss	mount_volume@stat& (0+255),0,b
 19819   01099C  D002               	goto	l11161
 19820                           
 19821                           ; BSR set to: 6
 19822                           ;fatfs/ff.c: 3430:   return FR_NOT_READY;
 19823   01099E  0E03               	movlw	3
 19824   0109A0  0012               	return	
 19825   0109A2                     l11161:
 19826                           
 19827                           ; BSR set to: 6
 19828   0109A2  5185               	movf	mount_volume@mode& (0+255),w,b
 19829   0109A4  B4D8               	btfsc	status,2,c
 19830   0109A6  D002               	goto	l11169
 19831                           
 19832                           ; BSR set to: 6
 19833   0109A8  B5A2               	btfsc	mount_volume@stat& (0+255),2,b
 19834   0109AA  D7E3               	goto	u13860
 19835   0109AC                     l11169:
 19836                           
 19837                           ; BSR set to: 6
 19838                           ;fatfs/ff.c: 3441:  fmt = find_volume(fs, 0);
 19839   0109AC  C6AD  F618         	movff	mount_volume@fs,find_volume@fs
 19840   0109B0  C6AE  F619         	movff	mount_volume@fs+1,find_volume@fs+1
 19841   0109B4  0E00               	movlw	0
 19842   0109B6  6F1B               	movwf	(find_volume@part+1)& (0+255),b
 19843   0109B8  0E00               	movlw	0
 19844   0109BA  6F1A               	movwf	find_volume@part& (0+255),b
 19845   0109BC  EC2A  F0B7         	call	_find_volume	;wreg free
 19846   0109C0  C618  F6AB         	movff	?_find_volume,mount_volume@fmt
 19847   0109C4  C619  F6AC         	movff	?_find_volume+1,mount_volume@fmt+1
 19848                           
 19849                           ; BSR set to: 6
 19850                           ;fatfs/ff.c: 3442:  if (fmt == 4) return FR_DISK_ERR;
 19851   0109C8  0E04               	movlw	4
 19852   0109CA  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 19853   0109CC  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 19854   0109CE  A4D8               	btfss	status,2,c
 19855   0109D0  D002               	goto	l11177
 19856                           
 19857                           ; BSR set to: 6
 19858   0109D2  0E01               	movlw	1
 19859   0109D4  0012               	return	
 19860   0109D6                     l11177:
 19861                           
 19862                           ; BSR set to: 6
 19863                           ;fatfs/ff.c: 3443:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 19864   0109D6  51AC               	movf	(mount_volume@fmt+1)& (0+255),w,b
 19865   0109D8  E104               	bnz	u13910
 19866   0109DA  0E02               	movlw	2
 19867   0109DC  5DAB               	subwf	mount_volume@fmt& (0+255),w,b
 19868   0109DE  A0D8               	btfss	status,0,c
 19869   0109E0  D002               	goto	l11183
 19870   0109E2                     u13910:
 19871   0109E2  0E0D               	movlw	13
 19872   0109E4  0012               	return	
 19873   0109E6                     l11183:
 19874                           
 19875                           ; BSR set to: 6
 19876                           ;fatfs/ff.c: 3444:  bsect = fs->winsect;
 19877   0109E6  EE20 F02C          	lfsr	2,44
 19878   0109EA  51AD               	movf	mount_volume@fs& (0+255),w,b
 19879   0109EC  26D9               	addwf	fsr2l,f,c
 19880   0109EE  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19881   0109F0  22DA               	addwfc	fsr2h,f,c
 19882   0109F2  C4DE F69E          	movff	postinc2,mount_volume@bsect
 19883   0109F6  C4DE F69F          	movff	postinc2,mount_volume@bsect+1
 19884   0109FA  C4DE F6A0          	movff	postinc2,mount_volume@bsect+2
 19885   0109FE  C4DE F6A1          	movff	postinc2,mount_volume@bsect+3
 19886                           
 19887                           ; BSR set to: 6
 19888                           ;fatfs/ff.c: 3511:  {;fatfs/ff.c: 3512:   if (ld_word(fs->win + 11) != ((UINT)512)) retu
      +                          rn FR_NO_FILESYSTEM;
 19889   010A02  0E3B               	movlw	59
 19890   010A04  25AD               	addwf	mount_volume@fs& (0+255),w,b
 19891   010A06  6E01               	movwf	ld_word@ptr^(0+1280),c
 19892   010A08  0E00               	movlw	0
 19893   010A0A  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 19894   010A0C  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 19895   010A0E  EC35  F0CE         	call	_ld_word	;wreg free
 19896   010A12  0E02               	movlw	2
 19897   010A14  1802               	xorwf	(?_ld_word+1)^(0+1280),w,c
 19898   010A16  1001               	iorwf	?_ld_word^(0+1280),w,c
 19899   010A18  A4D8               	btfss	status,2,c
 19900   010A1A  D7E3               	goto	u13910
 19901                           
 19902                           ;fatfs/ff.c: 3514:   fasize = ld_word(fs->win + 22);
 19903   010A1C  0E46               	movlw	70
 19904   010A1E  0106               	movlb	6	; () banked
 19905   010A20  25AD               	addwf	mount_volume@fs& (0+255),w,b
 19906   010A22  6E01               	movwf	ld_word@ptr^(0+1280),c
 19907   010A24  0E00               	movlw	0
 19908   010A26  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 19909   010A28  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 19910   010A2A  EC35  F0CE         	call	_ld_word	;wreg free
 19911   010A2E  C501  F6A7         	movff	?_ld_word,mount_volume@fasize
 19912   010A32  C502  F6A8         	movff	?_ld_word+1,mount_volume@fasize+1
 19913   010A36  0106               	movlb	6	; () banked
 19914   010A38  6BA9               	clrf	(mount_volume@fasize+2)& (0+255),b
 19915   010A3A  6BAA               	clrf	(mount_volume@fasize+3)& (0+255),b
 19916                           
 19917                           ; BSR set to: 6
 19918                           ;fatfs/ff.c: 3515:   if (fasize == 0) fasize = ld_dword(fs->win + 36);
 19919   010A3C  51A7               	movf	mount_volume@fasize& (0+255),w,b
 19920   010A3E  11A8               	iorwf	(mount_volume@fasize+1)& (0+255),w,b
 19921   010A40  11A9               	iorwf	(mount_volume@fasize+2)& (0+255),w,b
 19922   010A42  11AA               	iorwf	(mount_volume@fasize+3)& (0+255),w,b
 19923   010A44  A4D8               	btfss	status,2,c
 19924   010A46  D010               	goto	l11197
 19925                           
 19926                           ; BSR set to: 6
 19927   010A48  0E54               	movlw	84
 19928   010A4A  25AD               	addwf	mount_volume@fs& (0+255),w,b
 19929   010A4C  6E01               	movwf	ld_dword@ptr^(0+1280),c
 19930   010A4E  0E00               	movlw	0
 19931   010A50  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 19932   010A52  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 19933   010A54  ECDE  F0C4         	call	_ld_dword	;wreg free
 19934   010A58  C501  F6A7         	movff	?_ld_dword,mount_volume@fasize
 19935   010A5C  C502  F6A8         	movff	?_ld_dword+1,mount_volume@fasize+1
 19936   010A60  C503  F6A9         	movff	?_ld_dword+2,mount_volume@fasize+2
 19937   010A64  C504  F6AA         	movff	?_ld_dword+3,mount_volume@fasize+3
 19938   010A68                     l11197:
 19939                           
 19940                           ; BSR set to: 6
 19941                           ;fatfs/ff.c: 3516:   fs->fsize = fasize;
 19942   010A68  EE20 F018          	lfsr	2,24
 19943   010A6C  51AD               	movf	mount_volume@fs& (0+255),w,b
 19944   010A6E  26D9               	addwf	fsr2l,f,c
 19945   010A70  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19946   010A72  22DA               	addwfc	fsr2h,f,c
 19947   010A74  C6A7  F4DE         	movff	mount_volume@fasize,postinc2
 19948   010A78  C6A8  F4DE         	movff	mount_volume@fasize+1,postinc2
 19949   010A7C  C6A9  F4DE         	movff	mount_volume@fasize+2,postinc2
 19950   010A80  C6AA  F4DE         	movff	mount_volume@fasize+3,postinc2
 19951                           
 19952                           ; BSR set to: 6
 19953                           ;fatfs/ff.c: 3518:   fs->n_fats = fs->win[16];
 19954   010A84  EE20 F040          	lfsr	2,64
 19955   010A88  51AD               	movf	mount_volume@fs& (0+255),w,b
 19956   010A8A  26D9               	addwf	fsr2l,f,c
 19957   010A8C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19958   010A8E  22DA               	addwfc	fsr2h,f,c
 19959   010A90  EE10 F003          	lfsr	1,3
 19960   010A94  51AD               	movf	mount_volume@fs& (0+255),w,b
 19961   010A96  26E1               	addwf	fsr1l,f,c
 19962   010A98  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19963   010A9A  22E2               	addwfc	fsr1h,f,c
 19964   010A9C  C4DF F4E7          	movff	indf2,indf1
 19965                           
 19966                           ; BSR set to: 6
 19967                           ;fatfs/ff.c: 3519:   if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;
 19968   010AA0  EE20 F003          	lfsr	2,3
 19969   010AA4  51AD               	movf	mount_volume@fs& (0+255),w,b
 19970   010AA6  26D9               	addwf	fsr2l,f,c
 19971   010AA8  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19972   010AAA  22DA               	addwfc	fsr2h,f,c
 19973   010AAC  04DE               	decf	postinc2,w,c
 19974   010AAE  B4D8               	btfsc	status,2,c
 19975   010AB0  D00A               	goto	l11209
 19976                           
 19977                           ; BSR set to: 6
 19978   010AB2  EE20 F003          	lfsr	2,3
 19979   010AB6  51AD               	movf	mount_volume@fs& (0+255),w,b
 19980   010AB8  26D9               	addwf	fsr2l,f,c
 19981   010ABA  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19982   010ABC  22DA               	addwfc	fsr2h,f,c
 19983   010ABE  0E02               	movlw	2
 19984   010AC0  18DE               	xorwf	postinc2,w,c
 19985   010AC2  A4D8               	btfss	status,2,c
 19986   010AC4  D78E               	goto	u13910
 19987   010AC6                     l11209:
 19988                           
 19989                           ; BSR set to: 6
 19990                           ;fatfs/ff.c: 3520:   fasize *= fs->n_fats;
 19991   010AC6  C6A7  F501         	movff	mount_volume@fasize,___lmul@multiplier
 19992   010ACA  C6A8  F502         	movff	mount_volume@fasize+1,___lmul@multiplier+1
 19993   010ACE  C6A9  F503         	movff	mount_volume@fasize+2,___lmul@multiplier+2
 19994   010AD2  C6AA  F504         	movff	mount_volume@fasize+3,___lmul@multiplier+3
 19995   010AD6  EE20 F003          	lfsr	2,3
 19996   010ADA  51AD               	movf	mount_volume@fs& (0+255),w,b
 19997   010ADC  26D9               	addwf	fsr2l,f,c
 19998   010ADE  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19999   010AE0  22DA               	addwfc	fsr2h,f,c
 20000   010AE2  50DF               	movf	indf2,w,c
 20001   010AE4  6F86               	movwf	??_mount_volume& (0+255),b
 20002   010AE6  5186               	movf	??_mount_volume& (0+255),w,b
 20003   010AE8  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 20004   010AEA  6A06               	clrf	(___lmul@multiplicand+1)^(0+1280),c
 20005   010AEC  6A07               	clrf	(___lmul@multiplicand+2)^(0+1280),c
 20006   010AEE  6A08               	clrf	(___lmul@multiplicand+3)^(0+1280),c
 20007   010AF0  EC33  F0CC         	call	___lmul	;wreg free
 20008   010AF4  C501  F6A7         	movff	?___lmul,mount_volume@fasize
 20009   010AF8  C502  F6A8         	movff	?___lmul+1,mount_volume@fasize+1
 20010   010AFC  C503  F6A9         	movff	?___lmul+2,mount_volume@fasize+2
 20011   010B00  C504  F6AA         	movff	?___lmul+3,mount_volume@fasize+3
 20012                           
 20013                           ;fatfs/ff.c: 3522:   fs->csize = fs->win[13];
 20014   010B04  0106               	movlb	6	; () banked
 20015   010B06  EE20 F03D          	lfsr	2,61
 20016   010B0A  51AD               	movf	mount_volume@fs& (0+255),w,b
 20017   010B0C  26D9               	addwf	fsr2l,f,c
 20018   010B0E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20019   010B10  22DA               	addwfc	fsr2h,f,c
 20020   010B12  50DF               	movf	indf2,w,c
 20021   010B14  6F86               	movwf	??_mount_volume& (0+255),b
 20022   010B16  6B87               	clrf	(??_mount_volume+1)& (0+255),b
 20023   010B18  EE20 F00A          	lfsr	2,10
 20024   010B1C  51AD               	movf	mount_volume@fs& (0+255),w,b
 20025   010B1E  26D9               	addwf	fsr2l,f,c
 20026   010B20  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20027   010B22  22DA               	addwfc	fsr2h,f,c
 20028   010B24  C686  F4DE         	movff	??_mount_volume,postinc2
 20029   010B28  C687  F4DD         	movff	??_mount_volume+1,postdec2
 20030                           
 20031                           ; BSR set to: 6
 20032                           ;fatfs/ff.c: 3523:   if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_F
      +                          ILESYSTEM;
 20033   010B2C  EE20 F00A          	lfsr	2,10
 20034   010B30  51AD               	movf	mount_volume@fs& (0+255),w,b
 20035   010B32  26D9               	addwf	fsr2l,f,c
 20036   010B34  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20037   010B36  22DA               	addwfc	fsr2h,f,c
 20038   010B38  50DE               	movf	postinc2,w,c
 20039   010B3A  10DE               	iorwf	postinc2,w,c
 20040   010B3C  B4D8               	btfsc	status,2,c
 20041   010B3E  D751               	goto	u13910
 20042                           
 20043                           ; BSR set to: 6
 20044   010B40  EE20 F00A          	lfsr	2,10
 20045   010B44  51AD               	movf	mount_volume@fs& (0+255),w,b
 20046   010B46  26D9               	addwf	fsr2l,f,c
 20047   010B48  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20048   010B4A  22DA               	addwfc	fsr2h,f,c
 20049   010B4C  C4DE F686          	movff	postinc2,??_mount_volume
 20050   010B50  C4DD F687          	movff	postdec2,??_mount_volume+1
 20051   010B54  EE20 F00A          	lfsr	2,10
 20052   010B58  51AD               	movf	mount_volume@fs& (0+255),w,b
 20053   010B5A  26D9               	addwf	fsr2l,f,c
 20054   010B5C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20055   010B5E  22DA               	addwfc	fsr2h,f,c
 20056   010B60  C4DE F688          	movff	postinc2,??_mount_volume+2
 20057   010B64  C4DD F689          	movff	postdec2,??_mount_volume+3
 20058   010B68  0EFF               	movlw	255
 20059   010B6A  2588               	addwf	(??_mount_volume+2)& (0+255),w,b
 20060   010B6C  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 20061   010B6E  0EFF               	movlw	255
 20062   010B70  2189               	addwfc	(??_mount_volume+3)& (0+255),w,b
 20063   010B72  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 20064   010B74  5186               	movf	??_mount_volume& (0+255),w,b
 20065   010B76  158A               	andwf	(??_mount_volume+4)& (0+255),w,b
 20066   010B78  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 20067   010B7A  5187               	movf	(??_mount_volume+1)& (0+255),w,b
 20068   010B7C  158B               	andwf	(??_mount_volume+5)& (0+255),w,b
 20069   010B7E  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 20070   010B80  518C               	movf	(??_mount_volume+6)& (0+255),w,b
 20071   010B82  118D               	iorwf	(??_mount_volume+7)& (0+255),w,b
 20072   010B84  A4D8               	btfss	status,2,c
 20073   010B86  D72D               	goto	u13910
 20074                           
 20075                           ; BSR set to: 6
 20076                           ;fatfs/ff.c: 3525:   fs->n_rootdir = ld_word(fs->win + 17);
 20077   010B88  0E41               	movlw	65
 20078   010B8A  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20079   010B8C  6E01               	movwf	ld_word@ptr^(0+1280),c
 20080   010B8E  0E00               	movlw	0
 20081   010B90  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20082   010B92  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20083   010B94  EC35  F0CE         	call	_ld_word	;wreg free
 20084   010B98  0106               	movlb	6	; () banked
 20085   010B9A  EE20 F008          	lfsr	2,8
 20086   010B9E  51AD               	movf	mount_volume@fs& (0+255),w,b
 20087   010BA0  26D9               	addwf	fsr2l,f,c
 20088   010BA2  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20089   010BA4  22DA               	addwfc	fsr2h,f,c
 20090   010BA6  C501  F4DE         	movff	?_ld_word,postinc2
 20091   010BAA  C502  F4DD         	movff	?_ld_word+1,postdec2
 20092                           
 20093                           ; BSR set to: 6
 20094                           ;fatfs/ff.c: 3526:   if (fs->n_rootdir % (((UINT)512) / 32)) return FR_NO_FILESYSTEM;
 20095   010BAE  EE20 F008          	lfsr	2,8
 20096   010BB2  51AD               	movf	mount_volume@fs& (0+255),w,b
 20097   010BB4  26D9               	addwf	fsr2l,f,c
 20098   010BB6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20099   010BB8  22DA               	addwfc	fsr2h,f,c
 20100   010BBA  50DF               	movf	indf2,w,c
 20101   010BBC  6F86               	movwf	??_mount_volume& (0+255),b
 20102   010BBE  0E0F               	movlw	15
 20103   010BC0  1786               	andwf	??_mount_volume& (0+255),f,b
 20104   010BC2  A4D8               	btfss	status,2,c
 20105   010BC4  D70E               	goto	u13910
 20106                           
 20107                           ; BSR set to: 6
 20108                           ;fatfs/ff.c: 3528:   tsect = ld_word(fs->win + 19);
 20109   010BC6  0E43               	movlw	67
 20110   010BC8  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20111   010BCA  6E01               	movwf	ld_word@ptr^(0+1280),c
 20112   010BCC  0E00               	movlw	0
 20113   010BCE  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20114   010BD0  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20115   010BD2  EC35  F0CE         	call	_ld_word	;wreg free
 20116   010BD6  C501  F69A         	movff	?_ld_word,mount_volume@tsect
 20117   010BDA  C502  F69B         	movff	?_ld_word+1,mount_volume@tsect+1
 20118   010BDE  0106               	movlb	6	; () banked
 20119   010BE0  6B9C               	clrf	(mount_volume@tsect+2)& (0+255),b
 20120   010BE2  6B9D               	clrf	(mount_volume@tsect+3)& (0+255),b
 20121                           
 20122                           ; BSR set to: 6
 20123                           ;fatfs/ff.c: 3529:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 20124   010BE4  519A               	movf	mount_volume@tsect& (0+255),w,b
 20125   010BE6  119B               	iorwf	(mount_volume@tsect+1)& (0+255),w,b
 20126   010BE8  119C               	iorwf	(mount_volume@tsect+2)& (0+255),w,b
 20127   010BEA  119D               	iorwf	(mount_volume@tsect+3)& (0+255),w,b
 20128   010BEC  A4D8               	btfss	status,2,c
 20129   010BEE  D010               	goto	l567
 20130                           
 20131                           ; BSR set to: 6
 20132   010BF0  0E50               	movlw	80
 20133   010BF2  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20134   010BF4  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20135   010BF6  0E00               	movlw	0
 20136   010BF8  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20137   010BFA  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20138   010BFC  ECDE  F0C4         	call	_ld_dword	;wreg free
 20139   010C00  C501  F69A         	movff	?_ld_dword,mount_volume@tsect
 20140   010C04  C502  F69B         	movff	?_ld_dword+1,mount_volume@tsect+1
 20141   010C08  C503  F69C         	movff	?_ld_dword+2,mount_volume@tsect+2
 20142   010C0C  C504  F69D         	movff	?_ld_dword+3,mount_volume@tsect+3
 20143   010C10                     l567:
 20144                           
 20145                           ; BSR set to: 6
 20146                           ;fatfs/ff.c: 3531:   nrsv = ld_word(fs->win + 14);
 20147   010C10  0E3E               	movlw	62
 20148   010C12  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20149   010C14  6E01               	movwf	ld_word@ptr^(0+1280),c
 20150   010C16  0E00               	movlw	0
 20151   010C18  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20152   010C1A  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20153   010C1C  EC35  F0CE         	call	_ld_word	;wreg free
 20154   010C20  C501  F698         	movff	?_ld_word,mount_volume@nrsv
 20155   010C24  C502  F699         	movff	?_ld_word+1,mount_volume@nrsv+1
 20156                           
 20157                           ;fatfs/ff.c: 3532:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 20158   010C28  0106               	movlb	6	; () banked
 20159   010C2A  5198               	movf	mount_volume@nrsv& (0+255),w,b
 20160   010C2C  1199               	iorwf	(mount_volume@nrsv+1)& (0+255),w,b
 20161   010C2E  B4D8               	btfsc	status,2,c
 20162   010C30  D6D8               	goto	u13910
 20163                           
 20164                           ; BSR set to: 6
 20165                           ;fatfs/ff.c: 3535:   sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
 20166   010C32  EE20 F008          	lfsr	2,8
 20167   010C36  51AD               	movf	mount_volume@fs& (0+255),w,b
 20168   010C38  26D9               	addwf	fsr2l,f,c
 20169   010C3A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20170   010C3C  22DA               	addwfc	fsr2h,f,c
 20171   010C3E  C4DE F686          	movff	postinc2,??_mount_volume
 20172   010C42  C4DD F687          	movff	postdec2,??_mount_volume+1
 20173   010C46  0E04               	movlw	4
 20174   010C48  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 20175   010C4A                     u14015:
 20176   010C4A  90D8               	bcf	status,0,c
 20177   010C4C  3387               	rrcf	(??_mount_volume+1)& (0+255),f,b
 20178   010C4E  3386               	rrcf	??_mount_volume& (0+255),f,b
 20179   010C50  2F88               	decfsz	(??_mount_volume+2)& (0+255),f,b
 20180   010C52  D7FB               	goto	u14015
 20181   010C54  5198               	movf	mount_volume@nrsv& (0+255),w,b
 20182   010C56  2586               	addwf	??_mount_volume& (0+255),w,b
 20183   010C58  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 20184   010C5A  5199               	movf	(mount_volume@nrsv+1)& (0+255),w,b
 20185   010C5C  2187               	addwfc	(??_mount_volume+1)& (0+255),w,b
 20186   010C5E  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 20187   010C60  6B8B               	clrf	(??_mount_volume+5)& (0+255),b
 20188   010C62  B0D8               	btfsc	status,0,c
 20189   010C64  2B8B               	incf	(??_mount_volume+5)& (0+255),f,b
 20190   010C66  6B8C               	clrf	(??_mount_volume+6)& (0+255),b
 20191   010C68  51A7               	movf	mount_volume@fasize& (0+255),w,b
 20192   010C6A  2589               	addwf	(??_mount_volume+3)& (0+255),w,b
 20193   010C6C  6F94               	movwf	mount_volume@sysect& (0+255),b
 20194   010C6E  51A8               	movf	(mount_volume@fasize+1)& (0+255),w,b
 20195   010C70  218A               	addwfc	(??_mount_volume+4)& (0+255),w,b
 20196   010C72  6F95               	movwf	(mount_volume@sysect+1)& (0+255),b
 20197   010C74  51A9               	movf	(mount_volume@fasize+2)& (0+255),w,b
 20198   010C76  218B               	addwfc	(??_mount_volume+5)& (0+255),w,b
 20199   010C78  6F96               	movwf	(mount_volume@sysect+2)& (0+255),b
 20200   010C7A  51AA               	movf	(mount_volume@fasize+3)& (0+255),w,b
 20201   010C7C  218C               	addwfc	(??_mount_volume+6)& (0+255),w,b
 20202   010C7E  6F97               	movwf	(mount_volume@sysect+3)& (0+255),b
 20203                           
 20204                           ; BSR set to: 6
 20205                           ;fatfs/ff.c: 3536:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 20206   010C80  5194               	movf	mount_volume@sysect& (0+255),w,b
 20207   010C82  5D9A               	subwf	mount_volume@tsect& (0+255),w,b
 20208   010C84  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 20209   010C86  599B               	subwfb	(mount_volume@tsect+1)& (0+255),w,b
 20210   010C88  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 20211   010C8A  599C               	subwfb	(mount_volume@tsect+2)& (0+255),w,b
 20212   010C8C  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 20213   010C8E  599D               	subwfb	(mount_volume@tsect+3)& (0+255),w,b
 20214   010C90  A0D8               	btfss	status,0,c
 20215   010C92  D6A7               	goto	u13910
 20216                           
 20217                           ; BSR set to: 6
 20218                           ;fatfs/ff.c: 3537:   nclst = (tsect - sysect) / fs->csize;
 20219   010C94  5194               	movf	mount_volume@sysect& (0+255),w,b
 20220   010C96  5D9A               	subwf	mount_volume@tsect& (0+255),w,b
 20221   010C98  6E01               	movwf	___lldiv@dividend^(0+1280),c
 20222   010C9A  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 20223   010C9C  599B               	subwfb	(mount_volume@tsect+1)& (0+255),w,b
 20224   010C9E  6E02               	movwf	(___lldiv@dividend+1)^(0+1280),c
 20225   010CA0  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 20226   010CA2  599C               	subwfb	(mount_volume@tsect+2)& (0+255),w,b
 20227   010CA4  6E03               	movwf	(___lldiv@dividend+2)^(0+1280),c
 20228   010CA6  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 20229   010CA8  599D               	subwfb	(mount_volume@tsect+3)& (0+255),w,b
 20230   010CAA  6E04               	movwf	(___lldiv@dividend+3)^(0+1280),c
 20231   010CAC  EE20 F00A          	lfsr	2,10
 20232   010CB0  51AD               	movf	mount_volume@fs& (0+255),w,b
 20233   010CB2  26D9               	addwf	fsr2l,f,c
 20234   010CB4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20235   010CB6  22DA               	addwfc	fsr2h,f,c
 20236   010CB8  C4DE F686          	movff	postinc2,??_mount_volume
 20237   010CBC  C4DD F687          	movff	postdec2,??_mount_volume+1
 20238   010CC0  C686  F505         	movff	??_mount_volume,___lldiv@divisor
 20239   010CC4  C687  F506         	movff	??_mount_volume+1,___lldiv@divisor+1
 20240   010CC8  6A07               	clrf	(___lldiv@divisor+2)^(0+1280),c
 20241   010CCA  6A08               	clrf	(___lldiv@divisor+3)^(0+1280),c
 20242   010CCC  EC93  F0C9         	call	___lldiv	;wreg free
 20243   010CD0  C501  F6A3         	movff	?___lldiv,mount_volume@nclst
 20244   010CD4  C502  F6A4         	movff	?___lldiv+1,mount_volume@nclst+1
 20245   010CD8  C503  F6A5         	movff	?___lldiv+2,mount_volume@nclst+2
 20246   010CDC  C504  F6A6         	movff	?___lldiv+3,mount_volume@nclst+3
 20247                           
 20248                           ; BSR set to: 6
 20249                           ;fatfs/ff.c: 3538:   if (nclst == 0) return FR_NO_FILESYSTEM;
 20250   010CE0  51A3               	movf	mount_volume@nclst& (0+255),w,b
 20251   010CE2  11A4               	iorwf	(mount_volume@nclst+1)& (0+255),w,b
 20252   010CE4  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 20253   010CE6  11A6               	iorwf	(mount_volume@nclst+3)& (0+255),w,b
 20254   010CE8  B4D8               	btfsc	status,2,c
 20255   010CEA  D67B               	goto	u13910
 20256                           
 20257                           ; BSR set to: 6
 20258                           ;fatfs/ff.c: 3539:   fmt = 0;
 20259   010CEC  0E00               	movlw	0
 20260   010CEE  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 20261   010CF0  0E00               	movlw	0
 20262   010CF2  6FAB               	movwf	mount_volume@fmt& (0+255),b
 20263                           
 20264                           ; BSR set to: 6
 20265                           ;fatfs/ff.c: 3540:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 20266   010CF4  0EF6               	movlw	246
 20267   010CF6  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 20268   010CF8  0EFF               	movlw	255
 20269   010CFA  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 20270   010CFC  0EFF               	movlw	255
 20271   010CFE  59A5               	subwfb	(mount_volume@nclst+2)& (0+255),w,b
 20272   010D00  0E0F               	movlw	15
 20273   010D02  59A6               	subwfb	(mount_volume@nclst+3)& (0+255),w,b
 20274   010D04  B0D8               	btfsc	status,0,c
 20275   010D06  D004               	goto	l11263
 20276                           
 20277                           ; BSR set to: 6
 20278   010D08  0E00               	movlw	0
 20279   010D0A  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 20280   010D0C  0E03               	movlw	3
 20281   010D0E  6FAB               	movwf	mount_volume@fmt& (0+255),b
 20282   010D10                     l11263:
 20283                           
 20284                           ; BSR set to: 6
 20285                           ;fatfs/ff.c: 3541:   if (nclst <= 0xFFF5) fmt = 2;
 20286   010D10  51A6               	movf	(mount_volume@nclst+3)& (0+255),w,b
 20287   010D12  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 20288   010D14  E10A               	bnz	l11267
 20289   010D16  0EF6               	movlw	246
 20290   010D18  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 20291   010D1A  0EFF               	movlw	255
 20292   010D1C  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 20293   010D1E  B0D8               	btfsc	status,0,c
 20294   010D20  D004               	goto	l11267
 20295                           
 20296                           ; BSR set to: 6
 20297   010D22  0E00               	movlw	0
 20298   010D24  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 20299   010D26  0E02               	movlw	2
 20300   010D28  6FAB               	movwf	mount_volume@fmt& (0+255),b
 20301   010D2A                     l11267:
 20302                           
 20303                           ; BSR set to: 6
 20304                           ;fatfs/ff.c: 3542:   if (nclst <= 0xFF5) fmt = 1;
 20305   010D2A  51A6               	movf	(mount_volume@nclst+3)& (0+255),w,b
 20306   010D2C  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 20307   010D2E  E10A               	bnz	l11271
 20308   010D30  0EF6               	movlw	246
 20309   010D32  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 20310   010D34  0E0F               	movlw	15
 20311   010D36  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 20312   010D38  B0D8               	btfsc	status,0,c
 20313   010D3A  D004               	goto	l11271
 20314                           
 20315                           ; BSR set to: 6
 20316   010D3C  0E00               	movlw	0
 20317   010D3E  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 20318   010D40  0E01               	movlw	1
 20319   010D42  6FAB               	movwf	mount_volume@fmt& (0+255),b
 20320   010D44                     l11271:
 20321                           
 20322                           ; BSR set to: 6
 20323                           ;fatfs/ff.c: 3543:   if (fmt == 0) return FR_NO_FILESYSTEM;
 20324   010D44  51AB               	movf	mount_volume@fmt& (0+255),w,b
 20325   010D46  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 20326   010D48  B4D8               	btfsc	status,2,c
 20327   010D4A  D64B               	goto	u13910
 20328                           
 20329                           ; BSR set to: 6
 20330                           ;fatfs/ff.c: 3546:   fs->n_fatent = nclst + 2;
 20331   010D4C  0E02               	movlw	2
 20332   010D4E  25A3               	addwf	mount_volume@nclst& (0+255),w,b
 20333   010D50  6F86               	movwf	??_mount_volume& (0+255),b
 20334   010D52  0E00               	movlw	0
 20335   010D54  21A4               	addwfc	(mount_volume@nclst+1)& (0+255),w,b
 20336   010D56  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 20337   010D58  0E00               	movlw	0
 20338   010D5A  21A5               	addwfc	(mount_volume@nclst+2)& (0+255),w,b
 20339   010D5C  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 20340   010D5E  0E00               	movlw	0
 20341   010D60  21A6               	addwfc	(mount_volume@nclst+3)& (0+255),w,b
 20342   010D62  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 20343   010D64  EE20 F014          	lfsr	2,20
 20344   010D68  51AD               	movf	mount_volume@fs& (0+255),w,b
 20345   010D6A  26D9               	addwf	fsr2l,f,c
 20346   010D6C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20347   010D6E  22DA               	addwfc	fsr2h,f,c
 20348   010D70  C686  F4DE         	movff	??_mount_volume,postinc2
 20349   010D74  C687  F4DE         	movff	??_mount_volume+1,postinc2
 20350   010D78  C688  F4DE         	movff	??_mount_volume+2,postinc2
 20351   010D7C  C689  F4DE         	movff	??_mount_volume+3,postinc2
 20352                           
 20353                           ;fatfs/ff.c: 3547:   fs->volbase = bsect;
 20354   010D80  EE20 F01C          	lfsr	2,28
 20355   010D84  51AD               	movf	mount_volume@fs& (0+255),w,b
 20356   010D86  26D9               	addwf	fsr2l,f,c
 20357   010D88  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20358   010D8A  22DA               	addwfc	fsr2h,f,c
 20359   010D8C  C69E  F4DE         	movff	mount_volume@bsect,postinc2
 20360   010D90  C69F  F4DE         	movff	mount_volume@bsect+1,postinc2
 20361   010D94  C6A0  F4DE         	movff	mount_volume@bsect+2,postinc2
 20362   010D98  C6A1  F4DE         	movff	mount_volume@bsect+3,postinc2
 20363                           
 20364                           ;fatfs/ff.c: 3548:   fs->fatbase = bsect + nrsv;
 20365   010D9C  5198               	movf	mount_volume@nrsv& (0+255),w,b
 20366   010D9E  259E               	addwf	mount_volume@bsect& (0+255),w,b
 20367   010DA0  6F86               	movwf	??_mount_volume& (0+255),b
 20368   010DA2  5199               	movf	(mount_volume@nrsv+1)& (0+255),w,b
 20369   010DA4  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 20370   010DA6  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 20371   010DA8  0E00               	movlw	0
 20372   010DAA  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 20373   010DAC  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 20374   010DAE  0E00               	movlw	0
 20375   010DB0  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 20376   010DB2  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 20377   010DB4  EE20 F020          	lfsr	2,32
 20378   010DB8  51AD               	movf	mount_volume@fs& (0+255),w,b
 20379   010DBA  26D9               	addwf	fsr2l,f,c
 20380   010DBC  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20381   010DBE  22DA               	addwfc	fsr2h,f,c
 20382   010DC0  C686  F4DE         	movff	??_mount_volume,postinc2
 20383   010DC4  C687  F4DE         	movff	??_mount_volume+1,postinc2
 20384   010DC8  C688  F4DE         	movff	??_mount_volume+2,postinc2
 20385   010DCC  C689  F4DE         	movff	??_mount_volume+3,postinc2
 20386                           
 20387                           ;fatfs/ff.c: 3549:   fs->database = bsect + sysect;
 20388   010DD0  5194               	movf	mount_volume@sysect& (0+255),w,b
 20389   010DD2  259E               	addwf	mount_volume@bsect& (0+255),w,b
 20390   010DD4  6F86               	movwf	??_mount_volume& (0+255),b
 20391   010DD6  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 20392   010DD8  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 20393   010DDA  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 20394   010DDC  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 20395   010DDE  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 20396   010DE0  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 20397   010DE2  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 20398   010DE4  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 20399   010DE6  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 20400   010DE8  EE20 F028          	lfsr	2,40
 20401   010DEC  51AD               	movf	mount_volume@fs& (0+255),w,b
 20402   010DEE  26D9               	addwf	fsr2l,f,c
 20403   010DF0  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20404   010DF2  22DA               	addwfc	fsr2h,f,c
 20405   010DF4  C686  F4DE         	movff	??_mount_volume,postinc2
 20406   010DF8  C687  F4DE         	movff	??_mount_volume+1,postinc2
 20407   010DFC  C688  F4DE         	movff	??_mount_volume+2,postinc2
 20408   010E00  C689  F4DE         	movff	??_mount_volume+3,postinc2
 20409                           
 20410                           ; BSR set to: 6
 20411                           ;fatfs/ff.c: 3550:   if (fmt == 3) {
 20412   010E04  0E03               	movlw	3
 20413   010E06  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 20414   010E08  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 20415   010E0A  A4D8               	btfss	status,2,c
 20416   010E0C  D04C               	goto	l11297
 20417                           
 20418                           ; BSR set to: 6
 20419                           ;fatfs/ff.c: 3551:    if (ld_word(fs->win + 42) != 0) return FR_NO_FILESYSTEM;
 20420   010E0E  0E5A               	movlw	90
 20421   010E10  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20422   010E12  6E01               	movwf	ld_word@ptr^(0+1280),c
 20423   010E14  0E00               	movlw	0
 20424   010E16  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20425   010E18  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20426   010E1A  EC35  F0CE         	call	_ld_word	;wreg free
 20427   010E1E  5001               	movf	?_ld_word^(0+1280),w,c
 20428   010E20  1002               	iorwf	(?_ld_word+1)^(0+1280),w,c
 20429   010E22  A4D8               	btfss	status,2,c
 20430   010E24  D5DE               	goto	u13910
 20431                           
 20432                           ;fatfs/ff.c: 3552:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;
 20433   010E26  0106               	movlb	6	; () banked
 20434   010E28  EE20 F008          	lfsr	2,8
 20435   010E2C  51AD               	movf	mount_volume@fs& (0+255),w,b
 20436   010E2E  26D9               	addwf	fsr2l,f,c
 20437   010E30  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20438   010E32  22DA               	addwfc	fsr2h,f,c
 20439   010E34  50DE               	movf	postinc2,w,c
 20440   010E36  10DE               	iorwf	postinc2,w,c
 20441   010E38  A4D8               	btfss	status,2,c
 20442   010E3A  D5D3               	goto	u13910
 20443                           
 20444                           ; BSR set to: 6
 20445                           ;fatfs/ff.c: 3553:    fs->dirbase = ld_dword(fs->win + 44);
 20446   010E3C  0E5C               	movlw	92
 20447   010E3E  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20448   010E40  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20449   010E42  0E00               	movlw	0
 20450   010E44  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20451   010E46  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20452   010E48  ECDE  F0C4         	call	_ld_dword	;wreg free
 20453   010E4C  EE20 F024          	lfsr	2,36
 20454   010E50  51AD               	movf	mount_volume@fs& (0+255),w,b
 20455   010E52  26D9               	addwf	fsr2l,f,c
 20456   010E54  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20457   010E56  22DA               	addwfc	fsr2h,f,c
 20458   010E58  C501  F4DE         	movff	?_ld_dword,postinc2
 20459   010E5C  C502  F4DE         	movff	?_ld_dword+1,postinc2
 20460   010E60  C503  F4DE         	movff	?_ld_dword+2,postinc2
 20461   010E64  C504  F4DE         	movff	?_ld_dword+3,postinc2
 20462                           
 20463                           ; BSR set to: 6
 20464                           ;fatfs/ff.c: 3554:    szbfat = fs->n_fatent * 4;
 20465   010E68  EE20 F014          	lfsr	2,20
 20466   010E6C  51AD               	movf	mount_volume@fs& (0+255),w,b
 20467   010E6E  26D9               	addwf	fsr2l,f,c
 20468   010E70  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20469   010E72  22DA               	addwfc	fsr2h,f,c
 20470   010E74  C4DE F686          	movff	postinc2,??_mount_volume
 20471   010E78  C4DE F687          	movff	postinc2,??_mount_volume+1
 20472   010E7C  C4DE F688          	movff	postinc2,??_mount_volume+2
 20473   010E80  C4DE F689          	movff	postinc2,??_mount_volume+3
 20474   010E84  0E02               	movlw	2
 20475   010E86                     u14115:
 20476   010E86  90D8               	bcf	status,0,c
 20477   010E88  3786               	rlcf	??_mount_volume& (0+255),f,b
 20478   010E8A  3787               	rlcf	(??_mount_volume+1)& (0+255),f,b
 20479   010E8C  3788               	rlcf	(??_mount_volume+2)& (0+255),f,b
 20480   010E8E  3789               	rlcf	(??_mount_volume+3)& (0+255),f,b
 20481   010E90  2EE8               	decfsz	wreg,f,c
 20482   010E92  D7F9               	goto	u14115
 20483   010E94  C686  F68E         	movff	??_mount_volume,mount_volume@szbfat
 20484   010E98  C687  F68F         	movff	??_mount_volume+1,mount_volume@szbfat+1
 20485   010E9C  C688  F690         	movff	??_mount_volume+2,mount_volume@szbfat+2
 20486   010EA0  C689  F691         	movff	??_mount_volume+3,mount_volume@szbfat+3
 20487                           
 20488                           ;fatfs/ff.c: 3555:   } else {
 20489   010EA4  D092               	goto	l578
 20490   010EA6                     l11297:
 20491                           
 20492                           ; BSR set to: 6
 20493                           ;fatfs/ff.c: 3556:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTEM;
 20494   010EA6  EE20 F008          	lfsr	2,8
 20495   010EAA  51AD               	movf	mount_volume@fs& (0+255),w,b
 20496   010EAC  26D9               	addwf	fsr2l,f,c
 20497   010EAE  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20498   010EB0  22DA               	addwfc	fsr2h,f,c
 20499   010EB2  50DE               	movf	postinc2,w,c
 20500   010EB4  10DE               	iorwf	postinc2,w,c
 20501   010EB6  B4D8               	btfsc	status,2,c
 20502   010EB8  D594               	goto	u13910
 20503                           
 20504                           ; BSR set to: 6
 20505                           ;fatfs/ff.c: 3557:    fs->dirbase = fs->fatbase + fasize;
 20506   010EBA  EE20 F020          	lfsr	2,32
 20507   010EBE  51AD               	movf	mount_volume@fs& (0+255),w,b
 20508   010EC0  26D9               	addwf	fsr2l,f,c
 20509   010EC2  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20510   010EC4  22DA               	addwfc	fsr2h,f,c
 20511   010EC6  C4DE F686          	movff	postinc2,??_mount_volume
 20512   010ECA  C4DE F687          	movff	postinc2,??_mount_volume+1
 20513   010ECE  C4DE F688          	movff	postinc2,??_mount_volume+2
 20514   010ED2  C4DE F689          	movff	postinc2,??_mount_volume+3
 20515   010ED6  51A7               	movf	mount_volume@fasize& (0+255),w,b
 20516   010ED8  2586               	addwf	??_mount_volume& (0+255),w,b
 20517   010EDA  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 20518   010EDC  51A8               	movf	(mount_volume@fasize+1)& (0+255),w,b
 20519   010EDE  2187               	addwfc	(??_mount_volume+1)& (0+255),w,b
 20520   010EE0  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 20521   010EE2  51A9               	movf	(mount_volume@fasize+2)& (0+255),w,b
 20522   010EE4  2188               	addwfc	(??_mount_volume+2)& (0+255),w,b
 20523   010EE6  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 20524   010EE8  51AA               	movf	(mount_volume@fasize+3)& (0+255),w,b
 20525   010EEA  2189               	addwfc	(??_mount_volume+3)& (0+255),w,b
 20526   010EEC  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 20527   010EEE  EE20 F024          	lfsr	2,36
 20528   010EF2  51AD               	movf	mount_volume@fs& (0+255),w,b
 20529   010EF4  26D9               	addwf	fsr2l,f,c
 20530   010EF6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20531   010EF8  22DA               	addwfc	fsr2h,f,c
 20532   010EFA  C68A  F4DE         	movff	??_mount_volume+4,postinc2
 20533   010EFE  C68B  F4DE         	movff	??_mount_volume+5,postinc2
 20534   010F02  C68C  F4DE         	movff	??_mount_volume+6,postinc2
 20535   010F06  C68D  F4DE         	movff	??_mount_volume+7,postinc2
 20536                           
 20537                           ; BSR set to: 6
 20538                           ;fatfs/ff.c: 3558:    szbfat = (fmt == 2) ?
 20539   010F0A  0E02               	movlw	2
 20540   010F0C  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 20541   010F0E  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 20542   010F10  B4D8               	btfsc	status,2,c
 20543   010F12  D044               	goto	l11309
 20544                           
 20545                           ; BSR set to: 6
 20546   010F14  EE20 F014          	lfsr	2,20
 20547   010F18  51AD               	movf	mount_volume@fs& (0+255),w,b
 20548   010F1A  26D9               	addwf	fsr2l,f,c
 20549   010F1C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20550   010F1E  22DA               	addwfc	fsr2h,f,c
 20551   010F20  C4DE F686          	movff	postinc2,??_mount_volume
 20552   010F24  C4DE F687          	movff	postinc2,??_mount_volume+1
 20553   010F28  C4DE F688          	movff	postinc2,??_mount_volume+2
 20554   010F2C  C4DE F689          	movff	postinc2,??_mount_volume+3
 20555   010F30  0E01               	movlw	1
 20556   010F32  1586               	andwf	??_mount_volume& (0+255),w,b
 20557   010F34  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 20558   010F36  0E00               	movlw	0
 20559   010F38  1587               	andwf	(??_mount_volume+1)& (0+255),w,b
 20560   010F3A  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 20561   010F3C  0E00               	movlw	0
 20562   010F3E  1588               	andwf	(??_mount_volume+2)& (0+255),w,b
 20563   010F40  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 20564   010F42  0E00               	movlw	0
 20565   010F44  1589               	andwf	(??_mount_volume+3)& (0+255),w,b
 20566   010F46  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 20567   010F48  EE20 F014          	lfsr	2,20
 20568   010F4C  51AD               	movf	mount_volume@fs& (0+255),w,b
 20569   010F4E  26D9               	addwf	fsr2l,f,c
 20570   010F50  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20571   010F52  22DA               	addwfc	fsr2h,f,c
 20572   010F54  C4DE F501          	movff	postinc2,___lmul@multiplier
 20573   010F58  C4DE F502          	movff	postinc2,___lmul@multiplier+1
 20574   010F5C  C4DE F503          	movff	postinc2,___lmul@multiplier+2
 20575   010F60  C4DE F504          	movff	postinc2,___lmul@multiplier+3
 20576   010F64  0E03               	movlw	3
 20577   010F66  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 20578   010F68  0E00               	movlw	0
 20579   010F6A  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 20580   010F6C  0E00               	movlw	0
 20581   010F6E  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 20582   010F70  0E00               	movlw	0
 20583   010F72  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 20584   010F74  EC33  F0CC         	call	___lmul	;wreg free
 20585   010F78  90D8               	bcf	status,0,c
 20586   010F7A  3204               	rrcf	(?___lmul+3)^(0+1280),f,c
 20587   010F7C  3203               	rrcf	(?___lmul+2)^(0+1280),f,c
 20588   010F7E  3202               	rrcf	(?___lmul+1)^(0+1280),f,c
 20589   010F80  3201               	rrcf	?___lmul^(0+1280),f,c
 20590   010F82  0106               	movlb	6	; () banked
 20591   010F84  518A               	movf	(??_mount_volume+4)& (0+255),w,b
 20592   010F86  2401               	addwf	?___lmul^(0+1280),w,c
 20593   010F88  6F8E               	movwf	mount_volume@szbfat& (0+255),b
 20594   010F8A  518B               	movf	(??_mount_volume+5)& (0+255),w,b
 20595   010F8C  2002               	addwfc	(?___lmul+1)^(0+1280),w,c
 20596   010F8E  6F8F               	movwf	(mount_volume@szbfat+1)& (0+255),b
 20597   010F90  518C               	movf	(??_mount_volume+6)& (0+255),w,b
 20598   010F92  2003               	addwfc	(?___lmul+2)^(0+1280),w,c
 20599   010F94  6F90               	movwf	(mount_volume@szbfat+2)& (0+255),b
 20600   010F96  518D               	movf	(??_mount_volume+7)& (0+255),w,b
 20601   010F98  2004               	addwfc	(?___lmul+3)^(0+1280),w,c
 20602   010F9A  D016               	goto	L8
 20603   010F9C                     l11309:
 20604                           
 20605                           ; BSR set to: 6
 20606   010F9C  EE20 F014          	lfsr	2,20
 20607   010FA0  51AD               	movf	mount_volume@fs& (0+255),w,b
 20608   010FA2  26D9               	addwf	fsr2l,f,c
 20609   010FA4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20610   010FA6  22DA               	addwfc	fsr2h,f,c
 20611   010FA8  C4DE F686          	movff	postinc2,??_mount_volume
 20612   010FAC  C4DE F687          	movff	postinc2,??_mount_volume+1
 20613   010FB0  C4DE F688          	movff	postinc2,??_mount_volume+2
 20614   010FB4  C4DE F689          	movff	postinc2,??_mount_volume+3
 20615   010FB8  90D8               	bcf	status,0,c
 20616   010FBA  3586               	rlcf	??_mount_volume& (0+255),w,b
 20617   010FBC  6F8E               	movwf	mount_volume@szbfat& (0+255),b
 20618   010FBE  3587               	rlcf	(??_mount_volume+1)& (0+255),w,b
 20619   010FC0  6F8F               	movwf	(mount_volume@szbfat+1)& (0+255),b
 20620   010FC2  3588               	rlcf	(??_mount_volume+2)& (0+255),w,b
 20621   010FC4  6F90               	movwf	(mount_volume@szbfat+2)& (0+255),b
 20622   010FC6  3589               	rlcf	(??_mount_volume+3)& (0+255),w,b
 20623   010FC8                     L8:
 20624   010FC8  6F91               	movwf	(mount_volume@szbfat+3)& (0+255),b
 20625   010FCA                     l578:
 20626                           
 20627                           ; BSR set to: 6
 20628                           ;fatfs/ff.c: 3561:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512)) return 
      +                          FR_NO_FILESYSTEM;
 20629   010FCA  0EFF               	movlw	255
 20630   010FCC  258E               	addwf	mount_volume@szbfat& (0+255),w,b
 20631   010FCE  6F86               	movwf	??_mount_volume& (0+255),b
 20632   010FD0  0E01               	movlw	1
 20633   010FD2  218F               	addwfc	(mount_volume@szbfat+1)& (0+255),w,b
 20634   010FD4  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 20635   010FD6  0E00               	movlw	0
 20636   010FD8  2190               	addwfc	(mount_volume@szbfat+2)& (0+255),w,b
 20637   010FDA  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 20638   010FDC  0E00               	movlw	0
 20639   010FDE  2191               	addwfc	(mount_volume@szbfat+3)& (0+255),w,b
 20640   010FE0  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 20641   010FE2  0E0A               	movlw	10
 20642   010FE4  D005               	goto	u14140
 20643   010FE6                     u14145:
 20644   010FE6  90D8               	bcf	status,0,c
 20645   010FE8  3389               	rrcf	(??_mount_volume+3)& (0+255),f,b
 20646   010FEA  3388               	rrcf	(??_mount_volume+2)& (0+255),f,b
 20647   010FEC  3387               	rrcf	(??_mount_volume+1)& (0+255),f,b
 20648   010FEE  3386               	rrcf	??_mount_volume& (0+255),f,b
 20649   010FF0                     u14140:
 20650   010FF0  2EE8               	decfsz	wreg,f,c
 20651   010FF2  D7F9               	goto	u14145
 20652   010FF4  EE20 F018          	lfsr	2,24
 20653   010FF8  51AD               	movf	mount_volume@fs& (0+255),w,b
 20654   010FFA  26D9               	addwf	fsr2l,f,c
 20655   010FFC  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20656   010FFE  22DA               	addwfc	fsr2h,f,c
 20657   011000  5186               	movf	??_mount_volume& (0+255),w,b
 20658   011002  5CDE               	subwf	postinc2,w,c
 20659   011004  5187               	movf	(??_mount_volume+1)& (0+255),w,b
 20660   011006  58DE               	subwfb	postinc2,w,c
 20661   011008  5188               	movf	(??_mount_volume+2)& (0+255),w,b
 20662   01100A  58DE               	subwfb	postinc2,w,c
 20663   01100C  5189               	movf	(??_mount_volume+3)& (0+255),w,b
 20664   01100E  58DE               	subwfb	postinc2,w,c
 20665   011010  A0D8               	btfss	status,0,c
 20666   011012  D4E7               	goto	u13910
 20667                           
 20668                           ; BSR set to: 6
 20669                           ;fatfs/ff.c: 3565:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 20670   011014  EE20 F010          	lfsr	2,16
 20671   011018  51AD               	movf	mount_volume@fs& (0+255),w,b
 20672   01101A  26D9               	addwf	fsr2l,f,c
 20673   01101C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20674   01101E  22DA               	addwfc	fsr2h,f,c
 20675   011020  0EFF               	movlw	255
 20676   011022  6EDE               	movwf	postinc2,c
 20677   011024  0EFF               	movlw	255
 20678   011026  6EDE               	movwf	postinc2,c
 20679   011028  0EFF               	movlw	255
 20680   01102A  6EDE               	movwf	postinc2,c
 20681   01102C  0EFF               	movlw	255
 20682   01102E  6EDD               	movwf	postdec2,c
 20683   011030  52DD               	movf	postdec2,f,c
 20684   011032  52DD               	movf	postdec2,f,c
 20685   011034  EE10 F00C          	lfsr	1,12
 20686   011038  51AD               	movf	mount_volume@fs& (0+255),w,b
 20687   01103A  26E1               	addwf	fsr1l,f,c
 20688   01103C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20689   01103E  22E2               	addwfc	fsr1h,f,c
 20690   011040  C4DE F4E6          	movff	postinc2,postinc1
 20691   011044  C4DE F4E6          	movff	postinc2,postinc1
 20692   011048  C4DE F4E6          	movff	postinc2,postinc1
 20693   01104C  C4DE F4E6          	movff	postinc2,postinc1
 20694                           
 20695                           ; BSR set to: 6
 20696                           ;fatfs/ff.c: 3566:   fs->fsi_flag = 0x80;
 20697   011050  EE20 F005          	lfsr	2,5
 20698   011054  51AD               	movf	mount_volume@fs& (0+255),w,b
 20699   011056  26D9               	addwf	fsr2l,f,c
 20700   011058  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20701   01105A  22DA               	addwfc	fsr2h,f,c
 20702   01105C  0E80               	movlw	128
 20703   01105E  6EDF               	movwf	indf2,c
 20704                           
 20705                           ; BSR set to: 6
 20706                           ;fatfs/ff.c: 3568:   if (fmt == 3
 20707   011060  0E03               	movlw	3
 20708   011062  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 20709   011064  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 20710   011066  A4D8               	btfss	status,2,c
 20711   011068  D090               	goto	l11335
 20712                           
 20713                           ; BSR set to: 6
 20714   01106A  0E60               	movlw	96
 20715   01106C  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20716   01106E  6E01               	movwf	ld_word@ptr^(0+1280),c
 20717   011070  0E00               	movlw	0
 20718   011072  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20719   011074  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20720   011076  EC35  F0CE         	call	_ld_word	;wreg free
 20721   01107A  0401               	decf	?_ld_word^(0+1280),w,c
 20722   01107C  1002               	iorwf	(?_ld_word+1)^(0+1280),w,c
 20723   01107E  A4D8               	btfss	status,2,c
 20724   011080  D084               	goto	l11335
 20725   011082  C6AD  F600         	movff	mount_volume@fs,move_window@fs
 20726   011086  C6AE  F601         	movff	mount_volume@fs+1,move_window@fs+1
 20727   01108A  0E01               	movlw	1
 20728   01108C  0106               	movlb	6	; () banked
 20729   01108E  259E               	addwf	mount_volume@bsect& (0+255),w,b
 20730   011090  6F02               	movwf	move_window@sect& (0+255),b
 20731   011092  0E00               	movlw	0
 20732   011094  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 20733   011096  6F03               	movwf	(move_window@sect+1)& (0+255),b
 20734   011098  0E00               	movlw	0
 20735   01109A  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 20736   01109C  6F04               	movwf	(move_window@sect+2)& (0+255),b
 20737   01109E  0E00               	movlw	0
 20738   0110A0  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 20739   0110A2  6F05               	movwf	(move_window@sect+3)& (0+255),b
 20740   0110A4  EC23  F0C4         	call	_move_window	;wreg free
 20741   0110A8  0900               	iorlw	0
 20742   0110AA  A4D8               	btfss	status,2,c
 20743   0110AC  D06E               	goto	l11335
 20744                           
 20745                           ; BSR set to: 5
 20746                           ;fatfs/ff.c: 3571:   {;fatfs/ff.c: 3572:    fs->fsi_flag = 0;
 20747   0110AE  0106               	movlb	6	; () banked
 20748   0110B0  EE20 F005          	lfsr	2,5
 20749   0110B4  51AD               	movf	mount_volume@fs& (0+255),w,b
 20750   0110B6  26D9               	addwf	fsr2l,f,c
 20751   0110B8  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20752   0110BA  22DA               	addwfc	fsr2h,f,c
 20753   0110BC  6ADF               	clrf	indf2,c
 20754                           
 20755                           ; BSR set to: 6
 20756                           ;fatfs/ff.c: 3573:    if (ld_word(fs->win + 510) == 0xAA55
 20757   0110BE  0E2E               	movlw	46
 20758   0110C0  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20759   0110C2  6E01               	movwf	ld_word@ptr^(0+1280),c
 20760   0110C4  0E02               	movlw	2
 20761   0110C6  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20762   0110C8  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20763   0110CA  EC35  F0CE         	call	_ld_word	;wreg free
 20764   0110CE  0E55               	movlw	85
 20765   0110D0  1801               	xorwf	?_ld_word^(0+1280),w,c
 20766   0110D2  E15B               	bnz	l11335
 20767   0110D4  0EAA               	movlw	170
 20768   0110D6  1802               	xorwf	(?_ld_word+1)^(0+1280),w,c
 20769   0110D8  A4D8               	btfss	status,2,c
 20770   0110DA  D057               	goto	l11335
 20771   0110DC  0E30               	movlw	48
 20772   0110DE  0106               	movlb	6	; () banked
 20773   0110E0  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20774   0110E2  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20775   0110E4  0E00               	movlw	0
 20776   0110E6  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20777   0110E8  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20778   0110EA  ECDE  F0C4         	call	_ld_dword	;wreg free
 20779   0110EE  0E52               	movlw	82
 20780   0110F0  1801               	xorwf	?_ld_dword^(0+1280),w,c
 20781   0110F2  E14B               	bnz	l11335
 20782   0110F4  0E52               	movlw	82
 20783   0110F6  1802               	xorwf	(?_ld_dword+1)^(0+1280),w,c
 20784   0110F8  E148               	bnz	l11335
 20785   0110FA  0E61               	movlw	97
 20786   0110FC  1803               	xorwf	(?_ld_dword+2)^(0+1280),w,c
 20787   0110FE  E145               	bnz	l11335
 20788   011100  0E41               	movlw	65
 20789   011102  1804               	xorwf	(?_ld_dword+3)^(0+1280),w,c
 20790   011104  A4D8               	btfss	status,2,c
 20791   011106  D041               	goto	l11335
 20792                           
 20793                           ; BSR set to: 6
 20794   011108  0E14               	movlw	20
 20795   01110A  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20796   01110C  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20797   01110E  0E02               	movlw	2
 20798   011110  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20799   011112  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20800   011114  ECDE  F0C4         	call	_ld_dword	;wreg free
 20801   011118  0E72               	movlw	114
 20802   01111A  1801               	xorwf	?_ld_dword^(0+1280),w,c
 20803   01111C  E136               	bnz	l11335
 20804   01111E  0E72               	movlw	114
 20805   011120  1802               	xorwf	(?_ld_dword+1)^(0+1280),w,c
 20806   011122  E133               	bnz	l11335
 20807   011124  0E41               	movlw	65
 20808   011126  1803               	xorwf	(?_ld_dword+2)^(0+1280),w,c
 20809   011128  E130               	bnz	l11335
 20810   01112A  0E61               	movlw	97
 20811   01112C  1804               	xorwf	(?_ld_dword+3)^(0+1280),w,c
 20812   01112E  A4D8               	btfss	status,2,c
 20813   011130  D02C               	goto	l11335
 20814                           
 20815                           ; BSR set to: 6
 20816                           ;fatfs/ff.c: 3576:    {;fatfs/ff.c: 3578:     fs->free_clst = ld_dword(fs->win + 488);
 20817   011132  0E18               	movlw	24
 20818   011134  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20819   011136  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20820   011138  0E02               	movlw	2
 20821   01113A  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20822   01113C  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20823   01113E  ECDE  F0C4         	call	_ld_dword	;wreg free
 20824   011142  EE20 F010          	lfsr	2,16
 20825   011146  51AD               	movf	mount_volume@fs& (0+255),w,b
 20826   011148  26D9               	addwf	fsr2l,f,c
 20827   01114A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20828   01114C  22DA               	addwfc	fsr2h,f,c
 20829   01114E  C501  F4DE         	movff	?_ld_dword,postinc2
 20830   011152  C502  F4DE         	movff	?_ld_dword+1,postinc2
 20831   011156  C503  F4DE         	movff	?_ld_dword+2,postinc2
 20832   01115A  C504  F4DE         	movff	?_ld_dword+3,postinc2
 20833                           
 20834                           ;fatfs/ff.c: 3581:     fs->last_clst = ld_dword(fs->win + 492);
 20835   01115E  0E1C               	movlw	28
 20836   011160  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20837   011162  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20838   011164  0E02               	movlw	2
 20839   011166  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20840   011168  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20841   01116A  ECDE  F0C4         	call	_ld_dword	;wreg free
 20842   01116E  EE20 F00C          	lfsr	2,12
 20843   011172  51AD               	movf	mount_volume@fs& (0+255),w,b
 20844   011174  26D9               	addwf	fsr2l,f,c
 20845   011176  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20846   011178  22DA               	addwfc	fsr2h,f,c
 20847   01117A  C501  F4DE         	movff	?_ld_dword,postinc2
 20848   01117E  C502  F4DE         	movff	?_ld_dword+1,postinc2
 20849   011182  C503  F4DE         	movff	?_ld_dword+2,postinc2
 20850   011186  C504  F4DE         	movff	?_ld_dword+3,postinc2
 20851   01118A                     l11335:
 20852                           
 20853                           ;fatfs/ff.c: 3587:  };fatfs/ff.c: 3589:  fs->fs_type = (BYTE)fmt;
 20854   01118A  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 20855   01118E  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 20856   011192  C6AB  F4DF         	movff	mount_volume@fmt,indf2
 20857                           
 20858                           ;fatfs/ff.c: 3590:  fs->id = ++Fsid;
 20859   011196  0107               	movlb	7	; () banked
 20860   011198  4B21               	infsnz	_Fsid& (0+255),f,b
 20861   01119A  2B22               	incf	(_Fsid+1)& (0+255),f,b
 20862   01119C  0106               	movlb	6	; () banked
 20863   01119E  EE20 F006          	lfsr	2,6
 20864   0111A2  51AD               	movf	mount_volume@fs& (0+255),w,b
 20865   0111A4  26D9               	addwf	fsr2l,f,c
 20866   0111A6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20867   0111A8  22DA               	addwfc	fsr2h,f,c
 20868   0111AA  C721  F4DE         	movff	_Fsid,postinc2
 20869   0111AE  C722  F4DD         	movff	_Fsid+1,postdec2
 20870   0111B2  EFBB  F084         	goto	l11147
 20871   0111B6                     __end_of_mount_volume:
 20872                           	callstack 0
 20873                           
 20874 ;; *************** function _get_ldnumber *****************
 20875 ;; Defined at:
 20876 ;;		line 3138 in file "fatfs/ff.c"
 20877 ;; Parameters:    Size  Location     Type
 20878 ;;  path            2    0[COMRAM] PTR PTR const unsigned c
 20879 ;;		 -> f_rename@path_old(2), f_rename@path_new(2), f_mkdir@path(2), f_unlink@path(2), 
 20880 ;;		 -> f_getfree@path(2), f_stat@path(2), f_opendir@path(2), f_open@path(2), 
 20881 ;;		 -> f_mount@path(2), f_mount@rp(2), 
 20882 ;; Auto vars:     Size  Location     Type
 20883 ;;  tp              2   11[COMRAM] PTR const unsigned char 
 20884 ;;		 -> tmp_buf(512), STR_65(2), STR_62(5), 
 20885 ;;  vol             2    9[COMRAM] int 
 20886 ;;  tt              2    6[COMRAM] PTR const unsigned char 
 20887 ;;		 -> tmp_buf(512), STR_65(2), STR_62(5), 
 20888 ;;  i               2    4[COMRAM] int 
 20889 ;;  tc              1    8[COMRAM] unsigned char 
 20890 ;; Return value:  Size  Location     Type
 20891 ;;                  2    0[COMRAM] int 
 20892 ;; Registers used:
 20893 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20894 ;; Tracked objects:
 20895 ;;		On entry : 3F/6
 20896 ;;		On exit  : 0/0
 20897 ;;		Unchanged: 0/0
 20898 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20900 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20902 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20903 ;;Total ram usage:       13 bytes
 20904 ;; Hardware stack levels used: 1
 20905 ;; This function calls:
 20906 ;;		Nothing
 20907 ;; This function is called by:
 20908 ;;		_mount_volume
 20909 ;;		_f_mount
 20910 ;; This function uses a non-reentrant model
 20911 ;;
 20912                           
 20913                           	psect	text29
 20914   0172BC                     __ptext29:
 20915                           	callstack 0
 20916   0172BC                     _get_ldnumber:
 20917                           	callstack 123
 20918                           
 20919                           ; BSR set to: 6
 20920                           ;fatfs/ff.c: 3139:  const TCHAR** path;fatfs/ff.c: 3141: {;fatfs/ff.c: 3142:  const TCHA
      +                          R *tp;;fatfs/ff.c: 3143:  const TCHAR *tt;;fatfs/ff.c: 3144:  TCHAR tc;;fatfs/ff.c: 3145
      +                          :  int i;;fatfs/ff.c: 3146:  int vol = -1;
 20921                           
 20922                           ;incstack = 0
 20923   0172BC  680A               	setf	get_ldnumber@vol^(0+1280),c
 20924   0172BE  680B               	setf	(get_ldnumber@vol+1)^(0+1280),c
 20925                           
 20926                           ; BSR set to: 6
 20927                           ;fatfs/ff.c: 3152:  tt = tp = *path;
 20928   0172C0  C501  F4D9         	movff	get_ldnumber@path,fsr2l
 20929   0172C4  C502  F4DA         	movff	get_ldnumber@path+1,fsr2h
 20930   0172C8  C4DE F50C          	movff	postinc2,get_ldnumber@tp
 20931   0172CC  C4DD F50D          	movff	postdec2,get_ldnumber@tp+1
 20932   0172D0  C50C  F507         	movff	get_ldnumber@tp,get_ldnumber@tt
 20933   0172D4  C50D  F508         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 20934                           
 20935                           ; BSR set to: 6
 20936                           ;fatfs/ff.c: 3153:  if (!tp) return vol;
 20937   0172D8  500C               	movf	get_ldnumber@tp^(0+1280),w,c
 20938   0172DA  100D               	iorwf	(get_ldnumber@tp+1)^(0+1280),w,c
 20939   0172DC  A4D8               	btfss	status,2,c
 20940   0172DE  D003               	goto	l10753
 20941                           
 20942                           ; BSR set to: 6
 20943   0172E0  6801               	setf	?_get_ldnumber^(0+1280),c
 20944   0172E2  6802               	setf	(?_get_ldnumber+1)^(0+1280),c
 20945   0172E4  0012               	return	
 20946   0172E6                     l10753:
 20947                           
 20948                           ;fatfs/ff.c: 3155:   tc = *tt++;
 20949   0172E6  C507  F4F6         	movff	get_ldnumber@tt,tblptrl
 20950   0172EA  C508  F4F7         	movff	get_ldnumber@tt+1,tblptrh
 20951   0172EE  0E00               	movlw	low (__mediumconst shr (0+16))
 20952   0172F0  6EF8               	movwf	tblptru,c
 20953   0172F2  0E24               	movlw	(high __ramtop+-1)
 20954   0172F4  64F7               	cpfsgt	tblptrh,c
 20955   0172F6  D003               	bra	u13137
 20956   0172F8  0008               	tblrd		*
 20957   0172FA  50F5               	movf	tablat,w,c
 20958   0172FC  D005               	bra	u13130
 20959   0172FE                     u13137:
 20960   0172FE  C4F6 F4E9          	movff	tblptrl,fsr0l
 20961   017302  C4F7 F4EA          	movff	tblptrh,fsr0h
 20962   017306  50EF               	movf	indf0,w,c
 20963   017308                     u13130:
 20964   017308  6E09               	movwf	get_ldnumber@tc^(0+1280),c
 20965                           
 20966                           ;fatfs/ff.c: 3156:  } while (!((UINT)(tc) < (0 ? ' ' : '!')) && tc != ':');
 20967   01730A  4A07               	infsnz	get_ldnumber@tt^(0+1280),f,c
 20968   01730C  2A08               	incf	(get_ldnumber@tt+1)^(0+1280),f,c
 20969   01730E  0E20               	movlw	32
 20970   017310  6409               	cpfsgt	get_ldnumber@tc^(0+1280),c
 20971   017312  D004               	goto	u13150
 20972   017314  0E3A               	movlw	58
 20973   017316  1809               	xorwf	get_ldnumber@tc^(0+1280),w,c
 20974   017318  A4D8               	btfss	status,2,c
 20975   01731A  D7E5               	goto	l10753
 20976   01731C                     u13150:
 20977                           
 20978                           ;fatfs/ff.c: 3158:  if (tc == ':') {
 20979   01731C  0E3A               	movlw	58
 20980   01731E  1809               	xorwf	get_ldnumber@tc^(0+1280),w,c
 20981   017320  A4D8               	btfss	status,2,c
 20982   017322  D06B               	goto	l10787
 20983                           
 20984                           ;fatfs/ff.c: 3159:   i = 1;
 20985   017324  0E00               	movlw	0
 20986   017326  6E06               	movwf	(get_ldnumber@i+1)^(0+1280),c
 20987   017328  0E01               	movlw	1
 20988   01732A  6E05               	movwf	get_ldnumber@i^(0+1280),c
 20989                           
 20990                           ;fatfs/ff.c: 3160:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 == tt) {
 20991   01732C  C50C  F4F6         	movff	get_ldnumber@tp,tblptrl
 20992   017330  C50D  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 20993   017334  0E00               	movlw	low (__mediumconst shr (0+16))
 20994   017336  6EF8               	movwf	tblptru,c
 20995   017338  0E24               	movlw	(high __ramtop+-1)
 20996   01733A  64F7               	cpfsgt	tblptrh,c
 20997   01733C  D003               	bra	u13177
 20998   01733E  0008               	tblrd		*
 20999   017340  50F5               	movf	tablat,w,c
 21000   017342  D005               	bra	u13170
 21001   017344                     u13177:
 21002   017344  C4F6 F4E9          	movff	tblptrl,fsr0l
 21003   017348  C4F7 F4EA          	movff	tblptrh,fsr0h
 21004   01734C  50EF               	movf	indf0,w,c
 21005   01734E                     u13170:
 21006   01734E  6E03               	movwf	??_get_ldnumber^(0+1280),c
 21007   017350  0E2F               	movlw	47
 21008   017352  6403               	cpfsgt	??_get_ldnumber^(0+1280),c
 21009   017354  D03A               	goto	l10777
 21010   017356  C50C  F4F6         	movff	get_ldnumber@tp,tblptrl
 21011   01735A  C50D  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 21012   01735E  0E00               	movlw	low (__mediumconst shr (0+16))
 21013   017360  6EF8               	movwf	tblptru,c
 21014   017362  0E24               	movlw	(high __ramtop+-1)
 21015   017364  64F7               	cpfsgt	tblptrh,c
 21016   017366  D003               	bra	u13197
 21017   017368  0008               	tblrd		*
 21018   01736A  50F5               	movf	tablat,w,c
 21019   01736C  D005               	bra	u13190
 21020   01736E                     u13197:
 21021   01736E  C4F6 F4E9          	movff	tblptrl,fsr0l
 21022   017372  C4F7 F4EA          	movff	tblptrh,fsr0h
 21023   017376  50EF               	movf	indf0,w,c
 21024   017378                     u13190:
 21025   017378  6E03               	movwf	??_get_ldnumber^(0+1280),c
 21026   01737A  0E3A               	movlw	58
 21027   01737C  6003               	cpfslt	??_get_ldnumber^(0+1280),c
 21028   01737E  D025               	goto	l10777
 21029   017380  0E02               	movlw	2
 21030   017382  240C               	addwf	get_ldnumber@tp^(0+1280),w,c
 21031   017384  6E03               	movwf	??_get_ldnumber^(0+1280),c
 21032   017386  0E00               	movlw	0
 21033   017388  200D               	addwfc	(get_ldnumber@tp+1)^(0+1280),w,c
 21034   01738A  6E04               	movwf	(??_get_ldnumber+1)^(0+1280),c
 21035   01738C  5007               	movf	get_ldnumber@tt^(0+1280),w,c
 21036   01738E  1803               	xorwf	??_get_ldnumber^(0+1280),w,c
 21037   017390  E11C               	bnz	l10777
 21038   017392  5008               	movf	(get_ldnumber@tt+1)^(0+1280),w,c
 21039   017394  1804               	xorwf	(??_get_ldnumber+1)^(0+1280),w,c
 21040   017396  A4D8               	btfss	status,2,c
 21041   017398  D018               	goto	l10777
 21042                           
 21043                           ;fatfs/ff.c: 3161:    i = (int)*tp - (int)'0';
 21044   01739A  C50C  F4F6         	movff	get_ldnumber@tp,tblptrl
 21045   01739E  C50D  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 21046   0173A2  0E00               	movlw	low (__mediumconst shr (0+16))
 21047   0173A4  6EF8               	movwf	tblptru,c
 21048   0173A6  0E24               	movlw	(high __ramtop+-1)
 21049   0173A8  64F7               	cpfsgt	tblptrh,c
 21050   0173AA  D003               	bra	u13227
 21051   0173AC  0008               	tblrd		*
 21052   0173AE  50F5               	movf	tablat,w,c
 21053   0173B0  D005               	bra	u13220
 21054   0173B2                     u13227:
 21055   0173B2  C4F6 F4E9          	movff	tblptrl,fsr0l
 21056   0173B6  C4F7 F4EA          	movff	tblptrh,fsr0h
 21057   0173BA  50EF               	movf	indf0,w,c
 21058   0173BC                     u13220:
 21059   0173BC  6E03               	movwf	??_get_ldnumber^(0+1280),c
 21060   0173BE  0ED0               	movlw	208
 21061   0173C0  2403               	addwf	??_get_ldnumber^(0+1280),w,c
 21062   0173C2  6E05               	movwf	get_ldnumber@i^(0+1280),c
 21063   0173C4  6A06               	clrf	(get_ldnumber@i+1)^(0+1280),c
 21064   0173C6  0EFF               	movlw	255
 21065   0173C8  2206               	addwfc	(get_ldnumber@i+1)^(0+1280),f,c
 21066   0173CA                     l10777:
 21067                           
 21068                           ;fatfs/ff.c: 3176:   if (i < 1) {
 21069   0173CA  BE06               	btfsc	(get_ldnumber@i+1)^(0+1280),7,c
 21070   0173CC  D005               	goto	u13230
 21071   0173CE  5006               	movf	(get_ldnumber@i+1)^(0+1280),w,c
 21072   0173D0  E10F               	bnz	l10783
 21073   0173D2  0405               	decf	get_ldnumber@i^(0+1280),w,c
 21074   0173D4  B0D8               	btfsc	status,0,c
 21075   0173D6  D00C               	goto	l10783
 21076   0173D8                     u13230:
 21077                           
 21078                           ;fatfs/ff.c: 3177:    vol = i;
 21079   0173D8  C505  F50A         	movff	get_ldnumber@i,get_ldnumber@vol
 21080   0173DC  C506  F50B         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 21081                           
 21082                           ;fatfs/ff.c: 3178:    *path = tt;
 21083   0173E0  C501  F4D9         	movff	get_ldnumber@path,fsr2l
 21084   0173E4  C502  F4DA         	movff	get_ldnumber@path+1,fsr2h
 21085   0173E8  C507  F4DE         	movff	get_ldnumber@tt,postinc2
 21086   0173EC  C508  F4DD         	movff	get_ldnumber@tt+1,postdec2
 21087   0173F0                     l10783:
 21088                           
 21089                           ;fatfs/ff.c: 3180:   return vol;
 21090   0173F0  C50A  F501         	movff	get_ldnumber@vol,?_get_ldnumber
 21091   0173F4  C50B  F502         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 21092   0173F8  0012               	return	
 21093   0173FA                     l10787:
 21094                           
 21095                           ;fatfs/ff.c: 3207:  return vol;
 21096   0173FA  0E00               	movlw	0
 21097   0173FC  6E02               	movwf	(?_get_ldnumber+1)^(0+1280),c
 21098   0173FE  0E00               	movlw	0
 21099   017400  6E01               	movwf	?_get_ldnumber^(0+1280),c
 21100   017402  0012               	return		;funcret
 21101   017404                     __end_of_get_ldnumber:
 21102                           	callstack 0
 21103                           
 21104 ;; *************** function _find_volume *****************
 21105 ;; Defined at:
 21106 ;;		line 3331 in file "fatfs/ff.c"
 21107 ;; Parameters:    Size  Location     Type
 21108 ;;  fs              2   24[BANK6 ] PTR struct .
 21109 ;;		 -> fs(560), NULL(0), 
 21110 ;;  part            2   26[BANK6 ] unsigned int 
 21111 ;; Auto vars:     Size  Location     Type
 21112 ;;  mbr_pt         16   34[BANK6 ] unsigned long [4]
 21113 ;;  i               2   52[BANK6 ] unsigned int 
 21114 ;;  fmt             2   50[BANK6 ] unsigned int 
 21115 ;; Return value:  Size  Location     Type
 21116 ;;                  2   24[BANK6 ] unsigned int 
 21117 ;; Registers used:
 21118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21119 ;; Tracked objects:
 21120 ;;		On entry : 3F/6
 21121 ;;		On exit  : 3F/6
 21122 ;;		Unchanged: 0/0
 21123 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21124 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21125 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21126 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21127 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21128 ;;Total ram usage:       30 bytes
 21129 ;; Hardware stack levels used: 1
 21130 ;; Hardware stack levels required when called: 14
 21131 ;; This function calls:
 21132 ;;		_check_fs
 21133 ;;		_ld_dword
 21134 ;; This function is called by:
 21135 ;;		_mount_volume
 21136 ;; This function uses a non-reentrant model
 21137 ;;
 21138                           
 21139                           	psect	text30
 21140   016E54                     __ptext30:
 21141                           	callstack 0
 21142   016E54                     _find_volume:
 21143                           	callstack 109
 21144                           
 21145                           ; BSR set to: 6
 21146                           ;fatfs/ff.c: 3332:  FATFS* fs,;fatfs/ff.c: 3333:  UINT part;fatfs/ff.c: 3335: {;fatfs/ff
      +                          .c: 3336:  UINT fmt, i;;fatfs/ff.c: 3337:  DWORD mbr_pt[4];;fatfs/ff.c: 3340:  fmt = che
      +                          ck_fs(fs, 0);
 21147                           
 21148                           ;incstack = 0
 21149   016E54  C618  F60A         	movff	find_volume@fs,check_fs@fs
 21150   016E58  C619  F60B         	movff	find_volume@fs+1,check_fs@fs+1
 21151   016E5C  0E00               	movlw	0
 21152   016E5E  6F0C               	movwf	check_fs@sect& (0+255),b
 21153   016E60  0E00               	movlw	0
 21154   016E62  6F0D               	movwf	(check_fs@sect+1)& (0+255),b
 21155   016E64  0E00               	movlw	0
 21156   016E66  6F0E               	movwf	(check_fs@sect+2)& (0+255),b
 21157   016E68  0E00               	movlw	0
 21158   016E6A  6F0F               	movwf	(check_fs@sect+3)& (0+255),b
 21159   016E6C  EC0D  F0AE         	call	_check_fs	;wreg free
 21160   016E70  C60A  F632         	movff	?_check_fs,find_volume@fmt
 21161   016E74  C60B  F633         	movff	?_check_fs+1,find_volume@fmt+1
 21162                           
 21163                           ; BSR set to: 6
 21164                           ;fatfs/ff.c: 3341:  if (fmt != 2 && (fmt >= 3 || part == 0)) return fmt;
 21165   016E78  0E02               	movlw	2
 21166   016E7A  1932               	xorwf	find_volume@fmt& (0+255),w,b
 21167   016E7C  1133               	iorwf	(find_volume@fmt+1)& (0+255),w,b
 21168   016E7E  B4D8               	btfsc	status,2,c
 21169   016E80  D00F               	goto	l10807
 21170                           
 21171                           ; BSR set to: 6
 21172   016E82  5133               	movf	(find_volume@fmt+1)& (0+255),w,b
 21173   016E84  E108               	bnz	l531
 21174   016E86  0E03               	movlw	3
 21175   016E88  5D32               	subwf	find_volume@fmt& (0+255),w,b
 21176   016E8A  B0D8               	btfsc	status,0,c
 21177   016E8C  D004               	goto	u13260
 21178                           
 21179                           ; BSR set to: 6
 21180   016E8E  511A               	movf	find_volume@part& (0+255),w,b
 21181   016E90  111B               	iorwf	(find_volume@part+1)& (0+255),w,b
 21182   016E92  A4D8               	btfss	status,2,c
 21183   016E94  D005               	goto	l10807
 21184   016E96                     u13260:
 21185   016E96                     l531:
 21186                           
 21187                           ; BSR set to: 6
 21188   016E96  C632  F618         	movff	find_volume@fmt,?_find_volume
 21189   016E9A  C633  F619         	movff	find_volume@fmt+1,?_find_volume+1
 21190   016E9E  0012               	return	
 21191   016EA0                     l10807:
 21192                           
 21193                           ; BSR set to: 6
 21194                           ;fatfs/ff.c: 3368:  for (i = 0; i < 4; i++) {
 21195   016EA0  0E00               	movlw	0
 21196   016EA2  6F35               	movwf	(find_volume@i+1)& (0+255),b
 21197   016EA4  0E00               	movlw	0
 21198   016EA6  6F34               	movwf	find_volume@i& (0+255),b
 21199   016EA8                     l10813:
 21200                           
 21201                           ; BSR set to: 6
 21202                           ;fatfs/ff.c: 3369:   mbr_pt[i] = ld_dword(fs->win + 446 + i * 16 + 8);
 21203   016EA8  C634  F61C         	movff	find_volume@i,??_find_volume
 21204   016EAC  C635  F61D         	movff	find_volume@i+1,??_find_volume+1
 21205   016EB0  3B1C               	swapf	??_find_volume& (0+255),f,b
 21206   016EB2  3B1D               	swapf	(??_find_volume+1)& (0+255),f,b
 21207   016EB4  0EF0               	movlw	240
 21208   016EB6  171D               	andwf	(??_find_volume+1)& (0+255),f,b
 21209   016EB8  511C               	movf	??_find_volume& (0+255),w,b
 21210   016EBA  0B0F               	andlw	15
 21211   016EBC  131D               	iorwf	(??_find_volume+1)& (0+255),f,b
 21212   016EBE  0EF0               	movlw	240
 21213   016EC0  171C               	andwf	??_find_volume& (0+255),f,b
 21214   016EC2  511C               	movf	??_find_volume& (0+255),w,b
 21215   016EC4  2518               	addwf	find_volume@fs& (0+255),w,b
 21216   016EC6  6F1E               	movwf	(??_find_volume+2)& (0+255),b
 21217   016EC8  511D               	movf	(??_find_volume+1)& (0+255),w,b
 21218   016ECA  2119               	addwfc	(find_volume@fs+1)& (0+255),w,b
 21219   016ECC  6F1F               	movwf	(??_find_volume+3)& (0+255),b
 21220   016ECE  0EF6               	movlw	246
 21221   016ED0  251E               	addwf	(??_find_volume+2)& (0+255),w,b
 21222   016ED2  6E01               	movwf	ld_dword@ptr^(0+1280),c
 21223   016ED4  0E01               	movlw	1
 21224   016ED6  211F               	addwfc	(??_find_volume+3)& (0+255),w,b
 21225   016ED8  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 21226   016EDA  ECDE  F0C4         	call	_ld_dword	;wreg free
 21227   016EDE  0E22               	movlw	low find_volume@mbr_pt
 21228   016EE0  6F20               	movwf	(??_find_volume+4)& (0+255),b
 21229   016EE2  0E06               	movlw	high find_volume@mbr_pt
 21230   016EE4  6F21               	movwf	(??_find_volume+5)& (0+255),b
 21231   016EE6  90D8               	bcf	status,0,c
 21232   016EE8  3534               	rlcf	find_volume@i& (0+255),w,b
 21233   016EEA  6ED9               	movwf	fsr2l,c
 21234   016EEC  3535               	rlcf	(find_volume@i+1)& (0+255),w,b
 21235   016EEE  6EDA               	movwf	fsr2h,c
 21236   016EF0  90D8               	bcf	status,0,c
 21237   016EF2  36D9               	rlcf	fsr2l,f,c
 21238   016EF4  36DA               	rlcf	fsr2h,f,c
 21239   016EF6  5120               	movf	(??_find_volume+4)& (0+255),w,b
 21240   016EF8  26D9               	addwf	fsr2l,f,c
 21241   016EFA  5121               	movf	(??_find_volume+5)& (0+255),w,b
 21242   016EFC  22DA               	addwfc	fsr2h,f,c
 21243   016EFE  C501  F4DE         	movff	?_ld_dword,postinc2
 21244   016F02  C502  F4DE         	movff	?_ld_dword+1,postinc2
 21245   016F06  C503  F4DE         	movff	?_ld_dword+2,postinc2
 21246   016F0A  C504  F4DE         	movff	?_ld_dword+3,postinc2
 21247                           
 21248                           ; BSR set to: 6
 21249                           ;fatfs/ff.c: 3370:  }
 21250   016F0E  4B34               	infsnz	find_volume@i& (0+255),f,b
 21251   016F10  2B35               	incf	(find_volume@i+1)& (0+255),f,b
 21252                           
 21253                           ; BSR set to: 6
 21254   016F12  5135               	movf	(find_volume@i+1)& (0+255),w,b
 21255   016F14  E104               	bnz	u13270
 21256   016F16  0E04               	movlw	4
 21257   016F18  5D34               	subwf	find_volume@i& (0+255),w,b
 21258   016F1A  A0D8               	btfss	status,0,c
 21259   016F1C  D7C5               	goto	l10813
 21260   016F1E                     u13270:
 21261                           
 21262                           ; BSR set to: 6
 21263                           ;fatfs/ff.c: 3371:  i = part ? part - 1 : 0;
 21264   016F1E  511A               	movf	find_volume@part& (0+255),w,b
 21265   016F20  111B               	iorwf	(find_volume@part+1)& (0+255),w,b
 21266   016F22  A4D8               	btfss	status,2,c
 21267   016F24  D005               	goto	l10823
 21268                           
 21269                           ; BSR set to: 6
 21270   016F26  0E00               	movlw	0
 21271   016F28  6F35               	movwf	(find_volume@i+1)& (0+255),b
 21272   016F2A  0E00               	movlw	0
 21273   016F2C  6F34               	movwf	find_volume@i& (0+255),b
 21274   016F2E  D006               	goto	l10825
 21275   016F30                     l10823:
 21276                           
 21277                           ; BSR set to: 6
 21278   016F30  0EFF               	movlw	255
 21279   016F32  251A               	addwf	find_volume@part& (0+255),w,b
 21280   016F34  6F34               	movwf	find_volume@i& (0+255),b
 21281   016F36  0EFF               	movlw	255
 21282   016F38  211B               	addwfc	(find_volume@part+1)& (0+255),w,b
 21283   016F3A  6F35               	movwf	(find_volume@i+1)& (0+255),b
 21284   016F3C                     l10825:
 21285                           
 21286                           ; BSR set to: 6
 21287                           ;fatfs/ff.c: 3373:   fmt = mbr_pt[i] ? check_fs(fs, mbr_pt[i]) : 3;
 21288   016F3C  0E22               	movlw	low find_volume@mbr_pt
 21289   016F3E  6F1C               	movwf	??_find_volume& (0+255),b
 21290   016F40  0E06               	movlw	high find_volume@mbr_pt
 21291   016F42  6F1D               	movwf	(??_find_volume+1)& (0+255),b
 21292   016F44  90D8               	bcf	status,0,c
 21293   016F46  3534               	rlcf	find_volume@i& (0+255),w,b
 21294   016F48  6ED9               	movwf	fsr2l,c
 21295   016F4A  3535               	rlcf	(find_volume@i+1)& (0+255),w,b
 21296   016F4C  6EDA               	movwf	fsr2h,c
 21297   016F4E  90D8               	bcf	status,0,c
 21298   016F50  36D9               	rlcf	fsr2l,f,c
 21299   016F52  36DA               	rlcf	fsr2h,f,c
 21300   016F54  511C               	movf	??_find_volume& (0+255),w,b
 21301   016F56  26D9               	addwf	fsr2l,f,c
 21302   016F58  511D               	movf	(??_find_volume+1)& (0+255),w,b
 21303   016F5A  22DA               	addwfc	fsr2h,f,c
 21304   016F5C  50DE               	movf	postinc2,w,c
 21305   016F5E  10DE               	iorwf	postinc2,w,c
 21306   016F60  10DE               	iorwf	postinc2,w,c
 21307   016F62  10DE               	iorwf	postinc2,w,c
 21308   016F64  A4D8               	btfss	status,2,c
 21309   016F66  D005               	goto	l10829
 21310                           
 21311                           ; BSR set to: 6
 21312   016F68  0E00               	movlw	0
 21313   016F6A  6F33               	movwf	(find_volume@fmt+1)& (0+255),b
 21314   016F6C  0E03               	movlw	3
 21315   016F6E  6F32               	movwf	find_volume@fmt& (0+255),b
 21316   016F70  D022               	goto	l10831
 21317   016F72                     l10829:
 21318                           
 21319                           ; BSR set to: 6
 21320   016F72  C618  F60A         	movff	find_volume@fs,check_fs@fs
 21321   016F76  C619  F60B         	movff	find_volume@fs+1,check_fs@fs+1
 21322   016F7A  0E22               	movlw	low find_volume@mbr_pt
 21323   016F7C  6F1C               	movwf	??_find_volume& (0+255),b
 21324   016F7E  0E06               	movlw	high find_volume@mbr_pt
 21325   016F80  6F1D               	movwf	(??_find_volume+1)& (0+255),b
 21326   016F82  90D8               	bcf	status,0,c
 21327   016F84  3534               	rlcf	find_volume@i& (0+255),w,b
 21328   016F86  6ED9               	movwf	fsr2l,c
 21329   016F88  3535               	rlcf	(find_volume@i+1)& (0+255),w,b
 21330   016F8A  6EDA               	movwf	fsr2h,c
 21331   016F8C  90D8               	bcf	status,0,c
 21332   016F8E  36D9               	rlcf	fsr2l,f,c
 21333   016F90  36DA               	rlcf	fsr2h,f,c
 21334   016F92  511C               	movf	??_find_volume& (0+255),w,b
 21335   016F94  26D9               	addwf	fsr2l,f,c
 21336   016F96  511D               	movf	(??_find_volume+1)& (0+255),w,b
 21337   016F98  22DA               	addwfc	fsr2h,f,c
 21338   016F9A  C4DE F60C          	movff	postinc2,check_fs@sect
 21339   016F9E  C4DE F60D          	movff	postinc2,check_fs@sect+1
 21340   016FA2  C4DE F60E          	movff	postinc2,check_fs@sect+2
 21341   016FA6  C4DE F60F          	movff	postinc2,check_fs@sect+3
 21342   016FAA  EC0D  F0AE         	call	_check_fs	;wreg free
 21343   016FAE  C60A  F632         	movff	?_check_fs,find_volume@fmt
 21344   016FB2  C60B  F633         	movff	?_check_fs+1,find_volume@fmt+1
 21345   016FB6                     l10831:
 21346                           
 21347                           ; BSR set to: 6
 21348                           ;fatfs/ff.c: 3374:  } while (part == 0 && fmt >= 2 && ++i < 4);
 21349   016FB6  511A               	movf	find_volume@part& (0+255),w,b
 21350   016FB8  111B               	iorwf	(find_volume@part+1)& (0+255),w,b
 21351   016FBA  A4D8               	btfss	status,2,c
 21352   016FBC  D76C               	goto	u13260
 21353                           
 21354                           ; BSR set to: 6
 21355   016FBE  5133               	movf	(find_volume@fmt+1)& (0+255),w,b
 21356   016FC0  E104               	bnz	u13310
 21357   016FC2  0E02               	movlw	2
 21358   016FC4  5D32               	subwf	find_volume@fmt& (0+255),w,b
 21359   016FC6  A0D8               	btfss	status,0,c
 21360   016FC8  D766               	goto	u13260
 21361   016FCA                     u13310:
 21362                           
 21363                           ; BSR set to: 6
 21364   016FCA  4B34               	infsnz	find_volume@i& (0+255),f,b
 21365   016FCC  2B35               	incf	(find_volume@i+1)& (0+255),f,b
 21366   016FCE  5135               	movf	(find_volume@i+1)& (0+255),w,b
 21367   016FD0  E105               	bnz	u13320
 21368   016FD2  0E04               	movlw	4
 21369   016FD4  5D34               	subwf	find_volume@i& (0+255),w,b
 21370   016FD6  B0D8               	btfsc	status,0,c
 21371   016FD8  D75E               	goto	u13260
 21372   016FDA  D7B0               	goto	l10825
 21373   016FDC                     u13320:
 21374   016FDC  D75C               	goto	u13260
 21375   016FDE                     __end_of_find_volume:
 21376                           	callstack 0
 21377                           
 21378 ;; *************** function _check_fs *****************
 21379 ;; Defined at:
 21380 ;;		line 3291 in file "fatfs/ff.c"
 21381 ;; Parameters:    Size  Location     Type
 21382 ;;  fs              2   10[BANK6 ] PTR struct .
 21383 ;;		 -> fs(560), NULL(0), 
 21384 ;;  sect            4   12[BANK6 ] unsigned long 
 21385 ;; Auto vars:     Size  Location     Type
 21386 ;;  w               2   21[BANK6 ] unsigned short 
 21387 ;;  sign            2   19[BANK6 ] unsigned short 
 21388 ;;  b               1   23[BANK6 ] unsigned char 
 21389 ;; Return value:  Size  Location     Type
 21390 ;;                  2   10[BANK6 ] unsigned int 
 21391 ;; Registers used:
 21392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21393 ;; Tracked objects:
 21394 ;;		On entry : 3F/6
 21395 ;;		On exit  : 3F/6
 21396 ;;		Unchanged: 0/0
 21397 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21398 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21399 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21400 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21401 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21402 ;;Total ram usage:       14 bytes
 21403 ;; Hardware stack levels used: 1
 21404 ;; Hardware stack levels required when called: 13
 21405 ;; This function calls:
 21406 ;;		_ld_dword
 21407 ;;		_ld_word
 21408 ;;		_memcmp
 21409 ;;		_move_window
 21410 ;; This function is called by:
 21411 ;;		_find_volume
 21412 ;; This function uses a non-reentrant model
 21413 ;;
 21414                           
 21415                           	psect	text31
 21416   015C1A                     __ptext31:
 21417                           	callstack 0
 21418   015C1A                     _check_fs:
 21419                           	callstack 109
 21420                           
 21421                           ; BSR set to: 6
 21422                           ;fatfs/ff.c: 3292:  FATFS* fs,;fatfs/ff.c: 3293:  LBA_t sect;fatfs/ff.c: 3295: {;fatfs/f
      +                          f.c: 3296:  WORD w, sign;;fatfs/ff.c: 3297:  BYTE b;;fatfs/ff.c: 3300:  fs->wflag = 0; f
      +                          s->winsect = (LBA_t)0 - 1;
 21423                           
 21424                           ; BSR set to: 6
 21425                           ;incstack = 0
 21426   015C1A  EE20 F004          	lfsr	2,4
 21427   015C1E  510A               	movf	check_fs@fs& (0+255),w,b
 21428   015C20  26D9               	addwf	fsr2l,f,c
 21429   015C22  510B               	movf	(check_fs@fs+1)& (0+255),w,b
 21430   015C24  22DA               	addwfc	fsr2h,f,c
 21431   015C26  6ADF               	clrf	indf2,c
 21432   015C28  EE20 F02C          	lfsr	2,44
 21433   015C2C  510A               	movf	check_fs@fs& (0+255),w,b
 21434   015C2E  26D9               	addwf	fsr2l,f,c
 21435   015C30  510B               	movf	(check_fs@fs+1)& (0+255),w,b
 21436   015C32  22DA               	addwfc	fsr2h,f,c
 21437   015C34  0EFF               	movlw	255
 21438   015C36  6EDE               	movwf	postinc2,c
 21439   015C38  0EFF               	movlw	255
 21440   015C3A  6EDE               	movwf	postinc2,c
 21441   015C3C  0EFF               	movlw	255
 21442   015C3E  6EDE               	movwf	postinc2,c
 21443   015C40  0EFF               	movlw	255
 21444   015C42  6EDD               	movwf	postdec2,c
 21445                           
 21446                           ; BSR set to: 6
 21447                           ;fatfs/ff.c: 3301:  if (move_window(fs, sect) != FR_OK) return 4;
 21448   015C44  C60A  F600         	movff	check_fs@fs,move_window@fs
 21449   015C48  C60B  F601         	movff	check_fs@fs+1,move_window@fs+1
 21450   015C4C  C60C  F602         	movff	check_fs@sect,move_window@sect
 21451   015C50  C60D  F603         	movff	check_fs@sect+1,move_window@sect+1
 21452   015C54  C60E  F604         	movff	check_fs@sect+2,move_window@sect+2
 21453   015C58  C60F  F605         	movff	check_fs@sect+3,move_window@sect+3
 21454   015C5C  EC23  F0C4         	call	_move_window	;wreg free
 21455   015C60  0900               	iorlw	0
 21456   015C62  B4D8               	btfsc	status,2,c
 21457   015C64  D006               	goto	l10401
 21458                           
 21459                           ; BSR set to: 5
 21460   015C66  0E00               	movlw	0
 21461   015C68  0106               	movlb	6	; () banked
 21462   015C6A  6F0B               	movwf	(?_check_fs+1)& (0+255),b
 21463   015C6C  0E04               	movlw	4
 21464   015C6E  6F0A               	movwf	?_check_fs& (0+255),b
 21465   015C70  0012               	return	
 21466   015C72                     l10401:
 21467                           
 21468                           ; BSR set to: 5
 21469                           ;fatfs/ff.c: 3302:  sign = ld_word(fs->win + 510);
 21470   015C72  0E2E               	movlw	46
 21471   015C74  0106               	movlb	6	; () banked
 21472   015C76  250A               	addwf	check_fs@fs& (0+255),w,b
 21473   015C78  6E01               	movwf	ld_word@ptr^(0+1280),c
 21474   015C7A  0E02               	movlw	2
 21475   015C7C  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21476   015C7E  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21477   015C80  EC35  F0CE         	call	_ld_word	;wreg free
 21478   015C84  C501  F613         	movff	?_ld_word,check_fs@sign
 21479   015C88  C502  F614         	movff	?_ld_word+1,check_fs@sign+1
 21480                           
 21481                           ;fatfs/ff.c: 3306:  b = fs->win[0];
 21482   015C8C  0106               	movlb	6	; () banked
 21483   015C8E  EE20 F030          	lfsr	2,48
 21484   015C92  510A               	movf	check_fs@fs& (0+255),w,b
 21485   015C94  26D9               	addwf	fsr2l,f,c
 21486   015C96  510B               	movf	(check_fs@fs+1)& (0+255),w,b
 21487   015C98  22DA               	addwfc	fsr2h,f,c
 21488   015C9A  50DF               	movf	indf2,w,c
 21489   015C9C  6F17               	movwf	check_fs@b& (0+255),b
 21490                           
 21491                           ; BSR set to: 6
 21492                           ;fatfs/ff.c: 3307:  if (b == 0xEB || b == 0xE9 || b == 0xE8) {
 21493   015C9E  0EEB               	movlw	235
 21494   015CA0  1917               	xorwf	check_fs@b& (0+255),w,b
 21495   015CA2  B4D8               	btfsc	status,2,c
 21496   015CA4  D008               	goto	u12470
 21497                           
 21498                           ; BSR set to: 6
 21499   015CA6  0EE9               	movlw	233
 21500   015CA8  1917               	xorwf	check_fs@b& (0+255),w,b
 21501   015CAA  B4D8               	btfsc	status,2,c
 21502   015CAC  D004               	goto	u12470
 21503                           
 21504                           ; BSR set to: 6
 21505   015CAE  0EE8               	movlw	232
 21506   015CB0  1917               	xorwf	check_fs@b& (0+255),w,b
 21507   015CB2  A4D8               	btfss	status,2,c
 21508   015CB4  D0AD               	goto	l10449
 21509   015CB6                     u12470:
 21510                           
 21511                           ; BSR set to: 6
 21512                           ;fatfs/ff.c: 3308:   if (sign == 0xAA55 && !memcmp(fs->win + 82, "FAT32   ", 8)) {
 21513   015CB6  0E55               	movlw	85
 21514   015CB8  1913               	xorwf	check_fs@sign& (0+255),w,b
 21515   015CBA  E11E               	bnz	l10419
 21516   015CBC  0EAA               	movlw	170
 21517   015CBE  1914               	xorwf	(check_fs@sign+1)& (0+255),w,b
 21518   015CC0  A4D8               	btfss	status,2,c
 21519   015CC2  D01A               	goto	l10419
 21520                           
 21521                           ; BSR set to: 6
 21522   015CC4  0E82               	movlw	130
 21523   015CC6  250A               	addwf	check_fs@fs& (0+255),w,b
 21524   015CC8  6E01               	movwf	memcmp@vl^(0+1280),c
 21525   015CCA  0E00               	movlw	0
 21526   015CCC  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21527   015CCE  6E02               	movwf	(memcmp@vl+1)^(0+1280),c
 21528   015CD0  0EB8               	movlw	low STR_29
 21529   015CD2  6E03               	movwf	memcmp@vr^(0+1280),c
 21530   015CD4  0EFF               	movlw	high STR_29
 21531   015CD6  6E04               	movwf	(memcmp@vr+1)^(0+1280),c
 21532   015CD8  0E00               	movlw	0
 21533   015CDA  6E06               	movwf	(memcmp@n+1)^(0+1280),c
 21534   015CDC  0E08               	movlw	8
 21535   015CDE  6E05               	movwf	memcmp@n^(0+1280),c
 21536   015CE0  EC43  F0C6         	call	_memcmp	;wreg free
 21537   015CE4  5001               	movf	?_memcmp^(0+1280),w,c
 21538   015CE6  1002               	iorwf	(?_memcmp+1)^(0+1280),w,c
 21539   015CE8  A4D8               	btfss	status,2,c
 21540   015CEA  D006               	goto	l10419
 21541   015CEC                     u12490:
 21542                           
 21543                           ;fatfs/ff.c: 3309:    return 0;
 21544   015CEC  0E00               	movlw	0
 21545   015CEE  0106               	movlb	6	; () banked
 21546   015CF0  6F0B               	movwf	(?_check_fs+1)& (0+255),b
 21547   015CF2  0E00               	movlw	0
 21548   015CF4  6F0A               	movwf	?_check_fs& (0+255),b
 21549   015CF6  0012               	return	
 21550   015CF8                     l10419:
 21551                           
 21552                           ;fatfs/ff.c: 3312:   w = ld_word(fs->win + 11);
 21553   015CF8  0E3B               	movlw	59
 21554   015CFA  0106               	movlb	6	; () banked
 21555   015CFC  250A               	addwf	check_fs@fs& (0+255),w,b
 21556   015CFE  6E01               	movwf	ld_word@ptr^(0+1280),c
 21557   015D00  0E00               	movlw	0
 21558   015D02  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21559   015D04  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21560   015D06  EC35  F0CE         	call	_ld_word	;wreg free
 21561   015D0A  C501  F615         	movff	?_ld_word,check_fs@w
 21562   015D0E  C502  F616         	movff	?_ld_word+1,check_fs@w+1
 21563                           
 21564                           ;fatfs/ff.c: 3313:   b = fs->win[13];
 21565   015D12  0106               	movlb	6	; () banked
 21566   015D14  EE20 F03D          	lfsr	2,61
 21567   015D18  510A               	movf	check_fs@fs& (0+255),w,b
 21568   015D1A  26D9               	addwf	fsr2l,f,c
 21569   015D1C  510B               	movf	(check_fs@fs+1)& (0+255),w,b
 21570   015D1E  22DA               	addwfc	fsr2h,f,c
 21571   015D20  50DF               	movf	indf2,w,c
 21572   015D22  6F17               	movwf	check_fs@b& (0+255),b
 21573                           
 21574                           ; BSR set to: 6
 21575                           ;fatfs/ff.c: 3314:   if ((w & (w - 1)) == 0 && w >= 512 && w <= 512
 21576   015D24  0EFF               	movlw	255
 21577   015D26  2515               	addwf	check_fs@w& (0+255),w,b
 21578   015D28  6F10               	movwf	??_check_fs& (0+255),b
 21579   015D2A  0EFF               	movlw	255
 21580   015D2C  2116               	addwfc	(check_fs@w+1)& (0+255),w,b
 21581   015D2E  6F11               	movwf	(??_check_fs+1)& (0+255),b
 21582   015D30  5115               	movf	check_fs@w& (0+255),w,b
 21583   015D32  1710               	andwf	??_check_fs& (0+255),f,b
 21584   015D34  5116               	movf	(check_fs@w+1)& (0+255),w,b
 21585   015D36  1711               	andwf	(??_check_fs+1)& (0+255),f,b
 21586   015D38  5110               	movf	??_check_fs& (0+255),w,b
 21587   015D3A  1111               	iorwf	(??_check_fs+1)& (0+255),w,b
 21588   015D3C  A4D8               	btfss	status,2,c
 21589   015D3E  D068               	goto	l10449
 21590                           
 21591                           ; BSR set to: 6
 21592   015D40  0E02               	movlw	2
 21593   015D42  5D16               	subwf	(check_fs@w+1)& (0+255),w,b
 21594   015D44  A0D8               	btfss	status,0,c
 21595   015D46  D064               	goto	l10449
 21596                           
 21597                           ; BSR set to: 6
 21598   015D48  0515               	decf	check_fs@w& (0+255),w,b
 21599   015D4A  0E02               	movlw	2
 21600   015D4C  5916               	subwfb	(check_fs@w+1)& (0+255),w,b
 21601   015D4E  B0D8               	btfsc	status,0,c
 21602   015D50  D05F               	goto	l10449
 21603                           
 21604                           ; BSR set to: 6
 21605   015D52  5117               	movf	check_fs@b& (0+255),w,b
 21606   015D54  B4D8               	btfsc	status,2,c
 21607   015D56  D05C               	goto	l10449
 21608                           
 21609                           ; BSR set to: 6
 21610   015D58  0517               	decf	check_fs@b& (0+255),w,b
 21611   015D5A  1517               	andwf	check_fs@b& (0+255),w,b
 21612   015D5C  0900               	iorlw	0
 21613   015D5E  A4D8               	btfss	status,2,c
 21614   015D60  D057               	goto	l10449
 21615                           
 21616                           ; BSR set to: 6
 21617   015D62  0E3E               	movlw	62
 21618   015D64  250A               	addwf	check_fs@fs& (0+255),w,b
 21619   015D66  6E01               	movwf	ld_word@ptr^(0+1280),c
 21620   015D68  0E00               	movlw	0
 21621   015D6A  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21622   015D6C  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21623   015D6E  EC35  F0CE         	call	_ld_word	;wreg free
 21624   015D72  5001               	movf	?_ld_word^(0+1280),w,c
 21625   015D74  1002               	iorwf	(?_ld_word+1)^(0+1280),w,c
 21626   015D76  B4D8               	btfsc	status,2,c
 21627   015D78  D04B               	goto	l10449
 21628   015D7A  0106               	movlb	6	; () banked
 21629   015D7C  EE20 F040          	lfsr	2,64
 21630   015D80  510A               	movf	check_fs@fs& (0+255),w,b
 21631   015D82  26D9               	addwf	fsr2l,f,c
 21632   015D84  510B               	movf	(check_fs@fs+1)& (0+255),w,b
 21633   015D86  22DA               	addwfc	fsr2h,f,c
 21634   015D88  50DF               	movf	indf2,w,c
 21635   015D8A  6F10               	movwf	??_check_fs& (0+255),b
 21636   015D8C  0EFF               	movlw	255
 21637   015D8E  2510               	addwf	??_check_fs& (0+255),w,b
 21638   015D90  6F11               	movwf	(??_check_fs+1)& (0+255),b
 21639   015D92  6B12               	clrf	(??_check_fs+2)& (0+255),b
 21640   015D94  0EFF               	movlw	255
 21641   015D96  2312               	addwfc	(??_check_fs+2)& (0+255),f,b
 21642   015D98  5112               	movf	(??_check_fs+2)& (0+255),w,b
 21643   015D9A  E13A               	bnz	l10449
 21644   015D9C  0E02               	movlw	2
 21645   015D9E  5D11               	subwf	(??_check_fs+1)& (0+255),w,b
 21646   015DA0  B0D8               	btfsc	status,0,c
 21647   015DA2  D036               	goto	l10449
 21648                           
 21649                           ; BSR set to: 6
 21650   015DA4  0E41               	movlw	65
 21651   015DA6  250A               	addwf	check_fs@fs& (0+255),w,b
 21652   015DA8  6E01               	movwf	ld_word@ptr^(0+1280),c
 21653   015DAA  0E00               	movlw	0
 21654   015DAC  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21655   015DAE  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21656   015DB0  EC35  F0CE         	call	_ld_word	;wreg free
 21657   015DB4  5001               	movf	?_ld_word^(0+1280),w,c
 21658   015DB6  1002               	iorwf	(?_ld_word+1)^(0+1280),w,c
 21659   015DB8  B4D8               	btfsc	status,2,c
 21660   015DBA  D02A               	goto	l10449
 21661   015DBC  0E43               	movlw	67
 21662   015DBE  0106               	movlb	6	; () banked
 21663   015DC0  250A               	addwf	check_fs@fs& (0+255),w,b
 21664   015DC2  6E01               	movwf	ld_word@ptr^(0+1280),c
 21665   015DC4  0E00               	movlw	0
 21666   015DC6  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21667   015DC8  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21668   015DCA  EC35  F0CE         	call	_ld_word	;wreg free
 21669   015DCE  5002               	movf	(?_ld_word+1)^(0+1280),w,c
 21670   015DD0  E112               	bnz	l10443
 21671   015DD2  0E80               	movlw	128
 21672   015DD4  5C01               	subwf	?_ld_word^(0+1280),w,c
 21673   015DD6  B0D8               	btfsc	status,0,c
 21674   015DD8  D00E               	goto	u12590
 21675   015DDA  0E50               	movlw	80
 21676   015DDC  0106               	movlb	6	; () banked
 21677   015DDE  250A               	addwf	check_fs@fs& (0+255),w,b
 21678   015DE0  6E01               	movwf	ld_dword@ptr^(0+1280),c
 21679   015DE2  0E00               	movlw	0
 21680   015DE4  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21681   015DE6  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 21682   015DE8  ECDE  F0C4         	call	_ld_dword	;wreg free
 21683   015DEC  5004               	movf	(?_ld_dword+3)^(0+1280),w,c
 21684   015DEE  E103               	bnz	u12590
 21685   015DF0  0403               	decf	(?_ld_dword+2)^(0+1280),w,c
 21686   015DF2  A0D8               	btfss	status,0,c
 21687   015DF4  D00D               	goto	l10449
 21688   015DF6                     u12590:
 21689   015DF6                     l10443:
 21690   015DF6  0E46               	movlw	70
 21691   015DF8  0106               	movlb	6	; () banked
 21692   015DFA  250A               	addwf	check_fs@fs& (0+255),w,b
 21693   015DFC  6E01               	movwf	ld_word@ptr^(0+1280),c
 21694   015DFE  0E00               	movlw	0
 21695   015E00  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21696   015E02  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21697   015E04  EC35  F0CE         	call	_ld_word	;wreg free
 21698   015E08  5001               	movf	?_ld_word^(0+1280),w,c
 21699   015E0A  1002               	iorwf	(?_ld_word+1)^(0+1280),w,c
 21700   015E0C  A4D8               	btfss	status,2,c
 21701   015E0E  D76E               	goto	u12490
 21702   015E10                     l10449:
 21703                           
 21704                           ;fatfs/ff.c: 3324:  return sign == 0xAA55 ? 2 : 3;
 21705   015E10  0E55               	movlw	85
 21706   015E12  0106               	movlb	6	; () banked
 21707   015E14  1913               	xorwf	check_fs@sign& (0+255),w,b
 21708   015E16  E104               	bnz	u12610
 21709   015E18  0EAA               	movlw	170
 21710   015E1A  1914               	xorwf	(check_fs@sign+1)& (0+255),w,b
 21711   015E1C  B4D8               	btfsc	status,2,c
 21712   015E1E  D005               	goto	l10453
 21713   015E20                     u12610:
 21714                           
 21715                           ; BSR set to: 6
 21716   015E20  0E00               	movlw	0
 21717   015E22  6F0B               	movwf	(?_check_fs+1)& (0+255),b
 21718   015E24  0E03               	movlw	3
 21719   015E26  6F0A               	movwf	?_check_fs& (0+255),b
 21720   015E28  0012               	return	
 21721   015E2A                     l10453:
 21722                           
 21723                           ; BSR set to: 6
 21724   015E2A  0E00               	movlw	0
 21725   015E2C  6F0B               	movwf	(?_check_fs+1)& (0+255),b
 21726   015E2E  0E02               	movlw	2
 21727   015E30  6F0A               	movwf	?_check_fs& (0+255),b
 21728                           
 21729                           ; BSR set to: 6
 21730   015E32  0012               	return		;funcret
 21731   015E34                     __end_of_check_fs:
 21732                           	callstack 0
 21733                           
 21734 ;; *************** function _memcmp *****************
 21735 ;; Defined at:
 21736 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcmp.c"
 21737 ;; Parameters:    Size  Location     Type
 21738 ;;  vl              2    0[COMRAM] PTR const void 
 21739 ;;		 -> fs$win(512), tmp_buf(512), fs(560), NULL(0), 
 21740 ;;  vr              2    2[COMRAM] PTR const void 
 21741 ;;		 -> djn$fn(12), fsdir$fn(12), tmp_buf(512), fsdir(40), 
 21742 ;;		 -> f_rename@djn(40), djo$fn(12), f_rename@djo(40), f_mkdir@dj(40), 
 21743 ;;		 -> f_unlink@dj(40), f_stat@dj(40), dj$fn(12), f_open@dj(40), 
 21744 ;;		 -> STR_30(9), 
 21745 ;;  n               2    4[COMRAM] unsigned int 
 21746 ;; Auto vars:     Size  Location     Type
 21747 ;;  r               2   10[COMRAM] PTR const unsigned char 
 21748 ;;		 -> djn$fn(12), fsdir$fn(12), tmp_buf(512), fsdir(40), 
 21749 ;;		 -> f_rename@djn(40), djo$fn(12), f_rename@djo(40), f_mkdir@dj(40), 
 21750 ;;		 -> f_unlink@dj(40), f_stat@dj(40), dj$fn(12), f_open@dj(40), 
 21751 ;;		 -> STR_30(9), 
 21752 ;;  l               2    8[COMRAM] PTR const unsigned char 
 21753 ;;		 -> fs$win(512), tmp_buf(512), fs(560), NULL(0), 
 21754 ;; Return value:  Size  Location     Type
 21755 ;;                  2    0[COMRAM] int 
 21756 ;; Registers used:
 21757 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21758 ;; Tracked objects:
 21759 ;;		On entry : 0/6
 21760 ;;		On exit  : 0/0
 21761 ;;		Unchanged: 0/0
 21762 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21763 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21764 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21766 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21767 ;;Total ram usage:       12 bytes
 21768 ;; Hardware stack levels used: 1
 21769 ;; This function calls:
 21770 ;;		Nothing
 21771 ;; This function is called by:
 21772 ;;		_dir_find
 21773 ;;		_check_fs
 21774 ;;		_mem_init
 21775 ;; This function uses a non-reentrant model
 21776 ;;
 21777                           
 21778                           	psect	text32
 21779   018C86                     __ptext32:
 21780                           	callstack 0
 21781   018C86                     _memcmp:
 21782                           	callstack 121
 21783                           
 21784                           ; BSR set to: 6
 21785                           ;incstack = 0
 21786   018C86  C501  F509         	movff	memcmp@vl,memcmp@l
 21787   018C8A  C502  F50A         	movff	memcmp@vl+1,memcmp@l+1
 21788   018C8E  C503  F50B         	movff	memcmp@vr,memcmp@r
 21789   018C92  C504  F50C         	movff	memcmp@vr+1,memcmp@r+1
 21790   018C96  D007               	goto	l10129
 21791   018C98                     l10127:
 21792   018C98  0605               	decf	memcmp@n^(0+1280),f,c
 21793   018C9A  A0D8               	btfss	status,0,c
 21794   018C9C  0606               	decf	(memcmp@n+1)^(0+1280),f,c
 21795   018C9E  4A09               	infsnz	memcmp@l^(0+1280),f,c
 21796   018CA0  2A0A               	incf	(memcmp@l+1)^(0+1280),f,c
 21797   018CA2  4A0B               	infsnz	memcmp@r^(0+1280),f,c
 21798   018CA4  2A0C               	incf	(memcmp@r+1)^(0+1280),f,c
 21799   018CA6                     l10129:
 21800   018CA6  5005               	movf	memcmp@n^(0+1280),w,c
 21801   018CA8  1006               	iorwf	(memcmp@n+1)^(0+1280),w,c
 21802   018CAA  B4D8               	btfsc	status,2,c
 21803   018CAC  D01A               	goto	u11940
 21804   018CAE  C509  F4D9         	movff	memcmp@l,fsr2l
 21805   018CB2  C50A  F4DA         	movff	memcmp@l+1,fsr2h
 21806   018CB6  50DF               	movf	indf2,w,c
 21807   018CB8  6E07               	movwf	??_memcmp^(0+1280),c
 21808   018CBA  C50B  F4F6         	movff	memcmp@r,tblptrl
 21809   018CBE  C50C  F4F7         	movff	memcmp@r+1,tblptrh
 21810   018CC2  0E00               	movlw	low (__mediumconst shr (0+16))
 21811   018CC4  6EF8               	movwf	tblptru,c
 21812   018CC6  0E24               	movlw	(high __ramtop+-1)
 21813   018CC8  64F7               	cpfsgt	tblptrh,c
 21814   018CCA  D003               	bra	u11937
 21815   018CCC  0008               	tblrd		*
 21816   018CCE  50F5               	movf	tablat,w,c
 21817   018CD0  D005               	bra	u11930
 21818   018CD2                     u11937:
 21819   018CD2  C4F6 F4E9          	movff	tblptrl,fsr0l
 21820   018CD6  C4F7 F4EA          	movff	tblptrh,fsr0h
 21821   018CDA  50EF               	movf	indf0,w,c
 21822   018CDC                     u11930:
 21823   018CDC  1807               	xorwf	??_memcmp^(0+1280),w,c
 21824   018CDE  B4D8               	btfsc	status,2,c
 21825   018CE0  D7DB               	goto	l10127
 21826   018CE2                     u11940:
 21827   018CE2  5005               	movf	memcmp@n^(0+1280),w,c
 21828   018CE4  1006               	iorwf	(memcmp@n+1)^(0+1280),w,c
 21829   018CE6  A4D8               	btfss	status,2,c
 21830   018CE8  D005               	goto	l10137
 21831   018CEA  0E00               	movlw	0
 21832   018CEC  6E02               	movwf	(?_memcmp+1)^(0+1280),c
 21833   018CEE  0E00               	movlw	0
 21834   018CF0  6E01               	movwf	?_memcmp^(0+1280),c
 21835   018CF2  0012               	return	
 21836   018CF4                     l10137:
 21837   018CF4  C509  F4D9         	movff	memcmp@l,fsr2l
 21838   018CF8  C50A  F4DA         	movff	memcmp@l+1,fsr2h
 21839   018CFC  50DF               	movf	indf2,w,c
 21840   018CFE  6E07               	movwf	??_memcmp^(0+1280),c
 21841   018D00  C50B  F4F6         	movff	memcmp@r,tblptrl
 21842   018D04  C50C  F4F7         	movff	memcmp@r+1,tblptrh
 21843   018D08  0E00               	movlw	low (__mediumconst shr (0+16))
 21844   018D0A  6EF8               	movwf	tblptru,c
 21845   018D0C  0E24               	movlw	(high __ramtop+-1)
 21846   018D0E  64F7               	cpfsgt	tblptrh,c
 21847   018D10  D003               	bra	u11967
 21848   018D12  0008               	tblrd		*
 21849   018D14  50F5               	movf	tablat,w,c
 21850   018D16  D005               	bra	u11960
 21851   018D18                     u11967:
 21852   018D18  C4F6 F4E9          	movff	tblptrl,fsr0l
 21853   018D1C  C4F7 F4EA          	movff	tblptrh,fsr0h
 21854   018D20  50EF               	movf	indf0,w,c
 21855   018D22                     u11960:
 21856   018D22  6E08               	movwf	(??_memcmp+1)^(0+1280),c
 21857   018D24  5008               	movf	(??_memcmp+1)^(0+1280),w,c
 21858   018D26  5C07               	subwf	??_memcmp^(0+1280),w,c
 21859   018D28  6E01               	movwf	?_memcmp^(0+1280),c
 21860   018D2A  6A02               	clrf	(?_memcmp+1)^(0+1280),c
 21861   018D2C  A0D8               	btfss	status,0,c
 21862   018D2E  0602               	decf	(?_memcmp+1)^(0+1280),f,c
 21863   018D30  0012               	return		;funcret
 21864   018D32                     __end_of_memcmp:
 21865                           	callstack 0
 21866                           
 21867 ;; *************** function _disk_initialize *****************
 21868 ;; Defined at:
 21869 ;;		line 53 in file "drivers/diskio.c"
 21870 ;; Parameters:    Size  Location     Type
 21871 ;;  pdrv            1    wreg     unsigned char 
 21872 ;; Auto vars:     Size  Location     Type
 21873 ;;  pdrv            1  128[BANK6 ] unsigned char 
 21874 ;;  buf           128    0[BANK6 ] unsigned char [128]
 21875 ;; Return value:  Size  Location     Type
 21876 ;;                  1    wreg      unsigned char 
 21877 ;; Registers used:
 21878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21879 ;; Tracked objects:
 21880 ;;		On entry : 3F/6
 21881 ;;		On exit  : 3C/4
 21882 ;;		Unchanged: 0/0
 21883 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21885 ;;      Locals:         0       0     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21887 ;;      Totals:         0       4     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21888 ;;Total ram usage:      133 bytes
 21889 ;; Hardware stack levels used: 1
 21890 ;; Hardware stack levels required when called: 10
 21891 ;; This function calls:
 21892 ;;		_SDCard_read512
 21893 ;;		_printf
 21894 ;;		_util_hexdump
 21895 ;; This function is called by:
 21896 ;;		_mount_volume
 21897 ;; This function uses a non-reentrant model
 21898 ;;
 21899                           
 21900                           	psect	text33
 21901   017A1E                     __ptext33:
 21902                           	callstack 0
 21903   017A1E                     _disk_initialize:
 21904                           	callstack 113
 21905                           
 21906                           ;incstack = 0
 21907                           ;disk_initialize@pdrv stored from wreg
 21908   017A1E  6F80               	movwf	disk_initialize@pdrv& (0+255),b
 21909                           
 21910                           ;drivers/diskio.c: 58:     if (pdrv != 0) {
 21911                           
 21912                           ;drivers/diskio.c: 53: DSTATUS disk_initialize(BYTE pdrv);drivers/diskio.c: 54: {;driver
      +                          s/diskio.c: 55:     uint8_t buf[128];;drivers/diskio.c: 57:     do { if (debug_flags) pr
      +                          intf ("disk_initialize(%d)...\n\r", pdrv); } while(0);
 21913   017A20  0106               	movlb	6	; () banked
 21914   017A22  5180               	movf	disk_initialize@pdrv& (0+255),w,b
 21915   017A24  B4D8               	btfsc	status,2,c
 21916   017A26  D002               	goto	l29
 21917   017A28                     u12620:
 21918                           
 21919                           ;drivers/diskio.c: 60:         return 0x02;
 21920   017A28  0E02               	movlw	2
 21921   017A2A  0012               	return	
 21922   017A2C                     l29:
 21923                           
 21924                           ; BSR set to: 6
 21925                           ;drivers/diskio.c: 65:     if (SDCard_read512(0, 384, buf, 128) != 0) {
 21926                           
 21927                           ; BSR set to: 6
 21928   017A2C  0E00               	movlw	0
 21929   017A2E  0105               	movlb	5	; () banked
 21930   017A30  6FC7               	movwf	SDCard_read512@addr& (0+255),b
 21931   017A32  0E00               	movlw	0
 21932   017A34  6FC8               	movwf	(SDCard_read512@addr+1)& (0+255),b
 21933   017A36  0E00               	movlw	0
 21934   017A38  6FC9               	movwf	(SDCard_read512@addr+2)& (0+255),b
 21935   017A3A  0E00               	movlw	0
 21936   017A3C  6FCA               	movwf	(SDCard_read512@addr+3)& (0+255),b
 21937   017A3E  0E01               	movlw	1
 21938   017A40  6FCC               	movwf	(SDCard_read512@offs+1)& (0+255),b
 21939   017A42  0E80               	movlw	128
 21940   017A44  6FCB               	movwf	SDCard_read512@offs& (0+255),b
 21941   017A46  0E00               	movlw	low disk_initialize@buf
 21942   017A48  6FCD               	movwf	SDCard_read512@buf& (0+255),b
 21943   017A4A  0E06               	movlw	high disk_initialize@buf
 21944   017A4C  6FCE               	movwf	(SDCard_read512@buf+1)& (0+255),b
 21945   017A4E  0E00               	movlw	0
 21946   017A50  6FD0               	movwf	(SDCard_read512@count+1)& (0+255),b
 21947   017A52  0E80               	movlw	128
 21948   017A54  6FCF               	movwf	SDCard_read512@count& (0+255),b
 21949   017A56  EC1A  F0AF         	call	_SDCard_read512	;wreg free
 21950   017A5A  0105               	movlb	5	; () banked
 21951   017A5C  51C7               	movf	?_SDCard_read512& (0+255),w,b
 21952   017A5E  11C8               	iorwf	(?_SDCard_read512+1)& (0+255),w,b
 21953   017A60  A4D8               	btfss	status,2,c
 21954   017A62  D7E2               	goto	u12620
 21955                           
 21956                           ; BSR set to: 5
 21957                           ;drivers/diskio.c: 72:     if (buf[126] != 0x55 || buf[127] != 0xaa) {
 21958   017A64  0E55               	movlw	85
 21959   017A66  0106               	movlb	6	; () banked
 21960   017A68  197E               	xorwf	(disk_initialize@buf+126)& (0+255),w,b
 21961   017A6A  A4D8               	btfss	status,2,c
 21962   017A6C  D7DD               	goto	u12620
 21963                           
 21964                           ; BSR set to: 6
 21965   017A6E  0EAA               	movlw	170
 21966   017A70  197F               	xorwf	(disk_initialize@buf+127)& (0+255),w,b
 21967   017A72  A4D8               	btfss	status,2,c
 21968   017A74  D7D9               	goto	u12620
 21969                           
 21970                           ; BSR set to: 6
 21971                           ;drivers/diskio.c: 84:     if (buf[66] != 0x01 && buf[66] != 0x04 && buf[66] != 0x06 &&
 21972                           
 21973                           ; BSR set to: 6
 21974   017A76  0542               	decf	(disk_initialize@buf+66)& (0+255),w,b
 21975   017A78  B4D8               	btfsc	status,2,c
 21976   017A7A  D014               	goto	l10509
 21977                           
 21978                           ; BSR set to: 6
 21979   017A7C  0E04               	movlw	4
 21980   017A7E  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 21981   017A80  B4D8               	btfsc	status,2,c
 21982   017A82  D010               	goto	l10509
 21983                           
 21984                           ; BSR set to: 6
 21985   017A84  0E06               	movlw	6
 21986   017A86  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 21987   017A88  B4D8               	btfsc	status,2,c
 21988   017A8A  D00C               	goto	l10509
 21989                           
 21990                           ; BSR set to: 6
 21991   017A8C  0E0B               	movlw	11
 21992   017A8E  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 21993   017A90  B4D8               	btfsc	status,2,c
 21994   017A92  D008               	goto	l10509
 21995                           
 21996                           ; BSR set to: 6
 21997   017A94  0E0C               	movlw	12
 21998   017A96  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 21999   017A98  B4D8               	btfsc	status,2,c
 22000   017A9A  D004               	goto	l10509
 22001                           
 22002                           ; BSR set to: 6
 22003   017A9C  0E0E               	movlw	14
 22004   017A9E  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 22005   017AA0  A4D8               	btfss	status,2,c
 22006   017AA2  D7C2               	goto	u12620
 22007   017AA4                     l10509:
 22008                           
 22009                           ; BSR set to: 6
 22010                           ;drivers/diskio.c: 89:     start_lba = buf[73];
 22011   017AA4  5149               	movf	(disk_initialize@buf+73)& (0+255),w,b
 22012   017AA6  0107               	movlb	7	; () banked
 22013   017AA8  6FD4               	movwf	_start_lba& (0+255),b
 22014   017AAA  6BD5               	clrf	(_start_lba+1)& (0+255),b
 22015   017AAC  6BD6               	clrf	(_start_lba+2)& (0+255),b
 22016   017AAE  6BD7               	clrf	(_start_lba+3)& (0+255),b
 22017                           
 22018                           ; BSR set to: 7
 22019                           ;drivers/diskio.c: 90:     start_lba = (start_lba << 8) | buf[72];
 22020   017AB0  0106               	movlb	6	; () banked
 22021   017AB2  5148               	movf	(disk_initialize@buf+72)& (0+255),w,b
 22022   017AB4  C7D4  F5E5         	movff	_start_lba,??_disk_initialize+1
 22023   017AB8  C7D5  F5E6         	movff	_start_lba+1,??_disk_initialize+2
 22024   017ABC  C7D6  F5E7         	movff	_start_lba+2,??_disk_initialize+3
 22025   017AC0  0105               	movlb	5	; () banked
 22026   017AC2  6BE4               	clrf	??_disk_initialize& (0+255),b
 22027   017AC4  11E4               	iorwf	??_disk_initialize& (0+255),w,b
 22028   017AC6  0107               	movlb	7	; () banked
 22029   017AC8  6FD4               	movwf	_start_lba& (0+255),b
 22030   017ACA  0105               	movlb	5	; () banked
 22031   017ACC  51E5               	movf	(??_disk_initialize+1)& (0+255),w,b
 22032   017ACE  0107               	movlb	7	; () banked
 22033   017AD0  6FD5               	movwf	(_start_lba+1)& (0+255),b
 22034   017AD2  0105               	movlb	5	; () banked
 22035   017AD4  51E6               	movf	(??_disk_initialize+2)& (0+255),w,b
 22036   017AD6  0107               	movlb	7	; () banked
 22037   017AD8  6FD6               	movwf	(_start_lba+2)& (0+255),b
 22038   017ADA  0105               	movlb	5	; () banked
 22039   017ADC  51E7               	movf	(??_disk_initialize+3)& (0+255),w,b
 22040   017ADE  0107               	movlb	7	; () banked
 22041   017AE0  6FD7               	movwf	(_start_lba+3)& (0+255),b
 22042                           
 22043                           ; BSR set to: 7
 22044                           ;drivers/diskio.c: 91:     start_lba = (start_lba << 8) | buf[71];
 22045   017AE2  0106               	movlb	6	; () banked
 22046   017AE4  5147               	movf	(disk_initialize@buf+71)& (0+255),w,b
 22047   017AE6  C7D4  F5E5         	movff	_start_lba,??_disk_initialize+1
 22048   017AEA  C7D5  F5E6         	movff	_start_lba+1,??_disk_initialize+2
 22049   017AEE  C7D6  F5E7         	movff	_start_lba+2,??_disk_initialize+3
 22050   017AF2  0105               	movlb	5	; () banked
 22051   017AF4  6BE4               	clrf	??_disk_initialize& (0+255),b
 22052   017AF6  11E4               	iorwf	??_disk_initialize& (0+255),w,b
 22053   017AF8  0107               	movlb	7	; () banked
 22054   017AFA  6FD4               	movwf	_start_lba& (0+255),b
 22055   017AFC  0105               	movlb	5	; () banked
 22056   017AFE  51E5               	movf	(??_disk_initialize+1)& (0+255),w,b
 22057   017B00  0107               	movlb	7	; () banked
 22058   017B02  6FD5               	movwf	(_start_lba+1)& (0+255),b
 22059   017B04  0105               	movlb	5	; () banked
 22060   017B06  51E6               	movf	(??_disk_initialize+2)& (0+255),w,b
 22061   017B08  0107               	movlb	7	; () banked
 22062   017B0A  6FD6               	movwf	(_start_lba+2)& (0+255),b
 22063   017B0C  0105               	movlb	5	; () banked
 22064   017B0E  51E7               	movf	(??_disk_initialize+3)& (0+255),w,b
 22065   017B10  0107               	movlb	7	; () banked
 22066   017B12  6FD7               	movwf	(_start_lba+3)& (0+255),b
 22067                           
 22068                           ; BSR set to: 7
 22069                           ;drivers/diskio.c: 92:     start_lba = (start_lba << 8) | buf[70];
 22070   017B14  0106               	movlb	6	; () banked
 22071   017B16  5146               	movf	(disk_initialize@buf+70)& (0+255),w,b
 22072   017B18  C7D4  F5E5         	movff	_start_lba,??_disk_initialize+1
 22073   017B1C  C7D5  F5E6         	movff	_start_lba+1,??_disk_initialize+2
 22074   017B20  C7D6  F5E7         	movff	_start_lba+2,??_disk_initialize+3
 22075   017B24  0105               	movlb	5	; () banked
 22076   017B26  6BE4               	clrf	??_disk_initialize& (0+255),b
 22077   017B28  11E4               	iorwf	??_disk_initialize& (0+255),w,b
 22078   017B2A  0107               	movlb	7	; () banked
 22079   017B2C  6FD4               	movwf	_start_lba& (0+255),b
 22080   017B2E  0105               	movlb	5	; () banked
 22081   017B30  51E5               	movf	(??_disk_initialize+1)& (0+255),w,b
 22082   017B32  0107               	movlb	7	; () banked
 22083   017B34  6FD5               	movwf	(_start_lba+1)& (0+255),b
 22084   017B36  0105               	movlb	5	; () banked
 22085   017B38  51E6               	movf	(??_disk_initialize+2)& (0+255),w,b
 22086   017B3A  0107               	movlb	7	; () banked
 22087   017B3C  6FD6               	movwf	(_start_lba+2)& (0+255),b
 22088   017B3E  0105               	movlb	5	; () banked
 22089   017B40  51E7               	movf	(??_disk_initialize+3)& (0+255),w,b
 22090   017B42  0107               	movlb	7	; () banked
 22091   017B44  6FD7               	movwf	(_start_lba+3)& (0+255),b
 22092                           
 22093                           ; BSR set to: 7
 22094                           ;drivers/diskio.c: 95:     return 0;
 22095   017B46  0E00               	movlw	0
 22096   017B48  0012               	return		;funcret
 22097   017B4A                     __end_of_disk_initialize:
 22098                           	callstack 0
 22099                           
 22100 ;; *************** function _util_hexdump *****************
 22101 ;; Defined at:
 22102 ;;		line 29 in file "drivers/utils.c"
 22103 ;; Parameters:    Size  Location     Type
 22104 ;;  header          2   70[BANK5 ] PTR const unsigned char 
 22105 ;;		 -> STR_5(1), 
 22106 ;;  addr            2   72[BANK5 ] PTR const void 
 22107 ;;		 -> disk_initialize@buf(128), 
 22108 ;;  size            2   74[BANK5 ] unsigned int 
 22109 ;; Auto vars:     Size  Location     Type
 22110 ;;  i               2   97[BANK5 ] int 
 22111 ;;  chars          17   78[BANK5 ] unsigned char [17]
 22112 ;;  buf             2   95[BANK5 ] PTR const unsigned char 
 22113 ;;		 -> disk_initialize@buf(128), 
 22114 ;; Return value:  Size  Location     Type
 22115 ;;                  1    wreg      void 
 22116 ;; Registers used:
 22117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22118 ;; Tracked objects:
 22119 ;;		On entry : 0/0
 22120 ;;		On exit  : 3F/5
 22121 ;;		Unchanged: 0/0
 22122 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22123 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22124 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22125 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22126 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22127 ;;Total ram usage:       29 bytes
 22128 ;; Hardware stack levels used: 1
 22129 ;; Hardware stack levels required when called: 8
 22130 ;; This function calls:
 22131 ;;		_printf
 22132 ;; This function is called by:
 22133 ;;		_disk_initialize
 22134 ;; This function uses a non-reentrant model
 22135 ;;
 22136                           
 22137                           	psect	text34
 22138   017EB0                     __ptext34:
 22139                           	callstack 0
 22140   017EB0                     _util_hexdump:
 22141                           	callstack 114
 22142                           
 22143                           ;drivers/utils.c: 29: void util_hexdump(const char *header, const void *addr, unsigned i
      +                          nt size);drivers/utils.c: 30: {;drivers/utils.c: 31:     char chars[17];;drivers/utils.c
      +                          : 32:     const uint8_t *buf = addr;
 22144                           
 22145                           ;incstack = 0
 22146   017EB0  C5A8  F5BF         	movff	util_hexdump@addr,util_hexdump@buf
 22147   017EB4  C5A9  F5C0         	movff	util_hexdump@addr+1,util_hexdump@buf+1
 22148                           
 22149                           ;drivers/utils.c: 33:     size = ((size + 15) & ~0xfU);
 22150   017EB8  0E0F               	movlw	15
 22151   017EBA  0105               	movlb	5	; () banked
 22152   017EBC  25AA               	addwf	util_hexdump@size& (0+255),w,b
 22153   017EBE  6FAC               	movwf	??_util_hexdump& (0+255),b
 22154   017EC0  0E00               	movlw	0
 22155   017EC2  21AB               	addwfc	(util_hexdump@size+1)& (0+255),w,b
 22156   017EC4  6FAD               	movwf	(??_util_hexdump+1)& (0+255),b
 22157   017EC6  0EF0               	movlw	240
 22158   017EC8  15AC               	andwf	??_util_hexdump& (0+255),w,b
 22159   017ECA  6FAA               	movwf	util_hexdump@size& (0+255),b
 22160   017ECC  0EFF               	movlw	255
 22161   017ECE  15AD               	andwf	(??_util_hexdump+1)& (0+255),w,b
 22162   017ED0  6FAB               	movwf	(util_hexdump@size+1)& (0+255),b
 22163                           
 22164                           ; BSR set to: 5
 22165                           ;drivers/utils.c: 34:     for (int i = 0; i < size; i++) {
 22166   017ED2  0E00               	movlw	0
 22167   017ED4  6FC2               	movwf	(util_hexdump@i+1)& (0+255),b
 22168   017ED6  0E00               	movlw	0
 22169   017ED8  6FC1               	movwf	util_hexdump@i& (0+255),b
 22170   017EDA  D06D               	goto	l10165
 22171   017EDC                     l10145:
 22172                           
 22173                           ; BSR set to: 5
 22174                           ;drivers/utils.c: 35:         if ((i % 16) == 0)
 22175   017EDC  C5C1  F5AC         	movff	util_hexdump@i,??_util_hexdump
 22176   017EE0  0E0F               	movlw	15
 22177   017EE2  17AC               	andwf	??_util_hexdump& (0+255),f,b
 22178   017EE4  A4D8               	btfss	status,2,c
 22179   017EE6  D00E               	goto	l112
 22180                           
 22181                           ; BSR set to: 5
 22182                           ;drivers/utils.c: 36:             printf("%s%04x:", header, i);
 22183   017EE8  0ED2               	movlw	low STR_19
 22184   017EEA  6F9A               	movwf	printf@fmt& (0+255),b
 22185   017EEC  0EFF               	movlw	high STR_19
 22186   017EEE  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 22187   017EF0  C5A6  F59C         	movff	util_hexdump@header,?_printf+2
 22188   017EF4  C5A7  F59D         	movff	util_hexdump@header+1,?_printf+3
 22189   017EF8  C5C1  F59E         	movff	util_hexdump@i,?_printf+4
 22190   017EFC  C5C2  F59F         	movff	util_hexdump@i+1,?_printf+5
 22191   017F00  EC53  F0CF         	call	_printf	;wreg free
 22192   017F04                     l112:
 22193                           
 22194                           ; BSR set to: 5
 22195                           ;drivers/utils.c: 37:         printf(" %02x", buf[i]);
 22196   017F04  0EE1               	movlw	low STR_20
 22197   017F06  6F9A               	movwf	printf@fmt& (0+255),b
 22198   017F08  0EFF               	movlw	high STR_20
 22199   017F0A  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 22200   017F0C  51C1               	movf	util_hexdump@i& (0+255),w,b
 22201   017F0E  25BF               	addwf	util_hexdump@buf& (0+255),w,b
 22202   017F10  6ED9               	movwf	fsr2l,c
 22203   017F12  51C2               	movf	(util_hexdump@i+1)& (0+255),w,b
 22204   017F14  21C0               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 22205   017F16  6EDA               	movwf	fsr2h,c
 22206   017F18  50DF               	movf	indf2,w,c
 22207   017F1A  6FAC               	movwf	??_util_hexdump& (0+255),b
 22208   017F1C  51AC               	movf	??_util_hexdump& (0+255),w,b
 22209   017F1E  6F9C               	movwf	(?_printf+2)& (0+255),b
 22210   017F20  6B9D               	clrf	(?_printf+3)& (0+255),b
 22211   017F22  EC53  F0CF         	call	_printf	;wreg free
 22212                           
 22213                           ; BSR set to: 5
 22214                           ;drivers/utils.c: 38:         if (0x20 <= buf[i] && buf[i] <= 0x7e) {
 22215   017F26  51C1               	movf	util_hexdump@i& (0+255),w,b
 22216   017F28  25BF               	addwf	util_hexdump@buf& (0+255),w,b
 22217   017F2A  6ED9               	movwf	fsr2l,c
 22218   017F2C  51C2               	movf	(util_hexdump@i+1)& (0+255),w,b
 22219   017F2E  21C0               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 22220   017F30  6EDA               	movwf	fsr2h,c
 22221   017F32  0E1F               	movlw	31
 22222   017F34  64DF               	cpfsgt	indf2,c
 22223   017F36  D01E               	goto	l10155
 22224                           
 22225                           ; BSR set to: 5
 22226   017F38  51C1               	movf	util_hexdump@i& (0+255),w,b
 22227   017F3A  25BF               	addwf	util_hexdump@buf& (0+255),w,b
 22228   017F3C  6ED9               	movwf	fsr2l,c
 22229   017F3E  51C2               	movf	(util_hexdump@i+1)& (0+255),w,b
 22230   017F40  21C0               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 22231   017F42  6EDA               	movwf	fsr2h,c
 22232   017F44  0E7F               	movlw	127
 22233   017F46  60DF               	cpfslt	indf2,c
 22234   017F48  D015               	goto	l10155
 22235                           
 22236                           ; BSR set to: 5
 22237                           ;drivers/utils.c: 39:             chars[i % 16] = buf[i];
 22238   017F4A  51C1               	movf	util_hexdump@i& (0+255),w,b
 22239   017F4C  25BF               	addwf	util_hexdump@buf& (0+255),w,b
 22240   017F4E  6ED9               	movwf	fsr2l,c
 22241   017F50  51C2               	movf	(util_hexdump@i+1)& (0+255),w,b
 22242   017F52  21C0               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 22243   017F54  6EDA               	movwf	fsr2h,c
 22244   017F56  0E0F               	movlw	15
 22245   017F58  15C1               	andwf	util_hexdump@i& (0+255),w,b
 22246   017F5A  6FAC               	movwf	??_util_hexdump& (0+255),b
 22247   017F5C  0E00               	movlw	0
 22248   017F5E  15C2               	andwf	(util_hexdump@i+1)& (0+255),w,b
 22249   017F60  6FAD               	movwf	(??_util_hexdump+1)& (0+255),b
 22250   017F62  0EAE               	movlw	low util_hexdump@chars
 22251   017F64  25AC               	addwf	??_util_hexdump& (0+255),w,b
 22252   017F66  6EE1               	movwf	fsr1l,c
 22253   017F68  0E05               	movlw	high util_hexdump@chars
 22254   017F6A  21AD               	addwfc	(??_util_hexdump+1)& (0+255),w,b
 22255   017F6C  6EE2               	movwf	fsr1h,c
 22256   017F6E  C4DF F4E7          	movff	indf2,indf1
 22257                           
 22258                           ;drivers/utils.c: 40:         } else {
 22259   017F72  D00E               	goto	l10157
 22260   017F74                     l10155:
 22261                           
 22262                           ; BSR set to: 5
 22263                           ;drivers/utils.c: 41:             chars[i % 16] = '.';
 22264   017F74  0E0F               	movlw	15
 22265   017F76  15C1               	andwf	util_hexdump@i& (0+255),w,b
 22266   017F78  6FAC               	movwf	??_util_hexdump& (0+255),b
 22267   017F7A  0E00               	movlw	0
 22268   017F7C  15C2               	andwf	(util_hexdump@i+1)& (0+255),w,b
 22269   017F7E  6FAD               	movwf	(??_util_hexdump+1)& (0+255),b
 22270   017F80  0EAE               	movlw	low util_hexdump@chars
 22271   017F82  25AC               	addwf	??_util_hexdump& (0+255),w,b
 22272   017F84  6ED9               	movwf	fsr2l,c
 22273   017F86  0E05               	movlw	high util_hexdump@chars
 22274   017F88  21AD               	addwfc	(??_util_hexdump+1)& (0+255),w,b
 22275   017F8A  6EDA               	movwf	fsr2h,c
 22276   017F8C  0E2E               	movlw	46
 22277   017F8E  6EDF               	movwf	indf2,c
 22278   017F90                     l10157:
 22279                           
 22280                           ; BSR set to: 5
 22281                           ;drivers/utils.c: 43:         if ((i % 16) == 15) {
 22282   017F90  51C1               	movf	util_hexdump@i& (0+255),w,b
 22283   017F92  0B0F               	andlw	15
 22284   017F94  0A0F               	xorlw	15
 22285   017F96  A4D8               	btfss	status,2,c
 22286   017F98  D00C               	goto	l10163
 22287                           
 22288                           ; BSR set to: 5
 22289                           ;drivers/utils.c: 44:             chars[16] = '\0';
 22290   017F9A  0E00               	movlw	0
 22291   017F9C  6FBE               	movwf	(util_hexdump@chars+16)& (0+255),b
 22292                           
 22293                           ; BSR set to: 5
 22294                           ;drivers/utils.c: 45:             printf(" %s\n\r", chars);
 22295   017F9E  0EA0               	movlw	low (STR_69+3)
 22296   017FA0  6F9A               	movwf	printf@fmt& (0+255),b
 22297   017FA2  0EFF               	movlw	high (STR_69+3)
 22298   017FA4  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 22299   017FA6  0EAE               	movlw	low util_hexdump@chars
 22300   017FA8  6F9C               	movwf	(?_printf+2)& (0+255),b
 22301   017FAA  0E05               	movlw	high util_hexdump@chars
 22302   017FAC  6F9D               	movwf	(?_printf+3)& (0+255),b
 22303   017FAE  EC53  F0CF         	call	_printf	;wreg free
 22304   017FB2                     l10163:
 22305                           
 22306                           ; BSR set to: 5
 22307                           ;drivers/utils.c: 47:     }
 22308   017FB2  4BC1               	infsnz	util_hexdump@i& (0+255),f,b
 22309   017FB4  2BC2               	incf	(util_hexdump@i+1)& (0+255),f,b
 22310   017FB6                     l10165:
 22311                           
 22312                           ; BSR set to: 5
 22313   017FB6  51AA               	movf	util_hexdump@size& (0+255),w,b
 22314   017FB8  5DC1               	subwf	util_hexdump@i& (0+255),w,b
 22315   017FBA  51AB               	movf	(util_hexdump@size+1)& (0+255),w,b
 22316   017FBC  59C2               	subwfb	(util_hexdump@i+1)& (0+255),w,b
 22317   017FBE  B0D8               	btfsc	status,0,c
 22318   017FC0  0012               	return	
 22319   017FC2  D78C               	goto	l10145
 22320   017FC4                     __end_of_util_hexdump:
 22321                           	callstack 0
 22322                           
 22323 ;; *************** function _emuz80_57q_sys_init *****************
 22324 ;; Defined at:
 22325 ;;		line 207 in file "src/boards/SBC8080-57Q.c"
 22326 ;; Parameters:    Size  Location     Type
 22327 ;;		None
 22328 ;; Auto vars:     Size  Location     Type
 22329 ;;		None
 22330 ;; Return value:  Size  Location     Type
 22331 ;;                  1    wreg      void 
 22332 ;; Registers used:
 22333 ;;		wreg, status,2
 22334 ;; Tracked objects:
 22335 ;;		On entry : 0/0
 22336 ;;		On exit  : 3F/4
 22337 ;;		Unchanged: 0/0
 22338 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22343 ;;Total ram usage:        0 bytes
 22344 ;; Hardware stack levels used: 1
 22345 ;; This function calls:
 22346 ;;		Nothing
 22347 ;; This function is called by:
 22348 ;;		_main
 22349 ;; This function uses a non-reentrant model
 22350 ;;
 22351                           
 22352                           	psect	text35
 22353   018E88                     __ptext35:
 22354                           	callstack 0
 22355   018E88                     _emuz80_57q_sys_init:
 22356                           	callstack 126
 22357                           
 22358                           ;src/boards/SBC8080-57Q.c: 210:  OSCFRQ = 0x08;
 22359                           
 22360                           ; BSR set to: 5
 22361                           ;incstack = 0
 22362   018E88  0E08               	movlw	8
 22363   018E8A  0100               	movlb	0	; () banked
 22364   018E8C  6FB1               	movwf	177,b	;volatile
 22365                           
 22366                           ;src/boards/SBC8080-57Q.c: 213:  ANSELA = 0x00;
 22367   018E8E  0E00               	movlw	0
 22368   018E90  0104               	movlb	4	; () banked
 22369   018E92  6F00               	movwf	0,b	;volatile
 22370                           
 22371                           ;src/boards/SBC8080-57Q.c: 214:  ANSELB = 0x00;
 22372   018E94  0E00               	movlw	0
 22373   018E96  6F08               	movwf	8,b	;volatile
 22374                           
 22375                           ;src/boards/SBC8080-57Q.c: 215:  ANSELC = 0x00;
 22376   018E98  0E00               	movlw	0
 22377   018E9A  6F10               	movwf	16,b	;volatile
 22378                           
 22379                           ;src/boards/SBC8080-57Q.c: 216:  ANSELD = 0x00;
 22380   018E9C  0E00               	movlw	0
 22381   018E9E  6F18               	movwf	24,b	;volatile
 22382                           
 22383                           ; BSR set to: 4
 22384                           ;src/boards/SBC8080-57Q.c: 217:  ANSELE0 = 0;
 22385   018EA0  9120               	bcf	32,0,b	;volatile
 22386                           
 22387                           ; BSR set to: 4
 22388                           ;src/boards/SBC8080-57Q.c: 218:  ANSELE1 = 0;
 22389   018EA2  9320               	bcf	32,1,b	;volatile
 22390                           
 22391                           ; BSR set to: 4
 22392                           ;src/boards/SBC8080-57Q.c: 219:  ANSELE2 = 0;
 22393   018EA4  9520               	bcf	32,2,b	;volatile
 22394                           
 22395                           ;src/boards/SBC8080-57Q.c: 220:  ANSELF = 0x00;
 22396   018EA6  0E00               	movlw	0
 22397   018EA8  6F28               	movwf	40,b	;volatile
 22398                           
 22399                           ; BSR set to: 4
 22400                           ;src/boards/SBC8080-57Q.c: 223:  LATE1 = 0;
 22401   018EAA  92C2               	bcf	1218,1,c	;volatile
 22402                           
 22403                           ; BSR set to: 4
 22404                           ;src/boards/SBC8080-57Q.c: 224:  ODCE1 = 1;
 22405   018EAC  8322               	bsf	34,1,b	;volatile
 22406                           
 22407                           ; BSR set to: 4
 22408                           ;src/boards/SBC8080-57Q.c: 225:  TRISE1 = 0;
 22409   018EAE  92CA               	bcf	1226,1,c	;volatile
 22410                           
 22411                           ; BSR set to: 4
 22412                           ;src/boards/SBC8080-57Q.c: 227:  LATC7 = 0;
 22413   018EB0  9EC0               	bcf	1216,7,c	;volatile
 22414                           
 22415                           ; BSR set to: 4
 22416                           ;src/boards/SBC8080-57Q.c: 228:  TRISC7 = 0;
 22417   018EB2  9EC8               	bcf	1224,7,c	;volatile
 22418                           
 22419                           ;src/boards/SBC8080-57Q.c: 248:  RA3PPS = 0;
 22420   018EB4  0E00               	movlw	0
 22421   018EB6  0102               	movlb	2	; () banked
 22422   018EB8  6F04               	movwf	4,b	;volatile
 22423                           
 22424                           ; BSR set to: 2
 22425                           ;src/boards/SBC8080-57Q.c: 249:  TRISA3 = 1;
 22426   018EBA  86C6               	bsf	1222,3,c	;volatile
 22427                           
 22428                           ; BSR set to: 2
 22429                           ;src/boards/SBC8080-57Q.c: 250:  WPUA3 = 1;
 22430   018EBC  0104               	movlb	4	; () banked
 22431   018EBE  8701               	bsf	1,3,b	;volatile
 22432                           
 22433                           ; BSR set to: 4
 22434                           ;src/boards/SBC8080-57Q.c: 251:  NCO1OUT = 0;
 22435   018EC0  9B46               	bcf	70,5,b	;volatile
 22436                           
 22437                           ; BSR set to: 4
 22438                           ;src/boards/SBC8080-57Q.c: 252:  NCO1EN = 0;
 22439   018EC2  9F46               	bcf	70,7,b	;volatile
 22440                           
 22441                           ; BSR set to: 4
 22442                           ;src/boards/SBC8080-57Q.c: 255:  LATE0 = 1;
 22443   018EC4  80C2               	bsf	1218,0,c	;volatile
 22444                           
 22445                           ; BSR set to: 4
 22446                           ;src/boards/SBC8080-57Q.c: 256:  TRISE0 = 0;
 22447   018EC6  90CA               	bcf	1226,0,c	;volatile
 22448                           
 22449                           ; BSR set to: 4
 22450                           ;src/boards/SBC8080-57Q.c: 259:  WPUC6 = 1;
 22451   018EC8  8D11               	bsf	17,6,b	;volatile
 22452                           
 22453                           ; BSR set to: 4
 22454                           ;src/boards/SBC8080-57Q.c: 260:  TRISC6 = 1;
 22455   018ECA  8CC8               	bsf	1224,6,c	;volatile
 22456                           
 22457                           ; BSR set to: 4
 22458                           ;src/boards/SBC8080-57Q.c: 262:  LATE1 = 1;
 22459   018ECC  82C2               	bsf	1218,1,c	;volatile
 22460   018ECE                     l1186:
 22461   018ECE  ACD0               	btfss	1232,6,c	;volatile
 22462   018ED0  D7FE               	goto	l1186
 22463                           
 22464                           ;src/boards/SBC8080-57Q.c: 266:  TRISC3 = 1;
 22465   018ED2  86C8               	bsf	1224,3,c	;volatile
 22466                           
 22467                           ;src/boards/SBC8080-57Q.c: 267:  WPUC3 = 1;
 22468   018ED4  0104               	movlb	4	; () banked
 22469   018ED6  8711               	bsf	17,3,b	;volatile
 22470                           
 22471                           ; BSR set to: 4
 22472                           ;src/boards/SBC8080-57Q.c: 270:  U3BRG = 416;
 22473   018ED8  0E01               	movlw	1
 22474   018EDA  0102               	movlb	2	; () banked
 22475   018EDC  6FD5               	movwf	213,b	;volatile
 22476   018EDE  0EA0               	movlw	160
 22477   018EE0  6FD4               	movwf	212,b	;volatile
 22478                           
 22479                           ; BSR set to: 2
 22480                           ;src/boards/SBC8080-57Q.c: 271:  U3RXEN = 1;
 22481   018EE2  89D1               	bsf	209,4,b	;volatile
 22482                           
 22483                           ; BSR set to: 2
 22484                           ;src/boards/SBC8080-57Q.c: 272:  U3TXEN = 1;
 22485   018EE4  8BD1               	bsf	209,5,b	;volatile
 22486                           
 22487                           ; BSR set to: 2
 22488                           ;src/boards/SBC8080-57Q.c: 275:  WPUA7 = 1;
 22489   018EE6  0104               	movlb	4	; () banked
 22490   018EE8  8F01               	bsf	1,7,b	;volatile
 22491                           
 22492                           ; BSR set to: 4
 22493                           ;src/boards/SBC8080-57Q.c: 276:  TRISA7 = 1;
 22494   018EEA  8EC6               	bsf	1222,7,c	;volatile
 22495                           
 22496                           ;src/boards/SBC8080-57Q.c: 277:  U3RXPPS = 0x07;
 22497   018EEC  0E07               	movlw	7
 22498   018EEE  0102               	movlb	2	; () banked
 22499   018EF0  6F76               	movwf	118,b	;volatile
 22500                           
 22501                           ; BSR set to: 2
 22502                           ;src/boards/SBC8080-57Q.c: 280:  LATA6 = 1;
 22503   018EF2  8CBE               	bsf	1214,6,c	;volatile
 22504                           
 22505                           ; BSR set to: 2
 22506                           ;src/boards/SBC8080-57Q.c: 281:  TRISA6 = 0;
 22507   018EF4  9CC6               	bcf	1222,6,c	;volatile
 22508                           
 22509                           ;src/boards/SBC8080-57Q.c: 282:  RA6PPS = 0x26;
 22510   018EF6  0E26               	movlw	38
 22511   018EF8  6F07               	movwf	7,b	;volatile
 22512                           
 22513                           ; BSR set to: 2
 22514                           ;src/boards/SBC8080-57Q.c: 284:  U3ON = 1;
 22515   018EFA  8FD2               	bsf	210,7,b	;volatile
 22516                           
 22517                           ;src/boards/SBC8080-57Q.c: 287:  LATD = 0x00;
 22518   018EFC  0E00               	movlw	0
 22519   018EFE  6EC1               	movwf	193,c	;volatile
 22520                           
 22521                           ;src/boards/SBC8080-57Q.c: 288:  TRISD = 0x00;
 22522   018F00  0E00               	movlw	0
 22523   018F02  6EC9               	movwf	201,c	;volatile
 22524                           
 22525                           ;src/boards/SBC8080-57Q.c: 289:  LATB = 0x00;
 22526   018F04  0E00               	movlw	0
 22527   018F06  6EBF               	movwf	191,c	;volatile
 22528                           
 22529                           ;src/boards/SBC8080-57Q.c: 290:  TRISB = 0x00;
 22530   018F08  0E00               	movlw	0
 22531   018F0A  6EC7               	movwf	199,c	;volatile
 22532                           
 22533                           ;src/boards/SBC8080-57Q.c: 293:  LATF = 0x00;
 22534   018F0C  0E00               	movlw	0
 22535   018F0E  6EC3               	movwf	195,c	;volatile
 22536                           
 22537                           ;src/boards/SBC8080-57Q.c: 294:  TRISF = 0x00;
 22538   018F10  0E00               	movlw	0
 22539   018F12  6ECB               	movwf	203,c	;volatile
 22540                           
 22541                           ; BSR set to: 2
 22542                           ;src/boards/SBC8080-57Q.c: 297:  LATE2 = 0;
 22543   018F14  94C2               	bcf	1218,2,c	;volatile
 22544                           
 22545                           ; BSR set to: 2
 22546                           ;src/boards/SBC8080-57Q.c: 298:  TRISE2 = 0;
 22547   018F16  94CA               	bcf	1226,2,c	;volatile
 22548                           
 22549                           ; BSR set to: 2
 22550                           ;src/boards/SBC8080-57Q.c: 301:  LATC5 = 1;
 22551   018F18  8AC0               	bsf	1216,5,c	;volatile
 22552                           
 22553                           ; BSR set to: 2
 22554                           ;src/boards/SBC8080-57Q.c: 302:  TRISC5 = 0;
 22555   018F1A  9AC8               	bcf	1224,5,c	;volatile
 22556                           
 22557                           ; BSR set to: 2
 22558                           ;src/boards/SBC8080-57Q.c: 305:  LATA5 = 1;
 22559   018F1C  8ABE               	bsf	1214,5,c	;volatile
 22560                           
 22561                           ; BSR set to: 2
 22562                           ;src/boards/SBC8080-57Q.c: 306:  TRISA5 = 0;
 22563   018F1E  9AC6               	bcf	1222,5,c	;volatile
 22564                           
 22565                           ; BSR set to: 2
 22566                           ;src/boards/SBC8080-57Q.c: 308:  LATC7 = 1;
 22567   018F20  8EC0               	bsf	1216,7,c	;volatile
 22568                           
 22569                           ; BSR set to: 2
 22570                           ;src/boards/SBC8080-57Q.c: 311:  SLRCONCbits.SLRC1 = 0;
 22571   018F22  0104               	movlb	4	; () banked
 22572   018F24  9313               	bcf	19,1,b	;volatile
 22573                           
 22574                           ; BSR set to: 4
 22575                           ;src/boards/SBC8080-57Q.c: 312:  SLRCONCbits.SLRC0 = 0;
 22576   018F26  9113               	bcf	19,0,b	;volatile
 22577                           
 22578                           ; BSR set to: 4
 22579                           ;src/boards/SBC8080-57Q.c: 313:  SLRCONCbits.SLRC2 = 0;
 22580   018F28  9513               	bcf	19,2,b	;volatile
 22581                           
 22582                           ; BSR set to: 4
 22583   018F2A  0012               	return		;funcret
 22584   018F2C                     __end_of_emuz80_57q_sys_init:
 22585                           	callstack 0
 22586                           
 22587 ;; *************** function _emuz80_57q_start_cpu *****************
 22588 ;; Defined at:
 22589 ;;		line 316 in file "src/boards/SBC8080-57Q.c"
 22590 ;; Parameters:    Size  Location     Type
 22591 ;;		None
 22592 ;; Auto vars:     Size  Location     Type
 22593 ;;		None
 22594 ;; Return value:  Size  Location     Type
 22595 ;;                  1    wreg      void 
 22596 ;; Registers used:
 22597 ;;		wreg, status,2
 22598 ;; Tracked objects:
 22599 ;;		On entry : 0/7
 22600 ;;		On exit  : 0/0
 22601 ;;		Unchanged: 0/0
 22602 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;Total ram usage:        1 bytes
 22608 ;; Hardware stack levels used: 1
 22609 ;; This function calls:
 22610 ;;		Nothing
 22611 ;; This function is called by:
 22612 ;;		_main
 22613 ;; This function uses a non-reentrant model
 22614 ;;
 22615                           
 22616                           	psect	text36
 22617   017FC4                     __ptext36:
 22618                           	callstack 0
 22619   017FC4                     _emuz80_57q_start_cpu:
 22620                           	callstack 126
 22621                           
 22622                           ;src/boards/SBC8080-57Q.c: 319:  WPUD = 0xff;
 22623                           
 22624                           ; BSR set to: 4
 22625                           ;incstack = 0
 22626   017FC4  0104               	movlb	4	; () banked
 22627   017FC6  6919               	setf	25,b	;volatile
 22628                           
 22629                           ;src/boards/SBC8080-57Q.c: 320:  TRISD = 0xff;
 22630   017FC8  68C9               	setf	201,c	;volatile
 22631                           
 22632                           ;src/boards/SBC8080-57Q.c: 323:  WPUB = 0xff;
 22633   017FCA  6909               	setf	9,b	;volatile
 22634                           
 22635                           ;src/boards/SBC8080-57Q.c: 324:  TRISB = 0xff;
 22636   017FCC  68C7               	setf	199,c	;volatile
 22637                           
 22638                           ;src/boards/SBC8080-57Q.c: 327:  WPUF = 0xff;
 22639   017FCE  6929               	setf	41,b	;volatile
 22640                           
 22641                           ;src/boards/SBC8080-57Q.c: 328:  TRISF = 0xff;
 22642   017FD0  68CB               	setf	203,c	;volatile
 22643                           
 22644                           ;src/boards/SBC8080-57Q.c: 331:  WPUA0 = 1;
 22645   017FD2  8101               	bsf	1,0,b	;volatile
 22646                           
 22647                           ;src/boards/SBC8080-57Q.c: 332:  TRISA0 = 1;
 22648   017FD4  80C6               	bsf	1222,0,c	;volatile
 22649                           
 22650                           ;src/boards/SBC8080-57Q.c: 335:  WPUA1 = 1;
 22651   017FD6  8301               	bsf	1,1,b	;volatile
 22652                           
 22653                           ;src/boards/SBC8080-57Q.c: 336:  TRISA1 = 1;
 22654   017FD8  82C6               	bsf	1222,1,c	;volatile
 22655                           
 22656                           ;src/boards/SBC8080-57Q.c: 339:  WPUA5 = 1;
 22657   017FDA  8B01               	bsf	1,5,b	;volatile
 22658                           
 22659                           ;src/boards/SBC8080-57Q.c: 340:  TRISA5 = 1;
 22660   017FDC  8AC6               	bsf	1222,5,c	;volatile
 22661                           
 22662                           ;src/boards/SBC8080-57Q.c: 343:  WPUC5 = 1;
 22663   017FDE  8B11               	bsf	17,5,b	;volatile
 22664                           
 22665                           ;src/boards/SBC8080-57Q.c: 344:  TRISC5 = 1;
 22666   017FE0  8AC8               	bsf	1224,5,c	;volatile
 22667                           
 22668                           ; BSR set to: 4
 22669                           ;src/boards/SBC8080-57Q.c: 347:  IVTLOCK = 0x55;
 22670   017FE2  0E55               	movlw	85
 22671   017FE4  6F59               	movwf	89,b	;volatile
 22672                           
 22673                           ;src/boards/SBC8080-57Q.c: 348:  IVTLOCK = 0xAA;
 22674   017FE6  0EAA               	movlw	170
 22675   017FE8  6F59               	movwf	89,b	;volatile
 22676                           
 22677                           ; BSR set to: 4
 22678                           ;src/boards/SBC8080-57Q.c: 349:  IVTLOCKbits.IVTLOCKED = 0x00;
 22679   017FEA  9159               	bcf	89,0,b	;volatile
 22680                           
 22681                           ;src/boards/SBC8080-57Q.c: 352:  IVTBASE = 0x000008;
 22682   017FEC  0E08               	movlw	8
 22683   017FEE  6F5D               	movwf	93,b	;volatile
 22684   017FF0  0E00               	movlw	0
 22685   017FF2  6F5E               	movwf	94,b	;volatile
 22686   017FF4  0E00               	movlw	0
 22687   017FF6  6F5F               	movwf	95,b	;volatile
 22688                           
 22689                           ;src/boards/SBC8080-57Q.c: 355:  IVTLOCK = 0x55;
 22690   017FF8  0E55               	movlw	85
 22691   017FFA  6F59               	movwf	89,b	;volatile
 22692                           
 22693                           ;src/boards/SBC8080-57Q.c: 356:  IVTLOCK = 0xAA;
 22694   017FFC  0EAA               	movlw	170
 22695   017FFE  6F59               	movwf	89,b	;volatile
 22696                           
 22697                           ; BSR set to: 4
 22698                           ;src/boards/SBC8080-57Q.c: 357:  IVTLOCKbits.IVTLOCKED = 0x01;
 22699   018000  8159               	bsf	89,0,b	;volatile
 22700                           
 22701                           ;src/boards/SBC8080-57Q.c: 360:  CLCIN0PPS = 0x00;
 22702   018002  0E00               	movlw	0
 22703   018004  0102               	movlb	2	; () banked
 22704   018006  6F61               	movwf	97,b	;volatile
 22705                           
 22706                           ;src/boards/SBC8080-57Q.c: 361:  CLCIN1PPS = 0x01;
 22707   018008  0E01               	movlw	1
 22708   01800A  6F62               	movwf	98,b	;volatile
 22709                           
 22710                           ;src/boards/SBC8080-57Q.c: 362:  CLCIN2PPS = 0x0f;
 22711   01800C  0E0F               	movlw	15
 22712   01800E  6F63               	movwf	99,b	;volatile
 22713                           
 22714                           ;src/boards/SBC8080-57Q.c: 363:  CLCIN3PPS = 0x0e;
 22715   018010  0E0E               	movlw	14
 22716   018012  6F64               	movwf	100,b	;volatile
 22717                           
 22718                           ;src/boards/SBC8080-57Q.c: 364:  CLCIN4PPS = 0x15;
 22719   018014  0E15               	movlw	21
 22720   018016  6F65               	movwf	101,b	;volatile
 22721                           
 22722                           ;src/boards/SBC8080-57Q.c: 365:  CLCIN5PPS = 0x16;
 22723   018018  0E16               	movlw	22
 22724   01801A  6F66               	movwf	102,b	;volatile
 22725                           
 22726                           ;src/boards/SBC8080-57Q.c: 366:  CLCIN6PPS = 0x0d;
 22727   01801C  0E0D               	movlw	13
 22728   01801E  6F67               	movwf	103,b	;volatile
 22729                           
 22730                           ;src/boards/SBC8080-57Q.c: 367:  CLCIN7PPS = 0x08;
 22731   018020  0E08               	movlw	8
 22732   018022  6F68               	movwf	104,b	;volatile
 22733                           
 22734                           ;src/boards/SBC8080-57Q.c: 370:  CLCnSEL0 = 0;
 22735   018024  0E00               	movlw	0
 22736   018026  0100               	movlb	0	; () banked
 22737   018028  6FD8               	movwf	216,b	;volatile
 22738                           
 22739                           ;src/boards/SBC8080-57Q.c: 371:  CLCnSEL1 = 1;
 22740   01802A  0E01               	movlw	1
 22741   01802C  6FD9               	movwf	217,b	;volatile
 22742                           
 22743                           ;src/boards/SBC8080-57Q.c: 372:  CLCnSEL2 = 127;
 22744   01802E  0E7F               	movlw	127
 22745   018030  6FDA               	movwf	218,b	;volatile
 22746                           
 22747                           ;src/boards/SBC8080-57Q.c: 373:  CLCnSEL3 = 127;
 22748   018032  0E7F               	movlw	127
 22749   018034  6FDB               	movwf	219,b	;volatile
 22750                           
 22751                           ;src/boards/SBC8080-57Q.c: 375:  CLCnGLS0 = 1;
 22752   018036  0E01               	movlw	1
 22753   018038  6FDC               	movwf	220,b	;volatile
 22754                           
 22755                           ;src/boards/SBC8080-57Q.c: 376:  CLCnGLS1 = 0x10;
 22756   01803A  0E10               	movlw	16
 22757   01803C  6FDD               	movwf	221,b	;volatile
 22758                           
 22759                           ;src/boards/SBC8080-57Q.c: 377:  CLCnGLS2 = 0;
 22760   01803E  0E00               	movlw	0
 22761   018040  6FDE               	movwf	222,b	;volatile
 22762                           
 22763                           ;src/boards/SBC8080-57Q.c: 378:  CLCnGLS3 = 0;
 22764   018042  0E00               	movlw	0
 22765   018044  6FDF               	movwf	223,b	;volatile
 22766                           
 22767                           ;src/boards/SBC8080-57Q.c: 380:  CLCnPOL = 0x80;
 22768   018046  0E80               	movlw	128
 22769   018048  6FD7               	movwf	215,b	;volatile
 22770                           
 22771                           ;src/boards/SBC8080-57Q.c: 381:  CLCnCON = 0x84;
 22772   01804A  0E84               	movlw	132
 22773   01804C  6FD6               	movwf	214,b	;volatile
 22774                           
 22775                           ;src/boards/SBC8080-57Q.c: 382:  CLCDATA = 0x0;
 22776   01804E  0E00               	movlw	0
 22777   018050  6FD4               	movwf	212,b	;volatile
 22778                           
 22779                           ; BSR set to: 0
 22780                           ;src/boards/SBC8080-57Q.c: 384:  CLC1IF = 0;
 22781   018052  9AAE               	bcf	1198,5,c	;volatile
 22782                           
 22783                           ; BSR set to: 0
 22784                           ;src/boards/SBC8080-57Q.c: 385:  CLC1IE = 0;
 22785   018054  9A9E               	bcf	1182,5,c	;volatile
 22786                           
 22787                           ; BSR set to: 0
 22788                           ;src/boards/SBC8080-57Q.c: 386:  TRISA4 = 0;
 22789   018056  98C6               	bcf	1222,4,c	;volatile
 22790                           
 22791                           ;src/boards/SBC8080-57Q.c: 387:  RA4PPS = 1;
 22792   018058  0E01               	movlw	1
 22793   01805A  0102               	movlb	2	; () banked
 22794   01805C  6F05               	movwf	5,b	;volatile
 22795                           
 22796                           ;src/boards/SBC8080-57Q.c: 389:  CLCSELECT = 1;
 22797   01805E  0E01               	movlw	1
 22798   018060  0100               	movlb	0	; () banked
 22799   018062  6FD5               	movwf	213,b	;volatile
 22800                           
 22801                           ;src/boards/SBC8080-57Q.c: 391:  CLCnSEL0 = 1;
 22802   018064  0E01               	movlw	1
 22803   018066  6FD8               	movwf	216,b	;volatile
 22804                           
 22805                           ;src/boards/SBC8080-57Q.c: 392:  CLCnSEL1 = 2;
 22806   018068  0E02               	movlw	2
 22807   01806A  6FD9               	movwf	217,b	;volatile
 22808                           
 22809                           ;src/boards/SBC8080-57Q.c: 393:  CLCnSEL2 = 3;
 22810   01806C  0E03               	movlw	3
 22811   01806E  6FDA               	movwf	218,b	;volatile
 22812                           
 22813                           ;src/boards/SBC8080-57Q.c: 394:  CLCnSEL3 = 7;
 22814   018070  0E07               	movlw	7
 22815   018072  6FDB               	movwf	219,b	;volatile
 22816                           
 22817                           ;src/boards/SBC8080-57Q.c: 396:  CLCnGLS0 = 0x01;
 22818   018074  0E01               	movlw	1
 22819   018076  6FDC               	movwf	220,b	;volatile
 22820                           
 22821                           ;src/boards/SBC8080-57Q.c: 397:  CLCnGLS1 = 0x04;
 22822   018078  0E04               	movlw	4
 22823   01807A  6FDD               	movwf	221,b	;volatile
 22824                           
 22825                           ;src/boards/SBC8080-57Q.c: 398:  CLCnGLS2 = 0x10;
 22826   01807C  0E10               	movlw	16
 22827   01807E  6FDE               	movwf	222,b	;volatile
 22828                           
 22829                           ;src/boards/SBC8080-57Q.c: 399:  CLCnGLS3 = 0x40;
 22830   018080  0E40               	movlw	64
 22831   018082  6FDF               	movwf	223,b	;volatile
 22832                           
 22833                           ;src/boards/SBC8080-57Q.c: 401:  CLCnPOL = 0x80;
 22834   018084  0E80               	movlw	128
 22835   018086  6FD7               	movwf	215,b	;volatile
 22836                           
 22837                           ;src/boards/SBC8080-57Q.c: 402:  CLCnCON = 0x82;
 22838   018088  0E82               	movlw	130
 22839   01808A  6FD6               	movwf	214,b	;volatile
 22840                           
 22841                           ;src/boards/SBC8080-57Q.c: 404:  CLCSELECT = 2;
 22842   01808C  0E02               	movlw	2
 22843   01808E  6FD5               	movwf	213,b	;volatile
 22844                           
 22845                           ;src/boards/SBC8080-57Q.c: 406:  CLCnSEL0 = 51;
 22846   018090  0E33               	movlw	51
 22847   018092  6FD8               	movwf	216,b	;volatile
 22848                           
 22849                           ;src/boards/SBC8080-57Q.c: 407:  CLCnSEL1 = 52;
 22850   018094  0E34               	movlw	52
 22851   018096  6FD9               	movwf	217,b	;volatile
 22852                           
 22853                           ;src/boards/SBC8080-57Q.c: 408:  CLCnSEL2 = 127;
 22854   018098  0E7F               	movlw	127
 22855   01809A  6FDA               	movwf	218,b	;volatile
 22856                           
 22857                           ;src/boards/SBC8080-57Q.c: 409:  CLCnSEL3 = 127;
 22858   01809C  0E7F               	movlw	127
 22859   01809E  6FDB               	movwf	219,b	;volatile
 22860                           
 22861                           ;src/boards/SBC8080-57Q.c: 411:  CLCnGLS0 = 0x02;
 22862   0180A0  0E02               	movlw	2
 22863   0180A2  6FDC               	movwf	220,b	;volatile
 22864                           
 22865                           ;src/boards/SBC8080-57Q.c: 412:  CLCnGLS1 = 0x08;
 22866   0180A4  0E08               	movlw	8
 22867   0180A6  6FDD               	movwf	221,b	;volatile
 22868                           
 22869                           ;src/boards/SBC8080-57Q.c: 413:  CLCnGLS2 = 0x10;
 22870   0180A8  0E10               	movlw	16
 22871   0180AA  6FDE               	movwf	222,b	;volatile
 22872                           
 22873                           ;src/boards/SBC8080-57Q.c: 414:  CLCnGLS3 = 0x40;
 22874   0180AC  0E40               	movlw	64
 22875   0180AE  6FDF               	movwf	223,b	;volatile
 22876                           
 22877                           ;src/boards/SBC8080-57Q.c: 416:  CLCnPOL = 0x00;
 22878   0180B0  0E00               	movlw	0
 22879   0180B2  6FD7               	movwf	215,b	;volatile
 22880                           
 22881                           ;src/boards/SBC8080-57Q.c: 417:  CLCnCON = 0x82;
 22882   0180B4  0E82               	movlw	130
 22883   0180B6  6FD6               	movwf	214,b	;volatile
 22884                           
 22885                           ;src/boards/SBC8080-57Q.c: 419:     CLCSELECT = 0;
 22886   0180B8  0E00               	movlw	0
 22887   0180BA  6FD5               	movwf	213,b	;volatile
 22888                           
 22889                           ; BSR set to: 0
 22890                           ;src/boards/SBC8080-57Q.c: 422:  LATE1 = 0;
 22891   0180BC  92C2               	bcf	1218,1,c	;volatile
 22892                           
 22893                           ; BSR set to: 0
 22894                           ;src/boards/SBC8080-57Q.c: 423:  _delay((unsigned long)((1)*(64000000UL/4000.0)));
 22895   0180BE  0E15               	movlw	21
 22896   0180C0  6E01               	movwf	??_emuz80_57q_start_cpu^(0+1280),c
 22897   0180C2  0EC6               	movlw	198
 22898   0180C4                     u16507:
 22899   0180C4  2EE8               	decfsz	wreg,f,c
 22900   0180C6  D7FE               	bra	u16507
 22901   0180C8  2E01               	decfsz	??_emuz80_57q_start_cpu^(0+1280),f,c
 22902   0180CA  D7FC               	bra	u16507
 22903   0180CC  D000               	nop2	
 22904                           
 22905                           ;src/boards/SBC8080-57Q.c: 424:  LATE0 = 0;
 22906   0180CE  90C2               	bcf	1218,0,c	;volatile
 22907                           
 22908                           ;src/boards/SBC8080-57Q.c: 425:  LATE1 = 1;
 22909   0180D0  82C2               	bsf	1218,1,c	;volatile
 22910   0180D2  0012               	return		;funcret
 22911   0180D4                     __end_of_emuz80_57q_start_cpu:
 22912                           	callstack 0
 22913                           
 22914 ;; *************** function _emuz80_57q_exit_bus_master *****************
 22915 ;; Defined at:
 22916 ;;		line 137 in file "src/boards/SBC8080-57Q.c"
 22917 ;; Parameters:    Size  Location     Type
 22918 ;;		None
 22919 ;; Auto vars:     Size  Location     Type
 22920 ;;		None
 22921 ;; Return value:  Size  Location     Type
 22922 ;;                  1    wreg      void 
 22923 ;; Registers used:
 22924 ;;		None
 22925 ;; Tracked objects:
 22926 ;;		On entry : 0/7
 22927 ;;		On exit  : 0/0
 22928 ;;		Unchanged: 0/0
 22929 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22934 ;;Total ram usage:        0 bytes
 22935 ;; Hardware stack levels used: 1
 22936 ;; This function calls:
 22937 ;;		Nothing
 22938 ;; This function is called by:
 22939 ;;		_main
 22940 ;; This function uses a non-reentrant model
 22941 ;;
 22942                           
 22943                           	psect	text37
 22944   019FE0                     __ptext37:
 22945                           	callstack 0
 22946   019FE0                     _emuz80_57q_exit_bus_master:
 22947                           	callstack 126
 22948                           
 22949                           ;src/boards/SBC8080-57Q.c: 140:  TRISB = 0xff;
 22950                           
 22951                           ;incstack = 0
 22952   019FE0  68C7               	setf	199,c	;volatile
 22953                           
 22954                           ;src/boards/SBC8080-57Q.c: 141:  TRISD = 0xff;
 22955   019FE2  68C9               	setf	201,c	;volatile
 22956                           
 22957                           ;src/boards/SBC8080-57Q.c: 142:  TRISF = 0xff;
 22958   019FE4  68CB               	setf	203,c	;volatile
 22959                           
 22960                           ;src/boards/SBC8080-57Q.c: 144:  TRISA5 = 1;
 22961   019FE6  8AC6               	bsf	1222,5,c	;volatile
 22962                           
 22963                           ;src/boards/SBC8080-57Q.c: 145:  TRISC5 = 1;
 22964   019FE8  8AC8               	bsf	1224,5,c	;volatile
 22965   019FEA  0012               	return		;funcret
 22966   019FEC                     __end_of_emuz80_57q_exit_bus_master:
 22967                           	callstack 0
 22968                           
 22969 ;; *************** function _emuz80_57q_enter_bus_master *****************
 22970 ;; Defined at:
 22971 ;;		line 124 in file "src/boards/SBC8080-57Q.c"
 22972 ;; Parameters:    Size  Location     Type
 22973 ;;		None
 22974 ;; Auto vars:     Size  Location     Type
 22975 ;;		None
 22976 ;; Return value:  Size  Location     Type
 22977 ;;                  1    wreg      void 
 22978 ;; Registers used:
 22979 ;;		wreg, status,2
 22980 ;; Tracked objects:
 22981 ;;		On entry : 3F/0
 22982 ;;		On exit  : 3F/0
 22983 ;;		Unchanged: 3F/0
 22984 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22989 ;;Total ram usage:        0 bytes
 22990 ;; Hardware stack levels used: 1
 22991 ;; This function calls:
 22992 ;;		Nothing
 22993 ;; This function is called by:
 22994 ;;		_main
 22995 ;; This function uses a non-reentrant model
 22996 ;;
 22997                           
 22998                           	psect	text38
 22999   019F9C                     __ptext38:
 23000                           	callstack 0
 23001   019F9C                     _emuz80_57q_enter_bus_master:
 23002                           	callstack 126
 23003                           
 23004                           ; BSR set to: 0
 23005                           
 23006                           ; BSR set to: 0
 23007                           ;src/boards/SBC8080-57Q.c: 126:  while(!RC6) ;
 23008                           
 23009                           ;incstack = 0
 23010   019F9C  ACD0               	btfss	1232,6,c	;volatile
 23011   019F9E  D7FE               	goto	__ptext38
 23012                           
 23013                           ; BSR set to: 0
 23014                           ;src/boards/SBC8080-57Q.c: 128:  TRISB = 0x00;
 23015   019FA0  0E00               	movlw	0
 23016   019FA2  6EC7               	movwf	199,c	;volatile
 23017                           
 23018                           ;src/boards/SBC8080-57Q.c: 129:  TRISD = 0x00;
 23019   019FA4  0E00               	movlw	0
 23020   019FA6  6EC9               	movwf	201,c	;volatile
 23021                           
 23022                           ; BSR set to: 0
 23023                           ;src/boards/SBC8080-57Q.c: 131:  LATA5 = 1;
 23024   019FA8  8ABE               	bsf	1214,5,c	;volatile
 23025                           
 23026                           ; BSR set to: 0
 23027                           ;src/boards/SBC8080-57Q.c: 132:  LATC5 = 1;
 23028   019FAA  8AC0               	bsf	1216,5,c	;volatile
 23029                           
 23030                           ; BSR set to: 0
 23031                           ;src/boards/SBC8080-57Q.c: 133:  TRISA5 = 0;
 23032   019FAC  9AC6               	bcf	1222,5,c	;volatile
 23033                           
 23034                           ; BSR set to: 0
 23035                           ;src/boards/SBC8080-57Q.c: 134:  TRISC5 = 0;
 23036   019FAE  9AC8               	bcf	1224,5,c	;volatile
 23037                           
 23038                           ; BSR set to: 0
 23039   019FB0  0012               	return		;funcret
 23040   019FB2                     __end_of_emuz80_57q_enter_bus_master:
 23041                           	callstack 0
 23042                           
 23043 ;; *************** function _disk_io_handle *****************
 23044 ;; Defined at:
 23045 ;;		line 244 in file "src/io.c"
 23046 ;; Parameters:    Size  Location     Type
 23047 ;;		None
 23048 ;; Auto vars:     Size  Location     Type
 23049 ;;  addr            2  121[BANK6 ] unsigned short 
 23050 ;;  addr            2  119[BANK6 ] unsigned short 
 23051 ;;  sector          4  123[BANK6 ] unsigned long 
 23052 ;;  n               2  130[BANK6 ] unsigned int 
 23053 ;;  filep           2  127[BANK6 ] PTR struct .
 23054 ;;		 -> files(3276), 
 23055 ;;  fres            1  129[BANK6 ] enum E17186
 23056 ;; Return value:  Size  Location     Type
 23057 ;;                  1    wreg      void 
 23058 ;; Registers used:
 23059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23060 ;; Tracked objects:
 23061 ;;		On entry : 3F/0
 23062 ;;		On exit  : 3F/7
 23063 ;;		Unchanged: 0/0
 23064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23066 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23067 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23068 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23069 ;;Total ram usage:       17 bytes
 23070 ;; Hardware stack levels used: 1
 23071 ;; Hardware stack levels required when called: 16
 23072 ;; This function calls:
 23073 ;;		___wmul
 23074 ;;		_emuz80_57q_get_from_sram
 23075 ;;		_emuz80_57q_read_from_sram
 23076 ;;		_emuz80_57q_write_to_sram
 23077 ;;		_f_lseek
 23078 ;;		_f_read
 23079 ;;		_f_sync
 23080 ;;		_f_write
 23081 ;;		_printf
 23082 ;; This function is called by:
 23083 ;;		_main
 23084 ;; This function uses a non-reentrant model
 23085 ;;
 23086                           
 23087                           	psect	text39
 23088   014D4A                     __ptext39:
 23089                           	callstack 0
 23090   014D4A                     _disk_io_handle:
 23091                           	callstack 110
 23092                           
 23093                           ; BSR set to: 0
 23094                           ;src/io.c: 254:  disk_drive = emuz80_57q_get_from_sram(0xfb20);
 23095                           
 23096                           ; BSR set to: 0
 23097                           
 23098                           ; BSR set to: 0
 23099                           ;incstack = 0
 23100   014D4A  0EFB               	movlw	251
 23101   014D4C  6E02               	movwf	(emuz80_57q_get_from_sram@addr+1)^(0+1280),c
 23102   014D4E  0E20               	movlw	32
 23103   014D50  6E01               	movwf	emuz80_57q_get_from_sram@addr^(0+1280),c
 23104   014D52  ECBE  F0CF         	call	_emuz80_57q_get_from_sram	;wreg free
 23105   014D56  0107               	movlb	7	; () banked
 23106   014D58  6F2A               	movwf	disk_io_handle@disk_drive& (0+255),b
 23107                           
 23108                           ; BSR set to: 7
 23109                           ;src/io.c: 255:     disk_track = emuz80_57q_get_from_sram(0xfb21);
 23110   014D5A  0EFB               	movlw	251
 23111   014D5C  6E02               	movwf	(emuz80_57q_get_from_sram@addr+1)^(0+1280),c
 23112   014D5E  0E21               	movlw	33
 23113   014D60  6E01               	movwf	emuz80_57q_get_from_sram@addr^(0+1280),c
 23114   014D62  ECBE  F0CF         	call	_emuz80_57q_get_from_sram	;wreg free
 23115   014D66  0107               	movlb	7	; () banked
 23116   014D68  6F29               	movwf	disk_io_handle@disk_track& (0+255),b
 23117                           
 23118                           ; BSR set to: 7
 23119                           ;src/io.c: 256:  disk_sector = (disk_sector & 0xff00) | emuz80_57q_get_from_sram(0xfb22)
      +                          ;
 23120   014D6A  0E00               	movlw	0
 23121   014D6C  1519               	andwf	disk_io_handle@disk_sector& (0+255),w,b
 23122   014D6E  0106               	movlb	6	; () banked
 23123   014D70  6F73               	movwf	??_disk_io_handle& (0+255),b
 23124   014D72  0EFF               	movlw	255
 23125   014D74  0107               	movlb	7	; () banked
 23126   014D76  151A               	andwf	(disk_io_handle@disk_sector+1)& (0+255),w,b
 23127   014D78  0106               	movlb	6	; () banked
 23128   014D7A  6F74               	movwf	(??_disk_io_handle+1)& (0+255),b
 23129   014D7C  0EFB               	movlw	251
 23130   014D7E  6E02               	movwf	(emuz80_57q_get_from_sram@addr+1)^(0+1280),c
 23131   014D80  0E22               	movlw	34
 23132   014D82  6E01               	movwf	emuz80_57q_get_from_sram@addr^(0+1280),c
 23133   014D84  ECBE  F0CF         	call	_emuz80_57q_get_from_sram	;wreg free
 23134   014D88  0106               	movlb	6	; () banked
 23135   014D8A  6F75               	movwf	(??_disk_io_handle+2)& (0+255),b
 23136   014D8C  5175               	movf	(??_disk_io_handle+2)& (0+255),w,b
 23137   014D8E  1173               	iorwf	??_disk_io_handle& (0+255),w,b
 23138   014D90  0107               	movlb	7	; () banked
 23139   014D92  6F19               	movwf	disk_io_handle@disk_sector& (0+255),b
 23140   014D94  0106               	movlb	6	; () banked
 23141   014D96  5174               	movf	(??_disk_io_handle+1)& (0+255),w,b
 23142   014D98  0107               	movlb	7	; () banked
 23143   014D9A  6F1A               	movwf	(disk_io_handle@disk_sector+1)& (0+255),b
 23144                           
 23145                           ; BSR set to: 7
 23146                           ;src/io.c: 257:  disk_dmal = emuz80_57q_get_from_sram(0xfb23);
 23147   014D9C  0EFB               	movlw	251
 23148   014D9E  6E02               	movwf	(emuz80_57q_get_from_sram@addr+1)^(0+1280),c
 23149   014DA0  0E23               	movlw	35
 23150   014DA2  6E01               	movwf	emuz80_57q_get_from_sram@addr^(0+1280),c
 23151   014DA4  ECBE  F0CF         	call	_emuz80_57q_get_from_sram	;wreg free
 23152   014DA8  0107               	movlb	7	; () banked
 23153   014DAA  6F28               	movwf	disk_io_handle@disk_dmal& (0+255),b
 23154                           
 23155                           ; BSR set to: 7
 23156                           ;src/io.c: 258:  disk_dmah = emuz80_57q_get_from_sram(0xfb24);
 23157   014DAC  0EFB               	movlw	251
 23158   014DAE  6E02               	movwf	(emuz80_57q_get_from_sram@addr+1)^(0+1280),c
 23159   014DB0  0E24               	movlw	36
 23160   014DB2  6E01               	movwf	emuz80_57q_get_from_sram@addr^(0+1280),c
 23161   014DB4  ECBE  F0CF         	call	_emuz80_57q_get_from_sram	;wreg free
 23162   014DB8  0107               	movlb	7	; () banked
 23163   014DBA  6F27               	movwf	disk_io_handle@disk_dmah& (0+255),b
 23164                           
 23165                           ; BSR set to: 7
 23166                           ;src/io.c: 260:  if (num_drives <= disk_drive || drives[disk_drive].filep == ((void*)0))
      +                           {
 23167   014DBC  0E10               	movlw	16
 23168   014DBE  612A               	cpfslt	disk_io_handle@disk_drive& (0+255),b
 23169   014DC0  D00C               	goto	u16250
 23170                           
 23171                           ; BSR set to: 7
 23172   014DC2  512A               	movf	disk_io_handle@disk_drive& (0+255),w,b
 23173   014DC4  0D04               	mullw	4
 23174   014DC6  0E82               	movlw	low (_drives+2)
 23175   014DC8  24F3               	addwf	243,w,c
 23176   014DCA  6ED9               	movwf	fsr2l,c
 23177   014DCC  0E08               	movlw	high (_drives+2)
 23178   014DCE  20F4               	addwfc	prodh,w,c
 23179   014DD0  6EDA               	movwf	fsr2h,c
 23180   014DD2  50DE               	movf	postinc2,w,c
 23181   014DD4  10DE               	iorwf	postinc2,w,c
 23182   014DD6  A4D8               	btfss	status,2,c
 23183   014DD8  D00E               	goto	l12717
 23184   014DDA                     u16250:
 23185                           
 23186                           ; BSR set to: 7
 23187                           ;src/io.c: 261:   printf("select ERROR %d\n\r", disk_drive);
 23188   014DDA  0E1A               	movlw	low STR_86
 23189   014DDC  0105               	movlb	5	; () banked
 23190   014DDE  6F9A               	movwf	printf@fmt& (0+255),b
 23191   014DE0  0EFF               	movlw	high STR_86
 23192   014DE2  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 23193   014DE4  C72A  F59C         	movff	disk_io_handle@disk_drive,?_printf+2
 23194   014DE8  6B9D               	clrf	(?_printf+3)& (0+255),b
 23195   014DEA  EC53  F0CF         	call	_printf	;wreg free
 23196   014DEE                     l12715:
 23197                           
 23198                           ; BSR set to: 5
 23199                           ;src/io.c: 262:   disk_stat = 0x01;
 23200   014DEE  0E01               	movlw	1
 23201   014DF0  0107               	movlb	7	; () banked
 23202   014DF2  6FDA               	movwf	_disk_stat& (0+255),b
 23203                           
 23204                           ;src/io.c: 263:   goto disk_io_done;
 23205   014DF4  0012               	return	
 23206   014DF6                     l12717:
 23207                           
 23208                           ; BSR set to: 7
 23209                           ;src/io.c: 266:  sector = disk_track * drives[disk_drive].sectors + disk_sector - 1;
 23210   014DF6  C729  F501         	movff	disk_io_handle@disk_track,___wmul@multiplier
 23211   014DFA  6A02               	clrf	(___wmul@multiplier+1)^(0+1280),c
 23212   014DFC  512A               	movf	disk_io_handle@disk_drive& (0+255),w,b
 23213   014DFE  0D04               	mullw	4
 23214   014E00  0E80               	movlw	low _drives
 23215   014E02  24F3               	addwf	243,w,c
 23216   014E04  6ED9               	movwf	fsr2l,c
 23217   014E06  0E08               	movlw	high _drives
 23218   014E08  20F4               	addwfc	prodh,w,c
 23219   014E0A  6EDA               	movwf	fsr2h,c
 23220   014E0C  C4DE F503          	movff	postinc2,___wmul@multiplicand
 23221   014E10  C4DD F504          	movff	postdec2,___wmul@multiplicand+1
 23222   014E14  EC66  F0CF         	call	___wmul	;wreg free
 23223   014E18  0107               	movlb	7	; () banked
 23224   014E1A  5119               	movf	disk_io_handle@disk_sector& (0+255),w,b
 23225   014E1C  2601               	addwf	?___wmul^(0+1280),f,c
 23226   014E1E  511A               	movf	(disk_io_handle@disk_sector+1)& (0+255),w,b
 23227   014E20  2202               	addwfc	(?___wmul+1)^(0+1280),f,c
 23228   014E22  0EFF               	movlw	255
 23229   014E24  2401               	addwf	?___wmul^(0+1280),w,c
 23230   014E26  0106               	movlb	6	; () banked
 23231   014E28  6F73               	movwf	??_disk_io_handle& (0+255),b
 23232   014E2A  0EFF               	movlw	255
 23233   014E2C  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
 23234   014E2E  6F74               	movwf	(??_disk_io_handle+1)& (0+255),b
 23235   014E30  C673  F67B         	movff	??_disk_io_handle,disk_io_handle@sector
 23236   014E34  C674  F67C         	movff	??_disk_io_handle+1,disk_io_handle@sector+1
 23237   014E38  6B7D               	clrf	(disk_io_handle@sector+2)& (0+255),b
 23238   014E3A  6B7E               	clrf	(disk_io_handle@sector+3)& (0+255),b
 23239                           
 23240                           ; BSR set to: 6
 23241                           ;src/io.c: 267:  FIL *filep = drives[disk_drive].filep;
 23242   014E3C  0107               	movlb	7	; () banked
 23243   014E3E  512A               	movf	disk_io_handle@disk_drive& (0+255),w,b
 23244   014E40  0D04               	mullw	4
 23245   014E42  0E82               	movlw	low (_drives+2)
 23246   014E44  24F3               	addwf	243,w,c
 23247   014E46  6ED9               	movwf	fsr2l,c
 23248   014E48  0E08               	movlw	high (_drives+2)
 23249   014E4A  20F4               	addwfc	prodh,w,c
 23250   014E4C  6EDA               	movwf	fsr2h,c
 23251   014E4E  C4DE F67F          	movff	postinc2,disk_io_handle@filep
 23252   014E52  C4DD F680          	movff	postdec2,disk_io_handle@filep+1
 23253                           
 23254                           ; BSR set to: 7
 23255                           ;src/io.c: 268:  unsigned int n;;src/io.c: 269:  FRESULT fres;;src/io.c: 270:  if ((fres
      +                           = f_lseek(filep, sector * 128)) != FR_OK) {
 23256   014E56  C67F  F648         	movff	disk_io_handle@filep,f_lseek@fp
 23257   014E5A  C680  F649         	movff	disk_io_handle@filep+1,f_lseek@fp+1
 23258   014E5E  C67B  F673         	movff	disk_io_handle@sector,??_disk_io_handle
 23259   014E62  C67C  F674         	movff	disk_io_handle@sector+1,??_disk_io_handle+1
 23260   014E66  C67D  F675         	movff	disk_io_handle@sector+2,??_disk_io_handle+2
 23261   014E6A  C67E  F676         	movff	disk_io_handle@sector+3,??_disk_io_handle+3
 23262   014E6E  0E07               	movlw	7
 23263   014E70                     u16265:
 23264   014E70  90D8               	bcf	status,0,c
 23265   014E72  0106               	movlb	6	; () banked
 23266   014E74  3773               	rlcf	??_disk_io_handle& (0+255),f,b
 23267   014E76  3774               	rlcf	(??_disk_io_handle+1)& (0+255),f,b
 23268   014E78  3775               	rlcf	(??_disk_io_handle+2)& (0+255),f,b
 23269   014E7A  3776               	rlcf	(??_disk_io_handle+3)& (0+255),f,b
 23270   014E7C  2EE8               	decfsz	wreg,f,c
 23271   014E7E  D7F8               	goto	u16265
 23272   014E80  C673  F64A         	movff	??_disk_io_handle,f_lseek@ofs
 23273   014E84  C674  F64B         	movff	??_disk_io_handle+1,f_lseek@ofs+1
 23274   014E88  C675  F64C         	movff	??_disk_io_handle+2,f_lseek@ofs+2
 23275   014E8C  C676  F64D         	movff	??_disk_io_handle+3,f_lseek@ofs+3
 23276   014E90  EC57  F08C         	call	_f_lseek	;wreg free
 23277   014E94  6F81               	movwf	disk_io_handle@fres& (0+255),b
 23278   014E96  5181               	movf	disk_io_handle@fres& (0+255),w,b
 23279   014E98  B4D8               	btfsc	status,2,c
 23280   014E9A  D00B               	goto	l12727
 23281                           
 23282                           ; BSR set to: 6
 23283                           ;src/io.c: 271:   printf("f_lseek(): ERROR %d\n\r", fres);
 23284   014E9C  0EA2               	movlw	low STR_87
 23285   014E9E  0105               	movlb	5	; () banked
 23286   014EA0  6F9A               	movwf	printf@fmt& (0+255),b
 23287   014EA2  0EFE               	movlw	high STR_87
 23288   014EA4  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 23289   014EA6  C681  F59C         	movff	disk_io_handle@fres,?_printf+2
 23290   014EAA  6B9D               	clrf	(?_printf+3)& (0+255),b
 23291   014EAC  EC53  F0CF         	call	_printf	;wreg free
 23292   014EB0  D79E               	goto	l12715
 23293   014EB2                     l12727:
 23294                           
 23295                           ; BSR set to: 6
 23296                           ;src/io.c: 276:  if (io_addr == 0x40 +18) {
 23297   014EB2  0E52               	movlw	82
 23298   014EB4  0107               	movlb	7	; () banked
 23299   014EB6  192B               	xorwf	_io_addr& (0+255),w,b
 23300   014EB8  A4D8               	btfss	status,2,c
 23301   014EBA  D04B               	goto	l12743
 23302                           
 23303                           ; BSR set to: 7
 23304                           ;src/io.c: 279:   if ((fres = f_read(filep, disk_buf, 128, &n)) != FR_OK || n != 128) {
 23305   014EBC  C67F  F624         	movff	disk_io_handle@filep,f_read@fp
 23306   014EC0  C680  F625         	movff	disk_io_handle@filep+1,f_read@fp+1
 23307   014EC4  0E00               	movlw	low _disk_buf
 23308   014EC6  0106               	movlb	6	; () banked
 23309   014EC8  6F26               	movwf	f_read@buff& (0+255),b
 23310   014ECA  0E08               	movlw	high _disk_buf
 23311   014ECC  6F27               	movwf	(f_read@buff+1)& (0+255),b
 23312   014ECE  0E00               	movlw	0
 23313   014ED0  6F29               	movwf	(f_read@btr+1)& (0+255),b
 23314   014ED2  0E80               	movlw	128
 23315   014ED4  6F28               	movwf	f_read@btr& (0+255),b
 23316   014ED6  0E82               	movlw	low disk_io_handle@n
 23317   014ED8  6F2A               	movwf	f_read@br& (0+255),b
 23318   014EDA  0E06               	movlw	high disk_io_handle@n
 23319   014EDC  6F2B               	movwf	(f_read@br+1)& (0+255),b
 23320   014EDE  ECB3  F092         	call	_f_read	;wreg free
 23321   014EE2  6F81               	movwf	disk_io_handle@fres& (0+255),b
 23322   014EE4  5181               	movf	disk_io_handle@fres& (0+255),w,b
 23323   014EE6  A4D8               	btfss	status,2,c
 23324   014EE8  D005               	goto	u16300
 23325                           
 23326                           ; BSR set to: 6
 23327   014EEA  0E80               	movlw	128
 23328   014EEC  1982               	xorwf	disk_io_handle@n& (0+255),w,b
 23329   014EEE  1183               	iorwf	(disk_io_handle@n+1)& (0+255),w,b
 23330   014EF0  B4D8               	btfsc	status,2,c
 23331   014EF2  D00F               	goto	l12737
 23332   014EF4                     u16300:
 23333                           
 23334                           ; BSR set to: 6
 23335                           ;src/io.c: 280:    printf("f_read(): ERROR res=%d, n=%d\n\r", fres, n);
 23336   014EF4  0EE1               	movlw	low STR_88
 23337   014EF6  0105               	movlb	5	; () banked
 23338   014EF8  6F9A               	movwf	printf@fmt& (0+255),b
 23339   014EFA  0EFC               	movlw	high STR_88
 23340   014EFC  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 23341   014EFE  C681  F59C         	movff	disk_io_handle@fres,?_printf+2
 23342   014F02  6B9D               	clrf	(?_printf+3)& (0+255),b
 23343   014F04  C682  F59E         	movff	disk_io_handle@n,?_printf+4
 23344   014F08  C683  F59F         	movff	disk_io_handle@n+1,?_printf+5
 23345   014F0C  EC53  F0CF         	call	_printf	;wreg free
 23346   014F10  D76E               	goto	l12715
 23347   014F12                     l12737:
 23348                           
 23349                           ; BSR set to: 6
 23350                           ;src/io.c: 285:   disk_stat = 0x00;
 23351   014F12  0E00               	movlw	0
 23352   014F14  0107               	movlb	7	; () banked
 23353   014F16  6FDA               	movwf	_disk_stat& (0+255),b
 23354                           
 23355                           ;src/io.c: 287:   uint16_t addr = ((uint16_t)disk_dmah << 8) | disk_dmal;
 23356   014F18  5127               	movf	disk_io_handle@disk_dmah& (0+255),w,b
 23357   014F1A  0106               	movlb	6	; () banked
 23358   014F1C  6F73               	movwf	??_disk_io_handle& (0+255),b
 23359   014F1E  0107               	movlb	7	; () banked
 23360   014F20  5128               	movf	disk_io_handle@disk_dmal& (0+255),w,b
 23361   014F22  0106               	movlb	6	; () banked
 23362   014F24  6F77               	movwf	disk_io_handle@addr& (0+255),b
 23363   014F26  C673  F678         	movff	??_disk_io_handle,disk_io_handle@addr+1
 23364                           
 23365                           ; BSR set to: 6
 23366                           ;src/io.c: 288:   emuz80_57q_write_to_sram(addr, (uint8_t*)disk_buf, 128);
 23367   014F2A  C677  F501         	movff	disk_io_handle@addr,emuz80_57q_write_to_sram@addr
 23368   014F2E  C678  F502         	movff	disk_io_handle@addr+1,emuz80_57q_write_to_sram@addr+1
 23369   014F32  0E00               	movlw	low _disk_buf
 23370   014F34  6E03               	movwf	emuz80_57q_write_to_sram@buf^(0+1280),c
 23371   014F36  0E08               	movlw	high _disk_buf
 23372   014F38  6E04               	movwf	(emuz80_57q_write_to_sram@buf+1)^(0+1280),c
 23373   014F3A  0E00               	movlw	0
 23374   014F3C  6E06               	movwf	(emuz80_57q_write_to_sram@len+1)^(0+1280),c
 23375   014F3E  0E80               	movlw	128
 23376   014F40  6E05               	movwf	emuz80_57q_write_to_sram@len^(0+1280),c
 23377   014F42  EC86  F0CA         	call	_emuz80_57q_write_to_sram	;wreg free
 23378   014F46                     l12741:
 23379                           
 23380                           ;src/io.c: 289:   disk_datap = ((void*)0);
 23381   014F46  0E00               	movlw	0
 23382   014F48  0107               	movlb	7	; () banked
 23383   014F4A  6F17               	movwf	disk_io_handle@disk_datap& (0+255),b
 23384   014F4C  0E00               	movlw	0
 23385   014F4E  6F18               	movwf	(disk_io_handle@disk_datap+1)& (0+255),b
 23386                           
 23387                           ;src/io.c: 291:  } else
 23388   014F50  0012               	return	
 23389   014F52                     l12743:
 23390                           
 23391                           ; BSR set to: 7
 23392                           ;src/io.c: 292:  if (io_addr == 0x40 +19) {
 23393   014F52  0E53               	movlw	83
 23394   014F54  192B               	xorwf	_io_addr& (0+255),w,b
 23395   014F56  A4D8               	btfss	status,2,c
 23396   014F58  0012               	return	
 23397                           
 23398                           ; BSR set to: 7
 23399                           ;src/io.c: 295:   uint16_t addr = ((uint16_t)disk_dmah << 8) | disk_dmal;
 23400   014F5A  5127               	movf	disk_io_handle@disk_dmah& (0+255),w,b
 23401   014F5C  0106               	movlb	6	; () banked
 23402   014F5E  6F73               	movwf	??_disk_io_handle& (0+255),b
 23403   014F60  0107               	movlb	7	; () banked
 23404   014F62  5128               	movf	disk_io_handle@disk_dmal& (0+255),w,b
 23405   014F64  0106               	movlb	6	; () banked
 23406   014F66  6F79               	movwf	disk_io_handle@addr_2826& (0+255),b
 23407   014F68  C673  F67A         	movff	??_disk_io_handle,disk_io_handle@addr_2826+1
 23408                           
 23409                           ; BSR set to: 6
 23410                           ;src/io.c: 296:   emuz80_57q_read_from_sram(addr, (uint8_t*)disk_buf, 128);
 23411   014F6C  C679  F501         	movff	disk_io_handle@addr_2826,emuz80_57q_read_from_sram@addr
 23412   014F70  C67A  F502         	movff	disk_io_handle@addr_2826+1,emuz80_57q_read_from_sram@addr+1
 23413   014F74  0E00               	movlw	low _disk_buf
 23414   014F76  6E03               	movwf	emuz80_57q_read_from_sram@buf^(0+1280),c
 23415   014F78  0E08               	movlw	high _disk_buf
 23416   014F7A  6E04               	movwf	(emuz80_57q_read_from_sram@buf+1)^(0+1280),c
 23417   014F7C  0E00               	movlw	0
 23418   014F7E  6E06               	movwf	(emuz80_57q_read_from_sram@len+1)^(0+1280),c
 23419   014F80  0E80               	movlw	128
 23420   014F82  6E05               	movwf	emuz80_57q_read_from_sram@len^(0+1280),c
 23421   014F84  EC5E  F0CC         	call	_emuz80_57q_read_from_sram	;wreg free
 23422                           
 23423                           ;src/io.c: 299:   if ((fres = f_write(filep, disk_buf, 128, &n)) != FR_OK || n != 128) {
 23424   014F88  C67F  F648         	movff	disk_io_handle@filep,f_write@fp
 23425   014F8C  C680  F649         	movff	disk_io_handle@filep+1,f_write@fp+1
 23426   014F90  0E00               	movlw	low _disk_buf
 23427   014F92  0106               	movlb	6	; () banked
 23428   014F94  6F4A               	movwf	f_write@buff& (0+255),b
 23429   014F96  0E08               	movlw	high _disk_buf
 23430   014F98  6F4B               	movwf	(f_write@buff+1)& (0+255),b
 23431   014F9A  0E00               	movlw	0
 23432   014F9C  6F4D               	movwf	(f_write@btw+1)& (0+255),b
 23433   014F9E  0E80               	movlw	128
 23434   014FA0  6F4C               	movwf	f_write@btw& (0+255),b
 23435   014FA2  0E82               	movlw	low disk_io_handle@n
 23436   014FA4  6F4E               	movwf	f_write@bw& (0+255),b
 23437   014FA6  0E06               	movlw	high disk_io_handle@n
 23438   014FA8  6F4F               	movwf	(f_write@bw+1)& (0+255),b
 23439   014FAA  ECDB  F088         	call	_f_write	;wreg free
 23440   014FAE  6F81               	movwf	disk_io_handle@fres& (0+255),b
 23441   014FB0  5181               	movf	disk_io_handle@fres& (0+255),w,b
 23442   014FB2  A4D8               	btfss	status,2,c
 23443   014FB4  D005               	goto	u16330
 23444                           
 23445                           ; BSR set to: 6
 23446   014FB6  0E80               	movlw	128
 23447   014FB8  1982               	xorwf	disk_io_handle@n& (0+255),w,b
 23448   014FBA  1183               	iorwf	(disk_io_handle@n+1)& (0+255),w,b
 23449   014FBC  B4D8               	btfsc	status,2,c
 23450   014FBE  D00F               	goto	l12757
 23451   014FC0                     u16330:
 23452                           
 23453                           ; BSR set to: 6
 23454                           ;src/io.c: 300:    printf("f_write(): ERROR res=%d, n=%d\n\r", fres, n);
 23455   014FC0  0EC1               	movlw	low STR_89
 23456   014FC2  0105               	movlb	5	; () banked
 23457   014FC4  6F9A               	movwf	printf@fmt& (0+255),b
 23458   014FC6  0EFC               	movlw	high STR_89
 23459   014FC8  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 23460   014FCA  C681  F59C         	movff	disk_io_handle@fres,?_printf+2
 23461   014FCE  6B9D               	clrf	(?_printf+3)& (0+255),b
 23462   014FD0  C682  F59E         	movff	disk_io_handle@n,?_printf+4
 23463   014FD4  C683  F59F         	movff	disk_io_handle@n+1,?_printf+5
 23464   014FD8  EC53  F0CF         	call	_printf	;wreg free
 23465   014FDC  D708               	goto	l12715
 23466   014FDE                     l12757:
 23467                           
 23468                           ; BSR set to: 6
 23469                           ;src/io.c: 304:   if ((fres = f_sync(filep)) != FR_OK) {
 23470   014FDE  C67F  F60A         	movff	disk_io_handle@filep,f_sync@fp
 23471   014FE2  C680  F60B         	movff	disk_io_handle@filep+1,f_sync@fp+1
 23472   014FE6  EC1C  F0B1         	call	_f_sync	;wreg free
 23473   014FEA  0106               	movlb	6	; () banked
 23474   014FEC  6F81               	movwf	disk_io_handle@fres& (0+255),b
 23475   014FEE  5181               	movf	disk_io_handle@fres& (0+255),w,b
 23476   014FF0  B4D8               	btfsc	status,2,c
 23477   014FF2  D00B               	goto	l12763
 23478                           
 23479                           ; BSR set to: 6
 23480                           ;src/io.c: 305:    printf("f_sync(): ERROR %d\n\r", fres);
 23481   014FF4  0EB8               	movlw	low STR_90
 23482   014FF6  0105               	movlb	5	; () banked
 23483   014FF8  6F9A               	movwf	printf@fmt& (0+255),b
 23484   014FFA  0EFE               	movlw	high STR_90
 23485   014FFC  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 23486   014FFE  C681  F59C         	movff	disk_io_handle@fres,?_printf+2
 23487   015002  6B9D               	clrf	(?_printf+3)& (0+255),b
 23488   015004  EC53  F0CF         	call	_printf	;wreg free
 23489   015008  D6F2               	goto	l12715
 23490   01500A                     l12763:
 23491                           
 23492                           ; BSR set to: 6
 23493                           ;src/io.c: 309:   disk_stat = 0x00;
 23494   01500A  0E00               	movlw	0
 23495   01500C  0107               	movlb	7	; () banked
 23496   01500E  6FDA               	movwf	_disk_stat& (0+255),b
 23497   015010  D79A               	goto	l12741
 23498   015012                     __end_of_disk_io_handle:
 23499                           	callstack 0
 23500                           
 23501 ;; *************** function _f_write *****************
 23502 ;; Defined at:
 23503 ;;		line 4014 in file "fatfs/ff.c"
 23504 ;; Parameters:    Size  Location     Type
 23505 ;;  fp              2   72[BANK6 ] PTR struct .
 23506 ;;		 -> files(3276), 
 23507 ;;  buff            2   74[BANK6 ] PTR const void 
 23508 ;;		 -> disk_buf(128), 
 23509 ;;  btw             2   76[BANK6 ] unsigned int 
 23510 ;;  bw              2   78[BANK6 ] PTR unsigned int 
 23511 ;;		 -> disk_io_handle@n(2), 
 23512 ;; Auto vars:     Size  Location     Type
 23513 ;;  sect            4  109[BANK6 ] unsigned long 
 23514 ;;  clst            4  103[BANK6 ] unsigned long 
 23515 ;;  fs              2  113[BANK6 ] PTR struct .
 23516 ;;		 -> fs(560), NULL(0), 
 23517 ;;  wcnt            2  107[BANK6 ] unsigned int 
 23518 ;;  cc              2  101[BANK6 ] unsigned int 
 23519 ;;  csect           2   99[BANK6 ] unsigned int 
 23520 ;;  wbuff           2   97[BANK6 ] PTR const unsigned char 
 23521 ;;		 -> disk_buf(128), 
 23522 ;;  res             1   96[BANK6 ] enum E275
 23523 ;; Return value:  Size  Location     Type
 23524 ;;                  1    wreg      enum E275
 23525 ;; Registers used:
 23526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23527 ;; Tracked objects:
 23528 ;;		On entry : 3F/6
 23529 ;;		On exit  : 3F/6
 23530 ;;		Unchanged: 0/0
 23531 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23532 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23533 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23534 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23535 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23536 ;;Total ram usage:       43 bytes
 23537 ;; Hardware stack levels used: 1
 23538 ;; Hardware stack levels required when called: 15
 23539 ;; This function calls:
 23540 ;;		_clst2sect
 23541 ;;		_create_chain
 23542 ;;		_disk_read
 23543 ;;		_disk_write
 23544 ;;		_memcpy
 23545 ;;		_validate
 23546 ;; This function is called by:
 23547 ;;		_disk_io_handle
 23548 ;; This function uses a non-reentrant model
 23549 ;;
 23550                           
 23551                           	psect	text40
 23552   0111B6                     __ptext40:
 23553                           	callstack 0
 23554   0111B6                     _f_write:
 23555                           	callstack 110
 23556                           
 23557                           ; BSR set to: 6
 23558                           ;fatfs/ff.c: 4015:  FIL* fp,;fatfs/ff.c: 4016:  const void* buff,;fatfs/ff.c: 4017:  UIN
      +                          T btw,;fatfs/ff.c: 4018:  UINT* bw;fatfs/ff.c: 4020: {;fatfs/ff.c: 4021:  FRESULT res;;f
      +                          atfs/ff.c: 4022:  FATFS *fs;;fatfs/ff.c: 4023:  DWORD clst;;fatfs/ff.c: 4024:  LBA_t sec
      +                          t;;fatfs/ff.c: 4025:  UINT wcnt, cc, csect;;fatfs/ff.c: 4026:  const BYTE *wbuff = (cons
      +                          t BYTE*)buff;
 23559                           
 23560                           ; BSR set to: 7
 23561                           ;incstack = 0
 23562   0111B6  C64A  F661         	movff	f_write@buff,f_write@wbuff
 23563   0111BA  C64B  F662         	movff	f_write@buff+1,f_write@wbuff+1
 23564                           
 23565                           ; BSR set to: 6
 23566                           ;fatfs/ff.c: 4029:  *bw = 0;
 23567   0111BE  C64E  F4D9         	movff	f_write@bw,fsr2l
 23568   0111C2  C64F  F4DA         	movff	f_write@bw+1,fsr2h
 23569   0111C6  6ADE               	clrf	postinc2,c
 23570   0111C8  6ADD               	clrf	postdec2,c
 23571                           
 23572                           ; BSR set to: 6
 23573                           ;fatfs/ff.c: 4030:  res = validate(&fp->obj, &fs);
 23574   0111CA  C648  F5A6         	movff	f_write@fp,validate@obj
 23575   0111CE  C649  F5A7         	movff	f_write@fp+1,validate@obj+1
 23576   0111D2  0E71               	movlw	low f_write@fs
 23577   0111D4  0105               	movlb	5	; () banked
 23578   0111D6  6FA8               	movwf	validate@rfs& (0+255),b
 23579   0111D8  0E06               	movlw	high f_write@fs
 23580   0111DA  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 23581   0111DC  EC62  F0C3         	call	_validate	;wreg free
 23582   0111E0  0106               	movlb	6	; () banked
 23583   0111E2  6F60               	movwf	f_write@res& (0+255),b
 23584                           
 23585                           ; BSR set to: 6
 23586                           ;fatfs/ff.c: 4031:  if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res;
 23587   0111E4  5160               	movf	f_write@res& (0+255),w,b
 23588   0111E6  A4D8               	btfss	status,2,c
 23589   0111E8  D00B               	goto	u14900
 23590                           
 23591                           ; BSR set to: 6
 23592   0111EA  EE20 F00F          	lfsr	2,15
 23593   0111EE  5148               	movf	f_write@fp& (0+255),w,b
 23594   0111F0  26D9               	addwf	fsr2l,f,c
 23595   0111F2  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23596   0111F4  22DA               	addwfc	fsr2h,f,c
 23597   0111F6  50DF               	movf	indf2,w,c
 23598   0111F8  6F60               	movwf	f_write@res& (0+255),b
 23599   0111FA  5160               	movf	f_write@res& (0+255),w,b
 23600   0111FC  B4D8               	btfsc	status,2,c
 23601   0111FE  D002               	goto	l11759
 23602   011200                     u14900:
 23603                           
 23604                           ; BSR set to: 6
 23605   011200  5160               	movf	f_write@res& (0+255),w,b
 23606   011202  0012               	return	
 23607   011204                     l11759:
 23608                           
 23609                           ; BSR set to: 6
 23610                           ;fatfs/ff.c: 4032:  if (!(fp->flag & 0x02)) return FR_DENIED;
 23611   011204  EE20 F00E          	lfsr	2,14
 23612   011208  5148               	movf	f_write@fp& (0+255),w,b
 23613   01120A  26D9               	addwf	fsr2l,f,c
 23614   01120C  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23615   01120E  22DA               	addwfc	fsr2h,f,c
 23616   011210  B2DF               	btfsc	indf2,1,c
 23617   011212  D002               	goto	l11767
 23618                           
 23619                           ; BSR set to: 6
 23620   011214  0E07               	movlw	7
 23621   011216  0012               	return	
 23622   011218                     l11767:
 23623                           
 23624                           ; BSR set to: 6
 23625   011218  EE20 F010          	lfsr	2,16
 23626   01121C  5148               	movf	f_write@fp& (0+255),w,b
 23627   01121E  26D9               	addwf	fsr2l,f,c
 23628   011220  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23629   011222  22DA               	addwfc	fsr2h,f,c
 23630   011224  EE10 F010          	lfsr	1,16
 23631   011228  5148               	movf	f_write@fp& (0+255),w,b
 23632   01122A  26E1               	addwf	fsr1l,f,c
 23633   01122C  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23634   01122E  22E2               	addwfc	fsr1h,f,c
 23635   011230  C4E6 F654          	movff	postinc1,??_f_write+4
 23636   011234  C4E6 F655          	movff	postinc1,??_f_write+5
 23637   011238  C4E6 F656          	movff	postinc1,??_f_write+6
 23638   01123C  C4E6 F657          	movff	postinc1,??_f_write+7
 23639   011240  514C               	movf	f_write@btw& (0+255),w,b
 23640   011242  2554               	addwf	(??_f_write+4)& (0+255),w,b
 23641   011244  6F58               	movwf	(??_f_write+8)& (0+255),b
 23642   011246  514D               	movf	(f_write@btw+1)& (0+255),w,b
 23643   011248  2155               	addwfc	(??_f_write+5)& (0+255),w,b
 23644   01124A  6F59               	movwf	(??_f_write+9)& (0+255),b
 23645   01124C  0E00               	movlw	0
 23646   01124E  2156               	addwfc	(??_f_write+6)& (0+255),w,b
 23647   011250  6F5A               	movwf	(??_f_write+10)& (0+255),b
 23648   011252  0E00               	movlw	0
 23649   011254  2157               	addwfc	(??_f_write+7)& (0+255),w,b
 23650   011256  6F5B               	movwf	(??_f_write+11)& (0+255),b
 23651   011258  50DE               	movf	postinc2,w,c
 23652   01125A  5D58               	subwf	(??_f_write+8)& (0+255),w,b
 23653   01125C  50DE               	movf	postinc2,w,c
 23654   01125E  5959               	subwfb	(??_f_write+9)& (0+255),w,b
 23655   011260  50DE               	movf	postinc2,w,c
 23656   011262  595A               	subwfb	(??_f_write+10)& (0+255),w,b
 23657   011264  50DE               	movf	postinc2,w,c
 23658   011266  595B               	subwfb	(??_f_write+11)& (0+255),w,b
 23659   011268  B0D8               	btfsc	status,0,c
 23660   01126A  D00E               	goto	l11771
 23661                           
 23662                           ; BSR set to: 6
 23663                           ;fatfs/ff.c: 4036:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 23664   01126C  EE20 F010          	lfsr	2,16
 23665   011270  5148               	movf	f_write@fp& (0+255),w,b
 23666   011272  26D9               	addwf	fsr2l,f,c
 23667   011274  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23668   011276  22DA               	addwfc	fsr2h,f,c
 23669   011278  C4DE F650          	movff	postinc2,??_f_write
 23670   01127C  C4DD F651          	movff	postdec2,??_f_write+1
 23671   011280  1D50               	comf	??_f_write& (0+255),w,b
 23672   011282  6F4C               	movwf	f_write@btw& (0+255),b
 23673   011284  1D51               	comf	(??_f_write+1)& (0+255),w,b
 23674   011286  6F4D               	movwf	(f_write@btw+1)& (0+255),b
 23675   011288                     l11771:
 23676                           
 23677                           ; BSR set to: 6
 23678                           ;fatfs/ff.c: 4039:  for ( ; btw > 0; btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr +
      +                          = wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize) {
 23679   011288  514C               	movf	f_write@btw& (0+255),w,b
 23680   01128A  114D               	iorwf	(f_write@btw+1)& (0+255),w,b
 23681   01128C  B4D8               	btfsc	status,2,c
 23682   01128E  D305               	goto	l11899
 23683                           
 23684                           ; BSR set to: 6
 23685                           ;fatfs/ff.c: 4040:   if (fp->fptr % ((UINT)512) == 0) {
 23686   011290  EE20 F010          	lfsr	2,16
 23687   011294  5148               	movf	f_write@fp& (0+255),w,b
 23688   011296  26D9               	addwf	fsr2l,f,c
 23689   011298  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23690   01129A  22DA               	addwfc	fsr2h,f,c
 23691   01129C  0EFF               	movlw	255
 23692   01129E  14DE               	andwf	postinc2,w,c
 23693   0112A0  6F50               	movwf	??_f_write& (0+255),b
 23694   0112A2  0E01               	movlw	1
 23695   0112A4  14DE               	andwf	postinc2,w,c
 23696   0112A6  6F51               	movwf	(??_f_write+1)& (0+255),b
 23697   0112A8  0E00               	movlw	0
 23698   0112AA  14DE               	andwf	postinc2,w,c
 23699   0112AC  6F52               	movwf	(??_f_write+2)& (0+255),b
 23700   0112AE  0E00               	movlw	0
 23701   0112B0  14DE               	andwf	postinc2,w,c
 23702   0112B2  6F53               	movwf	(??_f_write+3)& (0+255),b
 23703   0112B4  5150               	movf	??_f_write& (0+255),w,b
 23704   0112B6  1151               	iorwf	(??_f_write+1)& (0+255),w,b
 23705   0112B8  1152               	iorwf	(??_f_write+2)& (0+255),w,b
 23706   0112BA  1153               	iorwf	(??_f_write+3)& (0+255),w,b
 23707   0112BC  A4D8               	btfss	status,2,c
 23708   0112BE  D249               	goto	l684
 23709                           
 23710                           ; BSR set to: 6
 23711                           ;fatfs/ff.c: 4041:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->csize - 1);
 23712   0112C0  EE20 F010          	lfsr	2,16
 23713   0112C4  5148               	movf	f_write@fp& (0+255),w,b
 23714   0112C6  26D9               	addwf	fsr2l,f,c
 23715   0112C8  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23716   0112CA  22DA               	addwfc	fsr2h,f,c
 23717   0112CC  C4DE F650          	movff	postinc2,??_f_write
 23718   0112D0  C4DE F651          	movff	postinc2,??_f_write+1
 23719   0112D4  C4DE F652          	movff	postinc2,??_f_write+2
 23720   0112D8  C4DE F653          	movff	postinc2,??_f_write+3
 23721   0112DC  0E0A               	movlw	10
 23722   0112DE  D005               	goto	u14950
 23723   0112E0                     u14955:
 23724   0112E0  90D8               	bcf	status,0,c
 23725   0112E2  3353               	rrcf	(??_f_write+3)& (0+255),f,b
 23726   0112E4  3352               	rrcf	(??_f_write+2)& (0+255),f,b
 23727   0112E6  3351               	rrcf	(??_f_write+1)& (0+255),f,b
 23728   0112E8  3350               	rrcf	??_f_write& (0+255),f,b
 23729   0112EA                     u14950:
 23730   0112EA  2EE8               	decfsz	wreg,f,c
 23731   0112EC  D7F9               	goto	u14955
 23732   0112EE  EE20 F00A          	lfsr	2,10
 23733   0112F2  5171               	movf	f_write@fs& (0+255),w,b
 23734   0112F4  26D9               	addwf	fsr2l,f,c
 23735   0112F6  5172               	movf	(f_write@fs+1)& (0+255),w,b
 23736   0112F8  22DA               	addwfc	fsr2h,f,c
 23737   0112FA  C4DE F654          	movff	postinc2,??_f_write+4
 23738   0112FE  C4DD F655          	movff	postdec2,??_f_write+5
 23739   011302  0EFF               	movlw	255
 23740   011304  2554               	addwf	(??_f_write+4)& (0+255),w,b
 23741   011306  6F56               	movwf	(??_f_write+6)& (0+255),b
 23742   011308  0EFF               	movlw	255
 23743   01130A  2155               	addwfc	(??_f_write+5)& (0+255),w,b
 23744   01130C  6F57               	movwf	(??_f_write+7)& (0+255),b
 23745   01130E  5150               	movf	??_f_write& (0+255),w,b
 23746   011310  1556               	andwf	(??_f_write+6)& (0+255),w,b
 23747   011312  6F63               	movwf	f_write@csect& (0+255),b
 23748   011314  5151               	movf	(??_f_write+1)& (0+255),w,b
 23749   011316  1557               	andwf	(??_f_write+7)& (0+255),w,b
 23750   011318  6F64               	movwf	(f_write@csect+1)& (0+255),b
 23751                           
 23752                           ; BSR set to: 6
 23753                           ;fatfs/ff.c: 4042:    if (csect == 0) {
 23754   01131A  5163               	movf	f_write@csect& (0+255),w,b
 23755   01131C  1164               	iorwf	(f_write@csect+1)& (0+255),w,b
 23756   01131E  A4D8               	btfss	status,2,c
 23757   011320  D09C               	goto	l685
 23758                           
 23759                           ; BSR set to: 6
 23760                           ;fatfs/ff.c: 4043:     if (fp->fptr == 0) {
 23761   011322  EE20 F010          	lfsr	2,16
 23762   011326  5148               	movf	f_write@fp& (0+255),w,b
 23763   011328  26D9               	addwf	fsr2l,f,c
 23764   01132A  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23765   01132C  22DA               	addwfc	fsr2h,f,c
 23766   01132E  50DE               	movf	postinc2,w,c
 23767   011330  10DE               	iorwf	postinc2,w,c
 23768   011332  10DE               	iorwf	postinc2,w,c
 23769   011334  10DE               	iorwf	postinc2,w,c
 23770   011336  A4D8               	btfss	status,2,c
 23771   011338  D023               	goto	l11789
 23772                           
 23773                           ; BSR set to: 6
 23774                           ;fatfs/ff.c: 4044:      clst = fp->obj.sclust;
 23775   01133A  EE20 F006          	lfsr	2,6
 23776   01133E  5148               	movf	f_write@fp& (0+255),w,b
 23777   011340  26D9               	addwf	fsr2l,f,c
 23778   011342  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23779   011344  22DA               	addwfc	fsr2h,f,c
 23780   011346  C4DE F667          	movff	postinc2,f_write@clst
 23781   01134A  C4DE F668          	movff	postinc2,f_write@clst+1
 23782   01134E  C4DE F669          	movff	postinc2,f_write@clst+2
 23783   011352  C4DE F66A          	movff	postinc2,f_write@clst+3
 23784                           
 23785                           ; BSR set to: 6
 23786                           ;fatfs/ff.c: 4045:      if (clst == 0) {
 23787   011356  5167               	movf	f_write@clst& (0+255),w,b
 23788   011358  1168               	iorwf	(f_write@clst+1)& (0+255),w,b
 23789   01135A  1169               	iorwf	(f_write@clst+2)& (0+255),w,b
 23790   01135C  116A               	iorwf	(f_write@clst+3)& (0+255),w,b
 23791   01135E  A4D8               	btfss	status,2,c
 23792   011360  D02B               	goto	l11791
 23793                           
 23794                           ; BSR set to: 6
 23795                           ;fatfs/ff.c: 4046:       clst = create_chain(&fp->obj, 0);
 23796   011362  C648  F62B         	movff	f_write@fp,create_chain@obj
 23797   011366  C649  F62C         	movff	f_write@fp+1,create_chain@obj+1
 23798   01136A  0E00               	movlw	0
 23799   01136C  6F2D               	movwf	create_chain@clst& (0+255),b
 23800   01136E  0E00               	movlw	0
 23801   011370  6F2E               	movwf	(create_chain@clst+1)& (0+255),b
 23802   011372  0E00               	movlw	0
 23803   011374  6F2F               	movwf	(create_chain@clst+2)& (0+255),b
 23804   011376  0E00               	movlw	0
 23805   011378  6F30               	movwf	(create_chain@clst+3)& (0+255),b
 23806   01137A  EC96  F098         	call	_create_chain	;wreg free
 23807   01137E  D014               	goto	L9
 23808   011380                     l11789:
 23809                           
 23810                           ; BSR set to: 6
 23811                           ;fatfs/ff.c: 4054:      {;fatfs/ff.c: 4055:       clst = create_chain(&fp->obj, fp->clus
      +                          t);
 23812   011380  C648  F62B         	movff	f_write@fp,create_chain@obj
 23813   011384  C649  F62C         	movff	f_write@fp+1,create_chain@obj+1
 23814   011388  EE20 F014          	lfsr	2,20
 23815   01138C  5148               	movf	f_write@fp& (0+255),w,b
 23816   01138E  26D9               	addwf	fsr2l,f,c
 23817   011390  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23818   011392  22DA               	addwfc	fsr2h,f,c
 23819   011394  C4DE F62D          	movff	postinc2,create_chain@clst
 23820   011398  C4DE F62E          	movff	postinc2,create_chain@clst+1
 23821   01139C  C4DE F62F          	movff	postinc2,create_chain@clst+2
 23822   0113A0  C4DE F630          	movff	postinc2,create_chain@clst+3
 23823   0113A4  EC96  F098         	call	_create_chain	;wreg free
 23824   0113A8                     L9:
 23825   0113A8  C62B  F667         	movff	?_create_chain,f_write@clst
 23826   0113AC  C62C  F668         	movff	?_create_chain+1,f_write@clst+1
 23827   0113B0  C62D  F669         	movff	?_create_chain+2,f_write@clst+2
 23828   0113B4  C62E  F66A         	movff	?_create_chain+3,f_write@clst+3
 23829   0113B8                     l11791:
 23830                           
 23831                           ; BSR set to: 6
 23832                           ;fatfs/ff.c: 4058:     if (clst == 0) break;
 23833   0113B8  5167               	movf	f_write@clst& (0+255),w,b
 23834   0113BA  1168               	iorwf	(f_write@clst+1)& (0+255),w,b
 23835   0113BC  1169               	iorwf	(f_write@clst+2)& (0+255),w,b
 23836   0113BE  116A               	iorwf	(f_write@clst+3)& (0+255),w,b
 23837   0113C0  B4D8               	btfsc	status,2,c
 23838   0113C2  D26B               	goto	l11899
 23839                           
 23840                           ; BSR set to: 6
 23841                           ;fatfs/ff.c: 4059:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR;
      +                           };
 23842   0113C4  0567               	decf	f_write@clst& (0+255),w,b
 23843   0113C6  1168               	iorwf	(f_write@clst+1)& (0+255),w,b
 23844   0113C8  1169               	iorwf	(f_write@clst+2)& (0+255),w,b
 23845   0113CA  116A               	iorwf	(f_write@clst+3)& (0+255),w,b
 23846   0113CC  A4D8               	btfss	status,2,c
 23847   0113CE  D00A               	goto	l11803
 23848   0113D0                     u15000:
 23849                           
 23850                           ; BSR set to: 6
 23851   0113D0  EE20 F00F          	lfsr	2,15
 23852   0113D4  5148               	movf	f_write@fp& (0+255),w,b
 23853   0113D6  26D9               	addwf	fsr2l,f,c
 23854   0113D8  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23855   0113DA  22DA               	addwfc	fsr2h,f,c
 23856   0113DC  0E02               	movlw	2
 23857   0113DE  6EDF               	movwf	indf2,c
 23858                           
 23859                           ; BSR set to: 6
 23860   0113E0  0E02               	movlw	2
 23861   0113E2  0012               	return	
 23862   0113E4                     l11803:
 23863                           
 23864                           ; BSR set to: 6
 23865                           ;fatfs/ff.c: 4060:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return F
      +                          R_DISK_ERR; };
 23866   0113E4  2967               	incf	f_write@clst& (0+255),w,b
 23867   0113E6  E111               	bnz	l11811
 23868   0113E8  2968               	incf	(f_write@clst+1)& (0+255),w,b
 23869   0113EA  E10F               	bnz	l11811
 23870   0113EC  2969               	incf	(f_write@clst+2)& (0+255),w,b
 23871   0113EE  E10D               	bnz	l11811
 23872   0113F0  296A               	incf	(f_write@clst+3)& (0+255),w,b
 23873   0113F2  A4D8               	btfss	status,2,c
 23874   0113F4  D00A               	goto	l11811
 23875   0113F6                     u15010:
 23876                           
 23877                           ; BSR set to: 6
 23878   0113F6  EE20 F00F          	lfsr	2,15
 23879   0113FA  5148               	movf	f_write@fp& (0+255),w,b
 23880   0113FC  26D9               	addwf	fsr2l,f,c
 23881   0113FE  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23882   011400  22DA               	addwfc	fsr2h,f,c
 23883   011402  0E01               	movlw	1
 23884   011404  6EDF               	movwf	indf2,c
 23885                           
 23886                           ; BSR set to: 6
 23887   011406  0E01               	movlw	1
 23888   011408  0012               	return	
 23889   01140A                     l11811:
 23890                           
 23891                           ; BSR set to: 6
 23892                           ;fatfs/ff.c: 4061:     fp->clust = clst;
 23893   01140A  EE20 F014          	lfsr	2,20
 23894   01140E  5148               	movf	f_write@fp& (0+255),w,b
 23895   011410  26D9               	addwf	fsr2l,f,c
 23896   011412  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23897   011414  22DA               	addwfc	fsr2h,f,c
 23898   011416  C667  F4DE         	movff	f_write@clst,postinc2
 23899   01141A  C668  F4DE         	movff	f_write@clst+1,postinc2
 23900   01141E  C669  F4DE         	movff	f_write@clst+2,postinc2
 23901   011422  C66A  F4DE         	movff	f_write@clst+3,postinc2
 23902                           
 23903                           ;fatfs/ff.c: 4062:     if (fp->obj.sclust == 0) fp->obj.sclust = clst;
 23904   011426  EE20 F006          	lfsr	2,6
 23905   01142A  5148               	movf	f_write@fp& (0+255),w,b
 23906   01142C  26D9               	addwf	fsr2l,f,c
 23907   01142E  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23908   011430  22DA               	addwfc	fsr2h,f,c
 23909   011432  50DE               	movf	postinc2,w,c
 23910   011434  10DE               	iorwf	postinc2,w,c
 23911   011436  10DE               	iorwf	postinc2,w,c
 23912   011438  10DE               	iorwf	postinc2,w,c
 23913   01143A  A4D8               	btfss	status,2,c
 23914   01143C  D00E               	goto	l685
 23915                           
 23916                           ; BSR set to: 6
 23917   01143E  EE20 F006          	lfsr	2,6
 23918   011442  5148               	movf	f_write@fp& (0+255),w,b
 23919   011444  26D9               	addwf	fsr2l,f,c
 23920   011446  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23921   011448  22DA               	addwfc	fsr2h,f,c
 23922   01144A  C667  F4DE         	movff	f_write@clst,postinc2
 23923   01144E  C668  F4DE         	movff	f_write@clst+1,postinc2
 23924   011452  C669  F4DE         	movff	f_write@clst+2,postinc2
 23925   011456  C66A  F4DE         	movff	f_write@clst+3,postinc2
 23926   01145A                     l685:
 23927                           
 23928                           ; BSR set to: 6
 23929                           ;fatfs/ff.c: 4067:    if (fp->flag & 0x80) {
 23930   01145A  EE20 F00E          	lfsr	2,14
 23931   01145E  5148               	movf	f_write@fp& (0+255),w,b
 23932   011460  26D9               	addwf	fsr2l,f,c
 23933   011462  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23934   011464  22DA               	addwfc	fsr2h,f,c
 23935   011466  AEDF               	btfss	indf2,7,c
 23936   011468  D033               	goto	l11825
 23937                           
 23938                           ; BSR set to: 6
 23939                           ;fatfs/ff.c: 4068:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp->e
      +                          rr = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 23940   01146A  0E22               	movlw	34
 23941   01146C  2548               	addwf	f_write@fp& (0+255),w,b
 23942   01146E  0105               	movlb	5	; () banked
 23943   011470  6FE2               	movwf	disk_write@buff& (0+255),b
 23944   011472  0E00               	movlw	0
 23945   011474  0106               	movlb	6	; () banked
 23946   011476  2149               	addwfc	(f_write@fp+1)& (0+255),w,b
 23947   011478  0105               	movlb	5	; () banked
 23948   01147A  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 23949   01147C  0106               	movlb	6	; () banked
 23950   01147E  EE20 F018          	lfsr	2,24
 23951   011482  5148               	movf	f_write@fp& (0+255),w,b
 23952   011484  26D9               	addwf	fsr2l,f,c
 23953   011486  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23954   011488  22DA               	addwfc	fsr2h,f,c
 23955   01148A  C4DE F5E4          	movff	postinc2,disk_write@sector
 23956   01148E  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 23957   011492  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 23958   011496  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 23959   01149A  0E00               	movlw	0
 23960   01149C  0105               	movlb	5	; () banked
 23961   01149E  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 23962   0114A0  0E01               	movlw	1
 23963   0114A2  6FE8               	movwf	disk_write@count& (0+255),b
 23964   0114A4  0106               	movlb	6	; () banked
 23965   0114A6  EE20 F001          	lfsr	2,1
 23966   0114AA  5171               	movf	f_write@fs& (0+255),w,b
 23967   0114AC  26D9               	addwf	fsr2l,f,c
 23968   0114AE  5172               	movf	(f_write@fs+1)& (0+255),w,b
 23969   0114B0  22DA               	addwfc	fsr2h,f,c
 23970   0114B2  50DF               	movf	indf2,w,c
 23971   0114B4  EC11  F0C9         	call	_disk_write
 23972   0114B8  0900               	iorlw	0
 23973   0114BA  A4D8               	btfss	status,2,c
 23974   0114BC  D139               	goto	u15150
 23975                           
 23976                           ; BSR set to: 5
 23977                           ;fatfs/ff.c: 4069:     fp->flag &= (BYTE)~0x80;
 23978                           
 23979                           ; BSR set to: 5
 23980   0114BE  0106               	movlb	6	; () banked
 23981   0114C0  EE20 F00E          	lfsr	2,14
 23982   0114C4  5148               	movf	f_write@fp& (0+255),w,b
 23983   0114C6  26D9               	addwf	fsr2l,f,c
 23984   0114C8  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23985   0114CA  22DA               	addwfc	fsr2h,f,c
 23986   0114CC  0E7F               	movlw	127
 23987   0114CE  16DF               	andwf	indf2,f,c
 23988   0114D0                     l11825:
 23989                           
 23990                           ; BSR set to: 6
 23991                           ;fatfs/ff.c: 4072:    sect = clst2sect(fs, fp->clust);
 23992   0114D0  C671  F50D         	movff	f_write@fs,clst2sect@fs
 23993   0114D4  C672  F50E         	movff	f_write@fs+1,clst2sect@fs+1
 23994   0114D8  EE20 F014          	lfsr	2,20
 23995   0114DC  5148               	movf	f_write@fp& (0+255),w,b
 23996   0114DE  26D9               	addwf	fsr2l,f,c
 23997   0114E0  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23998   0114E2  22DA               	addwfc	fsr2h,f,c
 23999   0114E4  C4DE F50F          	movff	postinc2,clst2sect@clst
 24000   0114E8  C4DE F510          	movff	postinc2,clst2sect@clst+1
 24001   0114EC  C4DE F511          	movff	postinc2,clst2sect@clst+2
 24002   0114F0  C4DE F512          	movff	postinc2,clst2sect@clst+3
 24003   0114F4  ECC3  F0C3         	call	_clst2sect	;wreg free
 24004   0114F8  C50D  F66D         	movff	?_clst2sect,f_write@sect
 24005   0114FC  C50E  F66E         	movff	?_clst2sect+1,f_write@sect+1
 24006   011500  C50F  F66F         	movff	?_clst2sect+2,f_write@sect+2
 24007   011504  C510  F670         	movff	?_clst2sect+3,f_write@sect+3
 24008                           
 24009                           ;fatfs/ff.c: 4073:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; 
      +                          };
 24010   011508  0106               	movlb	6	; () banked
 24011   01150A  516D               	movf	f_write@sect& (0+255),w,b
 24012   01150C  116E               	iorwf	(f_write@sect+1)& (0+255),w,b
 24013   01150E  116F               	iorwf	(f_write@sect+2)& (0+255),w,b
 24014   011510  1170               	iorwf	(f_write@sect+3)& (0+255),w,b
 24015   011512  B4D8               	btfsc	status,2,c
 24016   011514  D75D               	goto	u15000
 24017                           
 24018                           ; BSR set to: 6
 24019                           ;fatfs/ff.c: 4074:    sect += csect;
 24020                           
 24021                           ; BSR set to: 6
 24022   011516  5163               	movf	f_write@csect& (0+255),w,b
 24023   011518  276D               	addwf	f_write@sect& (0+255),f,b
 24024   01151A  5164               	movf	(f_write@csect+1)& (0+255),w,b
 24025   01151C  236E               	addwfc	(f_write@sect+1)& (0+255),f,b
 24026   01151E  0E00               	movlw	0
 24027   011520  236F               	addwfc	(f_write@sect+2)& (0+255),f,b
 24028   011522  0E00               	movlw	0
 24029   011524  2370               	addwfc	(f_write@sect+3)& (0+255),f,b
 24030                           
 24031                           ; BSR set to: 6
 24032                           ;fatfs/ff.c: 4075:    cc = btw / ((UINT)512);
 24033   011526  C64C  F650         	movff	f_write@btw,??_f_write
 24034   01152A  C64D  F651         	movff	f_write@btw+1,??_f_write+1
 24035   01152E  0E09               	movlw	9
 24036   011530  6F52               	movwf	(??_f_write+2)& (0+255),b
 24037   011532                     u15065:
 24038   011532  90D8               	bcf	status,0,c
 24039   011534  3351               	rrcf	(??_f_write+1)& (0+255),f,b
 24040   011536  3350               	rrcf	??_f_write& (0+255),f,b
 24041   011538  2F52               	decfsz	(??_f_write+2)& (0+255),f,b
 24042   01153A  D7FB               	goto	u15065
 24043   01153C  C650  F665         	movff	??_f_write,f_write@cc
 24044   011540  C651  F666         	movff	??_f_write+1,f_write@cc+1
 24045                           
 24046                           ; BSR set to: 6
 24047                           ;fatfs/ff.c: 4076:    if (cc > 0) {
 24048   011544  5165               	movf	f_write@cc& (0+255),w,b
 24049   011546  1166               	iorwf	(f_write@cc+1)& (0+255),w,b
 24050   011548  B4D8               	btfsc	status,2,c
 24051   01154A  D0A7               	goto	l11861
 24052                           
 24053                           ; BSR set to: 6
 24054                           ;fatfs/ff.c: 4077:     if (csect + cc > fs->csize) {
 24055   01154C  5165               	movf	f_write@cc& (0+255),w,b
 24056   01154E  2563               	addwf	f_write@csect& (0+255),w,b
 24057   011550  6F50               	movwf	??_f_write& (0+255),b
 24058   011552  5166               	movf	(f_write@cc+1)& (0+255),w,b
 24059   011554  2164               	addwfc	(f_write@csect+1)& (0+255),w,b
 24060   011556  6F51               	movwf	(??_f_write+1)& (0+255),b
 24061   011558  EE20 F00A          	lfsr	2,10
 24062   01155C  5171               	movf	f_write@fs& (0+255),w,b
 24063   01155E  26D9               	addwf	fsr2l,f,c
 24064   011560  5172               	movf	(f_write@fs+1)& (0+255),w,b
 24065   011562  22DA               	addwfc	fsr2h,f,c
 24066   011564  5150               	movf	??_f_write& (0+255),w,b
 24067   011566  5CDE               	subwf	postinc2,w,c
 24068   011568  5151               	movf	(??_f_write+1)& (0+255),w,b
 24069   01156A  58DE               	subwfb	postinc2,w,c
 24070   01156C  B0D8               	btfsc	status,0,c
 24071   01156E  D010               	goto	l11845
 24072                           
 24073                           ; BSR set to: 6
 24074                           ;fatfs/ff.c: 4078:      cc = fs->csize - csect;
 24075   011570  EE20 F00A          	lfsr	2,10
 24076   011574  5171               	movf	f_write@fs& (0+255),w,b
 24077   011576  26D9               	addwf	fsr2l,f,c
 24078   011578  5172               	movf	(f_write@fs+1)& (0+255),w,b
 24079   01157A  22DA               	addwfc	fsr2h,f,c
 24080   01157C  C4DE F650          	movff	postinc2,??_f_write
 24081   011580  C4DD F651          	movff	postdec2,??_f_write+1
 24082   011584  5163               	movf	f_write@csect& (0+255),w,b
 24083   011586  5D50               	subwf	??_f_write& (0+255),w,b
 24084   011588  6F65               	movwf	f_write@cc& (0+255),b
 24085   01158A  5164               	movf	(f_write@csect+1)& (0+255),w,b
 24086   01158C  5951               	subwfb	(??_f_write+1)& (0+255),w,b
 24087   01158E  6F66               	movwf	(f_write@cc+1)& (0+255),b
 24088   011590                     l11845:
 24089                           
 24090                           ; BSR set to: 6
 24091                           ;fatfs/ff.c: 4080:     if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) { fp->err = 
      +                          (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 24092   011590  C661  F5E2         	movff	f_write@wbuff,disk_write@buff
 24093   011594  C662  F5E3         	movff	f_write@wbuff+1,disk_write@buff+1
 24094   011598  C66D  F5E4         	movff	f_write@sect,disk_write@sector
 24095   01159C  C66E  F5E5         	movff	f_write@sect+1,disk_write@sector+1
 24096   0115A0  C66F  F5E6         	movff	f_write@sect+2,disk_write@sector+2
 24097   0115A4  C670  F5E7         	movff	f_write@sect+3,disk_write@sector+3
 24098   0115A8  C665  F5E8         	movff	f_write@cc,disk_write@count
 24099   0115AC  C666  F5E9         	movff	f_write@cc+1,disk_write@count+1
 24100   0115B0  EE20 F001          	lfsr	2,1
 24101   0115B4  5171               	movf	f_write@fs& (0+255),w,b
 24102   0115B6  26D9               	addwf	fsr2l,f,c
 24103   0115B8  5172               	movf	(f_write@fs+1)& (0+255),w,b
 24104   0115BA  22DA               	addwfc	fsr2h,f,c
 24105   0115BC  50DF               	movf	indf2,w,c
 24106   0115BE  EC11  F0C9         	call	_disk_write
 24107   0115C2  0900               	iorlw	0
 24108   0115C4  A4D8               	btfss	status,2,c
 24109   0115C6  D0B4               	goto	u15150
 24110                           
 24111                           ; BSR set to: 5
 24112                           ;fatfs/ff.c: 4088:     if (fp->sect - sect < cc) {
 24113                           
 24114                           ; BSR set to: 5
 24115   0115C8  0106               	movlb	6	; () banked
 24116   0115CA  5165               	movf	f_write@cc& (0+255),w,b
 24117   0115CC  6F50               	movwf	??_f_write& (0+255),b
 24118   0115CE  5166               	movf	(f_write@cc+1)& (0+255),w,b
 24119   0115D0  6F51               	movwf	(??_f_write+1)& (0+255),b
 24120   0115D2  6B52               	clrf	(??_f_write+2)& (0+255),b
 24121   0115D4  6B53               	clrf	(??_f_write+3)& (0+255),b
 24122   0115D6  EE20 F018          	lfsr	2,24
 24123   0115DA  5148               	movf	f_write@fp& (0+255),w,b
 24124   0115DC  26D9               	addwf	fsr2l,f,c
 24125   0115DE  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24126   0115E0  22DA               	addwfc	fsr2h,f,c
 24127   0115E2  C4DE F654          	movff	postinc2,??_f_write+4
 24128   0115E6  C4DE F655          	movff	postinc2,??_f_write+5
 24129   0115EA  C4DE F656          	movff	postinc2,??_f_write+6
 24130   0115EE  C4DE F657          	movff	postinc2,??_f_write+7
 24131   0115F2  516D               	movf	f_write@sect& (0+255),w,b
 24132   0115F4  5D54               	subwf	(??_f_write+4)& (0+255),w,b
 24133   0115F6  6F58               	movwf	(??_f_write+8)& (0+255),b
 24134   0115F8  516E               	movf	(f_write@sect+1)& (0+255),w,b
 24135   0115FA  5955               	subwfb	(??_f_write+5)& (0+255),w,b
 24136   0115FC  6F59               	movwf	(??_f_write+9)& (0+255),b
 24137   0115FE  516F               	movf	(f_write@sect+2)& (0+255),w,b
 24138   011600  5956               	subwfb	(??_f_write+6)& (0+255),w,b
 24139   011602  6F5A               	movwf	(??_f_write+10)& (0+255),b
 24140   011604  5170               	movf	(f_write@sect+3)& (0+255),w,b
 24141   011606  5957               	subwfb	(??_f_write+7)& (0+255),w,b
 24142   011608  6F5B               	movwf	(??_f_write+11)& (0+255),b
 24143   01160A  5150               	movf	??_f_write& (0+255),w,b
 24144   01160C  5D58               	subwf	(??_f_write+8)& (0+255),w,b
 24145   01160E  5151               	movf	(??_f_write+1)& (0+255),w,b
 24146   011610  5959               	subwfb	(??_f_write+9)& (0+255),w,b
 24147   011612  5152               	movf	(??_f_write+2)& (0+255),w,b
 24148   011614  595A               	subwfb	(??_f_write+10)& (0+255),w,b
 24149   011616  5153               	movf	(??_f_write+3)& (0+255),w,b
 24150   011618  595B               	subwfb	(??_f_write+11)& (0+255),w,b
 24151   01161A  B0D8               	btfsc	status,0,c
 24152   01161C  D02F               	goto	l11859
 24153                           
 24154                           ; BSR set to: 6
 24155                           ;fatfs/ff.c: 4089:      memcpy(fp->buf, wbuff + ((fp->sect - sect) * ((UINT)512)), ((UIN
      +                          T)512));
 24156   01161E  0E22               	movlw	34
 24157   011620  2548               	addwf	f_write@fp& (0+255),w,b
 24158   011622  6E01               	movwf	memcpy@d1^(0+1280),c
 24159   011624  0E00               	movlw	0
 24160   011626  2149               	addwfc	(f_write@fp+1)& (0+255),w,b
 24161   011628  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
 24162   01162A  EE20 F018          	lfsr	2,24
 24163   01162E  5148               	movf	f_write@fp& (0+255),w,b
 24164   011630  26D9               	addwf	fsr2l,f,c
 24165   011632  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24166   011634  22DA               	addwfc	fsr2h,f,c
 24167   011636  C4DE F650          	movff	postinc2,??_f_write
 24168   01163A  C4DD F651          	movff	postdec2,??_f_write+1
 24169   01163E  516D               	movf	f_write@sect& (0+255),w,b
 24170   011640  5F50               	subwf	??_f_write& (0+255),f,b
 24171   011642  516E               	movf	(f_write@sect+1)& (0+255),w,b
 24172   011644  5B51               	subwfb	(??_f_write+1)& (0+255),f,b
 24173   011646  0E09               	movlw	9
 24174   011648                     u15115:
 24175   011648  90D8               	bcf	status,0,c
 24176   01164A  3750               	rlcf	??_f_write& (0+255),f,b
 24177   01164C  3751               	rlcf	(??_f_write+1)& (0+255),f,b
 24178   01164E  2EE8               	decfsz	wreg,f,c
 24179   011650  D7FB               	goto	u15115
 24180   011652  5150               	movf	??_f_write& (0+255),w,b
 24181   011654  2561               	addwf	f_write@wbuff& (0+255),w,b
 24182   011656  6E03               	movwf	memcpy@s1^(0+1280),c
 24183   011658  5151               	movf	(??_f_write+1)& (0+255),w,b
 24184   01165A  2162               	addwfc	(f_write@wbuff+1)& (0+255),w,b
 24185   01165C  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
 24186   01165E  0E02               	movlw	2
 24187   011660  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 24188   011662  0E00               	movlw	0
 24189   011664  6E05               	movwf	memcpy@n^(0+1280),c
 24190   011666  ECB1  F0CD         	call	_memcpy	;wreg free
 24191                           
 24192                           ;fatfs/ff.c: 4090:      fp->flag &= (BYTE)~0x80;
 24193   01166A  0106               	movlb	6	; () banked
 24194   01166C  EE20 F00E          	lfsr	2,14
 24195   011670  5148               	movf	f_write@fp& (0+255),w,b
 24196   011672  26D9               	addwf	fsr2l,f,c
 24197   011674  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24198   011676  22DA               	addwfc	fsr2h,f,c
 24199   011678  0E7F               	movlw	127
 24200   01167A  16DF               	andwf	indf2,f,c
 24201   01167C                     l11859:
 24202                           
 24203                           ; BSR set to: 6
 24204                           ;fatfs/ff.c: 4094:     wcnt = ((UINT)512) * cc;
 24205   01167C  C665  F650         	movff	f_write@cc,??_f_write
 24206   011680  C666  F651         	movff	f_write@cc+1,??_f_write+1
 24207   011684  0E09               	movlw	9
 24208   011686                     u15125:
 24209   011686  90D8               	bcf	status,0,c
 24210   011688  3750               	rlcf	??_f_write& (0+255),f,b
 24211   01168A  3751               	rlcf	(??_f_write+1)& (0+255),f,b
 24212   01168C  2EE8               	decfsz	wreg,f,c
 24213   01168E  D7FB               	goto	u15125
 24214   011690  C650  F66B         	movff	??_f_write,f_write@wcnt
 24215   011694  C651  F66C         	movff	??_f_write+1,f_write@wcnt+1
 24216                           
 24217                           ;fatfs/ff.c: 4095:     continue;
 24218   011698  D0AD               	goto	l11883
 24219   01169A                     l11861:
 24220                           
 24221                           ; BSR set to: 6
 24222                           ;fatfs/ff.c: 4103:    if (fp->sect != sect &&
 24223   01169A  EE20 F018          	lfsr	2,24
 24224   01169E  5148               	movf	f_write@fp& (0+255),w,b
 24225   0116A0  26D9               	addwf	fsr2l,f,c
 24226   0116A2  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24227   0116A4  22DA               	addwfc	fsr2h,f,c
 24228   0116A6  516D               	movf	f_write@sect& (0+255),w,b
 24229   0116A8  18DE               	xorwf	postinc2,w,c
 24230   0116AA  E10A               	bnz	u15130
 24231   0116AC  516E               	movf	(f_write@sect+1)& (0+255),w,b
 24232   0116AE  18DE               	xorwf	postinc2,w,c
 24233   0116B0  E107               	bnz	u15130
 24234   0116B2  516F               	movf	(f_write@sect+2)& (0+255),w,b
 24235   0116B4  18DE               	xorwf	postinc2,w,c
 24236   0116B6  E104               	bnz	u15130
 24237   0116B8  5170               	movf	(f_write@sect+3)& (0+255),w,b
 24238   0116BA  18DE               	xorwf	postinc2,w,c
 24239   0116BC  B4D8               	btfsc	status,2,c
 24240   0116BE  D03A               	goto	l11873
 24241   0116C0                     u15130:
 24242                           
 24243                           ; BSR set to: 6
 24244   0116C0  EE20 F00A          	lfsr	2,10
 24245   0116C4  5148               	movf	f_write@fp& (0+255),w,b
 24246   0116C6  26D9               	addwf	fsr2l,f,c
 24247   0116C8  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24248   0116CA  22DA               	addwfc	fsr2h,f,c
 24249   0116CC  EE10 F010          	lfsr	1,16
 24250   0116D0  5148               	movf	f_write@fp& (0+255),w,b
 24251   0116D2  26E1               	addwf	fsr1l,f,c
 24252   0116D4  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24253   0116D6  22E2               	addwfc	fsr1h,f,c
 24254   0116D8  50DE               	movf	postinc2,w,c
 24255   0116DA  5CE6               	subwf	postinc1,w,c
 24256   0116DC  50DE               	movf	postinc2,w,c
 24257   0116DE  58E6               	subwfb	postinc1,w,c
 24258   0116E0  50DE               	movf	postinc2,w,c
 24259   0116E2  58E6               	subwfb	postinc1,w,c
 24260   0116E4  50DE               	movf	postinc2,w,c
 24261   0116E6  58E6               	subwfb	postinc1,w,c
 24262   0116E8  B0D8               	btfsc	status,0,c
 24263   0116EA  D024               	goto	l11873
 24264                           
 24265                           ; BSR set to: 6
 24266   0116EC  0E22               	movlw	34
 24267   0116EE  2548               	addwf	f_write@fp& (0+255),w,b
 24268   0116F0  0105               	movlb	5	; () banked
 24269   0116F2  6FE4               	movwf	disk_read@buff& (0+255),b
 24270   0116F4  0E00               	movlw	0
 24271   0116F6  0106               	movlb	6	; () banked
 24272   0116F8  2149               	addwfc	(f_write@fp+1)& (0+255),w,b
 24273   0116FA  0105               	movlb	5	; () banked
 24274   0116FC  6FE5               	movwf	(disk_read@buff+1)& (0+255),b
 24275   0116FE  C66D  F5E6         	movff	f_write@sect,disk_read@sector
 24276   011702  C66E  F5E7         	movff	f_write@sect+1,disk_read@sector+1
 24277   011706  C66F  F5E8         	movff	f_write@sect+2,disk_read@sector+2
 24278   01170A  C670  F5E9         	movff	f_write@sect+3,disk_read@sector+3
 24279   01170E  0E00               	movlw	0
 24280   011710  6FEB               	movwf	(disk_read@count+1)& (0+255),b
 24281   011712  0E01               	movlw	1
 24282   011714  6FEA               	movwf	disk_read@count& (0+255),b
 24283   011716  0106               	movlb	6	; () banked
 24284   011718  EE20 F001          	lfsr	2,1
 24285   01171C  5171               	movf	f_write@fs& (0+255),w,b
 24286   01171E  26D9               	addwf	fsr2l,f,c
 24287   011720  5172               	movf	(f_write@fs+1)& (0+255),w,b
 24288   011722  22DA               	addwfc	fsr2h,f,c
 24289   011724  50DF               	movf	indf2,w,c
 24290   011726  EC52  F0C9         	call	_disk_read
 24291   01172A  0900               	iorlw	0
 24292   01172C  B4D8               	btfsc	status,2,c
 24293   01172E  D002               	goto	l11873
 24294   011730                     u15150:
 24295                           
 24296                           ; BSR set to: 5
 24297                           ;fatfs/ff.c: 4105:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {;fatfs/ff.c: 41
      +                          06:      { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 24298   011730  0106               	movlb	6	; () banked
 24299   011732  D661               	goto	u15010
 24300   011734                     l11873:
 24301                           
 24302                           ;fatfs/ff.c: 4109:    fp->sect = sect;
 24303   011734  0106               	movlb	6	; () banked
 24304   011736  EE20 F018          	lfsr	2,24
 24305   01173A  5148               	movf	f_write@fp& (0+255),w,b
 24306   01173C  26D9               	addwf	fsr2l,f,c
 24307   01173E  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24308   011740  22DA               	addwfc	fsr2h,f,c
 24309   011742  C66D  F4DE         	movff	f_write@sect,postinc2
 24310   011746  C66E  F4DE         	movff	f_write@sect+1,postinc2
 24311   01174A  C66F  F4DE         	movff	f_write@sect+2,postinc2
 24312   01174E  C670  F4DE         	movff	f_write@sect+3,postinc2
 24313   011752                     l684:
 24314                           
 24315                           ; BSR set to: 6
 24316                           ;fatfs/ff.c: 4111:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
 24317   011752  EE20 F010          	lfsr	2,16
 24318   011756  5148               	movf	f_write@fp& (0+255),w,b
 24319   011758  26D9               	addwf	fsr2l,f,c
 24320   01175A  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24321   01175C  22DA               	addwfc	fsr2h,f,c
 24322   01175E  C4DE F650          	movff	postinc2,??_f_write
 24323   011762  C4DD F651          	movff	postdec2,??_f_write+1
 24324   011766  0EFF               	movlw	255
 24325   011768  1550               	andwf	??_f_write& (0+255),w,b
 24326   01176A  6F52               	movwf	(??_f_write+2)& (0+255),b
 24327   01176C  0E01               	movlw	1
 24328   01176E  1551               	andwf	(??_f_write+1)& (0+255),w,b
 24329   011770  6F53               	movwf	(??_f_write+3)& (0+255),b
 24330   011772  5152               	movf	(??_f_write+2)& (0+255),w,b
 24331   011774  0800               	sublw	0
 24332   011776  6F6B               	movwf	f_write@wcnt& (0+255),b
 24333   011778  5153               	movf	(??_f_write+3)& (0+255),w,b
 24334   01177A  A0D8               	btfss	status,0,c
 24335   01177C  2AE8               	incf	wreg,f,c
 24336   01177E  0802               	sublw	2
 24337   011780  6F6C               	movwf	(f_write@wcnt+1)& (0+255),b
 24338                           
 24339                           ; BSR set to: 6
 24340                           ;fatfs/ff.c: 4112:   if (wcnt > btw) wcnt = btw;
 24341   011782  516B               	movf	f_write@wcnt& (0+255),w,b
 24342   011784  5D4C               	subwf	f_write@btw& (0+255),w,b
 24343   011786  516C               	movf	(f_write@wcnt+1)& (0+255),w,b
 24344   011788  594D               	subwfb	(f_write@btw+1)& (0+255),w,b
 24345   01178A  B0D8               	btfsc	status,0,c
 24346   01178C  D004               	goto	l11879
 24347                           
 24348                           ; BSR set to: 6
 24349   01178E  C64C  F66B         	movff	f_write@btw,f_write@wcnt
 24350   011792  C64D  F66C         	movff	f_write@btw+1,f_write@wcnt+1
 24351   011796                     l11879:
 24352                           
 24353                           ; BSR set to: 6
 24354                           ;fatfs/ff.c: 4118:   memcpy(fp->buf + fp->fptr % ((UINT)512), wbuff, wcnt);
 24355   011796  EE20 F010          	lfsr	2,16
 24356   01179A  5148               	movf	f_write@fp& (0+255),w,b
 24357   01179C  26D9               	addwf	fsr2l,f,c
 24358   01179E  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24359   0117A0  22DA               	addwfc	fsr2h,f,c
 24360   0117A2  C4DE F650          	movff	postinc2,??_f_write
 24361   0117A6  C4DD F651          	movff	postdec2,??_f_write+1
 24362   0117AA  0EFF               	movlw	255
 24363   0117AC  1550               	andwf	??_f_write& (0+255),w,b
 24364   0117AE  6F52               	movwf	(??_f_write+2)& (0+255),b
 24365   0117B0  0E01               	movlw	1
 24366   0117B2  1551               	andwf	(??_f_write+1)& (0+255),w,b
 24367   0117B4  6F53               	movwf	(??_f_write+3)& (0+255),b
 24368   0117B6  5152               	movf	(??_f_write+2)& (0+255),w,b
 24369   0117B8  2548               	addwf	f_write@fp& (0+255),w,b
 24370   0117BA  6F54               	movwf	(??_f_write+4)& (0+255),b
 24371   0117BC  5153               	movf	(??_f_write+3)& (0+255),w,b
 24372   0117BE  2149               	addwfc	(f_write@fp+1)& (0+255),w,b
 24373   0117C0  6F55               	movwf	(??_f_write+5)& (0+255),b
 24374   0117C2  0E22               	movlw	34
 24375   0117C4  2554               	addwf	(??_f_write+4)& (0+255),w,b
 24376   0117C6  6E01               	movwf	memcpy@d1^(0+1280),c
 24377   0117C8  0E00               	movlw	0
 24378   0117CA  2155               	addwfc	(??_f_write+5)& (0+255),w,b
 24379   0117CC  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
 24380   0117CE  C661  F503         	movff	f_write@wbuff,memcpy@s1
 24381   0117D2  C662  F504         	movff	f_write@wbuff+1,memcpy@s1+1
 24382   0117D6  C66B  F505         	movff	f_write@wcnt,memcpy@n
 24383   0117DA  C66C  F506         	movff	f_write@wcnt+1,memcpy@n+1
 24384   0117DE  ECB1  F0CD         	call	_memcpy	;wreg free
 24385                           
 24386                           ;fatfs/ff.c: 4119:   fp->flag |= 0x80;
 24387   0117E2  0106               	movlb	6	; () banked
 24388   0117E4  EE20 F00E          	lfsr	2,14
 24389   0117E8  5148               	movf	f_write@fp& (0+255),w,b
 24390   0117EA  26D9               	addwf	fsr2l,f,c
 24391   0117EC  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24392   0117EE  22DA               	addwfc	fsr2h,f,c
 24393   0117F0  0E00               	movlw	0
 24394   0117F2  8EDB               	bsf	plusw2,7,c
 24395   0117F4                     l11883:
 24396                           
 24397                           ; BSR set to: 6
 24398   0117F4  516B               	movf	f_write@wcnt& (0+255),w,b
 24399   0117F6  5F4C               	subwf	f_write@btw& (0+255),f,b
 24400   0117F8  516C               	movf	(f_write@wcnt+1)& (0+255),w,b
 24401   0117FA  5B4D               	subwfb	(f_write@btw+1)& (0+255),f,b
 24402                           
 24403                           ; BSR set to: 6
 24404   0117FC  C64E  F4D9         	movff	f_write@bw,fsr2l
 24405   011800  C64F  F4DA         	movff	f_write@bw+1,fsr2h
 24406   011804  516B               	movf	f_write@wcnt& (0+255),w,b
 24407   011806  26DE               	addwf	postinc2,f,c
 24408   011808  516C               	movf	(f_write@wcnt+1)& (0+255),w,b
 24409   01180A  22DD               	addwfc	postdec2,f,c
 24410                           
 24411                           ; BSR set to: 6
 24412   01180C  516B               	movf	f_write@wcnt& (0+255),w,b
 24413   01180E  2761               	addwf	f_write@wbuff& (0+255),f,b
 24414   011810  516C               	movf	(f_write@wcnt+1)& (0+255),w,b
 24415   011812  2362               	addwfc	(f_write@wbuff+1)& (0+255),f,b
 24416                           
 24417                           ; BSR set to: 6
 24418   011814  EE20 F010          	lfsr	2,16
 24419   011818  5148               	movf	f_write@fp& (0+255),w,b
 24420   01181A  26D9               	addwf	fsr2l,f,c
 24421   01181C  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24422   01181E  22DA               	addwfc	fsr2h,f,c
 24423   011820  516B               	movf	f_write@wcnt& (0+255),w,b
 24424   011822  26DE               	addwf	postinc2,f,c
 24425   011824  516C               	movf	(f_write@wcnt+1)& (0+255),w,b
 24426   011826  22DE               	addwfc	postinc2,f,c
 24427   011828  0E00               	movlw	0
 24428   01182A  22DE               	addwfc	postinc2,f,c
 24429   01182C  22DE               	addwfc	postinc2,f,c
 24430                           
 24431                           ; BSR set to: 6
 24432   01182E  EE20 F010          	lfsr	2,16
 24433   011832  5148               	movf	f_write@fp& (0+255),w,b
 24434   011834  26D9               	addwf	fsr2l,f,c
 24435   011836  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24436   011838  22DA               	addwfc	fsr2h,f,c
 24437   01183A  EE10 F00A          	lfsr	1,10
 24438   01183E  5148               	movf	f_write@fp& (0+255),w,b
 24439   011840  26E1               	addwf	fsr1l,f,c
 24440   011842  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24441   011844  22E2               	addwfc	fsr1h,f,c
 24442   011846  50DE               	movf	postinc2,w,c
 24443   011848  5CE6               	subwf	postinc1,w,c
 24444   01184A  50DE               	movf	postinc2,w,c
 24445   01184C  58E6               	subwfb	postinc1,w,c
 24446   01184E  50DE               	movf	postinc2,w,c
 24447   011850  58E6               	subwfb	postinc1,w,c
 24448   011852  50DE               	movf	postinc2,w,c
 24449   011854  58E6               	subwfb	postinc1,w,c
 24450   011856  A0D8               	btfss	status,0,c
 24451   011858  D003               	goto	l11895
 24452                           
 24453                           ; BSR set to: 6
 24454   01185A  EE20 F00A          	lfsr	2,10
 24455   01185E  D002               	goto	L10
 24456   011860                     l11895:
 24457                           
 24458                           ; BSR set to: 6
 24459   011860  EE20 F010          	lfsr	2,16
 24460   011864                     L10:
 24461   011864  5148               	movf	f_write@fp& (0+255),w,b
 24462   011866  26D9               	addwf	fsr2l,f,c
 24463   011868  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24464   01186A  22DA               	addwfc	fsr2h,f,c
 24465   01186C  C4DE F65C          	movff	postinc2,_f_write$1360
 24466   011870  C4DE F65D          	movff	postinc2,_f_write$1360+1
 24467   011874  C4DE F65E          	movff	postinc2,_f_write$1360+2
 24468   011878  C4DE F65F          	movff	postinc2,_f_write$1360+3
 24469                           
 24470                           ; BSR set to: 6
 24471   01187C  EE20 F00A          	lfsr	2,10
 24472   011880  5148               	movf	f_write@fp& (0+255),w,b
 24473   011882  26D9               	addwf	fsr2l,f,c
 24474   011884  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24475   011886  22DA               	addwfc	fsr2h,f,c
 24476   011888  C65C  F4DE         	movff	_f_write$1360,postinc2
 24477   01188C  C65D  F4DE         	movff	_f_write$1360+1,postinc2
 24478   011890  C65E  F4DE         	movff	_f_write$1360+2,postinc2
 24479   011894  C65F  F4DE         	movff	_f_write$1360+3,postinc2
 24480   011898  D4F7               	goto	l11771
 24481   01189A                     l11899:
 24482                           
 24483                           ; BSR set to: 6
 24484                           ;fatfs/ff.c: 4123:  fp->flag |= 0x40;
 24485   01189A  EE20 F00E          	lfsr	2,14
 24486   01189E  5148               	movf	f_write@fp& (0+255),w,b
 24487   0118A0  26D9               	addwf	fsr2l,f,c
 24488   0118A2  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24489   0118A4  22DA               	addwfc	fsr2h,f,c
 24490   0118A6  0E00               	movlw	0
 24491   0118A8  8CDB               	bsf	plusw2,6,c
 24492                           
 24493                           ; BSR set to: 6
 24494                           ;fatfs/ff.c: 4125:  return FR_OK;
 24495   0118AA  0E00               	movlw	0
 24496                           
 24497                           ; BSR set to: 6
 24498   0118AC  0012               	return		;funcret
 24499   0118AE                     __end_of_f_write:
 24500                           	callstack 0
 24501                           
 24502 ;; *************** function _f_sync *****************
 24503 ;; Defined at:
 24504 ;;		line 4135 in file "fatfs/ff.c"
 24505 ;; Parameters:    Size  Location     Type
 24506 ;;  fp              2   10[BANK6 ] PTR struct .
 24507 ;;		 -> files(3276), 
 24508 ;; Auto vars:     Size  Location     Type
 24509 ;;  tm              4   12[BANK6 ] unsigned long 
 24510 ;;  fs              2   19[BANK6 ] PTR struct .
 24511 ;;		 -> fs(560), NULL(0), 
 24512 ;;  dir             2   17[BANK6 ] PTR unsigned char 
 24513 ;;		 -> fs(560), NULL(0), 
 24514 ;;  res             1   16[BANK6 ] enum E275
 24515 ;; Return value:  Size  Location     Type
 24516 ;;                  1    wreg      enum E275
 24517 ;; Registers used:
 24518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24519 ;; Tracked objects:
 24520 ;;		On entry : 3F/6
 24521 ;;		On exit  : 3C/4
 24522 ;;		Unchanged: 0/0
 24523 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24524 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24525 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24527 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24528 ;;Total ram usage:       11 bytes
 24529 ;; Hardware stack levels used: 1
 24530 ;; Hardware stack levels required when called: 13
 24531 ;; This function calls:
 24532 ;;		_disk_write
 24533 ;;		_get_fattime
 24534 ;;		_move_window
 24535 ;;		_st_clust
 24536 ;;		_st_dword
 24537 ;;		_st_word
 24538 ;;		_sync_fs
 24539 ;;		_validate
 24540 ;; This function is called by:
 24541 ;;		_disk_io_handle
 24542 ;; This function uses a non-reentrant model
 24543 ;;
 24544                           
 24545                           	psect	text41
 24546   016238                     __ptext41:
 24547                           	callstack 0
 24548   016238                     _f_sync:
 24549                           	callstack 112
 24550                           
 24551                           ; BSR set to: 6
 24552                           ;fatfs/ff.c: 4136:  FIL* fp;fatfs/ff.c: 4138: {;fatfs/ff.c: 4139:  FRESULT res;;fatfs/ff
      +                          .c: 4140:  FATFS *fs;;fatfs/ff.c: 4141:  DWORD tm;;fatfs/ff.c: 4142:  BYTE *dir;;fatfs/f
      +                          f.c: 4145:  res = validate(&fp->obj, &fs);
 24553                           
 24554                           ; BSR set to: 6
 24555                           ;incstack = 0
 24556   016238  C60A  F5A6         	movff	f_sync@fp,validate@obj
 24557   01623C  C60B  F5A7         	movff	f_sync@fp+1,validate@obj+1
 24558   016240  0E13               	movlw	low f_sync@fs
 24559   016242  0105               	movlb	5	; () banked
 24560   016244  6FA8               	movwf	validate@rfs& (0+255),b
 24561   016246  0E06               	movlw	high f_sync@fs
 24562   016248  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 24563   01624A  EC62  F0C3         	call	_validate	;wreg free
 24564   01624E  0106               	movlb	6	; () banked
 24565   016250  6F10               	movwf	f_sync@res& (0+255),b
 24566                           
 24567                           ; BSR set to: 6
 24568                           ;fatfs/ff.c: 4146:  if (res == FR_OK) {
 24569   016252  5110               	movf	f_sync@res& (0+255),w,b
 24570   016254  A4D8               	btfss	status,2,c
 24571   016256  D0E2               	goto	l11941
 24572                           
 24573                           ; BSR set to: 6
 24574                           ;fatfs/ff.c: 4147:   if (fp->flag & 0x40) {
 24575   016258  EE20 F00E          	lfsr	2,14
 24576   01625C  510A               	movf	f_sync@fp& (0+255),w,b
 24577   01625E  26D9               	addwf	fsr2l,f,c
 24578   016260  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24579   016262  22DA               	addwfc	fsr2h,f,c
 24580   016264  ACDF               	btfss	indf2,6,c
 24581   016266  D0DA               	goto	l11941
 24582                           
 24583                           ; BSR set to: 6
 24584                           ;fatfs/ff.c: 4149:    if (fp->flag & 0x80) {
 24585   016268  EE20 F00E          	lfsr	2,14
 24586   01626C  510A               	movf	f_sync@fp& (0+255),w,b
 24587   01626E  26D9               	addwf	fsr2l,f,c
 24588   016270  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24589   016272  22DA               	addwfc	fsr2h,f,c
 24590   016274  AEDF               	btfss	indf2,7,c
 24591   016276  D035               	goto	l11921
 24592                           
 24593                           ; BSR set to: 6
 24594                           ;fatfs/ff.c: 4150:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) return 
      +                          FR_DISK_ERR;
 24595   016278  0E22               	movlw	34
 24596   01627A  250A               	addwf	f_sync@fp& (0+255),w,b
 24597   01627C  0105               	movlb	5	; () banked
 24598   01627E  6FE2               	movwf	disk_write@buff& (0+255),b
 24599   016280  0E00               	movlw	0
 24600   016282  0106               	movlb	6	; () banked
 24601   016284  210B               	addwfc	(f_sync@fp+1)& (0+255),w,b
 24602   016286  0105               	movlb	5	; () banked
 24603   016288  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 24604   01628A  0106               	movlb	6	; () banked
 24605   01628C  EE20 F018          	lfsr	2,24
 24606   016290  510A               	movf	f_sync@fp& (0+255),w,b
 24607   016292  26D9               	addwf	fsr2l,f,c
 24608   016294  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24609   016296  22DA               	addwfc	fsr2h,f,c
 24610   016298  C4DE F5E4          	movff	postinc2,disk_write@sector
 24611   01629C  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 24612   0162A0  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 24613   0162A4  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 24614   0162A8  0E00               	movlw	0
 24615   0162AA  0105               	movlb	5	; () banked
 24616   0162AC  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 24617   0162AE  0E01               	movlw	1
 24618   0162B0  6FE8               	movwf	disk_write@count& (0+255),b
 24619   0162B2  0106               	movlb	6	; () banked
 24620   0162B4  EE20 F001          	lfsr	2,1
 24621   0162B8  5113               	movf	f_sync@fs& (0+255),w,b
 24622   0162BA  26D9               	addwf	fsr2l,f,c
 24623   0162BC  5114               	movf	(f_sync@fs+1)& (0+255),w,b
 24624   0162BE  22DA               	addwfc	fsr2h,f,c
 24625   0162C0  50DF               	movf	indf2,w,c
 24626   0162C2  EC11  F0C9         	call	_disk_write
 24627   0162C6  0900               	iorlw	0
 24628   0162C8  B4D8               	btfsc	status,2,c
 24629   0162CA  D002               	goto	l11919
 24630                           
 24631                           ; BSR set to: 5
 24632   0162CC  0E01               	movlw	1
 24633   0162CE  0012               	return	
 24634   0162D0                     l11919:
 24635                           
 24636                           ; BSR set to: 5
 24637                           ;fatfs/ff.c: 4151:     fp->flag &= (BYTE)~0x80;
 24638   0162D0  0106               	movlb	6	; () banked
 24639   0162D2  EE20 F00E          	lfsr	2,14
 24640   0162D6  510A               	movf	f_sync@fp& (0+255),w,b
 24641   0162D8  26D9               	addwf	fsr2l,f,c
 24642   0162DA  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24643   0162DC  22DA               	addwfc	fsr2h,f,c
 24644   0162DE  0E7F               	movlw	127
 24645   0162E0  16DF               	andwf	indf2,f,c
 24646   0162E2                     l11921:
 24647                           
 24648                           ; BSR set to: 6
 24649                           ;fatfs/ff.c: 4155:    tm = get_fattime();
 24650   0162E2  ECD9  F0CF         	call	_get_fattime	;wreg free
 24651   0162E6  C501  F60C         	movff	?_get_fattime,f_sync@tm
 24652   0162EA  C502  F60D         	movff	?_get_fattime+1,f_sync@tm+1
 24653   0162EE  C503  F60E         	movff	?_get_fattime+2,f_sync@tm+2
 24654   0162F2  C504  F60F         	movff	?_get_fattime+3,f_sync@tm+3
 24655                           
 24656                           ; BSR set to: 6
 24657                           ;fatfs/ff.c: 4187:    {;fatfs/ff.c: 4188:     res = move_window(fs, fp->dir_sect);
 24658   0162F6  C613  F600         	movff	f_sync@fs,move_window@fs
 24659   0162FA  C614  F601         	movff	f_sync@fs+1,move_window@fs+1
 24660   0162FE  EE20 F01C          	lfsr	2,28
 24661   016302  510A               	movf	f_sync@fp& (0+255),w,b
 24662   016304  26D9               	addwf	fsr2l,f,c
 24663   016306  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24664   016308  22DA               	addwfc	fsr2h,f,c
 24665   01630A  C4DE F602          	movff	postinc2,move_window@sect
 24666   01630E  C4DE F603          	movff	postinc2,move_window@sect+1
 24667   016312  C4DE F604          	movff	postinc2,move_window@sect+2
 24668   016316  C4DE F605          	movff	postinc2,move_window@sect+3
 24669   01631A  EC23  F0C4         	call	_move_window	;wreg free
 24670   01631E  0106               	movlb	6	; () banked
 24671   016320  6F10               	movwf	f_sync@res& (0+255),b
 24672                           
 24673                           ; BSR set to: 6
 24674                           ;fatfs/ff.c: 4189:     if (res == FR_OK) {
 24675   016322  5110               	movf	f_sync@res& (0+255),w,b
 24676   016324  A4D8               	btfss	status,2,c
 24677   016326  D07A               	goto	l11941
 24678                           
 24679                           ; BSR set to: 6
 24680                           ;fatfs/ff.c: 4190:      dir = fp->dir_ptr;
 24681   016328  EE20 F020          	lfsr	2,32
 24682   01632C  510A               	movf	f_sync@fp& (0+255),w,b
 24683   01632E  26D9               	addwf	fsr2l,f,c
 24684   016330  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24685   016332  22DA               	addwfc	fsr2h,f,c
 24686   016334  C4DE F611          	movff	postinc2,f_sync@dir
 24687   016338  C4DD F612          	movff	postdec2,f_sync@dir+1
 24688                           
 24689                           ;fatfs/ff.c: 4191:      dir[11] |= 0x20;
 24690   01633C  EE20 F00B          	lfsr	2,11
 24691   016340  5111               	movf	f_sync@dir& (0+255),w,b
 24692   016342  26D9               	addwf	fsr2l,f,c
 24693   016344  5112               	movf	(f_sync@dir+1)& (0+255),w,b
 24694   016346  22DA               	addwfc	fsr2h,f,c
 24695   016348  0E00               	movlw	0
 24696   01634A  8ADB               	bsf	plusw2,5,c
 24697                           
 24698                           ; BSR set to: 6
 24699                           ;fatfs/ff.c: 4192:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 24700   01634C  C60A  F4D9         	movff	f_sync@fp,fsr2l
 24701   016350  C60B  F4DA         	movff	f_sync@fp+1,fsr2h
 24702   016354  C4DE F505          	movff	postinc2,st_clust@fs
 24703   016358  C4DD F506          	movff	postdec2,st_clust@fs+1
 24704   01635C  C611  F507         	movff	f_sync@dir,st_clust@dir
 24705   016360  C612  F508         	movff	f_sync@dir+1,st_clust@dir+1
 24706   016364  EE20 F006          	lfsr	2,6
 24707   016368  510A               	movf	f_sync@fp& (0+255),w,b
 24708   01636A  26D9               	addwf	fsr2l,f,c
 24709   01636C  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24710   01636E  22DA               	addwfc	fsr2h,f,c
 24711   016370  C4DE F509          	movff	postinc2,st_clust@cl
 24712   016374  C4DE F50A          	movff	postinc2,st_clust@cl+1
 24713   016378  C4DE F50B          	movff	postinc2,st_clust@cl+2
 24714   01637C  C4DE F50C          	movff	postinc2,st_clust@cl+3
 24715   016380  ECF4  F0CD         	call	_st_clust	;wreg free
 24716                           
 24717                           ;fatfs/ff.c: 4193:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 24718   016384  0E1C               	movlw	28
 24719   016386  0106               	movlb	6	; () banked
 24720   016388  2511               	addwf	f_sync@dir& (0+255),w,b
 24721   01638A  6E01               	movwf	st_dword@ptr^(0+1280),c
 24722   01638C  0E00               	movlw	0
 24723   01638E  2112               	addwfc	(f_sync@dir+1)& (0+255),w,b
 24724   016390  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24725   016392  EE20 F00A          	lfsr	2,10
 24726   016396  510A               	movf	f_sync@fp& (0+255),w,b
 24727   016398  26D9               	addwf	fsr2l,f,c
 24728   01639A  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24729   01639C  22DA               	addwfc	fsr2h,f,c
 24730   01639E  C4DE F503          	movff	postinc2,st_dword@val
 24731   0163A2  C4DE F504          	movff	postinc2,st_dword@val+1
 24732   0163A6  C4DE F505          	movff	postinc2,st_dword@val+2
 24733   0163AA  C4DE F506          	movff	postinc2,st_dword@val+3
 24734   0163AE  EC68  F0CB         	call	_st_dword	;wreg free
 24735                           
 24736                           ; BSR set to: 6
 24737                           ;fatfs/ff.c: 4194:      st_dword(dir + 22, tm);
 24738   0163B2  0E16               	movlw	22
 24739   0163B4  2511               	addwf	f_sync@dir& (0+255),w,b
 24740   0163B6  6E01               	movwf	st_dword@ptr^(0+1280),c
 24741   0163B8  0E00               	movlw	0
 24742   0163BA  2112               	addwfc	(f_sync@dir+1)& (0+255),w,b
 24743   0163BC  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24744   0163BE  C60C  F503         	movff	f_sync@tm,st_dword@val
 24745   0163C2  C60D  F504         	movff	f_sync@tm+1,st_dword@val+1
 24746   0163C6  C60E  F505         	movff	f_sync@tm+2,st_dword@val+2
 24747   0163CA  C60F  F506         	movff	f_sync@tm+3,st_dword@val+3
 24748   0163CE  EC68  F0CB         	call	_st_dword	;wreg free
 24749                           
 24750                           ; BSR set to: 6
 24751                           ;fatfs/ff.c: 4195:      st_word(dir + 18, 0);
 24752   0163D2  0E12               	movlw	18
 24753   0163D4  2511               	addwf	f_sync@dir& (0+255),w,b
 24754   0163D6  6E01               	movwf	st_word@ptr^(0+1280),c
 24755   0163D8  0E00               	movlw	0
 24756   0163DA  2112               	addwfc	(f_sync@dir+1)& (0+255),w,b
 24757   0163DC  6E02               	movwf	(st_word@ptr+1)^(0+1280),c
 24758   0163DE  0E00               	movlw	0
 24759   0163E0  6E04               	movwf	(st_word@val+1)^(0+1280),c
 24760   0163E2  0E00               	movlw	0
 24761   0163E4  6E03               	movwf	st_word@val^(0+1280),c
 24762   0163E6  EC2B  F0CF         	call	_st_word	;wreg free
 24763                           
 24764                           ;fatfs/ff.c: 4196:      fs->wflag = 1;
 24765   0163EA  0106               	movlb	6	; () banked
 24766   0163EC  EE20 F004          	lfsr	2,4
 24767   0163F0  5113               	movf	f_sync@fs& (0+255),w,b
 24768   0163F2  26D9               	addwf	fsr2l,f,c
 24769   0163F4  5114               	movf	(f_sync@fs+1)& (0+255),w,b
 24770   0163F6  22DA               	addwfc	fsr2h,f,c
 24771   0163F8  0E01               	movlw	1
 24772   0163FA  6EDF               	movwf	indf2,c
 24773                           
 24774                           ; BSR set to: 6
 24775                           ;fatfs/ff.c: 4197:      res = sync_fs(fs);
 24776   0163FC  C613  F600         	movff	f_sync@fs,sync_fs@fs
 24777   016400  C614  F601         	movff	f_sync@fs+1,sync_fs@fs+1
 24778   016404  EC10  F0B2         	call	_sync_fs	;wreg free
 24779   016408  0106               	movlb	6	; () banked
 24780   01640A  6F10               	movwf	f_sync@res& (0+255),b
 24781                           
 24782                           ; BSR set to: 6
 24783                           ;fatfs/ff.c: 4198:      fp->flag &= (BYTE)~0x40;
 24784   01640C  EE20 F00E          	lfsr	2,14
 24785   016410  510A               	movf	f_sync@fp& (0+255),w,b
 24786   016412  26D9               	addwf	fsr2l,f,c
 24787   016414  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24788   016416  22DA               	addwfc	fsr2h,f,c
 24789   016418  0EBF               	movlw	191
 24790   01641A  16DF               	andwf	indf2,f,c
 24791   01641C                     l11941:
 24792                           
 24793                           ; BSR set to: 6
 24794                           ;fatfs/ff.c: 4204:  return res;
 24795   01641C  5110               	movf	f_sync@res& (0+255),w,b
 24796   01641E  0012               	return		;funcret
 24797   016420                     __end_of_f_sync:
 24798                           	callstack 0
 24799                           
 24800 ;; *************** function _sync_fs *****************
 24801 ;; Defined at:
 24802 ;;		line 1108 in file "fatfs/ff.c"
 24803 ;; Parameters:    Size  Location     Type
 24804 ;;  fs              2    0[BANK6 ] PTR struct .
 24805 ;;		 -> fs(560), NULL(0), 
 24806 ;; Auto vars:     Size  Location     Type
 24807 ;;  res             1  159[BANK5 ] enum E275
 24808 ;; Return value:  Size  Location     Type
 24809 ;;                  1    wreg      enum E275
 24810 ;; Registers used:
 24811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24812 ;; Tracked objects:
 24813 ;;		On entry : 3F/6
 24814 ;;		On exit  : 3F/5
 24815 ;;		Unchanged: 0/0
 24816 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24817 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24819 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24820 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24821 ;;Total ram usage:       11 bytes
 24822 ;; Hardware stack levels used: 1
 24823 ;; Hardware stack levels required when called: 12
 24824 ;; This function calls:
 24825 ;;		_disk_ioctl
 24826 ;;		_disk_write
 24827 ;;		_memset
 24828 ;;		_st_dword
 24829 ;;		_st_word
 24830 ;;		_sync_window
 24831 ;; This function is called by:
 24832 ;;		_f_sync
 24833 ;; This function uses a non-reentrant model
 24834 ;;
 24835                           
 24836                           	psect	text42
 24837   016420                     __ptext42:
 24838                           	callstack 0
 24839   016420                     _sync_fs:
 24840                           	callstack 112
 24841                           
 24842                           ; BSR set to: 6
 24843                           ;fatfs/ff.c: 1109:  FATFS* fs;fatfs/ff.c: 1111: {;fatfs/ff.c: 1112:  FRESULT res;;fatfs/
      +                          ff.c: 1115:  res = sync_window(fs);
 24844                           
 24845                           ;incstack = 0
 24846   016420  C600  F5ED         	movff	sync_fs@fs,sync_window@fs
 24847   016424  C601  F5EE         	movff	sync_fs@fs+1,sync_window@fs+1
 24848   016428  ECEF  F0B7         	call	_sync_window	;wreg free
 24849   01642C  6FFF               	movwf	sync_fs@res& (0+255),b
 24850                           
 24851                           ; BSR set to: 5
 24852                           ;fatfs/ff.c: 1116:  if (res == FR_OK) {
 24853   01642E  51FF               	movf	sync_fs@res& (0+255),w,b
 24854   016430  A4D8               	btfss	status,2,c
 24855   016432  D0E8               	goto	l216
 24856                           
 24857                           ; BSR set to: 5
 24858                           ;fatfs/ff.c: 1117:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 24859   016434  C600  F4D9         	movff	sync_fs@fs,fsr2l
 24860   016438  C601  F4DA         	movff	sync_fs@fs+1,fsr2h
 24861   01643C  0E03               	movlw	3
 24862   01643E  18DE               	xorwf	postinc2,w,c
 24863   016440  A4D8               	btfss	status,2,c
 24864   016442  D0CA               	goto	l10877
 24865                           
 24866                           ; BSR set to: 5
 24867   016444  0106               	movlb	6	; () banked
 24868   016446  EE20 F005          	lfsr	2,5
 24869   01644A  5100               	movf	sync_fs@fs& (0+255),w,b
 24870   01644C  26D9               	addwf	fsr2l,f,c
 24871   01644E  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 24872   016450  22DA               	addwfc	fsr2h,f,c
 24873   016452  04DE               	decf	postinc2,w,c
 24874   016454  A4D8               	btfss	status,2,c
 24875   016456  D0C0               	goto	l10877
 24876                           
 24877                           ; BSR set to: 6
 24878                           ;fatfs/ff.c: 1119:    memset(fs->win, 0, sizeof fs->win);
 24879   016458  0E30               	movlw	48
 24880   01645A  2500               	addwf	sync_fs@fs& (0+255),w,b
 24881   01645C  6E01               	movwf	memset@dest^(0+1280),c
 24882   01645E  0E00               	movlw	0
 24883   016460  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24884   016462  6E02               	movwf	(memset@dest+1)^(0+1280),c
 24885   016464  0E00               	movlw	0
 24886   016466  6E04               	movwf	(memset@c+1)^(0+1280),c
 24887   016468  0E00               	movlw	0
 24888   01646A  6E03               	movwf	memset@c^(0+1280),c
 24889   01646C  0E02               	movlw	2
 24890   01646E  6E06               	movwf	(memset@n+1)^(0+1280),c
 24891   016470  0E00               	movlw	0
 24892   016472  6E05               	movwf	memset@n^(0+1280),c
 24893   016474  ECEB  F0CE         	call	_memset	;wreg free
 24894                           
 24895                           ;fatfs/ff.c: 1120:    st_word(fs->win + 510, 0xAA55);
 24896   016478  0E2E               	movlw	46
 24897   01647A  2500               	addwf	sync_fs@fs& (0+255),w,b
 24898   01647C  6E01               	movwf	st_word@ptr^(0+1280),c
 24899   01647E  0E02               	movlw	2
 24900   016480  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24901   016482  6E02               	movwf	(st_word@ptr+1)^(0+1280),c
 24902   016484  0EAA               	movlw	170
 24903   016486  6E04               	movwf	(st_word@val+1)^(0+1280),c
 24904   016488  0E55               	movlw	85
 24905   01648A  6E03               	movwf	st_word@val^(0+1280),c
 24906   01648C  EC2B  F0CF         	call	_st_word	;wreg free
 24907                           
 24908                           ;fatfs/ff.c: 1121:    st_dword(fs->win + 0, 0x41615252);
 24909   016490  0E30               	movlw	48
 24910   016492  0106               	movlb	6	; () banked
 24911   016494  2500               	addwf	sync_fs@fs& (0+255),w,b
 24912   016496  6E01               	movwf	st_dword@ptr^(0+1280),c
 24913   016498  0E00               	movlw	0
 24914   01649A  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24915   01649C  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24916   01649E  0E52               	movlw	82
 24917   0164A0  6E03               	movwf	st_dword@val^(0+1280),c
 24918   0164A2  0E52               	movlw	82
 24919   0164A4  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 24920   0164A6  0E61               	movlw	97
 24921   0164A8  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 24922   0164AA  0E41               	movlw	65
 24923   0164AC  6E06               	movwf	(st_dword@val+3)^(0+1280),c
 24924   0164AE  EC68  F0CB         	call	_st_dword	;wreg free
 24925                           
 24926                           ;fatfs/ff.c: 1122:    st_dword(fs->win + 484, 0x61417272);
 24927   0164B2  0E14               	movlw	20
 24928   0164B4  2500               	addwf	sync_fs@fs& (0+255),w,b
 24929   0164B6  6E01               	movwf	st_dword@ptr^(0+1280),c
 24930   0164B8  0E02               	movlw	2
 24931   0164BA  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24932   0164BC  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24933   0164BE  0E72               	movlw	114
 24934   0164C0  6E03               	movwf	st_dword@val^(0+1280),c
 24935   0164C2  0E72               	movlw	114
 24936   0164C4  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 24937   0164C6  0E41               	movlw	65
 24938   0164C8  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 24939   0164CA  0E61               	movlw	97
 24940   0164CC  6E06               	movwf	(st_dword@val+3)^(0+1280),c
 24941   0164CE  EC68  F0CB         	call	_st_dword	;wreg free
 24942                           
 24943                           ;fatfs/ff.c: 1123:    st_dword(fs->win + 488, fs->free_clst);
 24944   0164D2  0E18               	movlw	24
 24945   0164D4  2500               	addwf	sync_fs@fs& (0+255),w,b
 24946   0164D6  6E01               	movwf	st_dword@ptr^(0+1280),c
 24947   0164D8  0E02               	movlw	2
 24948   0164DA  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24949   0164DC  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24950   0164DE  EE20 F010          	lfsr	2,16
 24951   0164E2  5100               	movf	sync_fs@fs& (0+255),w,b
 24952   0164E4  26D9               	addwf	fsr2l,f,c
 24953   0164E6  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 24954   0164E8  22DA               	addwfc	fsr2h,f,c
 24955   0164EA  C4DE F503          	movff	postinc2,st_dword@val
 24956   0164EE  C4DE F504          	movff	postinc2,st_dword@val+1
 24957   0164F2  C4DE F505          	movff	postinc2,st_dword@val+2
 24958   0164F6  C4DE F506          	movff	postinc2,st_dword@val+3
 24959   0164FA  EC68  F0CB         	call	_st_dword	;wreg free
 24960                           
 24961                           ;fatfs/ff.c: 1124:    st_dword(fs->win + 492, fs->last_clst);
 24962   0164FE  0E1C               	movlw	28
 24963   016500  2500               	addwf	sync_fs@fs& (0+255),w,b
 24964   016502  6E01               	movwf	st_dword@ptr^(0+1280),c
 24965   016504  0E02               	movlw	2
 24966   016506  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24967   016508  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24968   01650A  EE20 F00C          	lfsr	2,12
 24969   01650E  5100               	movf	sync_fs@fs& (0+255),w,b
 24970   016510  26D9               	addwf	fsr2l,f,c
 24971   016512  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 24972   016514  22DA               	addwfc	fsr2h,f,c
 24973   016516  C4DE F503          	movff	postinc2,st_dword@val
 24974   01651A  C4DE F504          	movff	postinc2,st_dword@val+1
 24975   01651E  C4DE F505          	movff	postinc2,st_dword@val+2
 24976   016522  C4DE F506          	movff	postinc2,st_dword@val+3
 24977   016526  EC68  F0CB         	call	_st_dword	;wreg free
 24978                           
 24979                           ; BSR set to: 6
 24980                           ;fatfs/ff.c: 1125:    fs->winsect = fs->volbase + 1;
 24981   01652A  EE20 F01C          	lfsr	2,28
 24982   01652E  5100               	movf	sync_fs@fs& (0+255),w,b
 24983   016530  26D9               	addwf	fsr2l,f,c
 24984   016532  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 24985   016534  22DA               	addwfc	fsr2h,f,c
 24986   016536  C4DE F602          	movff	postinc2,??_sync_fs
 24987   01653A  C4DE F603          	movff	postinc2,??_sync_fs+1
 24988   01653E  C4DE F604          	movff	postinc2,??_sync_fs+2
 24989   016542  C4DE F605          	movff	postinc2,??_sync_fs+3
 24990   016546  0E01               	movlw	1
 24991   016548  2502               	addwf	??_sync_fs& (0+255),w,b
 24992   01654A  6F06               	movwf	(??_sync_fs+4)& (0+255),b
 24993   01654C  0E00               	movlw	0
 24994   01654E  2103               	addwfc	(??_sync_fs+1)& (0+255),w,b
 24995   016550  6F07               	movwf	(??_sync_fs+5)& (0+255),b
 24996   016552  0E00               	movlw	0
 24997   016554  2104               	addwfc	(??_sync_fs+2)& (0+255),w,b
 24998   016556  6F08               	movwf	(??_sync_fs+6)& (0+255),b
 24999   016558  0E00               	movlw	0
 25000   01655A  2105               	addwfc	(??_sync_fs+3)& (0+255),w,b
 25001   01655C  6F09               	movwf	(??_sync_fs+7)& (0+255),b
 25002   01655E  EE20 F02C          	lfsr	2,44
 25003   016562  5100               	movf	sync_fs@fs& (0+255),w,b
 25004   016564  26D9               	addwf	fsr2l,f,c
 25005   016566  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25006   016568  22DA               	addwfc	fsr2h,f,c
 25007   01656A  C606  F4DE         	movff	??_sync_fs+4,postinc2
 25008   01656E  C607  F4DE         	movff	??_sync_fs+5,postinc2
 25009   016572  C608  F4DE         	movff	??_sync_fs+6,postinc2
 25010   016576  C609  F4DE         	movff	??_sync_fs+7,postinc2
 25011                           
 25012                           ; BSR set to: 6
 25013                           ;fatfs/ff.c: 1126:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 25014   01657A  0E30               	movlw	48
 25015   01657C  2500               	addwf	sync_fs@fs& (0+255),w,b
 25016   01657E  0105               	movlb	5	; () banked
 25017   016580  6FE2               	movwf	disk_write@buff& (0+255),b
 25018   016582  0E00               	movlw	0
 25019   016584  0106               	movlb	6	; () banked
 25020   016586  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 25021   016588  0105               	movlb	5	; () banked
 25022   01658A  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 25023   01658C  0106               	movlb	6	; () banked
 25024   01658E  EE20 F02C          	lfsr	2,44
 25025   016592  5100               	movf	sync_fs@fs& (0+255),w,b
 25026   016594  26D9               	addwf	fsr2l,f,c
 25027   016596  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25028   016598  22DA               	addwfc	fsr2h,f,c
 25029   01659A  C4DE F5E4          	movff	postinc2,disk_write@sector
 25030   01659E  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 25031   0165A2  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 25032   0165A6  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 25033   0165AA  0E00               	movlw	0
 25034   0165AC  0105               	movlb	5	; () banked
 25035   0165AE  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 25036   0165B0  0E01               	movlw	1
 25037   0165B2  6FE8               	movwf	disk_write@count& (0+255),b
 25038   0165B4  0106               	movlb	6	; () banked
 25039   0165B6  EE20 F001          	lfsr	2,1
 25040   0165BA  5100               	movf	sync_fs@fs& (0+255),w,b
 25041   0165BC  26D9               	addwf	fsr2l,f,c
 25042   0165BE  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25043   0165C0  22DA               	addwfc	fsr2h,f,c
 25044   0165C2  50DF               	movf	indf2,w,c
 25045   0165C4  EC11  F0C9         	call	_disk_write
 25046                           
 25047                           ;fatfs/ff.c: 1127:    fs->fsi_flag = 0;
 25048   0165C8  0106               	movlb	6	; () banked
 25049   0165CA  EE20 F005          	lfsr	2,5
 25050   0165CE  5100               	movf	sync_fs@fs& (0+255),w,b
 25051   0165D0  26D9               	addwf	fsr2l,f,c
 25052   0165D2  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25053   0165D4  22DA               	addwfc	fsr2h,f,c
 25054   0165D6  6ADF               	clrf	indf2,c
 25055   0165D8                     l10877:
 25056                           
 25057                           ;fatfs/ff.c: 1130:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res = FR_DISK_ERR;
 25058   0165D8  0E00               	movlw	0
 25059   0165DA  0105               	movlb	5	; () banked
 25060   0165DC  6FA6               	movwf	disk_ioctl@cmd& (0+255),b
 25061   0165DE  0E00               	movlw	0
 25062   0165E0  6FA7               	movwf	disk_ioctl@buff& (0+255),b
 25063   0165E2  0E00               	movlw	0
 25064   0165E4  6FA8               	movwf	(disk_ioctl@buff+1)& (0+255),b
 25065   0165E6  0106               	movlb	6	; () banked
 25066   0165E8  EE20 F001          	lfsr	2,1
 25067   0165EC  5100               	movf	sync_fs@fs& (0+255),w,b
 25068   0165EE  26D9               	addwf	fsr2l,f,c
 25069   0165F0  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25070   0165F2  22DA               	addwfc	fsr2h,f,c
 25071   0165F4  50DF               	movf	indf2,w,c
 25072   0165F6  ECB1  F0CC         	call	_disk_ioctl
 25073   0165FA  0900               	iorlw	0
 25074   0165FC  B4D8               	btfsc	status,2,c
 25075   0165FE  D002               	goto	l216
 25076                           
 25077                           ; BSR set to: 5
 25078   016600  0E01               	movlw	1
 25079   016602  6FFF               	movwf	sync_fs@res& (0+255),b
 25080   016604                     l216:
 25081                           
 25082                           ; BSR set to: 5
 25083                           ;fatfs/ff.c: 1133:  return res;
 25084   016604  51FF               	movf	sync_fs@res& (0+255),w,b
 25085                           
 25086                           ; BSR set to: 5
 25087   016606  0012               	return		;funcret
 25088   016608                     __end_of_sync_fs:
 25089                           	callstack 0
 25090                           
 25091 ;; *************** function _memset *****************
 25092 ;; Defined at:
 25093 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
 25094 ;; Parameters:    Size  Location     Type
 25095 ;;  dest            2    0[COMRAM] PTR void 
 25096 ;;		 -> djn$fn(12), fsdir$fn(12), files(3276), fsdir(40), 
 25097 ;;		 -> fs(560), f_rename@djn(40), djo$fn(12), f_rename@djo(40), 
 25098 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), dj$fn(12), 
 25099 ;;		 -> f_open@dj(40), NULL(0), 
 25100 ;;  c               2    2[COMRAM] int 
 25101 ;;  n               2    4[COMRAM] unsigned int 
 25102 ;; Auto vars:     Size  Location     Type
 25103 ;;  p               2    6[COMRAM] PTR unsigned char 
 25104 ;;		 -> djn$fn(12), fsdir$fn(12), files(3276), fsdir(40), 
 25105 ;;		 -> fs(560), f_rename@djn(40), djo$fn(12), f_rename@djo(40), 
 25106 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), dj$fn(12), 
 25107 ;;		 -> f_open@dj(40), NULL(0), 
 25108 ;; Return value:  Size  Location     Type
 25109 ;;                  2    0[COMRAM] PTR void 
 25110 ;; Registers used:
 25111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25112 ;; Tracked objects:
 25113 ;;		On entry : 3F/6
 25114 ;;		On exit  : 3F/6
 25115 ;;		Unchanged: 3F/0
 25116 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25118 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25120 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25121 ;;Total ram usage:        8 bytes
 25122 ;; Hardware stack levels used: 1
 25123 ;; This function calls:
 25124 ;;		Nothing
 25125 ;; This function is called by:
 25126 ;;		_sync_fs
 25127 ;;		_dir_clear
 25128 ;;		_dir_register
 25129 ;;		_create_name
 25130 ;;		_f_open
 25131 ;; This function uses a non-reentrant model
 25132 ;;
 25133                           
 25134                           	psect	text43
 25135   019DD6                     __ptext43:
 25136                           	callstack 0
 25137   019DD6                     _memset:
 25138                           	callstack 121
 25139                           
 25140                           ; BSR set to: 6
 25141                           
 25142                           ; BSR set to: 5
 25143                           ;incstack = 0
 25144   019DD6  C501  F507         	movff	memset@dest,memset@p
 25145   019DDA  C502  F508         	movff	memset@dest+1,memset@p+1
 25146   019DDE  D008               	goto	l9845
 25147   019DE0                     l9841:
 25148                           
 25149                           ; BSR set to: 6
 25150   019DE0  C507  F4D9         	movff	memset@p,fsr2l
 25151   019DE4  C508  F4DA         	movff	memset@p+1,fsr2h
 25152   019DE8  C503  F4DF         	movff	memset@c,indf2
 25153                           
 25154                           ; BSR set to: 6
 25155   019DEC  4A07               	infsnz	memset@p^(0+1280),f,c
 25156   019DEE  2A08               	incf	(memset@p+1)^(0+1280),f,c
 25157   019DF0                     l9845:
 25158                           
 25159                           ; BSR set to: 6
 25160   019DF0  0605               	decf	memset@n^(0+1280),f,c
 25161   019DF2  A0D8               	btfss	status,0,c
 25162   019DF4  0606               	decf	(memset@n+1)^(0+1280),f,c
 25163   019DF6  2805               	incf	memset@n^(0+1280),w,c
 25164   019DF8  E1F3               	bnz	l9841
 25165   019DFA  2806               	incf	(memset@n+1)^(0+1280),w,c
 25166   019DFC  B4D8               	btfsc	status,2,c
 25167   019DFE  0012               	return	
 25168   019E00  D7EF               	goto	l9841
 25169   019E02                     __end_of_memset:
 25170                           	callstack 0
 25171                           
 25172 ;; *************** function _disk_ioctl *****************
 25173 ;; Defined at:
 25174 ;;		line 149 in file "drivers/diskio.c"
 25175 ;; Parameters:    Size  Location     Type
 25176 ;;  pdrv            1    wreg     unsigned char 
 25177 ;;  cmd             1   70[BANK5 ] unsigned char 
 25178 ;;  buff            2   71[BANK5 ] PTR void 
 25179 ;;		 -> NULL(0), 
 25180 ;; Auto vars:     Size  Location     Type
 25181 ;;  pdrv            1   73[BANK5 ] unsigned char 
 25182 ;;  res             1   74[BANK5 ] enum E17647
 25183 ;; Return value:  Size  Location     Type
 25184 ;;                  1    wreg      enum E17647
 25185 ;; Registers used:
 25186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25187 ;; Tracked objects:
 25188 ;;		On entry : 3F/6
 25189 ;;		On exit  : 3F/5
 25190 ;;		Unchanged: 0/0
 25191 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25192 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25193 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25195 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25196 ;;Total ram usage:        5 bytes
 25197 ;; Hardware stack levels used: 1
 25198 ;; Hardware stack levels required when called: 8
 25199 ;; This function calls:
 25200 ;;		_printf
 25201 ;; This function is called by:
 25202 ;;		_sync_fs
 25203 ;; This function uses a non-reentrant model
 25204 ;;
 25205                           
 25206                           	psect	text44
 25207   019962                     __ptext44:
 25208                           	callstack 0
 25209   019962                     _disk_ioctl:
 25210                           	callstack 115
 25211                           
 25212                           ; BSR set to: 6
 25213                           ;incstack = 0
 25214                           ;disk_ioctl@pdrv stored from wreg
 25215   019962  0105               	movlb	5	; () banked
 25216   019964  6FA9               	movwf	disk_ioctl@pdrv& (0+255),b
 25217                           
 25218                           ;drivers/diskio.c: 149: DRESULT disk_ioctl(BYTE pdrv, BYTE cmd, void* buff);drivers/disk
      +                          io.c: 150: {;drivers/diskio.c: 151:     DRESULT res = RES_ERROR;
 25219   019966  0E01               	movlw	1
 25220   019968  0105               	movlb	5	; () banked
 25221   01996A  6FAA               	movwf	disk_ioctl@res& (0+255),b
 25222                           
 25223                           ;drivers/diskio.c: 154:     switch (cmd) {
 25224   01996C  D010               	goto	l10551
 25225   01996E                     l10545:
 25226                           
 25227                           ; BSR set to: 5
 25228                           ;drivers/diskio.c: 156:         res = RES_OK;
 25229   01996E  0E00               	movlw	0
 25230   019970  6FAA               	movwf	disk_ioctl@res& (0+255),b
 25231                           
 25232                           ;drivers/diskio.c: 157:         break;
 25233   019972  D01C               	goto	l10555
 25234   019974                     l97:
 25235                           
 25236                           ; BSR set to: 5
 25237                           ;drivers/diskio.c: 163:         printf("disk_ioctl: pdrv=%d, cmd=%d: Not handled.\n\r", 
      +                          pdrv, cmd);
 25238                           
 25239                           ; BSR set to: 5
 25240   019974  0E0D               	movlw	low STR_17
 25241   019976  6F9A               	movwf	printf@fmt& (0+255),b
 25242   019978  0EFA               	movlw	high STR_17
 25243   01997A  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 25244   01997C  C5A9  F59C         	movff	disk_ioctl@pdrv,?_printf+2
 25245   019980  6B9D               	clrf	(?_printf+3)& (0+255),b
 25246   019982  C5A6  F59E         	movff	disk_ioctl@cmd,?_printf+4
 25247   019986  6B9F               	clrf	(?_printf+5)& (0+255),b
 25248   019988  EC53  F0CF         	call	_printf	;wreg free
 25249                           
 25250                           ;drivers/diskio.c: 164:         break;
 25251   01998C  D00F               	goto	l10555
 25252   01998E                     l10551:
 25253                           
 25254                           ; BSR set to: 5
 25255   01998E  51A6               	movf	disk_ioctl@cmd& (0+255),w,b
 25256                           
 25257                           ; Switch size 1, requested type "simple"
 25258                           ; Number of cases is 5, Range of values is 0 to 4
 25259                           ; switch strategies available:
 25260                           ; Name         Instructions Cycles
 25261                           ; simple_byte           16     9 (average)
 25262                           ;	Chosen strategy is simple_byte
 25263   019990  0A00               	xorlw	0	; case 0
 25264   019992  B4D8               	btfsc	status,2,c
 25265   019994  D7EC               	goto	l10545
 25266   019996  0A01               	xorlw	1	; case 1
 25267   019998  B4D8               	btfsc	status,2,c
 25268   01999A  D7EC               	goto	l97
 25269   01999C  0A03               	xorlw	3	; case 2
 25270   01999E  B4D8               	btfsc	status,2,c
 25271   0199A0  D7E9               	goto	l97
 25272   0199A2  0A01               	xorlw	1	; case 3
 25273   0199A4  B4D8               	btfsc	status,2,c
 25274   0199A6  D7E6               	goto	l97
 25275   0199A8  0A07               	xorlw	7	; case 4
 25276   0199AA  D7E4               	goto	l97
 25277   0199AC                     l10555:
 25278                           
 25279                           ; BSR set to: 5
 25280                           ;drivers/diskio.c: 168:     return res;
 25281   0199AC  51AA               	movf	disk_ioctl@res& (0+255),w,b
 25282                           
 25283                           ; BSR set to: 5
 25284   0199AE  0012               	return		;funcret
 25285   0199B0                     __end_of_disk_ioctl:
 25286                           	callstack 0
 25287                           
 25288 ;; *************** function _st_clust *****************
 25289 ;; Defined at:
 25290 ;;		line 1865 in file "fatfs/ff.c"
 25291 ;; Parameters:    Size  Location     Type
 25292 ;;  fs              2    4[COMRAM] PTR struct .
 25293 ;;		 -> fs(560), NULL(0), 
 25294 ;;  dir             2    6[COMRAM] PTR unsigned char 
 25295 ;;		 -> fs$win(512), fs(560), NULL(0), 
 25296 ;;  cl              4    8[COMRAM] unsigned long 
 25297 ;; Auto vars:     Size  Location     Type
 25298 ;;		None
 25299 ;; Return value:  Size  Location     Type
 25300 ;;                  1    wreg      void 
 25301 ;; Registers used:
 25302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25303 ;; Tracked objects:
 25304 ;;		On entry : 3F/6
 25305 ;;		On exit  : 0/0
 25306 ;;		Unchanged: 0/0
 25307 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25308 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25311 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25312 ;;Total ram usage:        9 bytes
 25313 ;; Hardware stack levels used: 1
 25314 ;; Hardware stack levels required when called: 1
 25315 ;; This function calls:
 25316 ;;		_st_word
 25317 ;; This function is called by:
 25318 ;;		_f_open
 25319 ;;		_f_sync
 25320 ;; This function uses a non-reentrant model
 25321 ;;
 25322                           
 25323                           	psect	text45
 25324   019BE8                     __ptext45:
 25325                           	callstack 0
 25326   019BE8                     _st_clust:
 25327                           	callstack 123
 25328                           
 25329                           ; BSR set to: 6
 25330                           ;fatfs/ff.c: 1866:  FATFS* fs,;fatfs/ff.c: 1867:  BYTE* dir,;fatfs/ff.c: 1868:  DWORD cl
      +                          ;fatfs/ff.c: 1870: {;fatfs/ff.c: 1871:  st_word(dir + 26, (WORD)cl);
 25331                           
 25332                           ; BSR set to: 5
 25333                           ;incstack = 0
 25334   019BE8  0E1A               	movlw	26
 25335   019BEA  2407               	addwf	st_clust@dir^(0+1280),w,c
 25336   019BEC  6E01               	movwf	st_word@ptr^(0+1280),c
 25337   019BEE  0E00               	movlw	0
 25338   019BF0  2008               	addwfc	(st_clust@dir+1)^(0+1280),w,c
 25339   019BF2  6E02               	movwf	(st_word@ptr+1)^(0+1280),c
 25340   019BF4  C509  F503         	movff	st_clust@cl,st_word@val
 25341   019BF8  C50A  F504         	movff	st_clust@cl+1,st_word@val+1
 25342   019BFC  EC2B  F0CF         	call	_st_word	;wreg free
 25343                           
 25344                           ;fatfs/ff.c: 1872:  if (fs->fs_type == 3) {
 25345   019C00  C505  F4D9         	movff	st_clust@fs,fsr2l
 25346   019C04  C506  F4DA         	movff	st_clust@fs+1,fsr2h
 25347   019C08  0E03               	movlw	3
 25348   019C0A  18DE               	xorwf	postinc2,w,c
 25349   019C0C  A4D8               	btfss	status,2,c
 25350   019C0E  0012               	return	
 25351                           
 25352                           ;fatfs/ff.c: 1873:   st_word(dir + 20, (WORD)(cl >> 16));
 25353   019C10  0E14               	movlw	20
 25354   019C12  2407               	addwf	st_clust@dir^(0+1280),w,c
 25355   019C14  6E01               	movwf	st_word@ptr^(0+1280),c
 25356   019C16  0E00               	movlw	0
 25357   019C18  2008               	addwfc	(st_clust@dir+1)^(0+1280),w,c
 25358   019C1A  6E02               	movwf	(st_word@ptr+1)^(0+1280),c
 25359   019C1C  C50B  F503         	movff	st_clust@cl+2,st_word@val
 25360   019C20  C50C  F504         	movff	st_clust@cl+3,st_word@val+1
 25361   019C24  EC2B  F0CF         	call	_st_word	;wreg free
 25362   019C28  0012               	return		;funcret
 25363   019C2A                     __end_of_st_clust:
 25364                           	callstack 0
 25365                           
 25366 ;; *************** function _get_fattime *****************
 25367 ;; Defined at:
 25368 ;;		line 47 in file "drivers/diskio.c"
 25369 ;; Parameters:    Size  Location     Type
 25370 ;;		None
 25371 ;; Auto vars:     Size  Location     Type
 25372 ;;		None
 25373 ;; Return value:  Size  Location     Type
 25374 ;;                  4    0[COMRAM] unsigned long 
 25375 ;; Registers used:
 25376 ;;		wreg, status,2
 25377 ;; Tracked objects:
 25378 ;;		On entry : 3F/6
 25379 ;;		On exit  : 3F/6
 25380 ;;		Unchanged: 3F/0
 25381 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25386 ;;Total ram usage:        4 bytes
 25387 ;; Hardware stack levels used: 1
 25388 ;; This function calls:
 25389 ;;		Nothing
 25390 ;; This function is called by:
 25391 ;;		_f_open
 25392 ;;		_f_sync
 25393 ;; This function uses a non-reentrant model
 25394 ;;
 25395                           
 25396                           	psect	text46
 25397   019FB2                     __ptext46:
 25398                           	callstack 0
 25399   019FB2                     _get_fattime:
 25400                           	callstack 124
 25401                           
 25402                           ; BSR set to: 6
 25403                           ;drivers/diskio.c: 50:     return (DWORD)0 << 25 | (DWORD)1 << 21 | (DWORD)1 << 16;
 25404                           
 25405                           ;incstack = 0
 25406   019FB2  0E00               	movlw	0
 25407   019FB4  6E01               	movwf	?_get_fattime^(0+1280),c
 25408   019FB6  0E00               	movlw	0
 25409   019FB8  6E02               	movwf	(?_get_fattime+1)^(0+1280),c
 25410   019FBA  0E21               	movlw	33
 25411   019FBC  6E03               	movwf	(?_get_fattime+2)^(0+1280),c
 25412   019FBE  0E00               	movlw	0
 25413   019FC0  6E04               	movwf	(?_get_fattime+3)^(0+1280),c
 25414                           
 25415                           ; BSR set to: 6
 25416   019FC2  0012               	return		;funcret
 25417   019FC4                     __end_of_get_fattime:
 25418                           	callstack 0
 25419                           
 25420 ;; *************** function _f_read *****************
 25421 ;; Defined at:
 25422 ;;		line 3914 in file "fatfs/ff.c"
 25423 ;; Parameters:    Size  Location     Type
 25424 ;;  fp              2   36[BANK6 ] PTR struct .
 25425 ;;		 -> files(3276), 
 25426 ;;  buff            2   38[BANK6 ] PTR void 
 25427 ;;		 -> disk_buf(128), 
 25428 ;;  btr             2   40[BANK6 ] unsigned int 
 25429 ;;  br              2   42[BANK6 ] PTR unsigned int 
 25430 ;;		 -> disk_io_handle@n(2), 
 25431 ;; Auto vars:     Size  Location     Type
 25432 ;;  sect            4   73[BANK6 ] unsigned long 
 25433 ;;  clst            4   61[BANK6 ] unsigned long 
 25434 ;;  remain          4   56[BANK6 ] unsigned long 
 25435 ;;  fs              2   77[BANK6 ] PTR struct .
 25436 ;;		 -> fs(560), NULL(0), 
 25437 ;;  rcnt            2   71[BANK6 ] unsigned int 
 25438 ;;  cc              2   69[BANK6 ] unsigned int 
 25439 ;;  csect           2   67[BANK6 ] unsigned int 
 25440 ;;  rbuff           2   65[BANK6 ] PTR unsigned char 
 25441 ;;		 -> disk_buf(128), 
 25442 ;;  res             1   60[BANK6 ] enum E275
 25443 ;; Return value:  Size  Location     Type
 25444 ;;                  1    wreg      enum E275
 25445 ;; Registers used:
 25446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25447 ;; Tracked objects:
 25448 ;;		On entry : 3F/6
 25449 ;;		On exit  : 3F/6
 25450 ;;		Unchanged: 0/0
 25451 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25452 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25453 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25454 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25455 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25456 ;;Total ram usage:       43 bytes
 25457 ;; Hardware stack levels used: 1
 25458 ;; Hardware stack levels required when called: 14
 25459 ;; This function calls:
 25460 ;;		_clst2sect
 25461 ;;		_disk_read
 25462 ;;		_disk_write
 25463 ;;		_get_fat
 25464 ;;		_memcpy
 25465 ;;		_validate
 25466 ;; This function is called by:
 25467 ;;		_disk_io_handle
 25468 ;; This function uses a non-reentrant model
 25469 ;;
 25470                           
 25471                           	psect	text47
 25472   012566                     __ptext47:
 25473                           	callstack 0
 25474   012566                     _f_read:
 25475                           	callstack 111
 25476                           
 25477                           ; BSR set to: 6
 25478                           ;fatfs/ff.c: 3915:  FIL* fp,;fatfs/ff.c: 3916:  void* buff,;fatfs/ff.c: 3917:  UINT btr,
      +                          ;fatfs/ff.c: 3918:  UINT* br;fatfs/ff.c: 3920: {;fatfs/ff.c: 3921:  FRESULT res;;fatfs/f
      +                          f.c: 3922:  FATFS *fs;;fatfs/ff.c: 3923:  DWORD clst;;fatfs/ff.c: 3924:  LBA_t sect;;fat
      +                          fs/ff.c: 3925:  FSIZE_t remain;;fatfs/ff.c: 3926:  UINT rcnt, cc, csect;;fatfs/ff.c: 392
      +                          7:  BYTE *rbuff = (BYTE*)buff;
 25479                           
 25480                           ; BSR set to: 6
 25481                           ;incstack = 0
 25482   012566  C626  F641         	movff	f_read@buff,f_read@rbuff
 25483   01256A  C627  F642         	movff	f_read@buff+1,f_read@rbuff+1
 25484                           
 25485                           ; BSR set to: 6
 25486                           ;fatfs/ff.c: 3930:  *br = 0;
 25487   01256E  C62A  F4D9         	movff	f_read@br,fsr2l
 25488   012572  C62B  F4DA         	movff	f_read@br+1,fsr2h
 25489   012576  6ADE               	clrf	postinc2,c
 25490   012578  6ADD               	clrf	postdec2,c
 25491                           
 25492                           ; BSR set to: 6
 25493                           ;fatfs/ff.c: 3931:  res = validate(&fp->obj, &fs);
 25494   01257A  C624  F5A6         	movff	f_read@fp,validate@obj
 25495   01257E  C625  F5A7         	movff	f_read@fp+1,validate@obj+1
 25496   012582  0E4D               	movlw	low f_read@fs
 25497   012584  0105               	movlb	5	; () banked
 25498   012586  6FA8               	movwf	validate@rfs& (0+255),b
 25499   012588  0E06               	movlw	high f_read@fs
 25500   01258A  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 25501   01258C  EC62  F0C3         	call	_validate	;wreg free
 25502   012590  0106               	movlb	6	; () banked
 25503   012592  6F3C               	movwf	f_read@res& (0+255),b
 25504                           
 25505                           ; BSR set to: 6
 25506                           ;fatfs/ff.c: 3932:  if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res;
 25507   012594  513C               	movf	f_read@res& (0+255),w,b
 25508   012596  A4D8               	btfss	status,2,c
 25509   012598  D00B               	goto	u14650
 25510                           
 25511                           ; BSR set to: 6
 25512   01259A  EE20 F00F          	lfsr	2,15
 25513   01259E  5124               	movf	f_read@fp& (0+255),w,b
 25514   0125A0  26D9               	addwf	fsr2l,f,c
 25515   0125A2  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25516   0125A4  22DA               	addwfc	fsr2h,f,c
 25517   0125A6  50DF               	movf	indf2,w,c
 25518   0125A8  6F3C               	movwf	f_read@res& (0+255),b
 25519   0125AA  513C               	movf	f_read@res& (0+255),w,b
 25520   0125AC  B4D8               	btfsc	status,2,c
 25521   0125AE  D002               	goto	l11619
 25522   0125B0                     u14650:
 25523                           
 25524                           ; BSR set to: 6
 25525   0125B0  513C               	movf	f_read@res& (0+255),w,b
 25526   0125B2  0012               	return	
 25527   0125B4                     l11619:
 25528                           
 25529                           ; BSR set to: 6
 25530                           ;fatfs/ff.c: 3933:  if (!(fp->flag & 0x01)) return FR_DENIED;
 25531   0125B4  EE20 F00E          	lfsr	2,14
 25532   0125B8  5124               	movf	f_read@fp& (0+255),w,b
 25533   0125BA  26D9               	addwf	fsr2l,f,c
 25534   0125BC  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25535   0125BE  22DA               	addwfc	fsr2h,f,c
 25536   0125C0  B0DF               	btfsc	indf2,0,c
 25537   0125C2  D002               	goto	l11625
 25538                           
 25539                           ; BSR set to: 6
 25540   0125C4  0E07               	movlw	7
 25541   0125C6  0012               	return	
 25542   0125C8                     l11625:
 25543                           
 25544                           ; BSR set to: 6
 25545                           ;fatfs/ff.c: 3934:  remain = fp->obj.objsize - fp->fptr;
 25546   0125C8  EE20 F010          	lfsr	2,16
 25547   0125CC  5124               	movf	f_read@fp& (0+255),w,b
 25548   0125CE  26D9               	addwf	fsr2l,f,c
 25549   0125D0  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25550   0125D2  22DA               	addwfc	fsr2h,f,c
 25551   0125D4  C4DE F62C          	movff	postinc2,??_f_read
 25552   0125D8  C4DE F62D          	movff	postinc2,??_f_read+1
 25553   0125DC  C4DE F62E          	movff	postinc2,??_f_read+2
 25554   0125E0  C4DE F62F          	movff	postinc2,??_f_read+3
 25555   0125E4  EE20 F00A          	lfsr	2,10
 25556   0125E8  5124               	movf	f_read@fp& (0+255),w,b
 25557   0125EA  26D9               	addwf	fsr2l,f,c
 25558   0125EC  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25559   0125EE  22DA               	addwfc	fsr2h,f,c
 25560   0125F0  C4DE F630          	movff	postinc2,??_f_read+4
 25561   0125F4  C4DE F631          	movff	postinc2,??_f_read+5
 25562   0125F8  C4DE F632          	movff	postinc2,??_f_read+6
 25563   0125FC  C4DE F633          	movff	postinc2,??_f_read+7
 25564   012600  512C               	movf	??_f_read& (0+255),w,b
 25565   012602  5D30               	subwf	(??_f_read+4)& (0+255),w,b
 25566   012604  6F38               	movwf	f_read@remain& (0+255),b
 25567   012606  512D               	movf	(??_f_read+1)& (0+255),w,b
 25568   012608  5931               	subwfb	(??_f_read+5)& (0+255),w,b
 25569   01260A  6F39               	movwf	(f_read@remain+1)& (0+255),b
 25570   01260C  512E               	movf	(??_f_read+2)& (0+255),w,b
 25571   01260E  5932               	subwfb	(??_f_read+6)& (0+255),w,b
 25572   012610  6F3A               	movwf	(f_read@remain+2)& (0+255),b
 25573   012612  512F               	movf	(??_f_read+3)& (0+255),w,b
 25574   012614  5933               	subwfb	(??_f_read+7)& (0+255),w,b
 25575   012616  6F3B               	movwf	(f_read@remain+3)& (0+255),b
 25576                           
 25577                           ; BSR set to: 6
 25578                           ;fatfs/ff.c: 3935:  if (btr > remain) btr = (UINT)remain;
 25579   012618  5128               	movf	f_read@btr& (0+255),w,b
 25580   01261A  6F2C               	movwf	??_f_read& (0+255),b
 25581   01261C  5129               	movf	(f_read@btr+1)& (0+255),w,b
 25582   01261E  6F2D               	movwf	(??_f_read+1)& (0+255),b
 25583   012620  6B2E               	clrf	(??_f_read+2)& (0+255),b
 25584   012622  6B2F               	clrf	(??_f_read+3)& (0+255),b
 25585   012624  512C               	movf	??_f_read& (0+255),w,b
 25586   012626  5D38               	subwf	f_read@remain& (0+255),w,b
 25587   012628  512D               	movf	(??_f_read+1)& (0+255),w,b
 25588   01262A  5939               	subwfb	(f_read@remain+1)& (0+255),w,b
 25589   01262C  512E               	movf	(??_f_read+2)& (0+255),w,b
 25590   01262E  593A               	subwfb	(f_read@remain+2)& (0+255),w,b
 25591   012630  512F               	movf	(??_f_read+3)& (0+255),w,b
 25592   012632  593B               	subwfb	(f_read@remain+3)& (0+255),w,b
 25593   012634  B0D8               	btfsc	status,0,c
 25594   012636  D004               	goto	l11631
 25595                           
 25596                           ; BSR set to: 6
 25597   012638  C638  F628         	movff	f_read@remain,f_read@btr
 25598   01263C  C639  F629         	movff	f_read@remain+1,f_read@btr+1
 25599   012640                     l11631:
 25600                           
 25601                           ; BSR set to: 6
 25602                           ;fatfs/ff.c: 3937:  for ( ; btr > 0; btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr +
      +                          = rcnt) {
 25603   012640  5128               	movf	f_read@btr& (0+255),w,b
 25604   012642  1129               	iorwf	(f_read@btr+1)& (0+255),w,b
 25605   012644  B4D8               	btfsc	status,2,c
 25606   012646  D281               	goto	l11741
 25607                           
 25608                           ; BSR set to: 6
 25609                           ;fatfs/ff.c: 3938:   if (fp->fptr % ((UINT)512) == 0) {
 25610   012648  EE20 F010          	lfsr	2,16
 25611   01264C  5124               	movf	f_read@fp& (0+255),w,b
 25612   01264E  26D9               	addwf	fsr2l,f,c
 25613   012650  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25614   012652  22DA               	addwfc	fsr2h,f,c
 25615   012654  0EFF               	movlw	255
 25616   012656  14DE               	andwf	postinc2,w,c
 25617   012658  6F2C               	movwf	??_f_read& (0+255),b
 25618   01265A  0E01               	movlw	1
 25619   01265C  14DE               	andwf	postinc2,w,c
 25620   01265E  6F2D               	movwf	(??_f_read+1)& (0+255),b
 25621   012660  0E00               	movlw	0
 25622   012662  14DE               	andwf	postinc2,w,c
 25623   012664  6F2E               	movwf	(??_f_read+2)& (0+255),b
 25624   012666  0E00               	movlw	0
 25625   012668  14DE               	andwf	postinc2,w,c
 25626   01266A  6F2F               	movwf	(??_f_read+3)& (0+255),b
 25627   01266C  512C               	movf	??_f_read& (0+255),w,b
 25628   01266E  112D               	iorwf	(??_f_read+1)& (0+255),w,b
 25629   012670  112E               	iorwf	(??_f_read+2)& (0+255),w,b
 25630   012672  112F               	iorwf	(??_f_read+3)& (0+255),w,b
 25631   012674  A4D8               	btfss	status,2,c
 25632   012676  D202               	goto	l655
 25633                           
 25634                           ; BSR set to: 6
 25635                           ;fatfs/ff.c: 3939:    csect = (UINT)(fp->fptr / ((UINT)512) & (fs->csize - 1));
 25636   012678  EE20 F010          	lfsr	2,16
 25637   01267C  5124               	movf	f_read@fp& (0+255),w,b
 25638   01267E  26D9               	addwf	fsr2l,f,c
 25639   012680  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25640   012682  22DA               	addwfc	fsr2h,f,c
 25641   012684  C4DE F62C          	movff	postinc2,??_f_read
 25642   012688  C4DE F62D          	movff	postinc2,??_f_read+1
 25643   01268C  C4DE F62E          	movff	postinc2,??_f_read+2
 25644   012690  C4DE F62F          	movff	postinc2,??_f_read+3
 25645   012694  0E0A               	movlw	10
 25646   012696  D005               	goto	u14700
 25647   012698                     u14705:
 25648   012698  90D8               	bcf	status,0,c
 25649   01269A  332F               	rrcf	(??_f_read+3)& (0+255),f,b
 25650   01269C  332E               	rrcf	(??_f_read+2)& (0+255),f,b
 25651   01269E  332D               	rrcf	(??_f_read+1)& (0+255),f,b
 25652   0126A0  332C               	rrcf	??_f_read& (0+255),f,b
 25653   0126A2                     u14700:
 25654   0126A2  2EE8               	decfsz	wreg,f,c
 25655   0126A4  D7F9               	goto	u14705
 25656   0126A6  EE20 F00A          	lfsr	2,10
 25657   0126AA  514D               	movf	f_read@fs& (0+255),w,b
 25658   0126AC  26D9               	addwf	fsr2l,f,c
 25659   0126AE  514E               	movf	(f_read@fs+1)& (0+255),w,b
 25660   0126B0  22DA               	addwfc	fsr2h,f,c
 25661   0126B2  C4DE F630          	movff	postinc2,??_f_read+4
 25662   0126B6  C4DD F631          	movff	postdec2,??_f_read+5
 25663   0126BA  0EFF               	movlw	255
 25664   0126BC  2530               	addwf	(??_f_read+4)& (0+255),w,b
 25665   0126BE  6F32               	movwf	(??_f_read+6)& (0+255),b
 25666   0126C0  0EFF               	movlw	255
 25667   0126C2  2131               	addwfc	(??_f_read+5)& (0+255),w,b
 25668   0126C4  6F33               	movwf	(??_f_read+7)& (0+255),b
 25669   0126C6  512C               	movf	??_f_read& (0+255),w,b
 25670   0126C8  1532               	andwf	(??_f_read+6)& (0+255),w,b
 25671   0126CA  6F43               	movwf	f_read@csect& (0+255),b
 25672   0126CC  512D               	movf	(??_f_read+1)& (0+255),w,b
 25673   0126CE  1533               	andwf	(??_f_read+7)& (0+255),w,b
 25674   0126D0  6F44               	movwf	(f_read@csect+1)& (0+255),b
 25675                           
 25676                           ; BSR set to: 6
 25677                           ;fatfs/ff.c: 3940:    if (csect == 0) {
 25678   0126D2  5143               	movf	f_read@csect& (0+255),w,b
 25679   0126D4  1144               	iorwf	(f_read@csect+1)& (0+255),w,b
 25680   0126D6  A4D8               	btfss	status,2,c
 25681   0126D8  D06B               	goto	l11665
 25682                           
 25683                           ; BSR set to: 6
 25684                           ;fatfs/ff.c: 3941:     if (fp->fptr == 0) {
 25685   0126DA  EE20 F010          	lfsr	2,16
 25686   0126DE  5124               	movf	f_read@fp& (0+255),w,b
 25687   0126E0  26D9               	addwf	fsr2l,f,c
 25688   0126E2  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25689   0126E4  22DA               	addwfc	fsr2h,f,c
 25690   0126E6  50DE               	movf	postinc2,w,c
 25691   0126E8  10DE               	iorwf	postinc2,w,c
 25692   0126EA  10DE               	iorwf	postinc2,w,c
 25693   0126EC  10DE               	iorwf	postinc2,w,c
 25694   0126EE  A4D8               	btfss	status,2,c
 25695   0126F0  D00F               	goto	l11645
 25696                           
 25697                           ; BSR set to: 6
 25698                           ;fatfs/ff.c: 3942:      clst = fp->obj.sclust;
 25699   0126F2  EE20 F006          	lfsr	2,6
 25700   0126F6  5124               	movf	f_read@fp& (0+255),w,b
 25701   0126F8  26D9               	addwf	fsr2l,f,c
 25702   0126FA  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25703   0126FC  22DA               	addwfc	fsr2h,f,c
 25704   0126FE  C4DE F63D          	movff	postinc2,f_read@clst
 25705   012702  C4DE F63E          	movff	postinc2,f_read@clst+1
 25706   012706  C4DE F63F          	movff	postinc2,f_read@clst+2
 25707   01270A  C4DE F640          	movff	postinc2,f_read@clst+3
 25708                           
 25709                           ;fatfs/ff.c: 3943:     } else {
 25710   01270E  D01C               	goto	l11647
 25711   012710                     l11645:
 25712                           
 25713                           ; BSR set to: 6
 25714                           ;fatfs/ff.c: 3949:      {;fatfs/ff.c: 3950:       clst = get_fat(&fp->obj, fp->clust);
 25715   012710  C624  F60A         	movff	f_read@fp,get_fat@obj
 25716   012714  C625  F60B         	movff	f_read@fp+1,get_fat@obj+1
 25717   012718  EE20 F014          	lfsr	2,20
 25718   01271C  5124               	movf	f_read@fp& (0+255),w,b
 25719   01271E  26D9               	addwf	fsr2l,f,c
 25720   012720  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25721   012722  22DA               	addwfc	fsr2h,f,c
 25722   012724  C4DE F60C          	movff	postinc2,get_fat@clst
 25723   012728  C4DE F60D          	movff	postinc2,get_fat@clst+1
 25724   01272C  C4DE F60E          	movff	postinc2,get_fat@clst+2
 25725   012730  C4DE F60F          	movff	postinc2,get_fat@clst+3
 25726   012734  EC68  F0A0         	call	_get_fat	;wreg free
 25727   012738  C60A  F63D         	movff	?_get_fat,f_read@clst
 25728   01273C  C60B  F63E         	movff	?_get_fat+1,f_read@clst+1
 25729   012740  C60C  F63F         	movff	?_get_fat+2,f_read@clst+2
 25730   012744  C60D  F640         	movff	?_get_fat+3,f_read@clst+3
 25731   012748                     l11647:
 25732                           
 25733                           ;fatfs/ff.c: 3953:     if (clst < 2) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; 
      +                          };
 25734   012748  0106               	movlb	6	; () banked
 25735   01274A  5140               	movf	(f_read@clst+3)& (0+255),w,b
 25736   01274C  113F               	iorwf	(f_read@clst+2)& (0+255),w,b
 25737   01274E  113E               	iorwf	(f_read@clst+1)& (0+255),w,b
 25738   012750  E10E               	bnz	l11655
 25739   012752  0E02               	movlw	2
 25740   012754  5D3D               	subwf	f_read@clst& (0+255),w,b
 25741   012756  B0D8               	btfsc	status,0,c
 25742   012758  D00A               	goto	l11655
 25743   01275A                     u14730:
 25744                           
 25745                           ; BSR set to: 6
 25746   01275A  EE20 F00F          	lfsr	2,15
 25747   01275E  5124               	movf	f_read@fp& (0+255),w,b
 25748   012760  26D9               	addwf	fsr2l,f,c
 25749   012762  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25750   012764  22DA               	addwfc	fsr2h,f,c
 25751   012766  0E02               	movlw	2
 25752   012768  6EDF               	movwf	indf2,c
 25753                           
 25754                           ; BSR set to: 6
 25755   01276A  0E02               	movlw	2
 25756   01276C  0012               	return	
 25757   01276E                     l11655:
 25758                           
 25759                           ; BSR set to: 6
 25760                           ;fatfs/ff.c: 3954:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return F
      +                          R_DISK_ERR; };
 25761   01276E  293D               	incf	f_read@clst& (0+255),w,b
 25762   012770  E111               	bnz	l11663
 25763   012772  293E               	incf	(f_read@clst+1)& (0+255),w,b
 25764   012774  E10F               	bnz	l11663
 25765   012776  293F               	incf	(f_read@clst+2)& (0+255),w,b
 25766   012778  E10D               	bnz	l11663
 25767   01277A  2940               	incf	(f_read@clst+3)& (0+255),w,b
 25768   01277C  A4D8               	btfss	status,2,c
 25769   01277E  D00A               	goto	l11663
 25770   012780                     u14740:
 25771                           
 25772                           ; BSR set to: 6
 25773   012780  EE20 F00F          	lfsr	2,15
 25774   012784  5124               	movf	f_read@fp& (0+255),w,b
 25775   012786  26D9               	addwf	fsr2l,f,c
 25776   012788  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25777   01278A  22DA               	addwfc	fsr2h,f,c
 25778   01278C  0E01               	movlw	1
 25779   01278E  6EDF               	movwf	indf2,c
 25780                           
 25781                           ; BSR set to: 6
 25782   012790  0E01               	movlw	1
 25783   012792  0012               	return	
 25784   012794                     l11663:
 25785                           
 25786                           ; BSR set to: 6
 25787                           ;fatfs/ff.c: 3955:     fp->clust = clst;
 25788   012794  EE20 F014          	lfsr	2,20
 25789   012798  5124               	movf	f_read@fp& (0+255),w,b
 25790   01279A  26D9               	addwf	fsr2l,f,c
 25791   01279C  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25792   01279E  22DA               	addwfc	fsr2h,f,c
 25793   0127A0  C63D  F4DE         	movff	f_read@clst,postinc2
 25794   0127A4  C63E  F4DE         	movff	f_read@clst+1,postinc2
 25795   0127A8  C63F  F4DE         	movff	f_read@clst+2,postinc2
 25796   0127AC  C640  F4DE         	movff	f_read@clst+3,postinc2
 25797   0127B0                     l11665:
 25798                           
 25799                           ; BSR set to: 6
 25800                           ;fatfs/ff.c: 3957:    sect = clst2sect(fs, fp->clust);
 25801   0127B0  C64D  F50D         	movff	f_read@fs,clst2sect@fs
 25802   0127B4  C64E  F50E         	movff	f_read@fs+1,clst2sect@fs+1
 25803   0127B8  EE20 F014          	lfsr	2,20
 25804   0127BC  5124               	movf	f_read@fp& (0+255),w,b
 25805   0127BE  26D9               	addwf	fsr2l,f,c
 25806   0127C0  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25807   0127C2  22DA               	addwfc	fsr2h,f,c
 25808   0127C4  C4DE F50F          	movff	postinc2,clst2sect@clst
 25809   0127C8  C4DE F510          	movff	postinc2,clst2sect@clst+1
 25810   0127CC  C4DE F511          	movff	postinc2,clst2sect@clst+2
 25811   0127D0  C4DE F512          	movff	postinc2,clst2sect@clst+3
 25812   0127D4  ECC3  F0C3         	call	_clst2sect	;wreg free
 25813   0127D8  C50D  F649         	movff	?_clst2sect,f_read@sect
 25814   0127DC  C50E  F64A         	movff	?_clst2sect+1,f_read@sect+1
 25815   0127E0  C50F  F64B         	movff	?_clst2sect+2,f_read@sect+2
 25816   0127E4  C510  F64C         	movff	?_clst2sect+3,f_read@sect+3
 25817                           
 25818                           ;fatfs/ff.c: 3958:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; 
      +                          };
 25819   0127E8  0106               	movlb	6	; () banked
 25820   0127EA  5149               	movf	f_read@sect& (0+255),w,b
 25821   0127EC  114A               	iorwf	(f_read@sect+1)& (0+255),w,b
 25822   0127EE  114B               	iorwf	(f_read@sect+2)& (0+255),w,b
 25823   0127F0  114C               	iorwf	(f_read@sect+3)& (0+255),w,b
 25824   0127F2  B4D8               	btfsc	status,2,c
 25825   0127F4  D7B2               	goto	u14730
 25826                           
 25827                           ; BSR set to: 6
 25828                           ;fatfs/ff.c: 3959:    sect += csect;
 25829                           
 25830                           ; BSR set to: 6
 25831   0127F6  5143               	movf	f_read@csect& (0+255),w,b
 25832   0127F8  2749               	addwf	f_read@sect& (0+255),f,b
 25833   0127FA  5144               	movf	(f_read@csect+1)& (0+255),w,b
 25834   0127FC  234A               	addwfc	(f_read@sect+1)& (0+255),f,b
 25835   0127FE  0E00               	movlw	0
 25836   012800  234B               	addwfc	(f_read@sect+2)& (0+255),f,b
 25837   012802  0E00               	movlw	0
 25838   012804  234C               	addwfc	(f_read@sect+3)& (0+255),f,b
 25839                           
 25840                           ; BSR set to: 6
 25841                           ;fatfs/ff.c: 3960:    cc = btr / ((UINT)512);
 25842   012806  C628  F62C         	movff	f_read@btr,??_f_read
 25843   01280A  C629  F62D         	movff	f_read@btr+1,??_f_read+1
 25844   01280E  0E09               	movlw	9
 25845   012810  6F2E               	movwf	(??_f_read+2)& (0+255),b
 25846   012812                     u14765:
 25847   012812  90D8               	bcf	status,0,c
 25848   012814  332D               	rrcf	(??_f_read+1)& (0+255),f,b
 25849   012816  332C               	rrcf	??_f_read& (0+255),f,b
 25850   012818  2F2E               	decfsz	(??_f_read+2)& (0+255),f,b
 25851   01281A  D7FB               	goto	u14765
 25852   01281C  C62C  F645         	movff	??_f_read,f_read@cc
 25853   012820  C62D  F646         	movff	??_f_read+1,f_read@cc+1
 25854                           
 25855                           ; BSR set to: 6
 25856                           ;fatfs/ff.c: 3961:    if (cc > 0) {
 25857   012824  5145               	movf	f_read@cc& (0+255),w,b
 25858   012826  1146               	iorwf	(f_read@cc+1)& (0+255),w,b
 25859   012828  B4D8               	btfsc	status,2,c
 25860   01282A  D0A7               	goto	l11701
 25861                           
 25862                           ; BSR set to: 6
 25863                           ;fatfs/ff.c: 3962:     if (csect + cc > fs->csize) {
 25864   01282C  5145               	movf	f_read@cc& (0+255),w,b
 25865   01282E  2543               	addwf	f_read@csect& (0+255),w,b
 25866   012830  6F2C               	movwf	??_f_read& (0+255),b
 25867   012832  5146               	movf	(f_read@cc+1)& (0+255),w,b
 25868   012834  2144               	addwfc	(f_read@csect+1)& (0+255),w,b
 25869   012836  6F2D               	movwf	(??_f_read+1)& (0+255),b
 25870   012838  EE20 F00A          	lfsr	2,10
 25871   01283C  514D               	movf	f_read@fs& (0+255),w,b
 25872   01283E  26D9               	addwf	fsr2l,f,c
 25873   012840  514E               	movf	(f_read@fs+1)& (0+255),w,b
 25874   012842  22DA               	addwfc	fsr2h,f,c
 25875   012844  512C               	movf	??_f_read& (0+255),w,b
 25876   012846  5CDE               	subwf	postinc2,w,c
 25877   012848  512D               	movf	(??_f_read+1)& (0+255),w,b
 25878   01284A  58DE               	subwfb	postinc2,w,c
 25879   01284C  B0D8               	btfsc	status,0,c
 25880   01284E  D010               	goto	l11685
 25881                           
 25882                           ; BSR set to: 6
 25883                           ;fatfs/ff.c: 3963:      cc = fs->csize - csect;
 25884   012850  EE20 F00A          	lfsr	2,10
 25885   012854  514D               	movf	f_read@fs& (0+255),w,b
 25886   012856  26D9               	addwf	fsr2l,f,c
 25887   012858  514E               	movf	(f_read@fs+1)& (0+255),w,b
 25888   01285A  22DA               	addwfc	fsr2h,f,c
 25889   01285C  C4DE F62C          	movff	postinc2,??_f_read
 25890   012860  C4DD F62D          	movff	postdec2,??_f_read+1
 25891   012864  5143               	movf	f_read@csect& (0+255),w,b
 25892   012866  5D2C               	subwf	??_f_read& (0+255),w,b
 25893   012868  6F45               	movwf	f_read@cc& (0+255),b
 25894   01286A  5144               	movf	(f_read@csect+1)& (0+255),w,b
 25895   01286C  592D               	subwfb	(??_f_read+1)& (0+255),w,b
 25896   01286E  6F46               	movwf	(f_read@cc+1)& (0+255),b
 25897   012870                     l11685:
 25898                           
 25899                           ; BSR set to: 6
 25900                           ;fatfs/ff.c: 3965:     if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) { fp->err = (
      +                          BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 25901   012870  C641  F5E4         	movff	f_read@rbuff,disk_read@buff
 25902   012874  C642  F5E5         	movff	f_read@rbuff+1,disk_read@buff+1
 25903   012878  C649  F5E6         	movff	f_read@sect,disk_read@sector
 25904   01287C  C64A  F5E7         	movff	f_read@sect+1,disk_read@sector+1
 25905   012880  C64B  F5E8         	movff	f_read@sect+2,disk_read@sector+2
 25906   012884  C64C  F5E9         	movff	f_read@sect+3,disk_read@sector+3
 25907   012888  C645  F5EA         	movff	f_read@cc,disk_read@count
 25908   01288C  C646  F5EB         	movff	f_read@cc+1,disk_read@count+1
 25909   012890  EE20 F001          	lfsr	2,1
 25910   012894  514D               	movf	f_read@fs& (0+255),w,b
 25911   012896  26D9               	addwf	fsr2l,f,c
 25912   012898  514E               	movf	(f_read@fs+1)& (0+255),w,b
 25913   01289A  22DA               	addwfc	fsr2h,f,c
 25914   01289C  50DF               	movf	indf2,w,c
 25915   01289E  EC52  F0C9         	call	_disk_read
 25916   0128A2  0900               	iorlw	0
 25917   0128A4  A4D8               	btfss	status,2,c
 25918   0128A6  D0D9               	goto	u14870
 25919                           
 25920                           ; BSR set to: 5
 25921                           ;fatfs/ff.c: 3972:     if ((fp->flag & 0x80) && fp->sect - sect < cc) {
 25922                           
 25923                           ; BSR set to: 5
 25924   0128A8  0106               	movlb	6	; () banked
 25925   0128AA  EE20 F00E          	lfsr	2,14
 25926   0128AE  5124               	movf	f_read@fp& (0+255),w,b
 25927   0128B0  26D9               	addwf	fsr2l,f,c
 25928   0128B2  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25929   0128B4  22DA               	addwfc	fsr2h,f,c
 25930   0128B6  AEDF               	btfss	indf2,7,c
 25931   0128B8  D050               	goto	l11699
 25932                           
 25933                           ; BSR set to: 6
 25934   0128BA  5145               	movf	f_read@cc& (0+255),w,b
 25935   0128BC  6F2C               	movwf	??_f_read& (0+255),b
 25936   0128BE  5146               	movf	(f_read@cc+1)& (0+255),w,b
 25937   0128C0  6F2D               	movwf	(??_f_read+1)& (0+255),b
 25938   0128C2  6B2E               	clrf	(??_f_read+2)& (0+255),b
 25939   0128C4  6B2F               	clrf	(??_f_read+3)& (0+255),b
 25940   0128C6  EE20 F018          	lfsr	2,24
 25941   0128CA  5124               	movf	f_read@fp& (0+255),w,b
 25942   0128CC  26D9               	addwf	fsr2l,f,c
 25943   0128CE  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25944   0128D0  22DA               	addwfc	fsr2h,f,c
 25945   0128D2  C4DE F630          	movff	postinc2,??_f_read+4
 25946   0128D6  C4DE F631          	movff	postinc2,??_f_read+5
 25947   0128DA  C4DE F632          	movff	postinc2,??_f_read+6
 25948   0128DE  C4DE F633          	movff	postinc2,??_f_read+7
 25949   0128E2  5149               	movf	f_read@sect& (0+255),w,b
 25950   0128E4  5D30               	subwf	(??_f_read+4)& (0+255),w,b
 25951   0128E6  6F34               	movwf	(??_f_read+8)& (0+255),b
 25952   0128E8  514A               	movf	(f_read@sect+1)& (0+255),w,b
 25953   0128EA  5931               	subwfb	(??_f_read+5)& (0+255),w,b
 25954   0128EC  6F35               	movwf	(??_f_read+9)& (0+255),b
 25955   0128EE  514B               	movf	(f_read@sect+2)& (0+255),w,b
 25956   0128F0  5932               	subwfb	(??_f_read+6)& (0+255),w,b
 25957   0128F2  6F36               	movwf	(??_f_read+10)& (0+255),b
 25958   0128F4  514C               	movf	(f_read@sect+3)& (0+255),w,b
 25959   0128F6  5933               	subwfb	(??_f_read+7)& (0+255),w,b
 25960   0128F8  6F37               	movwf	(??_f_read+11)& (0+255),b
 25961   0128FA  512C               	movf	??_f_read& (0+255),w,b
 25962   0128FC  5D34               	subwf	(??_f_read+8)& (0+255),w,b
 25963   0128FE  512D               	movf	(??_f_read+1)& (0+255),w,b
 25964   012900  5935               	subwfb	(??_f_read+9)& (0+255),w,b
 25965   012902  512E               	movf	(??_f_read+2)& (0+255),w,b
 25966   012904  5936               	subwfb	(??_f_read+10)& (0+255),w,b
 25967   012906  512F               	movf	(??_f_read+3)& (0+255),w,b
 25968   012908  5937               	subwfb	(??_f_read+11)& (0+255),w,b
 25969   01290A  B0D8               	btfsc	status,0,c
 25970   01290C  D026               	goto	l11699
 25971                           
 25972                           ; BSR set to: 6
 25973                           ;fatfs/ff.c: 3973:      memcpy(rbuff + ((fp->sect - sect) * ((UINT)512)), fp->buf, ((UIN
      +                          T)512));
 25974   01290E  EE20 F018          	lfsr	2,24
 25975   012912  5124               	movf	f_read@fp& (0+255),w,b
 25976   012914  26D9               	addwf	fsr2l,f,c
 25977   012916  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25978   012918  22DA               	addwfc	fsr2h,f,c
 25979   01291A  C4DE F62C          	movff	postinc2,??_f_read
 25980   01291E  C4DD F62D          	movff	postdec2,??_f_read+1
 25981   012922  5149               	movf	f_read@sect& (0+255),w,b
 25982   012924  5F2C               	subwf	??_f_read& (0+255),f,b
 25983   012926  514A               	movf	(f_read@sect+1)& (0+255),w,b
 25984   012928  5B2D               	subwfb	(??_f_read+1)& (0+255),f,b
 25985   01292A  0E09               	movlw	9
 25986   01292C                     u14825:
 25987   01292C  90D8               	bcf	status,0,c
 25988   01292E  372C               	rlcf	??_f_read& (0+255),f,b
 25989   012930  372D               	rlcf	(??_f_read+1)& (0+255),f,b
 25990   012932  2EE8               	decfsz	wreg,f,c
 25991   012934  D7FB               	goto	u14825
 25992   012936  512C               	movf	??_f_read& (0+255),w,b
 25993   012938  2541               	addwf	f_read@rbuff& (0+255),w,b
 25994   01293A  6E01               	movwf	memcpy@d1^(0+1280),c
 25995   01293C  512D               	movf	(??_f_read+1)& (0+255),w,b
 25996   01293E  2142               	addwfc	(f_read@rbuff+1)& (0+255),w,b
 25997   012940  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
 25998   012942  0E22               	movlw	34
 25999   012944  2524               	addwf	f_read@fp& (0+255),w,b
 26000   012946  6E03               	movwf	memcpy@s1^(0+1280),c
 26001   012948  0E00               	movlw	0
 26002   01294A  2125               	addwfc	(f_read@fp+1)& (0+255),w,b
 26003   01294C  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
 26004   01294E  0E02               	movlw	2
 26005   012950  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 26006   012952  0E00               	movlw	0
 26007   012954  6E05               	movwf	memcpy@n^(0+1280),c
 26008   012956  ECB1  F0CD         	call	_memcpy	;wreg free
 26009   01295A                     l11699:
 26010                           
 26011                           ;fatfs/ff.c: 3977:     rcnt = ((UINT)512) * cc;
 26012   01295A  C645  F62C         	movff	f_read@cc,??_f_read
 26013   01295E  C646  F62D         	movff	f_read@cc+1,??_f_read+1
 26014   012962  0E09               	movlw	9
 26015   012964                     u14835:
 26016   012964  90D8               	bcf	status,0,c
 26017   012966  0106               	movlb	6	; () banked
 26018   012968  372C               	rlcf	??_f_read& (0+255),f,b
 26019   01296A  372D               	rlcf	(??_f_read+1)& (0+255),f,b
 26020   01296C  2EE8               	decfsz	wreg,f,c
 26021   01296E  D7FA               	goto	u14835
 26022   012970  C62C  F647         	movff	??_f_read,f_read@rcnt
 26023   012974  C62D  F648         	movff	??_f_read+1,f_read@rcnt+1
 26024                           
 26025                           ;fatfs/ff.c: 3978:     continue;
 26026   012978  D0C9               	goto	l11731
 26027   01297A                     l11701:
 26028                           
 26029                           ; BSR set to: 6
 26030                           ;fatfs/ff.c: 3981:    if (fp->sect != sect) {
 26031   01297A  EE20 F018          	lfsr	2,24
 26032   01297E  5124               	movf	f_read@fp& (0+255),w,b
 26033   012980  26D9               	addwf	fsr2l,f,c
 26034   012982  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26035   012984  22DA               	addwfc	fsr2h,f,c
 26036   012986  5149               	movf	f_read@sect& (0+255),w,b
 26037   012988  18DE               	xorwf	postinc2,w,c
 26038   01298A  E10A               	bnz	u14840
 26039   01298C  514A               	movf	(f_read@sect+1)& (0+255),w,b
 26040   01298E  18DE               	xorwf	postinc2,w,c
 26041   012990  E107               	bnz	u14840
 26042   012992  514B               	movf	(f_read@sect+2)& (0+255),w,b
 26043   012994  18DE               	xorwf	postinc2,w,c
 26044   012996  E104               	bnz	u14840
 26045   012998  514C               	movf	(f_read@sect+3)& (0+255),w,b
 26046   01299A  18DE               	xorwf	postinc2,w,c
 26047   01299C  B4D8               	btfsc	status,2,c
 26048   01299E  D05F               	goto	l11723
 26049   0129A0                     u14840:
 26050                           
 26051                           ; BSR set to: 6
 26052                           ;fatfs/ff.c: 3983:     if (fp->flag & 0x80) {
 26053   0129A0  EE20 F00E          	lfsr	2,14
 26054   0129A4  5124               	movf	f_read@fp& (0+255),w,b
 26055   0129A6  26D9               	addwf	fsr2l,f,c
 26056   0129A8  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26057   0129AA  22DA               	addwfc	fsr2h,f,c
 26058   0129AC  AEDF               	btfss	indf2,7,c
 26059   0129AE  D033               	goto	l11715
 26060                           
 26061                           ; BSR set to: 6
 26062                           ;fatfs/ff.c: 3984:      if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp->
      +                          err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 26063   0129B0  0E22               	movlw	34
 26064   0129B2  2524               	addwf	f_read@fp& (0+255),w,b
 26065   0129B4  0105               	movlb	5	; () banked
 26066   0129B6  6FE2               	movwf	disk_write@buff& (0+255),b
 26067   0129B8  0E00               	movlw	0
 26068   0129BA  0106               	movlb	6	; () banked
 26069   0129BC  2125               	addwfc	(f_read@fp+1)& (0+255),w,b
 26070   0129BE  0105               	movlb	5	; () banked
 26071   0129C0  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 26072   0129C2  0106               	movlb	6	; () banked
 26073   0129C4  EE20 F018          	lfsr	2,24
 26074   0129C8  5124               	movf	f_read@fp& (0+255),w,b
 26075   0129CA  26D9               	addwf	fsr2l,f,c
 26076   0129CC  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26077   0129CE  22DA               	addwfc	fsr2h,f,c
 26078   0129D0  C4DE F5E4          	movff	postinc2,disk_write@sector
 26079   0129D4  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 26080   0129D8  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 26081   0129DC  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 26082   0129E0  0E00               	movlw	0
 26083   0129E2  0105               	movlb	5	; () banked
 26084   0129E4  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 26085   0129E6  0E01               	movlw	1
 26086   0129E8  6FE8               	movwf	disk_write@count& (0+255),b
 26087   0129EA  0106               	movlb	6	; () banked
 26088   0129EC  EE20 F001          	lfsr	2,1
 26089   0129F0  514D               	movf	f_read@fs& (0+255),w,b
 26090   0129F2  26D9               	addwf	fsr2l,f,c
 26091   0129F4  514E               	movf	(f_read@fs+1)& (0+255),w,b
 26092   0129F6  22DA               	addwfc	fsr2h,f,c
 26093   0129F8  50DF               	movf	indf2,w,c
 26094   0129FA  EC11  F0C9         	call	_disk_write
 26095   0129FE  0900               	iorlw	0
 26096   012A00  A4D8               	btfss	status,2,c
 26097   012A02  D02B               	goto	u14870
 26098                           
 26099                           ; BSR set to: 5
 26100                           ;fatfs/ff.c: 3985:      fp->flag &= (BYTE)~0x80;
 26101                           
 26102                           ; BSR set to: 5
 26103   012A04  0106               	movlb	6	; () banked
 26104   012A06  EE20 F00E          	lfsr	2,14
 26105   012A0A  5124               	movf	f_read@fp& (0+255),w,b
 26106   012A0C  26D9               	addwf	fsr2l,f,c
 26107   012A0E  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26108   012A10  22DA               	addwfc	fsr2h,f,c
 26109   012A12  0E7F               	movlw	127
 26110   012A14  16DF               	andwf	indf2,f,c
 26111   012A16                     l11715:
 26112                           
 26113                           ; BSR set to: 6
 26114                           ;fatfs/ff.c: 3988:     if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) { fp->err = 
      +                          (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 26115   012A16  0E22               	movlw	34
 26116   012A18  2524               	addwf	f_read@fp& (0+255),w,b
 26117   012A1A  0105               	movlb	5	; () banked
 26118   012A1C  6FE4               	movwf	disk_read@buff& (0+255),b
 26119   012A1E  0E00               	movlw	0
 26120   012A20  0106               	movlb	6	; () banked
 26121   012A22  2125               	addwfc	(f_read@fp+1)& (0+255),w,b
 26122   012A24  0105               	movlb	5	; () banked
 26123   012A26  6FE5               	movwf	(disk_read@buff+1)& (0+255),b
 26124   012A28  C649  F5E6         	movff	f_read@sect,disk_read@sector
 26125   012A2C  C64A  F5E7         	movff	f_read@sect+1,disk_read@sector+1
 26126   012A30  C64B  F5E8         	movff	f_read@sect+2,disk_read@sector+2
 26127   012A34  C64C  F5E9         	movff	f_read@sect+3,disk_read@sector+3
 26128   012A38  0E00               	movlw	0
 26129   012A3A  6FEB               	movwf	(disk_read@count+1)& (0+255),b
 26130   012A3C  0E01               	movlw	1
 26131   012A3E  6FEA               	movwf	disk_read@count& (0+255),b
 26132   012A40  0106               	movlb	6	; () banked
 26133   012A42  EE20 F001          	lfsr	2,1
 26134   012A46  514D               	movf	f_read@fs& (0+255),w,b
 26135   012A48  26D9               	addwf	fsr2l,f,c
 26136   012A4A  514E               	movf	(f_read@fs+1)& (0+255),w,b
 26137   012A4C  22DA               	addwfc	fsr2h,f,c
 26138   012A4E  50DF               	movf	indf2,w,c
 26139   012A50  EC52  F0C9         	call	_disk_read
 26140   012A54  0900               	iorlw	0
 26141   012A56  B4D8               	btfsc	status,2,c
 26142   012A58  D002               	goto	l11723
 26143   012A5A                     u14870:
 26144                           
 26145                           ; BSR set to: 5
 26146   012A5A  0106               	movlb	6	; () banked
 26147   012A5C  D691               	goto	u14740
 26148   012A5E                     l11723:
 26149                           
 26150                           ;fatfs/ff.c: 3991:    fp->sect = sect;
 26151   012A5E  0106               	movlb	6	; () banked
 26152   012A60  EE20 F018          	lfsr	2,24
 26153   012A64  5124               	movf	f_read@fp& (0+255),w,b
 26154   012A66  26D9               	addwf	fsr2l,f,c
 26155   012A68  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26156   012A6A  22DA               	addwfc	fsr2h,f,c
 26157   012A6C  C649  F4DE         	movff	f_read@sect,postinc2
 26158   012A70  C64A  F4DE         	movff	f_read@sect+1,postinc2
 26159   012A74  C64B  F4DE         	movff	f_read@sect+2,postinc2
 26160   012A78  C64C  F4DE         	movff	f_read@sect+3,postinc2
 26161   012A7C                     l655:
 26162                           
 26163                           ; BSR set to: 6
 26164                           ;fatfs/ff.c: 3993:   rcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
 26165   012A7C  EE20 F010          	lfsr	2,16
 26166   012A80  5124               	movf	f_read@fp& (0+255),w,b
 26167   012A82  26D9               	addwf	fsr2l,f,c
 26168   012A84  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26169   012A86  22DA               	addwfc	fsr2h,f,c
 26170   012A88  C4DE F62C          	movff	postinc2,??_f_read
 26171   012A8C  C4DD F62D          	movff	postdec2,??_f_read+1
 26172   012A90  0EFF               	movlw	255
 26173   012A92  152C               	andwf	??_f_read& (0+255),w,b
 26174   012A94  6F2E               	movwf	(??_f_read+2)& (0+255),b
 26175   012A96  0E01               	movlw	1
 26176   012A98  152D               	andwf	(??_f_read+1)& (0+255),w,b
 26177   012A9A  6F2F               	movwf	(??_f_read+3)& (0+255),b
 26178   012A9C  512E               	movf	(??_f_read+2)& (0+255),w,b
 26179   012A9E  0800               	sublw	0
 26180   012AA0  6F47               	movwf	f_read@rcnt& (0+255),b
 26181   012AA2  512F               	movf	(??_f_read+3)& (0+255),w,b
 26182   012AA4  A0D8               	btfss	status,0,c
 26183   012AA6  2AE8               	incf	wreg,f,c
 26184   012AA8  0802               	sublw	2
 26185   012AAA  6F48               	movwf	(f_read@rcnt+1)& (0+255),b
 26186                           
 26187                           ; BSR set to: 6
 26188                           ;fatfs/ff.c: 3994:   if (rcnt > btr) rcnt = btr;
 26189   012AAC  5147               	movf	f_read@rcnt& (0+255),w,b
 26190   012AAE  5D28               	subwf	f_read@btr& (0+255),w,b
 26191   012AB0  5148               	movf	(f_read@rcnt+1)& (0+255),w,b
 26192   012AB2  5929               	subwfb	(f_read@btr+1)& (0+255),w,b
 26193   012AB4  B0D8               	btfsc	status,0,c
 26194   012AB6  D004               	goto	l11729
 26195                           
 26196                           ; BSR set to: 6
 26197   012AB8  C628  F647         	movff	f_read@btr,f_read@rcnt
 26198   012ABC  C629  F648         	movff	f_read@btr+1,f_read@rcnt+1
 26199   012AC0                     l11729:
 26200                           
 26201                           ; BSR set to: 6
 26202                           ;fatfs/ff.c: 3999:   memcpy(rbuff, fp->buf + fp->fptr % ((UINT)512), rcnt);
 26203   012AC0  C641  F501         	movff	f_read@rbuff,memcpy@d1
 26204   012AC4  C642  F502         	movff	f_read@rbuff+1,memcpy@d1+1
 26205   012AC8  EE20 F010          	lfsr	2,16
 26206   012ACC  5124               	movf	f_read@fp& (0+255),w,b
 26207   012ACE  26D9               	addwf	fsr2l,f,c
 26208   012AD0  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26209   012AD2  22DA               	addwfc	fsr2h,f,c
 26210   012AD4  C4DE F62C          	movff	postinc2,??_f_read
 26211   012AD8  C4DD F62D          	movff	postdec2,??_f_read+1
 26212   012ADC  0EFF               	movlw	255
 26213   012ADE  152C               	andwf	??_f_read& (0+255),w,b
 26214   012AE0  6F2E               	movwf	(??_f_read+2)& (0+255),b
 26215   012AE2  0E01               	movlw	1
 26216   012AE4  152D               	andwf	(??_f_read+1)& (0+255),w,b
 26217   012AE6  6F2F               	movwf	(??_f_read+3)& (0+255),b
 26218   012AE8  512E               	movf	(??_f_read+2)& (0+255),w,b
 26219   012AEA  2524               	addwf	f_read@fp& (0+255),w,b
 26220   012AEC  6F30               	movwf	(??_f_read+4)& (0+255),b
 26221   012AEE  512F               	movf	(??_f_read+3)& (0+255),w,b
 26222   012AF0  2125               	addwfc	(f_read@fp+1)& (0+255),w,b
 26223   012AF2  6F31               	movwf	(??_f_read+5)& (0+255),b
 26224   012AF4  0E22               	movlw	34
 26225   012AF6  2530               	addwf	(??_f_read+4)& (0+255),w,b
 26226   012AF8  6E03               	movwf	memcpy@s1^(0+1280),c
 26227   012AFA  0E00               	movlw	0
 26228   012AFC  2131               	addwfc	(??_f_read+5)& (0+255),w,b
 26229   012AFE  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
 26230   012B00  C647  F505         	movff	f_read@rcnt,memcpy@n
 26231   012B04  C648  F506         	movff	f_read@rcnt+1,memcpy@n+1
 26232   012B08  ECB1  F0CD         	call	_memcpy	;wreg free
 26233   012B0C                     l11731:
 26234   012B0C  0106               	movlb	6	; () banked
 26235   012B0E  5147               	movf	f_read@rcnt& (0+255),w,b
 26236   012B10  5F28               	subwf	f_read@btr& (0+255),f,b
 26237   012B12  5148               	movf	(f_read@rcnt+1)& (0+255),w,b
 26238   012B14  5B29               	subwfb	(f_read@btr+1)& (0+255),f,b
 26239                           
 26240                           ; BSR set to: 6
 26241   012B16  C62A  F4D9         	movff	f_read@br,fsr2l
 26242   012B1A  C62B  F4DA         	movff	f_read@br+1,fsr2h
 26243   012B1E  5147               	movf	f_read@rcnt& (0+255),w,b
 26244   012B20  26DE               	addwf	postinc2,f,c
 26245   012B22  5148               	movf	(f_read@rcnt+1)& (0+255),w,b
 26246   012B24  22DD               	addwfc	postdec2,f,c
 26247                           
 26248                           ; BSR set to: 6
 26249   012B26  5147               	movf	f_read@rcnt& (0+255),w,b
 26250   012B28  2741               	addwf	f_read@rbuff& (0+255),f,b
 26251   012B2A  5148               	movf	(f_read@rcnt+1)& (0+255),w,b
 26252   012B2C  2342               	addwfc	(f_read@rbuff+1)& (0+255),f,b
 26253                           
 26254                           ; BSR set to: 6
 26255   012B2E  EE20 F010          	lfsr	2,16
 26256   012B32  5124               	movf	f_read@fp& (0+255),w,b
 26257   012B34  26D9               	addwf	fsr2l,f,c
 26258   012B36  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26259   012B38  22DA               	addwfc	fsr2h,f,c
 26260   012B3A  5147               	movf	f_read@rcnt& (0+255),w,b
 26261   012B3C  26DE               	addwf	postinc2,f,c
 26262   012B3E  5148               	movf	(f_read@rcnt+1)& (0+255),w,b
 26263   012B40  22DE               	addwfc	postinc2,f,c
 26264   012B42  0E00               	movlw	0
 26265   012B44  22DE               	addwfc	postinc2,f,c
 26266   012B46  22DE               	addwfc	postinc2,f,c
 26267   012B48  D57B               	goto	l11631
 26268   012B4A                     l11741:
 26269                           
 26270                           ; BSR set to: 6
 26271                           ;fatfs/ff.c: 4003:  return FR_OK;
 26272   012B4A  0E00               	movlw	0
 26273                           
 26274                           ; BSR set to: 6
 26275   012B4C  0012               	return		;funcret
 26276   012B4E                     __end_of_f_read:
 26277                           	callstack 0
 26278                           
 26279 ;; *************** function _f_lseek *****************
 26280 ;; Defined at:
 26281 ;;		line 4433 in file "fatfs/ff.c"
 26282 ;; Parameters:    Size  Location     Type
 26283 ;;  fp              2   72[BANK6 ] PTR struct .
 26284 ;;		 -> files(3276), 
 26285 ;;  ofs             4   74[BANK6 ] unsigned long 
 26286 ;; Auto vars:     Size  Location     Type
 26287 ;;  clst            4  109[BANK6 ] unsigned long 
 26288 ;;  bcs             4  103[BANK6 ] unsigned long 
 26289 ;;  nsect           4   98[BANK6 ] unsigned long 
 26290 ;;  ifptr           4   94[BANK6 ] unsigned long 
 26291 ;;  fs              2  107[BANK6 ] PTR struct .
 26292 ;;		 -> fs(560), NULL(0), 
 26293 ;;  res             1  102[BANK6 ] enum E275
 26294 ;; Return value:  Size  Location     Type
 26295 ;;                  1    wreg      enum E275
 26296 ;; Registers used:
 26297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26298 ;; Tracked objects:
 26299 ;;		On entry : 3F/6
 26300 ;;		On exit  : 3F/6
 26301 ;;		Unchanged: 0/0
 26302 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 26303 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26304 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26305 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26306 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26307 ;;Total ram usage:       41 bytes
 26308 ;; Hardware stack levels used: 1
 26309 ;; Hardware stack levels required when called: 15
 26310 ;; This function calls:
 26311 ;;		___lldiv
 26312 ;;		_clst2sect
 26313 ;;		_create_chain
 26314 ;;		_disk_read
 26315 ;;		_disk_write
 26316 ;;		_get_fat
 26317 ;;		_validate
 26318 ;; This function is called by:
 26319 ;;		_disk_io_handle
 26320 ;; This function uses a non-reentrant model
 26321 ;;
 26322                           
 26323                           	psect	text48
 26324   0118AE                     __ptext48:
 26325                           	callstack 0
 26326   0118AE                     _f_lseek:
 26327                           	callstack 110
 26328                           
 26329                           ; BSR set to: 6
 26330                           ;fatfs/ff.c: 4434:  FIL* fp,;fatfs/ff.c: 4435:  FSIZE_t ofs;fatfs/ff.c: 4437: {;fatfs/ff
      +                          .c: 4438:  FRESULT res;;fatfs/ff.c: 4439:  FATFS *fs;;fatfs/ff.c: 4440:  DWORD clst, bcs
      +                          ;;fatfs/ff.c: 4441:  LBA_t nsect;;fatfs/ff.c: 4442:  FSIZE_t ifptr;;fatfs/ff.c: 4449:  r
      +                          es = validate(&fp->obj, &fs);
 26331                           
 26332                           ; BSR set to: 6
 26333                           ;incstack = 0
 26334   0118AE  C648  F5A6         	movff	f_lseek@fp,validate@obj
 26335   0118B2  C649  F5A7         	movff	f_lseek@fp+1,validate@obj+1
 26336   0118B6  0E6B               	movlw	low f_lseek@fs
 26337   0118B8  0105               	movlb	5	; () banked
 26338   0118BA  6FA8               	movwf	validate@rfs& (0+255),b
 26339   0118BC  0E06               	movlw	high f_lseek@fs
 26340   0118BE  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 26341   0118C0  EC62  F0C3         	call	_validate	;wreg free
 26342   0118C4  0106               	movlb	6	; () banked
 26343   0118C6  6F66               	movwf	f_lseek@res& (0+255),b
 26344                           
 26345                           ; BSR set to: 6
 26346                           ;fatfs/ff.c: 4450:  if (res == FR_OK) res = (FRESULT)fp->err;
 26347   0118C8  5166               	movf	f_lseek@res& (0+255),w,b
 26348   0118CA  A4D8               	btfss	status,2,c
 26349   0118CC  D008               	goto	l11951
 26350                           
 26351                           ; BSR set to: 6
 26352   0118CE  EE20 F00F          	lfsr	2,15
 26353   0118D2  5148               	movf	f_lseek@fp& (0+255),w,b
 26354   0118D4  26D9               	addwf	fsr2l,f,c
 26355   0118D6  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26356   0118D8  22DA               	addwfc	fsr2h,f,c
 26357   0118DA  50DF               	movf	indf2,w,c
 26358   0118DC  6F66               	movwf	f_lseek@res& (0+255),b
 26359   0118DE                     l11951:
 26360                           
 26361                           ; BSR set to: 6
 26362                           ;fatfs/ff.c: 4456:  if (res != FR_OK) return res;
 26363   0118DE  5166               	movf	f_lseek@res& (0+255),w,b
 26364   0118E0  B4D8               	btfsc	status,2,c
 26365   0118E2  D002               	goto	l11957
 26366   0118E4                     u15240:
 26367                           
 26368                           ; BSR set to: 6
 26369   0118E4  5166               	movf	f_lseek@res& (0+255),w,b
 26370   0118E6  0012               	return	
 26371   0118E8                     l11957:
 26372                           
 26373                           ; BSR set to: 6
 26374                           ;fatfs/ff.c: 4511:  {;fatfs/ff.c: 4515:   if (ofs > fp->obj.objsize && (0 || !(fp->flag 
      +                          & 0x02))) {
 26375   0118E8  EE20 F00A          	lfsr	2,10
 26376   0118EC  5148               	movf	f_lseek@fp& (0+255),w,b
 26377   0118EE  26D9               	addwf	fsr2l,f,c
 26378   0118F0  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26379   0118F2  22DA               	addwfc	fsr2h,f,c
 26380   0118F4  514A               	movf	f_lseek@ofs& (0+255),w,b
 26381   0118F6  5CDE               	subwf	postinc2,w,c
 26382   0118F8  514B               	movf	(f_lseek@ofs+1)& (0+255),w,b
 26383   0118FA  58DE               	subwfb	postinc2,w,c
 26384   0118FC  514C               	movf	(f_lseek@ofs+2)& (0+255),w,b
 26385   0118FE  58DE               	subwfb	postinc2,w,c
 26386   011900  514D               	movf	(f_lseek@ofs+3)& (0+255),w,b
 26387   011902  58DE               	subwfb	postinc2,w,c
 26388   011904  B0D8               	btfsc	status,0,c
 26389   011906  D016               	goto	l725
 26390                           
 26391                           ; BSR set to: 6
 26392   011908  EE20 F00E          	lfsr	2,14
 26393   01190C  5148               	movf	f_lseek@fp& (0+255),w,b
 26394   01190E  26D9               	addwf	fsr2l,f,c
 26395   011910  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26396   011912  22DA               	addwfc	fsr2h,f,c
 26397   011914  B2DF               	btfsc	indf2,1,c
 26398   011916  D00E               	goto	l725
 26399                           
 26400                           ; BSR set to: 6
 26401                           ;fatfs/ff.c: 4516:    ofs = fp->obj.objsize;
 26402   011918  EE20 F00A          	lfsr	2,10
 26403   01191C  5148               	movf	f_lseek@fp& (0+255),w,b
 26404   01191E  26D9               	addwf	fsr2l,f,c
 26405   011920  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26406   011922  22DA               	addwfc	fsr2h,f,c
 26407   011924  C4DE F64A          	movff	postinc2,f_lseek@ofs
 26408   011928  C4DE F64B          	movff	postinc2,f_lseek@ofs+1
 26409   01192C  C4DE F64C          	movff	postinc2,f_lseek@ofs+2
 26410   011930  C4DE F64D          	movff	postinc2,f_lseek@ofs+3
 26411   011934                     l725:
 26412                           
 26413                           ; BSR set to: 6
 26414                           ;fatfs/ff.c: 4518:   ifptr = fp->fptr;
 26415   011934  EE20 F010          	lfsr	2,16
 26416   011938  5148               	movf	f_lseek@fp& (0+255),w,b
 26417   01193A  26D9               	addwf	fsr2l,f,c
 26418   01193C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26419   01193E  22DA               	addwfc	fsr2h,f,c
 26420   011940  C4DE F65E          	movff	postinc2,f_lseek@ifptr
 26421   011944  C4DE F65F          	movff	postinc2,f_lseek@ifptr+1
 26422   011948  C4DE F660          	movff	postinc2,f_lseek@ifptr+2
 26423   01194C  C4DE F661          	movff	postinc2,f_lseek@ifptr+3
 26424                           
 26425                           ;fatfs/ff.c: 4519:   fp->fptr = nsect = 0;
 26426   011950  0E00               	movlw	0
 26427   011952  6F62               	movwf	f_lseek@nsect& (0+255),b
 26428   011954  0E00               	movlw	0
 26429   011956  6F63               	movwf	(f_lseek@nsect+1)& (0+255),b
 26430   011958  0E00               	movlw	0
 26431   01195A  6F64               	movwf	(f_lseek@nsect+2)& (0+255),b
 26432   01195C  0E00               	movlw	0
 26433   01195E  6F65               	movwf	(f_lseek@nsect+3)& (0+255),b
 26434   011960  EE20 F010          	lfsr	2,16
 26435   011964  5148               	movf	f_lseek@fp& (0+255),w,b
 26436   011966  26D9               	addwf	fsr2l,f,c
 26437   011968  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26438   01196A  22DA               	addwfc	fsr2h,f,c
 26439   01196C  C662  F4DE         	movff	f_lseek@nsect,postinc2
 26440   011970  C663  F4DE         	movff	f_lseek@nsect+1,postinc2
 26441   011974  C664  F4DE         	movff	f_lseek@nsect+2,postinc2
 26442   011978  C665  F4DE         	movff	f_lseek@nsect+3,postinc2
 26443                           
 26444                           ; BSR set to: 6
 26445                           ;fatfs/ff.c: 4520:   if (ofs > 0) {
 26446   01197C  514A               	movf	f_lseek@ofs& (0+255),w,b
 26447   01197E  114B               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 26448   011980  114C               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 26449   011982  114D               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 26450   011984  B4D8               	btfsc	status,2,c
 26451   011986  D214               	goto	l12061
 26452                           
 26453                           ; BSR set to: 6
 26454                           ;fatfs/ff.c: 4521:    bcs = (DWORD)fs->csize * ((UINT)512);
 26455   011988  EE20 F00A          	lfsr	2,10
 26456   01198C  516B               	movf	f_lseek@fs& (0+255),w,b
 26457   01198E  26D9               	addwf	fsr2l,f,c
 26458   011990  516C               	movf	(f_lseek@fs+1)& (0+255),w,b
 26459   011992  22DA               	addwfc	fsr2h,f,c
 26460   011994  C4DE F64E          	movff	postinc2,??_f_lseek
 26461   011998  C4DD F64F          	movff	postdec2,??_f_lseek+1
 26462   01199C  514E               	movf	??_f_lseek& (0+255),w,b
 26463   01199E  6F50               	movwf	(??_f_lseek+2)& (0+255),b
 26464   0119A0  514F               	movf	(??_f_lseek+1)& (0+255),w,b
 26465   0119A2  6F51               	movwf	(??_f_lseek+3)& (0+255),b
 26466   0119A4  6B52               	clrf	(??_f_lseek+4)& (0+255),b
 26467   0119A6  6B53               	clrf	(??_f_lseek+5)& (0+255),b
 26468   0119A8  0E09               	movlw	9
 26469   0119AA                     u15285:
 26470   0119AA  90D8               	bcf	status,0,c
 26471   0119AC  3750               	rlcf	(??_f_lseek+2)& (0+255),f,b
 26472   0119AE  3751               	rlcf	(??_f_lseek+3)& (0+255),f,b
 26473   0119B0  3752               	rlcf	(??_f_lseek+4)& (0+255),f,b
 26474   0119B2  3753               	rlcf	(??_f_lseek+5)& (0+255),f,b
 26475   0119B4  2EE8               	decfsz	wreg,f,c
 26476   0119B6  D7F9               	goto	u15285
 26477   0119B8  C650  F667         	movff	??_f_lseek+2,f_lseek@bcs
 26478   0119BC  C651  F668         	movff	??_f_lseek+3,f_lseek@bcs+1
 26479   0119C0  C652  F669         	movff	??_f_lseek+4,f_lseek@bcs+2
 26480   0119C4  C653  F66A         	movff	??_f_lseek+5,f_lseek@bcs+3
 26481                           
 26482                           ; BSR set to: 6
 26483                           ;fatfs/ff.c: 4522:    if (ifptr > 0 &&
 26484   0119C8  515E               	movf	f_lseek@ifptr& (0+255),w,b
 26485   0119CA  115F               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 26486   0119CC  1160               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 26487   0119CE  1161               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 26488   0119D0  B4D8               	btfsc	status,2,c
 26489   0119D2  D095               	goto	l11973
 26490                           
 26491                           ; BSR set to: 6
 26492   0119D4  0EFF               	movlw	255
 26493   0119D6  254A               	addwf	f_lseek@ofs& (0+255),w,b
 26494   0119D8  6E01               	movwf	___lldiv@dividend^(0+1280),c
 26495   0119DA  0EFF               	movlw	255
 26496   0119DC  214B               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 26497   0119DE  6E02               	movwf	(___lldiv@dividend+1)^(0+1280),c
 26498   0119E0  0EFF               	movlw	255
 26499   0119E2  214C               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 26500   0119E4  6E03               	movwf	(___lldiv@dividend+2)^(0+1280),c
 26501   0119E6  0EFF               	movlw	255
 26502   0119E8  214D               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 26503   0119EA  6E04               	movwf	(___lldiv@dividend+3)^(0+1280),c
 26504   0119EC  C667  F505         	movff	f_lseek@bcs,___lldiv@divisor
 26505   0119F0  C668  F506         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 26506   0119F4  C669  F507         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 26507   0119F8  C66A  F508         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 26508   0119FC  EC93  F0C9         	call	___lldiv	;wreg free
 26509   011A00  C501  F64E         	movff	?___lldiv,??_f_lseek
 26510   011A04  C502  F64F         	movff	?___lldiv+1,??_f_lseek+1
 26511   011A08  C503  F650         	movff	?___lldiv+2,??_f_lseek+2
 26512   011A0C  C504  F651         	movff	?___lldiv+3,??_f_lseek+3
 26513   011A10  0EFF               	movlw	255
 26514   011A12  255E               	addwf	f_lseek@ifptr& (0+255),w,b
 26515   011A14  6E01               	movwf	___lldiv@dividend^(0+1280),c
 26516   011A16  0EFF               	movlw	255
 26517   011A18  215F               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 26518   011A1A  6E02               	movwf	(___lldiv@dividend+1)^(0+1280),c
 26519   011A1C  0EFF               	movlw	255
 26520   011A1E  2160               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 26521   011A20  6E03               	movwf	(___lldiv@dividend+2)^(0+1280),c
 26522   011A22  0EFF               	movlw	255
 26523   011A24  2161               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 26524   011A26  6E04               	movwf	(___lldiv@dividend+3)^(0+1280),c
 26525   011A28  C667  F505         	movff	f_lseek@bcs,___lldiv@divisor
 26526   011A2C  C668  F506         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 26527   011A30  C669  F507         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 26528   011A34  C66A  F508         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 26529   011A38  EC93  F0C9         	call	___lldiv	;wreg free
 26530   011A3C  5001               	movf	?___lldiv^(0+1280),w,c
 26531   011A3E  5D4E               	subwf	??_f_lseek& (0+255),w,b
 26532   011A40  5002               	movf	(?___lldiv+1)^(0+1280),w,c
 26533   011A42  594F               	subwfb	(??_f_lseek+1)& (0+255),w,b
 26534   011A44  5003               	movf	(?___lldiv+2)^(0+1280),w,c
 26535   011A46  5950               	subwfb	(??_f_lseek+2)& (0+255),w,b
 26536   011A48  5004               	movf	(?___lldiv+3)^(0+1280),w,c
 26537   011A4A  5951               	subwfb	(??_f_lseek+3)& (0+255),w,b
 26538   011A4C  A0D8               	btfss	status,0,c
 26539   011A4E  D057               	goto	l11973
 26540                           
 26541                           ; BSR set to: 6
 26542                           ;fatfs/ff.c: 4523:     (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;fatfs/ff.c: 4524:     fp-
      +                          >fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);
 26543   011A50  0EFF               	movlw	255
 26544   011A52  2567               	addwf	f_lseek@bcs& (0+255),w,b
 26545   011A54  6F4E               	movwf	??_f_lseek& (0+255),b
 26546   011A56  0EFF               	movlw	255
 26547   011A58  2168               	addwfc	(f_lseek@bcs+1)& (0+255),w,b
 26548   011A5A  6F4F               	movwf	(??_f_lseek+1)& (0+255),b
 26549   011A5C  0EFF               	movlw	255
 26550   011A5E  2169               	addwfc	(f_lseek@bcs+2)& (0+255),w,b
 26551   011A60  6F50               	movwf	(??_f_lseek+2)& (0+255),b
 26552   011A62  0EFF               	movlw	255
 26553   011A64  216A               	addwfc	(f_lseek@bcs+3)& (0+255),w,b
 26554   011A66  6F51               	movwf	(??_f_lseek+3)& (0+255),b
 26555   011A68  1D4E               	comf	??_f_lseek& (0+255),w,b
 26556   011A6A  6F52               	movwf	(??_f_lseek+4)& (0+255),b
 26557   011A6C  1D4F               	comf	(??_f_lseek+1)& (0+255),w,b
 26558   011A6E  6F53               	movwf	(??_f_lseek+5)& (0+255),b
 26559   011A70  1D50               	comf	(??_f_lseek+2)& (0+255),w,b
 26560   011A72  6F54               	movwf	(??_f_lseek+6)& (0+255),b
 26561   011A74  1D51               	comf	(??_f_lseek+3)& (0+255),w,b
 26562   011A76  6F55               	movwf	(??_f_lseek+7)& (0+255),b
 26563   011A78  0EFF               	movlw	255
 26564   011A7A  255E               	addwf	f_lseek@ifptr& (0+255),w,b
 26565   011A7C  6F56               	movwf	(??_f_lseek+8)& (0+255),b
 26566   011A7E  0EFF               	movlw	255
 26567   011A80  215F               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 26568   011A82  6F57               	movwf	(??_f_lseek+9)& (0+255),b
 26569   011A84  0EFF               	movlw	255
 26570   011A86  2160               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 26571   011A88  6F58               	movwf	(??_f_lseek+10)& (0+255),b
 26572   011A8A  0EFF               	movlw	255
 26573   011A8C  2161               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 26574   011A8E  6F59               	movwf	(??_f_lseek+11)& (0+255),b
 26575   011A90  5152               	movf	(??_f_lseek+4)& (0+255),w,b
 26576   011A92  1556               	andwf	(??_f_lseek+8)& (0+255),w,b
 26577   011A94  6F5A               	movwf	(??_f_lseek+12)& (0+255),b
 26578   011A96  5153               	movf	(??_f_lseek+5)& (0+255),w,b
 26579   011A98  1557               	andwf	(??_f_lseek+9)& (0+255),w,b
 26580   011A9A  6F5B               	movwf	(??_f_lseek+13)& (0+255),b
 26581   011A9C  5154               	movf	(??_f_lseek+6)& (0+255),w,b
 26582   011A9E  1558               	andwf	(??_f_lseek+10)& (0+255),w,b
 26583   011AA0  6F5C               	movwf	(??_f_lseek+14)& (0+255),b
 26584   011AA2  5155               	movf	(??_f_lseek+7)& (0+255),w,b
 26585   011AA4  1559               	andwf	(??_f_lseek+11)& (0+255),w,b
 26586   011AA6  6F5D               	movwf	(??_f_lseek+15)& (0+255),b
 26587   011AA8  EE20 F010          	lfsr	2,16
 26588   011AAC  5148               	movf	f_lseek@fp& (0+255),w,b
 26589   011AAE  26D9               	addwf	fsr2l,f,c
 26590   011AB0  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26591   011AB2  22DA               	addwfc	fsr2h,f,c
 26592   011AB4  C65A  F4DE         	movff	??_f_lseek+12,postinc2
 26593   011AB8  C65B  F4DE         	movff	??_f_lseek+13,postinc2
 26594   011ABC  C65C  F4DE         	movff	??_f_lseek+14,postinc2
 26595   011AC0  C65D  F4DE         	movff	??_f_lseek+15,postinc2
 26596                           
 26597                           ;fatfs/ff.c: 4525:     ofs -= fp->fptr;
 26598   011AC4  EE20 F010          	lfsr	2,16
 26599   011AC8  5148               	movf	f_lseek@fp& (0+255),w,b
 26600   011ACA  26D9               	addwf	fsr2l,f,c
 26601   011ACC  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26602   011ACE  22DA               	addwfc	fsr2h,f,c
 26603   011AD0  50DE               	movf	postinc2,w,c
 26604   011AD2  5F4A               	subwf	f_lseek@ofs& (0+255),f,b
 26605   011AD4  50DE               	movf	postinc2,w,c
 26606   011AD6  5B4B               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 26607   011AD8  50DE               	movf	postinc2,w,c
 26608   011ADA  5B4C               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 26609   011ADC  50DD               	movf	postdec2,w,c
 26610   011ADE  5B4D               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 26611                           
 26612                           ;fatfs/ff.c: 4526:     clst = fp->clust;
 26613   011AE0  EE20 F014          	lfsr	2,20
 26614   011AE4  5148               	movf	f_lseek@fp& (0+255),w,b
 26615   011AE6  26D9               	addwf	fsr2l,f,c
 26616   011AE8  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26617   011AEA  22DA               	addwfc	fsr2h,f,c
 26618   011AEC  C4DE F66D          	movff	postinc2,f_lseek@clst
 26619   011AF0  C4DE F66E          	movff	postinc2,f_lseek@clst+1
 26620   011AF4  C4DE F66F          	movff	postinc2,f_lseek@clst+2
 26621   011AF8  C4DE F670          	movff	postinc2,f_lseek@clst+3
 26622                           
 26623                           ;fatfs/ff.c: 4527:    } else {
 26624   011AFC  D069               	goto	l11997
 26625   011AFE                     l11973:
 26626                           
 26627                           ; BSR set to: 6
 26628                           ;fatfs/ff.c: 4528:     clst = fp->obj.sclust;
 26629   011AFE  EE20 F006          	lfsr	2,6
 26630   011B02  5148               	movf	f_lseek@fp& (0+255),w,b
 26631   011B04  26D9               	addwf	fsr2l,f,c
 26632   011B06  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26633   011B08  22DA               	addwfc	fsr2h,f,c
 26634   011B0A  C4DE F66D          	movff	postinc2,f_lseek@clst
 26635   011B0E  C4DE F66E          	movff	postinc2,f_lseek@clst+1
 26636   011B12  C4DE F66F          	movff	postinc2,f_lseek@clst+2
 26637   011B16  C4DE F670          	movff	postinc2,f_lseek@clst+3
 26638                           
 26639                           ; BSR set to: 6
 26640                           ;fatfs/ff.c: 4530:     if (clst == 0) {
 26641   011B1A  516D               	movf	f_lseek@clst& (0+255),w,b
 26642   011B1C  116E               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 26643   011B1E  116F               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 26644   011B20  1170               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 26645   011B22  A4D8               	btfss	status,2,c
 26646   011B24  D047               	goto	l731
 26647                           
 26648                           ; BSR set to: 6
 26649                           ;fatfs/ff.c: 4531:      clst = create_chain(&fp->obj, 0);
 26650   011B26  C648  F62B         	movff	f_lseek@fp,create_chain@obj
 26651   011B2A  C649  F62C         	movff	f_lseek@fp+1,create_chain@obj+1
 26652   011B2E  0E00               	movlw	0
 26653   011B30  6F2D               	movwf	create_chain@clst& (0+255),b
 26654   011B32  0E00               	movlw	0
 26655   011B34  6F2E               	movwf	(create_chain@clst+1)& (0+255),b
 26656   011B36  0E00               	movlw	0
 26657   011B38  6F2F               	movwf	(create_chain@clst+2)& (0+255),b
 26658   011B3A  0E00               	movlw	0
 26659   011B3C  6F30               	movwf	(create_chain@clst+3)& (0+255),b
 26660   011B3E  EC96  F098         	call	_create_chain	;wreg free
 26661   011B42  C62B  F66D         	movff	?_create_chain,f_lseek@clst
 26662   011B46  C62C  F66E         	movff	?_create_chain+1,f_lseek@clst+1
 26663   011B4A  C62D  F66F         	movff	?_create_chain+2,f_lseek@clst+2
 26664   011B4E  C62E  F670         	movff	?_create_chain+3,f_lseek@clst+3
 26665                           
 26666                           ; BSR set to: 6
 26667                           ;fatfs/ff.c: 4532:      if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR
      +                          ; };
 26668   011B52  056D               	decf	f_lseek@clst& (0+255),w,b
 26669   011B54  116E               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 26670   011B56  116F               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 26671   011B58  1170               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 26672   011B5A  A4D8               	btfss	status,2,c
 26673   011B5C  D00A               	goto	l11987
 26674   011B5E                     u15320:
 26675                           
 26676                           ; BSR set to: 6
 26677   011B5E  EE20 F00F          	lfsr	2,15
 26678   011B62  5148               	movf	f_lseek@fp& (0+255),w,b
 26679   011B64  26D9               	addwf	fsr2l,f,c
 26680   011B66  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26681   011B68  22DA               	addwfc	fsr2h,f,c
 26682   011B6A  0E02               	movlw	2
 26683   011B6C  6EDF               	movwf	indf2,c
 26684                           
 26685                           ; BSR set to: 6
 26686   011B6E  0E02               	movlw	2
 26687   011B70  0012               	return	
 26688   011B72                     l11987:
 26689                           
 26690                           ; BSR set to: 6
 26691                           ;fatfs/ff.c: 4533:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return 
      +                          FR_DISK_ERR; };
 26692   011B72  296D               	incf	f_lseek@clst& (0+255),w,b
 26693   011B74  E111               	bnz	l11995
 26694   011B76  296E               	incf	(f_lseek@clst+1)& (0+255),w,b
 26695   011B78  E10F               	bnz	l11995
 26696   011B7A  296F               	incf	(f_lseek@clst+2)& (0+255),w,b
 26697   011B7C  E10D               	bnz	l11995
 26698   011B7E  2970               	incf	(f_lseek@clst+3)& (0+255),w,b
 26699   011B80  A4D8               	btfss	status,2,c
 26700   011B82  D00A               	goto	l11995
 26701   011B84                     u15330:
 26702                           
 26703                           ; BSR set to: 6
 26704   011B84  EE20 F00F          	lfsr	2,15
 26705   011B88  5148               	movf	f_lseek@fp& (0+255),w,b
 26706   011B8A  26D9               	addwf	fsr2l,f,c
 26707   011B8C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26708   011B8E  22DA               	addwfc	fsr2h,f,c
 26709   011B90  0E01               	movlw	1
 26710   011B92  6EDF               	movwf	indf2,c
 26711                           
 26712                           ; BSR set to: 6
 26713   011B94  0E01               	movlw	1
 26714   011B96  0012               	return	
 26715   011B98                     l11995:
 26716                           
 26717                           ; BSR set to: 6
 26718                           ;fatfs/ff.c: 4534:      fp->obj.sclust = clst;
 26719   011B98  EE20 F006          	lfsr	2,6
 26720   011B9C  5148               	movf	f_lseek@fp& (0+255),w,b
 26721   011B9E  26D9               	addwf	fsr2l,f,c
 26722   011BA0  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26723   011BA2  22DA               	addwfc	fsr2h,f,c
 26724   011BA4  C66D  F4DE         	movff	f_lseek@clst,postinc2
 26725   011BA8  C66E  F4DE         	movff	f_lseek@clst+1,postinc2
 26726   011BAC  C66F  F4DE         	movff	f_lseek@clst+2,postinc2
 26727   011BB0  C670  F4DE         	movff	f_lseek@clst+3,postinc2
 26728   011BB4                     l731:
 26729                           
 26730                           ; BSR set to: 6
 26731                           ;fatfs/ff.c: 4537:     fp->clust = clst;
 26732   011BB4  EE20 F014          	lfsr	2,20
 26733   011BB8  5148               	movf	f_lseek@fp& (0+255),w,b
 26734   011BBA  26D9               	addwf	fsr2l,f,c
 26735   011BBC  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26736   011BBE  22DA               	addwfc	fsr2h,f,c
 26737   011BC0  C66D  F4DE         	movff	f_lseek@clst,postinc2
 26738   011BC4  C66E  F4DE         	movff	f_lseek@clst+1,postinc2
 26739   011BC8  C66F  F4DE         	movff	f_lseek@clst+2,postinc2
 26740   011BCC  C670  F4DE         	movff	f_lseek@clst+3,postinc2
 26741   011BD0                     l11997:
 26742                           
 26743                           ; BSR set to: 6
 26744                           ;fatfs/ff.c: 4539:    if (clst != 0) {
 26745   011BD0  516D               	movf	f_lseek@clst& (0+255),w,b
 26746   011BD2  116E               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 26747   011BD4  116F               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 26748   011BD6  1170               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 26749   011BD8  A4D8               	btfss	status,2,c
 26750   011BDA  D08A               	goto	l12043
 26751   011BDC  D0E9               	goto	l12061
 26752   011BDE                     l12001:
 26753                           
 26754                           ; BSR set to: 6
 26755                           ;fatfs/ff.c: 4541:      ofs -= bcs; fp->fptr += bcs;
 26756   011BDE  5167               	movf	f_lseek@bcs& (0+255),w,b
 26757   011BE0  5F4A               	subwf	f_lseek@ofs& (0+255),f,b
 26758   011BE2  5168               	movf	(f_lseek@bcs+1)& (0+255),w,b
 26759   011BE4  5B4B               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 26760   011BE6  5169               	movf	(f_lseek@bcs+2)& (0+255),w,b
 26761   011BE8  5B4C               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 26762   011BEA  516A               	movf	(f_lseek@bcs+3)& (0+255),w,b
 26763   011BEC  5B4D               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 26764                           
 26765                           ; BSR set to: 6
 26766   011BEE  EE20 F010          	lfsr	2,16
 26767   011BF2  5148               	movf	f_lseek@fp& (0+255),w,b
 26768   011BF4  26D9               	addwf	fsr2l,f,c
 26769   011BF6  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26770   011BF8  22DA               	addwfc	fsr2h,f,c
 26771   011BFA  5167               	movf	f_lseek@bcs& (0+255),w,b
 26772   011BFC  26DE               	addwf	postinc2,f,c
 26773   011BFE  5168               	movf	(f_lseek@bcs+1)& (0+255),w,b
 26774   011C00  22DE               	addwfc	postinc2,f,c
 26775   011C02  5169               	movf	(f_lseek@bcs+2)& (0+255),w,b
 26776   011C04  22DE               	addwfc	postinc2,f,c
 26777   011C06  516A               	movf	(f_lseek@bcs+3)& (0+255),w,b
 26778   011C08  22DE               	addwfc	postinc2,f,c
 26779                           
 26780                           ; BSR set to: 6
 26781                           ;fatfs/ff.c: 4543:      if (fp->flag & 0x02) {
 26782   011C0A  EE20 F00E          	lfsr	2,14
 26783   011C0E  5148               	movf	f_lseek@fp& (0+255),w,b
 26784   011C10  26D9               	addwf	fsr2l,f,c
 26785   011C12  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26786   011C14  22DA               	addwfc	fsr2h,f,c
 26787   011C16  A2DF               	btfss	indf2,1,c
 26788   011C18  D025               	goto	l12021
 26789                           
 26790                           ; BSR set to: 6
 26791                           ;fatfs/ff.c: 4548:       clst = create_chain(&fp->obj, clst);
 26792   011C1A  C648  F62B         	movff	f_lseek@fp,create_chain@obj
 26793   011C1E  C649  F62C         	movff	f_lseek@fp+1,create_chain@obj+1
 26794   011C22  C66D  F62D         	movff	f_lseek@clst,create_chain@clst
 26795   011C26  C66E  F62E         	movff	f_lseek@clst+1,create_chain@clst+1
 26796   011C2A  C66F  F62F         	movff	f_lseek@clst+2,create_chain@clst+2
 26797   011C2E  C670  F630         	movff	f_lseek@clst+3,create_chain@clst+3
 26798   011C32  EC96  F098         	call	_create_chain	;wreg free
 26799   011C36  C62B  F66D         	movff	?_create_chain,f_lseek@clst
 26800   011C3A  C62C  F66E         	movff	?_create_chain+1,f_lseek@clst+1
 26801   011C3E  C62D  F66F         	movff	?_create_chain+2,f_lseek@clst+2
 26802   011C42  C62E  F670         	movff	?_create_chain+3,f_lseek@clst+3
 26803                           
 26804                           ; BSR set to: 6
 26805                           ;fatfs/ff.c: 4549:       if (clst == 0) {
 26806   011C46  516D               	movf	f_lseek@clst& (0+255),w,b
 26807   011C48  116E               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 26808   011C4A  116F               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 26809   011C4C  1170               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 26810   011C4E  A4D8               	btfss	status,2,c
 26811   011C50  D01F               	goto	l12023
 26812                           
 26813                           ; BSR set to: 6
 26814                           ;fatfs/ff.c: 4550:        ofs = 0; break;
 26815   011C52  0E00               	movlw	0
 26816   011C54  6F4A               	movwf	f_lseek@ofs& (0+255),b
 26817   011C56  0E00               	movlw	0
 26818   011C58  6F4B               	movwf	(f_lseek@ofs+1)& (0+255),b
 26819   011C5A  0E00               	movlw	0
 26820   011C5C  6F4C               	movwf	(f_lseek@ofs+2)& (0+255),b
 26821   011C5E  0E00               	movlw	0
 26822   011C60  6F4D               	movwf	(f_lseek@ofs+3)& (0+255),b
 26823   011C62  D050               	goto	u15400
 26824   011C64                     l12021:
 26825                           
 26826                           ; BSR set to: 6
 26827                           ;fatfs/ff.c: 4554:      {;fatfs/ff.c: 4555:       clst = get_fat(&fp->obj, clst);
 26828   011C64  C648  F60A         	movff	f_lseek@fp,get_fat@obj
 26829   011C68  C649  F60B         	movff	f_lseek@fp+1,get_fat@obj+1
 26830   011C6C  C66D  F60C         	movff	f_lseek@clst,get_fat@clst
 26831   011C70  C66E  F60D         	movff	f_lseek@clst+1,get_fat@clst+1
 26832   011C74  C66F  F60E         	movff	f_lseek@clst+2,get_fat@clst+2
 26833   011C78  C670  F60F         	movff	f_lseek@clst+3,get_fat@clst+3
 26834   011C7C  EC68  F0A0         	call	_get_fat	;wreg free
 26835   011C80  C60A  F66D         	movff	?_get_fat,f_lseek@clst
 26836   011C84  C60B  F66E         	movff	?_get_fat+1,f_lseek@clst+1
 26837   011C88  C60C  F66F         	movff	?_get_fat+2,f_lseek@clst+2
 26838   011C8C  C60D  F670         	movff	?_get_fat+3,f_lseek@clst+3
 26839   011C90                     l12023:
 26840                           
 26841                           ;fatfs/ff.c: 4557:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return 
      +                          FR_DISK_ERR; };
 26842   011C90  0106               	movlb	6	; () banked
 26843   011C92  296D               	incf	f_lseek@clst& (0+255),w,b
 26844   011C94  E107               	bnz	l12031
 26845   011C96  296E               	incf	(f_lseek@clst+1)& (0+255),w,b
 26846   011C98  E105               	bnz	l12031
 26847   011C9A  296F               	incf	(f_lseek@clst+2)& (0+255),w,b
 26848   011C9C  E103               	bnz	l12031
 26849   011C9E  2970               	incf	(f_lseek@clst+3)& (0+255),w,b
 26850   011CA0  B4D8               	btfsc	status,2,c
 26851   011CA2  D770               	goto	u15330
 26852   011CA4                     l12031:
 26853                           
 26854                           ; BSR set to: 6
 26855                           ;fatfs/ff.c: 4558:      if (clst <= 1 || clst >= fs->n_fatent) { fp->err = (BYTE)(FR_INT
      +                          _ERR); return FR_INT_ERR; };
 26856   011CA4  5170               	movf	(f_lseek@clst+3)& (0+255),w,b
 26857   011CA6  116F               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 26858   011CA8  116E               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 26859   011CAA  E104               	bnz	u15380
 26860   011CAC  0E02               	movlw	2
 26861   011CAE  5D6D               	subwf	f_lseek@clst& (0+255),w,b
 26862   011CB0  A0D8               	btfss	status,0,c
 26863   011CB2  D755               	goto	u15320
 26864   011CB4                     u15380:
 26865                           
 26866                           ; BSR set to: 6
 26867   011CB4  EE20 F014          	lfsr	2,20
 26868   011CB8  516B               	movf	f_lseek@fs& (0+255),w,b
 26869   011CBA  26D9               	addwf	fsr2l,f,c
 26870   011CBC  516C               	movf	(f_lseek@fs+1)& (0+255),w,b
 26871   011CBE  22DA               	addwfc	fsr2h,f,c
 26872   011CC0  50DE               	movf	postinc2,w,c
 26873   011CC2  5D6D               	subwf	f_lseek@clst& (0+255),w,b
 26874   011CC4  50DE               	movf	postinc2,w,c
 26875   011CC6  596E               	subwfb	(f_lseek@clst+1)& (0+255),w,b
 26876   011CC8  50DE               	movf	postinc2,w,c
 26877   011CCA  596F               	subwfb	(f_lseek@clst+2)& (0+255),w,b
 26878   011CCC  50DE               	movf	postinc2,w,c
 26879   011CCE  5970               	subwfb	(f_lseek@clst+3)& (0+255),w,b
 26880   011CD0  B0D8               	btfsc	status,0,c
 26881   011CD2  D745               	goto	u15320
 26882                           
 26883                           ; BSR set to: 6
 26884                           ;fatfs/ff.c: 4559:      fp->clust = clst;
 26885                           
 26886                           ; BSR set to: 6
 26887   011CD4  EE20 F014          	lfsr	2,20
 26888   011CD8  5148               	movf	f_lseek@fp& (0+255),w,b
 26889   011CDA  26D9               	addwf	fsr2l,f,c
 26890   011CDC  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26891   011CDE  22DA               	addwfc	fsr2h,f,c
 26892   011CE0  C66D  F4DE         	movff	f_lseek@clst,postinc2
 26893   011CE4  C66E  F4DE         	movff	f_lseek@clst+1,postinc2
 26894   011CE8  C66F  F4DE         	movff	f_lseek@clst+2,postinc2
 26895   011CEC  C670  F4DE         	movff	f_lseek@clst+3,postinc2
 26896   011CF0                     l12043:
 26897                           
 26898                           ; BSR set to: 6
 26899                           ;fatfs/ff.c: 4540:     while (ofs > bcs) {
 26900   011CF0  514A               	movf	f_lseek@ofs& (0+255),w,b
 26901   011CF2  5D67               	subwf	f_lseek@bcs& (0+255),w,b
 26902   011CF4  514B               	movf	(f_lseek@ofs+1)& (0+255),w,b
 26903   011CF6  5968               	subwfb	(f_lseek@bcs+1)& (0+255),w,b
 26904   011CF8  514C               	movf	(f_lseek@ofs+2)& (0+255),w,b
 26905   011CFA  5969               	subwfb	(f_lseek@bcs+2)& (0+255),w,b
 26906   011CFC  514D               	movf	(f_lseek@ofs+3)& (0+255),w,b
 26907   011CFE  596A               	subwfb	(f_lseek@bcs+3)& (0+255),w,b
 26908   011D00  A0D8               	btfss	status,0,c
 26909   011D02  D76D               	goto	l12001
 26910   011D04                     u15400:
 26911                           
 26912                           ; BSR set to: 6
 26913                           ;fatfs/ff.c: 4561:     fp->fptr += ofs;
 26914   011D04  EE20 F010          	lfsr	2,16
 26915   011D08  5148               	movf	f_lseek@fp& (0+255),w,b
 26916   011D0A  26D9               	addwf	fsr2l,f,c
 26917   011D0C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26918   011D0E  22DA               	addwfc	fsr2h,f,c
 26919   011D10  514A               	movf	f_lseek@ofs& (0+255),w,b
 26920   011D12  26DE               	addwf	postinc2,f,c
 26921   011D14  514B               	movf	(f_lseek@ofs+1)& (0+255),w,b
 26922   011D16  22DE               	addwfc	postinc2,f,c
 26923   011D18  514C               	movf	(f_lseek@ofs+2)& (0+255),w,b
 26924   011D1A  22DE               	addwfc	postinc2,f,c
 26925   011D1C  514D               	movf	(f_lseek@ofs+3)& (0+255),w,b
 26926   011D1E  22DE               	addwfc	postinc2,f,c
 26927                           
 26928                           ; BSR set to: 6
 26929                           ;fatfs/ff.c: 4562:     if (ofs % ((UINT)512)) {
 26930   011D20  0EFF               	movlw	255
 26931   011D22  154A               	andwf	f_lseek@ofs& (0+255),w,b
 26932   011D24  6F4E               	movwf	??_f_lseek& (0+255),b
 26933   011D26  0E01               	movlw	1
 26934   011D28  154B               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 26935   011D2A  6F4F               	movwf	(??_f_lseek+1)& (0+255),b
 26936   011D2C  0E00               	movlw	0
 26937   011D2E  154C               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 26938   011D30  6F50               	movwf	(??_f_lseek+2)& (0+255),b
 26939   011D32  0E00               	movlw	0
 26940   011D34  154D               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 26941   011D36  6F51               	movwf	(??_f_lseek+3)& (0+255),b
 26942   011D38  514E               	movf	??_f_lseek& (0+255),w,b
 26943   011D3A  114F               	iorwf	(??_f_lseek+1)& (0+255),w,b
 26944   011D3C  1150               	iorwf	(??_f_lseek+2)& (0+255),w,b
 26945   011D3E  1151               	iorwf	(??_f_lseek+3)& (0+255),w,b
 26946   011D40  B4D8               	btfsc	status,2,c
 26947   011D42  D036               	goto	l12061
 26948                           
 26949                           ; BSR set to: 6
 26950                           ;fatfs/ff.c: 4563:      nsect = clst2sect(fs, clst);
 26951   011D44  C66B  F50D         	movff	f_lseek@fs,clst2sect@fs
 26952   011D48  C66C  F50E         	movff	f_lseek@fs+1,clst2sect@fs+1
 26953   011D4C  C66D  F50F         	movff	f_lseek@clst,clst2sect@clst
 26954   011D50  C66E  F510         	movff	f_lseek@clst+1,clst2sect@clst+1
 26955   011D54  C66F  F511         	movff	f_lseek@clst+2,clst2sect@clst+2
 26956   011D58  C670  F512         	movff	f_lseek@clst+3,clst2sect@clst+3
 26957   011D5C  ECC3  F0C3         	call	_clst2sect	;wreg free
 26958   011D60  C50D  F662         	movff	?_clst2sect,f_lseek@nsect
 26959   011D64  C50E  F663         	movff	?_clst2sect+1,f_lseek@nsect+1
 26960   011D68  C50F  F664         	movff	?_clst2sect+2,f_lseek@nsect+2
 26961   011D6C  C510  F665         	movff	?_clst2sect+3,f_lseek@nsect+3
 26962                           
 26963                           ;fatfs/ff.c: 4564:      if (nsect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 26964   011D70  0106               	movlb	6	; () banked
 26965   011D72  5162               	movf	f_lseek@nsect& (0+255),w,b
 26966   011D74  1163               	iorwf	(f_lseek@nsect+1)& (0+255),w,b
 26967   011D76  1164               	iorwf	(f_lseek@nsect+2)& (0+255),w,b
 26968   011D78  1165               	iorwf	(f_lseek@nsect+3)& (0+255),w,b
 26969   011D7A  B4D8               	btfsc	status,2,c
 26970   011D7C  D6F0               	goto	u15320
 26971                           
 26972                           ; BSR set to: 6
 26973                           ;fatfs/ff.c: 4565:      nsect += (DWORD)(ofs / ((UINT)512));
 26974                           
 26975                           ; BSR set to: 6
 26976   011D7E  C64A  F64E         	movff	f_lseek@ofs,??_f_lseek
 26977   011D82  C64B  F64F         	movff	f_lseek@ofs+1,??_f_lseek+1
 26978   011D86  C64C  F650         	movff	f_lseek@ofs+2,??_f_lseek+2
 26979   011D8A  C64D  F651         	movff	f_lseek@ofs+3,??_f_lseek+3
 26980   011D8E  0E0A               	movlw	10
 26981   011D90  D005               	goto	u15430
 26982   011D92                     u15435:
 26983   011D92  90D8               	bcf	status,0,c
 26984   011D94  3351               	rrcf	(??_f_lseek+3)& (0+255),f,b
 26985   011D96  3350               	rrcf	(??_f_lseek+2)& (0+255),f,b
 26986   011D98  334F               	rrcf	(??_f_lseek+1)& (0+255),f,b
 26987   011D9A  334E               	rrcf	??_f_lseek& (0+255),f,b
 26988   011D9C                     u15430:
 26989   011D9C  2EE8               	decfsz	wreg,f,c
 26990   011D9E  D7F9               	goto	u15435
 26991   011DA0  514E               	movf	??_f_lseek& (0+255),w,b
 26992   011DA2  2762               	addwf	f_lseek@nsect& (0+255),f,b
 26993   011DA4  514F               	movf	(??_f_lseek+1)& (0+255),w,b
 26994   011DA6  2363               	addwfc	(f_lseek@nsect+1)& (0+255),f,b
 26995   011DA8  5150               	movf	(??_f_lseek+2)& (0+255),w,b
 26996   011DAA  2364               	addwfc	(f_lseek@nsect+2)& (0+255),f,b
 26997   011DAC  5151               	movf	(??_f_lseek+3)& (0+255),w,b
 26998   011DAE  2365               	addwfc	(f_lseek@nsect+3)& (0+255),f,b
 26999   011DB0                     l12061:
 27000                           
 27001                           ; BSR set to: 6
 27002   011DB0  EE20 F010          	lfsr	2,16
 27003   011DB4  5148               	movf	f_lseek@fp& (0+255),w,b
 27004   011DB6  26D9               	addwf	fsr2l,f,c
 27005   011DB8  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27006   011DBA  22DA               	addwfc	fsr2h,f,c
 27007   011DBC  EE10 F00A          	lfsr	1,10
 27008   011DC0  5148               	movf	f_lseek@fp& (0+255),w,b
 27009   011DC2  26E1               	addwf	fsr1l,f,c
 27010   011DC4  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27011   011DC6  22E2               	addwfc	fsr1h,f,c
 27012   011DC8  50DE               	movf	postinc2,w,c
 27013   011DCA  5CE6               	subwf	postinc1,w,c
 27014   011DCC  50DE               	movf	postinc2,w,c
 27015   011DCE  58E6               	subwfb	postinc1,w,c
 27016   011DD0  50DE               	movf	postinc2,w,c
 27017   011DD2  58E6               	subwfb	postinc1,w,c
 27018   011DD4  50DE               	movf	postinc2,w,c
 27019   011DD6  58E6               	subwfb	postinc1,w,c
 27020   011DD8  B0D8               	btfsc	status,0,c
 27021   011DDA  D01C               	goto	l12067
 27022                           
 27023                           ; BSR set to: 6
 27024                           ;fatfs/ff.c: 4570:    fp->obj.objsize = fp->fptr;
 27025   011DDC  EE20 F010          	lfsr	2,16
 27026   011DE0  5148               	movf	f_lseek@fp& (0+255),w,b
 27027   011DE2  26D9               	addwf	fsr2l,f,c
 27028   011DE4  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27029   011DE6  22DA               	addwfc	fsr2h,f,c
 27030   011DE8  EE10 F00A          	lfsr	1,10
 27031   011DEC  5148               	movf	f_lseek@fp& (0+255),w,b
 27032   011DEE  26E1               	addwf	fsr1l,f,c
 27033   011DF0  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27034   011DF2  22E2               	addwfc	fsr1h,f,c
 27035   011DF4  C4DE F4E6          	movff	postinc2,postinc1
 27036   011DF8  C4DE F4E6          	movff	postinc2,postinc1
 27037   011DFC  C4DE F4E6          	movff	postinc2,postinc1
 27038   011E00  C4DE F4E6          	movff	postinc2,postinc1
 27039                           
 27040                           ; BSR set to: 6
 27041                           ;fatfs/ff.c: 4571:    fp->flag |= 0x40;
 27042   011E04  EE20 F00E          	lfsr	2,14
 27043   011E08  5148               	movf	f_lseek@fp& (0+255),w,b
 27044   011E0A  26D9               	addwf	fsr2l,f,c
 27045   011E0C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27046   011E0E  22DA               	addwfc	fsr2h,f,c
 27047   011E10  0E00               	movlw	0
 27048   011E12  8CDB               	bsf	plusw2,6,c
 27049   011E14                     l12067:
 27050                           
 27051                           ; BSR set to: 6
 27052                           ;fatfs/ff.c: 4573:   if (fp->fptr % ((UINT)512) && nsect != fp->sect) {
 27053   011E14  EE20 F010          	lfsr	2,16
 27054   011E18  5148               	movf	f_lseek@fp& (0+255),w,b
 27055   011E1A  26D9               	addwf	fsr2l,f,c
 27056   011E1C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27057   011E1E  22DA               	addwfc	fsr2h,f,c
 27058   011E20  0EFF               	movlw	255
 27059   011E22  14DE               	andwf	postinc2,w,c
 27060   011E24  6F4E               	movwf	??_f_lseek& (0+255),b
 27061   011E26  0E01               	movlw	1
 27062   011E28  14DE               	andwf	postinc2,w,c
 27063   011E2A  6F4F               	movwf	(??_f_lseek+1)& (0+255),b
 27064   011E2C  0E00               	movlw	0
 27065   011E2E  14DE               	andwf	postinc2,w,c
 27066   011E30  6F50               	movwf	(??_f_lseek+2)& (0+255),b
 27067   011E32  0E00               	movlw	0
 27068   011E34  14DE               	andwf	postinc2,w,c
 27069   011E36  6F51               	movwf	(??_f_lseek+3)& (0+255),b
 27070   011E38  514E               	movf	??_f_lseek& (0+255),w,b
 27071   011E3A  114F               	iorwf	(??_f_lseek+1)& (0+255),w,b
 27072   011E3C  1150               	iorwf	(??_f_lseek+2)& (0+255),w,b
 27073   011E3E  1151               	iorwf	(??_f_lseek+3)& (0+255),w,b
 27074   011E40  B4D8               	btfsc	status,2,c
 27075   011E42  D550               	goto	u15240
 27076                           
 27077                           ; BSR set to: 6
 27078   011E44  EE20 F018          	lfsr	2,24
 27079   011E48  5148               	movf	f_lseek@fp& (0+255),w,b
 27080   011E4A  26D9               	addwf	fsr2l,f,c
 27081   011E4C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27082   011E4E  22DA               	addwfc	fsr2h,f,c
 27083   011E50  5162               	movf	f_lseek@nsect& (0+255),w,b
 27084   011E52  18DE               	xorwf	postinc2,w,c
 27085   011E54  E10A               	bnz	u15460
 27086   011E56  5163               	movf	(f_lseek@nsect+1)& (0+255),w,b
 27087   011E58  18DE               	xorwf	postinc2,w,c
 27088   011E5A  E107               	bnz	u15460
 27089   011E5C  5164               	movf	(f_lseek@nsect+2)& (0+255),w,b
 27090   011E5E  18DE               	xorwf	postinc2,w,c
 27091   011E60  E104               	bnz	u15460
 27092   011E62  5165               	movf	(f_lseek@nsect+3)& (0+255),w,b
 27093   011E64  18DE               	xorwf	postinc2,w,c
 27094   011E66  B4D8               	btfsc	status,2,c
 27095   011E68  D53D               	goto	u15240
 27096   011E6A                     u15460:
 27097                           
 27098                           ; BSR set to: 6
 27099                           ;fatfs/ff.c: 4576:    if (fp->flag & 0x80) {
 27100   011E6A  EE20 F00E          	lfsr	2,14
 27101   011E6E  5148               	movf	f_lseek@fp& (0+255),w,b
 27102   011E70  26D9               	addwf	fsr2l,f,c
 27103   011E72  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27104   011E74  22DA               	addwfc	fsr2h,f,c
 27105   011E76  AEDF               	btfss	indf2,7,c
 27106   011E78  D033               	goto	l12083
 27107                           
 27108                           ; BSR set to: 6
 27109                           ;fatfs/ff.c: 4577:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp->e
      +                          rr = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 27110   011E7A  0E22               	movlw	34
 27111   011E7C  2548               	addwf	f_lseek@fp& (0+255),w,b
 27112   011E7E  0105               	movlb	5	; () banked
 27113   011E80  6FE2               	movwf	disk_write@buff& (0+255),b
 27114   011E82  0E00               	movlw	0
 27115   011E84  0106               	movlb	6	; () banked
 27116   011E86  2149               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 27117   011E88  0105               	movlb	5	; () banked
 27118   011E8A  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 27119   011E8C  0106               	movlb	6	; () banked
 27120   011E8E  EE20 F018          	lfsr	2,24
 27121   011E92  5148               	movf	f_lseek@fp& (0+255),w,b
 27122   011E94  26D9               	addwf	fsr2l,f,c
 27123   011E96  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27124   011E98  22DA               	addwfc	fsr2h,f,c
 27125   011E9A  C4DE F5E4          	movff	postinc2,disk_write@sector
 27126   011E9E  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 27127   011EA2  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 27128   011EA6  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 27129   011EAA  0E00               	movlw	0
 27130   011EAC  0105               	movlb	5	; () banked
 27131   011EAE  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 27132   011EB0  0E01               	movlw	1
 27133   011EB2  6FE8               	movwf	disk_write@count& (0+255),b
 27134   011EB4  0106               	movlb	6	; () banked
 27135   011EB6  EE20 F001          	lfsr	2,1
 27136   011EBA  516B               	movf	f_lseek@fs& (0+255),w,b
 27137   011EBC  26D9               	addwf	fsr2l,f,c
 27138   011EBE  516C               	movf	(f_lseek@fs+1)& (0+255),w,b
 27139   011EC0  22DA               	addwfc	fsr2h,f,c
 27140   011EC2  50DF               	movf	indf2,w,c
 27141   011EC4  EC11  F0C9         	call	_disk_write
 27142   011EC8  0900               	iorlw	0
 27143   011ECA  A4D8               	btfss	status,2,c
 27144   011ECC  D02B               	goto	u15490
 27145                           
 27146                           ; BSR set to: 5
 27147                           ;fatfs/ff.c: 4578:     fp->flag &= (BYTE)~0x80;
 27148                           
 27149                           ; BSR set to: 5
 27150   011ECE  0106               	movlb	6	; () banked
 27151   011ED0  EE20 F00E          	lfsr	2,14
 27152   011ED4  5148               	movf	f_lseek@fp& (0+255),w,b
 27153   011ED6  26D9               	addwf	fsr2l,f,c
 27154   011ED8  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27155   011EDA  22DA               	addwfc	fsr2h,f,c
 27156   011EDC  0E7F               	movlw	127
 27157   011EDE  16DF               	andwf	indf2,f,c
 27158   011EE0                     l12083:
 27159                           
 27160                           ; BSR set to: 6
 27161                           ;fatfs/ff.c: 4581:    if (disk_read(fs->pdrv, fp->buf, nsect, 1) != RES_OK) { fp->err = 
      +                          (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 27162   011EE0  0E22               	movlw	34
 27163   011EE2  2548               	addwf	f_lseek@fp& (0+255),w,b
 27164   011EE4  0105               	movlb	5	; () banked
 27165   011EE6  6FE4               	movwf	disk_read@buff& (0+255),b
 27166   011EE8  0E00               	movlw	0
 27167   011EEA  0106               	movlb	6	; () banked
 27168   011EEC  2149               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 27169   011EEE  0105               	movlb	5	; () banked
 27170   011EF0  6FE5               	movwf	(disk_read@buff+1)& (0+255),b
 27171   011EF2  C662  F5E6         	movff	f_lseek@nsect,disk_read@sector
 27172   011EF6  C663  F5E7         	movff	f_lseek@nsect+1,disk_read@sector+1
 27173   011EFA  C664  F5E8         	movff	f_lseek@nsect+2,disk_read@sector+2
 27174   011EFE  C665  F5E9         	movff	f_lseek@nsect+3,disk_read@sector+3
 27175   011F02  0E00               	movlw	0
 27176   011F04  6FEB               	movwf	(disk_read@count+1)& (0+255),b
 27177   011F06  0E01               	movlw	1
 27178   011F08  6FEA               	movwf	disk_read@count& (0+255),b
 27179   011F0A  0106               	movlb	6	; () banked
 27180   011F0C  EE20 F001          	lfsr	2,1
 27181   011F10  516B               	movf	f_lseek@fs& (0+255),w,b
 27182   011F12  26D9               	addwf	fsr2l,f,c
 27183   011F14  516C               	movf	(f_lseek@fs+1)& (0+255),w,b
 27184   011F16  22DA               	addwfc	fsr2h,f,c
 27185   011F18  50DF               	movf	indf2,w,c
 27186   011F1A  EC52  F0C9         	call	_disk_read
 27187   011F1E  0900               	iorlw	0
 27188   011F20  B4D8               	btfsc	status,2,c
 27189   011F22  D002               	goto	l12091
 27190   011F24                     u15490:
 27191                           
 27192                           ; BSR set to: 5
 27193   011F24  0106               	movlb	6	; () banked
 27194   011F26  D62E               	goto	u15330
 27195   011F28                     l12091:
 27196                           
 27197                           ; BSR set to: 5
 27198                           ;fatfs/ff.c: 4583:    fp->sect = nsect;
 27199   011F28  0106               	movlb	6	; () banked
 27200   011F2A  EE20 F018          	lfsr	2,24
 27201   011F2E  5148               	movf	f_lseek@fp& (0+255),w,b
 27202   011F30  26D9               	addwf	fsr2l,f,c
 27203   011F32  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27204   011F34  22DA               	addwfc	fsr2h,f,c
 27205   011F36  C662  F4DE         	movff	f_lseek@nsect,postinc2
 27206   011F3A  C663  F4DE         	movff	f_lseek@nsect+1,postinc2
 27207   011F3E  C664  F4DE         	movff	f_lseek@nsect+2,postinc2
 27208   011F42  C665  F4DE         	movff	f_lseek@nsect+3,postinc2
 27209   011F46  D4CE               	goto	u15240
 27210   011F48                     __end_of_f_lseek:
 27211                           	callstack 0
 27212                           
 27213 ;; *************** function _validate *****************
 27214 ;; Defined at:
 27215 ;;		line 3613 in file "fatfs/ff.c"
 27216 ;; Parameters:    Size  Location     Type
 27217 ;;  obj             2   70[BANK5 ] PTR struct .
 27218 ;;		 -> files(3276), fsdir(40), 
 27219 ;;  rfs             2   72[BANK5 ] PTR PTR struct .
 27220 ;;		 -> f_truncate@fs(2), f_readdir@fs(2), f_closedir@fs(2), f_lseek@fs(2), 
 27221 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 27222 ;; Auto vars:     Size  Location     Type
 27223 ;;  res             1   80[BANK5 ] enum E275
 27224 ;; Return value:  Size  Location     Type
 27225 ;;                  1    wreg      enum E275
 27226 ;; Registers used:
 27227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27228 ;; Tracked objects:
 27229 ;;		On entry : 3F/5
 27230 ;;		On exit  : 3F/5
 27231 ;;		Unchanged: 0/0
 27232 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27233 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27234 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27235 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27236 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27237 ;;Total ram usage:       11 bytes
 27238 ;; Hardware stack levels used: 1
 27239 ;; Hardware stack levels required when called: 9
 27240 ;; This function calls:
 27241 ;;		_disk_status
 27242 ;; This function is called by:
 27243 ;;		_f_read
 27244 ;;		_f_write
 27245 ;;		_f_sync
 27246 ;;		_f_lseek
 27247 ;;		_f_closedir
 27248 ;;		_f_readdir
 27249 ;; This function uses a non-reentrant model
 27250 ;;
 27251                           
 27252                           	psect	text49
 27253   0186C4                     __ptext49:
 27254                           	callstack 0
 27255   0186C4                     _validate:
 27256                           	callstack 115
 27257                           
 27258                           ; BSR set to: 5
 27259                           ;fatfs/ff.c: 3614:  FFOBJID* obj,;fatfs/ff.c: 3615:  FATFS** rfs;fatfs/ff.c: 3617: {;fat
      +                          fs/ff.c: 3618:  FRESULT res = FR_INVALID_OBJECT;
 27260                           
 27261                           ; BSR set to: 6
 27262                           ;incstack = 0
 27263   0186C4  0E09               	movlw	9
 27264   0186C6  6FB0               	movwf	validate@res& (0+255),b
 27265                           
 27266                           ; BSR set to: 5
 27267                           ;fatfs/ff.c: 3621:  if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {
 27268   0186C8  51A6               	movf	validate@obj& (0+255),w,b
 27269   0186CA  11A7               	iorwf	(validate@obj+1)& (0+255),w,b
 27270   0186CC  B4D8               	btfsc	status,2,c
 27271   0186CE  D041               	goto	l589
 27272                           
 27273                           ; BSR set to: 5
 27274   0186D0  C5A6  F4D9         	movff	validate@obj,fsr2l
 27275   0186D4  C5A7  F4DA         	movff	validate@obj+1,fsr2h
 27276   0186D8  50DE               	movf	postinc2,w,c
 27277   0186DA  10DE               	iorwf	postinc2,w,c
 27278   0186DC  B4D8               	btfsc	status,2,c
 27279   0186DE  D039               	goto	l589
 27280                           
 27281                           ; BSR set to: 5
 27282   0186E0  C5A6  F4D9         	movff	validate@obj,fsr2l
 27283   0186E4  C5A7  F4DA         	movff	validate@obj+1,fsr2h
 27284   0186E8  C4DE F5AA          	movff	postinc2,??_validate
 27285   0186EC  C4DD F5AB          	movff	postdec2,??_validate+1
 27286   0186F0  C5AA  F4D9         	movff	??_validate,fsr2l
 27287   0186F4  C5AB  F4DA         	movff	??_validate+1,fsr2h
 27288   0186F8  50DF               	movf	indf2,w,c
 27289   0186FA  B4D8               	btfsc	status,2,c
 27290   0186FC  D02A               	goto	l589
 27291                           
 27292                           ; BSR set to: 5
 27293   0186FE  C5A6  F4D9         	movff	validate@obj,fsr2l
 27294   018702  C5A7  F4DA         	movff	validate@obj+1,fsr2h
 27295   018706  EE10 F006          	lfsr	1,6
 27296   01870A  50DE               	movf	postinc2,w,c
 27297   01870C  26E1               	addwf	fsr1l,f,c
 27298   01870E  50DD               	movf	postdec2,w,c
 27299   018710  22E2               	addwfc	fsr1h,f,c
 27300   018712  EE20 F002          	lfsr	2,2
 27301   018716  51A6               	movf	validate@obj& (0+255),w,b
 27302   018718  26D9               	addwf	fsr2l,f,c
 27303   01871A  51A7               	movf	(validate@obj+1)& (0+255),w,b
 27304   01871C  22DA               	addwfc	fsr2h,f,c
 27305   01871E  50E6               	movf	postinc1,w,c
 27306   018720  18DE               	xorwf	postinc2,w,c
 27307   018722  E117               	bnz	l589
 27308   018724  50E6               	movf	postinc1,w,c
 27309   018726  18DE               	xorwf	postinc2,w,c
 27310   018728  A4D8               	btfss	status,2,c
 27311   01872A  D013               	goto	l589
 27312                           
 27313                           ; BSR set to: 5
 27314                           ;fatfs/ff.c: 3633:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 27315   01872C  C5A6  F4D9         	movff	validate@obj,fsr2l
 27316   018730  C5A7  F4DA         	movff	validate@obj+1,fsr2h
 27317   018734  EE10 F001          	lfsr	1,1
 27318   018738  50DE               	movf	postinc2,w,c
 27319   01873A  26E1               	addwf	fsr1l,f,c
 27320   01873C  50DD               	movf	postdec2,w,c
 27321   01873E  22E2               	addwfc	fsr1h,f,c
 27322   018740  50E7               	movf	indf1,w,c
 27323   018742  EC79  F0CF         	call	_disk_status
 27324   018746  0105               	movlb	5	; () banked
 27325   018748  6FAA               	movwf	??_validate& (0+255),b
 27326   01874A  B1AA               	btfsc	??_validate& (0+255),0,b
 27327   01874C  D002               	goto	l589
 27328                           
 27329                           ; BSR set to: 5
 27330                           ;fatfs/ff.c: 3634:    res = FR_OK;
 27331   01874E  0E00               	movlw	0
 27332   018750  6FB0               	movwf	validate@res& (0+255),b
 27333   018752                     l589:
 27334                           
 27335                           ; BSR set to: 5
 27336                           ;fatfs/ff.c: 3638:  *rfs = (res == FR_OK) ? obj->fs : 0;
 27337   018752  51B0               	movf	validate@res& (0+255),w,b
 27338   018754  B4D8               	btfsc	status,2,c
 27339   018756  D005               	goto	l11359
 27340                           
 27341                           ; BSR set to: 5
 27342   018758  0E00               	movlw	0
 27343   01875A  6FAE               	movwf	_validate$1075& (0+255),b
 27344   01875C  0E00               	movlw	0
 27345   01875E  6FAF               	movwf	(_validate$1075+1)& (0+255),b
 27346   018760  D008               	goto	l594
 27347   018762                     l11359:
 27348                           
 27349                           ; BSR set to: 5
 27350   018762  C5A6  F4D9         	movff	validate@obj,fsr2l
 27351   018766  C5A7  F4DA         	movff	validate@obj+1,fsr2h
 27352   01876A  C4DE F5AE          	movff	postinc2,_validate$1075
 27353   01876E  C4DD F5AF          	movff	postdec2,_validate$1075+1
 27354   018772                     l594:
 27355                           
 27356                           ; BSR set to: 5
 27357   018772  C5A8  F4D9         	movff	validate@rfs,fsr2l
 27358   018776  C5A9  F4DA         	movff	validate@rfs+1,fsr2h
 27359   01877A  C5AE  F4DE         	movff	_validate$1075,postinc2
 27360   01877E  C5AF  F4DD         	movff	_validate$1075+1,postdec2
 27361                           
 27362                           ; BSR set to: 5
 27363                           ;fatfs/ff.c: 3639:  return res;
 27364   018782  51B0               	movf	validate@res& (0+255),w,b
 27365                           
 27366                           ; BSR set to: 5
 27367   018784  0012               	return		;funcret
 27368   018786                     __end_of_validate:
 27369                           	callstack 0
 27370                           
 27371 ;; *************** function _disk_status *****************
 27372 ;; Defined at:
 27373 ;;		line 98 in file "drivers/diskio.c"
 27374 ;; Parameters:    Size  Location     Type
 27375 ;;  pdrv            1    wreg     unsigned char 
 27376 ;; Auto vars:     Size  Location     Type
 27377 ;;  pdrv            1   94[COMRAM] unsigned char 
 27378 ;; Return value:  Size  Location     Type
 27379 ;;                  1    wreg      unsigned char 
 27380 ;; Registers used:
 27381 ;;		wreg, status,2, status,0
 27382 ;; Tracked objects:
 27383 ;;		On entry : 3C/6
 27384 ;;		On exit  : 0/0
 27385 ;;		Unchanged: 0/0
 27386 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27391 ;;Total ram usage:        1 bytes
 27392 ;; Hardware stack levels used: 1
 27393 ;; Hardware stack levels required when called: 8
 27394 ;; This function calls:
 27395 ;;		_printf
 27396 ;; This function is called by:
 27397 ;;		_mount_volume
 27398 ;;		_validate
 27399 ;; This function uses a non-reentrant model
 27400 ;;
 27401                           
 27402                           	psect	text50
 27403   019EF2                     __ptext50:
 27404                           	callstack 0
 27405   019EF2                     _disk_status:
 27406                           	callstack 115
 27407                           
 27408                           ; BSR set to: 5
 27409                           ;incstack = 0
 27410                           ;disk_status@pdrv stored from wreg
 27411   019EF2  6E5F               	movwf	disk_status@pdrv^(0+1280),c
 27412                           
 27413                           ;drivers/diskio.c: 98: DSTATUS disk_status(BYTE pdrv);drivers/diskio.c: 99: {;drivers/di
      +                          skio.c: 100:     if (pdrv != 0) {
 27414   019EF4  505F               	movf	disk_status@pdrv^(0+1280),w,c
 27415   019EF6  B4D8               	btfsc	status,2,c
 27416   019EF8  D002               	goto	l10531
 27417   019EFA                     u12720:
 27418                           
 27419                           ;drivers/diskio.c: 102:         return 0x02;
 27420   019EFA  0E02               	movlw	2
 27421   019EFC  0012               	return	
 27422   019EFE                     l10531:
 27423                           
 27424                           ;drivers/diskio.c: 104:     if (start_lba == 0xffffffff) {
 27425   019EFE  0107               	movlb	7	; () banked
 27426   019F00  29D4               	incf	_start_lba& (0+255),w,b
 27427   019F02  E107               	bnz	l10539
 27428   019F04  29D5               	incf	(_start_lba+1)& (0+255),w,b
 27429   019F06  E105               	bnz	l10539
 27430   019F08  29D6               	incf	(_start_lba+2)& (0+255),w,b
 27431   019F0A  E103               	bnz	l10539
 27432   019F0C  29D7               	incf	(_start_lba+3)& (0+255),w,b
 27433   019F0E  B4D8               	btfsc	status,2,c
 27434   019F10  D7F4               	goto	u12720
 27435   019F12                     l10539:
 27436                           
 27437                           ; BSR set to: 7
 27438                           ;drivers/diskio.c: 108:     return 0;
 27439   019F12  0E00               	movlw	0
 27440   019F14  0012               	return		;funcret
 27441   019F16                     __end_of_disk_status:
 27442                           	callstack 0
 27443                           
 27444 ;; *************** function _create_chain *****************
 27445 ;; Defined at:
 27446 ;;		line 1524 in file "fatfs/ff.c"
 27447 ;; Parameters:    Size  Location     Type
 27448 ;;  obj             2   43[BANK6 ] PTR struct .
 27449 ;;		 -> files(3276), fsdir(40), f_rename@djn(40), f_rename@djo(40), 
 27450 ;;		 -> f_mkdir@sobj(14), f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), 
 27451 ;;		 -> f_stat@dj(40), f_open@dj(40), 
 27452 ;;  clst            4   45[BANK6 ] unsigned long 
 27453 ;; Auto vars:     Size  Location     Type
 27454 ;;  cs              4   68[BANK6 ] unsigned long 
 27455 ;;  ncl             4   62[BANK6 ] unsigned long 
 27456 ;;  scl             4   58[BANK6 ] unsigned long 
 27457 ;;  fs              2   66[BANK6 ] PTR struct .
 27458 ;;		 -> fs(560), NULL(0), 
 27459 ;;  res             1   57[BANK6 ] enum E275
 27460 ;; Return value:  Size  Location     Type
 27461 ;;                  4   43[BANK6 ] unsigned long 
 27462 ;; Registers used:
 27463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27464 ;; Tracked objects:
 27465 ;;		On entry : 3F/6
 27466 ;;		On exit  : 3F/6
 27467 ;;		Unchanged: 0/0
 27468 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27469 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27470 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27471 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27472 ;;      Totals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27473 ;;Total ram usage:       29 bytes
 27474 ;; Hardware stack levels used: 1
 27475 ;; Hardware stack levels required when called: 14
 27476 ;; This function calls:
 27477 ;;		_get_fat
 27478 ;;		_put_fat
 27479 ;; This function is called by:
 27480 ;;		_dir_next
 27481 ;;		_f_write
 27482 ;;		_f_lseek
 27483 ;; This function uses a non-reentrant model
 27484 ;;
 27485                           
 27486                           	psect	text51
 27487   01312C                     __ptext51:
 27488                           	callstack 0
 27489   01312C                     _create_chain:
 27490                           	callstack 108
 27491                           
 27492                           ; BSR set to: 6
 27493                           ;fatfs/ff.c: 1525:  FFOBJID* obj,;fatfs/ff.c: 1526:  DWORD clst;fatfs/ff.c: 1528: {;fatf
      +                          s/ff.c: 1529:  DWORD cs, ncl, scl;;fatfs/ff.c: 1530:  FRESULT res;;fatfs/ff.c: 1531:  FA
      +                          TFS *fs = obj->fs;
 27494                           
 27495                           ;incstack = 0
 27496   01312C  C62B  F4D9         	movff	create_chain@obj,fsr2l
 27497   013130  C62C  F4DA         	movff	create_chain@obj+1,fsr2h
 27498   013134  C4DE F642          	movff	postinc2,create_chain@fs
 27499   013138  C4DD F643          	movff	postdec2,create_chain@fs+1
 27500                           
 27501                           ; BSR set to: 6
 27502                           ;fatfs/ff.c: 1534:  if (clst == 0) {
 27503   01313C  512D               	movf	create_chain@clst& (0+255),w,b
 27504   01313E  112E               	iorwf	(create_chain@clst+1)& (0+255),w,b
 27505   013140  112F               	iorwf	(create_chain@clst+2)& (0+255),w,b
 27506   013142  1130               	iorwf	(create_chain@clst+3)& (0+255),w,b
 27507   013144  A4D8               	btfss	status,2,c
 27508   013146  D02D               	goto	l9995
 27509                           
 27510                           ; BSR set to: 6
 27511                           ;fatfs/ff.c: 1535:   scl = fs->last_clst;
 27512   013148  EE20 F00C          	lfsr	2,12
 27513   01314C  5142               	movf	create_chain@fs& (0+255),w,b
 27514   01314E  26D9               	addwf	fsr2l,f,c
 27515   013150  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27516   013152  22DA               	addwfc	fsr2h,f,c
 27517   013154  C4DE F63A          	movff	postinc2,create_chain@scl
 27518   013158  C4DE F63B          	movff	postinc2,create_chain@scl+1
 27519   01315C  C4DE F63C          	movff	postinc2,create_chain@scl+2
 27520   013160  C4DE F63D          	movff	postinc2,create_chain@scl+3
 27521                           
 27522                           ; BSR set to: 6
 27523                           ;fatfs/ff.c: 1536:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 27524   013164  513A               	movf	create_chain@scl& (0+255),w,b
 27525   013166  113B               	iorwf	(create_chain@scl+1)& (0+255),w,b
 27526   013168  113C               	iorwf	(create_chain@scl+2)& (0+255),w,b
 27527   01316A  113D               	iorwf	(create_chain@scl+3)& (0+255),w,b
 27528   01316C  B4D8               	btfsc	status,2,c
 27529   01316E  D010               	goto	u11630
 27530                           
 27531                           ; BSR set to: 6
 27532   013170  EE20 F014          	lfsr	2,20
 27533   013174  5142               	movf	create_chain@fs& (0+255),w,b
 27534   013176  26D9               	addwf	fsr2l,f,c
 27535   013178  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27536   01317A  22DA               	addwfc	fsr2h,f,c
 27537   01317C  50DE               	movf	postinc2,w,c
 27538   01317E  5D3A               	subwf	create_chain@scl& (0+255),w,b
 27539   013180  50DE               	movf	postinc2,w,c
 27540   013182  593B               	subwfb	(create_chain@scl+1)& (0+255),w,b
 27541   013184  50DE               	movf	postinc2,w,c
 27542   013186  593C               	subwfb	(create_chain@scl+2)& (0+255),w,b
 27543   013188  50DE               	movf	postinc2,w,c
 27544   01318A  593D               	subwfb	(create_chain@scl+3)& (0+255),w,b
 27545   01318C  A0D8               	btfss	status,0,c
 27546   01318E  D05B               	goto	l10011
 27547   013190                     u11630:
 27548                           
 27549                           ; BSR set to: 6
 27550   013190  0E01               	movlw	1
 27551   013192  6F3A               	movwf	create_chain@scl& (0+255),b
 27552   013194  0E00               	movlw	0
 27553   013196  6F3B               	movwf	(create_chain@scl+1)& (0+255),b
 27554   013198  0E00               	movlw	0
 27555   01319A  6F3C               	movwf	(create_chain@scl+2)& (0+255),b
 27556   01319C  0E00               	movlw	0
 27557   01319E  6F3D               	movwf	(create_chain@scl+3)& (0+255),b
 27558   0131A0  D052               	goto	l10011
 27559   0131A2                     l9995:
 27560                           
 27561                           ; BSR set to: 6
 27562                           ;fatfs/ff.c: 1539:   cs = get_fat(obj, clst);
 27563   0131A2  C62B  F60A         	movff	create_chain@obj,get_fat@obj
 27564   0131A6  C62C  F60B         	movff	create_chain@obj+1,get_fat@obj+1
 27565   0131AA  C62D  F60C         	movff	create_chain@clst,get_fat@clst
 27566   0131AE  C62E  F60D         	movff	create_chain@clst+1,get_fat@clst+1
 27567   0131B2  C62F  F60E         	movff	create_chain@clst+2,get_fat@clst+2
 27568   0131B6  C630  F60F         	movff	create_chain@clst+3,get_fat@clst+3
 27569   0131BA  EC68  F0A0         	call	_get_fat	;wreg free
 27570   0131BE  C60A  F644         	movff	?_get_fat,create_chain@cs
 27571   0131C2  C60B  F645         	movff	?_get_fat+1,create_chain@cs+1
 27572   0131C6  C60C  F646         	movff	?_get_fat+2,create_chain@cs+2
 27573   0131CA  C60D  F647         	movff	?_get_fat+3,create_chain@cs+3
 27574                           
 27575                           ;fatfs/ff.c: 1540:   if (cs < 2) return 1;
 27576   0131CE  0106               	movlb	6	; () banked
 27577   0131D0  5147               	movf	(create_chain@cs+3)& (0+255),w,b
 27578   0131D2  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27579   0131D4  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27580   0131D6  E10D               	bnz	l10003
 27581   0131D8  0E02               	movlw	2
 27582   0131DA  5D44               	subwf	create_chain@cs& (0+255),w,b
 27583   0131DC  B0D8               	btfsc	status,0,c
 27584   0131DE  D009               	goto	l10003
 27585                           
 27586                           ; BSR set to: 6
 27587   0131E0  0E01               	movlw	1
 27588   0131E2  6F2B               	movwf	?_create_chain& (0+255),b
 27589   0131E4  0E00               	movlw	0
 27590   0131E6  6F2C               	movwf	(?_create_chain+1)& (0+255),b
 27591   0131E8  0E00               	movlw	0
 27592   0131EA  6F2D               	movwf	(?_create_chain+2)& (0+255),b
 27593   0131EC  0E00               	movlw	0
 27594   0131EE  6F2E               	movwf	(?_create_chain+3)& (0+255),b
 27595   0131F0  0012               	return	
 27596   0131F2                     l10003:
 27597                           
 27598                           ; BSR set to: 6
 27599                           ;fatfs/ff.c: 1541:   if (cs == 0xFFFFFFFF) return cs;
 27600   0131F2  2944               	incf	create_chain@cs& (0+255),w,b
 27601   0131F4  E110               	bnz	l10007
 27602   0131F6  2945               	incf	(create_chain@cs+1)& (0+255),w,b
 27603   0131F8  E10E               	bnz	l10007
 27604   0131FA  2946               	incf	(create_chain@cs+2)& (0+255),w,b
 27605   0131FC  E10C               	bnz	l10007
 27606   0131FE  2947               	incf	(create_chain@cs+3)& (0+255),w,b
 27607   013200  A4D8               	btfss	status,2,c
 27608   013202  D009               	goto	l10007
 27609   013204                     u11650:
 27610                           
 27611                           ; BSR set to: 6
 27612   013204  C644  F62B         	movff	create_chain@cs,?_create_chain
 27613   013208  C645  F62C         	movff	create_chain@cs+1,?_create_chain+1
 27614   01320C  C646  F62D         	movff	create_chain@cs+2,?_create_chain+2
 27615   013210  C647  F62E         	movff	create_chain@cs+3,?_create_chain+3
 27616   013214  0012               	return	
 27617   013216                     l10007:
 27618                           
 27619                           ; BSR set to: 6
 27620                           ;fatfs/ff.c: 1542:   if (cs < fs->n_fatent) return cs;
 27621   013216  EE20 F014          	lfsr	2,20
 27622   01321A  5142               	movf	create_chain@fs& (0+255),w,b
 27623   01321C  26D9               	addwf	fsr2l,f,c
 27624   01321E  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27625   013220  22DA               	addwfc	fsr2h,f,c
 27626   013222  50DE               	movf	postinc2,w,c
 27627   013224  5D44               	subwf	create_chain@cs& (0+255),w,b
 27628   013226  50DE               	movf	postinc2,w,c
 27629   013228  5945               	subwfb	(create_chain@cs+1)& (0+255),w,b
 27630   01322A  50DE               	movf	postinc2,w,c
 27631   01322C  5946               	subwfb	(create_chain@cs+2)& (0+255),w,b
 27632   01322E  50DE               	movf	postinc2,w,c
 27633   013230  5947               	subwfb	(create_chain@cs+3)& (0+255),w,b
 27634   013232  A0D8               	btfss	status,0,c
 27635   013234  D7E7               	goto	u11650
 27636                           
 27637                           ; BSR set to: 6
 27638                           ;fatfs/ff.c: 1543:   scl = clst;
 27639   013236  C62D  F63A         	movff	create_chain@clst,create_chain@scl
 27640   01323A  C62E  F63B         	movff	create_chain@clst+1,create_chain@scl+1
 27641   01323E  C62F  F63C         	movff	create_chain@clst+2,create_chain@scl+2
 27642   013242  C630  F63D         	movff	create_chain@clst+3,create_chain@scl+3
 27643   013246                     l10011:
 27644                           
 27645                           ; BSR set to: 6
 27646                           ;fatfs/ff.c: 1545:  if (fs->free_clst == 0) return 0;
 27647   013246  EE20 F010          	lfsr	2,16
 27648   01324A  5142               	movf	create_chain@fs& (0+255),w,b
 27649   01324C  26D9               	addwf	fsr2l,f,c
 27650   01324E  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27651   013250  22DA               	addwfc	fsr2h,f,c
 27652   013252  50DE               	movf	postinc2,w,c
 27653   013254  10DE               	iorwf	postinc2,w,c
 27654   013256  10DE               	iorwf	postinc2,w,c
 27655   013258  10DE               	iorwf	postinc2,w,c
 27656   01325A  A4D8               	btfss	status,2,c
 27657   01325C  D009               	goto	l10017
 27658   01325E                     u11670:
 27659                           
 27660                           ; BSR set to: 6
 27661   01325E  0E00               	movlw	0
 27662   013260  6F2B               	movwf	?_create_chain& (0+255),b
 27663   013262  0E00               	movlw	0
 27664   013264  6F2C               	movwf	(?_create_chain+1)& (0+255),b
 27665   013266  0E00               	movlw	0
 27666   013268  6F2D               	movwf	(?_create_chain+2)& (0+255),b
 27667   01326A  0E00               	movlw	0
 27668   01326C  6F2E               	movwf	(?_create_chain+3)& (0+255),b
 27669   01326E  0012               	return	
 27670   013270                     l10017:
 27671                           
 27672                           ; BSR set to: 6
 27673                           ;fatfs/ff.c: 1573:  {;fatfs/ff.c: 1574:   ncl = 0;
 27674   013270  0E00               	movlw	0
 27675   013272  6F3E               	movwf	create_chain@ncl& (0+255),b
 27676   013274  0E00               	movlw	0
 27677   013276  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 27678   013278  0E00               	movlw	0
 27679   01327A  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 27680   01327C  0E00               	movlw	0
 27681   01327E  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 27682                           
 27683                           ; BSR set to: 6
 27684                           ;fatfs/ff.c: 1575:   if (scl == clst) {
 27685   013280  512D               	movf	create_chain@clst& (0+255),w,b
 27686   013282  193A               	xorwf	create_chain@scl& (0+255),w,b
 27687   013284  E109               	bnz	u11681
 27688   013286  512E               	movf	(create_chain@clst+1)& (0+255),w,b
 27689   013288  193B               	xorwf	(create_chain@scl+1)& (0+255),w,b
 27690   01328A  E106               	bnz	u11681
 27691   01328C  512F               	movf	(create_chain@clst+2)& (0+255),w,b
 27692   01328E  193C               	xorwf	(create_chain@scl+2)& (0+255),w,b
 27693   013290  E103               	bnz	u11681
 27694   013292  5130               	movf	(create_chain@clst+3)& (0+255),w,b
 27695   013294  193D               	xorwf	(create_chain@scl+3)& (0+255),w,b
 27696   013296  A4D8               	btfss	status,2,c
 27697   013298                     u11681:
 27698   013298  D086               	goto	l10045
 27699                           
 27700                           ; BSR set to: 6
 27701                           ;fatfs/ff.c: 1576:    ncl = scl + 1;
 27702   01329A  0E01               	movlw	1
 27703   01329C  253A               	addwf	create_chain@scl& (0+255),w,b
 27704   01329E  6F3E               	movwf	create_chain@ncl& (0+255),b
 27705   0132A0  0E00               	movlw	0
 27706   0132A2  213B               	addwfc	(create_chain@scl+1)& (0+255),w,b
 27707   0132A4  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 27708   0132A6  0E00               	movlw	0
 27709   0132A8  213C               	addwfc	(create_chain@scl+2)& (0+255),w,b
 27710   0132AA  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 27711   0132AC  0E00               	movlw	0
 27712   0132AE  213D               	addwfc	(create_chain@scl+3)& (0+255),w,b
 27713   0132B0  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 27714                           
 27715                           ; BSR set to: 6
 27716                           ;fatfs/ff.c: 1577:    if (ncl >= fs->n_fatent) ncl = 2;
 27717   0132B2  EE20 F014          	lfsr	2,20
 27718   0132B6  5142               	movf	create_chain@fs& (0+255),w,b
 27719   0132B8  26D9               	addwf	fsr2l,f,c
 27720   0132BA  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27721   0132BC  22DA               	addwfc	fsr2h,f,c
 27722   0132BE  50DE               	movf	postinc2,w,c
 27723   0132C0  5D3E               	subwf	create_chain@ncl& (0+255),w,b
 27724   0132C2  50DE               	movf	postinc2,w,c
 27725   0132C4  593F               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 27726   0132C6  50DE               	movf	postinc2,w,c
 27727   0132C8  5940               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 27728   0132CA  50DE               	movf	postinc2,w,c
 27729   0132CC  5941               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 27730   0132CE  A0D8               	btfss	status,0,c
 27731   0132D0  D008               	goto	l10027
 27732                           
 27733                           ; BSR set to: 6
 27734   0132D2  0E02               	movlw	2
 27735   0132D4  6F3E               	movwf	create_chain@ncl& (0+255),b
 27736   0132D6  0E00               	movlw	0
 27737   0132D8  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 27738   0132DA  0E00               	movlw	0
 27739   0132DC  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 27740   0132DE  0E00               	movlw	0
 27741   0132E0  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 27742   0132E2                     l10027:
 27743                           
 27744                           ; BSR set to: 6
 27745                           ;fatfs/ff.c: 1578:    cs = get_fat(obj, ncl);
 27746   0132E2  C62B  F60A         	movff	create_chain@obj,get_fat@obj
 27747   0132E6  C62C  F60B         	movff	create_chain@obj+1,get_fat@obj+1
 27748   0132EA  C63E  F60C         	movff	create_chain@ncl,get_fat@clst
 27749   0132EE  C63F  F60D         	movff	create_chain@ncl+1,get_fat@clst+1
 27750   0132F2  C640  F60E         	movff	create_chain@ncl+2,get_fat@clst+2
 27751   0132F6  C641  F60F         	movff	create_chain@ncl+3,get_fat@clst+3
 27752   0132FA  EC68  F0A0         	call	_get_fat	;wreg free
 27753   0132FE  C60A  F644         	movff	?_get_fat,create_chain@cs
 27754   013302  C60B  F645         	movff	?_get_fat+1,create_chain@cs+1
 27755   013306  C60C  F646         	movff	?_get_fat+2,create_chain@cs+2
 27756   01330A  C60D  F647         	movff	?_get_fat+3,create_chain@cs+3
 27757                           
 27758                           ;fatfs/ff.c: 1579:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 27759   01330E  0106               	movlb	6	; () banked
 27760   013310  0544               	decf	create_chain@cs& (0+255),w,b
 27761   013312  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27762   013314  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27763   013316  1147               	iorwf	(create_chain@cs+3)& (0+255),w,b
 27764   013318  B4D8               	btfsc	status,2,c
 27765   01331A  D774               	goto	u11650
 27766                           
 27767                           ; BSR set to: 6
 27768   01331C  2944               	incf	create_chain@cs& (0+255),w,b
 27769   01331E  E107               	bnz	l10033
 27770   013320  2945               	incf	(create_chain@cs+1)& (0+255),w,b
 27771   013322  E105               	bnz	l10033
 27772   013324  2946               	incf	(create_chain@cs+2)& (0+255),w,b
 27773   013326  E103               	bnz	l10033
 27774   013328  2947               	incf	(create_chain@cs+3)& (0+255),w,b
 27775   01332A  B4D8               	btfsc	status,2,c
 27776   01332C  D76B               	goto	u11650
 27777   01332E                     l10033:
 27778                           
 27779                           ; BSR set to: 6
 27780                           ;fatfs/ff.c: 1580:    if (cs != 0) {
 27781   01332E  5144               	movf	create_chain@cs& (0+255),w,b
 27782   013330  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27783   013332  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27784   013334  1147               	iorwf	(create_chain@cs+3)& (0+255),w,b
 27785   013336  B4D8               	btfsc	status,2,c
 27786   013338  D036               	goto	l10045
 27787                           
 27788                           ; BSR set to: 6
 27789                           ;fatfs/ff.c: 1581:     cs = fs->last_clst;
 27790   01333A  EE20 F00C          	lfsr	2,12
 27791   01333E  5142               	movf	create_chain@fs& (0+255),w,b
 27792   013340  26D9               	addwf	fsr2l,f,c
 27793   013342  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27794   013344  22DA               	addwfc	fsr2h,f,c
 27795   013346  C4DE F644          	movff	postinc2,create_chain@cs
 27796   01334A  C4DE F645          	movff	postinc2,create_chain@cs+1
 27797   01334E  C4DE F646          	movff	postinc2,create_chain@cs+2
 27798   013352  C4DE F647          	movff	postinc2,create_chain@cs+3
 27799                           
 27800                           ; BSR set to: 6
 27801                           ;fatfs/ff.c: 1582:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 27802   013356  5147               	movf	(create_chain@cs+3)& (0+255),w,b
 27803   013358  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27804   01335A  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27805   01335C  E104               	bnz	u11730
 27806   01335E  0E02               	movlw	2
 27807   013360  5D44               	subwf	create_chain@cs& (0+255),w,b
 27808   013362  A0D8               	btfss	status,0,c
 27809   013364  D018               	goto	l10043
 27810   013366                     u11730:
 27811                           
 27812                           ; BSR set to: 6
 27813   013366  EE20 F014          	lfsr	2,20
 27814   01336A  5142               	movf	create_chain@fs& (0+255),w,b
 27815   01336C  26D9               	addwf	fsr2l,f,c
 27816   01336E  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27817   013370  22DA               	addwfc	fsr2h,f,c
 27818   013372  50DE               	movf	postinc2,w,c
 27819   013374  5D44               	subwf	create_chain@cs& (0+255),w,b
 27820   013376  50DE               	movf	postinc2,w,c
 27821   013378  5945               	subwfb	(create_chain@cs+1)& (0+255),w,b
 27822   01337A  50DE               	movf	postinc2,w,c
 27823   01337C  5946               	subwfb	(create_chain@cs+2)& (0+255),w,b
 27824   01337E  50DE               	movf	postinc2,w,c
 27825   013380  5947               	subwfb	(create_chain@cs+3)& (0+255),w,b
 27826   013382  B0D8               	btfsc	status,0,c
 27827   013384  D008               	goto	l10043
 27828                           
 27829                           ; BSR set to: 6
 27830   013386  C644  F63A         	movff	create_chain@cs,create_chain@scl
 27831   01338A  C645  F63B         	movff	create_chain@cs+1,create_chain@scl+1
 27832   01338E  C646  F63C         	movff	create_chain@cs+2,create_chain@scl+2
 27833   013392  C647  F63D         	movff	create_chain@cs+3,create_chain@scl+3
 27834   013396                     l10043:
 27835                           
 27836                           ; BSR set to: 6
 27837                           ;fatfs/ff.c: 1583:     ncl = 0;
 27838   013396  0E00               	movlw	0
 27839   013398  6F3E               	movwf	create_chain@ncl& (0+255),b
 27840   01339A  0E00               	movlw	0
 27841   01339C  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 27842   01339E  0E00               	movlw	0
 27843   0133A0  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 27844   0133A2  0E00               	movlw	0
 27845   0133A4  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 27846   0133A6                     l10045:
 27847                           
 27848                           ; BSR set to: 6
 27849                           ;fatfs/ff.c: 1586:   if (ncl == 0) {
 27850   0133A6  513E               	movf	create_chain@ncl& (0+255),w,b
 27851   0133A8  113F               	iorwf	(create_chain@ncl+1)& (0+255),w,b
 27852   0133AA  1140               	iorwf	(create_chain@ncl+2)& (0+255),w,b
 27853   0133AC  1141               	iorwf	(create_chain@ncl+3)& (0+255),w,b
 27854   0133AE  A4D8               	btfss	status,2,c
 27855   0133B0  D068               	goto	l10077
 27856                           
 27857                           ; BSR set to: 6
 27858                           ;fatfs/ff.c: 1587:    ncl = scl;
 27859   0133B2  C63A  F63E         	movff	create_chain@scl,create_chain@ncl
 27860   0133B6  C63B  F63F         	movff	create_chain@scl+1,create_chain@ncl+1
 27861   0133BA  C63C  F640         	movff	create_chain@scl+2,create_chain@ncl+2
 27862   0133BE  C63D  F641         	movff	create_chain@scl+3,create_chain@ncl+3
 27863   0133C2                     l10049:
 27864                           
 27865                           ; BSR set to: 6
 27866                           ;fatfs/ff.c: 1589:     ncl++;
 27867   0133C2  0E01               	movlw	1
 27868   0133C4  273E               	addwf	create_chain@ncl& (0+255),f,b
 27869   0133C6  0E00               	movlw	0
 27870   0133C8  233F               	addwfc	(create_chain@ncl+1)& (0+255),f,b
 27871   0133CA  2340               	addwfc	(create_chain@ncl+2)& (0+255),f,b
 27872   0133CC  2341               	addwfc	(create_chain@ncl+3)& (0+255),f,b
 27873                           
 27874                           ; BSR set to: 6
 27875                           ;fatfs/ff.c: 1590:     if (ncl >= fs->n_fatent) {
 27876   0133CE  EE20 F014          	lfsr	2,20
 27877   0133D2  5142               	movf	create_chain@fs& (0+255),w,b
 27878   0133D4  26D9               	addwf	fsr2l,f,c
 27879   0133D6  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27880   0133D8  22DA               	addwfc	fsr2h,f,c
 27881   0133DA  50DE               	movf	postinc2,w,c
 27882   0133DC  5D3E               	subwf	create_chain@ncl& (0+255),w,b
 27883   0133DE  50DE               	movf	postinc2,w,c
 27884   0133E0  593F               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 27885   0133E2  50DE               	movf	postinc2,w,c
 27886   0133E4  5940               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 27887   0133E6  50DE               	movf	postinc2,w,c
 27888   0133E8  5941               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 27889   0133EA  A0D8               	btfss	status,0,c
 27890   0133EC  D010               	goto	l10061
 27891                           
 27892                           ; BSR set to: 6
 27893                           ;fatfs/ff.c: 1591:      ncl = 2;
 27894   0133EE  0E02               	movlw	2
 27895   0133F0  6F3E               	movwf	create_chain@ncl& (0+255),b
 27896   0133F2  0E00               	movlw	0
 27897   0133F4  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 27898   0133F6  0E00               	movlw	0
 27899   0133F8  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 27900   0133FA  0E00               	movlw	0
 27901   0133FC  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 27902                           
 27903                           ; BSR set to: 6
 27904                           ;fatfs/ff.c: 1592:      if (ncl > scl) return 0;
 27905   0133FE  513D               	movf	(create_chain@scl+3)& (0+255),w,b
 27906   013400  113C               	iorwf	(create_chain@scl+2)& (0+255),w,b
 27907   013402  113B               	iorwf	(create_chain@scl+1)& (0+255),w,b
 27908   013404  E104               	bnz	l10061
 27909   013406  0E02               	movlw	2
 27910   013408  5D3A               	subwf	create_chain@scl& (0+255),w,b
 27911   01340A  A0D8               	btfss	status,0,c
 27912   01340C  D728               	goto	u11670
 27913   01340E                     l10061:
 27914                           
 27915                           ; BSR set to: 6
 27916                           ;fatfs/ff.c: 1594:     cs = get_fat(obj, ncl);
 27917   01340E  C62B  F60A         	movff	create_chain@obj,get_fat@obj
 27918   013412  C62C  F60B         	movff	create_chain@obj+1,get_fat@obj+1
 27919   013416  C63E  F60C         	movff	create_chain@ncl,get_fat@clst
 27920   01341A  C63F  F60D         	movff	create_chain@ncl+1,get_fat@clst+1
 27921   01341E  C640  F60E         	movff	create_chain@ncl+2,get_fat@clst+2
 27922   013422  C641  F60F         	movff	create_chain@ncl+3,get_fat@clst+3
 27923   013426  EC68  F0A0         	call	_get_fat	;wreg free
 27924   01342A  C60A  F644         	movff	?_get_fat,create_chain@cs
 27925   01342E  C60B  F645         	movff	?_get_fat+1,create_chain@cs+1
 27926   013432  C60C  F646         	movff	?_get_fat+2,create_chain@cs+2
 27927   013436  C60D  F647         	movff	?_get_fat+3,create_chain@cs+3
 27928                           
 27929                           ;fatfs/ff.c: 1595:     if (cs == 0) break;
 27930   01343A  0106               	movlb	6	; () banked
 27931   01343C  5144               	movf	create_chain@cs& (0+255),w,b
 27932   01343E  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27933   013440  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27934   013442  1147               	iorwf	(create_chain@cs+3)& (0+255),w,b
 27935   013444  B4D8               	btfsc	status,2,c
 27936   013446  D01D               	goto	l10077
 27937                           
 27938                           ; BSR set to: 6
 27939                           ;fatfs/ff.c: 1596:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 27940   013448  0544               	decf	create_chain@cs& (0+255),w,b
 27941   01344A  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27942   01344C  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27943   01344E  1147               	iorwf	(create_chain@cs+3)& (0+255),w,b
 27944   013450  B4D8               	btfsc	status,2,c
 27945   013452  D6D8               	goto	u11650
 27946                           
 27947                           ; BSR set to: 6
 27948   013454  2944               	incf	create_chain@cs& (0+255),w,b
 27949   013456  E107               	bnz	l10071
 27950   013458  2945               	incf	(create_chain@cs+1)& (0+255),w,b
 27951   01345A  E105               	bnz	l10071
 27952   01345C  2946               	incf	(create_chain@cs+2)& (0+255),w,b
 27953   01345E  E103               	bnz	l10071
 27954   013460  2947               	incf	(create_chain@cs+3)& (0+255),w,b
 27955   013462  B4D8               	btfsc	status,2,c
 27956   013464  D6CF               	goto	u11650
 27957   013466                     l10071:
 27958                           
 27959                           ; BSR set to: 6
 27960                           ;fatfs/ff.c: 1597:     if (ncl == scl) return 0;
 27961   013466  513A               	movf	create_chain@scl& (0+255),w,b
 27962   013468  193E               	xorwf	create_chain@ncl& (0+255),w,b
 27963   01346A  E1AB               	bnz	l10049
 27964   01346C  513B               	movf	(create_chain@scl+1)& (0+255),w,b
 27965   01346E  193F               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 27966   013470  E1A8               	bnz	l10049
 27967   013472  513C               	movf	(create_chain@scl+2)& (0+255),w,b
 27968   013474  1940               	xorwf	(create_chain@ncl+2)& (0+255),w,b
 27969   013476  E1A5               	bnz	l10049
 27970   013478  513D               	movf	(create_chain@scl+3)& (0+255),w,b
 27971   01347A  1941               	xorwf	(create_chain@ncl+3)& (0+255),w,b
 27972   01347C  B4D8               	btfsc	status,2,c
 27973   01347E  D6EF               	goto	u11670
 27974   013480  D7A0               	goto	l10049
 27975   013482                     l10077:
 27976                           
 27977                           ; BSR set to: 6
 27978                           ;fatfs/ff.c: 1600:   res = put_fat(fs, ncl, 0xFFFFFFFF);
 27979   013482  C642  F60A         	movff	create_chain@fs,put_fat@fs
 27980   013486  C643  F60B         	movff	create_chain@fs+1,put_fat@fs+1
 27981   01348A  C63E  F60C         	movff	create_chain@ncl,put_fat@clst
 27982   01348E  C63F  F60D         	movff	create_chain@ncl+1,put_fat@clst+1
 27983   013492  C640  F60E         	movff	create_chain@ncl+2,put_fat@clst+2
 27984   013496  C641  F60F         	movff	create_chain@ncl+3,put_fat@clst+3
 27985   01349A  0EFF               	movlw	255
 27986   01349C  6F10               	movwf	put_fat@val& (0+255),b
 27987   01349E  0EFF               	movlw	255
 27988   0134A0  6F11               	movwf	(put_fat@val+1)& (0+255),b
 27989   0134A2  0EFF               	movlw	255
 27990   0134A4  6F12               	movwf	(put_fat@val+2)& (0+255),b
 27991   0134A6  0EFF               	movlw	255
 27992   0134A8  6F13               	movwf	(put_fat@val+3)& (0+255),b
 27993   0134AA  ECD8  F09A         	call	_put_fat	;wreg free
 27994   0134AE  6F39               	movwf	create_chain@res& (0+255),b
 27995                           
 27996                           ; BSR set to: 6
 27997                           ;fatfs/ff.c: 1601:   if (res == FR_OK && clst != 0) {
 27998   0134B0  5139               	movf	create_chain@res& (0+255),w,b
 27999   0134B2  A4D8               	btfss	status,2,c
 28000   0134B4  D01D               	goto	l10085
 28001                           
 28002                           ; BSR set to: 6
 28003   0134B6  512D               	movf	create_chain@clst& (0+255),w,b
 28004   0134B8  112E               	iorwf	(create_chain@clst+1)& (0+255),w,b
 28005   0134BA  112F               	iorwf	(create_chain@clst+2)& (0+255),w,b
 28006   0134BC  1130               	iorwf	(create_chain@clst+3)& (0+255),w,b
 28007   0134BE  B4D8               	btfsc	status,2,c
 28008   0134C0  D017               	goto	l10085
 28009                           
 28010                           ; BSR set to: 6
 28011                           ;fatfs/ff.c: 1602:    res = put_fat(fs, clst, ncl);
 28012   0134C2  C642  F60A         	movff	create_chain@fs,put_fat@fs
 28013   0134C6  C643  F60B         	movff	create_chain@fs+1,put_fat@fs+1
 28014   0134CA  C62D  F60C         	movff	create_chain@clst,put_fat@clst
 28015   0134CE  C62E  F60D         	movff	create_chain@clst+1,put_fat@clst+1
 28016   0134D2  C62F  F60E         	movff	create_chain@clst+2,put_fat@clst+2
 28017   0134D6  C630  F60F         	movff	create_chain@clst+3,put_fat@clst+3
 28018   0134DA  C63E  F610         	movff	create_chain@ncl,put_fat@val
 28019   0134DE  C63F  F611         	movff	create_chain@ncl+1,put_fat@val+1
 28020   0134E2  C640  F612         	movff	create_chain@ncl+2,put_fat@val+2
 28021   0134E6  C641  F613         	movff	create_chain@ncl+3,put_fat@val+3
 28022   0134EA  ECD8  F09A         	call	_put_fat	;wreg free
 28023   0134EE  6F39               	movwf	create_chain@res& (0+255),b
 28024   0134F0                     l10085:
 28025                           
 28026                           ; BSR set to: 6
 28027                           ;fatfs/ff.c: 1604:  };fatfs/ff.c: 1606:  if (res == FR_OK) {
 28028   0134F0  5139               	movf	create_chain@res& (0+255),w,b
 28029   0134F2  A4D8               	btfss	status,2,c
 28030   0134F4  D044               	goto	l10093
 28031                           
 28032                           ; BSR set to: 6
 28033                           ;fatfs/ff.c: 1607:   fs->last_clst = ncl;
 28034   0134F6  EE20 F00C          	lfsr	2,12
 28035   0134FA  5142               	movf	create_chain@fs& (0+255),w,b
 28036   0134FC  26D9               	addwf	fsr2l,f,c
 28037   0134FE  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 28038   013500  22DA               	addwfc	fsr2h,f,c
 28039   013502  C63E  F4DE         	movff	create_chain@ncl,postinc2
 28040   013506  C63F  F4DE         	movff	create_chain@ncl+1,postinc2
 28041   01350A  C640  F4DE         	movff	create_chain@ncl+2,postinc2
 28042   01350E  C641  F4DE         	movff	create_chain@ncl+3,postinc2
 28043                           
 28044                           ; BSR set to: 6
 28045                           ;fatfs/ff.c: 1608:   if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 28046   013512  EE20 F010          	lfsr	2,16
 28047   013516  5142               	movf	create_chain@fs& (0+255),w,b
 28048   013518  26D9               	addwf	fsr2l,f,c
 28049   01351A  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 28050   01351C  22DA               	addwfc	fsr2h,f,c
 28051   01351E  EE10 F014          	lfsr	1,20
 28052   013522  5142               	movf	create_chain@fs& (0+255),w,b
 28053   013524  26E1               	addwf	fsr1l,f,c
 28054   013526  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 28055   013528  22E2               	addwfc	fsr1h,f,c
 28056   01352A  0EFE               	movlw	254
 28057   01352C  24E6               	addwf	postinc1,w,c
 28058   01352E  6F35               	movwf	(??_create_chain+4)& (0+255),b
 28059   013530  0EFF               	movlw	255
 28060   013532  20E6               	addwfc	postinc1,w,c
 28061   013534  6F36               	movwf	(??_create_chain+5)& (0+255),b
 28062   013536  0EFF               	movlw	255
 28063   013538  20E6               	addwfc	postinc1,w,c
 28064   01353A  6F37               	movwf	(??_create_chain+6)& (0+255),b
 28065   01353C  0EFF               	movlw	255
 28066   01353E  20E6               	addwfc	postinc1,w,c
 28067   013540  6F38               	movwf	(??_create_chain+7)& (0+255),b
 28068   013542  50DE               	movf	postinc2,w,c
 28069   013544  5D35               	subwf	(??_create_chain+4)& (0+255),w,b
 28070   013546  50DE               	movf	postinc2,w,c
 28071   013548  5936               	subwfb	(??_create_chain+5)& (0+255),w,b
 28072   01354A  50DE               	movf	postinc2,w,c
 28073   01354C  5937               	subwfb	(??_create_chain+6)& (0+255),w,b
 28074   01354E  50DE               	movf	postinc2,w,c
 28075   013550  5938               	subwfb	(??_create_chain+7)& (0+255),w,b
 28076   013552  A0D8               	btfss	status,0,c
 28077   013554  D00B               	goto	l320
 28078                           
 28079                           ; BSR set to: 6
 28080   013556  EE20 F010          	lfsr	2,16
 28081   01355A  5142               	movf	create_chain@fs& (0+255),w,b
 28082   01355C  26D9               	addwf	fsr2l,f,c
 28083   01355E  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 28084   013560  22DA               	addwfc	fsr2h,f,c
 28085   013562  06DE               	decf	postinc2,f,c
 28086   013564  0E00               	movlw	0
 28087   013566  5ADE               	subwfb	postinc2,f,c
 28088   013568  5ADE               	subwfb	postinc2,f,c
 28089   01356A  5ADE               	subwfb	postinc2,f,c
 28090   01356C                     l320:
 28091                           
 28092                           ; BSR set to: 6
 28093                           ;fatfs/ff.c: 1609:   fs->fsi_flag |= 1;
 28094   01356C  EE20 F005          	lfsr	2,5
 28095   013570  5142               	movf	create_chain@fs& (0+255),w,b
 28096   013572  26D9               	addwf	fsr2l,f,c
 28097   013574  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 28098   013576  22DA               	addwfc	fsr2h,f,c
 28099   013578  0E00               	movlw	0
 28100   01357A  80DB               	bsf	plusw2,0,c
 28101                           
 28102                           ;fatfs/ff.c: 1610:  } else {
 28103   01357C  D010               	goto	l321
 28104   01357E                     l10093:
 28105                           
 28106                           ; BSR set to: 6
 28107                           ;fatfs/ff.c: 1611:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 28108   01357E  0539               	decf	create_chain@res& (0+255),w,b
 28109   013580  B4D8               	btfsc	status,2,c
 28110   013582  D009               	goto	l323
 28111                           
 28112                           ; BSR set to: 6
 28113   013584  0E01               	movlw	1
 28114   013586  6F3E               	movwf	create_chain@ncl& (0+255),b
 28115   013588  0E00               	movlw	0
 28116   01358A  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 28117   01358C  0E00               	movlw	0
 28118   01358E  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 28119   013590  0E00               	movlw	0
 28120   013592  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 28121   013594  D004               	goto	l321
 28122   013596                     l323:
 28123                           
 28124                           ; BSR set to: 6
 28125   013596  693E               	setf	create_chain@ncl& (0+255),b
 28126   013598  693F               	setf	(create_chain@ncl+1)& (0+255),b
 28127   01359A  6940               	setf	(create_chain@ncl+2)& (0+255),b
 28128   01359C  6941               	setf	(create_chain@ncl+3)& (0+255),b
 28129   01359E                     l321:
 28130                           
 28131                           ; BSR set to: 6
 28132                           ;fatfs/ff.c: 1614:  return ncl;
 28133   01359E  C63E  F62B         	movff	create_chain@ncl,?_create_chain
 28134   0135A2  C63F  F62C         	movff	create_chain@ncl+1,?_create_chain+1
 28135   0135A6  C640  F62D         	movff	create_chain@ncl+2,?_create_chain+2
 28136   0135AA  C641  F62E         	movff	create_chain@ncl+3,?_create_chain+3
 28137                           
 28138                           ; BSR set to: 6
 28139   0135AE  0012               	return		;funcret
 28140   0135B0                     __end_of_create_chain:
 28141                           	callstack 0
 28142                           
 28143 ;; *************** function _put_fat *****************
 28144 ;; Defined at:
 28145 ;;		line 1239 in file "fatfs/ff.c"
 28146 ;; Parameters:    Size  Location     Type
 28147 ;;  fs              2   10[BANK6 ] PTR struct .
 28148 ;;		 -> fs(560), NULL(0), 
 28149 ;;  clst            4   12[BANK6 ] unsigned long 
 28150 ;;  val             4   16[BANK6 ] unsigned long 
 28151 ;; Auto vars:     Size  Location     Type
 28152 ;;  bc              2   40[BANK6 ] unsigned int 
 28153 ;;  p               2   38[BANK6 ] PTR unsigned char 
 28154 ;;		 -> fs$win(512), fs(560), NULL(0), 
 28155 ;;  res             1   42[BANK6 ] enum E275
 28156 ;; Return value:  Size  Location     Type
 28157 ;;                  1    wreg      enum E275
 28158 ;; Registers used:
 28159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28160 ;; Tracked objects:
 28161 ;;		On entry : 3F/6
 28162 ;;		On exit  : 3F/6
 28163 ;;		Unchanged: 0/0
 28164 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28165 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28166 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28167 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28168 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28169 ;;Total ram usage:       33 bytes
 28170 ;; Hardware stack levels used: 1
 28171 ;; Hardware stack levels required when called: 13
 28172 ;; This function calls:
 28173 ;;		_ld_dword
 28174 ;;		_move_window
 28175 ;;		_st_dword
 28176 ;;		_st_word
 28177 ;; This function is called by:
 28178 ;;		_remove_chain
 28179 ;;		_create_chain
 28180 ;; This function uses a non-reentrant model
 28181 ;;
 28182                           
 28183                           	psect	text52
 28184   0135B0                     __ptext52:
 28185                           	callstack 0
 28186   0135B0                     _put_fat:
 28187                           	callstack 108
 28188                           
 28189                           ; BSR set to: 6
 28190                           ;fatfs/ff.c: 1240:  FATFS* fs,;fatfs/ff.c: 1241:  DWORD clst,;fatfs/ff.c: 1242:  DWORD v
      +                          al;fatfs/ff.c: 1244: {;fatfs/ff.c: 1245:  UINT bc;;fatfs/ff.c: 1246:  BYTE *p;;fatfs/ff.
      +                          c: 1247:  FRESULT res = FR_INT_ERR;
 28191                           
 28192                           ; BSR set to: 6
 28193                           ;incstack = 0
 28194   0135B0  0E02               	movlw	2
 28195   0135B2  6F2A               	movwf	put_fat@res& (0+255),b
 28196                           
 28197                           ; BSR set to: 6
 28198                           ;fatfs/ff.c: 1250:  if (clst >= 2 && clst < fs->n_fatent) {
 28199   0135B4  510F               	movf	(put_fat@clst+3)& (0+255),w,b
 28200   0135B6  110E               	iorwf	(put_fat@clst+2)& (0+255),w,b
 28201   0135B8  110D               	iorwf	(put_fat@clst+1)& (0+255),w,b
 28202   0135BA  E104               	bnz	u11490
 28203   0135BC  0E02               	movlw	2
 28204   0135BE  5D0C               	subwf	put_fat@clst& (0+255),w,b
 28205   0135C0  A0D8               	btfss	status,0,c
 28206   0135C2  D1F4               	goto	l9979
 28207   0135C4                     u11490:
 28208                           
 28209                           ; BSR set to: 6
 28210   0135C4  EE20 F014          	lfsr	2,20
 28211   0135C8  510A               	movf	put_fat@fs& (0+255),w,b
 28212   0135CA  26D9               	addwf	fsr2l,f,c
 28213   0135CC  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28214   0135CE  22DA               	addwfc	fsr2h,f,c
 28215   0135D0  50DE               	movf	postinc2,w,c
 28216   0135D2  5D0C               	subwf	put_fat@clst& (0+255),w,b
 28217   0135D4  50DE               	movf	postinc2,w,c
 28218   0135D6  590D               	subwfb	(put_fat@clst+1)& (0+255),w,b
 28219   0135D8  50DE               	movf	postinc2,w,c
 28220   0135DA  590E               	subwfb	(put_fat@clst+2)& (0+255),w,b
 28221   0135DC  50DE               	movf	postinc2,w,c
 28222   0135DE  590F               	subwfb	(put_fat@clst+3)& (0+255),w,b
 28223   0135E0  A0D8               	btfss	status,0,c
 28224   0135E2  D1D6               	goto	l9977
 28225   0135E4  D1E3               	goto	l9979
 28226   0135E6                     l249:
 28227                           
 28228                           ; BSR set to: 6
 28229                           ;fatfs/ff.c: 1253:    bc = (UINT)clst; bc += bc / 2;
 28230   0135E6  C60C  F628         	movff	put_fat@clst,put_fat@bc
 28231   0135EA  C60D  F629         	movff	put_fat@clst+1,put_fat@bc+1
 28232                           
 28233                           ; BSR set to: 6
 28234   0135EE  90D8               	bcf	status,0,c
 28235   0135F0  3129               	rrcf	(put_fat@bc+1)& (0+255),w,b
 28236   0135F2  6F15               	movwf	(??_put_fat+1)& (0+255),b
 28237   0135F4  3128               	rrcf	put_fat@bc& (0+255),w,b
 28238   0135F6  6F14               	movwf	??_put_fat& (0+255),b
 28239   0135F8  5114               	movf	??_put_fat& (0+255),w,b
 28240   0135FA  2728               	addwf	put_fat@bc& (0+255),f,b
 28241   0135FC  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28242   0135FE  2329               	addwfc	(put_fat@bc+1)& (0+255),f,b
 28243                           
 28244                           ; BSR set to: 6
 28245                           ;fatfs/ff.c: 1254:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 28246   013600  C60A  F600         	movff	put_fat@fs,move_window@fs
 28247   013604  C60B  F601         	movff	put_fat@fs+1,move_window@fs+1
 28248   013608  EE20 F020          	lfsr	2,32
 28249   01360C  510A               	movf	put_fat@fs& (0+255),w,b
 28250   01360E  26D9               	addwf	fsr2l,f,c
 28251   013610  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28252   013612  22DA               	addwfc	fsr2h,f,c
 28253   013614  C4DE F614          	movff	postinc2,??_put_fat
 28254   013618  C4DE F615          	movff	postinc2,??_put_fat+1
 28255   01361C  C4DE F616          	movff	postinc2,??_put_fat+2
 28256   013620  C4DE F617          	movff	postinc2,??_put_fat+3
 28257   013624  C628  F618         	movff	put_fat@bc,??_put_fat+4
 28258   013628  C629  F619         	movff	put_fat@bc+1,??_put_fat+5
 28259   01362C  0E09               	movlw	9
 28260   01362E  6F1A               	movwf	(??_put_fat+6)& (0+255),b
 28261   013630                     u11515:
 28262   013630  90D8               	bcf	status,0,c
 28263   013632  3319               	rrcf	(??_put_fat+5)& (0+255),f,b
 28264   013634  3318               	rrcf	(??_put_fat+4)& (0+255),f,b
 28265   013636  2F1A               	decfsz	(??_put_fat+6)& (0+255),f,b
 28266   013638  D7FB               	goto	u11515
 28267   01363A  5118               	movf	(??_put_fat+4)& (0+255),w,b
 28268   01363C  2514               	addwf	??_put_fat& (0+255),w,b
 28269   01363E  6F02               	movwf	move_window@sect& (0+255),b
 28270   013640  5119               	movf	(??_put_fat+5)& (0+255),w,b
 28271   013642  2115               	addwfc	(??_put_fat+1)& (0+255),w,b
 28272   013644  6F03               	movwf	(move_window@sect+1)& (0+255),b
 28273   013646  0E00               	movlw	0
 28274   013648  2116               	addwfc	(??_put_fat+2)& (0+255),w,b
 28275   01364A  6F04               	movwf	(move_window@sect+2)& (0+255),b
 28276   01364C  0E00               	movlw	0
 28277   01364E  2117               	addwfc	(??_put_fat+3)& (0+255),w,b
 28278   013650  6F05               	movwf	(move_window@sect+3)& (0+255),b
 28279   013652  EC23  F0C4         	call	_move_window	;wreg free
 28280   013656  0106               	movlb	6	; () banked
 28281   013658  6F2A               	movwf	put_fat@res& (0+255),b
 28282                           
 28283                           ; BSR set to: 6
 28284                           ;fatfs/ff.c: 1255:    if (res != FR_OK) break;
 28285   01365A  512A               	movf	put_fat@res& (0+255),w,b
 28286   01365C  A4D8               	btfss	status,2,c
 28287   01365E  D1A6               	goto	l9979
 28288                           
 28289                           ; BSR set to: 6
 28290                           ;fatfs/ff.c: 1256:    p = fs->win + bc++ % ((UINT)512);
 28291   013660  0EFF               	movlw	255
 28292   013662  1528               	andwf	put_fat@bc& (0+255),w,b
 28293   013664  6F14               	movwf	??_put_fat& (0+255),b
 28294   013666  0E01               	movlw	1
 28295   013668  1529               	andwf	(put_fat@bc+1)& (0+255),w,b
 28296   01366A  6F15               	movwf	(??_put_fat+1)& (0+255),b
 28297   01366C  5114               	movf	??_put_fat& (0+255),w,b
 28298   01366E  250A               	addwf	put_fat@fs& (0+255),w,b
 28299   013670  6F16               	movwf	(??_put_fat+2)& (0+255),b
 28300   013672  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28301   013674  210B               	addwfc	(put_fat@fs+1)& (0+255),w,b
 28302   013676  6F17               	movwf	(??_put_fat+3)& (0+255),b
 28303   013678  0E30               	movlw	48
 28304   01367A  2516               	addwf	(??_put_fat+2)& (0+255),w,b
 28305   01367C  6F26               	movwf	put_fat@p& (0+255),b
 28306   01367E  0E00               	movlw	0
 28307   013680  2117               	addwfc	(??_put_fat+3)& (0+255),w,b
 28308   013682  6F27               	movwf	(put_fat@p+1)& (0+255),b
 28309                           
 28310                           ; BSR set to: 6
 28311   013684  4B28               	infsnz	put_fat@bc& (0+255),f,b
 28312   013686  2B29               	incf	(put_fat@bc+1)& (0+255),f,b
 28313                           
 28314                           ; BSR set to: 6
 28315                           ;fatfs/ff.c: 1257:    *p = (clst & 1) ? ((*p & 0x0F) | (BYTE)((BYTE)val << 4)) : (BYTE)v
      +                          al;
 28316   013688  B10C               	btfsc	put_fat@clst& (0+255),0,b
 28317   01368A  D003               	goto	l9931
 28318                           
 28319                           ; BSR set to: 6
 28320   01368C  C610  F622         	movff	put_fat@val,_put_fat$435
 28321   013690  D00F               	goto	L11
 28322   013692                     l9931:
 28323                           
 28324                           ; BSR set to: 6
 28325   013692  C610  F614         	movff	put_fat@val,??_put_fat
 28326   013696  3B14               	swapf	??_put_fat& (0+255),f,b
 28327   013698  0EF0               	movlw	240
 28328   01369A  1714               	andwf	??_put_fat& (0+255),f,b
 28329   01369C  C626  F4D9         	movff	put_fat@p,fsr2l
 28330   0136A0  C627  F4DA         	movff	put_fat@p+1,fsr2h
 28331   0136A4  50DF               	movf	indf2,w,c
 28332   0136A6  0B0F               	andlw	15
 28333   0136A8  1114               	iorwf	??_put_fat& (0+255),w,b
 28334   0136AA  6F15               	movwf	(??_put_fat+1)& (0+255),b
 28335   0136AC  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28336   0136AE  6F22               	movwf	_put_fat$435& (0+255),b
 28337   0136B0                     L11:
 28338   0136B0  6B23               	clrf	(_put_fat$435+1)& (0+255),b
 28339                           
 28340                           ; BSR set to: 6
 28341   0136B2  C626  F4D9         	movff	put_fat@p,fsr2l
 28342   0136B6  C627  F4DA         	movff	put_fat@p+1,fsr2h
 28343   0136BA  C622  F4DF         	movff	_put_fat$435,indf2
 28344                           
 28345                           ; BSR set to: 6
 28346                           ;fatfs/ff.c: 1258:    fs->wflag = 1;
 28347   0136BE  EE20 F004          	lfsr	2,4
 28348   0136C2  510A               	movf	put_fat@fs& (0+255),w,b
 28349   0136C4  26D9               	addwf	fsr2l,f,c
 28350   0136C6  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28351   0136C8  22DA               	addwfc	fsr2h,f,c
 28352   0136CA  0E01               	movlw	1
 28353   0136CC  6EDF               	movwf	indf2,c
 28354                           
 28355                           ; BSR set to: 6
 28356                           ;fatfs/ff.c: 1259:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 28357   0136CE  C60A  F600         	movff	put_fat@fs,move_window@fs
 28358   0136D2  C60B  F601         	movff	put_fat@fs+1,move_window@fs+1
 28359   0136D6  EE20 F020          	lfsr	2,32
 28360   0136DA  510A               	movf	put_fat@fs& (0+255),w,b
 28361   0136DC  26D9               	addwf	fsr2l,f,c
 28362   0136DE  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28363   0136E0  22DA               	addwfc	fsr2h,f,c
 28364   0136E2  C4DE F614          	movff	postinc2,??_put_fat
 28365   0136E6  C4DE F615          	movff	postinc2,??_put_fat+1
 28366   0136EA  C4DE F616          	movff	postinc2,??_put_fat+2
 28367   0136EE  C4DE F617          	movff	postinc2,??_put_fat+3
 28368   0136F2  C628  F618         	movff	put_fat@bc,??_put_fat+4
 28369   0136F6  C629  F619         	movff	put_fat@bc+1,??_put_fat+5
 28370   0136FA  0E09               	movlw	9
 28371   0136FC  6F1A               	movwf	(??_put_fat+6)& (0+255),b
 28372   0136FE                     u11545:
 28373   0136FE  90D8               	bcf	status,0,c
 28374   013700  3319               	rrcf	(??_put_fat+5)& (0+255),f,b
 28375   013702  3318               	rrcf	(??_put_fat+4)& (0+255),f,b
 28376   013704  2F1A               	decfsz	(??_put_fat+6)& (0+255),f,b
 28377   013706  D7FB               	goto	u11545
 28378   013708  5118               	movf	(??_put_fat+4)& (0+255),w,b
 28379   01370A  2514               	addwf	??_put_fat& (0+255),w,b
 28380   01370C  6F02               	movwf	move_window@sect& (0+255),b
 28381   01370E  5119               	movf	(??_put_fat+5)& (0+255),w,b
 28382   013710  2115               	addwfc	(??_put_fat+1)& (0+255),w,b
 28383   013712  6F03               	movwf	(move_window@sect+1)& (0+255),b
 28384   013714  0E00               	movlw	0
 28385   013716  2116               	addwfc	(??_put_fat+2)& (0+255),w,b
 28386   013718  6F04               	movwf	(move_window@sect+2)& (0+255),b
 28387   01371A  0E00               	movlw	0
 28388   01371C  2117               	addwfc	(??_put_fat+3)& (0+255),w,b
 28389   01371E  6F05               	movwf	(move_window@sect+3)& (0+255),b
 28390   013720  EC23  F0C4         	call	_move_window	;wreg free
 28391   013724  0106               	movlb	6	; () banked
 28392   013726  6F2A               	movwf	put_fat@res& (0+255),b
 28393                           
 28394                           ; BSR set to: 6
 28395                           ;fatfs/ff.c: 1260:    if (res != FR_OK) break;
 28396   013728  512A               	movf	put_fat@res& (0+255),w,b
 28397   01372A  A4D8               	btfss	status,2,c
 28398   01372C  D13F               	goto	l9979
 28399                           
 28400                           ; BSR set to: 6
 28401                           ;fatfs/ff.c: 1261:    p = fs->win + bc % ((UINT)512);
 28402   01372E  0EFF               	movlw	255
 28403   013730  1528               	andwf	put_fat@bc& (0+255),w,b
 28404   013732  6F14               	movwf	??_put_fat& (0+255),b
 28405   013734  0E01               	movlw	1
 28406   013736  1529               	andwf	(put_fat@bc+1)& (0+255),w,b
 28407   013738  6F15               	movwf	(??_put_fat+1)& (0+255),b
 28408   01373A  5114               	movf	??_put_fat& (0+255),w,b
 28409   01373C  250A               	addwf	put_fat@fs& (0+255),w,b
 28410   01373E  6F16               	movwf	(??_put_fat+2)& (0+255),b
 28411   013740  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28412   013742  210B               	addwfc	(put_fat@fs+1)& (0+255),w,b
 28413   013744  6F17               	movwf	(??_put_fat+3)& (0+255),b
 28414   013746  0E30               	movlw	48
 28415   013748  2516               	addwf	(??_put_fat+2)& (0+255),w,b
 28416   01374A  6F26               	movwf	put_fat@p& (0+255),b
 28417   01374C  0E00               	movlw	0
 28418   01374E  2117               	addwfc	(??_put_fat+3)& (0+255),w,b
 28419   013750  6F27               	movwf	(put_fat@p+1)& (0+255),b
 28420                           
 28421                           ; BSR set to: 6
 28422                           ;fatfs/ff.c: 1262:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >>
      +                           8) & 0x0F));
 28423   013752  B10C               	btfsc	put_fat@clst& (0+255),0,b
 28424   013754  D00E               	goto	l9949
 28425                           
 28426                           ; BSR set to: 6
 28427   013756  C611  F614         	movff	put_fat@val+1,??_put_fat
 28428   01375A  0E0F               	movlw	15
 28429   01375C  1714               	andwf	??_put_fat& (0+255),f,b
 28430   01375E  C626  F4D9         	movff	put_fat@p,fsr2l
 28431   013762  C627  F4DA         	movff	put_fat@p+1,fsr2h
 28432   013766  50DF               	movf	indf2,w,c
 28433   013768  0BF0               	andlw	240
 28434   01376A  1114               	iorwf	??_put_fat& (0+255),w,b
 28435   01376C  6F15               	movwf	(??_put_fat+1)& (0+255),b
 28436   01376E  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28437   013770  D012               	goto	L12
 28438   013772                     l9949:
 28439                           
 28440                           ; BSR set to: 6
 28441   013772  C610  F614         	movff	put_fat@val,??_put_fat
 28442   013776  C611  F615         	movff	put_fat@val+1,??_put_fat+1
 28443   01377A  C612  F616         	movff	put_fat@val+2,??_put_fat+2
 28444   01377E  C613  F617         	movff	put_fat@val+3,??_put_fat+3
 28445   013782  0E05               	movlw	5
 28446   013784  D005               	goto	u11570
 28447   013786                     u11575:
 28448   013786  90D8               	bcf	status,0,c
 28449   013788  3317               	rrcf	(??_put_fat+3)& (0+255),f,b
 28450   01378A  3316               	rrcf	(??_put_fat+2)& (0+255),f,b
 28451   01378C  3315               	rrcf	(??_put_fat+1)& (0+255),f,b
 28452   01378E  3314               	rrcf	??_put_fat& (0+255),f,b
 28453   013790                     u11570:
 28454   013790  2EE8               	decfsz	wreg,f,c
 28455   013792  D7F9               	goto	u11575
 28456   013794  5114               	movf	??_put_fat& (0+255),w,b
 28457   013796                     L12:
 28458   013796  6F24               	movwf	_put_fat$436& (0+255),b
 28459   013798  6B25               	clrf	(_put_fat$436+1)& (0+255),b
 28460                           
 28461                           ; BSR set to: 6
 28462   01379A  C626  F4D9         	movff	put_fat@p,fsr2l
 28463   01379E  C627  F4DA         	movff	put_fat@p+1,fsr2h
 28464   0137A2  C624  F4DF         	movff	_put_fat$436,indf2
 28465   0137A6  D0EB               	goto	l9973
 28466   0137A8                     l9953:
 28467                           
 28468                           ; BSR set to: 6
 28469                           ;fatfs/ff.c: 1267:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)));
 28470   0137A8  C60A  F600         	movff	put_fat@fs,move_window@fs
 28471   0137AC  C60B  F601         	movff	put_fat@fs+1,move_window@fs+1
 28472   0137B0  EE20 F020          	lfsr	2,32
 28473   0137B4  510A               	movf	put_fat@fs& (0+255),w,b
 28474   0137B6  26D9               	addwf	fsr2l,f,c
 28475   0137B8  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28476   0137BA  22DA               	addwfc	fsr2h,f,c
 28477   0137BC  C4DE F614          	movff	postinc2,??_put_fat
 28478   0137C0  C4DE F615          	movff	postinc2,??_put_fat+1
 28479   0137C4  C4DE F616          	movff	postinc2,??_put_fat+2
 28480   0137C8  C4DE F617          	movff	postinc2,??_put_fat+3
 28481   0137CC  510D               	movf	(put_fat@clst+1)& (0+255),w,b
 28482   0137CE  6F18               	movwf	(??_put_fat+4)& (0+255),b
 28483   0137D0  510E               	movf	(put_fat@clst+2)& (0+255),w,b
 28484   0137D2  6F19               	movwf	(??_put_fat+5)& (0+255),b
 28485   0137D4  510F               	movf	(put_fat@clst+3)& (0+255),w,b
 28486   0137D6  6F1A               	movwf	(??_put_fat+6)& (0+255),b
 28487   0137D8  6B1B               	clrf	(??_put_fat+7)& (0+255),b
 28488   0137DA  5114               	movf	??_put_fat& (0+255),w,b
 28489   0137DC  2518               	addwf	(??_put_fat+4)& (0+255),w,b
 28490   0137DE  6F02               	movwf	move_window@sect& (0+255),b
 28491   0137E0  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28492   0137E2  2119               	addwfc	(??_put_fat+5)& (0+255),w,b
 28493   0137E4  6F03               	movwf	(move_window@sect+1)& (0+255),b
 28494   0137E6  5116               	movf	(??_put_fat+2)& (0+255),w,b
 28495   0137E8  211A               	addwfc	(??_put_fat+6)& (0+255),w,b
 28496   0137EA  6F04               	movwf	(move_window@sect+2)& (0+255),b
 28497   0137EC  5117               	movf	(??_put_fat+3)& (0+255),w,b
 28498   0137EE  211B               	addwfc	(??_put_fat+7)& (0+255),w,b
 28499   0137F0  6F05               	movwf	(move_window@sect+3)& (0+255),b
 28500   0137F2  EC23  F0C4         	call	_move_window	;wreg free
 28501   0137F6  0106               	movlb	6	; () banked
 28502   0137F8  6F2A               	movwf	put_fat@res& (0+255),b
 28503                           
 28504                           ; BSR set to: 6
 28505                           ;fatfs/ff.c: 1268:    if (res != FR_OK) break;
 28506   0137FA  512A               	movf	put_fat@res& (0+255),w,b
 28507   0137FC  A4D8               	btfss	status,2,c
 28508   0137FE  D0D6               	goto	l9979
 28509                           
 28510                           ; BSR set to: 6
 28511                           ;fatfs/ff.c: 1269:    st_word(fs->win + clst * 2 % ((UINT)512), (WORD)val);
 28512   013800  C60C  F614         	movff	put_fat@clst,??_put_fat
 28513   013804  C60D  F615         	movff	put_fat@clst+1,??_put_fat+1
 28514   013808  90D8               	bcf	status,0,c
 28515   01380A  3714               	rlcf	??_put_fat& (0+255),f,b
 28516   01380C  3715               	rlcf	(??_put_fat+1)& (0+255),f,b
 28517   01380E  0EFF               	movlw	255
 28518   013810  1514               	andwf	??_put_fat& (0+255),w,b
 28519   013812  6F16               	movwf	(??_put_fat+2)& (0+255),b
 28520   013814  0E01               	movlw	1
 28521   013816  1515               	andwf	(??_put_fat+1)& (0+255),w,b
 28522   013818  6F17               	movwf	(??_put_fat+3)& (0+255),b
 28523   01381A  5116               	movf	(??_put_fat+2)& (0+255),w,b
 28524   01381C  250A               	addwf	put_fat@fs& (0+255),w,b
 28525   01381E  6F18               	movwf	(??_put_fat+4)& (0+255),b
 28526   013820  5117               	movf	(??_put_fat+3)& (0+255),w,b
 28527   013822  210B               	addwfc	(put_fat@fs+1)& (0+255),w,b
 28528   013824  6F19               	movwf	(??_put_fat+5)& (0+255),b
 28529   013826  0E30               	movlw	48
 28530   013828  2518               	addwf	(??_put_fat+4)& (0+255),w,b
 28531   01382A  6E01               	movwf	st_word@ptr^(0+1280),c
 28532   01382C  0E00               	movlw	0
 28533   01382E  2119               	addwfc	(??_put_fat+5)& (0+255),w,b
 28534   013830  6E02               	movwf	(st_word@ptr+1)^(0+1280),c
 28535   013832  C610  F503         	movff	put_fat@val,st_word@val
 28536   013836  C611  F504         	movff	put_fat@val+1,st_word@val+1
 28537   01383A  EC2B  F0CF         	call	_st_word	;wreg free
 28538                           
 28539                           ;fatfs/ff.c: 1270:    fs->wflag = 1;
 28540   01383E  0106               	movlb	6	; () banked
 28541   013840  D09E               	goto	l9973
 28542   013842                     l9963:
 28543                           
 28544                           ; BSR set to: 6
 28545                           ;fatfs/ff.c: 1277:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)));
 28546   013842  C60A  F600         	movff	put_fat@fs,move_window@fs
 28547   013846  C60B  F601         	movff	put_fat@fs+1,move_window@fs+1
 28548   01384A  EE20 F020          	lfsr	2,32
 28549   01384E  510A               	movf	put_fat@fs& (0+255),w,b
 28550   013850  26D9               	addwf	fsr2l,f,c
 28551   013852  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28552   013854  22DA               	addwfc	fsr2h,f,c
 28553   013856  C4DE F614          	movff	postinc2,??_put_fat
 28554   01385A  C4DE F615          	movff	postinc2,??_put_fat+1
 28555   01385E  C4DE F616          	movff	postinc2,??_put_fat+2
 28556   013862  C4DE F617          	movff	postinc2,??_put_fat+3
 28557   013866  C60C  F618         	movff	put_fat@clst,??_put_fat+4
 28558   01386A  C60D  F619         	movff	put_fat@clst+1,??_put_fat+5
 28559   01386E  C60E  F61A         	movff	put_fat@clst+2,??_put_fat+6
 28560   013872  C60F  F61B         	movff	put_fat@clst+3,??_put_fat+7
 28561   013876  0E08               	movlw	8
 28562   013878  D005               	goto	u11590
 28563   01387A                     u11595:
 28564   01387A  90D8               	bcf	status,0,c
 28565   01387C  331B               	rrcf	(??_put_fat+7)& (0+255),f,b
 28566   01387E  331A               	rrcf	(??_put_fat+6)& (0+255),f,b
 28567   013880  3319               	rrcf	(??_put_fat+5)& (0+255),f,b
 28568   013882  3318               	rrcf	(??_put_fat+4)& (0+255),f,b
 28569   013884                     u11590:
 28570   013884  2EE8               	decfsz	wreg,f,c
 28571   013886  D7F9               	goto	u11595
 28572   013888  5114               	movf	??_put_fat& (0+255),w,b
 28573   01388A  2518               	addwf	(??_put_fat+4)& (0+255),w,b
 28574   01388C  6F02               	movwf	move_window@sect& (0+255),b
 28575   01388E  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28576   013890  2119               	addwfc	(??_put_fat+5)& (0+255),w,b
 28577   013892  6F03               	movwf	(move_window@sect+1)& (0+255),b
 28578   013894  5116               	movf	(??_put_fat+2)& (0+255),w,b
 28579   013896  211A               	addwfc	(??_put_fat+6)& (0+255),w,b
 28580   013898  6F04               	movwf	(move_window@sect+2)& (0+255),b
 28581   01389A  5117               	movf	(??_put_fat+3)& (0+255),w,b
 28582   01389C  211B               	addwfc	(??_put_fat+7)& (0+255),w,b
 28583   01389E  6F05               	movwf	(move_window@sect+3)& (0+255),b
 28584   0138A0  EC23  F0C4         	call	_move_window	;wreg free
 28585   0138A4  0106               	movlb	6	; () banked
 28586   0138A6  6F2A               	movwf	put_fat@res& (0+255),b
 28587                           
 28588                           ; BSR set to: 6
 28589                           ;fatfs/ff.c: 1278:    if (res != FR_OK) break;
 28590   0138A8  512A               	movf	put_fat@res& (0+255),w,b
 28591   0138AA  A4D8               	btfss	status,2,c
 28592   0138AC  D07F               	goto	l9979
 28593                           
 28594                           ; BSR set to: 6
 28595                           ;fatfs/ff.c: 1280:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % ((UINT)
      +                          512)) & 0xF0000000);
 28596   0138AE  C60C  F614         	movff	put_fat@clst,??_put_fat
 28597   0138B2  C60D  F615         	movff	put_fat@clst+1,??_put_fat+1
 28598   0138B6  90D8               	bcf	status,0,c
 28599   0138B8  3714               	rlcf	??_put_fat& (0+255),f,b
 28600   0138BA  3715               	rlcf	(??_put_fat+1)& (0+255),f,b
 28601   0138BC  90D8               	bcf	status,0,c
 28602   0138BE  3714               	rlcf	??_put_fat& (0+255),f,b
 28603   0138C0  3715               	rlcf	(??_put_fat+1)& (0+255),f,b
 28604   0138C2  0EFF               	movlw	255
 28605   0138C4  1514               	andwf	??_put_fat& (0+255),w,b
 28606   0138C6  6F16               	movwf	(??_put_fat+2)& (0+255),b
 28607   0138C8  0E01               	movlw	1
 28608   0138CA  1515               	andwf	(??_put_fat+1)& (0+255),w,b
 28609   0138CC  6F17               	movwf	(??_put_fat+3)& (0+255),b
 28610   0138CE  5116               	movf	(??_put_fat+2)& (0+255),w,b
 28611   0138D0  250A               	addwf	put_fat@fs& (0+255),w,b
 28612   0138D2  6F18               	movwf	(??_put_fat+4)& (0+255),b
 28613   0138D4  5117               	movf	(??_put_fat+3)& (0+255),w,b
 28614   0138D6  210B               	addwfc	(put_fat@fs+1)& (0+255),w,b
 28615   0138D8  6F19               	movwf	(??_put_fat+5)& (0+255),b
 28616   0138DA  0E30               	movlw	48
 28617   0138DC  2518               	addwf	(??_put_fat+4)& (0+255),w,b
 28618   0138DE  6E01               	movwf	ld_dword@ptr^(0+1280),c
 28619   0138E0  0E00               	movlw	0
 28620   0138E2  2119               	addwfc	(??_put_fat+5)& (0+255),w,b
 28621   0138E4  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 28622   0138E6  ECDE  F0C4         	call	_ld_dword	;wreg free
 28623   0138EA  0E00               	movlw	0
 28624   0138EC  1401               	andwf	?_ld_dword^(0+1280),w,c
 28625   0138EE  6F1A               	movwf	(??_put_fat+6)& (0+255),b
 28626   0138F0  0E00               	movlw	0
 28627   0138F2  1402               	andwf	(?_ld_dword+1)^(0+1280),w,c
 28628   0138F4  6F1B               	movwf	(??_put_fat+7)& (0+255),b
 28629   0138F6  0E00               	movlw	0
 28630   0138F8  1403               	andwf	(?_ld_dword+2)^(0+1280),w,c
 28631   0138FA  6F1C               	movwf	(??_put_fat+8)& (0+255),b
 28632   0138FC  0EF0               	movlw	240
 28633   0138FE  1404               	andwf	(?_ld_dword+3)^(0+1280),w,c
 28634   013900  6F1D               	movwf	(??_put_fat+9)& (0+255),b
 28635   013902  0EFF               	movlw	255
 28636   013904  1510               	andwf	put_fat@val& (0+255),w,b
 28637   013906  6F1E               	movwf	(??_put_fat+10)& (0+255),b
 28638   013908  0EFF               	movlw	255
 28639   01390A  1511               	andwf	(put_fat@val+1)& (0+255),w,b
 28640   01390C  6F1F               	movwf	(??_put_fat+11)& (0+255),b
 28641   01390E  0EFF               	movlw	255
 28642   013910  1512               	andwf	(put_fat@val+2)& (0+255),w,b
 28643   013912  6F20               	movwf	(??_put_fat+12)& (0+255),b
 28644   013914  0E0F               	movlw	15
 28645   013916  1513               	andwf	(put_fat@val+3)& (0+255),w,b
 28646   013918  6F21               	movwf	(??_put_fat+13)& (0+255),b
 28647   01391A  511A               	movf	(??_put_fat+6)& (0+255),w,b
 28648   01391C  111E               	iorwf	(??_put_fat+10)& (0+255),w,b
 28649   01391E  6F10               	movwf	put_fat@val& (0+255),b
 28650   013920  511B               	movf	(??_put_fat+7)& (0+255),w,b
 28651   013922  111F               	iorwf	(??_put_fat+11)& (0+255),w,b
 28652   013924  6F11               	movwf	(put_fat@val+1)& (0+255),b
 28653   013926  511C               	movf	(??_put_fat+8)& (0+255),w,b
 28654   013928  1120               	iorwf	(??_put_fat+12)& (0+255),w,b
 28655   01392A  6F12               	movwf	(put_fat@val+2)& (0+255),b
 28656   01392C  511D               	movf	(??_put_fat+9)& (0+255),w,b
 28657   01392E  1121               	iorwf	(??_put_fat+13)& (0+255),w,b
 28658   013930  6F13               	movwf	(put_fat@val+3)& (0+255),b
 28659                           
 28660                           ; BSR set to: 6
 28661                           ;fatfs/ff.c: 1282:    st_dword(fs->win + clst * 4 % ((UINT)512), val);
 28662                           
 28663                           ;fatfs/ff.c: 1281:    }
 28664   013932  C60C  F614         	movff	put_fat@clst,??_put_fat
 28665   013936  C60D  F615         	movff	put_fat@clst+1,??_put_fat+1
 28666   01393A  90D8               	bcf	status,0,c
 28667   01393C  3714               	rlcf	??_put_fat& (0+255),f,b
 28668   01393E  3715               	rlcf	(??_put_fat+1)& (0+255),f,b
 28669   013940  90D8               	bcf	status,0,c
 28670   013942  3714               	rlcf	??_put_fat& (0+255),f,b
 28671   013944  3715               	rlcf	(??_put_fat+1)& (0+255),f,b
 28672   013946  0EFF               	movlw	255
 28673   013948  1514               	andwf	??_put_fat& (0+255),w,b
 28674   01394A  6F16               	movwf	(??_put_fat+2)& (0+255),b
 28675   01394C  0E01               	movlw	1
 28676   01394E  1515               	andwf	(??_put_fat+1)& (0+255),w,b
 28677   013950  6F17               	movwf	(??_put_fat+3)& (0+255),b
 28678   013952  5116               	movf	(??_put_fat+2)& (0+255),w,b
 28679   013954  250A               	addwf	put_fat@fs& (0+255),w,b
 28680   013956  6F18               	movwf	(??_put_fat+4)& (0+255),b
 28681   013958  5117               	movf	(??_put_fat+3)& (0+255),w,b
 28682   01395A  210B               	addwfc	(put_fat@fs+1)& (0+255),w,b
 28683   01395C  6F19               	movwf	(??_put_fat+5)& (0+255),b
 28684   01395E  0E30               	movlw	48
 28685   013960  2518               	addwf	(??_put_fat+4)& (0+255),w,b
 28686   013962  6E01               	movwf	st_dword@ptr^(0+1280),c
 28687   013964  0E00               	movlw	0
 28688   013966  2119               	addwfc	(??_put_fat+5)& (0+255),w,b
 28689   013968  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 28690   01396A  C610  F503         	movff	put_fat@val,st_dword@val
 28691   01396E  C611  F504         	movff	put_fat@val+1,st_dword@val+1
 28692   013972  C612  F505         	movff	put_fat@val+2,st_dword@val+2
 28693   013976  C613  F506         	movff	put_fat@val+3,st_dword@val+3
 28694   01397A  EC68  F0CB         	call	_st_dword	;wreg free
 28695   01397E                     l9973:
 28696                           
 28697                           ; BSR set to: 6
 28698                           ;fatfs/ff.c: 1283:    fs->wflag = 1;
 28699   01397E  EE20 F004          	lfsr	2,4
 28700   013982  510A               	movf	put_fat@fs& (0+255),w,b
 28701   013984  26D9               	addwf	fsr2l,f,c
 28702   013986  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28703   013988  22DA               	addwfc	fsr2h,f,c
 28704   01398A  0E01               	movlw	1
 28705   01398C  6EDF               	movwf	indf2,c
 28706                           
 28707                           ;fatfs/ff.c: 1284:    break;
 28708   01398E  D00E               	goto	l9979
 28709   013990                     l9977:
 28710                           
 28711                           ; BSR set to: 6
 28712   013990  C60A  F4D9         	movff	put_fat@fs,fsr2l
 28713   013994  C60B  F4DA         	movff	put_fat@fs+1,fsr2h
 28714   013998  50DF               	movf	indf2,w,c
 28715                           
 28716                           ; Switch size 1, requested type "simple"
 28717                           ; Number of cases is 3, Range of values is 1 to 3
 28718                           ; switch strategies available:
 28719                           ; Name         Instructions Cycles
 28720                           ; simple_byte           10     6 (average)
 28721                           ;	Chosen strategy is simple_byte
 28722   01399A  0A01               	xorlw	1	; case 1
 28723   01399C  B4D8               	btfsc	status,2,c
 28724   01399E  D623               	goto	l249
 28725   0139A0  0A03               	xorlw	3	; case 2
 28726   0139A2  B4D8               	btfsc	status,2,c
 28727   0139A4  D701               	goto	l9953
 28728   0139A6  0A01               	xorlw	1	; case 3
 28729   0139A8  B4D8               	btfsc	status,2,c
 28730   0139AA  D74B               	goto	l9963
 28731   0139AC                     l9979:
 28732                           
 28733                           ; BSR set to: 6
 28734                           ;fatfs/ff.c: 1287:  return res;
 28735   0139AC  512A               	movf	put_fat@res& (0+255),w,b
 28736                           
 28737                           ; BSR set to: 6
 28738   0139AE  0012               	return		;funcret
 28739   0139B0                     __end_of_put_fat:
 28740                           	callstack 0
 28741                           
 28742 ;; *************** function _st_word *****************
 28743 ;; Defined at:
 28744 ;;		line 656 in file "fatfs/ff.c"
 28745 ;; Parameters:    Size  Location     Type
 28746 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 28747 ;;		 -> fs$win(512), fs(560), NULL(0), 
 28748 ;;  val             2    2[COMRAM] unsigned short 
 28749 ;; Auto vars:     Size  Location     Type
 28750 ;;		None
 28751 ;; Return value:  Size  Location     Type
 28752 ;;                  1    wreg      void 
 28753 ;; Registers used:
 28754 ;;		fsr2l, fsr2h, status,2, status,0
 28755 ;; Tracked objects:
 28756 ;;		On entry : 0/6
 28757 ;;		On exit  : 0/0
 28758 ;;		Unchanged: 0/0
 28759 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28764 ;;Total ram usage:        4 bytes
 28765 ;; Hardware stack levels used: 1
 28766 ;; This function calls:
 28767 ;;		Nothing
 28768 ;; This function is called by:
 28769 ;;		_sync_fs
 28770 ;;		_put_fat
 28771 ;;		_st_clust
 28772 ;;		_f_sync
 28773 ;; This function uses a non-reentrant model
 28774 ;;
 28775                           
 28776                           	psect	text53
 28777   019E56                     __ptext53:
 28778                           	callstack 0
 28779   019E56                     _st_word:
 28780                           	callstack 120
 28781                           
 28782                           ;fatfs/ff.c: 656: static void st_word (BYTE* ptr, WORD val);fatfs/ff.c: 657: {;fatfs/ff.
      +                          c: 658:  *ptr++ = (BYTE)val; val >>= 8;
 28783                           
 28784                           ; BSR set to: 6
 28785                           ;incstack = 0
 28786   019E56  C501  F4D9         	movff	st_word@ptr,fsr2l
 28787   019E5A  C502  F4DA         	movff	st_word@ptr+1,fsr2h
 28788   019E5E  C503  F4DF         	movff	st_word@val,indf2
 28789   019E62  4A01               	infsnz	st_word@ptr^(0+1280),f,c
 28790   019E64  2A02               	incf	(st_word@ptr+1)^(0+1280),f,c
 28791   019E66  C504  F503         	movff	st_word@val+1,st_word@val
 28792   019E6A  6A04               	clrf	(st_word@val+1)^(0+1280),c
 28793                           
 28794                           ;fatfs/ff.c: 659:  *ptr++ = (BYTE)val;
 28795   019E6C  C501  F4D9         	movff	st_word@ptr,fsr2l
 28796   019E70  C502  F4DA         	movff	st_word@ptr+1,fsr2h
 28797   019E74  C503  F4DF         	movff	st_word@val,indf2
 28798   019E78  4A01               	infsnz	st_word@ptr^(0+1280),f,c
 28799   019E7A  2A02               	incf	(st_word@ptr+1)^(0+1280),f,c
 28800   019E7C  0012               	return		;funcret
 28801   019E7E                     __end_of_st_word:
 28802                           	callstack 0
 28803                           
 28804 ;; *************** function _st_dword *****************
 28805 ;; Defined at:
 28806 ;;		line 662 in file "fatfs/ff.c"
 28807 ;; Parameters:    Size  Location     Type
 28808 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 28809 ;;		 -> fs$win(512), fs(560), NULL(0), 
 28810 ;;  val             4    2[COMRAM] unsigned long 
 28811 ;; Auto vars:     Size  Location     Type
 28812 ;;		None
 28813 ;; Return value:  Size  Location     Type
 28814 ;;                  1    wreg      void 
 28815 ;; Registers used:
 28816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28817 ;; Tracked objects:
 28818 ;;		On entry : 3F/6
 28819 ;;		On exit  : 3F/6
 28820 ;;		Unchanged: 3F/0
 28821 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28822 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28825 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28826 ;;Total ram usage:        6 bytes
 28827 ;; Hardware stack levels used: 1
 28828 ;; This function calls:
 28829 ;;		Nothing
 28830 ;; This function is called by:
 28831 ;;		_sync_fs
 28832 ;;		_put_fat
 28833 ;;		_f_open
 28834 ;;		_f_sync
 28835 ;; This function uses a non-reentrant model
 28836 ;;
 28837                           
 28838                           	psect	text54
 28839   0196D0                     __ptext54:
 28840                           	callstack 0
 28841   0196D0                     _st_dword:
 28842                           	callstack 120
 28843                           
 28844                           ; BSR set to: 6
 28845                           ;fatfs/ff.c: 662: static void st_dword (BYTE* ptr, DWORD val);fatfs/ff.c: 663: {;fatfs/f
      +                          f.c: 664:  *ptr++ = (BYTE)val; val >>= 8;
 28846                           
 28847                           ;incstack = 0
 28848   0196D0  C501  F4D9         	movff	st_dword@ptr,fsr2l
 28849   0196D4  C502  F4DA         	movff	st_dword@ptr+1,fsr2h
 28850   0196D8  C503  F4DF         	movff	st_dword@val,indf2
 28851                           
 28852                           ; BSR set to: 6
 28853   0196DC  4A01               	infsnz	st_dword@ptr^(0+1280),f,c
 28854   0196DE  2A02               	incf	(st_dword@ptr+1)^(0+1280),f,c
 28855                           
 28856                           ; BSR set to: 6
 28857   0196E0  5004               	movf	(st_dword@val+1)^(0+1280),w,c
 28858   0196E2  6E03               	movwf	st_dword@val^(0+1280),c
 28859   0196E4  5005               	movf	(st_dword@val+2)^(0+1280),w,c
 28860   0196E6  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 28861   0196E8  5006               	movf	(st_dword@val+3)^(0+1280),w,c
 28862   0196EA  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 28863   0196EC  6A06               	clrf	(st_dword@val+3)^(0+1280),c
 28864                           
 28865                           ; BSR set to: 6
 28866                           ;fatfs/ff.c: 665:  *ptr++ = (BYTE)val; val >>= 8;
 28867   0196EE  C501  F4D9         	movff	st_dword@ptr,fsr2l
 28868   0196F2  C502  F4DA         	movff	st_dword@ptr+1,fsr2h
 28869   0196F6  C503  F4DF         	movff	st_dword@val,indf2
 28870                           
 28871                           ; BSR set to: 6
 28872   0196FA  4A01               	infsnz	st_dword@ptr^(0+1280),f,c
 28873   0196FC  2A02               	incf	(st_dword@ptr+1)^(0+1280),f,c
 28874   0196FE  5004               	movf	(st_dword@val+1)^(0+1280),w,c
 28875   019700  6E03               	movwf	st_dword@val^(0+1280),c
 28876   019702  5005               	movf	(st_dword@val+2)^(0+1280),w,c
 28877   019704  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 28878   019706  5006               	movf	(st_dword@val+3)^(0+1280),w,c
 28879   019708  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 28880   01970A  6A06               	clrf	(st_dword@val+3)^(0+1280),c
 28881                           
 28882                           ; BSR set to: 6
 28883                           ;fatfs/ff.c: 666:  *ptr++ = (BYTE)val; val >>= 8;
 28884   01970C  C501  F4D9         	movff	st_dword@ptr,fsr2l
 28885   019710  C502  F4DA         	movff	st_dword@ptr+1,fsr2h
 28886   019714  C503  F4DF         	movff	st_dword@val,indf2
 28887                           
 28888                           ; BSR set to: 6
 28889   019718  4A01               	infsnz	st_dword@ptr^(0+1280),f,c
 28890   01971A  2A02               	incf	(st_dword@ptr+1)^(0+1280),f,c
 28891                           
 28892                           ; BSR set to: 6
 28893   01971C  5004               	movf	(st_dword@val+1)^(0+1280),w,c
 28894   01971E  6E03               	movwf	st_dword@val^(0+1280),c
 28895   019720  5005               	movf	(st_dword@val+2)^(0+1280),w,c
 28896   019722  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 28897   019724  5006               	movf	(st_dword@val+3)^(0+1280),w,c
 28898   019726  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 28899   019728  6A06               	clrf	(st_dword@val+3)^(0+1280),c
 28900                           
 28901                           ; BSR set to: 6
 28902                           ;fatfs/ff.c: 667:  *ptr++ = (BYTE)val;
 28903   01972A  C501  F4D9         	movff	st_dword@ptr,fsr2l
 28904   01972E  C502  F4DA         	movff	st_dword@ptr+1,fsr2h
 28905   019732  C503  F4DF         	movff	st_dword@val,indf2
 28906   019736  4A01               	infsnz	st_dword@ptr^(0+1280),f,c
 28907   019738  2A02               	incf	(st_dword@ptr+1)^(0+1280),f,c
 28908                           
 28909                           ; BSR set to: 6
 28910   01973A  0012               	return		;funcret
 28911   01973C                     __end_of_st_dword:
 28912                           	callstack 0
 28913                           
 28914 ;; *************** function _get_fat *****************
 28915 ;; Defined at:
 28916 ;;		line 1161 in file "fatfs/ff.c"
 28917 ;; Parameters:    Size  Location     Type
 28918 ;;  obj             2   10[BANK6 ] PTR struct .
 28919 ;;		 -> files(3276), fsdir(40), f_rename@djn(40), f_rename@djo(40), 
 28920 ;;		 -> f_mkdir@sobj(14), f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), 
 28921 ;;		 -> f_getfree@obj(14), f_stat@dj(40), f_open@dj(40), 
 28922 ;;  clst            4   12[BANK6 ] unsigned long 
 28923 ;; Auto vars:     Size  Location     Type
 28924 ;;  val             4   26[BANK6 ] unsigned long 
 28925 ;;  fs              2   34[BANK6 ] PTR struct .
 28926 ;;		 -> fs(560), NULL(0), 
 28927 ;;  bc              2   32[BANK6 ] unsigned int 
 28928 ;;  wc              2   30[BANK6 ] unsigned int 
 28929 ;; Return value:  Size  Location     Type
 28930 ;;                  4   10[BANK6 ] unsigned long 
 28931 ;; Registers used:
 28932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28933 ;; Tracked objects:
 28934 ;;		On entry : 3F/6
 28935 ;;		On exit  : 3C/4
 28936 ;;		Unchanged: 0/0
 28937 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28938 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28939 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28940 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28941 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28942 ;;Total ram usage:       26 bytes
 28943 ;; Hardware stack levels used: 1
 28944 ;; Hardware stack levels required when called: 13
 28945 ;; This function calls:
 28946 ;;		_ld_dword
 28947 ;;		_ld_word
 28948 ;;		_move_window
 28949 ;; This function is called by:
 28950 ;;		_remove_chain
 28951 ;;		_create_chain
 28952 ;;		_dir_sdi
 28953 ;;		_dir_next
 28954 ;;		_f_open
 28955 ;;		_f_read
 28956 ;;		_f_lseek
 28957 ;; This function uses a non-reentrant model
 28958 ;;
 28959                           
 28960                           	psect	text55
 28961   0140D0                     __ptext55:
 28962                           	callstack 0
 28963   0140D0                     _get_fat:
 28964                           	callstack 110
 28965                           
 28966                           ; BSR set to: 6
 28967                           ;fatfs/ff.c: 1162:  FFOBJID* obj,;fatfs/ff.c: 1163:  DWORD clst;fatfs/ff.c: 1165: {;fatf
      +                          s/ff.c: 1166:  UINT wc, bc;;fatfs/ff.c: 1167:  DWORD val;;fatfs/ff.c: 1168:  FATFS *fs =
      +                           obj->fs;
 28968                           
 28969                           ; BSR set to: 6
 28970                           ;incstack = 0
 28971   0140D0  C60A  F4D9         	movff	get_fat@obj,fsr2l
 28972   0140D4  C60B  F4DA         	movff	get_fat@obj+1,fsr2h
 28973   0140D8  C4DE F622          	movff	postinc2,get_fat@fs
 28974   0140DC  C4DD F623          	movff	postdec2,get_fat@fs+1
 28975                           
 28976                           ; BSR set to: 6
 28977                           ;fatfs/ff.c: 1171:  if (clst < 2 || clst >= fs->n_fatent) {
 28978   0140E0  510F               	movf	(get_fat@clst+3)& (0+255),w,b
 28979   0140E2  110E               	iorwf	(get_fat@clst+2)& (0+255),w,b
 28980   0140E4  110D               	iorwf	(get_fat@clst+1)& (0+255),w,b
 28981   0140E6  E104               	bnz	u11380
 28982   0140E8  0E02               	movlw	2
 28983   0140EA  5D0C               	subwf	get_fat@clst& (0+255),w,b
 28984   0140EC  A0D8               	btfss	status,0,c
 28985   0140EE  D010               	goto	u11390
 28986   0140F0                     u11380:
 28987                           
 28988                           ; BSR set to: 6
 28989   0140F0  EE20 F014          	lfsr	2,20
 28990   0140F4  5122               	movf	get_fat@fs& (0+255),w,b
 28991   0140F6  26D9               	addwf	fsr2l,f,c
 28992   0140F8  5123               	movf	(get_fat@fs+1)& (0+255),w,b
 28993   0140FA  22DA               	addwfc	fsr2h,f,c
 28994   0140FC  50DE               	movf	postinc2,w,c
 28995   0140FE  5D0C               	subwf	get_fat@clst& (0+255),w,b
 28996   014100  50DE               	movf	postinc2,w,c
 28997   014102  590D               	subwfb	(get_fat@clst+1)& (0+255),w,b
 28998   014104  50DE               	movf	postinc2,w,c
 28999   014106  590E               	subwfb	(get_fat@clst+2)& (0+255),w,b
 29000   014108  50DE               	movf	postinc2,w,c
 29001   01410A  590F               	subwfb	(get_fat@clst+3)& (0+255),w,b
 29002   01410C  A0D8               	btfss	status,0,c
 29003   01410E  D008               	goto	l226
 29004   014110                     u11390:
 29005                           
 29006                           ; BSR set to: 6
 29007                           ;fatfs/ff.c: 1172:   val = 1;
 29008   014110  0E01               	movlw	1
 29009   014112  6F1A               	movwf	get_fat@val& (0+255),b
 29010   014114  0E00               	movlw	0
 29011   014116  6F1B               	movwf	(get_fat@val+1)& (0+255),b
 29012   014118  0E00               	movlw	0
 29013   01411A  6F1C               	movwf	(get_fat@val+2)& (0+255),b
 29014   01411C  0E00               	movlw	0
 29015   01411E  D16D               	goto	L14
 29016   014120                     l226:
 29017                           
 29018                           ; BSR set to: 6
 29019                           ;fatfs/ff.c: 1175:   val = 0xFFFFFFFF;
 29020   014120  691A               	setf	get_fat@val& (0+255),b
 29021   014122  691B               	setf	(get_fat@val+1)& (0+255),b
 29022   014124  691C               	setf	(get_fat@val+2)& (0+255),b
 29023   014126  691D               	setf	(get_fat@val+3)& (0+255),b
 29024                           
 29025                           ;fatfs/ff.c: 1177:   switch (fs->fs_type) {
 29026   014128  D16A               	goto	l9905
 29027   01412A                     l231:
 29028                           
 29029                           ; BSR set to: 6
 29030                           ;fatfs/ff.c: 1179:    bc = (UINT)clst; bc += bc / 2;
 29031   01412A  C60C  F620         	movff	get_fat@clst,get_fat@bc
 29032   01412E  C60D  F621         	movff	get_fat@clst+1,get_fat@bc+1
 29033                           
 29034                           ; BSR set to: 6
 29035   014132  90D8               	bcf	status,0,c
 29036   014134  3121               	rrcf	(get_fat@bc+1)& (0+255),w,b
 29037   014136  6F11               	movwf	(??_get_fat+1)& (0+255),b
 29038   014138  3120               	rrcf	get_fat@bc& (0+255),w,b
 29039   01413A  6F10               	movwf	??_get_fat& (0+255),b
 29040   01413C  5110               	movf	??_get_fat& (0+255),w,b
 29041   01413E  2720               	addwf	get_fat@bc& (0+255),f,b
 29042   014140  5111               	movf	(??_get_fat+1)& (0+255),w,b
 29043   014142  2321               	addwfc	(get_fat@bc+1)& (0+255),f,b
 29044                           
 29045                           ; BSR set to: 6
 29046                           ;fatfs/ff.c: 1180:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) br
      +                          eak;
 29047   014144  C622  F600         	movff	get_fat@fs,move_window@fs
 29048   014148  C623  F601         	movff	get_fat@fs+1,move_window@fs+1
 29049   01414C  EE20 F020          	lfsr	2,32
 29050   014150  5122               	movf	get_fat@fs& (0+255),w,b
 29051   014152  26D9               	addwf	fsr2l,f,c
 29052   014154  5123               	movf	(get_fat@fs+1)& (0+255),w,b
 29053   014156  22DA               	addwfc	fsr2h,f,c
 29054   014158  C4DE F610          	movff	postinc2,??_get_fat
 29055   01415C  C4DE F611          	movff	postinc2,??_get_fat+1
 29056   014160  C4DE F612          	movff	postinc2,??_get_fat+2
 29057   014164  C4DE F613          	movff	postinc2,??_get_fat+3
 29058   014168  C620  F614         	movff	get_fat@bc,??_get_fat+4
 29059   01416C  C621  F615         	movff	get_fat@bc+1,??_get_fat+5
 29060   014170  0E09               	movlw	9
 29061   014172  6F16               	movwf	(??_get_fat+6)& (0+255),b
 29062   014174                     u11405:
 29063   014174  90D8               	bcf	status,0,c
 29064   014176  3315               	rrcf	(??_get_fat+5)& (0+255),f,b
 29065   014178  3314               	rrcf	(??_get_fat+4)& (0+255),f,b
 29066   01417A  2F16               	decfsz	(??_get_fat+6)& (0+255),f,b
 29067   01417C  D7FB               	goto	u11405
 29068   01417E  5114               	movf	(??_get_fat+4)& (0+255),w,b
 29069   014180  2510               	addwf	??_get_fat& (0+255),w,b
 29070   014182  6F02               	movwf	move_window@sect& (0+255),b
 29071   014184  5115               	movf	(??_get_fat+5)& (0+255),w,b
 29072   014186  2111               	addwfc	(??_get_fat+1)& (0+255),w,b
 29073   014188  6F03               	movwf	(move_window@sect+1)& (0+255),b
 29074   01418A  0E00               	movlw	0
 29075   01418C  2112               	addwfc	(??_get_fat+2)& (0+255),w,b
 29076   01418E  6F04               	movwf	(move_window@sect+2)& (0+255),b
 29077   014190  0E00               	movlw	0
 29078   014192  2113               	addwfc	(??_get_fat+3)& (0+255),w,b
 29079   014194  6F05               	movwf	(move_window@sect+3)& (0+255),b
 29080   014196  EC23  F0C4         	call	_move_window	;wreg free
 29081   01419A  0900               	iorlw	0
 29082   01419C  A4D8               	btfss	status,2,c
 29083   01419E  D13E               	goto	l229
 29084                           
 29085                           ; BSR set to: 5
 29086                           ;fatfs/ff.c: 1181:    wc = fs->win[bc++ % ((UINT)512)];
 29087   0141A0  0EFF               	movlw	255
 29088   0141A2  0106               	movlb	6	; () banked
 29089   0141A4  1520               	andwf	get_fat@bc& (0+255),w,b
 29090   0141A6  6F10               	movwf	??_get_fat& (0+255),b
 29091   0141A8  0E01               	movlw	1
 29092   0141AA  1521               	andwf	(get_fat@bc+1)& (0+255),w,b
 29093   0141AC  6F11               	movwf	(??_get_fat+1)& (0+255),b
 29094   0141AE  5110               	movf	??_get_fat& (0+255),w,b
 29095   0141B0  2522               	addwf	get_fat@fs& (0+255),w,b
 29096   0141B2  6F12               	movwf	(??_get_fat+2)& (0+255),b
 29097   0141B4  5111               	movf	(??_get_fat+1)& (0+255),w,b
 29098   0141B6  2123               	addwfc	(get_fat@fs+1)& (0+255),w,b
 29099   0141B8  6F13               	movwf	(??_get_fat+3)& (0+255),b
 29100   0141BA  0E30               	movlw	48
 29101   0141BC  2512               	addwf	(??_get_fat+2)& (0+255),w,b
 29102   0141BE  6ED9               	movwf	fsr2l,c
 29103   0141C0  0E00               	movlw	0
 29104   0141C2  2113               	addwfc	(??_get_fat+3)& (0+255),w,b
 29105   0141C4  6EDA               	movwf	fsr2h,c
 29106   0141C6  50DF               	movf	indf2,w,c
 29107   0141C8  6F14               	movwf	(??_get_fat+4)& (0+255),b
 29108   0141CA  5114               	movf	(??_get_fat+4)& (0+255),w,b
 29109   0141CC  6F1E               	movwf	get_fat@wc& (0+255),b
 29110   0141CE  6B1F               	clrf	(get_fat@wc+1)& (0+255),b
 29111                           
 29112                           ; BSR set to: 6
 29113   0141D0  4B20               	infsnz	get_fat@bc& (0+255),f,b
 29114   0141D2  2B21               	incf	(get_fat@bc+1)& (0+255),f,b
 29115                           
 29116                           ; BSR set to: 6
 29117                           ;fatfs/ff.c: 1182:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) br
      +                          eak;
 29118   0141D4  C622  F600         	movff	get_fat@fs,move_window@fs
 29119   0141D8  C623  F601         	movff	get_fat@fs+1,move_window@fs+1
 29120   0141DC  EE20 F020          	lfsr	2,32
 29121   0141E0  5122               	movf	get_fat@fs& (0+255),w,b
 29122   0141E2  26D9               	addwf	fsr2l,f,c
 29123   0141E4  5123               	movf	(get_fat@fs+1)& (0+255),w,b
 29124   0141E6  22DA               	addwfc	fsr2h,f,c
 29125   0141E8  C4DE F610          	movff	postinc2,??_get_fat
 29126   0141EC  C4DE F611          	movff	postinc2,??_get_fat+1
 29127   0141F0  C4DE F612          	movff	postinc2,??_get_fat+2
 29128   0141F4  C4DE F613          	movff	postinc2,??_get_fat+3
 29129   0141F8  C620  F614         	movff	get_fat@bc,??_get_fat+4
 29130   0141FC  C621  F615         	movff	get_fat@bc+1,??_get_fat+5
 29131   014200  0E09               	movlw	9
 29132   014202  6F16               	movwf	(??_get_fat+6)& (0+255),b
 29133   014204                     u11425:
 29134   014204  90D8               	bcf	status,0,c
 29135   014206  3315               	rrcf	(??_get_fat+5)& (0+255),f,b
 29136   014208  3314               	rrcf	(??_get_fat+4)& (0+255),f,b
 29137   01420A  2F16               	decfsz	(??_get_fat+6)& (0+255),f,b
 29138   01420C  D7FB               	goto	u11425
 29139   01420E  5114               	movf	(??_get_fat+4)& (0+255),w,b
 29140   014210  2510               	addwf	??_get_fat& (0+255),w,b
 29141   014212  6F02               	movwf	move_window@sect& (0+255),b
 29142   014214  5115               	movf	(??_get_fat+5)& (0+255),w,b
 29143   014216  2111               	addwfc	(??_get_fat+1)& (0+255),w,b
 29144   014218  6F03               	movwf	(move_window@sect+1)& (0+255),b
 29145   01421A  0E00               	movlw	0
 29146   01421C  2112               	addwfc	(??_get_fat+2)& (0+255),w,b
 29147   01421E  6F04               	movwf	(move_window@sect+2)& (0+255),b
 29148   014220  0E00               	movlw	0
 29149   014222  2113               	addwfc	(??_get_fat+3)& (0+255),w,b
 29150   014224  6F05               	movwf	(move_window@sect+3)& (0+255),b
 29151   014226  EC23  F0C4         	call	_move_window	;wreg free
 29152   01422A  0900               	iorlw	0
 29153   01422C  A4D8               	btfss	status,2,c
 29154   01422E  D0F6               	goto	l229
 29155                           
 29156                           ; BSR set to: 5
 29157                           ;fatfs/ff.c: 1183:    wc |= (UINT)fs->win[bc % ((UINT)512)] << 8;
 29158   014230  0EFF               	movlw	255
 29159   014232  0106               	movlb	6	; () banked
 29160   014234  1520               	andwf	get_fat@bc& (0+255),w,b
 29161   014236  6F10               	movwf	??_get_fat& (0+255),b
 29162   014238  0E01               	movlw	1
 29163   01423A  1521               	andwf	(get_fat@bc+1)& (0+255),w,b
 29164   01423C  6F11               	movwf	(??_get_fat+1)& (0+255),b
 29165   01423E  5110               	movf	??_get_fat& (0+255),w,b
 29166   014240  2522               	addwf	get_fat@fs& (0+255),w,b
 29167   014242  6F12               	movwf	(??_get_fat+2)& (0+255),b
 29168   014244  5111               	movf	(??_get_fat+1)& (0+255),w,b
 29169   014246  2123               	addwfc	(get_fat@fs+1)& (0+255),w,b
 29170   014248  6F13               	movwf	(??_get_fat+3)& (0+255),b
 29171   01424A  0E30               	movlw	48
 29172   01424C  2512               	addwf	(??_get_fat+2)& (0+255),w,b
 29173   01424E  6ED9               	movwf	fsr2l,c
 29174   014250  0E00               	movlw	0
 29175   014252  2113               	addwfc	(??_get_fat+3)& (0+255),w,b
 29176   014254  6EDA               	movwf	fsr2h,c
 29177   014256  50DF               	movf	indf2,w,c
 29178   014258  6F14               	movwf	(??_get_fat+4)& (0+255),b
 29179   01425A  5114               	movf	(??_get_fat+4)& (0+255),w,b
 29180   01425C  6F16               	movwf	(??_get_fat+6)& (0+255),b
 29181   01425E  6B15               	clrf	(??_get_fat+5)& (0+255),b
 29182   014260  5115               	movf	(??_get_fat+5)& (0+255),w,b
 29183   014262  131E               	iorwf	get_fat@wc& (0+255),f,b
 29184   014264  5116               	movf	(??_get_fat+6)& (0+255),w,b
 29185   014266  131F               	iorwf	(get_fat@wc+1)& (0+255),f,b
 29186                           
 29187                           ; BSR set to: 6
 29188                           ;fatfs/ff.c: 1184:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 29189   014268  B10C               	btfsc	get_fat@clst& (0+255),0,b
 29190   01426A  D007               	goto	l9887
 29191                           
 29192                           ; BSR set to: 6
 29193   01426C  0EFF               	movlw	255
 29194   01426E  151E               	andwf	get_fat@wc& (0+255),w,b
 29195   014270  6F18               	movwf	_get_fat$406& (0+255),b
 29196   014272  0E0F               	movlw	15
 29197   014274  151F               	andwf	(get_fat@wc+1)& (0+255),w,b
 29198   014276  6F19               	movwf	(_get_fat$406+1)& (0+255),b
 29199   014278  D00F               	goto	l9889
 29200   01427A                     l9887:
 29201                           
 29202                           ; BSR set to: 6
 29203   01427A  C61E  F610         	movff	get_fat@wc,??_get_fat
 29204   01427E  C61F  F611         	movff	get_fat@wc+1,??_get_fat+1
 29205   014282  0E04               	movlw	4
 29206   014284  6F12               	movwf	(??_get_fat+2)& (0+255),b
 29207   014286                     u11455:
 29208   014286  90D8               	bcf	status,0,c
 29209   014288  3311               	rrcf	(??_get_fat+1)& (0+255),f,b
 29210   01428A  3310               	rrcf	??_get_fat& (0+255),f,b
 29211   01428C  2F12               	decfsz	(??_get_fat+2)& (0+255),f,b
 29212   01428E  D7FB               	goto	u11455
 29213   014290  C610  F618         	movff	??_get_fat,_get_fat$406
 29214   014294  C611  F619         	movff	??_get_fat+1,_get_fat$406+1
 29215   014298                     l9889:
 29216                           
 29217                           ; BSR set to: 6
 29218   014298  C618  F61A         	movff	_get_fat$406,get_fat@val
 29219   01429C  C619  F61B         	movff	_get_fat$406+1,get_fat@val+1
 29220   0142A0  D04B               	goto	L15
 29221   0142A2                     l9891:
 29222                           
 29223                           ; BSR set to: 6
 29224                           ;fatfs/ff.c: 1188:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) != F
      +                          R_OK) break;
 29225   0142A2  C622  F600         	movff	get_fat@fs,move_window@fs
 29226   0142A6  C623  F601         	movff	get_fat@fs+1,move_window@fs+1
 29227   0142AA  EE20 F020          	lfsr	2,32
 29228   0142AE  5122               	movf	get_fat@fs& (0+255),w,b
 29229   0142B0  26D9               	addwf	fsr2l,f,c
 29230   0142B2  5123               	movf	(get_fat@fs+1)& (0+255),w,b
 29231   0142B4  22DA               	addwfc	fsr2h,f,c
 29232   0142B6  C4DE F610          	movff	postinc2,??_get_fat
 29233   0142BA  C4DE F611          	movff	postinc2,??_get_fat+1
 29234   0142BE  C4DE F612          	movff	postinc2,??_get_fat+2
 29235   0142C2  C4DE F613          	movff	postinc2,??_get_fat+3
 29236   0142C6  510D               	movf	(get_fat@clst+1)& (0+255),w,b
 29237   0142C8  6F14               	movwf	(??_get_fat+4)& (0+255),b
 29238   0142CA  510E               	movf	(get_fat@clst+2)& (0+255),w,b
 29239   0142CC  6F15               	movwf	(??_get_fat+5)& (0+255),b
 29240   0142CE  510F               	movf	(get_fat@clst+3)& (0+255),w,b
 29241   0142D0  6F16               	movwf	(??_get_fat+6)& (0+255),b
 29242   0142D2  6B17               	clrf	(??_get_fat+7)& (0+255),b
 29243   0142D4  5110               	movf	??_get_fat& (0+255),w,b
 29244   0142D6  2514               	addwf	(??_get_fat+4)& (0+255),w,b
 29245   0142D8  6F02               	movwf	move_window@sect& (0+255),b
 29246   0142DA  5111               	movf	(??_get_fat+1)& (0+255),w,b
 29247   0142DC  2115               	addwfc	(??_get_fat+5)& (0+255),w,b
 29248   0142DE  6F03               	movwf	(move_window@sect+1)& (0+255),b
 29249   0142E0  5112               	movf	(??_get_fat+2)& (0+255),w,b
 29250   0142E2  2116               	addwfc	(??_get_fat+6)& (0+255),w,b
 29251   0142E4  6F04               	movwf	(move_window@sect+2)& (0+255),b
 29252   0142E6  5113               	movf	(??_get_fat+3)& (0+255),w,b
 29253   0142E8  2117               	addwfc	(??_get_fat+7)& (0+255),w,b
 29254   0142EA  6F05               	movwf	(move_window@sect+3)& (0+255),b
 29255   0142EC  EC23  F0C4         	call	_move_window	;wreg free
 29256   0142F0  0900               	iorlw	0
 29257   0142F2  A4D8               	btfss	status,2,c
 29258   0142F4  D093               	goto	l229
 29259                           
 29260                           ; BSR set to: 5
 29261                           ;fatfs/ff.c: 1189:    val = ld_word(fs->win + clst * 2 % ((UINT)512));
 29262   0142F6  C60C  F610         	movff	get_fat@clst,??_get_fat
 29263   0142FA  C60D  F611         	movff	get_fat@clst+1,??_get_fat+1
 29264   0142FE  90D8               	bcf	status,0,c
 29265   014300  0106               	movlb	6	; () banked
 29266   014302  3710               	rlcf	??_get_fat& (0+255),f,b
 29267   014304  3711               	rlcf	(??_get_fat+1)& (0+255),f,b
 29268   014306  0EFF               	movlw	255
 29269   014308  1510               	andwf	??_get_fat& (0+255),w,b
 29270   01430A  6F12               	movwf	(??_get_fat+2)& (0+255),b
 29271   01430C  0E01               	movlw	1
 29272   01430E  1511               	andwf	(??_get_fat+1)& (0+255),w,b
 29273   014310  6F13               	movwf	(??_get_fat+3)& (0+255),b
 29274   014312  5112               	movf	(??_get_fat+2)& (0+255),w,b
 29275   014314  2522               	addwf	get_fat@fs& (0+255),w,b
 29276   014316  6F14               	movwf	(??_get_fat+4)& (0+255),b
 29277   014318  5113               	movf	(??_get_fat+3)& (0+255),w,b
 29278   01431A  2123               	addwfc	(get_fat@fs+1)& (0+255),w,b
 29279   01431C  6F15               	movwf	(??_get_fat+5)& (0+255),b
 29280   01431E  0E30               	movlw	48
 29281   014320  2514               	addwf	(??_get_fat+4)& (0+255),w,b
 29282   014322  6E01               	movwf	ld_word@ptr^(0+1280),c
 29283   014324  0E00               	movlw	0
 29284   014326  2115               	addwfc	(??_get_fat+5)& (0+255),w,b
 29285   014328  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 29286   01432A  EC35  F0CE         	call	_ld_word	;wreg free
 29287   01432E  C501  F61A         	movff	?_ld_word,get_fat@val
 29288   014332  C502  F61B         	movff	?_ld_word+1,get_fat@val+1
 29289   014336  0106               	movlb	6	; () banked
 29290   014338                     L15:
 29291   014338  6B1C               	clrf	(get_fat@val+2)& (0+255),b
 29292   01433A  6B1D               	clrf	(get_fat@val+3)& (0+255),b
 29293                           
 29294                           ;fatfs/ff.c: 1190:    break;
 29295   01433C  D06F               	goto	l229
 29296   01433E                     l9897:
 29297                           
 29298                           ; BSR set to: 6
 29299                           ;fatfs/ff.c: 1193:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) != F
      +                          R_OK) break;
 29300   01433E  C622  F600         	movff	get_fat@fs,move_window@fs
 29301   014342  C623  F601         	movff	get_fat@fs+1,move_window@fs+1
 29302   014346  EE20 F020          	lfsr	2,32
 29303   01434A  5122               	movf	get_fat@fs& (0+255),w,b
 29304   01434C  26D9               	addwf	fsr2l,f,c
 29305   01434E  5123               	movf	(get_fat@fs+1)& (0+255),w,b
 29306   014350  22DA               	addwfc	fsr2h,f,c
 29307   014352  C4DE F610          	movff	postinc2,??_get_fat
 29308   014356  C4DE F611          	movff	postinc2,??_get_fat+1
 29309   01435A  C4DE F612          	movff	postinc2,??_get_fat+2
 29310   01435E  C4DE F613          	movff	postinc2,??_get_fat+3
 29311   014362  C60C  F614         	movff	get_fat@clst,??_get_fat+4
 29312   014366  C60D  F615         	movff	get_fat@clst+1,??_get_fat+5
 29313   01436A  C60E  F616         	movff	get_fat@clst+2,??_get_fat+6
 29314   01436E  C60F  F617         	movff	get_fat@clst+3,??_get_fat+7
 29315   014372  0E08               	movlw	8
 29316   014374  D005               	goto	u11470
 29317   014376                     u11475:
 29318   014376  90D8               	bcf	status,0,c
 29319   014378  3317               	rrcf	(??_get_fat+7)& (0+255),f,b
 29320   01437A  3316               	rrcf	(??_get_fat+6)& (0+255),f,b
 29321   01437C  3315               	rrcf	(??_get_fat+5)& (0+255),f,b
 29322   01437E  3314               	rrcf	(??_get_fat+4)& (0+255),f,b
 29323   014380                     u11470:
 29324   014380  2EE8               	decfsz	wreg,f,c
 29325   014382  D7F9               	goto	u11475
 29326   014384  5110               	movf	??_get_fat& (0+255),w,b
 29327   014386  2514               	addwf	(??_get_fat+4)& (0+255),w,b
 29328   014388  6F02               	movwf	move_window@sect& (0+255),b
 29329   01438A  5111               	movf	(??_get_fat+1)& (0+255),w,b
 29330   01438C  2115               	addwfc	(??_get_fat+5)& (0+255),w,b
 29331   01438E  6F03               	movwf	(move_window@sect+1)& (0+255),b
 29332   014390  5112               	movf	(??_get_fat+2)& (0+255),w,b
 29333   014392  2116               	addwfc	(??_get_fat+6)& (0+255),w,b
 29334   014394  6F04               	movwf	(move_window@sect+2)& (0+255),b
 29335   014396  5113               	movf	(??_get_fat+3)& (0+255),w,b
 29336   014398  2117               	addwfc	(??_get_fat+7)& (0+255),w,b
 29337   01439A  6F05               	movwf	(move_window@sect+3)& (0+255),b
 29338   01439C  EC23  F0C4         	call	_move_window	;wreg free
 29339   0143A0  0900               	iorlw	0
 29340   0143A2  A4D8               	btfss	status,2,c
 29341   0143A4  D03B               	goto	l229
 29342                           
 29343                           ; BSR set to: 5
 29344                           ;fatfs/ff.c: 1194:    val = ld_dword(fs->win + clst * 4 % ((UINT)512)) & 0x0FFFFFFF;
 29345   0143A6  C60C  F610         	movff	get_fat@clst,??_get_fat
 29346   0143AA  C60D  F611         	movff	get_fat@clst+1,??_get_fat+1
 29347   0143AE  0106               	movlb	6	; () banked
 29348   0143B0  90D8               	bcf	status,0,c
 29349   0143B2  3710               	rlcf	??_get_fat& (0+255),f,b
 29350   0143B4  3711               	rlcf	(??_get_fat+1)& (0+255),f,b
 29351   0143B6  90D8               	bcf	status,0,c
 29352   0143B8  3710               	rlcf	??_get_fat& (0+255),f,b
 29353   0143BA  3711               	rlcf	(??_get_fat+1)& (0+255),f,b
 29354   0143BC  0EFF               	movlw	255
 29355   0143BE  1510               	andwf	??_get_fat& (0+255),w,b
 29356   0143C0  6F12               	movwf	(??_get_fat+2)& (0+255),b
 29357   0143C2  0E01               	movlw	1
 29358   0143C4  1511               	andwf	(??_get_fat+1)& (0+255),w,b
 29359   0143C6  6F13               	movwf	(??_get_fat+3)& (0+255),b
 29360   0143C8  5112               	movf	(??_get_fat+2)& (0+255),w,b
 29361   0143CA  2522               	addwf	get_fat@fs& (0+255),w,b
 29362   0143CC  6F14               	movwf	(??_get_fat+4)& (0+255),b
 29363   0143CE  5113               	movf	(??_get_fat+3)& (0+255),w,b
 29364   0143D0  2123               	addwfc	(get_fat@fs+1)& (0+255),w,b
 29365   0143D2  6F15               	movwf	(??_get_fat+5)& (0+255),b
 29366   0143D4  0E30               	movlw	48
 29367   0143D6  2514               	addwf	(??_get_fat+4)& (0+255),w,b
 29368   0143D8  6E01               	movwf	ld_dword@ptr^(0+1280),c
 29369   0143DA  0E00               	movlw	0
 29370   0143DC  2115               	addwfc	(??_get_fat+5)& (0+255),w,b
 29371   0143DE  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 29372   0143E0  ECDE  F0C4         	call	_ld_dword	;wreg free
 29373   0143E4  0EFF               	movlw	255
 29374   0143E6  1401               	andwf	?_ld_dword^(0+1280),w,c
 29375   0143E8  6F1A               	movwf	get_fat@val& (0+255),b
 29376   0143EA  0EFF               	movlw	255
 29377   0143EC  1402               	andwf	(?_ld_dword+1)^(0+1280),w,c
 29378   0143EE  6F1B               	movwf	(get_fat@val+1)& (0+255),b
 29379   0143F0  0EFF               	movlw	255
 29380   0143F2  1403               	andwf	(?_ld_dword+2)^(0+1280),w,c
 29381   0143F4  6F1C               	movwf	(get_fat@val+2)& (0+255),b
 29382   0143F6  0E0F               	movlw	15
 29383   0143F8  1404               	andwf	(?_ld_dword+3)^(0+1280),w,c
 29384   0143FA                     L14:
 29385   0143FA  6F1D               	movwf	(get_fat@val+3)& (0+255),b
 29386                           
 29387                           ;fatfs/ff.c: 1195:    break;
 29388   0143FC  D00F               	goto	l229
 29389   0143FE                     l9905:
 29390                           
 29391                           ; BSR set to: 6
 29392   0143FE  C622  F4D9         	movff	get_fat@fs,fsr2l
 29393   014402  C623  F4DA         	movff	get_fat@fs+1,fsr2h
 29394   014406  50DF               	movf	indf2,w,c
 29395                           
 29396                           ; Switch size 1, requested type "simple"
 29397                           ; Number of cases is 3, Range of values is 1 to 3
 29398                           ; switch strategies available:
 29399                           ; Name         Instructions Cycles
 29400                           ; simple_byte           10     6 (average)
 29401                           ;	Chosen strategy is simple_byte
 29402   014408  0A01               	xorlw	1	; case 1
 29403   01440A  B4D8               	btfsc	status,2,c
 29404   01440C  D68E               	goto	l231
 29405   01440E  0A03               	xorlw	3	; case 2
 29406   014410  B4D8               	btfsc	status,2,c
 29407   014412  D747               	goto	l9891
 29408   014414  0A01               	xorlw	1	; case 3
 29409   014416  B4D8               	btfsc	status,2,c
 29410   014418  D792               	goto	l9897
 29411   01441A  D67A               	goto	u11390
 29412   01441C                     l229:
 29413                           
 29414                           ;fatfs/ff.c: 1228:  return val;
 29415   01441C  C61A  F60A         	movff	get_fat@val,?_get_fat
 29416   014420  C61B  F60B         	movff	get_fat@val+1,?_get_fat+1
 29417   014424  C61C  F60C         	movff	get_fat@val+2,?_get_fat+2
 29418   014428  C61D  F60D         	movff	get_fat@val+3,?_get_fat+3
 29419   01442C  0012               	return		;funcret
 29420   01442E                     __end_of_get_fat:
 29421                           	callstack 0
 29422                           
 29423 ;; *************** function _move_window *****************
 29424 ;; Defined at:
 29425 ;;		line 1077 in file "fatfs/ff.c"
 29426 ;; Parameters:    Size  Location     Type
 29427 ;;  fs              2    0[BANK6 ] PTR struct .
 29428 ;;		 -> fs(560), NULL(0), 
 29429 ;;  sect            4    2[BANK6 ] unsigned long 
 29430 ;; Auto vars:     Size  Location     Type
 29431 ;;  res             1  159[BANK5 ] enum E275
 29432 ;; Return value:  Size  Location     Type
 29433 ;;                  1    wreg      enum E275
 29434 ;; Registers used:
 29435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29436 ;; Tracked objects:
 29437 ;;		On entry : 3F/6
 29438 ;;		On exit  : 3F/5
 29439 ;;		Unchanged: 0/0
 29440 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29441 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29443 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29444 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29445 ;;Total ram usage:       11 bytes
 29446 ;; Hardware stack levels used: 1
 29447 ;; Hardware stack levels required when called: 12
 29448 ;; This function calls:
 29449 ;;		_disk_read
 29450 ;;		_sync_window
 29451 ;; This function is called by:
 29452 ;;		_get_fat
 29453 ;;		_put_fat
 29454 ;;		_dir_alloc
 29455 ;;		_dir_read
 29456 ;;		_dir_find
 29457 ;;		_dir_register
 29458 ;;		_check_fs
 29459 ;;		_mount_volume
 29460 ;;		_f_open
 29461 ;;		_f_sync
 29462 ;; This function uses a non-reentrant model
 29463 ;;
 29464                           
 29465                           	psect	text56
 29466   018846                     __ptext56:
 29467                           	callstack 0
 29468   018846                     _move_window:
 29469                           	callstack 110
 29470                           
 29471                           ; BSR set to: 6
 29472                           ;fatfs/ff.c: 1078:  FATFS* fs,;fatfs/ff.c: 1079:  LBA_t sect;fatfs/ff.c: 1081: {;fatfs/f
      +                          f.c: 1082:  FRESULT res = FR_OK;
 29473                           
 29474                           ;incstack = 0
 29475   018846  0E00               	movlw	0
 29476   018848  0105               	movlb	5	; () banked
 29477   01884A  6FFF               	movwf	move_window@res& (0+255),b
 29478                           
 29479                           ; BSR set to: 5
 29480                           ;fatfs/ff.c: 1085:  if (sect != fs->winsect) {
 29481   01884C  0106               	movlb	6	; () banked
 29482   01884E  EE20 F02C          	lfsr	2,44
 29483   018852  5100               	movf	move_window@fs& (0+255),w,b
 29484   018854  26D9               	addwf	fsr2l,f,c
 29485   018856  5101               	movf	(move_window@fs+1)& (0+255),w,b
 29486   018858  22DA               	addwfc	fsr2h,f,c
 29487   01885A  5102               	movf	move_window@sect& (0+255),w,b
 29488   01885C  18DE               	xorwf	postinc2,w,c
 29489   01885E  E10A               	bnz	u11310
 29490   018860  5103               	movf	(move_window@sect+1)& (0+255),w,b
 29491   018862  18DE               	xorwf	postinc2,w,c
 29492   018864  E107               	bnz	u11310
 29493   018866  5104               	movf	(move_window@sect+2)& (0+255),w,b
 29494   018868  18DE               	xorwf	postinc2,w,c
 29495   01886A  E104               	bnz	u11310
 29496   01886C  5105               	movf	(move_window@sect+3)& (0+255),w,b
 29497   01886E  18DE               	xorwf	postinc2,w,c
 29498   018870  B4D8               	btfsc	status,2,c
 29499   018872  D044               	goto	l9825
 29500   018874                     u11310:
 29501                           
 29502                           ; BSR set to: 6
 29503                           ;fatfs/ff.c: 1087:   res = sync_window(fs);
 29504   018874  C600  F5ED         	movff	move_window@fs,sync_window@fs
 29505   018878  C601  F5EE         	movff	move_window@fs+1,sync_window@fs+1
 29506   01887C  ECEF  F0B7         	call	_sync_window	;wreg free
 29507   018880  6FFF               	movwf	move_window@res& (0+255),b
 29508                           
 29509                           ; BSR set to: 5
 29510                           ;fatfs/ff.c: 1089:   if (res == FR_OK) {
 29511   018882  51FF               	movf	move_window@res& (0+255),w,b
 29512   018884  A4D8               	btfss	status,2,c
 29513   018886  D03A               	goto	l9825
 29514                           
 29515                           ; BSR set to: 5
 29516                           ;fatfs/ff.c: 1090:    if (disk_read(fs->pdrv, fs->win, sect, 1) != RES_OK) {
 29517   018888  0E30               	movlw	48
 29518   01888A  0106               	movlb	6	; () banked
 29519   01888C  2500               	addwf	move_window@fs& (0+255),w,b
 29520   01888E  0105               	movlb	5	; () banked
 29521   018890  6FE4               	movwf	disk_read@buff& (0+255),b
 29522   018892  0E00               	movlw	0
 29523   018894  0106               	movlb	6	; () banked
 29524   018896  2101               	addwfc	(move_window@fs+1)& (0+255),w,b
 29525   018898  0105               	movlb	5	; () banked
 29526   01889A  6FE5               	movwf	(disk_read@buff+1)& (0+255),b
 29527   01889C  C602  F5E6         	movff	move_window@sect,disk_read@sector
 29528   0188A0  C603  F5E7         	movff	move_window@sect+1,disk_read@sector+1
 29529   0188A4  C604  F5E8         	movff	move_window@sect+2,disk_read@sector+2
 29530   0188A8  C605  F5E9         	movff	move_window@sect+3,disk_read@sector+3
 29531   0188AC  0E00               	movlw	0
 29532   0188AE  6FEB               	movwf	(disk_read@count+1)& (0+255),b
 29533   0188B0  0E01               	movlw	1
 29534   0188B2  6FEA               	movwf	disk_read@count& (0+255),b
 29535   0188B4  0106               	movlb	6	; () banked
 29536   0188B6  EE20 F001          	lfsr	2,1
 29537   0188BA  5100               	movf	move_window@fs& (0+255),w,b
 29538   0188BC  26D9               	addwf	fsr2l,f,c
 29539   0188BE  5101               	movf	(move_window@fs+1)& (0+255),w,b
 29540   0188C0  22DA               	addwfc	fsr2h,f,c
 29541   0188C2  50DF               	movf	indf2,w,c
 29542   0188C4  EC52  F0C9         	call	_disk_read
 29543   0188C8  0900               	iorlw	0
 29544   0188CA  B4D8               	btfsc	status,2,c
 29545   0188CC  D008               	goto	l9823
 29546                           
 29547                           ; BSR set to: 5
 29548                           ;fatfs/ff.c: 1091:     sect = (LBA_t)0 - 1;
 29549   0188CE  0106               	movlb	6	; () banked
 29550   0188D0  6902               	setf	move_window@sect& (0+255),b
 29551   0188D2  6903               	setf	(move_window@sect+1)& (0+255),b
 29552   0188D4  6904               	setf	(move_window@sect+2)& (0+255),b
 29553   0188D6  6905               	setf	(move_window@sect+3)& (0+255),b
 29554                           
 29555                           ; BSR set to: 6
 29556                           ;fatfs/ff.c: 1092:     res = FR_DISK_ERR;
 29557   0188D8  0E01               	movlw	1
 29558   0188DA  0105               	movlb	5	; () banked
 29559   0188DC  6FFF               	movwf	move_window@res& (0+255),b
 29560   0188DE                     l9823:
 29561                           
 29562                           ; BSR set to: 5
 29563                           ;fatfs/ff.c: 1094:    fs->winsect = sect;
 29564   0188DE  0106               	movlb	6	; () banked
 29565   0188E0  EE20 F02C          	lfsr	2,44
 29566   0188E4  5100               	movf	move_window@fs& (0+255),w,b
 29567   0188E6  26D9               	addwf	fsr2l,f,c
 29568   0188E8  5101               	movf	(move_window@fs+1)& (0+255),w,b
 29569   0188EA  22DA               	addwfc	fsr2h,f,c
 29570   0188EC  C602  F4DE         	movff	move_window@sect,postinc2
 29571   0188F0  C603  F4DE         	movff	move_window@sect+1,postinc2
 29572   0188F4  C604  F4DE         	movff	move_window@sect+2,postinc2
 29573   0188F8  C605  F4DE         	movff	move_window@sect+3,postinc2
 29574   0188FC                     l9825:
 29575                           
 29576                           ;fatfs/ff.c: 1097:  return res;
 29577   0188FC  0105               	movlb	5	; () banked
 29578   0188FE  51FF               	movf	move_window@res& (0+255),w,b
 29579                           
 29580                           ; BSR set to: 5
 29581   018900  0012               	return		;funcret
 29582   018902                     __end_of_move_window:
 29583                           	callstack 0
 29584                           
 29585 ;; *************** function _sync_window *****************
 29586 ;; Defined at:
 29587 ;;		line 1055 in file "fatfs/ff.c"
 29588 ;; Parameters:    Size  Location     Type
 29589 ;;  fs              2  141[BANK5 ] PTR struct .
 29590 ;;		 -> fs(560), NULL(0), 
 29591 ;; Auto vars:     Size  Location     Type
 29592 ;;  res             1   94[COMRAM] enum E275
 29593 ;; Return value:  Size  Location     Type
 29594 ;;                  1    wreg      enum E275
 29595 ;; Registers used:
 29596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29597 ;; Tracked objects:
 29598 ;;		On entry : 3F/6
 29599 ;;		On exit  : 3F/5
 29600 ;;		Unchanged: 0/0
 29601 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29602 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29604 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29605 ;;      Totals:         1      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29606 ;;Total ram usage:       19 bytes
 29607 ;; Hardware stack levels used: 1
 29608 ;; Hardware stack levels required when called: 11
 29609 ;; This function calls:
 29610 ;;		_disk_write
 29611 ;; This function is called by:
 29612 ;;		_move_window
 29613 ;;		_sync_fs
 29614 ;;		_dir_clear
 29615 ;; This function uses a non-reentrant model
 29616 ;;
 29617                           
 29618                           	psect	text57
 29619   016FDE                     __ptext57:
 29620                           	callstack 0
 29621   016FDE                     _sync_window:
 29622                           	callstack 110
 29623                           
 29624                           ; BSR set to: 6
 29625                           ;fatfs/ff.c: 1056:  FATFS* fs;fatfs/ff.c: 1058: {;fatfs/ff.c: 1059:  FRESULT res = FR_OK
      +                          ;
 29626                           
 29627                           ; BSR set to: 5
 29628                           ;incstack = 0
 29629   016FDE  0E00               	movlw	0
 29630   016FE0  6E5F               	movwf	sync_window@res^(0+1280),c
 29631                           
 29632                           ; BSR set to: 6
 29633                           ;fatfs/ff.c: 1062:  if (fs->wflag) {
 29634   016FE2  0105               	movlb	5	; () banked
 29635   016FE4  EE20 F004          	lfsr	2,4
 29636   016FE8  51ED               	movf	sync_window@fs& (0+255),w,b
 29637   016FEA  26D9               	addwf	fsr2l,f,c
 29638   016FEC  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29639   016FEE  22DA               	addwfc	fsr2h,f,c
 29640   016FF0  50DF               	movf	indf2,w,c
 29641   016FF2  B4D8               	btfsc	status,2,c
 29642   016FF4  D0AB               	goto	l202
 29643                           
 29644                           ; BSR set to: 5
 29645                           ;fatfs/ff.c: 1063:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {
 29646   016FF6  0E30               	movlw	48
 29647   016FF8  25ED               	addwf	sync_window@fs& (0+255),w,b
 29648   016FFA  6FE2               	movwf	disk_write@buff& (0+255),b
 29649   016FFC  0E00               	movlw	0
 29650   016FFE  21EE               	addwfc	(sync_window@fs+1)& (0+255),w,b
 29651   017000  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 29652   017002  EE20 F02C          	lfsr	2,44
 29653   017006  51ED               	movf	sync_window@fs& (0+255),w,b
 29654   017008  26D9               	addwf	fsr2l,f,c
 29655   01700A  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29656   01700C  22DA               	addwfc	fsr2h,f,c
 29657   01700E  C4DE F5E4          	movff	postinc2,disk_write@sector
 29658   017012  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 29659   017016  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 29660   01701A  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 29661   01701E  0E00               	movlw	0
 29662   017020  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 29663   017022  0E01               	movlw	1
 29664   017024  6FE8               	movwf	disk_write@count& (0+255),b
 29665   017026  EE20 F001          	lfsr	2,1
 29666   01702A  51ED               	movf	sync_window@fs& (0+255),w,b
 29667   01702C  26D9               	addwf	fsr2l,f,c
 29668   01702E  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29669   017030  22DA               	addwfc	fsr2h,f,c
 29670   017032  50DF               	movf	indf2,w,c
 29671   017034  EC11  F0C9         	call	_disk_write
 29672   017038  0900               	iorlw	0
 29673   01703A  A4D8               	btfss	status,2,c
 29674   01703C  D085               	goto	l9767
 29675                           
 29676                           ; BSR set to: 5
 29677                           ;fatfs/ff.c: 1064:    fs->wflag = 0;
 29678   01703E  EE20 F004          	lfsr	2,4
 29679   017042  51ED               	movf	sync_window@fs& (0+255),w,b
 29680   017044  26D9               	addwf	fsr2l,f,c
 29681   017046  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29682   017048  22DA               	addwfc	fsr2h,f,c
 29683   01704A  6ADF               	clrf	indf2,c
 29684                           
 29685                           ; BSR set to: 5
 29686                           ;fatfs/ff.c: 1065:    if (fs->winsect - fs->fatbase < fs->fsize) {
 29687   01704C  EE20 F018          	lfsr	2,24
 29688   017050  51ED               	movf	sync_window@fs& (0+255),w,b
 29689   017052  26D9               	addwf	fsr2l,f,c
 29690   017054  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29691   017056  22DA               	addwfc	fsr2h,f,c
 29692   017058  EE10 F020          	lfsr	1,32
 29693   01705C  51ED               	movf	sync_window@fs& (0+255),w,b
 29694   01705E  26E1               	addwf	fsr1l,f,c
 29695   017060  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29696   017062  22E2               	addwfc	fsr1h,f,c
 29697   017064  C4E6 F5F3          	movff	postinc1,??_sync_window+4
 29698   017068  C4E6 F5F4          	movff	postinc1,??_sync_window+5
 29699   01706C  C4E6 F5F5          	movff	postinc1,??_sync_window+6
 29700   017070  C4E6 F5F6          	movff	postinc1,??_sync_window+7
 29701   017074  EE10 F02C          	lfsr	1,44
 29702   017078  51ED               	movf	sync_window@fs& (0+255),w,b
 29703   01707A  26E1               	addwf	fsr1l,f,c
 29704   01707C  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29705   01707E  22E2               	addwfc	fsr1h,f,c
 29706   017080  C4E6 F5F7          	movff	postinc1,??_sync_window+8
 29707   017084  C4E6 F5F8          	movff	postinc1,??_sync_window+9
 29708   017088  C4E6 F5F9          	movff	postinc1,??_sync_window+10
 29709   01708C  C4E6 F5FA          	movff	postinc1,??_sync_window+11
 29710   017090  51F3               	movf	(??_sync_window+4)& (0+255),w,b
 29711   017092  5DF7               	subwf	(??_sync_window+8)& (0+255),w,b
 29712   017094  6FFB               	movwf	(??_sync_window+12)& (0+255),b
 29713   017096  51F4               	movf	(??_sync_window+5)& (0+255),w,b
 29714   017098  59F8               	subwfb	(??_sync_window+9)& (0+255),w,b
 29715   01709A  6FFC               	movwf	(??_sync_window+13)& (0+255),b
 29716   01709C  51F5               	movf	(??_sync_window+6)& (0+255),w,b
 29717   01709E  59F9               	subwfb	(??_sync_window+10)& (0+255),w,b
 29718   0170A0  6FFD               	movwf	(??_sync_window+14)& (0+255),b
 29719   0170A2  51F6               	movf	(??_sync_window+7)& (0+255),w,b
 29720   0170A4  59FA               	subwfb	(??_sync_window+11)& (0+255),w,b
 29721   0170A6  6FFE               	movwf	(??_sync_window+15)& (0+255),b
 29722   0170A8  50DE               	movf	postinc2,w,c
 29723   0170AA  5DFB               	subwf	(??_sync_window+12)& (0+255),w,b
 29724   0170AC  50DE               	movf	postinc2,w,c
 29725   0170AE  59FC               	subwfb	(??_sync_window+13)& (0+255),w,b
 29726   0170B0  50DE               	movf	postinc2,w,c
 29727   0170B2  59FD               	subwfb	(??_sync_window+14)& (0+255),w,b
 29728   0170B4  50DE               	movf	postinc2,w,c
 29729   0170B6  59FE               	subwfb	(??_sync_window+15)& (0+255),w,b
 29730   0170B8  B0D8               	btfsc	status,0,c
 29731   0170BA  D048               	goto	l202
 29732                           
 29733                           ; BSR set to: 5
 29734                           ;fatfs/ff.c: 1066:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + 
      +                          fs->fsize, 1);
 29735   0170BC  EE20 F003          	lfsr	2,3
 29736   0170C0  51ED               	movf	sync_window@fs& (0+255),w,b
 29737   0170C2  26D9               	addwf	fsr2l,f,c
 29738   0170C4  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29739   0170C6  22DA               	addwfc	fsr2h,f,c
 29740   0170C8  0E02               	movlw	2
 29741   0170CA  18DE               	xorwf	postinc2,w,c
 29742   0170CC  A4D8               	btfss	status,2,c
 29743   0170CE  D03E               	goto	l202
 29744                           
 29745                           ; BSR set to: 5
 29746   0170D0  0E30               	movlw	48
 29747   0170D2  25ED               	addwf	sync_window@fs& (0+255),w,b
 29748   0170D4  6FE2               	movwf	disk_write@buff& (0+255),b
 29749   0170D6  0E00               	movlw	0
 29750   0170D8  21EE               	addwfc	(sync_window@fs+1)& (0+255),w,b
 29751   0170DA  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 29752   0170DC  EE20 F018          	lfsr	2,24
 29753   0170E0  51ED               	movf	sync_window@fs& (0+255),w,b
 29754   0170E2  26D9               	addwf	fsr2l,f,c
 29755   0170E4  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29756   0170E6  22DA               	addwfc	fsr2h,f,c
 29757   0170E8  C4DE F5EF          	movff	postinc2,??_sync_window
 29758   0170EC  C4DE F5F0          	movff	postinc2,??_sync_window+1
 29759   0170F0  C4DE F5F1          	movff	postinc2,??_sync_window+2
 29760   0170F4  C4DE F5F2          	movff	postinc2,??_sync_window+3
 29761   0170F8  EE20 F02C          	lfsr	2,44
 29762   0170FC  51ED               	movf	sync_window@fs& (0+255),w,b
 29763   0170FE  26D9               	addwf	fsr2l,f,c
 29764   017100  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29765   017102  22DA               	addwfc	fsr2h,f,c
 29766   017104  C4DE F5F3          	movff	postinc2,??_sync_window+4
 29767   017108  C4DE F5F4          	movff	postinc2,??_sync_window+5
 29768   01710C  C4DE F5F5          	movff	postinc2,??_sync_window+6
 29769   017110  C4DE F5F6          	movff	postinc2,??_sync_window+7
 29770   017114  51EF               	movf	??_sync_window& (0+255),w,b
 29771   017116  25F3               	addwf	(??_sync_window+4)& (0+255),w,b
 29772   017118  6FE4               	movwf	disk_write@sector& (0+255),b
 29773   01711A  51F0               	movf	(??_sync_window+1)& (0+255),w,b
 29774   01711C  21F4               	addwfc	(??_sync_window+5)& (0+255),w,b
 29775   01711E  6FE5               	movwf	(disk_write@sector+1)& (0+255),b
 29776   017120  51F1               	movf	(??_sync_window+2)& (0+255),w,b
 29777   017122  21F5               	addwfc	(??_sync_window+6)& (0+255),w,b
 29778   017124  6FE6               	movwf	(disk_write@sector+2)& (0+255),b
 29779   017126  51F2               	movf	(??_sync_window+3)& (0+255),w,b
 29780   017128  21F6               	addwfc	(??_sync_window+7)& (0+255),w,b
 29781   01712A  6FE7               	movwf	(disk_write@sector+3)& (0+255),b
 29782   01712C  0E00               	movlw	0
 29783   01712E  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 29784   017130  0E01               	movlw	1
 29785   017132  6FE8               	movwf	disk_write@count& (0+255),b
 29786   017134  EE20 F001          	lfsr	2,1
 29787   017138  51ED               	movf	sync_window@fs& (0+255),w,b
 29788   01713A  26D9               	addwf	fsr2l,f,c
 29789   01713C  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29790   01713E  22DA               	addwfc	fsr2h,f,c
 29791   017140  50DF               	movf	indf2,w,c
 29792   017142  EC11  F0C9         	call	_disk_write
 29793   017146  D002               	goto	l202
 29794   017148                     l9767:
 29795                           
 29796                           ; BSR set to: 5
 29797                           ;fatfs/ff.c: 1069:    res = FR_DISK_ERR;
 29798   017148  0E01               	movlw	1
 29799   01714A  6E5F               	movwf	sync_window@res^(0+1280),c
 29800   01714C                     l202:
 29801                           
 29802                           ; BSR set to: 5
 29803                           ;fatfs/ff.c: 1072:  return res;
 29804   01714C  505F               	movf	sync_window@res^(0+1280),w,c
 29805                           
 29806                           ; BSR set to: 5
 29807   01714E  0012               	return		;funcret
 29808   017150                     __end_of_sync_window:
 29809                           	callstack 0
 29810                           
 29811 ;; *************** function _disk_write *****************
 29812 ;; Defined at:
 29813 ;;		line 130 in file "drivers/diskio.c"
 29814 ;; Parameters:    Size  Location     Type
 29815 ;;  pdrv            1    wreg     unsigned char 
 29816 ;;  buff            2  130[BANK5 ] PTR const unsigned char 
 29817 ;;		 -> files$buf(512), fs$win(512), disk_buf(128), files(3276), 
 29818 ;;		 -> fs(560), NULL(0), 
 29819 ;;  sector          4  132[BANK5 ] unsigned long 
 29820 ;;  count           2  136[BANK5 ] unsigned int 
 29821 ;; Auto vars:     Size  Location     Type
 29822 ;;  pdrv            1  138[BANK5 ] unsigned char 
 29823 ;;  i               2  139[BANK5 ] int 
 29824 ;; Return value:  Size  Location     Type
 29825 ;;                  1    wreg      enum E17647
 29826 ;; Registers used:
 29827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29828 ;; Tracked objects:
 29829 ;;		On entry : 3C/6
 29830 ;;		On exit  : 3F/5
 29831 ;;		Unchanged: 0/0
 29832 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29833 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29834 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29836 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29837 ;;Total ram usage:       11 bytes
 29838 ;; Hardware stack levels used: 1
 29839 ;; Hardware stack levels required when called: 10
 29840 ;; This function calls:
 29841 ;;		_SDCard_write512
 29842 ;;		_printf
 29843 ;;		_util_addrdump
 29844 ;; This function is called by:
 29845 ;;		_sync_window
 29846 ;;		_sync_fs
 29847 ;;		_dir_clear
 29848 ;;		_f_read
 29849 ;;		_f_write
 29850 ;;		_f_sync
 29851 ;;		_f_lseek
 29852 ;; This function uses a non-reentrant model
 29853 ;;
 29854                           
 29855                           	psect	text58
 29856   019222                     __ptext58:
 29857                           	callstack 0
 29858   019222                     _disk_write:
 29859                           	callstack 110
 29860                           
 29861                           ;drivers/diskio.c: 134:     for (int i = 0; i < count; i++) {
 29862                           
 29863                           ; BSR set to: 5
 29864                           ;incstack = 0
 29865                           ;drivers/diskio.c: 130: DRESULT disk_write(BYTE pdrv, const BYTE* buff, LBA_t sector, UI
      +                          NT count);drivers/diskio.c: 131: {;drivers/diskio.c: 132:     do { if (debug_flags & (1 
      +                          << 2)) printf ("disk_write: pdrv=%d, sector=%ld, count=%d\n\r", pdrv, sector, count); } 
      +                          while(0);
 29866   019222  0E00               	movlw	0
 29867   019224  0105               	movlb	5	; () banked
 29868   019226  6FEC               	movwf	(disk_write@i+1)& (0+255),b
 29869   019228  0E00               	movlw	0
 29870   01922A  6FEB               	movwf	disk_write@i& (0+255),b
 29871   01922C  D033               	goto	l9719
 29872   01922E                     l9701:
 29873                           
 29874                           ; BSR set to: 5
 29875                           ;drivers/diskio.c: 135:         if (SDCard_write512(start_lba + sector, 0, buff, 512) !=
      +                           0) {
 29876   01922E  51E4               	movf	disk_write@sector& (0+255),w,b
 29877   019230  0107               	movlb	7	; () banked
 29878   019232  25D4               	addwf	_start_lba& (0+255),w,b
 29879   019234  0105               	movlb	5	; () banked
 29880   019236  6FC7               	movwf	SDCard_write512@addr& (0+255),b
 29881   019238  51E5               	movf	(disk_write@sector+1)& (0+255),w,b
 29882   01923A  0107               	movlb	7	; () banked
 29883   01923C  21D5               	addwfc	(_start_lba+1)& (0+255),w,b
 29884   01923E  0105               	movlb	5	; () banked
 29885   019240  6FC8               	movwf	(SDCard_write512@addr+1)& (0+255),b
 29886   019242  51E6               	movf	(disk_write@sector+2)& (0+255),w,b
 29887   019244  0107               	movlb	7	; () banked
 29888   019246  21D6               	addwfc	(_start_lba+2)& (0+255),w,b
 29889   019248  0105               	movlb	5	; () banked
 29890   01924A  6FC9               	movwf	(SDCard_write512@addr+2)& (0+255),b
 29891   01924C  51E7               	movf	(disk_write@sector+3)& (0+255),w,b
 29892   01924E  0107               	movlb	7	; () banked
 29893   019250  21D7               	addwfc	(_start_lba+3)& (0+255),w,b
 29894   019252  0105               	movlb	5	; () banked
 29895   019254  6FCA               	movwf	(SDCard_write512@addr+3)& (0+255),b
 29896   019256  0E00               	movlw	0
 29897   019258  6FCC               	movwf	(SDCard_write512@offs+1)& (0+255),b
 29898   01925A  0E00               	movlw	0
 29899   01925C  6FCB               	movwf	SDCard_write512@offs& (0+255),b
 29900   01925E  C5E2  F5CD         	movff	disk_write@buff,SDCard_write512@buf
 29901   019262  C5E3  F5CE         	movff	disk_write@buff+1,SDCard_write512@buf+1
 29902   019266  0E02               	movlw	2
 29903   019268  6FD0               	movwf	(SDCard_write512@count+1)& (0+255),b
 29904   01926A  0E00               	movlw	0
 29905   01926C  6FCF               	movwf	SDCard_write512@count& (0+255),b
 29906   01926E  ECA7  F0AA         	call	_SDCard_write512	;wreg free
 29907   019272  0105               	movlb	5	; () banked
 29908   019274  51C7               	movf	?_SDCard_write512& (0+255),w,b
 29909   019276  11C8               	iorwf	(?_SDCard_write512+1)& (0+255),w,b
 29910   019278  B4D8               	btfsc	status,2,c
 29911   01927A  D002               	goto	l9713
 29912                           
 29913                           ; BSR set to: 5
 29914                           ;drivers/diskio.c: 137:             return RES_ERROR;
 29915   01927C  0E01               	movlw	1
 29916   01927E  0012               	return	
 29917   019280                     l9713:
 29918                           
 29919                           ; BSR set to: 5
 29920                           ;drivers/diskio.c: 142:         sector++;
 29921   019280  0E01               	movlw	1
 29922   019282  27E4               	addwf	disk_write@sector& (0+255),f,b
 29923   019284  0E00               	movlw	0
 29924   019286  23E5               	addwfc	(disk_write@sector+1)& (0+255),f,b
 29925   019288  23E6               	addwfc	(disk_write@sector+2)& (0+255),f,b
 29926   01928A  23E7               	addwfc	(disk_write@sector+3)& (0+255),f,b
 29927                           
 29928                           ; BSR set to: 5
 29929                           ;drivers/diskio.c: 143:         buff += 512;
 29930   01928C  0E02               	movlw	2
 29931   01928E  27E3               	addwf	(disk_write@buff+1)& (0+255),f,b
 29932                           
 29933                           ; BSR set to: 5
 29934                           ;drivers/diskio.c: 144:     }
 29935   019290  4BEB               	infsnz	disk_write@i& (0+255),f,b
 29936   019292  2BEC               	incf	(disk_write@i+1)& (0+255),f,b
 29937   019294                     l9719:
 29938                           
 29939                           ; BSR set to: 5
 29940   019294  51E8               	movf	disk_write@count& (0+255),w,b
 29941   019296  5DEB               	subwf	disk_write@i& (0+255),w,b
 29942   019298  51E9               	movf	(disk_write@count+1)& (0+255),w,b
 29943   01929A  59EC               	subwfb	(disk_write@i+1)& (0+255),w,b
 29944   01929C  A0D8               	btfss	status,0,c
 29945   01929E  D7C7               	goto	l9701
 29946                           
 29947                           ; BSR set to: 5
 29948                           ;drivers/diskio.c: 146:     return RES_OK;
 29949   0192A0  0E00               	movlw	0
 29950                           
 29951                           ; BSR set to: 5
 29952   0192A2  0012               	return		;funcret
 29953   0192A4                     __end_of_disk_write:
 29954                           	callstack 0
 29955                           
 29956 ;; *************** function _SDCard_write512 *****************
 29957 ;; Defined at:
 29958 ;;		line 237 in file "src/boards/../../drivers/SDCard.c"
 29959 ;; Parameters:    Size  Location     Type
 29960 ;;  addr            4  103[BANK5 ] unsigned long 
 29961 ;;  offs            2  107[BANK5 ] unsigned int 
 29962 ;;  buf             2  109[BANK5 ] PTR const void 
 29963 ;;		 -> files$buf(512), fs$win(512), disk_buf(128), files(3276), 
 29964 ;;		 -> fs(560), NULL(0), 
 29965 ;;  count           2  111[BANK5 ] unsigned int 
 29966 ;; Auto vars:     Size  Location     Type
 29967 ;;  i               2  119[BANK5 ] unsigned int 
 29968 ;;  i               2  117[BANK5 ] int 
 29969 ;;  crc             2  127[BANK5 ] unsigned short 
 29970 ;;  spi             2  125[BANK5 ] PTR struct SPI
 29971 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 29972 ;;  result          2  123[BANK5 ] int 
 29973 ;;  retry           2  121[BANK5 ] int 
 29974 ;;  response        1  129[BANK5 ] unsigned char 
 29975 ;; Return value:  Size  Location     Type
 29976 ;;                  2  103[BANK5 ] int 
 29977 ;; Registers used:
 29978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29979 ;; Tracked objects:
 29980 ;;		On entry : 3F/5
 29981 ;;		On exit  : 0/0
 29982 ;;		Unchanged: 0/0
 29983 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29984 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29985 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29986 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29987 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29988 ;;Total ram usage:       27 bytes
 29989 ;; Hardware stack levels used: 1
 29990 ;; Hardware stack levels required when called: 9
 29991 ;; This function calls:
 29992 ;;		_SDCard_end_transaction
 29993 ;;		_SPI_SD_dummy_clocks
 29994 ;;		_SPI_SD_send
 29995 ;;		___SDCard_command_r1
 29996 ;;		___SDCard_crc16
 29997 ;;		___SDCard_wait_response
 29998 ;;		_printf
 29999 ;;		_util_addrdump
 30000 ;; This function is called by:
 30001 ;;		_disk_write
 30002 ;; This function uses a non-reentrant model
 30003 ;;
 30004                           
 30005                           	psect	text59
 30006   01554E                     __ptext59:
 30007                           	callstack 0
 30008   01554E                     _SDCard_write512:
 30009                           	callstack 110
 30010                           
 30011                           ; BSR set to: 5
 30012                           ;src/boards/../../drivers/SDCard.c: 237: int SDCard_write512(uint32_t addr, unsigned int
      +                           offs, const void *buf, unsigned int count);src/boards/../../drivers/SDCard.c: 238: {;sr
      +                          c/boards/../../drivers/SDCard.c: 239:     struct SPI *spi = ctx_.spi;
 30013                           
 30014                           ; BSR set to: 5
 30015                           ;incstack = 0
 30016   01554E  C706  F5DD         	movff	_ctx_,SDCard_write512@spi
 30017   015552  C707  F5DE         	movff	_ctx_+1,SDCard_write512@spi+1
 30018                           
 30019                           ; BSR set to: 5
 30020                           ;src/boards/../../drivers/SDCard.c: 240:     int result;;src/boards/../../drivers/SDCard
      +                          .c: 241:     uint8_t response;;src/boards/../../drivers/SDCard.c: 242:     uint16_t crc;
      +                          ;src/boards/../../drivers/SDCard.c: 243:     int retry = 5;
 30021   015556  0E00               	movlw	0
 30022   015558  6FDA               	movwf	(SDCard_write512@retry+1)& (0+255),b
 30023   01555A  0E05               	movlw	5
 30024   01555C  6FD9               	movwf	SDCard_write512@retry& (0+255),b
 30025                           
 30026                           ; BSR set to: 5
 30027                           ;src/boards/../../drivers/SDCard.c: 250:     crc = 0;
 30028   01555E  0E00               	movlw	0
 30029   015560  6FE0               	movwf	(SDCard_write512@crc+1)& (0+255),b
 30030   015562  0E00               	movlw	0
 30031   015564  6FDF               	movwf	SDCard_write512@crc& (0+255),b
 30032                           
 30033                           ; BSR set to: 5
 30034                           ;src/boards/../../drivers/SDCard.c: 251:     response = 0xff;
 30035   015566  69E1               	setf	SDCard_write512@response& (0+255),b
 30036                           
 30037                           ; BSR set to: 5
 30038                           ;src/boards/../../drivers/SDCard.c: 252:     for (int i = 0; i < offs; i++) {
 30039   015568  0E00               	movlw	0
 30040   01556A  6FD6               	movwf	(SDCard_write512@i+1)& (0+255),b
 30041   01556C  0E00               	movlw	0
 30042   01556E  6FD5               	movwf	SDCard_write512@i& (0+255),b
 30043   015570  D015               	goto	l9533
 30044   015572                     l9529:
 30045                           
 30046                           ; BSR set to: 5
 30047                           ;src/boards/../../drivers/SDCard.c: 253:         crc = __SDCard_crc16(crc, &response, 1)
      +                          ;
 30048   015572  C5DF  F501         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 30049   015576  C5E0  F502         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 30050   01557A  0EE1               	movlw	low SDCard_write512@response
 30051   01557C  6E03               	movwf	___SDCard_crc16@buf^(0+1280),c
 30052   01557E  0E05               	movlw	high SDCard_write512@response
 30053   015580  6E04               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 30054   015582  0E00               	movlw	0
 30055   015584  6E06               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 30056   015586  0E01               	movlw	1
 30057   015588  6E05               	movwf	___SDCard_crc16@count^(0+1280),c
 30058   01558A  EC96  F0C5         	call	___SDCard_crc16	;wreg free
 30059   01558E  C501  F5DF         	movff	?___SDCard_crc16,SDCard_write512@crc
 30060   015592  C502  F5E0         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 30061                           
 30062                           ;src/boards/../../drivers/SDCard.c: 254:     }
 30063   015596  0105               	movlb	5	; () banked
 30064   015598  4BD5               	infsnz	SDCard_write512@i& (0+255),f,b
 30065   01559A  2BD6               	incf	(SDCard_write512@i+1)& (0+255),f,b
 30066   01559C                     l9533:
 30067                           
 30068                           ; BSR set to: 5
 30069   01559C  51CB               	movf	SDCard_write512@offs& (0+255),w,b
 30070   01559E  5DD5               	subwf	SDCard_write512@i& (0+255),w,b
 30071   0155A0  51CC               	movf	(SDCard_write512@offs+1)& (0+255),w,b
 30072   0155A2  59D6               	subwfb	(SDCard_write512@i+1)& (0+255),w,b
 30073   0155A4  A0D8               	btfss	status,0,c
 30074   0155A6  D7E5               	goto	l9529
 30075                           
 30076                           ; BSR set to: 5
 30077                           ;src/boards/../../drivers/SDCard.c: 255:     crc = __SDCard_crc16(crc, buf, count);
 30078   0155A8  C5DF  F501         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 30079   0155AC  C5E0  F502         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 30080   0155B0  C5CD  F503         	movff	SDCard_write512@buf,___SDCard_crc16@buf
 30081   0155B4  C5CE  F504         	movff	SDCard_write512@buf+1,___SDCard_crc16@buf+1
 30082   0155B8  C5CF  F505         	movff	SDCard_write512@count,___SDCard_crc16@count
 30083   0155BC  C5D0  F506         	movff	SDCard_write512@count+1,___SDCard_crc16@count+1
 30084   0155C0  EC96  F0C5         	call	___SDCard_crc16	;wreg free
 30085   0155C4  C501  F5DF         	movff	?___SDCard_crc16,SDCard_write512@crc
 30086   0155C8  C502  F5E0         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 30087                           
 30088                           ;src/boards/../../drivers/SDCard.c: 256:     for (unsigned int i = 0; i < 512 - offs - c
      +                          ount; i++) {
 30089   0155CC  0E00               	movlw	0
 30090   0155CE  0105               	movlb	5	; () banked
 30091   0155D0  6FD8               	movwf	(SDCard_write512@i_2504+1)& (0+255),b
 30092   0155D2  0E00               	movlw	0
 30093   0155D4  6FD7               	movwf	SDCard_write512@i_2504& (0+255),b
 30094   0155D6  D015               	goto	l9543
 30095   0155D8                     l9539:
 30096                           
 30097                           ; BSR set to: 5
 30098                           ;src/boards/../../drivers/SDCard.c: 257:         crc = __SDCard_crc16(crc, &response, 1)
      +                          ;
 30099   0155D8  C5DF  F501         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 30100   0155DC  C5E0  F502         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 30101   0155E0  0EE1               	movlw	low SDCard_write512@response
 30102   0155E2  6E03               	movwf	___SDCard_crc16@buf^(0+1280),c
 30103   0155E4  0E05               	movlw	high SDCard_write512@response
 30104   0155E6  6E04               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 30105   0155E8  0E00               	movlw	0
 30106   0155EA  6E06               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 30107   0155EC  0E01               	movlw	1
 30108   0155EE  6E05               	movwf	___SDCard_crc16@count^(0+1280),c
 30109   0155F0  EC96  F0C5         	call	___SDCard_crc16	;wreg free
 30110   0155F4  C501  F5DF         	movff	?___SDCard_crc16,SDCard_write512@crc
 30111   0155F8  C502  F5E0         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 30112                           
 30113                           ;src/boards/../../drivers/SDCard.c: 258:     }
 30114   0155FC  0105               	movlb	5	; () banked
 30115   0155FE  4BD7               	infsnz	SDCard_write512@i_2504& (0+255),f,b
 30116   015600  2BD8               	incf	(SDCard_write512@i_2504+1)& (0+255),f,b
 30117   015602                     l9543:
 30118                           
 30119                           ; BSR set to: 5
 30120   015602  C5CB  F5D1         	movff	SDCard_write512@offs,??_SDCard_write512
 30121   015606  C5CC  F5D2         	movff	SDCard_write512@offs+1,??_SDCard_write512+1
 30122   01560A  1FD1               	comf	??_SDCard_write512& (0+255),f,b
 30123   01560C  1FD2               	comf	(??_SDCard_write512+1)& (0+255),f,b
 30124   01560E  4BD1               	infsnz	??_SDCard_write512& (0+255),f,b
 30125   015610  2BD2               	incf	(??_SDCard_write512+1)& (0+255),f,b
 30126   015612  51CF               	movf	SDCard_write512@count& (0+255),w,b
 30127   015614  5FD1               	subwf	??_SDCard_write512& (0+255),f,b
 30128   015616  51D0               	movf	(SDCard_write512@count+1)& (0+255),w,b
 30129   015618  5BD2               	subwfb	(??_SDCard_write512+1)& (0+255),f,b
 30130   01561A  0E00               	movlw	0
 30131   01561C  25D1               	addwf	??_SDCard_write512& (0+255),w,b
 30132   01561E  6FD3               	movwf	(??_SDCard_write512+2)& (0+255),b
 30133   015620  0E02               	movlw	2
 30134   015622  21D2               	addwfc	(??_SDCard_write512+1)& (0+255),w,b
 30135   015624  6FD4               	movwf	(??_SDCard_write512+3)& (0+255),b
 30136   015626  51D3               	movf	(??_SDCard_write512+2)& (0+255),w,b
 30137   015628  5DD7               	subwf	SDCard_write512@i_2504& (0+255),w,b
 30138   01562A  51D4               	movf	(??_SDCard_write512+3)& (0+255),w,b
 30139   01562C  59D8               	subwfb	(SDCard_write512@i_2504+1)& (0+255),w,b
 30140   01562E  A0D8               	btfss	status,0,c
 30141   015630  D7D3               	goto	l9539
 30142   015632                     u11030:
 30143                           
 30144                           ;src/boards/../../drivers/SDCard.c: 261:     result = __SDCard_command_r1(24, addr, &res
      +                          ponse);
 30145   015632  C5C7  F518         	movff	SDCard_write512@addr,___SDCard_command_r1@argument
 30146   015636  C5C8  F519         	movff	SDCard_write512@addr+1,___SDCard_command_r1@argument+1
 30147   01563A  C5C9  F51A         	movff	SDCard_write512@addr+2,___SDCard_command_r1@argument+2
 30148   01563E  C5CA  F51B         	movff	SDCard_write512@addr+3,___SDCard_command_r1@argument+3
 30149   015642  0EE1               	movlw	low SDCard_write512@response
 30150   015644  6E1C               	movwf	___SDCard_command_r1@r1^(0+1280),c
 30151   015646  0E05               	movlw	high SDCard_write512@response
 30152   015648  6E1D               	movwf	(___SDCard_command_r1@r1+1)^(0+1280),c
 30153   01564A  0E18               	movlw	24
 30154   01564C  ECEF  F0C6         	call	___SDCard_command_r1
 30155   015650  C518  F5DB         	movff	?___SDCard_command_r1,SDCard_write512@result
 30156   015654  C519  F5DC         	movff	?___SDCard_command_r1+1,SDCard_write512@result+1
 30157                           
 30158                           ;src/boards/../../drivers/SDCard.c: 262:     if (result != 0) {
 30159   015658  0105               	movlb	5	; () banked
 30160   01565A  51DB               	movf	SDCard_write512@result& (0+255),w,b
 30161   01565C  11DC               	iorwf	(SDCard_write512@result+1)& (0+255),w,b
 30162   01565E  A4D8               	btfss	status,2,c
 30163   015660  D0AA               	goto	l9607
 30164                           
 30165                           ; BSR set to: 5
 30166                           ;src/boards/../../drivers/SDCard.c: 265:     if (response != 0) {
 30167   015662  51E1               	movf	SDCard_write512@response& (0+255),w,b
 30168   015664  B4D8               	btfsc	status,2,c
 30169   015666  D004               	goto	l9555
 30170   015668                     u11050:
 30171                           
 30172                           ; BSR set to: 5
 30173                           ;src/boards/../../drivers/SDCard.c: 266:         result = 3;
 30174   015668  0E00               	movlw	0
 30175   01566A  6FDC               	movwf	(SDCard_write512@result+1)& (0+255),b
 30176   01566C  0E03               	movlw	3
 30177   01566E  D0A2               	goto	L16
 30178   015670                     l9555:
 30179                           
 30180                           ; BSR set to: 5
 30181                           ;src/boards/../../drivers/SDCard.c: 270:     response = 0xfe;
 30182   015670  0EFE               	movlw	254
 30183   015672  6FE1               	movwf	SDCard_write512@response& (0+255),b
 30184                           
 30185                           ; BSR set to: 5
 30186                           ;src/boards/../../drivers/SDCard.c: 271:     SPI_SD_send(spi, &response, 1);
 30187   015674  C5DD  F501         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 30188   015678  C5DE  F502         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 30189   01567C  0EE1               	movlw	low SDCard_write512@response
 30190   01567E  6E03               	movwf	SPI_SD_send@buf^(0+1280),c
 30191   015680  0E05               	movlw	high SDCard_write512@response
 30192   015682  6E04               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 30193   015684  0E00               	movlw	0
 30194   015686  6E06               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 30195   015688  0E01               	movlw	1
 30196   01568A  6E05               	movwf	SPI_SD_send@count^(0+1280),c
 30197   01568C  EC9E  F0CB         	call	_SPI_SD_send	;wreg free
 30198                           
 30199                           ;src/boards/../../drivers/SDCard.c: 272:     SPI_SD_dummy_clocks(spi, offs);
 30200   015690  C5DD  F50B         	movff	SDCard_write512@spi,SPI_SD_dummy_clocks@ctx_
 30201   015694  C5DE  F50C         	movff	SDCard_write512@spi+1,SPI_SD_dummy_clocks@ctx_+1
 30202   015698  C5CB  F50D         	movff	SDCard_write512@offs,SPI_SD_dummy_clocks@clocks
 30203   01569C  C5CC  F50E         	movff	SDCard_write512@offs+1,SPI_SD_dummy_clocks@clocks+1
 30204   0156A0  EC88  F0CC         	call	_SPI_SD_dummy_clocks	;wreg free
 30205                           
 30206                           ;src/boards/../../drivers/SDCard.c: 273:     SPI_SD_send(spi, buf, count);
 30207   0156A4  C5DD  F501         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 30208   0156A8  C5DE  F502         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 30209   0156AC  C5CD  F503         	movff	SDCard_write512@buf,SPI_SD_send@buf
 30210   0156B0  C5CE  F504         	movff	SDCard_write512@buf+1,SPI_SD_send@buf+1
 30211   0156B4  C5CF  F505         	movff	SDCard_write512@count,SPI_SD_send@count
 30212   0156B8  C5D0  F506         	movff	SDCard_write512@count+1,SPI_SD_send@count+1
 30213   0156BC  EC9E  F0CB         	call	_SPI_SD_send	;wreg free
 30214                           
 30215                           ;src/boards/../../drivers/SDCard.c: 274:     SPI_SD_dummy_clocks(spi, 512 - offs - count
      +                          );
 30216   0156C0  C5DD  F50B         	movff	SDCard_write512@spi,SPI_SD_dummy_clocks@ctx_
 30217   0156C4  C5DE  F50C         	movff	SDCard_write512@spi+1,SPI_SD_dummy_clocks@ctx_+1
 30218   0156C8  C5CB  F5D1         	movff	SDCard_write512@offs,??_SDCard_write512
 30219   0156CC  C5CC  F5D2         	movff	SDCard_write512@offs+1,??_SDCard_write512+1
 30220   0156D0  0105               	movlb	5	; () banked
 30221   0156D2  1FD1               	comf	??_SDCard_write512& (0+255),f,b
 30222   0156D4  1FD2               	comf	(??_SDCard_write512+1)& (0+255),f,b
 30223   0156D6  4BD1               	infsnz	??_SDCard_write512& (0+255),f,b
 30224   0156D8  2BD2               	incf	(??_SDCard_write512+1)& (0+255),f,b
 30225   0156DA  51CF               	movf	SDCard_write512@count& (0+255),w,b
 30226   0156DC  5FD1               	subwf	??_SDCard_write512& (0+255),f,b
 30227   0156DE  51D0               	movf	(SDCard_write512@count+1)& (0+255),w,b
 30228   0156E0  5BD2               	subwfb	(??_SDCard_write512+1)& (0+255),f,b
 30229   0156E2  0E00               	movlw	0
 30230   0156E4  25D1               	addwf	??_SDCard_write512& (0+255),w,b
 30231   0156E6  6E0D               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 30232   0156E8  0E02               	movlw	2
 30233   0156EA  21D2               	addwfc	(??_SDCard_write512+1)& (0+255),w,b
 30234   0156EC  6E0E               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 30235   0156EE  EC88  F0CC         	call	_SPI_SD_dummy_clocks	;wreg free
 30236                           
 30237                           ;src/boards/../../drivers/SDCard.c: 275:     response = (crc >> 8) & 0xff;
 30238   0156F2  C5E0  F5E1         	movff	SDCard_write512@crc+1,SDCard_write512@response
 30239                           
 30240                           ;src/boards/../../drivers/SDCard.c: 276:     SPI_SD_send(spi, &response, 1);
 30241   0156F6  C5DD  F501         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 30242   0156FA  C5DE  F502         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 30243   0156FE  0EE1               	movlw	low SDCard_write512@response
 30244   015700  6E03               	movwf	SPI_SD_send@buf^(0+1280),c
 30245   015702  0E05               	movlw	high SDCard_write512@response
 30246   015704  6E04               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 30247   015706  0E00               	movlw	0
 30248   015708  6E06               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 30249   01570A  0E01               	movlw	1
 30250   01570C  6E05               	movwf	SPI_SD_send@count^(0+1280),c
 30251   01570E  EC9E  F0CB         	call	_SPI_SD_send	;wreg free
 30252                           
 30253                           ;src/boards/../../drivers/SDCard.c: 277:     response = crc & 0xff;
 30254   015712  C5DF  F5E1         	movff	SDCard_write512@crc,SDCard_write512@response
 30255                           
 30256                           ;src/boards/../../drivers/SDCard.c: 278:     SPI_SD_send(spi, &response, 1);
 30257   015716  C5DD  F501         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 30258   01571A  C5DE  F502         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 30259   01571E  0EE1               	movlw	low SDCard_write512@response
 30260   015720  6E03               	movwf	SPI_SD_send@buf^(0+1280),c
 30261   015722  0E05               	movlw	high SDCard_write512@response
 30262   015724  6E04               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 30263   015726  0E00               	movlw	0
 30264   015728  6E06               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 30265   01572A  0E01               	movlw	1
 30266   01572C  6E05               	movwf	SPI_SD_send@count^(0+1280),c
 30267   01572E  EC9E  F0CB         	call	_SPI_SD_send	;wreg free
 30268                           
 30269                           ;src/boards/../../drivers/SDCard.c: 280:     response = __SDCard_wait_response(0xff, 300
      +                          0);
 30270   015732  0E0B               	movlw	11
 30271   015734  6E13               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 30272   015736  0EB8               	movlw	184
 30273   015738  6E12               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 30274   01573A  0EFF               	movlw	255
 30275   01573C  ECBB  F0CE         	call	___SDCard_wait_response
 30276   015740  0105               	movlb	5	; () banked
 30277   015742  6FE1               	movwf	SDCard_write512@response& (0+255),b
 30278                           
 30279                           ; BSR set to: 5
 30280                           ;src/boards/../../drivers/SDCard.c: 281:     if (response == 0xff) {
 30281   015744  29E1               	incf	SDCard_write512@response& (0+255),w,b
 30282   015746  A4D8               	btfss	status,2,c
 30283   015748  D004               	goto	l9581
 30284   01574A                     u11060:
 30285                           
 30286                           ; BSR set to: 5
 30287                           ;src/boards/../../drivers/SDCard.c: 283:         result = 1;
 30288   01574A  0E00               	movlw	0
 30289   01574C  6FDC               	movwf	(SDCard_write512@result+1)& (0+255),b
 30290   01574E  0E01               	movlw	1
 30291   015750  D031               	goto	L16
 30292   015752                     l9581:
 30293                           
 30294                           ; BSR set to: 5
 30295                           ;src/boards/../../drivers/SDCard.c: 286:     if ((response & 0x1f) != 0x05) {
 30296   015752  51E1               	movf	SDCard_write512@response& (0+255),w,b
 30297   015754  0B1F               	andlw	31
 30298   015756  0A05               	xorlw	5
 30299   015758  B4D8               	btfsc	status,2,c
 30300   01575A  D01D               	goto	l9597
 30301                           
 30302                           ; BSR set to: 5
 30303                           ;src/boards/../../drivers/SDCard.c: 288:         if ((response & 0x1f) == 0x0b) {
 30304   01575C  51E1               	movf	SDCard_write512@response& (0+255),w,b
 30305   01575E  0B1F               	andlw	31
 30306   015760  0A0B               	xorlw	11
 30307   015762  A4D8               	btfss	status,2,c
 30308   015764  D781               	goto	u11050
 30309                           
 30310                           ; BSR set to: 5
 30311                           ;src/boards/../../drivers/SDCard.c: 290:             if (--retry < 1) {
 30312   015766  07D9               	decf	SDCard_write512@retry& (0+255),f,b
 30313   015768  A0D8               	btfss	status,0,c
 30314   01576A  07DA               	decf	(SDCard_write512@retry+1)& (0+255),f,b
 30315   01576C  BFDA               	btfsc	(SDCard_write512@retry+1)& (0+255),7,b
 30316   01576E  D005               	goto	u11090
 30317   015770  51DA               	movf	(SDCard_write512@retry+1)& (0+255),w,b
 30318   015772  E107               	bnz	l9593
 30319   015774  05D9               	decf	SDCard_write512@retry& (0+255),w,b
 30320   015776  B0D8               	btfsc	status,0,c
 30321   015778  D004               	goto	l9593
 30322   01577A                     u11090:
 30323                           
 30324                           ; BSR set to: 5
 30325                           ;src/boards/../../drivers/SDCard.c: 291:                 result = 4;
 30326   01577A  0E00               	movlw	0
 30327   01577C  6FDC               	movwf	(SDCard_write512@result+1)& (0+255),b
 30328   01577E  0E04               	movlw	4
 30329   015780  D019               	goto	L16
 30330   015782                     l9593:
 30331                           
 30332                           ; BSR set to: 5
 30333                           ;src/boards/../../drivers/SDCard.c: 294:             __SDCard_wait_response(0xff, 30000)
      +                          ;
 30334   015782  0E75               	movlw	117
 30335   015784  6E13               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 30336   015786  0E30               	movlw	48
 30337   015788  6E12               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 30338   01578A  0EFF               	movlw	255
 30339   01578C  ECBB  F0CE         	call	___SDCard_wait_response
 30340                           
 30341                           ;src/boards/../../drivers/SDCard.c: 295:             SDCard_end_transaction();
 30342   015790  EC16  F0CF         	call	_SDCard_end_transaction	;wreg free
 30343                           
 30344                           ;src/boards/../../drivers/SDCard.c: 296:             goto retry;
 30345   015794  D74E               	goto	u11030
 30346   015796                     l9597:
 30347                           
 30348                           ; BSR set to: 5
 30349                           ;src/boards/../../drivers/SDCard.c: 302:     response = __SDCard_wait_response(0x00, 300
      +                          00);
 30350   015796  0E75               	movlw	117
 30351   015798  6E13               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 30352   01579A  0E30               	movlw	48
 30353   01579C  6E12               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 30354   01579E  0E00               	movlw	0
 30355   0157A0  ECBB  F0CE         	call	___SDCard_wait_response
 30356   0157A4  0105               	movlb	5	; () banked
 30357   0157A6  6FE1               	movwf	SDCard_write512@response& (0+255),b
 30358                           
 30359                           ; BSR set to: 5
 30360                           ;src/boards/../../drivers/SDCard.c: 303:     if (response == 0x00) {
 30361   0157A8  51E1               	movf	SDCard_write512@response& (0+255),w,b
 30362   0157AA  B4D8               	btfsc	status,2,c
 30363   0157AC  D7CE               	goto	u11060
 30364                           
 30365                           ; BSR set to: 5
 30366                           ;src/boards/../../drivers/SDCard.c: 309:     result = 0;
 30367   0157AE  0E00               	movlw	0
 30368   0157B0  6FDC               	movwf	(SDCard_write512@result+1)& (0+255),b
 30369   0157B2  0E00               	movlw	0
 30370   0157B4                     L16:
 30371   0157B4  6FDB               	movwf	SDCard_write512@result& (0+255),b
 30372   0157B6                     l9607:
 30373                           
 30374                           ; BSR set to: 5
 30375                           ;src/boards/../../drivers/SDCard.c: 312:     SDCard_end_transaction();
 30376   0157B6  EC16  F0CF         	call	_SDCard_end_transaction	;wreg free
 30377                           
 30378                           ;src/boards/../../drivers/SDCard.c: 313:     return result;
 30379   0157BA  C5DB  F5C7         	movff	SDCard_write512@result,?_SDCard_write512
 30380   0157BE  C5DC  F5C8         	movff	SDCard_write512@result+1,?_SDCard_write512+1
 30381   0157C2  0012               	return		;funcret
 30382   0157C4                     __end_of_SDCard_write512:
 30383                           	callstack 0
 30384                           
 30385 ;; *************** function _disk_read *****************
 30386 ;; Defined at:
 30387 ;;		line 111 in file "drivers/diskio.c"
 30388 ;; Parameters:    Size  Location     Type
 30389 ;;  pdrv            1    wreg     unsigned char 
 30390 ;;  buff            2  132[BANK5 ] PTR unsigned char 
 30391 ;;		 -> disk_buf(128), files(3276), fs(560), NULL(0), 
 30392 ;;  sector          4  134[BANK5 ] unsigned long 
 30393 ;;  count           2  138[BANK5 ] unsigned int 
 30394 ;; Auto vars:     Size  Location     Type
 30395 ;;  pdrv            1  140[BANK5 ] unsigned char 
 30396 ;;  i               2  141[BANK5 ] int 
 30397 ;; Return value:  Size  Location     Type
 30398 ;;                  1    wreg      enum E17647
 30399 ;; Registers used:
 30400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30401 ;; Tracked objects:
 30402 ;;		On entry : 3F/6
 30403 ;;		On exit  : 3F/5
 30404 ;;		Unchanged: 0/0
 30405 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 30406 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30407 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30409 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30410 ;;Total ram usage:       11 bytes
 30411 ;; Hardware stack levels used: 1
 30412 ;; Hardware stack levels required when called: 10
 30413 ;; This function calls:
 30414 ;;		_SDCard_read512
 30415 ;;		_printf
 30416 ;;		_util_addrdump
 30417 ;; This function is called by:
 30418 ;;		_move_window
 30419 ;;		_f_open
 30420 ;;		_f_read
 30421 ;;		_f_write
 30422 ;;		_f_lseek
 30423 ;; This function uses a non-reentrant model
 30424 ;;
 30425                           
 30426                           	psect	text60
 30427   0192A4                     __ptext60:
 30428                           	callstack 0
 30429   0192A4                     _disk_read:
 30430                           	callstack 111
 30431                           
 30432                           ; BSR set to: 6
 30433                           ;drivers/diskio.c: 115:     for (int i = 0; i < count; i++) {
 30434                           
 30435                           ; BSR set to: 6
 30436                           
 30437                           ;incstack = 0
 30438                           ;drivers/diskio.c: 111: DRESULT disk_read(BYTE pdrv, BYTE* buff, LBA_t sector, UINT coun
      +                          t);drivers/diskio.c: 112: {;drivers/diskio.c: 113:     do { if (debug_flags & (1 << 1)) 
      +                          printf ("disk_read:  pdrv=%d, sector=%ld, count=%d\n\r", pdrv, sector, count); } while(0
      +                          );
 30439   0192A4  0E00               	movlw	0
 30440   0192A6  0105               	movlb	5	; () banked
 30441   0192A8  6FEE               	movwf	(disk_read@i+1)& (0+255),b
 30442   0192AA  0E00               	movlw	0
 30443   0192AC  6FED               	movwf	disk_read@i& (0+255),b
 30444   0192AE  D033               	goto	l9747
 30445   0192B0                     l9729:
 30446                           
 30447                           ; BSR set to: 5
 30448                           ;drivers/diskio.c: 116:         if (SDCard_read512(start_lba + sector, 0, buff, 512) != 
      +                          0) {
 30449   0192B0  51E6               	movf	disk_read@sector& (0+255),w,b
 30450   0192B2  0107               	movlb	7	; () banked
 30451   0192B4  25D4               	addwf	_start_lba& (0+255),w,b
 30452   0192B6  0105               	movlb	5	; () banked
 30453   0192B8  6FC7               	movwf	SDCard_read512@addr& (0+255),b
 30454   0192BA  51E7               	movf	(disk_read@sector+1)& (0+255),w,b
 30455   0192BC  0107               	movlb	7	; () banked
 30456   0192BE  21D5               	addwfc	(_start_lba+1)& (0+255),w,b
 30457   0192C0  0105               	movlb	5	; () banked
 30458   0192C2  6FC8               	movwf	(SDCard_read512@addr+1)& (0+255),b
 30459   0192C4  51E8               	movf	(disk_read@sector+2)& (0+255),w,b
 30460   0192C6  0107               	movlb	7	; () banked
 30461   0192C8  21D6               	addwfc	(_start_lba+2)& (0+255),w,b
 30462   0192CA  0105               	movlb	5	; () banked
 30463   0192CC  6FC9               	movwf	(SDCard_read512@addr+2)& (0+255),b
 30464   0192CE  51E9               	movf	(disk_read@sector+3)& (0+255),w,b
 30465   0192D0  0107               	movlb	7	; () banked
 30466   0192D2  21D7               	addwfc	(_start_lba+3)& (0+255),w,b
 30467   0192D4  0105               	movlb	5	; () banked
 30468   0192D6  6FCA               	movwf	(SDCard_read512@addr+3)& (0+255),b
 30469   0192D8  0E00               	movlw	0
 30470   0192DA  6FCC               	movwf	(SDCard_read512@offs+1)& (0+255),b
 30471   0192DC  0E00               	movlw	0
 30472   0192DE  6FCB               	movwf	SDCard_read512@offs& (0+255),b
 30473   0192E0  C5E4  F5CD         	movff	disk_read@buff,SDCard_read512@buf
 30474   0192E4  C5E5  F5CE         	movff	disk_read@buff+1,SDCard_read512@buf+1
 30475   0192E8  0E02               	movlw	2
 30476   0192EA  6FD0               	movwf	(SDCard_read512@count+1)& (0+255),b
 30477   0192EC  0E00               	movlw	0
 30478   0192EE  6FCF               	movwf	SDCard_read512@count& (0+255),b
 30479   0192F0  EC1A  F0AF         	call	_SDCard_read512	;wreg free
 30480   0192F4  0105               	movlb	5	; () banked
 30481   0192F6  51C7               	movf	?_SDCard_read512& (0+255),w,b
 30482   0192F8  11C8               	iorwf	(?_SDCard_read512+1)& (0+255),w,b
 30483   0192FA  B4D8               	btfsc	status,2,c
 30484   0192FC  D002               	goto	l9741
 30485                           
 30486                           ; BSR set to: 5
 30487                           ;drivers/diskio.c: 118:             return RES_ERROR;
 30488   0192FE  0E01               	movlw	1
 30489   019300  0012               	return	
 30490   019302                     l9741:
 30491                           
 30492                           ; BSR set to: 5
 30493                           ;drivers/diskio.c: 123:         sector++;
 30494   019302  0E01               	movlw	1
 30495   019304  27E6               	addwf	disk_read@sector& (0+255),f,b
 30496   019306  0E00               	movlw	0
 30497   019308  23E7               	addwfc	(disk_read@sector+1)& (0+255),f,b
 30498   01930A  23E8               	addwfc	(disk_read@sector+2)& (0+255),f,b
 30499   01930C  23E9               	addwfc	(disk_read@sector+3)& (0+255),f,b
 30500                           
 30501                           ; BSR set to: 5
 30502                           ;drivers/diskio.c: 124:         buff += 512;
 30503   01930E  0E02               	movlw	2
 30504   019310  27E5               	addwf	(disk_read@buff+1)& (0+255),f,b
 30505                           
 30506                           ; BSR set to: 5
 30507                           ;drivers/diskio.c: 125:     }
 30508   019312  4BED               	infsnz	disk_read@i& (0+255),f,b
 30509   019314  2BEE               	incf	(disk_read@i+1)& (0+255),f,b
 30510   019316                     l9747:
 30511                           
 30512                           ; BSR set to: 5
 30513   019316  51EA               	movf	disk_read@count& (0+255),w,b
 30514   019318  5DED               	subwf	disk_read@i& (0+255),w,b
 30515   01931A  51EB               	movf	(disk_read@count+1)& (0+255),w,b
 30516   01931C  59EE               	subwfb	(disk_read@i+1)& (0+255),w,b
 30517   01931E  A0D8               	btfss	status,0,c
 30518   019320  D7C7               	goto	l9729
 30519                           
 30520                           ; BSR set to: 5
 30521                           ;drivers/diskio.c: 127:     return RES_OK;
 30522   019322  0E00               	movlw	0
 30523                           
 30524                           ; BSR set to: 5
 30525   019324  0012               	return		;funcret
 30526   019326                     __end_of_disk_read:
 30527                           	callstack 0
 30528                           
 30529 ;; *************** function _SDCard_read512 *****************
 30530 ;; Defined at:
 30531 ;;		line 169 in file "src/boards/../../drivers/SDCard.c"
 30532 ;; Parameters:    Size  Location     Type
 30533 ;;  addr            4  103[BANK5 ] unsigned long 
 30534 ;;  offs            2  107[BANK5 ] unsigned int 
 30535 ;;  buf             2  109[BANK5 ] PTR void 
 30536 ;;		 -> disk_buf(128), files(3276), fs(560), NULL(0), 
 30537 ;;		 -> disk_initialize@buf(128), 
 30538 ;;  count           2  111[BANK5 ] unsigned int 
 30539 ;; Auto vars:     Size  Location     Type
 30540 ;;  i               2  119[BANK5 ] unsigned int 
 30541 ;;  i               2  117[BANK5 ] int 
 30542 ;;  crc             2  129[BANK5 ] unsigned short 
 30543 ;;  spi             2  127[BANK5 ] PTR struct SPI
 30544 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 30545 ;;  result          2  125[BANK5 ] int 
 30546 ;;  resp_crc        2  123[BANK5 ] unsigned short 
 30547 ;;  retry           2  121[BANK5 ] int 
 30548 ;;  response        1  131[BANK5 ] unsigned char 
 30549 ;; Return value:  Size  Location     Type
 30550 ;;                  2  103[BANK5 ] int 
 30551 ;; Registers used:
 30552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30553 ;; Tracked objects:
 30554 ;;		On entry : 3F/5
 30555 ;;		On exit  : 0/0
 30556 ;;		Unchanged: 0/0
 30557 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 30558 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30559 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30560 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30561 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30562 ;;Total ram usage:       29 bytes
 30563 ;; Hardware stack levels used: 1
 30564 ;; Hardware stack levels required when called: 9
 30565 ;; This function calls:
 30566 ;;		_SDCard_end_transaction
 30567 ;;		_SPI_SD_receive
 30568 ;;		_SPI_SD_receive_byte
 30569 ;;		___SDCard_command_r1
 30570 ;;		___SDCard_crc16
 30571 ;;		___SDCard_wait_response
 30572 ;;		_printf
 30573 ;;		_util_addrdump
 30574 ;; This function is called by:
 30575 ;;		_disk_initialize
 30576 ;;		_disk_read
 30577 ;; This function uses a non-reentrant model
 30578 ;;
 30579                           
 30580                           	psect	text61
 30581   015E34                     __ptext61:
 30582                           	callstack 0
 30583   015E34                     _SDCard_read512:
 30584                           	callstack 111
 30585                           
 30586                           ; BSR set to: 5
 30587                           ;src/boards/../../drivers/SDCard.c: 169: int SDCard_read512(uint32_t addr, unsigned int 
      +                          offs, void *buf, unsigned int count);src/boards/../../drivers/SDCard.c: 170: {;src/board
      +                          s/../../drivers/SDCard.c: 171:     struct SPI *spi = ctx_.spi;
 30588                           
 30589                           ; BSR set to: 5
 30590                           ;incstack = 0
 30591   015E34  C706  F5DF         	movff	_ctx_,SDCard_read512@spi
 30592   015E38  C707  F5E0         	movff	_ctx_+1,SDCard_read512@spi+1
 30593                           
 30594                           ; BSR set to: 5
 30595                           ;src/boards/../../drivers/SDCard.c: 172:     int result;;src/boards/../../drivers/SDCard
      +                          .c: 173:     uint8_t response;;src/boards/../../drivers/SDCard.c: 174:     uint16_t crc,
      +                           resp_crc;;src/boards/../../drivers/SDCard.c: 175:     int retry = 5;
 30596   015E3C  0E00               	movlw	0
 30597   015E3E  6FDA               	movwf	(SDCard_read512@retry+1)& (0+255),b
 30598   015E40  0E05               	movlw	5
 30599   015E42  6FD9               	movwf	SDCard_read512@retry& (0+255),b
 30600   015E44                     l9619:
 30601                           
 30602                           ;src/boards/../../drivers/SDCard.c: 180:     result = __SDCard_command_r1(17, addr, &res
      +                          ponse);
 30603   015E44  C5C7  F518         	movff	SDCard_read512@addr,___SDCard_command_r1@argument
 30604   015E48  C5C8  F519         	movff	SDCard_read512@addr+1,___SDCard_command_r1@argument+1
 30605   015E4C  C5C9  F51A         	movff	SDCard_read512@addr+2,___SDCard_command_r1@argument+2
 30606   015E50  C5CA  F51B         	movff	SDCard_read512@addr+3,___SDCard_command_r1@argument+3
 30607   015E54  0EE3               	movlw	low SDCard_read512@response
 30608   015E56  6E1C               	movwf	___SDCard_command_r1@r1^(0+1280),c
 30609   015E58  0E05               	movlw	high SDCard_read512@response
 30610   015E5A  6E1D               	movwf	(___SDCard_command_r1@r1+1)^(0+1280),c
 30611   015E5C  0E11               	movlw	17
 30612   015E5E  ECEF  F0C6         	call	___SDCard_command_r1
 30613   015E62  C518  F5DD         	movff	?___SDCard_command_r1,SDCard_read512@result
 30614   015E66  C519  F5DE         	movff	?___SDCard_command_r1+1,SDCard_read512@result+1
 30615                           
 30616                           ;src/boards/../../drivers/SDCard.c: 181:     if (result != 0) {
 30617   015E6A  0105               	movlb	5	; () banked
 30618   015E6C  51DD               	movf	SDCard_read512@result& (0+255),w,b
 30619   015E6E  11DE               	iorwf	(SDCard_read512@result+1)& (0+255),w,b
 30620   015E70  A4D8               	btfss	status,2,c
 30621   015E72  D0DF               	goto	l9691
 30622                           
 30623                           ; BSR set to: 5
 30624                           ;src/boards/../../drivers/SDCard.c: 184:     if (response != 0) {
 30625   015E74  51E3               	movf	SDCard_read512@response& (0+255),w,b
 30626   015E76  B4D8               	btfsc	status,2,c
 30627   015E78  D004               	goto	l9629
 30628   015E7A                     u11120:
 30629                           
 30630                           ; BSR set to: 5
 30631                           ;src/boards/../../drivers/SDCard.c: 185:         result = 3;
 30632   015E7A  0E00               	movlw	0
 30633   015E7C  6FDE               	movwf	(SDCard_read512@result+1)& (0+255),b
 30634   015E7E  0E03               	movlw	3
 30635   015E80  D0D7               	goto	L17
 30636   015E82                     l9629:
 30637                           
 30638                           ; BSR set to: 5
 30639                           ;src/boards/../../drivers/SDCard.c: 189:     response = __SDCard_wait_response(0xff, 300
      +                          0);
 30640   015E82  0E0B               	movlw	11
 30641   015E84  6E13               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 30642   015E86  0EB8               	movlw	184
 30643   015E88  6E12               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 30644   015E8A  0EFF               	movlw	255
 30645   015E8C  ECBB  F0CE         	call	___SDCard_wait_response
 30646   015E90  0105               	movlb	5	; () banked
 30647   015E92  6FE3               	movwf	SDCard_read512@response& (0+255),b
 30648                           
 30649                           ; BSR set to: 5
 30650                           ;src/boards/../../drivers/SDCard.c: 190:     if (response == 0xff) {
 30651   015E94  29E3               	incf	SDCard_read512@response& (0+255),w,b
 30652   015E96  A4D8               	btfss	status,2,c
 30653   015E98  D004               	goto	l9635
 30654                           
 30655                           ; BSR set to: 5
 30656                           ;src/boards/../../drivers/SDCard.c: 191:         result = 1;
 30657   015E9A  0E00               	movlw	0
 30658   015E9C  6FDE               	movwf	(SDCard_read512@result+1)& (0+255),b
 30659   015E9E  0E01               	movlw	1
 30660   015EA0  D0C7               	goto	L17
 30661   015EA2                     l9635:
 30662                           
 30663                           ; BSR set to: 5
 30664                           ;src/boards/../../drivers/SDCard.c: 194:     if (response != 0xfe) {
 30665   015EA2  0EFE               	movlw	254
 30666   015EA4  19E3               	xorwf	SDCard_read512@response& (0+255),w,b
 30667   015EA6  A4D8               	btfss	status,2,c
 30668   015EA8  D7E8               	goto	u11120
 30669                           
 30670                           ; BSR set to: 5
 30671                           ;src/boards/../../drivers/SDCard.c: 199:     crc = 0;
 30672   015EAA  0E00               	movlw	0
 30673   015EAC  6FE2               	movwf	(SDCard_read512@crc+1)& (0+255),b
 30674   015EAE  0E00               	movlw	0
 30675   015EB0  6FE1               	movwf	SDCard_read512@crc& (0+255),b
 30676                           
 30677                           ;src/boards/../../drivers/SDCard.c: 200:     for (int i = 0; i < offs; i++) {
 30678   015EB2  0E00               	movlw	0
 30679   015EB4  6FD6               	movwf	(SDCard_read512@i+1)& (0+255),b
 30680   015EB6  0E00               	movlw	0
 30681   015EB8  6FD5               	movwf	SDCard_read512@i& (0+255),b
 30682   015EBA  D020               	goto	l9649
 30683   015EBC                     l9641:
 30684                           
 30685                           ; BSR set to: 5
 30686                           ;src/boards/../../drivers/SDCard.c: 201:         response = SPI_SD_receive_byte(spi);
 30687   015EBC  C5DF  F50F         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 30688   015EC0  C5E0  F510         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 30689   015EC4  EC8B  F0CF         	call	_SPI_SD_receive_byte	;wreg free
 30690   015EC8  0105               	movlb	5	; () banked
 30691   015ECA  6FE3               	movwf	SDCard_read512@response& (0+255),b
 30692                           
 30693                           ; BSR set to: 5
 30694                           ;src/boards/../../drivers/SDCard.c: 202:         if (ctx_.calc_read_crc)
 30695   015ECC  0107               	movlb	7	; () banked
 30696   015ECE  A10A               	btfss	(_ctx_+4)& (0+255),0,b
 30697   015ED0  D012               	goto	l9647
 30698                           
 30699                           ; BSR set to: 7
 30700                           ;src/boards/../../drivers/SDCard.c: 203:             crc = __SDCard_crc16(crc, &response
      +                          , 1);
 30701   015ED2  C5E1  F501         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 30702   015ED6  C5E2  F502         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 30703   015EDA  0EE3               	movlw	low SDCard_read512@response
 30704   015EDC  6E03               	movwf	___SDCard_crc16@buf^(0+1280),c
 30705   015EDE  0E05               	movlw	high SDCard_read512@response
 30706   015EE0  6E04               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 30707   015EE2  0E00               	movlw	0
 30708   015EE4  6E06               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 30709   015EE6  0E01               	movlw	1
 30710   015EE8  6E05               	movwf	___SDCard_crc16@count^(0+1280),c
 30711   015EEA  EC96  F0C5         	call	___SDCard_crc16	;wreg free
 30712   015EEE  C501  F5E1         	movff	?___SDCard_crc16,SDCard_read512@crc
 30713   015EF2  C502  F5E2         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 30714   015EF6                     l9647:
 30715                           
 30716                           ;src/boards/../../drivers/SDCard.c: 204:     }
 30717   015EF6  0105               	movlb	5	; () banked
 30718   015EF8  4BD5               	infsnz	SDCard_read512@i& (0+255),f,b
 30719   015EFA  2BD6               	incf	(SDCard_read512@i+1)& (0+255),f,b
 30720   015EFC                     l9649:
 30721                           
 30722                           ; BSR set to: 5
 30723   015EFC  51CB               	movf	SDCard_read512@offs& (0+255),w,b
 30724   015EFE  5DD5               	subwf	SDCard_read512@i& (0+255),w,b
 30725   015F00  51CC               	movf	(SDCard_read512@offs+1)& (0+255),w,b
 30726   015F02  59D6               	subwfb	(SDCard_read512@i+1)& (0+255),w,b
 30727   015F04  A0D8               	btfss	status,0,c
 30728   015F06  D7DA               	goto	l9641
 30729                           
 30730                           ; BSR set to: 5
 30731                           ;src/boards/../../drivers/SDCard.c: 205:     SPI_SD_receive(spi, buf, count);
 30732   015F08  C5DF  F501         	movff	SDCard_read512@spi,SPI_SD_receive@ctx_
 30733   015F0C  C5E0  F502         	movff	SDCard_read512@spi+1,SPI_SD_receive@ctx_+1
 30734   015F10  C5CD  F503         	movff	SDCard_read512@buf,SPI_SD_receive@buf
 30735   015F14  C5CE  F504         	movff	SDCard_read512@buf+1,SPI_SD_receive@buf+1
 30736   015F18  C5CF  F505         	movff	SDCard_read512@count,SPI_SD_receive@count
 30737   015F1C  C5D0  F506         	movff	SDCard_read512@count+1,SPI_SD_receive@count+1
 30738   015F20  ECE2  F0AB         	call	_SPI_SD_receive	;wreg free
 30739                           
 30740                           ;src/boards/../../drivers/SDCard.c: 206:     if (ctx_.calc_read_crc)
 30741   015F24  0107               	movlb	7	; () banked
 30742   015F26  A10A               	btfss	(_ctx_+4)& (0+255),0,b
 30743   015F28  D012               	goto	l9657
 30744                           
 30745                           ; BSR set to: 7
 30746                           ;src/boards/../../drivers/SDCard.c: 207:         crc = __SDCard_crc16(crc, buf, count);
 30747   015F2A  C5E1  F501         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 30748   015F2E  C5E2  F502         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 30749   015F32  C5CD  F503         	movff	SDCard_read512@buf,___SDCard_crc16@buf
 30750   015F36  C5CE  F504         	movff	SDCard_read512@buf+1,___SDCard_crc16@buf+1
 30751   015F3A  C5CF  F505         	movff	SDCard_read512@count,___SDCard_crc16@count
 30752   015F3E  C5D0  F506         	movff	SDCard_read512@count+1,___SDCard_crc16@count+1
 30753   015F42  EC96  F0C5         	call	___SDCard_crc16	;wreg free
 30754   015F46  C501  F5E1         	movff	?___SDCard_crc16,SDCard_read512@crc
 30755   015F4A  C502  F5E2         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 30756   015F4E                     l9657:
 30757                           
 30758                           ;src/boards/../../drivers/SDCard.c: 208:     for (unsigned int i = 0; i < 512 - offs - c
      +                          ount; i++) {
 30759   015F4E  0E00               	movlw	0
 30760   015F50  0105               	movlb	5	; () banked
 30761   015F52  6FD8               	movwf	(SDCard_read512@i_2487+1)& (0+255),b
 30762   015F54  0E00               	movlw	0
 30763   015F56  6FD7               	movwf	SDCard_read512@i_2487& (0+255),b
 30764   015F58  D020               	goto	l9667
 30765   015F5A                     l9659:
 30766                           
 30767                           ; BSR set to: 5
 30768                           ;src/boards/../../drivers/SDCard.c: 209:         response = SPI_SD_receive_byte(spi);
 30769   015F5A  C5DF  F50F         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 30770   015F5E  C5E0  F510         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 30771   015F62  EC8B  F0CF         	call	_SPI_SD_receive_byte	;wreg free
 30772   015F66  0105               	movlb	5	; () banked
 30773   015F68  6FE3               	movwf	SDCard_read512@response& (0+255),b
 30774                           
 30775                           ; BSR set to: 5
 30776                           ;src/boards/../../drivers/SDCard.c: 210:         if (ctx_.calc_read_crc)
 30777   015F6A  0107               	movlb	7	; () banked
 30778   015F6C  A10A               	btfss	(_ctx_+4)& (0+255),0,b
 30779   015F6E  D012               	goto	l9665
 30780                           
 30781                           ; BSR set to: 7
 30782                           ;src/boards/../../drivers/SDCard.c: 211:             crc = __SDCard_crc16(crc, &response
      +                          , 1);
 30783   015F70  C5E1  F501         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 30784   015F74  C5E2  F502         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 30785   015F78  0EE3               	movlw	low SDCard_read512@response
 30786   015F7A  6E03               	movwf	___SDCard_crc16@buf^(0+1280),c
 30787   015F7C  0E05               	movlw	high SDCard_read512@response
 30788   015F7E  6E04               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 30789   015F80  0E00               	movlw	0
 30790   015F82  6E06               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 30791   015F84  0E01               	movlw	1
 30792   015F86  6E05               	movwf	___SDCard_crc16@count^(0+1280),c
 30793   015F88  EC96  F0C5         	call	___SDCard_crc16	;wreg free
 30794   015F8C  C501  F5E1         	movff	?___SDCard_crc16,SDCard_read512@crc
 30795   015F90  C502  F5E2         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 30796   015F94                     l9665:
 30797                           
 30798                           ;src/boards/../../drivers/SDCard.c: 212:     }
 30799   015F94  0105               	movlb	5	; () banked
 30800   015F96  4BD7               	infsnz	SDCard_read512@i_2487& (0+255),f,b
 30801   015F98  2BD8               	incf	(SDCard_read512@i_2487+1)& (0+255),f,b
 30802   015F9A                     l9667:
 30803                           
 30804                           ; BSR set to: 5
 30805   015F9A  C5CB  F5D1         	movff	SDCard_read512@offs,??_SDCard_read512
 30806   015F9E  C5CC  F5D2         	movff	SDCard_read512@offs+1,??_SDCard_read512+1
 30807   015FA2  1FD1               	comf	??_SDCard_read512& (0+255),f,b
 30808   015FA4  1FD2               	comf	(??_SDCard_read512+1)& (0+255),f,b
 30809   015FA6  4BD1               	infsnz	??_SDCard_read512& (0+255),f,b
 30810   015FA8  2BD2               	incf	(??_SDCard_read512+1)& (0+255),f,b
 30811   015FAA  51CF               	movf	SDCard_read512@count& (0+255),w,b
 30812   015FAC  5FD1               	subwf	??_SDCard_read512& (0+255),f,b
 30813   015FAE  51D0               	movf	(SDCard_read512@count+1)& (0+255),w,b
 30814   015FB0  5BD2               	subwfb	(??_SDCard_read512+1)& (0+255),f,b
 30815   015FB2  0E00               	movlw	0
 30816   015FB4  25D1               	addwf	??_SDCard_read512& (0+255),w,b
 30817   015FB6  6FD3               	movwf	(??_SDCard_read512+2)& (0+255),b
 30818   015FB8  0E02               	movlw	2
 30819   015FBA  21D2               	addwfc	(??_SDCard_read512+1)& (0+255),w,b
 30820   015FBC  6FD4               	movwf	(??_SDCard_read512+3)& (0+255),b
 30821   015FBE  51D3               	movf	(??_SDCard_read512+2)& (0+255),w,b
 30822   015FC0  5DD7               	subwf	SDCard_read512@i_2487& (0+255),w,b
 30823   015FC2  51D4               	movf	(??_SDCard_read512+3)& (0+255),w,b
 30824   015FC4  59D8               	subwfb	(SDCard_read512@i_2487+1)& (0+255),w,b
 30825   015FC6  A0D8               	btfss	status,0,c
 30826   015FC8  D7C8               	goto	l9659
 30827                           
 30828                           ; BSR set to: 5
 30829                           ;src/boards/../../drivers/SDCard.c: 217:     resp_crc = (uint16_t)SPI_SD_receive_byte(sp
      +                          i) << 8;
 30830   015FCA  C5DF  F50F         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 30831   015FCE  C5E0  F510         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 30832   015FD2  EC8B  F0CF         	call	_SPI_SD_receive_byte	;wreg free
 30833   015FD6  0105               	movlb	5	; () banked
 30834   015FD8  6FDC               	movwf	(SDCard_read512@resp_crc+1)& (0+255),b
 30835   015FDA  6BDB               	clrf	SDCard_read512@resp_crc& (0+255),b
 30836                           
 30837                           ; BSR set to: 5
 30838                           ;src/boards/../../drivers/SDCard.c: 218:     resp_crc |= SPI_SD_receive_byte(spi);
 30839   015FDC  C5DF  F50F         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 30840   015FE0  C5E0  F510         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 30841   015FE4  EC8B  F0CF         	call	_SPI_SD_receive_byte	;wreg free
 30842   015FE8  0105               	movlb	5	; () banked
 30843   015FEA  6FD1               	movwf	??_SDCard_read512& (0+255),b
 30844   015FEC  51D1               	movf	??_SDCard_read512& (0+255),w,b
 30845   015FEE  13DB               	iorwf	SDCard_read512@resp_crc& (0+255),f,b
 30846                           
 30847                           ; BSR set to: 5
 30848                           ;src/boards/../../drivers/SDCard.c: 219:     if (ctx_.calc_read_crc && resp_crc != crc) 
      +                          {
 30849   015FF0  0107               	movlb	7	; () banked
 30850   015FF2  A10A               	btfss	(_ctx_+4)& (0+255),0,b
 30851   015FF4  D019               	goto	l9689
 30852                           
 30853                           ; BSR set to: 7
 30854   015FF6  0105               	movlb	5	; () banked
 30855   015FF8  51E1               	movf	SDCard_read512@crc& (0+255),w,b
 30856   015FFA  19DB               	xorwf	SDCard_read512@resp_crc& (0+255),w,b
 30857   015FFC  E104               	bnz	u11210
 30858   015FFE  51E2               	movf	(SDCard_read512@crc+1)& (0+255),w,b
 30859   016000  19DC               	xorwf	(SDCard_read512@resp_crc+1)& (0+255),w,b
 30860   016002  B4D8               	btfsc	status,2,c
 30861   016004  D011               	goto	l9689
 30862   016006                     u11210:
 30863                           
 30864                           ; BSR set to: 5
 30865                           ;src/boards/../../drivers/SDCard.c: 222:         if (--retry < 1) {
 30866   016006  07D9               	decf	SDCard_read512@retry& (0+255),f,b
 30867   016008  A0D8               	btfss	status,0,c
 30868   01600A  07DA               	decf	(SDCard_read512@retry+1)& (0+255),f,b
 30869   01600C  BFDA               	btfsc	(SDCard_read512@retry+1)& (0+255),7,b
 30870   01600E  D005               	goto	u11220
 30871   016010  51DA               	movf	(SDCard_read512@retry+1)& (0+255),w,b
 30872   016012  E107               	bnz	l9687
 30873   016014  05D9               	decf	SDCard_read512@retry& (0+255),w,b
 30874   016016  B0D8               	btfsc	status,0,c
 30875   016018  D004               	goto	l9687
 30876   01601A                     u11220:
 30877                           
 30878                           ; BSR set to: 5
 30879                           ;src/boards/../../drivers/SDCard.c: 223:             result = 4;
 30880   01601A  0E00               	movlw	0
 30881   01601C  6FDE               	movwf	(SDCard_read512@result+1)& (0+255),b
 30882   01601E  0E04               	movlw	4
 30883   016020  D007               	goto	L17
 30884   016022                     l9687:
 30885                           
 30886                           ; BSR set to: 5
 30887                           ;src/boards/../../drivers/SDCard.c: 226:         SDCard_end_transaction();
 30888   016022  EC16  F0CF         	call	_SDCard_end_transaction	;wreg free
 30889                           
 30890                           ;src/boards/../../drivers/SDCard.c: 227:         goto retry;
 30891   016026  D70E               	goto	l9619
 30892   016028                     l9689:
 30893                           
 30894                           ;src/boards/../../drivers/SDCard.c: 230:     result = 0;
 30895   016028  0E00               	movlw	0
 30896   01602A  0105               	movlb	5	; () banked
 30897   01602C  6FDE               	movwf	(SDCard_read512@result+1)& (0+255),b
 30898   01602E  0E00               	movlw	0
 30899   016030                     L17:
 30900   016030  6FDD               	movwf	SDCard_read512@result& (0+255),b
 30901   016032                     l9691:
 30902                           
 30903                           ; BSR set to: 5
 30904                           ;src/boards/../../drivers/SDCard.c: 233:     SDCard_end_transaction();
 30905   016032  EC16  F0CF         	call	_SDCard_end_transaction	;wreg free
 30906                           
 30907                           ;src/boards/../../drivers/SDCard.c: 234:     return result;
 30908   016036  C5DD  F5C7         	movff	SDCard_read512@result,?_SDCard_read512
 30909   01603A  C5DE  F5C8         	movff	SDCard_read512@result+1,?_SDCard_read512+1
 30910   01603E  0012               	return		;funcret
 30911   016040                     __end_of_SDCard_read512:
 30912                           	callstack 0
 30913                           
 30914 ;; *************** function _util_addrdump *****************
 30915 ;; Defined at:
 30916 ;;		line 50 in file "drivers/utils.c"
 30917 ;; Parameters:    Size  Location     Type
 30918 ;;  header          2   70[BANK5 ] PTR const unsigned char 
 30919 ;;		 -> STR_54(5), STR_51(5), STR_16(6), STR_13(6), 
 30920 ;;  addr_offs       4   72[BANK5 ] unsigned long 
 30921 ;;  addr            2   76[BANK5 ] PTR const void 
 30922 ;;		 -> files$buf(512), fs$win(512), disk_buf(128), files(3276), 
 30923 ;;		 -> fs(560), NULL(0), disk_initialize@buf(128), 
 30924 ;;  size            2   78[BANK5 ] unsigned int 
 30925 ;; Auto vars:     Size  Location     Type
 30926 ;;  i               2  101[BANK5 ] unsigned int 
 30927 ;;  chars          17   82[BANK5 ] unsigned char [17]
 30928 ;;  buf             2   99[BANK5 ] PTR const unsigned char 
 30929 ;;		 -> files$buf(512), fs$win(512), disk_buf(128), files(3276), 
 30930 ;;		 -> fs(560), NULL(0), disk_initialize@buf(128), 
 30931 ;; Return value:  Size  Location     Type
 30932 ;;                  1    wreg      void 
 30933 ;; Registers used:
 30934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30935 ;; Tracked objects:
 30936 ;;		On entry : 0/0
 30937 ;;		On exit  : 3F/5
 30938 ;;		Unchanged: 0/0
 30939 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 30940 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30941 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30943 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30944 ;;Total ram usage:       33 bytes
 30945 ;; Hardware stack levels used: 1
 30946 ;; Hardware stack levels required when called: 8
 30947 ;; This function calls:
 30948 ;;		_printf
 30949 ;; This function is called by:
 30950 ;;		_disk_read
 30951 ;;		_disk_write
 30952 ;;		_SDCard_read512
 30953 ;;		_SDCard_write512
 30954 ;; This function uses a non-reentrant model
 30955 ;;
 30956                           
 30957                           	psect	text62
 30958   017C6E                     __ptext62:
 30959                           	callstack 0
 30960   017C6E                     _util_addrdump:
 30961                           	callstack 111
 30962                           
 30963                           ;drivers/utils.c: 50: void util_addrdump(const char *header, uint32_t addr_offs, const v
      +                          oid *addr, unsigned int size);drivers/utils.c: 51: {;drivers/utils.c: 52:     char chars
      +                          [17];;drivers/utils.c: 53:     const uint8_t *buf = addr;
 30964                           
 30965                           ;incstack = 0
 30966   017C6E  C5AC  F5C3         	movff	util_addrdump@addr,util_addrdump@buf
 30967   017C72  C5AD  F5C4         	movff	util_addrdump@addr+1,util_addrdump@buf+1
 30968                           
 30969                           ;drivers/utils.c: 54:     size = ((size + 15) & ~0xfU);
 30970   017C76  0E0F               	movlw	15
 30971   017C78  0105               	movlb	5	; () banked
 30972   017C7A  25AE               	addwf	util_addrdump@size& (0+255),w,b
 30973   017C7C  6FB0               	movwf	??_util_addrdump& (0+255),b
 30974   017C7E  0E00               	movlw	0
 30975   017C80  21AF               	addwfc	(util_addrdump@size+1)& (0+255),w,b
 30976   017C82  6FB1               	movwf	(??_util_addrdump+1)& (0+255),b
 30977   017C84  0EF0               	movlw	240
 30978   017C86  15B0               	andwf	??_util_addrdump& (0+255),w,b
 30979   017C88  6FAE               	movwf	util_addrdump@size& (0+255),b
 30980   017C8A  0EFF               	movlw	255
 30981   017C8C  15B1               	andwf	(??_util_addrdump+1)& (0+255),w,b
 30982   017C8E  6FAF               	movwf	(util_addrdump@size+1)& (0+255),b
 30983                           
 30984                           ; BSR set to: 5
 30985                           ;drivers/utils.c: 55:     for (unsigned int i = 0; i < size; i++) {
 30986   017C90  0E00               	movlw	0
 30987   017C92  6FC6               	movwf	(util_addrdump@i+1)& (0+255),b
 30988   017C94  0E00               	movlw	0
 30989   017C96  6FC5               	movwf	util_addrdump@i& (0+255),b
 30990   017C98  D075               	goto	l9455
 30991   017C9A                     l9435:
 30992                           
 30993                           ; BSR set to: 5
 30994                           ;drivers/utils.c: 56:         if ((i % 16) == 0)
 30995   017C9A  C5C5  F5B0         	movff	util_addrdump@i,??_util_addrdump
 30996   017C9E  0E0F               	movlw	15
 30997   017CA0  17B0               	andwf	??_util_addrdump& (0+255),f,b
 30998   017CA2  A4D8               	btfss	status,2,c
 30999   017CA4  D016               	goto	l122
 31000                           
 31001                           ; BSR set to: 5
 31002                           ;drivers/utils.c: 57:             printf("%s%06lx:", header, addr_offs + i);
 31003   017CA6  0EC1               	movlw	low STR_22
 31004   017CA8  6F9A               	movwf	printf@fmt& (0+255),b
 31005   017CAA  0EFF               	movlw	high STR_22
 31006   017CAC  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 31007   017CAE  C5A6  F59C         	movff	util_addrdump@header,?_printf+2
 31008   017CB2  C5A7  F59D         	movff	util_addrdump@header+1,?_printf+3
 31009   017CB6  51C5               	movf	util_addrdump@i& (0+255),w,b
 31010   017CB8  25A8               	addwf	util_addrdump@addr_offs& (0+255),w,b
 31011   017CBA  6F9E               	movwf	(?_printf+4)& (0+255),b
 31012   017CBC  51C6               	movf	(util_addrdump@i+1)& (0+255),w,b
 31013   017CBE  21A9               	addwfc	(util_addrdump@addr_offs+1)& (0+255),w,b
 31014   017CC0  6F9F               	movwf	(?_printf+5)& (0+255),b
 31015   017CC2  0E00               	movlw	0
 31016   017CC4  21AA               	addwfc	(util_addrdump@addr_offs+2)& (0+255),w,b
 31017   017CC6  6FA0               	movwf	(?_printf+6)& (0+255),b
 31018   017CC8  0E00               	movlw	0
 31019   017CCA  21AB               	addwfc	(util_addrdump@addr_offs+3)& (0+255),w,b
 31020   017CCC  6FA1               	movwf	(?_printf+7)& (0+255),b
 31021   017CCE  EC53  F0CF         	call	_printf	;wreg free
 31022   017CD2                     l122:
 31023                           
 31024                           ; BSR set to: 5
 31025                           ;drivers/utils.c: 58:         printf(" %02x", buf[i]);
 31026   017CD2  0EE1               	movlw	low STR_20
 31027   017CD4  6F9A               	movwf	printf@fmt& (0+255),b
 31028   017CD6  0EFF               	movlw	high STR_20
 31029   017CD8  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 31030   017CDA  51C5               	movf	util_addrdump@i& (0+255),w,b
 31031   017CDC  25C3               	addwf	util_addrdump@buf& (0+255),w,b
 31032   017CDE  6ED9               	movwf	fsr2l,c
 31033   017CE0  51C6               	movf	(util_addrdump@i+1)& (0+255),w,b
 31034   017CE2  21C4               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 31035   017CE4  6EDA               	movwf	fsr2h,c
 31036   017CE6  50DF               	movf	indf2,w,c
 31037   017CE8  6FB0               	movwf	??_util_addrdump& (0+255),b
 31038   017CEA  51B0               	movf	??_util_addrdump& (0+255),w,b
 31039   017CEC  6F9C               	movwf	(?_printf+2)& (0+255),b
 31040   017CEE  6B9D               	clrf	(?_printf+3)& (0+255),b
 31041   017CF0  EC53  F0CF         	call	_printf	;wreg free
 31042                           
 31043                           ; BSR set to: 5
 31044                           ;drivers/utils.c: 59:         if (0x20 <= buf[i] && buf[i] <= 0x7e) {
 31045   017CF4  51C5               	movf	util_addrdump@i& (0+255),w,b
 31046   017CF6  25C3               	addwf	util_addrdump@buf& (0+255),w,b
 31047   017CF8  6ED9               	movwf	fsr2l,c
 31048   017CFA  51C6               	movf	(util_addrdump@i+1)& (0+255),w,b
 31049   017CFC  21C4               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 31050   017CFE  6EDA               	movwf	fsr2h,c
 31051   017D00  0E1F               	movlw	31
 31052   017D02  64DF               	cpfsgt	indf2,c
 31053   017D04  D01E               	goto	l9445
 31054                           
 31055                           ; BSR set to: 5
 31056   017D06  51C5               	movf	util_addrdump@i& (0+255),w,b
 31057   017D08  25C3               	addwf	util_addrdump@buf& (0+255),w,b
 31058   017D0A  6ED9               	movwf	fsr2l,c
 31059   017D0C  51C6               	movf	(util_addrdump@i+1)& (0+255),w,b
 31060   017D0E  21C4               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 31061   017D10  6EDA               	movwf	fsr2h,c
 31062   017D12  0E7F               	movlw	127
 31063   017D14  60DF               	cpfslt	indf2,c
 31064   017D16  D015               	goto	l9445
 31065                           
 31066                           ; BSR set to: 5
 31067                           ;drivers/utils.c: 60:             chars[i % 16] = buf[i];
 31068   017D18  51C5               	movf	util_addrdump@i& (0+255),w,b
 31069   017D1A  25C3               	addwf	util_addrdump@buf& (0+255),w,b
 31070   017D1C  6ED9               	movwf	fsr2l,c
 31071   017D1E  51C6               	movf	(util_addrdump@i+1)& (0+255),w,b
 31072   017D20  21C4               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 31073   017D22  6EDA               	movwf	fsr2h,c
 31074   017D24  0E0F               	movlw	15
 31075   017D26  15C5               	andwf	util_addrdump@i& (0+255),w,b
 31076   017D28  6FB0               	movwf	??_util_addrdump& (0+255),b
 31077   017D2A  0E00               	movlw	0
 31078   017D2C  15C6               	andwf	(util_addrdump@i+1)& (0+255),w,b
 31079   017D2E  6FB1               	movwf	(??_util_addrdump+1)& (0+255),b
 31080   017D30  0EB2               	movlw	low util_addrdump@chars
 31081   017D32  25B0               	addwf	??_util_addrdump& (0+255),w,b
 31082   017D34  6EE1               	movwf	fsr1l,c
 31083   017D36  0E05               	movlw	high util_addrdump@chars
 31084   017D38  21B1               	addwfc	(??_util_addrdump+1)& (0+255),w,b
 31085   017D3A  6EE2               	movwf	fsr1h,c
 31086   017D3C  C4DF F4E7          	movff	indf2,indf1
 31087                           
 31088                           ;drivers/utils.c: 61:         } else {
 31089   017D40  D00E               	goto	l9447
 31090   017D42                     l9445:
 31091                           
 31092                           ; BSR set to: 5
 31093                           ;drivers/utils.c: 62:             chars[i % 16] = '.';
 31094   017D42  0E0F               	movlw	15
 31095   017D44  15C5               	andwf	util_addrdump@i& (0+255),w,b
 31096   017D46  6FB0               	movwf	??_util_addrdump& (0+255),b
 31097   017D48  0E00               	movlw	0
 31098   017D4A  15C6               	andwf	(util_addrdump@i+1)& (0+255),w,b
 31099   017D4C  6FB1               	movwf	(??_util_addrdump+1)& (0+255),b
 31100   017D4E  0EB2               	movlw	low util_addrdump@chars
 31101   017D50  25B0               	addwf	??_util_addrdump& (0+255),w,b
 31102   017D52  6ED9               	movwf	fsr2l,c
 31103   017D54  0E05               	movlw	high util_addrdump@chars
 31104   017D56  21B1               	addwfc	(??_util_addrdump+1)& (0+255),w,b
 31105   017D58  6EDA               	movwf	fsr2h,c
 31106   017D5A  0E2E               	movlw	46
 31107   017D5C  6EDF               	movwf	indf2,c
 31108   017D5E                     l9447:
 31109                           
 31110                           ; BSR set to: 5
 31111                           ;drivers/utils.c: 64:         if ((i % 16) == 15) {
 31112   017D5E  51C5               	movf	util_addrdump@i& (0+255),w,b
 31113   017D60  0B0F               	andlw	15
 31114   017D62  0A0F               	xorlw	15
 31115   017D64  A4D8               	btfss	status,2,c
 31116   017D66  D00C               	goto	l9453
 31117                           
 31118                           ; BSR set to: 5
 31119                           ;drivers/utils.c: 65:             chars[16] = '\0';
 31120   017D68  0E00               	movlw	0
 31121   017D6A  6FC2               	movwf	(util_addrdump@chars+16)& (0+255),b
 31122                           
 31123                           ; BSR set to: 5
 31124                           ;drivers/utils.c: 66:             printf(" %s\n\r", chars);
 31125   017D6C  0EA0               	movlw	low (STR_69+3)
 31126   017D6E  6F9A               	movwf	printf@fmt& (0+255),b
 31127   017D70  0EFF               	movlw	high (STR_69+3)
 31128   017D72  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 31129   017D74  0EB2               	movlw	low util_addrdump@chars
 31130   017D76  6F9C               	movwf	(?_printf+2)& (0+255),b
 31131   017D78  0E05               	movlw	high util_addrdump@chars
 31132   017D7A  6F9D               	movwf	(?_printf+3)& (0+255),b
 31133   017D7C  EC53  F0CF         	call	_printf	;wreg free
 31134   017D80                     l9453:
 31135                           
 31136                           ; BSR set to: 5
 31137                           ;drivers/utils.c: 68:     }
 31138   017D80  4BC5               	infsnz	util_addrdump@i& (0+255),f,b
 31139   017D82  2BC6               	incf	(util_addrdump@i+1)& (0+255),f,b
 31140   017D84                     l9455:
 31141                           
 31142                           ; BSR set to: 5
 31143   017D84  51AE               	movf	util_addrdump@size& (0+255),w,b
 31144   017D86  5DC5               	subwf	util_addrdump@i& (0+255),w,b
 31145   017D88  51AF               	movf	(util_addrdump@size+1)& (0+255),w,b
 31146   017D8A  59C6               	subwfb	(util_addrdump@i+1)& (0+255),w,b
 31147   017D8C  B0D8               	btfsc	status,0,c
 31148   017D8E  0012               	return	
 31149   017D90  D784               	goto	l9435
 31150   017D92                     __end_of_util_addrdump:
 31151                           	callstack 0
 31152                           
 31153 ;; *************** function ___SDCard_crc16 *****************
 31154 ;; Defined at:
 31155 ;;		line 352 in file "src/boards/../../drivers/SDCard.c"
 31156 ;; Parameters:    Size  Location     Type
 31157 ;;  crc             2    0[COMRAM] unsigned short 
 31158 ;;  buf             2    2[COMRAM] PTR const void 
 31159 ;;		 -> files$buf(512), fs$win(512), disk_buf(128), files(3276), 
 31160 ;;		 -> fs(560), SDCard_write512@response(1), SDCard_read512@response(1), NULL(0), 
 31161 ;;		 -> disk_initialize@buf(128), 
 31162 ;;  count           2    4[COMRAM] unsigned int 
 31163 ;; Auto vars:     Size  Location     Type
 31164 ;;  p               2   11[COMRAM] PTR unsigned char 
 31165 ;;		 -> files$buf(512), fs$win(512), disk_buf(128), files(3276), 
 31166 ;;		 -> fs(560), SDCard_write512@response(1), SDCard_read512@response(1), NULL(0), 
 31167 ;;		 -> disk_initialize@buf(128), 
 31168 ;;  endp            2    9[COMRAM] PTR unsigned char 
 31169 ;;		 -> files$buf(512), fs$win(512), disk_buf(128), files(3276), 
 31170 ;;		 -> fs(560), SDCard_write512@response(1), SDCard_read512@response(1), NULL(0), 
 31171 ;;		 -> disk_initialize@buf(128), 
 31172 ;; Return value:  Size  Location     Type
 31173 ;;                  2    0[COMRAM] unsigned short 
 31174 ;; Registers used:
 31175 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31176 ;; Tracked objects:
 31177 ;;		On entry : 3D/5
 31178 ;;		On exit  : 3D/5
 31179 ;;		Unchanged: 3C/0
 31180 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31181 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31182 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31183 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31184 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31185 ;;Total ram usage:       13 bytes
 31186 ;; Hardware stack levels used: 1
 31187 ;; This function calls:
 31188 ;;		Nothing
 31189 ;; This function is called by:
 31190 ;;		_SDCard_read512
 31191 ;;		_SDCard_write512
 31192 ;; This function uses a non-reentrant model
 31193 ;;
 31194                           
 31195                           	psect	text63
 31196   018B2C                     __ptext63:
 31197                           	callstack 0
 31198   018B2C                     ___SDCard_crc16:
 31199                           	callstack 118
 31200                           
 31201                           ;src/boards/../../drivers/SDCard.c: 352: uint16_t __SDCard_crc16(uint16_t crc, const voi
      +                          d *buf, unsigned int count);src/boards/../../drivers/SDCard.c: 353: {;src/boards/../../d
      +                          rivers/SDCard.c: 354:     uint8_t *p = (uint8_t*)buf;
 31202                           
 31203                           ; BSR set to: 5
 31204                           ;incstack = 0
 31205   018B2C  C503  F50C         	movff	___SDCard_crc16@buf,___SDCard_crc16@p
 31206   018B30  C504  F50D         	movff	___SDCard_crc16@buf+1,___SDCard_crc16@p+1
 31207                           
 31208                           ;src/boards/../../drivers/SDCard.c: 355:     uint8_t *endp = p + count;
 31209   018B34  5005               	movf	___SDCard_crc16@count^(0+1280),w,c
 31210   018B36  240C               	addwf	___SDCard_crc16@p^(0+1280),w,c
 31211   018B38  6E0A               	movwf	___SDCard_crc16@endp^(0+1280),c
 31212   018B3A  5006               	movf	(___SDCard_crc16@count+1)^(0+1280),w,c
 31213   018B3C  200D               	addwfc	(___SDCard_crc16@p+1)^(0+1280),w,c
 31214   018B3E  6E0B               	movwf	(___SDCard_crc16@endp+1)^(0+1280),c
 31215                           
 31216                           ;src/boards/../../drivers/SDCard.c: 357:     while (p < endp) {
 31217   018B40  D041               	goto	l9511
 31218   018B42                     l9499:
 31219                           
 31220                           ;src/boards/../../drivers/SDCard.c: 358:         crc = (crc >> 8)|(crc << 8);
 31221   018B42  C501  F507         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 31222   018B46  C502  F501         	movff	___SDCard_crc16@crc+1,___SDCard_crc16@crc
 31223   018B4A  C507  F502         	movff	??___SDCard_crc16,___SDCard_crc16@crc+1
 31224                           
 31225                           ;src/boards/../../drivers/SDCard.c: 359:         crc ^= *p++;
 31226   018B4E  C50C  F4D9         	movff	___SDCard_crc16@p,fsr2l
 31227   018B52  C50D  F4DA         	movff	___SDCard_crc16@p+1,fsr2h
 31228   018B56  50DF               	movf	indf2,w,c
 31229   018B58  6E07               	movwf	??___SDCard_crc16^(0+1280),c
 31230   018B5A  5007               	movf	??___SDCard_crc16^(0+1280),w,c
 31231   018B5C  1A01               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 31232   018B5E  4A0C               	infsnz	___SDCard_crc16@p^(0+1280),f,c
 31233   018B60  2A0D               	incf	(___SDCard_crc16@p+1)^(0+1280),f,c
 31234                           
 31235                           ;src/boards/../../drivers/SDCard.c: 360:         crc ^= ((crc & 0xff) >> 4);
 31236   018B62  C501  F507         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 31237   018B66  C502  F508         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16+1
 31238   018B6A  0E04               	movlw	4
 31239   018B6C  6E09               	movwf	(??___SDCard_crc16+2)^(0+1280),c
 31240   018B6E                     u10985:
 31241   018B6E  90D8               	bcf	status,0,c
 31242   018B70  3208               	rrcf	(??___SDCard_crc16+1)^(0+1280),f,c
 31243   018B72  3207               	rrcf	??___SDCard_crc16^(0+1280),f,c
 31244   018B74  2E09               	decfsz	(??___SDCard_crc16+2)^(0+1280),f,c
 31245   018B76  D7FB               	goto	u10985
 31246   018B78  0E0F               	movlw	15
 31247   018B7A  1607               	andwf	??___SDCard_crc16^(0+1280),f,c
 31248   018B7C  0E00               	movlw	0
 31249   018B7E  1608               	andwf	(??___SDCard_crc16+1)^(0+1280),f,c
 31250   018B80  5007               	movf	??___SDCard_crc16^(0+1280),w,c
 31251   018B82  1A01               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 31252   018B84  5008               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 31253   018B86  1A02               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 31254                           
 31255                           ;src/boards/../../drivers/SDCard.c: 361:         crc ^= (crc << 12);
 31256   018B88  C501  F507         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 31257   018B8C  C502  F508         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16+1
 31258   018B90  0E0C               	movlw	12
 31259   018B92                     u10995:
 31260   018B92  90D8               	bcf	status,0,c
 31261   018B94  3607               	rlcf	??___SDCard_crc16^(0+1280),f,c
 31262   018B96  3608               	rlcf	(??___SDCard_crc16+1)^(0+1280),f,c
 31263   018B98  2EE8               	decfsz	wreg,f,c
 31264   018B9A  D7FB               	goto	u10995
 31265   018B9C  5007               	movf	??___SDCard_crc16^(0+1280),w,c
 31266   018B9E  1A01               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 31267   018BA0  5008               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 31268   018BA2  1A02               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 31269                           
 31270                           ;src/boards/../../drivers/SDCard.c: 362:         crc ^= ((crc & 0xff) << 5);
 31271   018BA4  0EFF               	movlw	255
 31272   018BA6  1401               	andwf	___SDCard_crc16@crc^(0+1280),w,c
 31273   018BA8  6E07               	movwf	??___SDCard_crc16^(0+1280),c
 31274   018BAA  0E00               	movlw	0
 31275   018BAC  1402               	andwf	(___SDCard_crc16@crc+1)^(0+1280),w,c
 31276   018BAE  6E08               	movwf	(??___SDCard_crc16+1)^(0+1280),c
 31277   018BB0  0E05               	movlw	5
 31278   018BB2                     u11005:
 31279   018BB2  90D8               	bcf	status,0,c
 31280   018BB4  3607               	rlcf	??___SDCard_crc16^(0+1280),f,c
 31281   018BB6  3608               	rlcf	(??___SDCard_crc16+1)^(0+1280),f,c
 31282   018BB8  2EE8               	decfsz	wreg,f,c
 31283   018BBA  D7FB               	goto	u11005
 31284   018BBC  5007               	movf	??___SDCard_crc16^(0+1280),w,c
 31285   018BBE  1A01               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 31286   018BC0  5008               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 31287   018BC2  1A02               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 31288   018BC4                     l9511:
 31289                           
 31290                           ;src/boards/../../drivers/SDCard.c: 357:     while (p < endp) {
 31291   018BC4  500A               	movf	___SDCard_crc16@endp^(0+1280),w,c
 31292   018BC6  5C0C               	subwf	___SDCard_crc16@p^(0+1280),w,c
 31293   018BC8  500B               	movf	(___SDCard_crc16@endp+1)^(0+1280),w,c
 31294   018BCA  580D               	subwfb	(___SDCard_crc16@p+1)^(0+1280),w,c
 31295   018BCC  A0D8               	btfss	status,0,c
 31296   018BCE  D7B9               	goto	l9499
 31297                           
 31298                           ;src/boards/../../drivers/SDCard.c: 365:     return crc;
 31299   018BD0  C501  F501         	movff	___SDCard_crc16@crc,?___SDCard_crc16
 31300   018BD4  C502  F502         	movff	___SDCard_crc16@crc+1,?___SDCard_crc16+1
 31301   018BD8  0012               	return		;funcret
 31302   018BDA                     __end_of___SDCard_crc16:
 31303                           	callstack 0
 31304                           
 31305 ;; *************** function _ld_word *****************
 31306 ;; Defined at:
 31307 ;;		line 618 in file "fatfs/ff.c"
 31308 ;; Parameters:    Size  Location     Type
 31309 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
 31310 ;;		 -> fs$win(512), fs(560), NULL(0), 
 31311 ;; Auto vars:     Size  Location     Type
 31312 ;;  rv              2    5[COMRAM] unsigned short 
 31313 ;; Return value:  Size  Location     Type
 31314 ;;                  2    0[COMRAM] unsigned short 
 31315 ;; Registers used:
 31316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31317 ;; Tracked objects:
 31318 ;;		On entry : 0/6
 31319 ;;		On exit  : 0/0
 31320 ;;		Unchanged: 0/0
 31321 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31324 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31325 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31326 ;;Total ram usage:        7 bytes
 31327 ;; Hardware stack levels used: 1
 31328 ;; This function calls:
 31329 ;;		Nothing
 31330 ;; This function is called by:
 31331 ;;		_get_fat
 31332 ;;		_ld_clust
 31333 ;;		_get_fileinfo
 31334 ;;		_check_fs
 31335 ;;		_mount_volume
 31336 ;; This function uses a non-reentrant model
 31337 ;;
 31338                           
 31339                           	psect	text64
 31340   019C6A                     __ptext64:
 31341                           	callstack 0
 31342   019C6A                     _ld_word:
 31343                           	callstack 123
 31344                           
 31345                           ;fatfs/ff.c: 618: static WORD ld_word (const BYTE* ptr);fatfs/ff.c: 619: {;fatfs/ff.c: 6
      +                          20:  WORD rv;;fatfs/ff.c: 622:  rv = ptr[1];
 31346                           
 31347                           ;incstack = 0
 31348   019C6A  EE20 F001          	lfsr	2,1
 31349   019C6E  5001               	movf	ld_word@ptr^(0+1280),w,c
 31350   019C70  26D9               	addwf	fsr2l,f,c
 31351   019C72  5002               	movf	(ld_word@ptr+1)^(0+1280),w,c
 31352   019C74  22DA               	addwfc	fsr2h,f,c
 31353   019C76  50DF               	movf	indf2,w,c
 31354   019C78  6E03               	movwf	??_ld_word^(0+1280),c
 31355   019C7A  5003               	movf	??_ld_word^(0+1280),w,c
 31356   019C7C  6E06               	movwf	ld_word@rv^(0+1280),c
 31357   019C7E  6A07               	clrf	(ld_word@rv+1)^(0+1280),c
 31358                           
 31359                           ;fatfs/ff.c: 623:  rv = rv << 8 | ptr[0];
 31360   019C80  C501  F4D9         	movff	ld_word@ptr,fsr2l
 31361   019C84  C502  F4DA         	movff	ld_word@ptr+1,fsr2h
 31362   019C88  50DF               	movf	indf2,w,c
 31363   019C8A  6E03               	movwf	??_ld_word^(0+1280),c
 31364   019C8C  5006               	movf	ld_word@rv^(0+1280),w,c
 31365   019C8E  6E04               	movwf	(??_ld_word+1)^(0+1280),c
 31366   019C90  5003               	movf	??_ld_word^(0+1280),w,c
 31367   019C92  6E06               	movwf	ld_word@rv^(0+1280),c
 31368   019C94  C504  F507         	movff	??_ld_word+1,ld_word@rv+1
 31369                           
 31370                           ;fatfs/ff.c: 624:  return rv;
 31371   019C98  C506  F501         	movff	ld_word@rv,?_ld_word
 31372   019C9C  C507  F502         	movff	ld_word@rv+1,?_ld_word+1
 31373   019CA0  0012               	return		;funcret
 31374   019CA2                     __end_of_ld_word:
 31375                           	callstack 0
 31376                           
 31377 ;; *************** function _ld_dword *****************
 31378 ;; Defined at:
 31379 ;;		line 627 in file "fatfs/ff.c"
 31380 ;; Parameters:    Size  Location     Type
 31381 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
 31382 ;;		 -> fs$win(512), fs(560), NULL(0), 
 31383 ;; Auto vars:     Size  Location     Type
 31384 ;;  rv              4    9[COMRAM] unsigned long 
 31385 ;; Return value:  Size  Location     Type
 31386 ;;                  4    0[COMRAM] unsigned long 
 31387 ;; Registers used:
 31388 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31389 ;; Tracked objects:
 31390 ;;		On entry : 3F/6
 31391 ;;		On exit  : 3F/6
 31392 ;;		Unchanged: 3F/0
 31393 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31395 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31396 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31397 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31398 ;;Total ram usage:       13 bytes
 31399 ;; Hardware stack levels used: 1
 31400 ;; This function calls:
 31401 ;;		Nothing
 31402 ;; This function is called by:
 31403 ;;		_get_fat
 31404 ;;		_put_fat
 31405 ;;		_get_fileinfo
 31406 ;;		_check_fs
 31407 ;;		_find_volume
 31408 ;;		_mount_volume
 31409 ;;		_f_open
 31410 ;; This function uses a non-reentrant model
 31411 ;;
 31412                           
 31413                           	psect	text65
 31414   0189BC                     __ptext65:
 31415                           	callstack 0
 31416   0189BC                     _ld_dword:
 31417                           	callstack 123
 31418                           
 31419                           ; BSR set to: 6
 31420                           ;fatfs/ff.c: 627: static DWORD ld_dword (const BYTE* ptr);fatfs/ff.c: 628: {;fatfs/ff.c:
      +                           629:  DWORD rv;;fatfs/ff.c: 631:  rv = ptr[3];
 31421                           
 31422                           ;incstack = 0
 31423   0189BC  EE20 F003          	lfsr	2,3
 31424   0189C0  5001               	movf	ld_dword@ptr^(0+1280),w,c
 31425   0189C2  26D9               	addwf	fsr2l,f,c
 31426   0189C4  5002               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 31427   0189C6  22DA               	addwfc	fsr2h,f,c
 31428   0189C8  50DF               	movf	indf2,w,c
 31429   0189CA  6E05               	movwf	??_ld_dword^(0+1280),c
 31430   0189CC  5005               	movf	??_ld_dword^(0+1280),w,c
 31431   0189CE  6E0A               	movwf	ld_dword@rv^(0+1280),c
 31432   0189D0  6A0B               	clrf	(ld_dword@rv+1)^(0+1280),c
 31433   0189D2  6A0C               	clrf	(ld_dword@rv+2)^(0+1280),c
 31434   0189D4  6A0D               	clrf	(ld_dword@rv+3)^(0+1280),c
 31435                           
 31436                           ;fatfs/ff.c: 632:  rv = rv << 8 | ptr[2];
 31437   0189D6  EE20 F002          	lfsr	2,2
 31438   0189DA  5001               	movf	ld_dword@ptr^(0+1280),w,c
 31439   0189DC  26D9               	addwf	fsr2l,f,c
 31440   0189DE  5002               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 31441   0189E0  22DA               	addwfc	fsr2h,f,c
 31442   0189E2  50DF               	movf	indf2,w,c
 31443   0189E4  6E05               	movwf	??_ld_dword^(0+1280),c
 31444   0189E6  5005               	movf	??_ld_dword^(0+1280),w,c
 31445   0189E8  C50A  F507         	movff	ld_dword@rv,??_ld_dword+2
 31446   0189EC  C50B  F508         	movff	ld_dword@rv+1,??_ld_dword+3
 31447   0189F0  C50C  F509         	movff	ld_dword@rv+2,??_ld_dword+4
 31448   0189F4  6A06               	clrf	(??_ld_dword+1)^(0+1280),c
 31449   0189F6  1006               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 31450   0189F8  6E0A               	movwf	ld_dword@rv^(0+1280),c
 31451   0189FA  5007               	movf	(??_ld_dword+2)^(0+1280),w,c
 31452   0189FC  6E0B               	movwf	(ld_dword@rv+1)^(0+1280),c
 31453   0189FE  5008               	movf	(??_ld_dword+3)^(0+1280),w,c
 31454   018A00  6E0C               	movwf	(ld_dword@rv+2)^(0+1280),c
 31455   018A02  5009               	movf	(??_ld_dword+4)^(0+1280),w,c
 31456   018A04  6E0D               	movwf	(ld_dword@rv+3)^(0+1280),c
 31457                           
 31458                           ;fatfs/ff.c: 633:  rv = rv << 8 | ptr[1];
 31459   018A06  EE20 F001          	lfsr	2,1
 31460   018A0A  5001               	movf	ld_dword@ptr^(0+1280),w,c
 31461   018A0C  26D9               	addwf	fsr2l,f,c
 31462   018A0E  5002               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 31463   018A10  22DA               	addwfc	fsr2h,f,c
 31464   018A12  50DF               	movf	indf2,w,c
 31465   018A14  6E05               	movwf	??_ld_dword^(0+1280),c
 31466   018A16  5005               	movf	??_ld_dword^(0+1280),w,c
 31467   018A18  C50A  F507         	movff	ld_dword@rv,??_ld_dword+2
 31468   018A1C  C50B  F508         	movff	ld_dword@rv+1,??_ld_dword+3
 31469   018A20  C50C  F509         	movff	ld_dword@rv+2,??_ld_dword+4
 31470   018A24  6A06               	clrf	(??_ld_dword+1)^(0+1280),c
 31471   018A26  1006               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 31472   018A28  6E0A               	movwf	ld_dword@rv^(0+1280),c
 31473   018A2A  5007               	movf	(??_ld_dword+2)^(0+1280),w,c
 31474   018A2C  6E0B               	movwf	(ld_dword@rv+1)^(0+1280),c
 31475   018A2E  5008               	movf	(??_ld_dword+3)^(0+1280),w,c
 31476   018A30  6E0C               	movwf	(ld_dword@rv+2)^(0+1280),c
 31477   018A32  5009               	movf	(??_ld_dword+4)^(0+1280),w,c
 31478   018A34  6E0D               	movwf	(ld_dword@rv+3)^(0+1280),c
 31479                           
 31480                           ;fatfs/ff.c: 634:  rv = rv << 8 | ptr[0];
 31481   018A36  C501  F4D9         	movff	ld_dword@ptr,fsr2l
 31482   018A3A  C502  F4DA         	movff	ld_dword@ptr+1,fsr2h
 31483   018A3E  50DF               	movf	indf2,w,c
 31484   018A40  6E05               	movwf	??_ld_dword^(0+1280),c
 31485   018A42  5005               	movf	??_ld_dword^(0+1280),w,c
 31486   018A44  C50A  F507         	movff	ld_dword@rv,??_ld_dword+2
 31487   018A48  C50B  F508         	movff	ld_dword@rv+1,??_ld_dword+3
 31488   018A4C  C50C  F509         	movff	ld_dword@rv+2,??_ld_dword+4
 31489   018A50  6A06               	clrf	(??_ld_dword+1)^(0+1280),c
 31490   018A52  1006               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 31491   018A54  6E0A               	movwf	ld_dword@rv^(0+1280),c
 31492   018A56  5007               	movf	(??_ld_dword+2)^(0+1280),w,c
 31493   018A58  6E0B               	movwf	(ld_dword@rv+1)^(0+1280),c
 31494   018A5A  5008               	movf	(??_ld_dword+3)^(0+1280),w,c
 31495   018A5C  6E0C               	movwf	(ld_dword@rv+2)^(0+1280),c
 31496   018A5E  5009               	movf	(??_ld_dword+4)^(0+1280),w,c
 31497   018A60  6E0D               	movwf	(ld_dword@rv+3)^(0+1280),c
 31498                           
 31499                           ; BSR set to: 6
 31500                           ;fatfs/ff.c: 635:  return rv;
 31501   018A62  C50A  F501         	movff	ld_dword@rv,?_ld_dword
 31502   018A66  C50B  F502         	movff	ld_dword@rv+1,?_ld_dword+1
 31503   018A6A  C50C  F503         	movff	ld_dword@rv+2,?_ld_dword+2
 31504   018A6E  C50D  F504         	movff	ld_dword@rv+3,?_ld_dword+3
 31505                           
 31506                           ; BSR set to: 6
 31507   018A72  0012               	return		;funcret
 31508   018A74                     __end_of_ld_dword:
 31509                           	callstack 0
 31510                           
 31511 ;; *************** function _clst2sect *****************
 31512 ;; Defined at:
 31513 ;;		line 1144 in file "fatfs/ff.c"
 31514 ;; Parameters:    Size  Location     Type
 31515 ;;  fs              2   12[COMRAM] PTR struct .
 31516 ;;		 -> fs(560), NULL(0), 
 31517 ;;  clst            4   14[COMRAM] unsigned long 
 31518 ;; Auto vars:     Size  Location     Type
 31519 ;;		None
 31520 ;; Return value:  Size  Location     Type
 31521 ;;                  4   12[COMRAM] unsigned long 
 31522 ;; Registers used:
 31523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31524 ;; Tracked objects:
 31525 ;;		On entry : 3C/6
 31526 ;;		On exit  : 3C/4
 31527 ;;		Unchanged: 3C/0
 31528 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31529 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31531 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31532 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31533 ;;Total ram usage:       12 bytes
 31534 ;; Hardware stack levels used: 1
 31535 ;; Hardware stack levels required when called: 1
 31536 ;; This function calls:
 31537 ;;		___lmul
 31538 ;; This function is called by:
 31539 ;;		_dir_clear
 31540 ;;		_dir_sdi
 31541 ;;		_dir_next
 31542 ;;		_f_open
 31543 ;;		_f_read
 31544 ;;		_f_write
 31545 ;;		_f_lseek
 31546 ;; This function uses a non-reentrant model
 31547 ;;
 31548                           
 31549                           	psect	text66
 31550   018786                     __ptext66:
 31551                           	callstack 0
 31552   018786                     _clst2sect:
 31553                           	callstack 122
 31554                           
 31555                           ;fatfs/ff.c: 1145:  FATFS* fs,;fatfs/ff.c: 1146:  DWORD clst;fatfs/ff.c: 1148: {;fatfs/f
      +                          f.c: 1149:  clst -= 2;
 31556                           
 31557                           ; BSR set to: 6
 31558                           ;incstack = 0
 31559   018786  0E02               	movlw	2
 31560   018788  5E0F               	subwf	clst2sect@clst^(0+1280),f,c
 31561   01878A  0E00               	movlw	0
 31562   01878C  5A10               	subwfb	(clst2sect@clst+1)^(0+1280),f,c
 31563   01878E  5A11               	subwfb	(clst2sect@clst+2)^(0+1280),f,c
 31564   018790  5A12               	subwfb	(clst2sect@clst+3)^(0+1280),f,c
 31565                           
 31566                           ;fatfs/ff.c: 1150:  if (clst >= fs->n_fatent - 2) return 0;
 31567   018792  EE20 F014          	lfsr	2,20
 31568   018796  500D               	movf	clst2sect@fs^(0+1280),w,c
 31569   018798  26D9               	addwf	fsr2l,f,c
 31570   01879A  500E               	movf	(clst2sect@fs+1)^(0+1280),w,c
 31571   01879C  22DA               	addwfc	fsr2h,f,c
 31572   01879E  0EFE               	movlw	254
 31573   0187A0  24DE               	addwf	postinc2,w,c
 31574   0187A2  6E13               	movwf	??_clst2sect^(0+1280),c
 31575   0187A4  0EFF               	movlw	255
 31576   0187A6  20DE               	addwfc	postinc2,w,c
 31577   0187A8  6E14               	movwf	(??_clst2sect+1)^(0+1280),c
 31578   0187AA  0EFF               	movlw	255
 31579   0187AC  20DE               	addwfc	postinc2,w,c
 31580   0187AE  6E15               	movwf	(??_clst2sect+2)^(0+1280),c
 31581   0187B0  0EFF               	movlw	255
 31582   0187B2  20DE               	addwfc	postinc2,w,c
 31583   0187B4  6E16               	movwf	(??_clst2sect+3)^(0+1280),c
 31584   0187B6  5013               	movf	??_clst2sect^(0+1280),w,c
 31585   0187B8  5C0F               	subwf	clst2sect@clst^(0+1280),w,c
 31586   0187BA  5014               	movf	(??_clst2sect+1)^(0+1280),w,c
 31587   0187BC  5810               	subwfb	(clst2sect@clst+1)^(0+1280),w,c
 31588   0187BE  5015               	movf	(??_clst2sect+2)^(0+1280),w,c
 31589   0187C0  5811               	subwfb	(clst2sect@clst+2)^(0+1280),w,c
 31590   0187C2  5016               	movf	(??_clst2sect+3)^(0+1280),w,c
 31591   0187C4  5812               	subwfb	(clst2sect@clst+3)^(0+1280),w,c
 31592   0187C6  A0D8               	btfss	status,0,c
 31593   0187C8  D009               	goto	l9855
 31594   0187CA  0E00               	movlw	0
 31595   0187CC  6E0D               	movwf	?_clst2sect^(0+1280),c
 31596   0187CE  0E00               	movlw	0
 31597   0187D0  6E0E               	movwf	(?_clst2sect+1)^(0+1280),c
 31598   0187D2  0E00               	movlw	0
 31599   0187D4  6E0F               	movwf	(?_clst2sect+2)^(0+1280),c
 31600   0187D6  0E00               	movlw	0
 31601   0187D8  6E10               	movwf	(?_clst2sect+3)^(0+1280),c
 31602   0187DA  0012               	return	
 31603   0187DC                     l9855:
 31604                           
 31605                           ;fatfs/ff.c: 1151:  return fs->database + (LBA_t)fs->csize * clst;
 31606   0187DC  EE20 F028          	lfsr	2,40
 31607   0187E0  500D               	movf	clst2sect@fs^(0+1280),w,c
 31608   0187E2  26D9               	addwf	fsr2l,f,c
 31609   0187E4  500E               	movf	(clst2sect@fs+1)^(0+1280),w,c
 31610   0187E6  22DA               	addwfc	fsr2h,f,c
 31611   0187E8  C4DE F513          	movff	postinc2,??_clst2sect
 31612   0187EC  C4DE F514          	movff	postinc2,??_clst2sect+1
 31613   0187F0  C4DE F515          	movff	postinc2,??_clst2sect+2
 31614   0187F4  C4DE F516          	movff	postinc2,??_clst2sect+3
 31615   0187F8  EE20 F00A          	lfsr	2,10
 31616   0187FC  500D               	movf	clst2sect@fs^(0+1280),w,c
 31617   0187FE  26D9               	addwf	fsr2l,f,c
 31618   018800  500E               	movf	(clst2sect@fs+1)^(0+1280),w,c
 31619   018802  22DA               	addwfc	fsr2h,f,c
 31620   018804  C4DE F517          	movff	postinc2,??_clst2sect+4
 31621   018808  C4DD F518          	movff	postdec2,??_clst2sect+5
 31622   01880C  C517  F501         	movff	??_clst2sect+4,___lmul@multiplier
 31623   018810  C518  F502         	movff	??_clst2sect+5,___lmul@multiplier+1
 31624   018814  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 31625   018816  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 31626   018818  C50F  F505         	movff	clst2sect@clst,___lmul@multiplicand
 31627   01881C  C510  F506         	movff	clst2sect@clst+1,___lmul@multiplicand+1
 31628   018820  C511  F507         	movff	clst2sect@clst+2,___lmul@multiplicand+2
 31629   018824  C512  F508         	movff	clst2sect@clst+3,___lmul@multiplicand+3
 31630   018828  EC33  F0CC         	call	___lmul	;wreg free
 31631   01882C  5013               	movf	??_clst2sect^(0+1280),w,c
 31632   01882E  2401               	addwf	?___lmul^(0+1280),w,c
 31633   018830  6E0D               	movwf	?_clst2sect^(0+1280),c
 31634   018832  5014               	movf	(??_clst2sect+1)^(0+1280),w,c
 31635   018834  2002               	addwfc	(?___lmul+1)^(0+1280),w,c
 31636   018836  6E0E               	movwf	(?_clst2sect+1)^(0+1280),c
 31637   018838  5015               	movf	(??_clst2sect+2)^(0+1280),w,c
 31638   01883A  2003               	addwfc	(?___lmul+2)^(0+1280),w,c
 31639   01883C  6E0F               	movwf	(?_clst2sect+2)^(0+1280),c
 31640   01883E  5016               	movf	(??_clst2sect+3)^(0+1280),w,c
 31641   018840  2004               	addwfc	(?___lmul+3)^(0+1280),w,c
 31642   018842  6E10               	movwf	(?_clst2sect+3)^(0+1280),c
 31643   018844  0012               	return		;funcret
 31644   018846                     __end_of_clst2sect:
 31645                           	callstack 0
 31646                           
 31647 ;; *************** function ___lmul *****************
 31648 ;; Defined at:
 31649 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 31650 ;; Parameters:    Size  Location     Type
 31651 ;;  multiplier      4    0[COMRAM] unsigned long 
 31652 ;;  multiplicand    4    4[COMRAM] unsigned long 
 31653 ;; Auto vars:     Size  Location     Type
 31654 ;;  product         4    8[COMRAM] unsigned long 
 31655 ;; Return value:  Size  Location     Type
 31656 ;;                  4    0[COMRAM] unsigned long 
 31657 ;; Registers used:
 31658 ;;		wreg, status,2, status,0
 31659 ;; Tracked objects:
 31660 ;;		On entry : 3C/4
 31661 ;;		On exit  : 3C/4
 31662 ;;		Unchanged: 3C/0
 31663 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31664 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31665 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31667 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31668 ;;Total ram usage:       12 bytes
 31669 ;; Hardware stack levels used: 1
 31670 ;; This function calls:
 31671 ;;		Nothing
 31672 ;; This function is called by:
 31673 ;;		_clst2sect
 31674 ;;		_mount_volume
 31675 ;;		_main
 31676 ;; This function uses a non-reentrant model
 31677 ;;
 31678                           
 31679                           	psect	text67
 31680   019866                     __ptext67:
 31681                           	callstack 0
 31682   019866                     ___lmul:
 31683                           	callstack 122
 31684                           
 31685                           ;incstack = 0
 31686   019866  0E00               	movlw	0
 31687   019868  6E09               	movwf	___lmul@product^(0+1280),c
 31688   01986A  0E00               	movlw	0
 31689   01986C  6E0A               	movwf	(___lmul@product+1)^(0+1280),c
 31690   01986E  0E00               	movlw	0
 31691   019870  6E0B               	movwf	(___lmul@product+2)^(0+1280),c
 31692   019872  0E00               	movlw	0
 31693   019874  6E0C               	movwf	(___lmul@product+3)^(0+1280),c
 31694   019876                     l9831:
 31695   019876  A001               	btfss	___lmul@multiplier^(0+1280),0,c
 31696   019878  D008               	goto	l9835
 31697   01987A  5005               	movf	___lmul@multiplicand^(0+1280),w,c
 31698   01987C  2609               	addwf	___lmul@product^(0+1280),f,c
 31699   01987E  5006               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 31700   019880  220A               	addwfc	(___lmul@product+1)^(0+1280),f,c
 31701   019882  5007               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 31702   019884  220B               	addwfc	(___lmul@product+2)^(0+1280),f,c
 31703   019886  5008               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 31704   019888  220C               	addwfc	(___lmul@product+3)^(0+1280),f,c
 31705   01988A                     l9835:
 31706   01988A  90D8               	bcf	status,0,c
 31707   01988C  3605               	rlcf	___lmul@multiplicand^(0+1280),f,c
 31708   01988E  3606               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 31709   019890  3607               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 31710   019892  3608               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 31711   019894  90D8               	bcf	status,0,c
 31712   019896  3204               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 31713   019898  3203               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 31714   01989A  3202               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 31715   01989C  3201               	rrcf	___lmul@multiplier^(0+1280),f,c
 31716   01989E  5001               	movf	___lmul@multiplier^(0+1280),w,c
 31717   0198A0  1002               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 31718   0198A2  1003               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 31719   0198A4  1004               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 31720   0198A6  A4D8               	btfss	status,2,c
 31721   0198A8  D7E6               	goto	l9831
 31722   0198AA  C509  F501         	movff	___lmul@product,?___lmul
 31723   0198AE  C50A  F502         	movff	___lmul@product+1,?___lmul+1
 31724   0198B2  C50B  F503         	movff	___lmul@product+2,?___lmul+2
 31725   0198B6  C50C  F504         	movff	___lmul@product+3,?___lmul+3
 31726   0198BA  0012               	return		;funcret
 31727   0198BC                     __end_of___lmul:
 31728                           	callstack 0
 31729                           
 31730 ;; *************** function ___lldiv *****************
 31731 ;; Defined at:
 31732 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 31733 ;; Parameters:    Size  Location     Type
 31734 ;;  dividend        4    0[COMRAM] unsigned long 
 31735 ;;  divisor         4    4[COMRAM] unsigned long 
 31736 ;; Auto vars:     Size  Location     Type
 31737 ;;  quotient        4    8[COMRAM] unsigned long 
 31738 ;;  counter         1   12[COMRAM] unsigned char 
 31739 ;; Return value:  Size  Location     Type
 31740 ;;                  4    0[COMRAM] unsigned long 
 31741 ;; Registers used:
 31742 ;;		wreg, status,2, status,0
 31743 ;; Tracked objects:
 31744 ;;		On entry : 3F/6
 31745 ;;		On exit  : 3F/6
 31746 ;;		Unchanged: 3F/0
 31747 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31748 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31749 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31751 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31752 ;;Total ram usage:       13 bytes
 31753 ;; Hardware stack levels used: 1
 31754 ;; This function calls:
 31755 ;;		Nothing
 31756 ;; This function is called by:
 31757 ;;		_mount_volume
 31758 ;;		_f_lseek
 31759 ;; This function uses a non-reentrant model
 31760 ;;
 31761                           
 31762                           	psect	text68
 31763   019326                     __ptext68:
 31764                           	callstack 0
 31765   019326                     ___lldiv:
 31766                           	callstack 123
 31767                           
 31768                           ; BSR set to: 6
 31769                           
 31770                           ;incstack = 0
 31771   019326  0E00               	movlw	0
 31772   019328  6E09               	movwf	___lldiv@quotient^(0+1280),c
 31773   01932A  0E00               	movlw	0
 31774   01932C  6E0A               	movwf	(___lldiv@quotient+1)^(0+1280),c
 31775   01932E  0E00               	movlw	0
 31776   019330  6E0B               	movwf	(___lldiv@quotient+2)^(0+1280),c
 31777   019332  0E00               	movlw	0
 31778   019334  6E0C               	movwf	(___lldiv@quotient+3)^(0+1280),c
 31779                           
 31780                           ; BSR set to: 6
 31781   019336  5005               	movf	___lldiv@divisor^(0+1280),w,c
 31782   019338  1006               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 31783   01933A  1007               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 31784   01933C  1008               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 31785   01933E  B4D8               	btfsc	status,2,c
 31786   019340  D02A               	goto	l1735
 31787                           
 31788                           ; BSR set to: 6
 31789   019342  0E01               	movlw	1
 31790   019344  6E0D               	movwf	___lldiv@counter^(0+1280),c
 31791   019346  D006               	goto	l10845
 31792   019348                     l10843:
 31793                           
 31794                           ; BSR set to: 6
 31795   019348  90D8               	bcf	status,0,c
 31796   01934A  3605               	rlcf	___lldiv@divisor^(0+1280),f,c
 31797   01934C  3606               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 31798   01934E  3607               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 31799   019350  3608               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 31800   019352  2A0D               	incf	___lldiv@counter^(0+1280),f,c
 31801   019354                     l10845:
 31802                           
 31803                           ; BSR set to: 6
 31804   019354  AE08               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 31805   019356  D7F8               	goto	l10843
 31806   019358                     u13340:
 31807                           
 31808                           ; BSR set to: 6
 31809   019358  90D8               	bcf	status,0,c
 31810   01935A  3609               	rlcf	___lldiv@quotient^(0+1280),f,c
 31811   01935C  360A               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 31812   01935E  360B               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 31813   019360  360C               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 31814                           
 31815                           ; BSR set to: 6
 31816   019362  5005               	movf	___lldiv@divisor^(0+1280),w,c
 31817   019364  5C01               	subwf	___lldiv@dividend^(0+1280),w,c
 31818   019366  5006               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 31819   019368  5802               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 31820   01936A  5007               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 31821   01936C  5803               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 31822   01936E  5008               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 31823   019370  5804               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 31824   019372  A0D8               	btfss	status,0,c
 31825   019374  D009               	goto	l10855
 31826                           
 31827                           ; BSR set to: 6
 31828   019376  5005               	movf	___lldiv@divisor^(0+1280),w,c
 31829   019378  5E01               	subwf	___lldiv@dividend^(0+1280),f,c
 31830   01937A  5006               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 31831   01937C  5A02               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 31832   01937E  5007               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 31833   019380  5A03               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 31834   019382  5008               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 31835   019384  5A04               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 31836                           
 31837                           ; BSR set to: 6
 31838   019386  8009               	bsf	___lldiv@quotient^(0+1280),0,c
 31839   019388                     l10855:
 31840                           
 31841                           ; BSR set to: 6
 31842   019388  90D8               	bcf	status,0,c
 31843   01938A  3208               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 31844   01938C  3207               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 31845   01938E  3206               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 31846   019390  3205               	rrcf	___lldiv@divisor^(0+1280),f,c
 31847                           
 31848                           ; BSR set to: 6
 31849   019392  2E0D               	decfsz	___lldiv@counter^(0+1280),f,c
 31850   019394  D7E1               	goto	u13340
 31851   019396                     l1735:
 31852                           
 31853                           ; BSR set to: 6
 31854   019396  C509  F501         	movff	___lldiv@quotient,?___lldiv
 31855   01939A  C50A  F502         	movff	___lldiv@quotient+1,?___lldiv+1
 31856   01939E  C50B  F503         	movff	___lldiv@quotient+2,?___lldiv+2
 31857   0193A2  C50C  F504         	movff	___lldiv@quotient+3,?___lldiv+3
 31858                           
 31859                           ; BSR set to: 6
 31860   0193A6  0012               	return		;funcret
 31861   0193A8                     __end_of___lldiv:
 31862                           	callstack 0
 31863                           
 31864 ;; *************** function _emuz80_57q_write_to_sram *****************
 31865 ;; Defined at:
 31866 ;;		line 164 in file "src/boards/SBC8080-57Q.c"
 31867 ;; Parameters:    Size  Location     Type
 31868 ;;  addr            2    0[COMRAM] unsigned short 
 31869 ;;  buf             2    2[COMRAM] PTR unsigned char 
 31870 ;;		 -> disk_buf(128), tmp_buf(512), bios(1332), bdosccp(5683), 
 31871 ;;		 -> rom(831), 
 31872 ;;  len             2    4[COMRAM] unsigned int 
 31873 ;; Auto vars:     Size  Location     Type
 31874 ;;  ab              2   10[COMRAM] struct address_bus_u
 31875 ;;  i               2    8[COMRAM] unsigned int 
 31876 ;; Return value:  Size  Location     Type
 31877 ;;                  1    wreg      void 
 31878 ;; Registers used:
 31879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 31880 ;; Tracked objects:
 31881 ;;		On entry : 38/7
 31882 ;;		On exit  : 0/0
 31883 ;;		Unchanged: 0/0
 31884 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31885 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31886 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31888 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31889 ;;Total ram usage:       12 bytes
 31890 ;; Hardware stack levels used: 1
 31891 ;; This function calls:
 31892 ;;		Nothing
 31893 ;; This function is called by:
 31894 ;;		_main
 31895 ;;		_mem_init
 31896 ;;		_disk_io_handle
 31897 ;; This function uses a non-reentrant model
 31898 ;;
 31899                           
 31900                           	psect	text69
 31901   01950C                     __ptext69:
 31902                           	callstack 0
 31903   01950C                     _emuz80_57q_write_to_sram:
 31904                           	callstack 125
 31905                           
 31906                           ;src/boards/SBC8080-57Q.c: 164: void emuz80_57q_write_to_sram(uint16_t addr, uint8_t *bu
      +                          f, unsigned int len);src/boards/SBC8080-57Q.c: 165: {;src/boards/SBC8080-57Q.c: 166:  un
      +                          ion address_bus_u ab;;src/boards/SBC8080-57Q.c: 167:  unsigned int i;;src/boards/SBC8080
      +                          -57Q.c: 169:  ab.w = addr;
 31907                           
 31908                           ; BSR set to: 6
 31909                           ;incstack = 0
 31910   01950C  C501  F50B         	movff	emuz80_57q_write_to_sram@addr,emuz80_57q_write_to_sram@ab
 31911   019510  C502  F50C         	movff	emuz80_57q_write_to_sram@addr+1,emuz80_57q_write_to_sram@ab+1
 31912                           
 31913                           ;src/boards/SBC8080-57Q.c: 170:  LATD = ab.h;
 31914   019514  C50C  F4C1         	movff	emuz80_57q_write_to_sram@ab+1,1217	;volatile
 31915                           
 31916                           ;src/boards/SBC8080-57Q.c: 171:  LATB = ab.l;
 31917   019518  C50B  F4BF         	movff	emuz80_57q_write_to_sram@ab,1215	;volatile
 31918                           
 31919                           ;src/boards/SBC8080-57Q.c: 172:  TRISF = 0x00;
 31920   01951C  0E00               	movlw	0
 31921   01951E  6ECB               	movwf	203,c	;volatile
 31922                           
 31923                           ;src/boards/SBC8080-57Q.c: 173:  for(i = 0; i < len; i++) {
 31924   019520  0E00               	movlw	0
 31925   019522  6E0A               	movwf	(emuz80_57q_write_to_sram@i+1)^(0+1280),c
 31926   019524  0E00               	movlw	0
 31927   019526  6E09               	movwf	emuz80_57q_write_to_sram@i^(0+1280),c
 31928   019528  D025               	goto	l12189
 31929   01952A                     l1173:
 31930                           
 31931                           ;src/boards/SBC8080-57Q.c: 174:   LATC5 = 0;
 31932   01952A  9AC0               	bcf	1216,5,c	;volatile
 31933                           
 31934                           ;src/boards/SBC8080-57Q.c: 175:   LATF = ((uint8_t*)buf)[i];
 31935   01952C  5009               	movf	emuz80_57q_write_to_sram@i^(0+1280),w,c
 31936   01952E  2403               	addwf	emuz80_57q_write_to_sram@buf^(0+1280),w,c
 31937   019530  6E07               	movwf	??_emuz80_57q_write_to_sram^(0+1280),c
 31938   019532  500A               	movf	(emuz80_57q_write_to_sram@i+1)^(0+1280),w,c
 31939   019534  2004               	addwfc	(emuz80_57q_write_to_sram@buf+1)^(0+1280),w,c
 31940   019536  6E08               	movwf	(??_emuz80_57q_write_to_sram+1)^(0+1280),c
 31941   019538  C507  F4F6         	movff	??_emuz80_57q_write_to_sram,tblptrl
 31942   01953C  C508  F4F7         	movff	??_emuz80_57q_write_to_sram+1,tblptrh
 31943   019540  0E00               	movlw	low (__mediumconst shr (0+16))
 31944   019542  6EF8               	movwf	tblptru,c
 31945   019544  0E24               	movlw	(high __ramtop+-1)
 31946   019546  64F7               	cpfsgt	tblptrh,c
 31947   019548  D003               	bra	u15647
 31948   01954A  0008               	tblrd		*
 31949   01954C  50F5               	movf	tablat,w,c
 31950   01954E  D005               	bra	u15640
 31951   019550                     u15647:
 31952   019550  C4F6 F4E9          	movff	tblptrl,fsr0l
 31953   019554  C4F7 F4EA          	movff	tblptrh,fsr0h
 31954   019558  50EF               	movf	indf0,w,c
 31955   01955A                     u15640:
 31956   01955A  6EC3               	movwf	195,c	;volatile
 31957                           
 31958                           ;src/boards/SBC8080-57Q.c: 176:   LATC5 = 1;
 31959   01955C  8AC0               	bsf	1216,5,c	;volatile
 31960                           
 31961                           ;src/boards/SBC8080-57Q.c: 177:   LATB = ++ab.l;
 31962   01955E  2A0B               	incf	emuz80_57q_write_to_sram@ab^(0+1280),f,c
 31963   019560  C50B  F4BF         	movff	emuz80_57q_write_to_sram@ab,1215	;volatile
 31964                           
 31965                           ;src/boards/SBC8080-57Q.c: 178:   if (ab.l == 0) {
 31966   019564  500B               	movf	emuz80_57q_write_to_sram@ab^(0+1280),w,c
 31967   019566  A4D8               	btfss	status,2,c
 31968   019568  D003               	goto	l1174
 31969                           
 31970                           ;src/boards/SBC8080-57Q.c: 179:    ab.h++;
 31971   01956A  2A0C               	incf	(emuz80_57q_write_to_sram@ab+1)^(0+1280),f,c
 31972                           
 31973                           ;src/boards/SBC8080-57Q.c: 180:    LATD = ab.h;
 31974   01956C  C50C  F4C1         	movff	emuz80_57q_write_to_sram@ab+1,1217	;volatile
 31975   019570                     l1174:
 31976                           
 31977                           ;src/boards/SBC8080-57Q.c: 182:  }
 31978   019570  4A09               	infsnz	emuz80_57q_write_to_sram@i^(0+1280),f,c
 31979   019572  2A0A               	incf	(emuz80_57q_write_to_sram@i+1)^(0+1280),f,c
 31980   019574                     l12189:
 31981   019574  5005               	movf	emuz80_57q_write_to_sram@len^(0+1280),w,c
 31982   019576  5C09               	subwf	emuz80_57q_write_to_sram@i^(0+1280),w,c
 31983   019578  5006               	movf	(emuz80_57q_write_to_sram@len+1)^(0+1280),w,c
 31984   01957A  580A               	subwfb	(emuz80_57q_write_to_sram@i+1)^(0+1280),w,c
 31985   01957C  B0D8               	btfsc	status,0,c
 31986   01957E  0012               	return	
 31987   019580  D7D4               	goto	l1173
 31988   019582                     __end_of_emuz80_57q_write_to_sram:
 31989                           	callstack 0
 31990                           
 31991 ;; *************** function _emuz80_57q_read_from_sram *****************
 31992 ;; Defined at:
 31993 ;;		line 185 in file "src/boards/SBC8080-57Q.c"
 31994 ;; Parameters:    Size  Location     Type
 31995 ;;  addr            2    0[COMRAM] unsigned short 
 31996 ;;  buf             2    2[COMRAM] PTR unsigned char 
 31997 ;;		 -> disk_buf(128), tmp_buf(512), 
 31998 ;;  len             2    4[COMRAM] unsigned int 
 31999 ;; Auto vars:     Size  Location     Type
 32000 ;;  ab              2    8[COMRAM] struct address_bus_u
 32001 ;;  i               2    6[COMRAM] unsigned int 
 32002 ;; Return value:  Size  Location     Type
 32003 ;;                  1    wreg      void 
 32004 ;; Registers used:
 32005 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32006 ;; Tracked objects:
 32007 ;;		On entry : 0/5
 32008 ;;		On exit  : 0/0
 32009 ;;		Unchanged: 0/0
 32010 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32011 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32012 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32014 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32015 ;;Total ram usage:       10 bytes
 32016 ;; Hardware stack levels used: 1
 32017 ;; This function calls:
 32018 ;;		Nothing
 32019 ;; This function is called by:
 32020 ;;		_mem_init
 32021 ;;		_disk_io_handle
 32022 ;; This function uses a non-reentrant model
 32023 ;;
 32024                           
 32025                           	psect	text70
 32026   0198BC                     __ptext70:
 32027                           	callstack 0
 32028   0198BC                     _emuz80_57q_read_from_sram:
 32029                           	callstack 125
 32030                           
 32031                           ;src/boards/SBC8080-57Q.c: 185: void emuz80_57q_read_from_sram(uint16_t addr, uint8_t *b
      +                          uf, unsigned int len);src/boards/SBC8080-57Q.c: 186: {;src/boards/SBC8080-57Q.c: 187:  u
      +                          nion address_bus_u ab;;src/boards/SBC8080-57Q.c: 188:  unsigned int i;;src/boards/SBC808
      +                          0-57Q.c: 190:  ab.w = addr;
 32032                           
 32033                           ;incstack = 0
 32034   0198BC  C501  F509         	movff	emuz80_57q_read_from_sram@addr,emuz80_57q_read_from_sram@ab
 32035   0198C0  C502  F50A         	movff	emuz80_57q_read_from_sram@addr+1,emuz80_57q_read_from_sram@ab+1
 32036                           
 32037                           ;src/boards/SBC8080-57Q.c: 191:  LATD = ab.h;
 32038   0198C4  C50A  F4C1         	movff	emuz80_57q_read_from_sram@ab+1,1217	;volatile
 32039                           
 32040                           ;src/boards/SBC8080-57Q.c: 192:  LATB = ab.l;
 32041   0198C8  C509  F4BF         	movff	emuz80_57q_read_from_sram@ab,1215	;volatile
 32042                           
 32043                           ;src/boards/SBC8080-57Q.c: 193:  TRISF = 0xff;
 32044   0198CC  68CB               	setf	203,c	;volatile
 32045                           
 32046                           ;src/boards/SBC8080-57Q.c: 194:  for(i = 0; i < len; i++) {
 32047   0198CE  0E00               	movlw	0
 32048   0198D0  6E08               	movwf	(emuz80_57q_read_from_sram@i+1)^(0+1280),c
 32049   0198D2  0E00               	movlw	0
 32050   0198D4  6E07               	movwf	emuz80_57q_read_from_sram@i^(0+1280),c
 32051   0198D6  D015               	goto	l12207
 32052   0198D8                     l1180:
 32053                           
 32054                           ;src/boards/SBC8080-57Q.c: 195:   LATA5 = 0;
 32055   0198D8  9ABE               	bcf	1214,5,c	;volatile
 32056                           
 32057                           ;src/boards/SBC8080-57Q.c: 196:   ((uint8_t*)buf)[i] = PORTF;
 32058   0198DA  5007               	movf	emuz80_57q_read_from_sram@i^(0+1280),w,c
 32059   0198DC  2403               	addwf	emuz80_57q_read_from_sram@buf^(0+1280),w,c
 32060   0198DE  6ED9               	movwf	fsr2l,c
 32061   0198E0  5008               	movf	(emuz80_57q_read_from_sram@i+1)^(0+1280),w,c
 32062   0198E2  2004               	addwfc	(emuz80_57q_read_from_sram@buf+1)^(0+1280),w,c
 32063   0198E4  6EDA               	movwf	fsr2h,c
 32064   0198E6  C4D3 F4DF          	movff	1235,indf2	;volatile
 32065                           
 32066                           ;src/boards/SBC8080-57Q.c: 197:   LATA5 = 1;
 32067   0198EA  8ABE               	bsf	1214,5,c	;volatile
 32068                           
 32069                           ;src/boards/SBC8080-57Q.c: 198:   LATB = ++ab.l;
 32070   0198EC  2A09               	incf	emuz80_57q_read_from_sram@ab^(0+1280),f,c
 32071   0198EE  C509  F4BF         	movff	emuz80_57q_read_from_sram@ab,1215	;volatile
 32072                           
 32073                           ;src/boards/SBC8080-57Q.c: 199:   if (ab.l == 0) {
 32074   0198F2  5009               	movf	emuz80_57q_read_from_sram@ab^(0+1280),w,c
 32075   0198F4  A4D8               	btfss	status,2,c
 32076   0198F6  D003               	goto	l1181
 32077                           
 32078                           ;src/boards/SBC8080-57Q.c: 200:    ab.h++;
 32079   0198F8  2A0A               	incf	(emuz80_57q_read_from_sram@ab+1)^(0+1280),f,c
 32080                           
 32081                           ;src/boards/SBC8080-57Q.c: 201:    LATD = ab.h;
 32082   0198FA  C50A  F4C1         	movff	emuz80_57q_read_from_sram@ab+1,1217	;volatile
 32083   0198FE                     l1181:
 32084                           
 32085                           ;src/boards/SBC8080-57Q.c: 203:  }
 32086   0198FE  4A07               	infsnz	emuz80_57q_read_from_sram@i^(0+1280),f,c
 32087   019900  2A08               	incf	(emuz80_57q_read_from_sram@i+1)^(0+1280),f,c
 32088   019902                     l12207:
 32089   019902  5005               	movf	emuz80_57q_read_from_sram@len^(0+1280),w,c
 32090   019904  5C07               	subwf	emuz80_57q_read_from_sram@i^(0+1280),w,c
 32091   019906  5006               	movf	(emuz80_57q_read_from_sram@len+1)^(0+1280),w,c
 32092   019908  5808               	subwfb	(emuz80_57q_read_from_sram@i+1)^(0+1280),w,c
 32093   01990A  B0D8               	btfsc	status,0,c
 32094   01990C  0012               	return	
 32095   01990E  D7E4               	goto	l1180
 32096   019910                     __end_of_emuz80_57q_read_from_sram:
 32097                           	callstack 0
 32098                           
 32099 ;; *************** function _emuz80_57q_get_from_sram *****************
 32100 ;; Defined at:
 32101 ;;		line 148 in file "src/boards/SBC8080-57Q.c"
 32102 ;; Parameters:    Size  Location     Type
 32103 ;;  addr            2    0[COMRAM] unsigned short 
 32104 ;; Auto vars:     Size  Location     Type
 32105 ;;  ab              2    3[COMRAM] struct address_bus_u
 32106 ;;  ret_val         1    2[COMRAM] unsigned char 
 32107 ;; Return value:  Size  Location     Type
 32108 ;;                  1    wreg      unsigned char 
 32109 ;; Registers used:
 32110 ;;		wreg, status,2
 32111 ;; Tracked objects:
 32112 ;;		On entry : 38/0
 32113 ;;		On exit  : 0/0
 32114 ;;		Unchanged: 0/0
 32115 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32117 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32119 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32120 ;;Total ram usage:        5 bytes
 32121 ;; Hardware stack levels used: 1
 32122 ;; This function calls:
 32123 ;;		Nothing
 32124 ;; This function is called by:
 32125 ;;		_disk_io_handle
 32126 ;; This function uses a non-reentrant model
 32127 ;;
 32128                           
 32129                           	psect	text71
 32130   019F7C                     __ptext71:
 32131                           	callstack 0
 32132   019F7C                     _emuz80_57q_get_from_sram:
 32133                           	callstack 125
 32134                           
 32135                           ;src/boards/SBC8080-57Q.c: 148: uint8_t emuz80_57q_get_from_sram(uint16_t addr);src/boar
      +                          ds/SBC8080-57Q.c: 149: {;src/boards/SBC8080-57Q.c: 150:  union address_bus_u ab;;src/boa
      +                          rds/SBC8080-57Q.c: 151:  uint8_t ret_val;;src/boards/SBC8080-57Q.c: 153:  ab.w = addr;
 32136                           
 32137                           ;incstack = 0
 32138   019F7C  C501  F504         	movff	emuz80_57q_get_from_sram@addr,emuz80_57q_get_from_sram@ab
 32139   019F80  C502  F505         	movff	emuz80_57q_get_from_sram@addr+1,emuz80_57q_get_from_sram@ab+1
 32140                           
 32141                           ;src/boards/SBC8080-57Q.c: 154:  LATD = ab.h;
 32142   019F84  C505  F4C1         	movff	emuz80_57q_get_from_sram@ab+1,1217	;volatile
 32143                           
 32144                           ;src/boards/SBC8080-57Q.c: 155:  LATB = ab.l;
 32145   019F88  C504  F4BF         	movff	emuz80_57q_get_from_sram@ab,1215	;volatile
 32146                           
 32147                           ;src/boards/SBC8080-57Q.c: 156:  LATA5 = 0;
 32148   019F8C  9ABE               	bcf	1214,5,c	;volatile
 32149                           
 32150                           ;src/boards/SBC8080-57Q.c: 157:  __nop();
 32151   019F8E  0000               	nop	
 32152                           
 32153                           ;src/boards/SBC8080-57Q.c: 158:  __nop();
 32154   019F90  0000               	nop	
 32155                           
 32156                           ;src/boards/SBC8080-57Q.c: 159:  ret_val = PORTF;
 32157   019F92  C4D3 F503          	movff	1235,emuz80_57q_get_from_sram@ret_val	;volatile
 32158                           
 32159                           ;src/boards/SBC8080-57Q.c: 160:  LATA5 = 1;
 32160   019F96  8ABE               	bsf	1214,5,c	;volatile
 32161                           
 32162                           ;src/boards/SBC8080-57Q.c: 161:  return ret_val;
 32163   019F98  5003               	movf	emuz80_57q_get_from_sram@ret_val^(0+1280),w,c
 32164   019F9A  0012               	return		;funcret
 32165   019F9C                     __end_of_emuz80_57q_get_from_sram:
 32166                           	callstack 0
 32167                           
 32168 ;; *************** function ___xxtofl *****************
 32169 ;; Defined at:
 32170 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 32171 ;; Parameters:    Size  Location     Type
 32172 ;;  sign            1    wreg     unsigned char 
 32173 ;;  val             4   12[COMRAM] long 
 32174 ;; Auto vars:     Size  Location     Type
 32175 ;;  sign            1   20[COMRAM] unsigned char 
 32176 ;;  arg             4   22[COMRAM] unsigned long 
 32177 ;;  exp             1   21[COMRAM] unsigned char 
 32178 ;; Return value:  Size  Location     Type
 32179 ;;                  4   12[COMRAM] unsigned char 
 32180 ;; Registers used:
 32181 ;;		wreg, status,2, status,0
 32182 ;; Tracked objects:
 32183 ;;		On entry : 3C/4
 32184 ;;		On exit  : 0/0
 32185 ;;		Unchanged: 0/0
 32186 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32188 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32189 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32190 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32191 ;;Total ram usage:       14 bytes
 32192 ;; Hardware stack levels used: 1
 32193 ;; This function calls:
 32194 ;;		Nothing
 32195 ;; This function is called by:
 32196 ;;		_main
 32197 ;; This function uses a non-reentrant model
 32198 ;;
 32199                           
 32200                           	psect	text72
 32201   017546                     __ptext72:
 32202                           	callstack 0
 32203   017546                     ___xxtofl:
 32204                           	callstack 126
 32205                           
 32206                           ;incstack = 0
 32207                           ;___xxtofl@sign stored from wreg
 32208   017546  6E15               	movwf	___xxtofl@sign^(0+1280),c
 32209   017548  5015               	movf	___xxtofl@sign^(0+1280),w,c
 32210   01754A  A4D8               	btfss	status,2,c
 32211   01754C  AE10               	btfss	(___xxtofl@val+3)^(0+1280),7,c
 32212   01754E  D01A               	goto	l2363
 32213   017550  C50D  F511         	movff	___xxtofl@val,??___xxtofl
 32214   017554  C50E  F512         	movff	___xxtofl@val+1,??___xxtofl+1
 32215   017558  C50F  F513         	movff	___xxtofl@val+2,??___xxtofl+2
 32216   01755C  C510  F514         	movff	___xxtofl@val+3,??___xxtofl+3
 32217   017560  1E11               	comf	??___xxtofl^(0+1280),f,c
 32218   017562  1E12               	comf	(??___xxtofl+1)^(0+1280),f,c
 32219   017564  1E13               	comf	(??___xxtofl+2)^(0+1280),f,c
 32220   017566  1E14               	comf	(??___xxtofl+3)^(0+1280),f,c
 32221   017568  2A11               	incf	??___xxtofl^(0+1280),f,c
 32222   01756A  0E00               	movlw	0
 32223   01756C  2212               	addwfc	(??___xxtofl+1)^(0+1280),f,c
 32224   01756E  2213               	addwfc	(??___xxtofl+2)^(0+1280),f,c
 32225   017570  2214               	addwfc	(??___xxtofl+3)^(0+1280),f,c
 32226   017572  C511  F517         	movff	??___xxtofl,___xxtofl@arg
 32227   017576  C512  F518         	movff	??___xxtofl+1,___xxtofl@arg+1
 32228   01757A  C513  F519         	movff	??___xxtofl+2,___xxtofl@arg+2
 32229   01757E  C514  F51A         	movff	??___xxtofl+3,___xxtofl@arg+3
 32230   017582  D008               	goto	l12775
 32231   017584                     l2363:
 32232   017584  C50D  F517         	movff	___xxtofl@val,___xxtofl@arg
 32233   017588  C50E  F518         	movff	___xxtofl@val+1,___xxtofl@arg+1
 32234   01758C  C50F  F519         	movff	___xxtofl@val+2,___xxtofl@arg+2
 32235   017590  C510  F51A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 32236   017594                     l12775:
 32237   017594  500D               	movf	___xxtofl@val^(0+1280),w,c
 32238   017596  100E               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
 32239   017598  100F               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
 32240   01759A  1010               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
 32241   01759C  A4D8               	btfss	status,2,c
 32242   01759E  D009               	goto	l12781
 32243   0175A0  0E00               	movlw	0
 32244   0175A2  6E0D               	movwf	?___xxtofl^(0+1280),c
 32245   0175A4  0E00               	movlw	0
 32246   0175A6  6E0E               	movwf	(?___xxtofl+1)^(0+1280),c
 32247   0175A8  0E00               	movlw	0
 32248   0175AA  6E0F               	movwf	(?___xxtofl+2)^(0+1280),c
 32249   0175AC  0E00               	movlw	0
 32250   0175AE  6E10               	movwf	(?___xxtofl+3)^(0+1280),c
 32251   0175B0  0012               	return	
 32252   0175B2                     l12781:
 32253   0175B2  0E96               	movlw	150
 32254   0175B4  6E16               	movwf	___xxtofl@exp^(0+1280),c
 32255   0175B6  D006               	goto	l12785
 32256   0175B8                     l12783:
 32257   0175B8  2A16               	incf	___xxtofl@exp^(0+1280),f,c
 32258   0175BA  90D8               	bcf	status,0,c
 32259   0175BC  321A               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 32260   0175BE  3219               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 32261   0175C0  3218               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 32262   0175C2  3217               	rrcf	___xxtofl@arg^(0+1280),f,c
 32263   0175C4                     l12785:
 32264   0175C4  0E00               	movlw	0
 32265   0175C6  1417               	andwf	___xxtofl@arg^(0+1280),w,c
 32266   0175C8  6E11               	movwf	??___xxtofl^(0+1280),c
 32267   0175CA  0E00               	movlw	0
 32268   0175CC  1418               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 32269   0175CE  6E12               	movwf	(??___xxtofl+1)^(0+1280),c
 32270   0175D0  0E00               	movlw	0
 32271   0175D2  1419               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 32272   0175D4  6E13               	movwf	(??___xxtofl+2)^(0+1280),c
 32273   0175D6  0EFE               	movlw	254
 32274   0175D8  141A               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 32275   0175DA  6E14               	movwf	(??___xxtofl+3)^(0+1280),c
 32276   0175DC  5011               	movf	??___xxtofl^(0+1280),w,c
 32277   0175DE  1012               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 32278   0175E0  1013               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 32279   0175E2  1014               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 32280   0175E4  B4D8               	btfsc	status,2,c
 32281   0175E6  D00D               	goto	l2370
 32282   0175E8  D7E7               	goto	l12783
 32283   0175EA                     l12787:
 32284   0175EA  2A16               	incf	___xxtofl@exp^(0+1280),f,c
 32285   0175EC  0E01               	movlw	1
 32286   0175EE  2617               	addwf	___xxtofl@arg^(0+1280),f,c
 32287   0175F0  0E00               	movlw	0
 32288   0175F2  2218               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
 32289   0175F4  2219               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
 32290   0175F6  221A               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
 32291   0175F8  90D8               	bcf	status,0,c
 32292   0175FA  321A               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 32293   0175FC  3219               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 32294   0175FE  3218               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 32295   017600  3217               	rrcf	___xxtofl@arg^(0+1280),f,c
 32296   017602                     l2370:
 32297   017602  0E00               	movlw	0
 32298   017604  1417               	andwf	___xxtofl@arg^(0+1280),w,c
 32299   017606  6E11               	movwf	??___xxtofl^(0+1280),c
 32300   017608  0E00               	movlw	0
 32301   01760A  1418               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 32302   01760C  6E12               	movwf	(??___xxtofl+1)^(0+1280),c
 32303   01760E  0E00               	movlw	0
 32304   017610  1419               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 32305   017612  6E13               	movwf	(??___xxtofl+2)^(0+1280),c
 32306   017614  0EFF               	movlw	255
 32307   017616  141A               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 32308   017618  6E14               	movwf	(??___xxtofl+3)^(0+1280),c
 32309   01761A  5011               	movf	??___xxtofl^(0+1280),w,c
 32310   01761C  1012               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 32311   01761E  1013               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 32312   017620  1014               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 32313   017622  B4D8               	btfsc	status,2,c
 32314   017624  D007               	goto	l12795
 32315   017626  D7E1               	goto	l12787
 32316   017628                     l12793:
 32317   017628  0616               	decf	___xxtofl@exp^(0+1280),f,c
 32318   01762A  90D8               	bcf	status,0,c
 32319   01762C  3617               	rlcf	___xxtofl@arg^(0+1280),f,c
 32320   01762E  3618               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
 32321   017630  3619               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
 32322   017632  361A               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
 32323   017634                     l12795:
 32324   017634  BE19               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
 32325   017636  D003               	goto	u16410
 32326   017638  0E02               	movlw	2
 32327   01763A  6016               	cpfslt	___xxtofl@exp^(0+1280),c
 32328   01763C  D7F5               	goto	l12793
 32329   01763E                     u16410:
 32330   01763E  A016               	btfss	___xxtofl@exp^(0+1280),0,c
 32331   017640  9E19               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
 32332   017642  90D8               	bcf	status,0,c
 32333   017644  3216               	rrcf	___xxtofl@exp^(0+1280),f,c
 32334   017646  C516  F511         	movff	___xxtofl@exp,??___xxtofl
 32335   01764A  6A12               	clrf	(??___xxtofl+1)^(0+1280),c
 32336   01764C  6A13               	clrf	(??___xxtofl+2)^(0+1280),c
 32337   01764E  6A14               	clrf	(??___xxtofl+3)^(0+1280),c
 32338   017650  C511  F514         	movff	??___xxtofl,??___xxtofl+3
 32339   017654  6A13               	clrf	(??___xxtofl+2)^(0+1280),c
 32340   017656  6A12               	clrf	(??___xxtofl+1)^(0+1280),c
 32341   017658  6A11               	clrf	??___xxtofl^(0+1280),c
 32342   01765A  5011               	movf	??___xxtofl^(0+1280),w,c
 32343   01765C  1217               	iorwf	___xxtofl@arg^(0+1280),f,c
 32344   01765E  5012               	movf	(??___xxtofl+1)^(0+1280),w,c
 32345   017660  1218               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
 32346   017662  5013               	movf	(??___xxtofl+2)^(0+1280),w,c
 32347   017664  1219               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
 32348   017666  5014               	movf	(??___xxtofl+3)^(0+1280),w,c
 32349   017668  121A               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
 32350   01766A  5015               	movf	___xxtofl@sign^(0+1280),w,c
 32351   01766C  A4D8               	btfss	status,2,c
 32352   01766E  AE10               	btfss	(___xxtofl@val+3)^(0+1280),7,c
 32353   017670  D001               	goto	l12811
 32354   017672  8E1A               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
 32355   017674                     l12811:
 32356   017674  C517  F50D         	movff	___xxtofl@arg,?___xxtofl
 32357   017678  C518  F50E         	movff	___xxtofl@arg+1,?___xxtofl+1
 32358   01767C  C519  F50F         	movff	___xxtofl@arg+2,?___xxtofl+2
 32359   017680  C51A  F510         	movff	___xxtofl@arg+3,?___xxtofl+3
 32360   017684  0012               	return		;funcret
 32361   017686                     __end_of___xxtofl:
 32362                           	callstack 0
 32363                           
 32364 ;; *************** function _SD_init *****************
 32365 ;; Defined at:
 32366 ;;		line 229 in file "src/io.c"
 32367 ;; Parameters:    Size  Location     Type
 32368 ;;		None
 32369 ;; Auto vars:     Size  Location     Type
 32370 ;;		None
 32371 ;; Return value:  Size  Location     Type
 32372 ;;                  1    wreg      void 
 32373 ;; Registers used:
 32374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32375 ;; Tracked objects:
 32376 ;;		On entry : 3F/5
 32377 ;;		On exit  : 3F/5
 32378 ;;		Unchanged: 0/0
 32379 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32382 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32383 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32384 ;;Total ram usage:        2 bytes
 32385 ;; Hardware stack levels used: 1
 32386 ;; Hardware stack levels required when called: 10
 32387 ;; This function calls:
 32388 ;;		_SDCard_init
 32389 ;;		_printf
 32390 ;; This function is called by:
 32391 ;;		_main
 32392 ;; This function uses a non-reentrant model
 32393 ;;
 32394                           
 32395                           	psect	text73
 32396   019582                     __ptext73:
 32397                           	callstack 0
 32398   019582                     _SD_init:
 32399                           	callstack 116
 32400                           
 32401                           ; BSR set to: 5
 32402                           ;src/io.c: 232:  static int retry;;src/io.c: 233:  for (retry = 0; 1; retry++) {
 32403                           
 32404                           ;incstack = 0
 32405   019582  0E00               	movlw	0
 32406   019584  0107               	movlb	7	; () banked
 32407   019586  6F1C               	movwf	(SD_init@retry+1)& (0+255),b
 32408   019588  0E00               	movlw	0
 32409   01958A  6F1B               	movwf	SD_init@retry& (0+255),b
 32410   01958C                     l12573:
 32411                           
 32412                           ; BSR set to: 7
 32413                           ;src/io.c: 234:   if (20 <= retry) {
 32414   01958C  BF1C               	btfsc	(SD_init@retry+1)& (0+255),7,b
 32415   01958E  D00E               	goto	l12577
 32416   019590  511C               	movf	(SD_init@retry+1)& (0+255),w,b
 32417   019592  E104               	bnz	u16000
 32418   019594  0E14               	movlw	20
 32419   019596  5D1B               	subwf	SD_init@retry& (0+255),w,b
 32420   019598  A0D8               	btfss	status,0,c
 32421   01959A  D008               	goto	l12577
 32422   01959C                     u16000:
 32423                           
 32424                           ; BSR set to: 7
 32425                           ;src/io.c: 235:    printf("No SD Card?\n\r");
 32426   01959C  0E8F               	movlw	low STR_85
 32427   01959E  0105               	movlb	5	; () banked
 32428   0195A0  6F9A               	movwf	printf@fmt& (0+255),b
 32429   0195A2  0EFF               	movlw	high STR_85
 32430   0195A4  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 32431   0195A6  EC53  F0CF         	call	_printf	;wreg free
 32432   0195AA                     l1670:
 32433                           
 32434                           ; BSR set to: 5
 32435                           
 32436                           ; BSR set to: 5
 32437   0195AA  D7FF               	goto	l1670
 32438   0195AC                     l12577:
 32439                           
 32440                           ; BSR set to: 7
 32441                           ;src/io.c: 238:   if (SDCard_init(SPI_CLOCK_100KHZ, SPI_CLOCK_8MHZ, 100) == 0)
 32442   0195AC  0E00               	movlw	0
 32443   0195AE  0105               	movlb	5	; () banked
 32444   0195B0  6FAF               	movwf	(SDCard_init@initial_clock_speed+1)& (0+255),b
 32445   0195B2  0E00               	movlw	0
 32446   0195B4  6FAE               	movwf	SDCard_init@initial_clock_speed& (0+255),b
 32447   0195B6  0E00               	movlw	0
 32448   0195B8  6FB1               	movwf	(SDCard_init@clock_speed+1)& (0+255),b
 32449   0195BA  0E05               	movlw	5
 32450   0195BC  6FB0               	movwf	SDCard_init@clock_speed& (0+255),b
 32451   0195BE  0E00               	movlw	0
 32452   0195C0  6FB3               	movwf	(SDCard_init@timeout+1)& (0+255),b
 32453   0195C2  0E64               	movlw	100
 32454   0195C4  6FB2               	movwf	SDCard_init@timeout& (0+255),b
 32455   0195C6  EC20  F0B0         	call	_SDCard_init	;wreg free
 32456   0195CA  51AE               	movf	?_SDCard_init& (0+255),w,b
 32457   0195CC  11AF               	iorwf	(?_SDCard_init+1)& (0+255),w,b
 32458   0195CE  B4D8               	btfsc	status,2,c
 32459   0195D0  0012               	return	
 32460                           
 32461                           ; BSR set to: 5
 32462                           ;src/io.c: 240:   _delay((unsigned long)((200)*(64000000UL/4000.0)));
 32463   0195D2  0E11               	movlw	17
 32464   0195D4  0105               	movlb	5	; () banked
 32465   0195D6  6FBE               	movwf	(??_SD_init+1)& (0+255),b
 32466   0195D8  0E3C               	movlw	60
 32467   0195DA  6FBD               	movwf	??_SD_init& (0+255),b
 32468   0195DC  0ECB               	movlw	203
 32469   0195DE                     u16517:
 32470   0195DE  2EE8               	decfsz	wreg,f,c
 32471   0195E0  D7FE               	bra	u16517
 32472   0195E2  2FBD               	decfsz	??_SD_init& (0+255),f,b
 32473   0195E4  D7FC               	bra	u16517
 32474   0195E6  2FBE               	decfsz	(??_SD_init+1)& (0+255),f,b
 32475   0195E8  D7FA               	bra	u16517
 32476                           
 32477                           ;src/io.c: 241:  }
 32478   0195EA  0107               	movlb	7	; () banked
 32479   0195EC  4B1B               	infsnz	SD_init@retry& (0+255),f,b
 32480   0195EE  2B1C               	incf	(SD_init@retry+1)& (0+255),f,b
 32481   0195F0  D7CD               	goto	l12573
 32482   0195F2                     __end_of_SD_init:
 32483                           	callstack 0
 32484                           
 32485 ;; *************** function _SDCard_init *****************
 32486 ;; Defined at:
 32487 ;;		line 53 in file "src/boards/../../drivers/SDCard.c"
 32488 ;; Parameters:    Size  Location     Type
 32489 ;;  initial_cloc    2   78[BANK5 ] int 
 32490 ;;  clock_speed     2   80[BANK5 ] int 
 32491 ;;  timeout         2   82[BANK5 ] unsigned short 
 32492 ;; Auto vars:     Size  Location     Type
 32493 ;;  i               2   84[BANK5 ] int 
 32494 ;;  buf             5   88[BANK5 ] unsigned char [5]
 32495 ;;  spi             2   86[BANK5 ] PTR struct SPI
 32496 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 32497 ;; Return value:  Size  Location     Type
 32498 ;;                  2   78[BANK5 ] int 
 32499 ;; Registers used:
 32500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32501 ;; Tracked objects:
 32502 ;;		On entry : 3F/5
 32503 ;;		On exit  : 3F/5
 32504 ;;		Unchanged: 0/0
 32505 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32506 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32507 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32509 ;;      Totals:         1      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32510 ;;Total ram usage:       16 bytes
 32511 ;; Hardware stack levels used: 1
 32512 ;; Hardware stack levels required when called: 9
 32513 ;; This function calls:
 32514 ;;		_SDCard_command
 32515 ;;		_SDCard_end_transaction
 32516 ;;		_SPI_SD_begin
 32517 ;;		_SPI_SD_begin_transaction
 32518 ;;		_SPI_SD_configure
 32519 ;;		_SPI_SD_dummy_clocks
 32520 ;;		_printf
 32521 ;; This function is called by:
 32522 ;;		_SD_init
 32523 ;; This function uses a non-reentrant model
 32524 ;;
 32525                           
 32526                           	psect	text74
 32527   016040                     __ptext74:
 32528                           	callstack 0
 32529   016040                     _SDCard_init:
 32530                           	callstack 116
 32531                           
 32532                           ; BSR set to: 5
 32533                           ;src/boards/../../drivers/SDCard.c: 53: int SDCard_init(int initial_clock_speed, int clo
      +                          ck_speed, uint16_t timeout);src/boards/../../drivers/SDCard.c: 54: {;src/boards/../../dr
      +                          ivers/SDCard.c: 55:     ctx_.spi = SPI_SD_ctx;
 32534                           
 32535                           ; BSR set to: 5
 32536                           ;incstack = 0
 32537   016040  0EBA               	movlw	low _pic18f47q43_spi_ctx
 32538   016042  0107               	movlb	7	; () banked
 32539   016044  6F06               	movwf	_ctx_& (0+255),b
 32540   016046  0E07               	movlw	high _pic18f47q43_spi_ctx
 32541   016048  6F07               	movwf	(_ctx_+1)& (0+255),b
 32542                           
 32543                           ; BSR set to: 7
 32544                           ;src/boards/../../drivers/SDCard.c: 56:     ctx_.timeout = timeout;
 32545   01604A  C5B2  F708         	movff	SDCard_init@timeout,_ctx_+2
 32546   01604E  C5B3  F709         	movff	SDCard_init@timeout+1,_ctx_+3
 32547                           
 32548                           ; BSR set to: 7
 32549                           ;src/boards/../../drivers/SDCard.c: 57:     ctx_.calc_read_crc = 0;
 32550   016052  910A               	bcf	(_ctx_+4)& (0+255),0,b
 32551                           
 32552                           ;src/boards/../../drivers/SDCard.c: 58:     struct SPI *spi = ctx_.spi;
 32553   016054  C706  F5B6         	movff	_ctx_,SDCard_init@spi
 32554   016058  C707  F5B7         	movff	_ctx_+1,SDCard_init@spi+1
 32555                           
 32556                           ; BSR set to: 7
 32557                           ;src/boards/../../drivers/SDCard.c: 59:     SPI_SD_begin(spi);
 32558   01605C  C5B6  F501         	movff	SDCard_init@spi,SPI_SD_begin@ctx_
 32559   016060  C5B7  F502         	movff	SDCard_init@spi+1,SPI_SD_begin@ctx_+1
 32560   016064  ECA2  F0CE         	call	_SPI_SD_begin	;wreg free
 32561                           
 32562                           ; BSR set to: 0
 32563                           ;src/boards/../../drivers/SDCard.c: 64:     SPI_SD_configure(spi, initial_clock_speed, 1
      +                          , 0);
 32564   016068  C5B6  F5A6         	movff	SDCard_init@spi,SPI_SD_configure@ctx_
 32565   01606C  C5B7  F5A7         	movff	SDCard_init@spi+1,SPI_SD_configure@ctx_+1
 32566   016070  C5AE  F5A8         	movff	SDCard_init@initial_clock_speed,SPI_SD_configure@clock_speed
 32567   016074  C5AF  F5A9         	movff	SDCard_init@initial_clock_speed+1,SPI_SD_configure@clock_speed+1
 32568   016078  0E01               	movlw	1
 32569   01607A  0105               	movlb	5	; () banked
 32570   01607C  6FAA               	movwf	SPI_SD_configure@bit_order& (0+255),b
 32571   01607E  0E00               	movlw	0
 32572   016080  6FAB               	movwf	SPI_SD_configure@data_mode& (0+255),b
 32573   016082  ECE9  F0C0         	call	_SPI_SD_configure	;wreg free
 32574                           
 32575                           ;src/boards/../../drivers/SDCard.c: 65:     SPI_SD_begin_transaction(spi);
 32576   016086  C5B6  F505         	movff	SDCard_init@spi,SPI_SD_begin_transaction@ctx_
 32577   01608A  C5B7  F506         	movff	SDCard_init@spi+1,SPI_SD_begin_transaction@ctx_+1
 32578   01608E  EC9C  F0CF         	call	_SPI_SD_begin_transaction	;wreg free
 32579                           
 32580                           ;src/boards/../../drivers/SDCard.c: 66:     SPI_SD_dummy_clocks(spi, 10);
 32581   016092  C5B6  F50B         	movff	SDCard_init@spi,SPI_SD_dummy_clocks@ctx_
 32582   016096  C5B7  F50C         	movff	SDCard_init@spi+1,SPI_SD_dummy_clocks@ctx_+1
 32583   01609A  0E00               	movlw	0
 32584   01609C  6E0E               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 32585   01609E  0E0A               	movlw	10
 32586   0160A0  6E0D               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 32587   0160A2  EC88  F0CC         	call	_SPI_SD_dummy_clocks	;wreg free
 32588                           
 32589                           ;src/boards/../../drivers/SDCard.c: 67:     SDCard_end_transaction();
 32590   0160A6  EC16  F0CF         	call	_SDCard_end_transaction	;wreg free
 32591                           
 32592                           ;src/boards/../../drivers/SDCard.c: 70:     SDCard_command(0, 0, buf, 1);
 32593   0160AA  0E00               	movlw	0
 32594   0160AC  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32595   0160AE  0E00               	movlw	0
 32596   0160B0  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32597   0160B2  0E00               	movlw	0
 32598   0160B4  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32599   0160B6  0E00               	movlw	0
 32600   0160B8  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32601   0160BA  0EB8               	movlw	low SDCard_init@buf
 32602   0160BC  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32603   0160BE  0E05               	movlw	high SDCard_init@buf
 32604   0160C0  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32605   0160C2  0E00               	movlw	0
 32606   0160C4  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32607   0160C6  0E01               	movlw	1
 32608   0160C8  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32609   0160CA  0E00               	movlw	0
 32610   0160CC  ECF9  F0CA         	call	_SDCard_command
 32611                           
 32612                           ;src/boards/../../drivers/SDCard.c: 72:     if (buf[0] != 0x01) {
 32613   0160D0  0105               	movlb	5	; () banked
 32614   0160D2  05B8               	decf	SDCard_init@buf& (0+255),w,b
 32615   0160D4  B4D8               	btfsc	status,2,c
 32616   0160D6  D005               	goto	l12237
 32617   0160D8                     u15690:
 32618                           
 32619                           ; BSR set to: 5
 32620                           ;src/boards/../../drivers/SDCard.c: 74:         return 1;
 32621   0160D8  0E00               	movlw	0
 32622   0160DA  6FAF               	movwf	(?_SDCard_init+1)& (0+255),b
 32623   0160DC  0E01               	movlw	1
 32624   0160DE  6FAE               	movwf	?_SDCard_init& (0+255),b
 32625   0160E0  0012               	return	
 32626   0160E2                     l12237:
 32627                           
 32628                           ; BSR set to: 5
 32629                           ;src/boards/../../drivers/SDCard.c: 78:     SDCard_command(8, 0x000001aa, buf, 5);
 32630   0160E2  0EAA               	movlw	170
 32631   0160E4  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32632   0160E6  0E01               	movlw	1
 32633   0160E8  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32634   0160EA  0E00               	movlw	0
 32635   0160EC  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32636   0160EE  0E00               	movlw	0
 32637   0160F0  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32638   0160F2  0EB8               	movlw	low SDCard_init@buf
 32639   0160F4  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32640   0160F6  0E05               	movlw	high SDCard_init@buf
 32641   0160F8  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32642   0160FA  0E00               	movlw	0
 32643   0160FC  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32644   0160FE  0E05               	movlw	5
 32645   016100  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32646   016102  0E08               	movlw	8
 32647   016104  ECF9  F0CA         	call	_SDCard_command
 32648                           
 32649                           ;src/boards/../../drivers/SDCard.c: 81:     if (buf[0] != 0x01 || (buf[3] & 0x01) != 0x0
      +                          1 || buf[4] != 0xaa) {
 32650   016108  0105               	movlb	5	; () banked
 32651   01610A  05B8               	decf	SDCard_init@buf& (0+255),w,b
 32652   01610C  B4D8               	btfsc	status,2,c
 32653                           
 32654                           ; BSR set to: 5
 32655   01610E  A1BB               	btfss	(SDCard_init@buf+3)& (0+255),0,b
 32656   016110  D004               	goto	u15720
 32657                           
 32658                           ; BSR set to: 5
 32659   016112  0EAA               	movlw	170
 32660   016114  19BC               	xorwf	(SDCard_init@buf+4)& (0+255),w,b
 32661   016116  B4D8               	btfsc	status,2,c
 32662   016118  D005               	goto	l12253
 32663   01611A                     u15720:
 32664                           
 32665                           ; BSR set to: 5
 32666                           ;src/boards/../../drivers/SDCard.c: 83:         return 2;
 32667                           
 32668                           ; BSR set to: 5
 32669   01611A  0E00               	movlw	0
 32670   01611C  6FAF               	movwf	(?_SDCard_init+1)& (0+255),b
 32671   01611E  0E02               	movlw	2
 32672   016120  6FAE               	movwf	?_SDCard_init& (0+255),b
 32673   016122  0012               	return	
 32674   016124                     l12253:
 32675                           
 32676                           ; BSR set to: 5
 32677                           ;src/boards/../../drivers/SDCard.c: 87:     for (int i = 0; i < 3000; i++) {
 32678   016124  0E00               	movlw	0
 32679   016126  6FB5               	movwf	(SDCard_init@i+1)& (0+255),b
 32680   016128  0E00               	movlw	0
 32681   01612A  6FB4               	movwf	SDCard_init@i& (0+255),b
 32682   01612C                     l12259:
 32683                           
 32684                           ; BSR set to: 5
 32685                           ;src/boards/../../drivers/SDCard.c: 88:         SDCard_command(55, 0, buf, 1);
 32686   01612C  0E00               	movlw	0
 32687   01612E  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32688   016130  0E00               	movlw	0
 32689   016132  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32690   016134  0E00               	movlw	0
 32691   016136  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32692   016138  0E00               	movlw	0
 32693   01613A  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32694   01613C  0EB8               	movlw	low SDCard_init@buf
 32695   01613E  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32696   016140  0E05               	movlw	high SDCard_init@buf
 32697   016142  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32698   016144  0E00               	movlw	0
 32699   016146  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32700   016148  0E01               	movlw	1
 32701   01614A  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32702   01614C  0E37               	movlw	55
 32703   01614E  ECF9  F0CA         	call	_SDCard_command
 32704                           
 32705                           ;src/boards/../../drivers/SDCard.c: 89:         SDCard_command(41, 1UL << 30 , buf, 5);
 32706   016152  0E00               	movlw	0
 32707   016154  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32708   016156  0E00               	movlw	0
 32709   016158  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32710   01615A  0E00               	movlw	0
 32711   01615C  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32712   01615E  0E40               	movlw	64
 32713   016160  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32714   016162  0EB8               	movlw	low SDCard_init@buf
 32715   016164  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32716   016166  0E05               	movlw	high SDCard_init@buf
 32717   016168  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32718   01616A  0E00               	movlw	0
 32719   01616C  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32720   01616E  0E05               	movlw	5
 32721   016170  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32722   016172  0E29               	movlw	41
 32723   016174  ECF9  F0CA         	call	_SDCard_command
 32724                           
 32725                           ;src/boards/../../drivers/SDCard.c: 90:         if (buf[0] == 0x00)
 32726   016178  0105               	movlb	5	; () banked
 32727   01617A  51B8               	movf	SDCard_init@buf& (0+255),w,b
 32728   01617C  B4D8               	btfsc	status,2,c
 32729   01617E  D00A               	goto	u15740
 32730                           
 32731                           ; BSR set to: 5
 32732                           ;src/boards/../../drivers/SDCard.c: 92:     }
 32733   016180  4BB4               	infsnz	SDCard_init@i& (0+255),f,b
 32734   016182  2BB5               	incf	(SDCard_init@i+1)& (0+255),f,b
 32735                           
 32736                           ; BSR set to: 5
 32737   016184  BFB5               	btfsc	(SDCard_init@i+1)& (0+255),7,b
 32738   016186  D7D2               	goto	l12259
 32739   016188  0EB8               	movlw	184
 32740   01618A  5DB4               	subwf	SDCard_init@i& (0+255),w,b
 32741   01618C  0E0B               	movlw	11
 32742   01618E  59B5               	subwfb	(SDCard_init@i+1)& (0+255),w,b
 32743   016190  A0D8               	btfss	status,0,c
 32744   016192  D7CC               	goto	l12259
 32745   016194                     u15740:
 32746                           
 32747                           ; BSR set to: 5
 32748                           ;src/boards/../../drivers/SDCard.c: 94:     if (buf[0] != 0x00) {
 32749   016194  51B8               	movf	SDCard_init@buf& (0+255),w,b
 32750   016196  A4D8               	btfss	status,2,c
 32751   016198  D79F               	goto	u15690
 32752                           
 32753                           ; BSR set to: 5
 32754                           ;src/boards/../../drivers/SDCard.c: 100:     SDCard_command(58, 0, buf, 5);
 32755   01619A  0E00               	movlw	0
 32756   01619C  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32757   01619E  0E00               	movlw	0
 32758   0161A0  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32759   0161A2  0E00               	movlw	0
 32760   0161A4  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32761   0161A6  0E00               	movlw	0
 32762   0161A8  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32763   0161AA  0EB8               	movlw	low SDCard_init@buf
 32764   0161AC  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32765   0161AE  0E05               	movlw	high SDCard_init@buf
 32766   0161B0  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32767   0161B2  0E00               	movlw	0
 32768   0161B4  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32769   0161B6  0E05               	movlw	5
 32770   0161B8  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32771   0161BA  0E3A               	movlw	58
 32772   0161BC  ECF9  F0CA         	call	_SDCard_command
 32773                           
 32774                           ;src/boards/../../drivers/SDCard.c: 103:     if (buf[0] & 0xfe) {
 32775   0161C0  C5B8  F55F         	movff	SDCard_init@buf,??_SDCard_init
 32776   0161C4  0EFE               	movlw	254
 32777   0161C6  165F               	andwf	??_SDCard_init^(0+1280),f,c
 32778   0161C8  B4D8               	btfsc	status,2,c
 32779   0161CA  D006               	goto	l1381
 32780   0161CC                     u15760:
 32781                           
 32782                           ;src/boards/../../drivers/SDCard.c: 105:         return 3;
 32783   0161CC  0E00               	movlw	0
 32784   0161CE  0105               	movlb	5	; () banked
 32785   0161D0  6FAF               	movwf	(?_SDCard_init+1)& (0+255),b
 32786   0161D2  0E03               	movlw	3
 32787   0161D4  6FAE               	movwf	?_SDCard_init& (0+255),b
 32788   0161D6  0012               	return	
 32789   0161D8                     l1381:
 32790                           
 32791                           ;src/boards/../../drivers/SDCard.c: 107:     if (!(buf[1] & 0x40)) {
 32792   0161D8  0105               	movlb	5	; () banked
 32793   0161DA  ADB9               	btfss	(SDCard_init@buf+1)& (0+255),6,b
 32794   0161DC  D79E               	goto	u15720
 32795                           
 32796                           ; BSR set to: 5
 32797                           ;src/boards/../../drivers/SDCard.c: 113:     if (!(buf[1] & 0x80)) {
 32798                           
 32799                           ; BSR set to: 5
 32800   0161DE  AFB9               	btfss	(SDCard_init@buf+1)& (0+255),7,b
 32801   0161E0  D7F5               	goto	u15760
 32802                           
 32803                           ; BSR set to: 5
 32804                           ;src/boards/../../drivers/SDCard.c: 120:     SDCard_command(59, 1, buf, 1);
 32805                           
 32806                           ; BSR set to: 5
 32807   0161E2  0E01               	movlw	1
 32808   0161E4  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32809   0161E6  0E00               	movlw	0
 32810   0161E8  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32811   0161EA  0E00               	movlw	0
 32812   0161EC  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32813   0161EE  0E00               	movlw	0
 32814   0161F0  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32815   0161F2  0EB8               	movlw	low SDCard_init@buf
 32816   0161F4  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32817   0161F6  0E05               	movlw	high SDCard_init@buf
 32818   0161F8  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32819   0161FA  0E00               	movlw	0
 32820   0161FC  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32821   0161FE  0E01               	movlw	1
 32822   016200  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32823   016202  0E3B               	movlw	59
 32824   016204  ECF9  F0CA         	call	_SDCard_command
 32825                           
 32826                           ;src/boards/../../drivers/SDCard.c: 121:     if (buf[0] != 0x00) {
 32827   016208  0105               	movlb	5	; () banked
 32828   01620A  51B8               	movf	SDCard_init@buf& (0+255),w,b
 32829   01620C  A4D8               	btfss	status,2,c
 32830   01620E  D7DE               	goto	u15760
 32831                           
 32832                           ; BSR set to: 5
 32833                           ;src/boards/../../drivers/SDCard.c: 126:     SPI_SD_configure(spi, clock_speed, 1, 0);
 32834   016210  C5B6  F5A6         	movff	SDCard_init@spi,SPI_SD_configure@ctx_
 32835   016214  C5B7  F5A7         	movff	SDCard_init@spi+1,SPI_SD_configure@ctx_+1
 32836   016218  C5B0  F5A8         	movff	SDCard_init@clock_speed,SPI_SD_configure@clock_speed
 32837   01621C  C5B1  F5A9         	movff	SDCard_init@clock_speed+1,SPI_SD_configure@clock_speed+1
 32838   016220  0E01               	movlw	1
 32839   016222  6FAA               	movwf	SPI_SD_configure@bit_order& (0+255),b
 32840   016224  0E00               	movlw	0
 32841   016226  6FAB               	movwf	SPI_SD_configure@data_mode& (0+255),b
 32842   016228  ECE9  F0C0         	call	_SPI_SD_configure	;wreg free
 32843                           
 32844                           ;src/boards/../../drivers/SDCard.c: 130:     return 0;
 32845   01622C  0E00               	movlw	0
 32846   01622E  0105               	movlb	5	; () banked
 32847   016230  6FAF               	movwf	(?_SDCard_init+1)& (0+255),b
 32848   016232  0E00               	movlw	0
 32849   016234  6FAE               	movwf	?_SDCard_init& (0+255),b
 32850                           
 32851                           ; BSR set to: 5
 32852   016236  0012               	return		;funcret
 32853   016238                     __end_of_SDCard_init:
 32854                           	callstack 0
 32855                           
 32856 ;; *************** function _SPI_SD_configure *****************
 32857 ;; Defined at:
 32858 ;;		line 84 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 32859 ;; Parameters:    Size  Location     Type
 32860 ;;  ctx_            2   70[BANK5 ] PTR struct SPI
 32861 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 32862 ;;  clock_speed     2   72[BANK5 ] int 
 32863 ;;  bit_order       1   74[BANK5 ] unsigned char 
 32864 ;;  data_mode       1   75[BANK5 ] unsigned char 
 32865 ;; Auto vars:     Size  Location     Type
 32866 ;;  ctx             2    0        PTR struct SPI_HW
 32867 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 32868 ;; Return value:  Size  Location     Type
 32869 ;;                  1    wreg      void 
 32870 ;; Registers used:
 32871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32872 ;; Tracked objects:
 32873 ;;		On entry : 3F/5
 32874 ;;		On exit  : 3A/0
 32875 ;;		Unchanged: 0/0
 32876 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32877 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32879 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32880 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32881 ;;Total ram usage:        8 bytes
 32882 ;; Hardware stack levels used: 1
 32883 ;; Hardware stack levels required when called: 8
 32884 ;; This function calls:
 32885 ;;		_printf
 32886 ;; This function is called by:
 32887 ;;		_SDCard_init
 32888 ;; This function uses a non-reentrant model
 32889 ;;
 32890                           
 32891                           	psect	text75
 32892   0181D2                     __ptext75:
 32893                           	callstack 0
 32894   0181D2                     _SPI_SD_configure:
 32895                           	callstack 116
 32896                           
 32897                           ; BSR set to: 5
 32898                           ;src/boards/../../drivers/pic18f47q43_spi.c: 88:     SPI1CON0bits.MST = 1;
 32899                           
 32900                           ; BSR set to: 5
 32901                           
 32902                           ; BSR set to: 5
 32903                           ;incstack = 0
 32904   0181D2  0100               	movlb	0	; () banked
 32905   0181D4  8384               	bsf	132,1,b	;volatile
 32906                           
 32907                           ; BSR set to: 0
 32908                           ;src/boards/../../drivers/pic18f47q43_spi.c: 89:     SPI1CON0bits.BMODE = 1;
 32909   0181D6  8184               	bsf	132,0,b	;volatile
 32910                           
 32911                           ; BSR set to: 0
 32912                           ;src/boards/../../drivers/pic18f47q43_spi.c: 90:     SPI1TWIDTH = 0;
 32913   0181D8  0E00               	movlw	0
 32914   0181DA  6F88               	movwf	136,b	;volatile
 32915                           
 32916                           ; BSR set to: 0
 32917                           ;src/boards/../../drivers/pic18f47q43_spi.c: 91:     SPI1INTE = 0;
 32918   0181DC  0E00               	movlw	0
 32919   0181DE  6F8B               	movwf	139,b	;volatile
 32920                           
 32921                           ; BSR set to: 0
 32922                           ;src/boards/../../drivers/pic18f47q43_spi.c: 92:     SPI1CON1bits.FST = 0;
 32923   0181E0  9985               	bcf	133,4,b	;volatile
 32924                           
 32925                           ; BSR set to: 0
 32926                           ;src/boards/../../drivers/pic18f47q43_spi.c: 93:     SPI1CON2bits.TXR = 1;
 32927   0181E2  8386               	bsf	134,1,b	;volatile
 32928                           
 32929                           ; BSR set to: 0
 32930                           ;src/boards/../../drivers/pic18f47q43_spi.c: 94:     SPI1CON2bits.RXR = 1;
 32931   0181E4  8186               	bsf	134,0,b	;volatile
 32932                           
 32933                           ;src/boards/../../drivers/pic18f47q43_spi.c: 96:     if (bit_order == 1)
 32934   0181E6  0105               	movlb	5	; () banked
 32935   0181E8  05AA               	decf	SPI_SD_configure@bit_order& (0+255),w,b
 32936   0181EA  A4D8               	btfss	status,2,c
 32937   0181EC  D003               	goto	l1210
 32938                           
 32939                           ; BSR set to: 5
 32940                           ;src/boards/../../drivers/pic18f47q43_spi.c: 97:         SPI1CON0bits.LSBF = 0;
 32941   0181EE  0100               	movlb	0	; () banked
 32942   0181F0  9584               	bcf	132,2,b	;volatile
 32943   0181F2  D002               	goto	l11399
 32944   0181F4                     l1210:
 32945                           
 32946                           ; BSR set to: 5
 32947                           ;src/boards/../../drivers/pic18f47q43_spi.c: 99:         SPI1CON0bits.LSBF = 1;
 32948   0181F4  0100               	movlb	0	; () banked
 32949   0181F6  8584               	bsf	132,2,b	;volatile
 32950   0181F8                     l11399:
 32951                           
 32952                           ; BSR set to: 0
 32953                           ;src/boards/../../drivers/pic18f47q43_spi.c: 101:     if (data_mode == 0) {
 32954   0181F8  0105               	movlb	5	; () banked
 32955   0181FA  51AB               	movf	SPI_SD_configure@data_mode& (0+255),w,b
 32956   0181FC  A4D8               	btfss	status,2,c
 32957   0181FE  D005               	goto	l11403
 32958                           
 32959                           ; BSR set to: 5
 32960                           ;src/boards/../../drivers/pic18f47q43_spi.c: 102:         SPI1CON1bits.SMP = 0;
 32961   018200  0100               	movlb	0	; () banked
 32962   018202  9F85               	bcf	133,7,b	;volatile
 32963                           
 32964                           ;src/boards/../../drivers/pic18f47q43_spi.c: 103:         SPI1CON1bits.CKE = 1;
 32965   018204  8D85               	bsf	133,6,b	;volatile
 32966                           
 32967                           ;src/boards/../../drivers/pic18f47q43_spi.c: 104:         SPI1CON1bits.CKP = 0;
 32968   018206  9B85               	bcf	133,5,b	;volatile
 32969                           
 32970                           ;src/boards/../../drivers/pic18f47q43_spi.c: 105:     } else {
 32971   018208  D00E               	goto	l11405
 32972   01820A                     l11403:
 32973                           
 32974                           ; BSR set to: 5
 32975                           ;src/boards/../../drivers/pic18f47q43_spi.c: 106:         printf("%s: ERROR: mode %d is 
      +                          not supported\n\r", __func__, data_mode);
 32976   01820A  0E84               	movlw	low STR_31
 32977   01820C  6F9A               	movwf	printf@fmt& (0+255),b
 32978   01820E  0EFB               	movlw	high STR_31
 32979   018210  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 32980   018212  0E50               	movlw	low STR_32
 32981   018214  6F9C               	movwf	(?_printf+2)& (0+255),b
 32982   018216  0EFF               	movlw	high STR_32
 32983   018218  6F9D               	movwf	(?_printf+3)& (0+255),b
 32984   01821A  C5AB  F59E         	movff	SPI_SD_configure@data_mode,?_printf+4
 32985   01821E  6B9F               	clrf	(?_printf+5)& (0+255),b
 32986   018220  EC53  F0CF         	call	_printf	;wreg free
 32987   018224                     l1214:
 32988                           
 32989                           ; BSR set to: 5
 32990                           
 32991                           ; BSR set to: 5
 32992   018224  D7FF               	goto	l1214
 32993   018226                     l11405:
 32994                           
 32995                           ; BSR set to: 0
 32996                           ;src/boards/../../drivers/pic18f47q43_spi.c: 110:     SPI1CLK = 0;
 32997   018226  0E00               	movlw	0
 32998   018228  6F8C               	movwf	140,b	;volatile
 32999                           
 33000                           ;src/boards/../../drivers/pic18f47q43_spi.c: 111:     switch (clock_speed) {
 33001   01822A  D02D               	goto	l11425
 33002   01822C                     l11407:
 33003                           
 33004                           ; BSR set to: 5
 33005                           ;src/boards/../../drivers/pic18f47q43_spi.c: 113:         SPI1CLK = 2;
 33006   01822C  0E02               	movlw	2
 33007   01822E  0100               	movlb	0	; () banked
 33008   018230  6F8C               	movwf	140,b	;volatile
 33009                           
 33010                           ;src/boards/../../drivers/pic18f47q43_spi.c: 114:         SPI1BAUD = 2;
 33011   018232  0E02               	movlw	2
 33012   018234  6F89               	movwf	137,b	;volatile
 33013                           
 33014                           ;src/boards/../../drivers/pic18f47q43_spi.c: 115:         break;
 33015   018236  0012               	return	
 33016   018238                     l11409:
 33017                           
 33018                           ; BSR set to: 5
 33019                           ;src/boards/../../drivers/pic18f47q43_spi.c: 117:         SPI1BAUD = 15;
 33020   018238  0E0F               	movlw	15
 33021   01823A  0100               	movlb	0	; () banked
 33022   01823C  6F89               	movwf	137,b	;volatile
 33023                           
 33024                           ;src/boards/../../drivers/pic18f47q43_spi.c: 118:         break;
 33025   01823E  0012               	return	
 33026   018240                     l11411:
 33027                           
 33028                           ; BSR set to: 5
 33029                           ;src/boards/../../drivers/pic18f47q43_spi.c: 120:         SPI1BAUD = 7;
 33030   018240  0E07               	movlw	7
 33031   018242  0100               	movlb	0	; () banked
 33032   018244  6F89               	movwf	137,b	;volatile
 33033                           
 33034                           ;src/boards/../../drivers/pic18f47q43_spi.c: 121:         break;
 33035   018246  0012               	return	
 33036   018248                     l11413:
 33037                           
 33038                           ; BSR set to: 5
 33039                           ;src/boards/../../drivers/pic18f47q43_spi.c: 123:         SPI1BAUD = 5;
 33040   018248  0E05               	movlw	5
 33041   01824A  0100               	movlb	0	; () banked
 33042   01824C  6F89               	movwf	137,b	;volatile
 33043                           
 33044                           ;src/boards/../../drivers/pic18f47q43_spi.c: 124:         break;
 33045   01824E  0012               	return	
 33046   018250                     l11415:
 33047                           
 33048                           ; BSR set to: 5
 33049                           ;src/boards/../../drivers/pic18f47q43_spi.c: 126:         SPI1BAUD = 4;
 33050   018250  0E04               	movlw	4
 33051   018252  0100               	movlb	0	; () banked
 33052   018254  6F89               	movwf	137,b	;volatile
 33053                           
 33054                           ;src/boards/../../drivers/pic18f47q43_spi.c: 127:         break;
 33055   018256  0012               	return	
 33056   018258                     l11417:
 33057                           
 33058                           ; BSR set to: 5
 33059                           ;src/boards/../../drivers/pic18f47q43_spi.c: 129:         SPI1BAUD = 3;
 33060   018258  0E03               	movlw	3
 33061   01825A  0100               	movlb	0	; () banked
 33062   01825C  6F89               	movwf	137,b	;volatile
 33063                           
 33064                           ;src/boards/../../drivers/pic18f47q43_spi.c: 130:         break;
 33065   01825E  0012               	return	
 33066   018260                     l11419:
 33067                           
 33068                           ; BSR set to: 5
 33069                           ;src/boards/../../drivers/pic18f47q43_spi.c: 132:         SPI1BAUD = 2;
 33070   018260  0E02               	movlw	2
 33071   018262  0100               	movlb	0	; () banked
 33072   018264  6F89               	movwf	137,b	;volatile
 33073                           
 33074                           ;src/boards/../../drivers/pic18f47q43_spi.c: 133:         break;
 33075   018266  0012               	return	
 33076   018268                     l11421:
 33077                           
 33078                           ; BSR set to: 5
 33079                           ;src/boards/../../drivers/pic18f47q43_spi.c: 135:         printf("%s: ERROR: clock speed
      +                           %d is not supported\n\r", __func__, clock_speed);
 33080   018268  0EB3               	movlw	low STR_33
 33081   01826A  6F9A               	movwf	printf@fmt& (0+255),b
 33082   01826C  0EF9               	movlw	high STR_33
 33083   01826E  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 33084   018270  0E50               	movlw	low STR_32
 33085   018272  6F9C               	movwf	(?_printf+2)& (0+255),b
 33086   018274  0EFF               	movlw	high STR_32
 33087   018276  6F9D               	movwf	(?_printf+3)& (0+255),b
 33088   018278  C5A8  F59E         	movff	SPI_SD_configure@clock_speed,?_printf+4
 33089   01827C  C5A9  F59F         	movff	SPI_SD_configure@clock_speed+1,?_printf+5
 33090   018280  EC53  F0CF         	call	_printf	;wreg free
 33091                           
 33092                           ;src/boards/../../drivers/pic18f47q43_spi.c: 136:         break;
 33093   018284  0012               	return	
 33094   018286                     l11425:
 33095                           
 33096                           ; BSR set to: 0
 33097   018286  C5A8  F5AC         	movff	SPI_SD_configure@clock_speed,??_SPI_SD_configure
 33098   01828A  C5A9  F5AD         	movff	SPI_SD_configure@clock_speed+1,??_SPI_SD_configure+1
 33099                           
 33100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33101                           ; Switch size 1, requested type "simple"
 33102                           ; Number of cases is 1, Range of values is 0 to 0
 33103                           ; switch strategies available:
 33104                           ; Name         Instructions Cycles
 33105                           ; simple_byte            4     3 (average)
 33106                           ;	Chosen strategy is simple_byte
 33107   01828E  0105               	movlb	5	; () banked
 33108   018290  51AD               	movf	(??_SPI_SD_configure+1)& (0+255),w,b
 33109   018292  0A00               	xorlw	0	; case 0
 33110   018294  A4D8               	btfss	status,2,c
 33111   018296  D7E8               	goto	l11421
 33112                           
 33113                           ; BSR set to: 5
 33114                           ; Switch size 1, requested type "simple"
 33115                           ; Number of cases is 7, Range of values is 0 to 6
 33116                           ; switch strategies available:
 33117                           ; Name         Instructions Cycles
 33118                           ; simple_byte           22    12 (average)
 33119                           ;	Chosen strategy is simple_byte
 33120   018298  51AC               	movf	??_SPI_SD_configure& (0+255),w,b
 33121   01829A  0A00               	xorlw	0	; case 0
 33122   01829C  B4D8               	btfsc	status,2,c
 33123   01829E  D7C6               	goto	l11407
 33124   0182A0  0A01               	xorlw	1	; case 1
 33125   0182A2  B4D8               	btfsc	status,2,c
 33126   0182A4  D7C9               	goto	l11409
 33127   0182A6  0A03               	xorlw	3	; case 2
 33128   0182A8  B4D8               	btfsc	status,2,c
 33129   0182AA  D7CA               	goto	l11411
 33130   0182AC  0A01               	xorlw	1	; case 3
 33131   0182AE  B4D8               	btfsc	status,2,c
 33132   0182B0  D7CB               	goto	l11413
 33133   0182B2  0A07               	xorlw	7	; case 4
 33134   0182B4  B4D8               	btfsc	status,2,c
 33135   0182B6  D7CC               	goto	l11415
 33136   0182B8  0A01               	xorlw	1	; case 5
 33137   0182BA  B4D8               	btfsc	status,2,c
 33138   0182BC  D7CD               	goto	l11417
 33139   0182BE  0A03               	xorlw	3	; case 6
 33140   0182C0  B4D8               	btfsc	status,2,c
 33141   0182C2  D7CE               	goto	l11419
 33142   0182C4  D7D1               	goto	l11421
 33143   0182C6                     __end_of_SPI_SD_configure:
 33144                           	callstack 0
 33145                           
 33146 ;; *************** function _printf *****************
 33147 ;; Defined at:
 33148 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
 33149 ;; Parameters:    Size  Location     Type
 33150 ;;  fmt             2   58[BANK5 ] PTR const unsigned char 
 33151 ;;		 -> STR_90(21), STR_89(32), STR_88(31), STR_87(22), 
 33152 ;;		 -> STR_86(18), STR_85(14), STR_84(25), STR_83(25), 
 33153 ;;		 -> STR_82(3), STR_81(34), STR_80(24), STR_79(16), 
 33154 ;;		 -> STR_78(52), STR_75(18), STR_72(5), STR_71(9), 
 33155 ;;		 -> STR_69(9), STR_66(27), STR_64(36), STR_63(27), 
 33156 ;;		 -> STR_61(3), STR_60(40), STR_59(30), STR_58(47), 
 33157 ;;		 -> STR_57(42), STR_56(35), STR_55(50), STR_53(50), 
 33158 ;;		 -> STR_52(55), STR_50(50), STR_49(36), STR_48(34), 
 33159 ;;		 -> STR_47(18), STR_46(41), STR_45(38), STR_44(43), 
 33160 ;;		 -> STR_43(36), STR_42(46), STR_41(35), STR_40(27), 
 33161 ;;		 -> STR_39(25), STR_38(45), STR_37(19), STR_36(25), 
 33162 ;;		 -> STR_35(28), STR_33(45), STR_31(38), STR_25(24), 
 33163 ;;		 -> STR_24(6), STR_23(6), STR_22(9), STR_21(6), 
 33164 ;;		 -> STR_20(6), STR_19(8), STR_18(50), STR_17(44), 
 33165 ;;		 -> STR_15(29), STR_14(44), STR_12(28), STR_11(44), 
 33166 ;;		 -> STR_10(18), STR_9(23), STR_8(33), STR_7(21), 
 33167 ;;		 -> STR_6(19), STR_4(26), STR_3(39), STR_2(23), 
 33168 ;;		 -> STR_1(25), 
 33169 ;; Auto vars:     Size  Location     Type
 33170 ;;  ap              2   92[COMRAM] PTR void [1]
 33171 ;;		 -> ?_printf(2), ?_sprintf(2), 
 33172 ;;  ret             2    0        int 
 33173 ;; Return value:  Size  Location     Type
 33174 ;;                  2   58[BANK5 ] int 
 33175 ;; Registers used:
 33176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33177 ;; Tracked objects:
 33178 ;;		On entry : 3F/5
 33179 ;;		On exit  : 3F/5
 33180 ;;		Unchanged: 0/0
 33181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33182 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33185 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33186 ;;Total ram usage:       14 bytes
 33187 ;; Hardware stack levels used: 1
 33188 ;; Hardware stack levels required when called: 7
 33189 ;; This function calls:
 33190 ;;		_vfprintf
 33191 ;; This function is called by:
 33192 ;;		_disk_initialize
 33193 ;;		_disk_status
 33194 ;;		_disk_read
 33195 ;;		_disk_write
 33196 ;;		_disk_ioctl
 33197 ;;		_util_hexdump
 33198 ;;		_util_addrdump
 33199 ;;		_SPI_SD_configure
 33200 ;;		_SDCard_init
 33201 ;;		_SDCard_read512
 33202 ;;		_SDCard_write512
 33203 ;;		_main
 33204 ;;		_menu_select
 33205 ;;		_mem_init
 33206 ;;		_wait_for_programmer
 33207 ;;		_SD_init
 33208 ;;		_disk_io_handle
 33209 ;; This function uses a non-reentrant model
 33210 ;;
 33211                           
 33212                           	psect	text76
 33213   019EA6                     __ptext76:
 33214                           	callstack 0
 33215   019EA6                     _printf:
 33216                           	callstack 118
 33217                           
 33218                           ; BSR set to: 5
 33219                           
 33220                           ;incstack = 0
 33221   019EA6  0E9C               	movlw	low (?_printf+2)
 33222   019EA8  6E5D               	movwf	printf@ap^(0+1280),c
 33223   019EAA  0E05               	movlw	high (?_printf+2)
 33224   019EAC  6E5E               	movwf	(printf@ap+1)^(0+1280),c
 33225                           
 33226                           ; BSR set to: 5
 33227   019EAE  0E00               	movlw	0
 33228   019EB0  6F94               	movwf	vfprintf@fp& (0+255),b
 33229   019EB2  0E00               	movlw	0
 33230   019EB4  6F95               	movwf	(vfprintf@fp+1)& (0+255),b
 33231   019EB6  C59A  F596         	movff	printf@fmt,vfprintf@fmt
 33232   019EBA  C59B  F597         	movff	printf@fmt+1,vfprintf@fmt+1
 33233   019EBE  0E5D               	movlw	low printf@ap
 33234   019EC0  6F98               	movwf	vfprintf@ap& (0+255),b
 33235   019EC2  0E05               	movlw	high printf@ap
 33236   019EC4  6F99               	movwf	(vfprintf@ap+1)& (0+255),b
 33237   019EC6  EC48  F0CD         	call	_vfprintf	;wreg free
 33238                           
 33239                           ; BSR set to: 5
 33240   019ECA  0012               	return		;funcret
 33241   019ECC                     __end_of_printf:
 33242                           	callstack 0
 33243                           
 33244 ;; *************** function _vfprintf *****************
 33245 ;; Defined at:
 33246 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 33247 ;; Parameters:    Size  Location     Type
 33248 ;;  fp              2   52[BANK5 ] PTR struct _IO_FILE
 33249 ;;		 -> sprintf@f(12), NULL(0), 
 33250 ;;  fmt             2   54[BANK5 ] PTR const unsigned char 
 33251 ;;		 -> STR_90(21), STR_89(32), STR_88(31), STR_87(22), 
 33252 ;;		 -> STR_86(18), STR_85(14), STR_84(25), STR_83(25), 
 33253 ;;		 -> STR_82(3), STR_81(34), STR_80(24), STR_79(16), 
 33254 ;;		 -> STR_78(52), STR_77(15), STR_75(18), STR_72(5), 
 33255 ;;		 -> STR_71(9), STR_69(9), STR_66(27), STR_64(36), 
 33256 ;;		 -> STR_63(27), STR_61(3), STR_60(40), STR_59(30), 
 33257 ;;		 -> STR_58(47), STR_57(42), STR_56(35), STR_55(50), 
 33258 ;;		 -> STR_53(50), STR_52(55), STR_50(50), STR_49(36), 
 33259 ;;		 -> STR_48(34), STR_47(18), STR_46(41), STR_45(38), 
 33260 ;;		 -> STR_44(43), STR_43(36), STR_42(46), STR_41(35), 
 33261 ;;		 -> STR_40(27), STR_39(25), STR_38(45), STR_37(19), 
 33262 ;;		 -> STR_36(25), STR_35(28), STR_33(45), STR_31(38), 
 33263 ;;		 -> STR_25(24), STR_24(6), STR_23(6), STR_22(9), 
 33264 ;;		 -> STR_21(6), STR_20(6), STR_19(8), STR_18(50), 
 33265 ;;		 -> STR_17(44), STR_15(29), STR_14(44), STR_12(28), 
 33266 ;;		 -> STR_11(44), STR_10(18), STR_9(23), STR_8(33), 
 33267 ;;		 -> STR_7(21), STR_6(19), STR_4(26), STR_3(39), 
 33268 ;;		 -> STR_2(23), STR_1(25), 
 33269 ;;  ap              2   56[BANK5 ] PTR PTR void 
 33270 ;;		 -> printf@ap(2), sprintf@ap(2), 
 33271 ;; Auto vars:     Size  Location     Type
 33272 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
 33273 ;;		 -> STR_90(21), STR_89(32), STR_88(31), STR_87(22), 
 33274 ;;		 -> STR_86(18), STR_85(14), STR_84(25), STR_83(25), 
 33275 ;;		 -> STR_82(3), STR_81(34), STR_80(24), STR_79(16), 
 33276 ;;		 -> STR_78(52), STR_77(15), STR_75(18), STR_72(5), 
 33277 ;;		 -> STR_71(9), STR_69(9), STR_66(27), STR_64(36), 
 33278 ;;		 -> STR_63(27), STR_61(3), STR_60(40), STR_59(30), 
 33279 ;;		 -> STR_58(47), STR_57(42), STR_56(35), STR_55(50), 
 33280 ;;		 -> STR_53(50), STR_52(55), STR_50(50), STR_49(36), 
 33281 ;;		 -> STR_48(34), STR_47(18), STR_46(41), STR_45(38), 
 33282 ;;		 -> STR_44(43), STR_43(36), STR_42(46), STR_41(35), 
 33283 ;;		 -> STR_40(27), STR_39(25), STR_38(45), STR_37(19), 
 33284 ;;		 -> STR_36(25), STR_35(28), STR_33(45), STR_31(38), 
 33285 ;;		 -> STR_25(24), STR_24(6), STR_23(6), STR_22(9), 
 33286 ;;		 -> STR_21(6), STR_20(6), STR_19(8), STR_18(50), 
 33287 ;;		 -> STR_17(44), STR_15(29), STR_14(44), STR_12(28), 
 33288 ;;		 -> STR_11(44), STR_10(18), STR_9(23), STR_8(33), 
 33289 ;;		 -> STR_7(21), STR_6(19), STR_4(26), STR_3(39), 
 33290 ;;		 -> STR_2(23), STR_1(25), 
 33291 ;; Return value:  Size  Location     Type
 33292 ;;                  2   52[BANK5 ] int 
 33293 ;; Registers used:
 33294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33295 ;; Tracked objects:
 33296 ;;		On entry : 3F/5
 33297 ;;		On exit  : 3F/5
 33298 ;;		Unchanged: 0/0
 33299 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33300 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33303 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33304 ;;Total ram usage:        8 bytes
 33305 ;; Hardware stack levels used: 1
 33306 ;; Hardware stack levels required when called: 6
 33307 ;; This function calls:
 33308 ;;		_vfpfcnvrt
 33309 ;; This function is called by:
 33310 ;;		_sprintf
 33311 ;;		_printf
 33312 ;; This function uses a non-reentrant model
 33313 ;;
 33314                           
 33315                           	psect	text77
 33316   019A90                     __ptext77:
 33317                           	callstack 0
 33318   019A90                     _vfprintf:
 33319                           	callstack 118
 33320                           
 33321                           ; BSR set to: 5
 33322                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 33323                           
 33324                           ; BSR set to: 5
 33325                           ;incstack = 0
 33326   019A90  C596  F55B         	movff	vfprintf@fmt,vfprintf@cfmt
 33327   019A94  C597  F55C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 33328                           
 33329                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 33330   019A98  D00E               	goto	l9357
 33331   019A9A                     l9355:
 33332                           
 33333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 33334   019A9A  C594  F551         	movff	vfprintf@fp,vfpfcnvrt@fp
 33335   019A9E  C595  F552         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 33336   019AA2  0E5B               	movlw	low vfprintf@cfmt
 33337   019AA4  6E53               	movwf	vfpfcnvrt@fmt^(0+1280),c
 33338   019AA6  0E05               	movlw	high vfprintf@cfmt
 33339   019AA8  6E54               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
 33340   019AAA  C598  F555         	movff	vfprintf@ap,vfpfcnvrt@ap
 33341   019AAE  C599  F556         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 33342   019AB2  ECA7  F095         	call	_vfpfcnvrt	;wreg free
 33343   019AB6                     l9357:
 33344                           
 33345                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 33346   019AB6  C55B  F4F6         	movff	vfprintf@cfmt,tblptrl
 33347   019ABA  C55C  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 33348   019ABE                     	if	0	;tblptru may be non-zero
 33349   019ABE                     	endif
 33350   019ABE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33351   019ABE  0E00               	movlw	low (__mediumconst shr (0+16))
 33352   019AC0  6EF8               	movwf	tblptru,c
 33353   019AC2                     	endif
 33354   019AC2  0008               	tblrd		*
 33355   019AC4  50F5               	movf	tablat,w,c
 33356   019AC6  0900               	iorlw	0
 33357   019AC8  A4D8               	btfss	status,2,c
 33358   019ACA  D7E7               	goto	l9355
 33359                           
 33360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 33361   019ACC  0E00               	movlw	0
 33362   019ACE  0105               	movlb	5	; () banked
 33363   019AD0  6F95               	movwf	(?_vfprintf+1)& (0+255),b
 33364   019AD2  0E00               	movlw	0
 33365   019AD4  6F94               	movwf	?_vfprintf& (0+255),b
 33366                           
 33367                           ; BSR set to: 5
 33368   019AD6  0012               	return		;funcret
 33369   019AD8                     __end_of_vfprintf:
 33370                           	callstack 0
 33371                           
 33372 ;; *************** function _vfpfcnvrt *****************
 33373 ;; Defined at:
 33374 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 33375 ;; Parameters:    Size  Location     Type
 33376 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
 33377 ;;		 -> sprintf@f(12), NULL(0), 
 33378 ;;  fmt             2   82[COMRAM] PTR PTR unsigned char 
 33379 ;;		 -> vfprintf@cfmt(2), 
 33380 ;;  ap              2   84[COMRAM] PTR PTR void 
 33381 ;;		 -> printf@ap(2), sprintf@ap(2), 
 33382 ;; Auto vars:     Size  Location     Type
 33383 ;;  convarg         4   45[BANK5 ] struct .
 33384 ;;  cp              2   50[BANK5 ] PTR unsigned char 
 33385 ;;		 -> STR_90(21), STR_89(32), STR_88(31), STR_87(22), 
 33386 ;;		 -> STR_86(18), STR_85(14), STR_84(25), STR_83(25), 
 33387 ;;		 -> STR_82(3), STR_81(34), STR_80(24), STR_79(16), 
 33388 ;;		 -> STR_78(52), STR_77(15), STR_75(18), STR_72(5), 
 33389 ;;		 -> STR_71(9), STR_69(9), STR_66(27), STR_64(36), 
 33390 ;;		 -> STR_63(27), STR_61(3), STR_60(40), STR_59(30), 
 33391 ;;		 -> STR_58(47), STR_57(42), STR_56(35), STR_55(50), 
 33392 ;;		 -> STR_53(50), STR_52(55), STR_50(50), STR_49(36), 
 33393 ;;		 -> STR_48(34), STR_47(18), STR_46(41), STR_45(38), 
 33394 ;;		 -> STR_44(43), STR_43(36), STR_42(46), STR_41(35), 
 33395 ;;		 -> STR_40(27), STR_39(25), STR_38(45), STR_37(19), 
 33396 ;;		 -> STR_36(25), STR_35(28), STR_33(45), STR_31(38), 
 33397 ;;		 -> STR_25(24), STR_24(6), STR_23(6), STR_22(9), 
 33398 ;;		 -> STR_21(6), STR_20(6), STR_19(8), STR_18(50), 
 33399 ;;		 -> STR_17(44), STR_15(29), STR_14(44), STR_12(28), 
 33400 ;;		 -> STR_11(44), STR_10(18), STR_9(23), STR_8(33), 
 33401 ;;		 -> STR_7(21), STR_6(19), STR_4(26), STR_3(39), 
 33402 ;;		 -> STR_2(23), STR_1(25), 
 33403 ;;  c               1   49[BANK5 ] unsigned char 
 33404 ;;  done            1   44[BANK5 ] _Bool 
 33405 ;; Return value:  Size  Location     Type
 33406 ;;                  1    wreg      void 
 33407 ;; Registers used:
 33408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33409 ;; Tracked objects:
 33410 ;;		On entry : 0/5
 33411 ;;		On exit  : 0/0
 33412 ;;		Unchanged: 0/0
 33413 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33414 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33415 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33416 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33417 ;;      Totals:        10       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33418 ;;Total ram usage:       18 bytes
 33419 ;; Hardware stack levels used: 1
 33420 ;; Hardware stack levels required when called: 5
 33421 ;; This function calls:
 33422 ;;		_ctoa
 33423 ;;		_dtoa
 33424 ;;		_efgtoa
 33425 ;;		_fputc
 33426 ;;		_read_prec_or_width
 33427 ;;		_stoa
 33428 ;;		_xtoa
 33429 ;; This function is called by:
 33430 ;;		_vfprintf
 33431 ;; This function uses a non-reentrant model
 33432 ;;
 33433                           
 33434                           	psect	text78
 33435   012B4E                     __ptext78:
 33436                           	callstack 0
 33437   012B4E                     _vfpfcnvrt:
 33438                           	callstack 118
 33439                           
 33440                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 33441                           
 33442                           ; BSR set to: 5
 33443                           ;incstack = 0
 33444   012B4E  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33445   012B52  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33446   012B56  C4DE F4F6          	movff	postinc2,tblptrl
 33447   012B5A  C4DD F4F7          	movff	postdec2,tblptrh
 33448   012B5E                     	if	0	;tblptru may be non-zero
 33449   012B5E                     	endif
 33450   012B5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33451   012B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 33452   012B60  6EF8               	movwf	tblptru,c
 33453   012B62                     	endif
 33454   012B62  0008               	tblrd		*
 33455   012B64  50F5               	movf	tablat,w,c
 33456   012B66  0A25               	xorlw	37
 33457   012B68  A4D8               	btfss	status,2,c
 33458   012B6A  D2CB               	goto	l9295
 33459                           
 33460                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 33461   012B6C  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33462   012B70  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33463   012B74  2ADE               	incf	postinc2,f,c
 33464   012B76  0E00               	movlw	0
 33465   012B78  22DD               	addwfc	postdec2,f,c
 33466                           
 33467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 33468   012B7A  0E00               	movlw	0
 33469   012B7C  0107               	movlb	7	; () banked
 33470   012B7E  6F14               	movwf	(_width+1)& (0+255),b
 33471   012B80  0E00               	movlw	0
 33472   012B82  6F13               	movwf	_width& (0+255),b
 33473   012B84  C713  F6FF         	movff	_width,_flags
 33474                           
 33475                           ; BSR set to: 7
 33476                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 33477   012B88  6915               	setf	_prec& (0+255),b
 33478   012B8A  6916               	setf	(_prec+1)& (0+255),b
 33479                           
 33480                           ; BSR set to: 7
 33481                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 33482   012B8C  0E00               	movlw	0
 33483   012B8E  0105               	movlb	5	; () banked
 33484   012B90  D00B               	goto	L18
 33485   012B92                     l9147:
 33486                           
 33487                           ; BSR set to: 5
 33488                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 33489   012B92  0106               	movlb	6	; () banked
 33490   012B94  83FF               	bsf	_flags& (0+255),1,b
 33491                           
 33492                           ; BSR set to: 6
 33493                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 33494   012B96  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33495   012B9A  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33496   012B9E  2ADE               	incf	postinc2,f,c
 33497   012BA0  0E00               	movlw	0
 33498   012BA2  22DD               	addwfc	postdec2,f,c
 33499                           
 33500                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 33501   012BA4  D013               	goto	l9157
 33502   012BA6                     l9151:
 33503                           
 33504                           ; BSR set to: 5
 33505                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 33506   012BA6  0E01               	movlw	1
 33507   012BA8                     L18:
 33508   012BA8  6F8C               	movwf	vfpfcnvrt@done& (0+255),b
 33509                           
 33510                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 33511   012BAA  D010               	goto	l9157
 33512   012BAC                     l9155:
 33513                           
 33514                           ; BSR set to: 5
 33515   012BAC  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33516   012BB0  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33517   012BB4  C4DE F4F6          	movff	postinc2,tblptrl
 33518   012BB8  C4DD F4F7          	movff	postdec2,tblptrh
 33519   012BBC                     	if	0	;tblptru may be non-zero
 33520   012BBC                     	endif
 33521   012BBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33522   012BBC  0E00               	movlw	low (__mediumconst shr (0+16))
 33523   012BBE  6EF8               	movwf	tblptru,c
 33524   012BC0                     	endif
 33525   012BC0  0008               	tblrd		*
 33526   012BC2  50F5               	movf	tablat,w,c
 33527                           
 33528                           ; Switch size 1, requested type "simple"
 33529                           ; Number of cases is 1, Range of values is 48 to 48
 33530                           ; switch strategies available:
 33531                           ; Name         Instructions Cycles
 33532                           ; simple_byte            4     3 (average)
 33533                           ;	Chosen strategy is simple_byte
 33534   012BC4  0A30               	xorlw	48	; case 48
 33535   012BC6  B4D8               	btfsc	status,2,c
 33536   012BC8  D7E4               	goto	l9147
 33537   012BCA  D7ED               	goto	l9151
 33538   012BCC                     l9157:
 33539                           
 33540                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 33541   012BCC  0105               	movlb	5	; () banked
 33542   012BCE  518C               	movf	vfpfcnvrt@done& (0+255),w,b
 33543   012BD0  B4D8               	btfsc	status,2,c
 33544   012BD2  D7EC               	goto	l9155
 33545                           
 33546                           ; BSR set to: 5
 33547                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 33548   012BD4  C553  F507         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 33549   012BD8  C554  F508         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 33550   012BDC  C555  F509         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 33551   012BE0  C556  F50A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 33552   012BE4  EC3A  F0C5         	call	_read_prec_or_width	;wreg free
 33553   012BE8  C507  F713         	movff	?_read_prec_or_width,_width
 33554   012BEC  C508  F714         	movff	?_read_prec_or_width+1,_width+1
 33555                           
 33556                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 33557   012BF0  0107               	movlb	7	; () banked
 33558   012BF2  AF14               	btfss	(_width+1)& (0+255),7,b
 33559   012BF4  D007               	goto	l9165
 33560                           
 33561                           ; BSR set to: 7
 33562                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 33563   012BF6  0106               	movlb	6	; () banked
 33564   012BF8  81FF               	bsf	_flags& (0+255),0,b
 33565                           
 33566                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 33567   012BFA  0107               	movlb	7	; () banked
 33568   012BFC  6D13               	negf	_width& (0+255),b
 33569   012BFE  1F14               	comf	(_width+1)& (0+255),f,b
 33570   012C00  B0D8               	btfsc	status,0,c
 33571   012C02  2B14               	incf	(_width+1)& (0+255),f,b
 33572   012C04                     l9165:
 33573                           
 33574                           ; BSR set to: 7
 33575                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 33576   012C04  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33577   012C08  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33578   012C0C  C4DE F4F6          	movff	postinc2,tblptrl
 33579   012C10  C4DD F4F7          	movff	postdec2,tblptrh
 33580   012C14                     	if	0	;tblptru may be non-zero
 33581   012C14                     	endif
 33582   012C14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33583   012C14  0E00               	movlw	low (__mediumconst shr (0+16))
 33584   012C16  6EF8               	movwf	tblptru,c
 33585   012C18                     	endif
 33586   012C18  0008               	tblrd		*
 33587   012C1A  50F5               	movf	tablat,w,c
 33588   012C1C  0A2E               	xorlw	46
 33589   012C1E  A4D8               	btfss	status,2,c
 33590   012C20  D015               	goto	l9171
 33591                           
 33592                           ; BSR set to: 7
 33593                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 33594   012C22  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33595   012C26  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33596   012C2A  2ADE               	incf	postinc2,f,c
 33597   012C2C  0E00               	movlw	0
 33598   012C2E  22DD               	addwfc	postdec2,f,c
 33599                           
 33600                           ; BSR set to: 7
 33601                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 33602   012C30  C553  F507         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 33603   012C34  C554  F508         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 33604   012C38  C555  F509         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 33605   012C3C  C556  F50A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 33606   012C40  EC3A  F0C5         	call	_read_prec_or_width	;wreg free
 33607   012C44  C507  F715         	movff	?_read_prec_or_width,_prec
 33608   012C48  C508  F716         	movff	?_read_prec_or_width+1,_prec+1
 33609   012C4C                     l9171:
 33610                           
 33611                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
 33612   012C4C  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33613   012C50  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33614   012C54  C4DE F4F6          	movff	postinc2,tblptrl
 33615   012C58  C4DD F4F7          	movff	postdec2,tblptrh
 33616   012C5C                     	if	0	;tblptru may be non-zero
 33617   012C5C                     	endif
 33618   012C5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33619   012C5C  0E00               	movlw	low (__mediumconst shr (0+16))
 33620   012C5E  6EF8               	movwf	tblptru,c
 33621   012C60                     	endif
 33622   012C60  0008               	tblrd		*
 33623   012C62  50F5               	movf	tablat,w,c
 33624   012C64  0A63               	xorlw	99
 33625   012C66  A4D8               	btfss	status,2,c
 33626   012C68  D023               	goto	l9179
 33627                           
 33628                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
 33629   012C6A  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33630   012C6E  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33631   012C72  2ADE               	incf	postinc2,f,c
 33632   012C74  0E00               	movlw	0
 33633   012C76  22DD               	addwfc	postdec2,f,c
 33634                           
 33635                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 33636   012C78  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 33637   012C7C  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 33638   012C80  C4DF F557          	movff	indf2,??_vfpfcnvrt
 33639   012C84  0E02               	movlw	2
 33640   012C86  26DE               	addwf	postinc2,f,c
 33641   012C88  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 33642   012C8C  0E00               	movlw	0
 33643   012C8E  22DD               	addwfc	postdec2,f,c
 33644   012C90  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 33645   012C94  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 33646   012C98  50DF               	movf	indf2,w,c
 33647   012C9A  0105               	movlb	5	; () banked
 33648   012C9C  6F91               	movwf	vfpfcnvrt@c& (0+255),b
 33649                           
 33650                           ; BSR set to: 5
 33651                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
 33652   012C9E  C551  F50B         	movff	vfpfcnvrt@fp,ctoa@fp
 33653   012CA2  C552  F50C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 33654   012CA6  C591  F50D         	movff	vfpfcnvrt@c,ctoa@c
 33655   012CAA  EC82  F0C8         	call	_ctoa	;wreg free
 33656   012CAE  0012               	return	
 33657   012CB0                     l9179:
 33658                           
 33659                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 33660   012CB0  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33661   012CB4  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33662   012CB8  C4DE F592          	movff	postinc2,vfpfcnvrt@cp
 33663   012CBC  C4DD F593          	movff	postdec2,vfpfcnvrt@cp+1
 33664                           
 33665                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 33666   012CC0  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33667   012CC4  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33668   012CC8                     	if	0	;tblptru may be non-zero
 33669   012CC8                     	endif
 33670   012CC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33671   012CC8  0E00               	movlw	low (__mediumconst shr (0+16))
 33672   012CCA  6EF8               	movwf	tblptru,c
 33673   012CCC                     	endif
 33674   012CCC  0008               	tblrd		*
 33675   012CCE  C4F5 F591          	movff	tablat,vfpfcnvrt@c
 33676                           
 33677                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 33678   012CD2  D008               	goto	l9191
 33679   012CD4                     l9183:
 33680                           
 33681                           ; BSR set to: 5
 33682                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1309:     cp++;
 33683   012CD4  4B92               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 33684   012CD6  2B93               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 33685                           
 33686                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1316:     break;
 33687   012CD8  D017               	goto	l9193
 33688   012CDA                     l2609:
 33689                           
 33690                           ; BSR set to: 5
 33691                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 33692                           
 33693                           ; BSR set to: 5
 33694   012CDA  0E69               	movlw	105
 33695   012CDC  D001               	goto	L19
 33696   012CDE                     l9187:
 33697                           
 33698                           ; BSR set to: 5
 33699                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 33700   012CDE  0E00               	movlw	0
 33701   012CE0                     L19:
 33702   012CE0  6F91               	movwf	vfpfcnvrt@c& (0+255),b
 33703                           
 33704                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
 33705   012CE2  D012               	goto	l9193
 33706   012CE4                     l9191:
 33707   012CE4  0105               	movlb	5	; () banked
 33708   012CE6  5191               	movf	vfpfcnvrt@c& (0+255),w,b
 33709                           
 33710                           ; Switch size 1, requested type "simple"
 33711                           ; Number of cases is 5, Range of values is 88 to 120
 33712                           ; switch strategies available:
 33713                           ; Name         Instructions Cycles
 33714                           ; simple_byte           16     9 (average)
 33715                           ;	Chosen strategy is simple_byte
 33716   012CE8  0A58               	xorlw	88	; case 88
 33717   012CEA  B4D8               	btfsc	status,2,c
 33718   012CEC  D7F6               	goto	l2609
 33719   012CEE  0A3C               	xorlw	60	; case 100
 33720   012CF0  B4D8               	btfsc	status,2,c
 33721   012CF2  D7F3               	goto	l2609
 33722   012CF4  0A0D               	xorlw	13	; case 105
 33723   012CF6  B4D8               	btfsc	status,2,c
 33724   012CF8  D7F0               	goto	l2609
 33725   012CFA  0A05               	xorlw	5	; case 108
 33726   012CFC  B4D8               	btfsc	status,2,c
 33727   012CFE  D7EA               	goto	l9183
 33728   012D00  0A14               	xorlw	20	; case 120
 33729   012D02  B4D8               	btfsc	status,2,c
 33730   012D04  D7EA               	goto	l2609
 33731   012D06  D7EB               	goto	l9187
 33732   012D08                     l9193:
 33733                           
 33734                           ; BSR set to: 5
 33735                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 33736   012D08  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33737   012D0C  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33738   012D10                     	if	0	;tblptru may be non-zero
 33739   012D10                     	endif
 33740   012D10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33741   012D10  0E00               	movlw	low (__mediumconst shr (0+16))
 33742   012D12  6EF8               	movwf	tblptru,c
 33743   012D14                     	endif
 33744   012D14  0008               	tblrd		*
 33745   012D16  50F5               	movf	tablat,w,c
 33746   012D18  0A64               	xorlw	100
 33747   012D1A  B4D8               	btfsc	status,2,c
 33748   012D1C  D03F               	goto	l9203
 33749                           
 33750                           ; BSR set to: 5
 33751   012D1E  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33752   012D22  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33753   012D26                     	if	0	;tblptru may be non-zero
 33754   012D26                     	endif
 33755   012D26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33756   012D26  0E00               	movlw	low (__mediumconst shr (0+16))
 33757   012D28  6EF8               	movwf	tblptru,c
 33758   012D2A                     	endif
 33759   012D2A  0008               	tblrd		*
 33760   012D2C  50F5               	movf	tablat,w,c
 33761   012D2E  0A69               	xorlw	105
 33762   012D30  B4D8               	btfsc	status,2,c
 33763   012D32  D034               	goto	l9203
 33764   012D34  D057               	goto	l9211
 33765   012D36                     l9197:
 33766                           
 33767                           ; BSR set to: 5
 33768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 33769   012D36  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 33770   012D3A  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 33771   012D3E  C4DF F557          	movff	indf2,??_vfpfcnvrt
 33772   012D42  0E02               	movlw	2
 33773   012D44  26DE               	addwf	postinc2,f,c
 33774   012D46  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 33775   012D4A  0E00               	movlw	0
 33776   012D4C  22DD               	addwfc	postdec2,f,c
 33777   012D4E  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 33778   012D52  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 33779   012D56  C4DE F58D          	movff	postinc2,vfpfcnvrt@convarg
 33780   012D5A  C4DD F58E          	movff	postdec2,vfpfcnvrt@convarg+1
 33781   012D5E  0E00               	movlw	0
 33782   012D60  BF8E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
 33783   012D62  0EFF               	movlw	-1
 33784   012D64  6F8F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 33785   012D66  6F90               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 33786                           
 33787                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1366:      break;
 33788   012D68  D020               	goto	l9205
 33789   012D6A                     l9199:
 33790                           
 33791                           ; BSR set to: 5
 33792                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 33793   012D6A  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 33794   012D6E  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 33795   012D72  C4DF F557          	movff	indf2,??_vfpfcnvrt
 33796   012D76  0E04               	movlw	4
 33797   012D78  26DE               	addwf	postinc2,f,c
 33798   012D7A  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 33799   012D7E  0E00               	movlw	0
 33800   012D80  22DD               	addwfc	postdec2,f,c
 33801   012D82  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 33802   012D86  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 33803   012D8A  C4DE F58D          	movff	postinc2,vfpfcnvrt@convarg
 33804   012D8E  C4DE F58E          	movff	postinc2,vfpfcnvrt@convarg+1
 33805   012D92  C4DE F58F          	movff	postinc2,vfpfcnvrt@convarg+2
 33806   012D96  C4DE F590          	movff	postinc2,vfpfcnvrt@convarg+3
 33807                           
 33808                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1380:      break;
 33809   012D9A  D007               	goto	l9205
 33810   012D9C                     l9203:
 33811                           
 33812                           ; BSR set to: 5
 33813   012D9C  5191               	movf	vfpfcnvrt@c& (0+255),w,b
 33814                           
 33815                           ; Switch size 1, requested type "simple"
 33816                           ; Number of cases is 2, Range of values is 105 to 108
 33817                           ; switch strategies available:
 33818                           ; Name         Instructions Cycles
 33819                           ; simple_byte            7     4 (average)
 33820                           ;	Chosen strategy is simple_byte
 33821   012D9E  0A69               	xorlw	105	; case 105
 33822   012DA0  B4D8               	btfsc	status,2,c
 33823   012DA2  D7C9               	goto	l9197
 33824   012DA4  0A05               	xorlw	5	; case 108
 33825   012DA6  B4D8               	btfsc	status,2,c
 33826   012DA8  D7E0               	goto	l9199
 33827   012DAA                     l9205:
 33828                           
 33829                           ; BSR set to: 5
 33830                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 33831   012DAA  0E01               	movlw	1
 33832   012DAC  2592               	addwf	vfpfcnvrt@cp& (0+255),w,b
 33833   012DAE  6E57               	movwf	??_vfpfcnvrt^(0+1280),c
 33834   012DB0  0E00               	movlw	0
 33835   012DB2  2193               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 33836   012DB4  6E58               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 33837   012DB6  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33838   012DBA  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33839   012DBE  C557  F4DE         	movff	??_vfpfcnvrt,postinc2
 33840   012DC2  C558  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 33841                           
 33842                           ; BSR set to: 5
 33843                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 33844   012DC6  C551  F51B         	movff	vfpfcnvrt@fp,dtoa@fp
 33845   012DCA  C552  F51C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 33846   012DCE  C58D  F51D         	movff	vfpfcnvrt@convarg,dtoa@d
 33847   012DD2  C58E  F51E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 33848   012DD6  C58F  F51F         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 33849   012DDA  C590  F520         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 33850   012DDE  ECA8  F0B8         	call	_dtoa	;wreg free
 33851   012DE2  0012               	return	
 33852   012DE4                     l9211:
 33853                           
 33854                           ; BSR set to: 5
 33855   012DE4  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33856   012DE8  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33857   012DEC                     	if	0	;tblptru may be non-zero
 33858   012DEC                     	endif
 33859   012DEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33860   012DEC  0E00               	movlw	low (__mediumconst shr (0+16))
 33861   012DEE  6EF8               	movwf	tblptru,c
 33862   012DF0                     	endif
 33863   012DF0  0008               	tblrd		*
 33864   012DF2  50F5               	movf	tablat,w,c
 33865   012DF4  0A78               	xorlw	120
 33866   012DF6  B4D8               	btfsc	status,2,c
 33867   012DF8  D040               	goto	l9221
 33868                           
 33869                           ; BSR set to: 5
 33870   012DFA  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33871   012DFE  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33872   012E02                     	if	0	;tblptru may be non-zero
 33873   012E02                     	endif
 33874   012E02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33875   012E02  0E00               	movlw	low (__mediumconst shr (0+16))
 33876   012E04  6EF8               	movwf	tblptru,c
 33877   012E06                     	endif
 33878   012E06  0008               	tblrd		*
 33879   012E08  50F5               	movf	tablat,w,c
 33880   012E0A  0A58               	xorlw	88
 33881   012E0C  B4D8               	btfsc	status,2,c
 33882   012E0E  D035               	goto	l9221
 33883   012E10  D070               	goto	l9233
 33884   012E12                     l9215:
 33885                           
 33886                           ; BSR set to: 5
 33887                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 33888   012E12  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 33889   012E16  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 33890   012E1A  C4DF F557          	movff	indf2,??_vfpfcnvrt
 33891   012E1E  0E02               	movlw	2
 33892   012E20  26DE               	addwf	postinc2,f,c
 33893   012E22  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 33894   012E26  0E00               	movlw	0
 33895   012E28  22DD               	addwfc	postdec2,f,c
 33896   012E2A  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 33897   012E2E  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 33898   012E32  C4DE F559          	movff	postinc2,??_vfpfcnvrt+2
 33899   012E36  C4DD F55A          	movff	postdec2,??_vfpfcnvrt+3
 33900   012E3A  C559  F58D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
 33901   012E3E  C55A  F58E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
 33902   012E42  6B8F               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 33903   012E44  6B90               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 33904                           
 33905                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
 33906   012E46  D020               	goto	l9223
 33907   012E48                     l9217:
 33908                           
 33909                           ; BSR set to: 5
 33910                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 33911   012E48  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 33912   012E4C  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 33913   012E50  C4DF F557          	movff	indf2,??_vfpfcnvrt
 33914   012E54  0E04               	movlw	4
 33915   012E56  26DE               	addwf	postinc2,f,c
 33916   012E58  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 33917   012E5C  0E00               	movlw	0
 33918   012E5E  22DD               	addwfc	postdec2,f,c
 33919   012E60  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 33920   012E64  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 33921   012E68  C4DE F58D          	movff	postinc2,vfpfcnvrt@convarg
 33922   012E6C  C4DE F58E          	movff	postinc2,vfpfcnvrt@convarg+1
 33923   012E70  C4DE F58F          	movff	postinc2,vfpfcnvrt@convarg+2
 33924   012E74  C4DE F590          	movff	postinc2,vfpfcnvrt@convarg+3
 33925                           
 33926                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1471:      break;
 33927   012E78  D007               	goto	l9223
 33928   012E7A                     l9221:
 33929                           
 33930                           ; BSR set to: 5
 33931   012E7A  5191               	movf	vfpfcnvrt@c& (0+255),w,b
 33932                           
 33933                           ; Switch size 1, requested type "simple"
 33934                           ; Number of cases is 2, Range of values is 105 to 108
 33935                           ; switch strategies available:
 33936                           ; Name         Instructions Cycles
 33937                           ; simple_byte            7     4 (average)
 33938                           ;	Chosen strategy is simple_byte
 33939   012E7C  0A69               	xorlw	105	; case 105
 33940   012E7E  B4D8               	btfsc	status,2,c
 33941   012E80  D7C8               	goto	l9215
 33942   012E82  0A05               	xorlw	5	; case 108
 33943   012E84  B4D8               	btfsc	status,2,c
 33944   012E86  D7E0               	goto	l9217
 33945   012E88                     l9223:
 33946                           
 33947                           ; BSR set to: 5
 33948                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 33949   012E88  0E01               	movlw	1
 33950   012E8A  2592               	addwf	vfpfcnvrt@cp& (0+255),w,b
 33951   012E8C  6E57               	movwf	??_vfpfcnvrt^(0+1280),c
 33952   012E8E  0E00               	movlw	0
 33953   012E90  2193               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 33954   012E92  6E58               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 33955   012E94  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33956   012E98  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33957   012E9C  C557  F4DE         	movff	??_vfpfcnvrt,postinc2
 33958   012EA0  C558  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 33959                           
 33960                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 33961   012EA4  D018               	goto	l9231
 33962   012EA6                     l9225:
 33963                           
 33964                           ; BSR set to: 5
 33965                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint,*cp);;	Return value of _vfpfcnvrt is never used
 33966   012EA6  C551  F51B         	movff	vfpfcnvrt@fp,xtoa@fp
 33967   012EAA  C552  F51C         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 33968   012EAE  C58D  F51D         	movff	vfpfcnvrt@convarg,xtoa@d
 33969   012EB2  C58E  F51E         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 33970   012EB6  C58F  F51F         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
 33971   012EBA  C590  F520         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
 33972   012EBE  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33973   012EC2  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33974   012EC6                     	if	0	;tblptru may be non-zero
 33975   012EC6                     	endif
 33976   012EC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33977   012EC6  0E00               	movlw	low (__mediumconst shr (0+16))
 33978   012EC8  6EF8               	movwf	tblptru,c
 33979   012ECA                     	endif
 33980   012ECA  0008               	tblrd		*
 33981   012ECC  C4F5 F521          	movff	tablat,xtoa@x
 33982   012ED0  ECC9  F0BE         	call	_xtoa	;wreg free
 33983   012ED4  0012               	return	
 33984   012ED6                     l9231:
 33985                           
 33986                           ; BSR set to: 5
 33987   012ED6  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33988   012EDA  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33989   012EDE                     	if	0	;tblptru may be non-zero
 33990   012EDE                     	endif
 33991   012EDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33992   012EDE  0E00               	movlw	low (__mediumconst shr (0+16))
 33993   012EE0  6EF8               	movwf	tblptru,c
 33994   012EE2                     	endif
 33995   012EE2  0008               	tblrd		*
 33996   012EE4  50F5               	movf	tablat,w,c
 33997                           
 33998                           ; Switch size 1, requested type "simple"
 33999                           ; Number of cases is 2, Range of values is 88 to 120
 34000                           ; switch strategies available:
 34001                           ; Name         Instructions Cycles
 34002                           ; simple_byte            7     4 (average)
 34003                           ;	Chosen strategy is simple_byte
 34004   012EE6  0A58               	xorlw	88	; case 88
 34005   012EE8  B4D8               	btfsc	status,2,c
 34006   012EEA  D7DD               	goto	l9225
 34007   012EEC  0A20               	xorlw	32	; case 120
 34008   012EEE  B4D8               	btfsc	status,2,c
 34009   012EF0  D7DA               	goto	l9225
 34010   012EF2                     l9233:
 34011                           
 34012                           ; BSR set to: 5
 34013                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 34014   012EF2  0E00               	movlw	0
 34015   012EF4  6F8C               	movwf	vfpfcnvrt@done& (0+255),b
 34016                           
 34017                           ; BSR set to: 5
 34018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 34019   012EF6  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34020   012EFA  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34021   012EFE  C4DE F4F6          	movff	postinc2,tblptrl
 34022   012F02  C4DD F4F7          	movff	postdec2,tblptrh
 34023   012F06                     	if	0	;tblptru may be non-zero
 34024   012F06                     	endif
 34025   012F06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34026   012F06  0E00               	movlw	low (__mediumconst shr (0+16))
 34027   012F08  6EF8               	movwf	tblptru,c
 34028   012F0A                     	endif
 34029   012F0A  0008               	tblrd		*
 34030   012F0C  50F5               	movf	tablat,w,c
 34031   012F0E  0A73               	xorlw	115
 34032   012F10  A4D8               	btfss	status,2,c
 34033   012F12  D00A               	goto	l9241
 34034                           
 34035                           ; BSR set to: 5
 34036                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 34037   012F14  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34038   012F18  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34039   012F1C  2ADE               	incf	postinc2,f,c
 34040   012F1E  0E00               	movlw	0
 34041   012F20  22DD               	addwfc	postdec2,f,c
 34042                           
 34043                           ; BSR set to: 5
 34044                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 34045   012F22  0E01               	movlw	1
 34046   012F24  6F8C               	movwf	vfpfcnvrt@done& (0+255),b
 34047                           
 34048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
 34049   012F26  D044               	goto	l9251
 34050   012F28                     l9241:
 34051                           
 34052                           ; BSR set to: 5
 34053   012F28  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34054   012F2C  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34055   012F30  C4DE F4F6          	movff	postinc2,tblptrl
 34056   012F34  C4DD F4F7          	movff	postdec2,tblptrh
 34057   012F38                     	if	0	;tblptru may be non-zero
 34058   012F38                     	endif
 34059   012F38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34060   012F38  0E00               	movlw	low (__mediumconst shr (0+16))
 34061   012F3A  6EF8               	movwf	tblptru,c
 34062   012F3C                     	endif
 34063   012F3C  0008               	tblrd		*
 34064   012F3E  50F5               	movf	tablat,w,c
 34065   012F40  0A6C               	xorlw	108
 34066   012F42  A4D8               	btfss	status,2,c
 34067   012F44  D035               	goto	l9251
 34068                           
 34069                           ; BSR set to: 5
 34070   012F46  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34071   012F4A  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34072   012F4E  C4DE F557          	movff	postinc2,??_vfpfcnvrt
 34073   012F52  C4DD F558          	movff	postdec2,??_vfpfcnvrt+1
 34074   012F56  0E01               	movlw	1
 34075   012F58  2657               	addwf	??_vfpfcnvrt^(0+1280),f,c
 34076   012F5A  0E00               	movlw	0
 34077   012F5C  2258               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 34078   012F5E  C557  F4F6         	movff	??_vfpfcnvrt,tblptrl
 34079   012F62  C558  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 34080   012F66                     	if	0	;tblptru may be non-zero
 34081   012F66                     	endif
 34082   012F66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34083   012F66  0E00               	movlw	low (__mediumconst shr (0+16))
 34084   012F68  6EF8               	movwf	tblptru,c
 34085   012F6A                     	endif
 34086   012F6A  0008               	tblrd		*
 34087   012F6C  50F5               	movf	tablat,w,c
 34088   012F6E  0A6C               	xorlw	108
 34089   012F70  A4D8               	btfss	status,2,c
 34090   012F72  D01E               	goto	l9251
 34091                           
 34092                           ; BSR set to: 5
 34093   012F74  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34094   012F78  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34095   012F7C  C4DE F557          	movff	postinc2,??_vfpfcnvrt
 34096   012F80  C4DD F558          	movff	postdec2,??_vfpfcnvrt+1
 34097   012F84  0E02               	movlw	2
 34098   012F86  2657               	addwf	??_vfpfcnvrt^(0+1280),f,c
 34099   012F88  0E00               	movlw	0
 34100   012F8A  2258               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 34101   012F8C  C557  F4F6         	movff	??_vfpfcnvrt,tblptrl
 34102   012F90  C558  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 34103   012F94                     	if	0	;tblptru may be non-zero
 34104   012F94                     	endif
 34105   012F94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34106   012F94  0E00               	movlw	low (__mediumconst shr (0+16))
 34107   012F96  6EF8               	movwf	tblptru,c
 34108   012F98                     	endif
 34109   012F98  0008               	tblrd		*
 34110   012F9A  50F5               	movf	tablat,w,c
 34111   012F9C  0A73               	xorlw	115
 34112   012F9E  A4D8               	btfss	status,2,c
 34113   012FA0  D007               	goto	l9251
 34114                           
 34115                           ; BSR set to: 5
 34116                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 34117   012FA2  0E03               	movlw	3
 34118   012FA4  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34119   012FA8  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34120   012FAC  26DE               	addwf	postinc2,f,c
 34121   012FAE  D7B7               	goto	L20
 34122   012FB0                     l9251:
 34123                           
 34124                           ; BSR set to: 5
 34125                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 34126   012FB0  518C               	movf	vfpfcnvrt@done& (0+255),w,b
 34127   012FB2  B4D8               	btfsc	status,2,c
 34128   012FB4  D01B               	goto	l9257
 34129                           
 34130                           ; BSR set to: 5
 34131                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 34132   012FB6  C551  F50B         	movff	vfpfcnvrt@fp,stoa@fp
 34133   012FBA  C552  F50C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 34134   012FBE  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 34135   012FC2  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 34136   012FC6  C4DF F557          	movff	indf2,??_vfpfcnvrt
 34137   012FCA  0E02               	movlw	2
 34138   012FCC  26DE               	addwf	postinc2,f,c
 34139   012FCE  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 34140   012FD2  0E00               	movlw	0
 34141   012FD4  22DD               	addwfc	postdec2,f,c
 34142   012FD6  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 34143   012FDA  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 34144   012FDE  C4DE F50D          	movff	postinc2,stoa@s
 34145   012FE2  C4DD F50E          	movff	postdec2,stoa@s+1
 34146   012FE6  EC02  F0BA         	call	_stoa	;wreg free
 34147   012FEA  0012               	return	
 34148   012FEC                     l9257:
 34149                           
 34150                           ; BSR set to: 5
 34151                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 34152   012FEC  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34153   012FF0  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34154   012FF4  C4DE F592          	movff	postinc2,vfpfcnvrt@cp
 34155   012FF8  C4DD F593          	movff	postdec2,vfpfcnvrt@cp+1
 34156                           
 34157                           ; BSR set to: 5
 34158                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 34159   012FFC  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 34160   013000  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 34161   013004                     	if	0	;tblptru may be non-zero
 34162   013004                     	endif
 34163   013004                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34164   013004  0E00               	movlw	low (__mediumconst shr (0+16))
 34165   013006  6EF8               	movwf	tblptru,c
 34166   013008                     	endif
 34167   013008  0008               	tblrd		*
 34168   01300A  C4F5 F591          	movff	tablat,vfpfcnvrt@c
 34169                           
 34170                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 34171   01300E  D008               	goto	l9269
 34172   013010                     l9261:
 34173                           
 34174                           ; BSR set to: 5
 34175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 34176   013010  4B92               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 34177   013012  2B93               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 34178                           
 34179                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
 34180   013014  D010               	goto	l9271
 34181   013016                     l9263:
 34182                           
 34183                           ; BSR set to: 5
 34184                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 34185   013016  0E6C               	movlw	108
 34186   013018  D001               	goto	L21
 34187   01301A                     l9265:
 34188                           
 34189                           ; BSR set to: 5
 34190                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 34191   01301A  0E00               	movlw	0
 34192   01301C                     L21:
 34193   01301C  6F91               	movwf	vfpfcnvrt@c& (0+255),b
 34194                           
 34195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
 34196   01301E  D00B               	goto	l9271
 34197   013020                     l9269:
 34198                           
 34199                           ; BSR set to: 5
 34200   013020  5191               	movf	vfpfcnvrt@c& (0+255),w,b
 34201                           
 34202                           ; Switch size 1, requested type "simple"
 34203                           ; Number of cases is 3, Range of values is 76 to 108
 34204                           ; switch strategies available:
 34205                           ; Name         Instructions Cycles
 34206                           ; simple_byte           10     6 (average)
 34207                           ;	Chosen strategy is simple_byte
 34208   013022  0A4C               	xorlw	76	; case 76
 34209   013024  B4D8               	btfsc	status,2,c
 34210   013026  D7F4               	goto	l9261
 34211   013028  0A2A               	xorlw	42	; case 102
 34212   01302A  B4D8               	btfsc	status,2,c
 34213   01302C  D7F4               	goto	l9263
 34214   01302E  0A0A               	xorlw	10	; case 108
 34215   013030  B4D8               	btfsc	status,2,c
 34216   013032  D7EE               	goto	l9261
 34217   013034  D7F2               	goto	l9265
 34218   013036                     l9271:
 34219                           
 34220                           ; BSR set to: 5
 34221   013036  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 34222   01303A  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 34223   01303E                     	if	0	;tblptru may be non-zero
 34224   01303E                     	endif
 34225   01303E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34226   01303E  0E00               	movlw	low (__mediumconst shr (0+16))
 34227   013040  6EF8               	movwf	tblptru,c
 34228   013042                     	endif
 34229   013042  0008               	tblrd		*
 34230   013044  50F5               	movf	tablat,w,c
 34231   013046  0A66               	xorlw	102
 34232   013048  B4D8               	btfsc	status,2,c
 34233   01304A  D01A               	goto	l9279
 34234   01304C  D052               	goto	l9291
 34235   01304E                     l9273:
 34236                           
 34237                           ; BSR set to: 5
 34238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 34239                           
 34240                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
 34241                           
 34242                           ; BSR set to: 5
 34243                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 34244   01304E  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 34245   013052  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 34246   013056  C4DF F557          	movff	indf2,??_vfpfcnvrt
 34247   01305A  0E04               	movlw	4
 34248   01305C  26DE               	addwf	postinc2,f,c
 34249   01305E  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 34250   013062  0E00               	movlw	0
 34251   013064  22DD               	addwfc	postdec2,f,c
 34252   013066  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 34253   01306A  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 34254   01306E  C4DE F58D          	movff	postinc2,vfpfcnvrt@convarg
 34255   013072  C4DE F58E          	movff	postinc2,vfpfcnvrt@convarg+1
 34256   013076  C4DE F58F          	movff	postinc2,vfpfcnvrt@convarg+2
 34257   01307A  C4DE F590          	movff	postinc2,vfpfcnvrt@convarg+3
 34258                           
 34259                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
 34260   01307E  D007               	goto	l9281
 34261   013080                     l9279:
 34262                           
 34263                           ; BSR set to: 5
 34264   013080  5191               	movf	vfpfcnvrt@c& (0+255),w,b
 34265                           
 34266                           ; Switch size 1, requested type "simple"
 34267                           ; Number of cases is 2, Range of values is 76 to 108
 34268                           ; switch strategies available:
 34269                           ; Name         Instructions Cycles
 34270                           ; simple_byte            7     4 (average)
 34271                           ;	Chosen strategy is simple_byte
 34272   013082  0A4C               	xorlw	76	; case 76
 34273   013084  B4D8               	btfsc	status,2,c
 34274   013086  D7E3               	goto	l9273
 34275   013088  0A20               	xorlw	32	; case 108
 34276   01308A  B4D8               	btfsc	status,2,c
 34277   01308C  D7E0               	goto	l9273
 34278   01308E                     l9281:
 34279                           
 34280                           ; BSR set to: 5
 34281                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 34282   01308E  0E01               	movlw	1
 34283   013090  2592               	addwf	vfpfcnvrt@cp& (0+255),w,b
 34284   013092  6E57               	movwf	??_vfpfcnvrt^(0+1280),c
 34285   013094  0E00               	movlw	0
 34286   013096  2193               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 34287   013098  6E58               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 34288   01309A  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34289   01309E  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34290   0130A2  C557  F4DE         	movff	??_vfpfcnvrt,postinc2
 34291   0130A6  C558  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 34292                           
 34293                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 34294   0130AA  D018               	goto	l9289
 34295   0130AC                     l9283:
 34296                           
 34297                           ; BSR set to: 5
 34298                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 34299   0130AC  C551  F548         	movff	vfpfcnvrt@fp,efgtoa@fp
 34300   0130B0  C552  F549         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 34301   0130B4  C58D  F54A         	movff	vfpfcnvrt@convarg,efgtoa@f
 34302   0130B8  C58E  F54B         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 34303   0130BC  C58F  F54C         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 34304   0130C0  C590  F54D         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 34305   0130C4  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 34306   0130C8  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 34307   0130CC                     	if	0	;tblptru may be non-zero
 34308   0130CC                     	endif
 34309   0130CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34310   0130CC  0E00               	movlw	low (__mediumconst shr (0+16))
 34311   0130CE  6EF8               	movwf	tblptru,c
 34312   0130D0                     	endif
 34313   0130D0  0008               	tblrd		*
 34314   0130D2  C4F5 F54E          	movff	tablat,efgtoa@c
 34315   0130D6  EC00  F080         	call	_efgtoa	;wreg free
 34316   0130DA  0012               	return	
 34317   0130DC                     l9289:
 34318                           
 34319                           ; BSR set to: 5
 34320   0130DC  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 34321   0130E0  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 34322   0130E4                     	if	0	;tblptru may be non-zero
 34323   0130E4                     	endif
 34324   0130E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34325   0130E4  0E00               	movlw	low (__mediumconst shr (0+16))
 34326   0130E6  6EF8               	movwf	tblptru,c
 34327   0130E8                     	endif
 34328   0130E8  0008               	tblrd		*
 34329   0130EA  50F5               	movf	tablat,w,c
 34330                           
 34331                           ; Switch size 1, requested type "simple"
 34332                           ; Number of cases is 1, Range of values is 102 to 102
 34333                           ; switch strategies available:
 34334                           ; Name         Instructions Cycles
 34335                           ; simple_byte            4     3 (average)
 34336                           ;	Chosen strategy is simple_byte
 34337   0130EC  0A66               	xorlw	102	; case 102
 34338   0130EE  B4D8               	btfsc	status,2,c
 34339   0130F0  D7DD               	goto	l9283
 34340   0130F2                     l9291:
 34341                           
 34342                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 34343   0130F2  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34344   0130F6  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34345   0130FA  2ADE               	incf	postinc2,f,c
 34346   0130FC  0E00               	movlw	0
 34347   0130FE  22DD               	addwfc	postdec2,f,c
 34348   013100  0012               	return	
 34349   013102                     l9295:
 34350                           
 34351                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 34352   013102  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34353   013106  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34354   01310A  C4DE F4F6          	movff	postinc2,tblptrl
 34355   01310E  C4DD F4F7          	movff	postdec2,tblptrh
 34356   013112                     	if	0	;tblptru may be non-zero
 34357   013112                     	endif
 34358   013112                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34359   013112  0E00               	movlw	low (__mediumconst shr (0+16))
 34360   013114  6EF8               	movwf	tblptru,c
 34361   013116                     	endif
 34362   013116  0008               	tblrd		*
 34363   013118  50F5               	movf	tablat,w,c
 34364   01311A  6E02               	movwf	fputc@c^(0+1280),c
 34365   01311C  6A03               	clrf	(fputc@c+1)^(0+1280),c
 34366   01311E  C551  F504         	movff	vfpfcnvrt@fp,fputc@fp
 34367   013122  C552  F505         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 34368   013126  EC96  F0C7         	call	_fputc	;wreg free
 34369   01312A  D7E3               	goto	l9291
 34370   01312C                     __end_of_vfpfcnvrt:
 34371                           	callstack 0
 34372                           
 34373 ;; *************** function _xtoa *****************
 34374 ;; Defined at:
 34375 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 34376 ;; Parameters:    Size  Location     Type
 34377 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
 34378 ;;		 -> sprintf@f(12), NULL(0), 
 34379 ;;  d               4   28[COMRAM] unsigned long 
 34380 ;;  x               1   32[COMRAM] unsigned char 
 34381 ;; Auto vars:     Size  Location     Type
 34382 ;;  i               2   45[COMRAM] int 
 34383 ;;  w               2   42[COMRAM] int 
 34384 ;;  p               2   40[COMRAM] int 
 34385 ;;  c               1   44[COMRAM] unsigned char 
 34386 ;;  a               1   39[COMRAM] unsigned char 
 34387 ;; Return value:  Size  Location     Type
 34388 ;;                  1    wreg      void 
 34389 ;; Registers used:
 34390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34391 ;; Tracked objects:
 34392 ;;		On entry : 0/5
 34393 ;;		On exit  : 0/0
 34394 ;;		Unchanged: 0/0
 34395 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34396 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34397 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34399 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34400 ;;Total ram usage:       21 bytes
 34401 ;; Hardware stack levels used: 1
 34402 ;; Hardware stack levels required when called: 4
 34403 ;; This function calls:
 34404 ;;		_pad
 34405 ;; This function is called by:
 34406 ;;		_vfpfcnvrt
 34407 ;; This function uses a non-reentrant model
 34408 ;;
 34409                           
 34410                           	psect	text79
 34411   017D92                     __ptext79:
 34412                           	callstack 0
 34413   017D92                     _xtoa:
 34414                           	callstack 118
 34415                           
 34416                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1052: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d, char x);C:\Program Files\Microchip\xc8\v2.46\pic\sources\
      +                          c99\common\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\do
      +                          prnt.c: 1061:  char a;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dop
      +                          rnt.c: 1065:  int p;
 34417                           
 34418                           ;incstack = 0
 34419   017D92  0107               	movlb	7	; () banked
 34420   017D94  BF16               	btfsc	(_prec+1)& (0+255),7,b
 34421   017D96  D002               	goto	l8959
 34422                           
 34423                           ; BSR set to: 7
 34424                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
 34425   017D98  0106               	movlb	6	; () banked
 34426   017D9A  93FF               	bcf	_flags& (0+255),1,b
 34427   017D9C                     l8959:
 34428                           
 34429                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
 34430   017D9C  0107               	movlb	7	; () banked
 34431   017D9E  AF16               	btfss	(_prec+1)& (0+255),7,b
 34432   017DA0  D005               	goto	l2565
 34433                           
 34434                           ; BSR set to: 7
 34435   017DA2  0E00               	movlw	0
 34436   017DA4  6E2A               	movwf	(xtoa@p+1)^(0+1280),c
 34437   017DA6  0E01               	movlw	1
 34438   017DA8  6E29               	movwf	xtoa@p^(0+1280),c
 34439   017DAA  D004               	goto	l2567
 34440   017DAC                     l2565:
 34441                           
 34442                           ; BSR set to: 7
 34443   017DAC  C715  F529         	movff	_prec,xtoa@p
 34444   017DB0  C716  F52A         	movff	_prec+1,xtoa@p+1
 34445   017DB4                     l2567:
 34446                           
 34447                           ; BSR set to: 7
 34448                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 34449   017DB4  C713  F52B         	movff	_width,xtoa@w
 34450   017DB8  C714  F52C         	movff	_width+1,xtoa@w+1
 34451                           
 34452                           ; BSR set to: 7
 34453                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
 34454   017DBC  0E78               	movlw	120
 34455   017DBE  1821               	xorwf	xtoa@x^(0+1280),w,c
 34456   017DC0  B4D8               	btfsc	status,2,c
 34457   017DC2  D004               	goto	l8967
 34458                           
 34459                           ; BSR set to: 7
 34460   017DC4  0E00               	movlw	0
 34461   017DC6  6E27               	movwf	(_xtoa$3442+1)^(0+1280),c
 34462   017DC8  0E41               	movlw	65
 34463   017DCA  D003               	goto	L22
 34464   017DCC                     l8967:
 34465                           
 34466                           ; BSR set to: 7
 34467   017DCC  0E00               	movlw	0
 34468   017DCE  6E27               	movwf	(_xtoa$3442+1)^(0+1280),c
 34469   017DD0  0E61               	movlw	97
 34470   017DD2                     L22:
 34471   017DD2  6E26               	movwf	_xtoa$3442^(0+1280),c
 34472                           
 34473                           ; BSR set to: 7
 34474   017DD4  C526  F528         	movff	_xtoa$3442,xtoa@a
 34475                           
 34476                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 34477   017DD8  0E00               	movlw	0
 34478   017DDA  6E2F               	movwf	(xtoa@i+1)^(0+1280),c
 34479   017DDC  0E4F               	movlw	79
 34480   017DDE  6E2E               	movwf	xtoa@i^(0+1280),c
 34481                           
 34482                           ; BSR set to: 7
 34483                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 34484   017DE0  0E00               	movlw	0
 34485   017DE2  6F7B               	movwf	(_dbuf+79)& (0+255),b
 34486                           
 34487                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 34488   017DE4  D035               	goto	l8991
 34489   017DE6                     l8973:
 34490                           
 34491                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1107:         --i;
 34492   017DE6  062E               	decf	xtoa@i^(0+1280),f,c
 34493   017DE8  A0D8               	btfss	status,0,c
 34494   017DEA  062F               	decf	(xtoa@i+1)^(0+1280),f,c
 34495                           
 34496                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 34497   017DEC  501D               	movf	xtoa@d^(0+1280),w,c
 34498   017DEE  0B0F               	andlw	15
 34499   017DF0  6E2D               	movwf	xtoa@c^(0+1280),c
 34500                           
 34501                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 34502   017DF2  0E0A               	movlw	10
 34503   017DF4  602D               	cpfslt	xtoa@c^(0+1280),c
 34504   017DF6  D002               	goto	l8981
 34505                           
 34506                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 34507   017DF8  0E30               	movlw	48
 34508   017DFA  D002               	goto	L23
 34509   017DFC                     l8981:
 34510                           
 34511                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
 34512   017DFC  5028               	movf	xtoa@a^(0+1280),w,c
 34513   017DFE  0FF6               	addlw	246
 34514   017E00                     L23:
 34515   017E00  262D               	addwf	xtoa@c^(0+1280),f,c
 34516                           
 34517                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 34518   017E02  0E2C               	movlw	low _dbuf
 34519   017E04  242E               	addwf	xtoa@i^(0+1280),w,c
 34520   017E06  6ED9               	movwf	fsr2l,c
 34521   017E08  0E07               	movlw	high _dbuf
 34522   017E0A  202F               	addwfc	(xtoa@i+1)^(0+1280),w,c
 34523   017E0C  6EDA               	movwf	fsr2h,c
 34524   017E0E  C52D  F4DF         	movff	xtoa@c,indf2
 34525                           
 34526                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
 34527   017E12  0629               	decf	xtoa@p^(0+1280),f,c
 34528   017E14  A0D8               	btfss	status,0,c
 34529   017E16  062A               	decf	(xtoa@p+1)^(0+1280),f,c
 34530                           
 34531                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 34532   017E18  062B               	decf	xtoa@w^(0+1280),f,c
 34533   017E1A  A0D8               	btfss	status,0,c
 34534   017E1C  062C               	decf	(xtoa@w+1)^(0+1280),f,c
 34535                           
 34536                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 34537   017E1E  C51D  F522         	movff	xtoa@d,??_xtoa
 34538   017E22  C51E  F523         	movff	xtoa@d+1,??_xtoa+1
 34539   017E26  C51F  F524         	movff	xtoa@d+2,??_xtoa+2
 34540   017E2A  C520  F525         	movff	xtoa@d+3,??_xtoa+3
 34541   017E2E  0E05               	movlw	5
 34542   017E30  D005               	goto	u10310
 34543   017E32                     u10315:
 34544   017E32  90D8               	bcf	status,0,c
 34545   017E34  3225               	rrcf	(??_xtoa+3)^(0+1280),f,c
 34546   017E36  3224               	rrcf	(??_xtoa+2)^(0+1280),f,c
 34547   017E38  3223               	rrcf	(??_xtoa+1)^(0+1280),f,c
 34548   017E3A  3222               	rrcf	??_xtoa^(0+1280),f,c
 34549   017E3C                     u10310:
 34550   017E3C  2EE8               	decfsz	wreg,f,c
 34551   017E3E  D7F9               	goto	u10315
 34552   017E40  C522  F51D         	movff	??_xtoa,xtoa@d
 34553   017E44  C523  F51E         	movff	??_xtoa+1,xtoa@d+1
 34554   017E48  C524  F51F         	movff	??_xtoa+2,xtoa@d+2
 34555   017E4C  C525  F520         	movff	??_xtoa+3,xtoa@d+3
 34556   017E50                     l8991:
 34557                           
 34558                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 34559   017E50  BE2F               	btfsc	(xtoa@i+1)^(0+1280),7,c
 34560   017E52  D01D               	goto	u10360
 34561   017E54  502F               	movf	(xtoa@i+1)^(0+1280),w,c
 34562   017E56  E104               	bnz	u10320
 34563   017E58  0E02               	movlw	2
 34564   017E5A  5C2E               	subwf	xtoa@i^(0+1280),w,c
 34565   017E5C  A0D8               	btfss	status,0,c
 34566   017E5E  D017               	goto	u10360
 34567   017E60                     u10320:
 34568   017E60  501D               	movf	xtoa@d^(0+1280),w,c
 34569   017E62  101E               	iorwf	(xtoa@d+1)^(0+1280),w,c
 34570   017E64  101F               	iorwf	(xtoa@d+2)^(0+1280),w,c
 34571   017E66  1020               	iorwf	(xtoa@d+3)^(0+1280),w,c
 34572   017E68  A4D8               	btfss	status,2,c
 34573   017E6A  D7BD               	goto	l8973
 34574   017E6C  BE2A               	btfsc	(xtoa@p+1)^(0+1280),7,c
 34575   017E6E  D005               	goto	u10340
 34576   017E70  502A               	movf	(xtoa@p+1)^(0+1280),w,c
 34577   017E72  E1B9               	bnz	l8973
 34578   017E74  0429               	decf	xtoa@p^(0+1280),w,c
 34579   017E76  B0D8               	btfsc	status,0,c
 34580   017E78  D7B6               	goto	l8973
 34581   017E7A                     u10340:
 34582   017E7A  BE2C               	btfsc	(xtoa@w+1)^(0+1280),7,c
 34583   017E7C  D008               	goto	u10360
 34584   017E7E  502C               	movf	(xtoa@w+1)^(0+1280),w,c
 34585   017E80  E103               	bnz	u10350
 34586   017E82  042B               	decf	xtoa@w^(0+1280),w,c
 34587   017E84  A0D8               	btfss	status,0,c
 34588   017E86  D003               	goto	u10360
 34589   017E88                     u10350:
 34590   017E88  0106               	movlb	6	; () banked
 34591   017E8A  B3FF               	btfsc	_flags& (0+255),1,b
 34592   017E8C  D7AC               	goto	l8973
 34593   017E8E                     u10360:
 34594                           
 34595                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 34596   017E8E  C51B  F512         	movff	xtoa@fp,pad@fp
 34597   017E92  C51C  F513         	movff	xtoa@fp+1,pad@fp+1
 34598   017E96  0E2C               	movlw	low _dbuf
 34599   017E98  242E               	addwf	xtoa@i^(0+1280),w,c
 34600   017E9A  6E14               	movwf	pad@buf^(0+1280),c
 34601   017E9C  0E07               	movlw	high _dbuf
 34602   017E9E  202F               	addwfc	(xtoa@i+1)^(0+1280),w,c
 34603   017EA0  6E15               	movwf	(pad@buf+1)^(0+1280),c
 34604   017EA2  C52B  F516         	movff	xtoa@w,pad@p
 34605   017EA6  C52C  F517         	movff	xtoa@w+1,pad@p+1
 34606   017EAA  ECD4  F0C9         	call	_pad	;wreg free
 34607   017EAE  0012               	return		;funcret
 34608   017EB0                     __end_of_xtoa:
 34609                           	callstack 0
 34610                           
 34611 ;; *************** function _stoa *****************
 34612 ;; Defined at:
 34613 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 34614 ;; Parameters:    Size  Location     Type
 34615 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
 34616 ;;		 -> sprintf@f(12), NULL(0), 
 34617 ;;  s               2   12[COMRAM] PTR unsigned char 
 34618 ;;		 -> files$buf(512), files$fptr(4), files$sect(4), files$obj$objsize(4), 
 34619 ;;		 -> files$dir_sect(4), sdj$sect(4), dj$sect(4), djn$sect(4), 
 34620 ;;		 -> djo$sect(4), fs$win(512), fs$winsect(4), fs$fatbase(4), 
 34621 ;;		 -> fs$volbase(4), fs$csize(2), fs$pdrv(1), fsdir$sect(4), 
 34622 ;;		 -> ?_printf(2), ?_sprintf(2), fileinfo(22), fs(560), 
 34623 ;;		 -> STR_54(5), STR_51(5), STR_34(17), STR_32(17), 
 34624 ;;		 -> NULL(0), STR_26(1), util_addrdump@chars(17), util_hexdump@chars(17), 
 34625 ;;		 -> STR_16(6), STR_13(6), STR_5(1), disk_initialize@buf(128), 
 34626 ;; Auto vars:     Size  Location     Type
 34627 ;;  l               2   22[COMRAM] int 
 34628 ;;  cp              2   20[COMRAM] PTR unsigned char 
 34629 ;;		 -> files$buf(512), files$fptr(4), files$sect(4), files$obj$objsize(4), 
 34630 ;;		 -> files$dir_sect(4), sdj$sect(4), dj$sect(4), djn$sect(4), 
 34631 ;;		 -> djo$sect(4), fs$win(512), fs$winsect(4), fs$fatbase(4), 
 34632 ;;		 -> fs$volbase(4), fs$csize(2), fs$pdrv(1), fsdir$sect(4), 
 34633 ;;		 -> ?_printf(2), STR_97(7), ?_sprintf(2), fileinfo(22), 
 34634 ;;		 -> fs(560), STR_54(5), STR_51(5), STR_34(17), 
 34635 ;;		 -> STR_32(17), NULL(0), STR_26(1), util_addrdump@chars(17), 
 34636 ;;		 -> util_hexdump@chars(17), STR_16(6), STR_13(6), STR_5(1), 
 34637 ;;		 -> disk_initialize@buf(128), 
 34638 ;;  w               2   18[COMRAM] int 
 34639 ;;  p               2   16[COMRAM] int 
 34640 ;; Return value:  Size  Location     Type
 34641 ;;                  1    wreg      void 
 34642 ;; Registers used:
 34643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34644 ;; Tracked objects:
 34645 ;;		On entry : 3F/5
 34646 ;;		On exit  : 0/0
 34647 ;;		Unchanged: 0/0
 34648 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34650 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34652 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34653 ;;Total ram usage:       14 bytes
 34654 ;; Hardware stack levels used: 1
 34655 ;; Hardware stack levels required when called: 2
 34656 ;; This function calls:
 34657 ;;		_fputc
 34658 ;; This function is called by:
 34659 ;;		_vfpfcnvrt
 34660 ;; This function uses a non-reentrant model
 34661 ;;
 34662                           
 34663                           	psect	text80
 34664   017404                     __ptext80:
 34665                           	callstack 0
 34666   017404                     _stoa:
 34667                           	callstack 120
 34668                           
 34669                           ; BSR set to: 5
 34670                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 34671                           
 34672                           ;incstack = 0
 34673   017404  C50D  F515         	movff	stoa@s,stoa@cp
 34674   017408  C50E  F516         	movff	stoa@s+1,stoa@cp+1
 34675                           
 34676                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 34677   01740C  5015               	movf	stoa@cp^(0+1280),w,c
 34678   01740E  1016               	iorwf	(stoa@cp+1)^(0+1280),w,c
 34679   017410  A4D8               	btfss	status,2,c
 34680   017412  D004               	goto	l8921
 34681                           
 34682                           ; BSR set to: 5
 34683                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 34684   017414  0EDA               	movlw	low STR_97
 34685   017416  6E15               	movwf	stoa@cp^(0+1280),c
 34686   017418  0EFF               	movlw	high STR_97
 34687   01741A  6E16               	movwf	(stoa@cp+1)^(0+1280),c
 34688   01741C                     l8921:
 34689                           
 34690                           ; BSR set to: 5
 34691                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 34692   01741C  0E00               	movlw	0
 34693   01741E  6E18               	movwf	(stoa@l+1)^(0+1280),c
 34694   017420  0E00               	movlw	0
 34695   017422  6E17               	movwf	stoa@l^(0+1280),c
 34696   017424  D002               	goto	l8925
 34697   017426                     l8923:
 34698   017426  4A17               	infsnz	stoa@l^(0+1280),f,c
 34699   017428  2A18               	incf	(stoa@l+1)^(0+1280),f,c
 34700   01742A                     l8925:
 34701   01742A  5017               	movf	stoa@l^(0+1280),w,c
 34702   01742C  2415               	addwf	stoa@cp^(0+1280),w,c
 34703   01742E  6E0F               	movwf	??_stoa^(0+1280),c
 34704   017430  5018               	movf	(stoa@l+1)^(0+1280),w,c
 34705   017432  2016               	addwfc	(stoa@cp+1)^(0+1280),w,c
 34706   017434  6E10               	movwf	(??_stoa+1)^(0+1280),c
 34707   017436  C50F  F4F6         	movff	??_stoa,tblptrl
 34708   01743A  C510  F4F7         	movff	??_stoa+1,tblptrh
 34709   01743E  0E00               	movlw	low (__mediumconst shr (0+16))
 34710   017440  6EF8               	movwf	tblptru,c
 34711   017442  0E24               	movlw	(high __ramtop+-1)
 34712   017444  64F7               	cpfsgt	tblptrh,c
 34713   017446  D003               	bra	u10177
 34714   017448  0008               	tblrd		*
 34715   01744A  50F5               	movf	tablat,w,c
 34716   01744C  D005               	bra	u10170
 34717   01744E                     u10177:
 34718   01744E  C4F6 F4E9          	movff	tblptrl,fsr0l
 34719   017452  C4F7 F4EA          	movff	tblptrh,fsr0h
 34720   017456  50EF               	movf	indf0,w,c
 34721   017458                     u10170:
 34722   017458  0900               	iorlw	0
 34723   01745A  A4D8               	btfss	status,2,c
 34724   01745C  D7E4               	goto	l8923
 34725                           
 34726                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 34727   01745E  0107               	movlb	7	; () banked
 34728   017460  BF16               	btfsc	(_prec+1)& (0+255),7,b
 34729   017462  D00E               	goto	l2548
 34730                           
 34731                           ; BSR set to: 7
 34732   017464  5017               	movf	stoa@l^(0+1280),w,c
 34733   017466  5D15               	subwf	_prec& (0+255),w,b
 34734   017468  5116               	movf	(_prec+1)& (0+255),w,b
 34735   01746A  0A80               	xorlw	128
 34736   01746C  6E0F               	movwf	??_stoa^(0+1280),c
 34737   01746E  5018               	movf	(stoa@l+1)^(0+1280),w,c
 34738   017470  0A80               	xorlw	128
 34739   017472  580F               	subwfb	??_stoa^(0+1280),w,c
 34740   017474  B0D8               	btfsc	status,0,c
 34741   017476  D004               	goto	l2548
 34742                           
 34743                           ; BSR set to: 7
 34744                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 34745   017478  C715  F517         	movff	_prec,stoa@l
 34746   01747C  C716  F518         	movff	_prec+1,stoa@l+1
 34747   017480                     l2548:
 34748                           
 34749                           ; BSR set to: 7
 34750                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
 34751   017480  C517  F511         	movff	stoa@l,stoa@p
 34752   017484  C518  F512         	movff	stoa@l+1,stoa@p+1
 34753                           
 34754                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 34755   017488  C713  F513         	movff	_width,stoa@w
 34756   01748C  C714  F514         	movff	_width+1,stoa@w+1
 34757                           
 34758                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 34759   017490  0106               	movlb	6	; () banked
 34760   017492  A1FF               	btfss	_flags& (0+255),0,b
 34761   017494  D00D               	goto	l8939
 34762   017496  D034               	goto	l8945
 34763   017498                     l8935:
 34764                           
 34765                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 34766   017498  0E00               	movlw	0
 34767   01749A  6E03               	movwf	(fputc@c+1)^(0+1280),c
 34768   01749C  0E20               	movlw	32
 34769   01749E  6E02               	movwf	fputc@c^(0+1280),c
 34770   0174A0  C50B  F504         	movff	stoa@fp,fputc@fp
 34771   0174A4  C50C  F505         	movff	stoa@fp+1,fputc@fp+1
 34772   0174A8  EC96  F0C7         	call	_fputc	;wreg free
 34773                           
 34774                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 34775   0174AC  4A17               	infsnz	stoa@l^(0+1280),f,c
 34776   0174AE  2A18               	incf	(stoa@l+1)^(0+1280),f,c
 34777   0174B0                     l8939:
 34778                           
 34779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 34780   0174B0  5013               	movf	stoa@w^(0+1280),w,c
 34781   0174B2  5C17               	subwf	stoa@l^(0+1280),w,c
 34782   0174B4  5018               	movf	(stoa@l+1)^(0+1280),w,c
 34783   0174B6  0A80               	xorlw	128
 34784   0174B8  6E0F               	movwf	??_stoa^(0+1280),c
 34785   0174BA  5014               	movf	(stoa@w+1)^(0+1280),w,c
 34786   0174BC  0A80               	xorlw	128
 34787   0174BE  580F               	subwfb	??_stoa^(0+1280),w,c
 34788   0174C0  B0D8               	btfsc	status,0,c
 34789   0174C2  D01E               	goto	l8945
 34790   0174C4  D7E9               	goto	l8935
 34791   0174C6                     l8941:
 34792                           
 34793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 34794   0174C6  C515  F4F6         	movff	stoa@cp,tblptrl
 34795   0174CA  C516  F4F7         	movff	stoa@cp+1,tblptrh
 34796   0174CE  0E00               	movlw	low (__mediumconst shr (0+16))
 34797   0174D0  6EF8               	movwf	tblptru,c
 34798   0174D2  0E24               	movlw	(high __ramtop+-1)
 34799   0174D4  64F7               	cpfsgt	tblptrh,c
 34800   0174D6  D003               	bra	u10237
 34801   0174D8  0008               	tblrd		*
 34802   0174DA  50F5               	movf	tablat,w,c
 34803   0174DC  D005               	bra	u10230
 34804   0174DE                     u10237:
 34805   0174DE  C4F6 F4E9          	movff	tblptrl,fsr0l
 34806   0174E2  C4F7 F4EA          	movff	tblptrh,fsr0h
 34807   0174E6  50EF               	movf	indf0,w,c
 34808   0174E8                     u10230:
 34809   0174E8  6E0F               	movwf	??_stoa^(0+1280),c
 34810   0174EA  500F               	movf	??_stoa^(0+1280),w,c
 34811   0174EC  6E02               	movwf	fputc@c^(0+1280),c
 34812   0174EE  6A03               	clrf	(fputc@c+1)^(0+1280),c
 34813   0174F0  C50B  F504         	movff	stoa@fp,fputc@fp
 34814   0174F4  C50C  F505         	movff	stoa@fp+1,fputc@fp+1
 34815   0174F8  EC96  F0C7         	call	_fputc	;wreg free
 34816                           
 34817                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 34818   0174FC  4A15               	infsnz	stoa@cp^(0+1280),f,c
 34819   0174FE  2A16               	incf	(stoa@cp+1)^(0+1280),f,c
 34820   017500                     l8945:
 34821                           
 34822                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 34823   017500  0611               	decf	stoa@p^(0+1280),f,c
 34824   017502  A0D8               	btfss	status,0,c
 34825   017504  0612               	decf	(stoa@p+1)^(0+1280),f,c
 34826   017506  2811               	incf	stoa@p^(0+1280),w,c
 34827   017508  E1DE               	bnz	l8941
 34828   01750A  2812               	incf	(stoa@p+1)^(0+1280),w,c
 34829   01750C  A4D8               	btfss	status,2,c
 34830   01750E  D7DB               	goto	l8941
 34831                           
 34832                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 34833   017510  0106               	movlb	6	; () banked
 34834   017512  A1FF               	btfss	_flags& (0+255),0,b
 34835   017514  0012               	return	
 34836   017516  D00C               	goto	l8953
 34837   017518                     l8949:
 34838                           
 34839                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 34840   017518  0E00               	movlw	0
 34841   01751A  6E03               	movwf	(fputc@c+1)^(0+1280),c
 34842   01751C  0E20               	movlw	32
 34843   01751E  6E02               	movwf	fputc@c^(0+1280),c
 34844   017520  C50B  F504         	movff	stoa@fp,fputc@fp
 34845   017524  C50C  F505         	movff	stoa@fp+1,fputc@fp+1
 34846   017528  EC96  F0C7         	call	_fputc	;wreg free
 34847                           
 34848                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 34849   01752C  4A17               	infsnz	stoa@l^(0+1280),f,c
 34850   01752E  2A18               	incf	(stoa@l+1)^(0+1280),f,c
 34851   017530                     l8953:
 34852                           
 34853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 34854   017530  5013               	movf	stoa@w^(0+1280),w,c
 34855   017532  5C17               	subwf	stoa@l^(0+1280),w,c
 34856   017534  5018               	movf	(stoa@l+1)^(0+1280),w,c
 34857   017536  0A80               	xorlw	128
 34858   017538  6E0F               	movwf	??_stoa^(0+1280),c
 34859   01753A  5014               	movf	(stoa@w+1)^(0+1280),w,c
 34860   01753C  0A80               	xorlw	128
 34861   01753E  580F               	subwfb	??_stoa^(0+1280),w,c
 34862   017540  B0D8               	btfsc	status,0,c
 34863   017542  0012               	return	
 34864   017544  D7E9               	goto	l8949
 34865   017546                     __end_of_stoa:
 34866                           	callstack 0
 34867                           
 34868 ;; *************** function _read_prec_or_width *****************
 34869 ;; Defined at:
 34870 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 34871 ;; Parameters:    Size  Location     Type
 34872 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
 34873 ;;		 -> vfprintf@cfmt(2), 
 34874 ;;  ap              2    8[COMRAM] PTR PTR void [1]
 34875 ;;		 -> printf@ap(2), sprintf@ap(2), 
 34876 ;; Auto vars:     Size  Location     Type
 34877 ;;  c               1   12[COMRAM] unsigned char 
 34878 ;;  n               2   13[COMRAM] int 
 34879 ;; Return value:  Size  Location     Type
 34880 ;;                  2    6[COMRAM] int 
 34881 ;; Registers used:
 34882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34883 ;; Tracked objects:
 34884 ;;		On entry : 3D/5
 34885 ;;		On exit  : 0/0
 34886 ;;		Unchanged: 0/0
 34887 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34889 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34890 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34891 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34892 ;;Total ram usage:        9 bytes
 34893 ;; Hardware stack levels used: 1
 34894 ;; Hardware stack levels required when called: 1
 34895 ;; This function calls:
 34896 ;;		___wmul
 34897 ;; This function is called by:
 34898 ;;		_vfpfcnvrt
 34899 ;; This function uses a non-reentrant model
 34900 ;;
 34901                           
 34902                           	psect	text81
 34903   018A74                     __ptext81:
 34904                           	callstack 0
 34905   018A74                     _read_prec_or_width:
 34906                           	callstack 121
 34907                           
 34908                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 34909                           
 34910                           ;incstack = 0
 34911   018A74  0E00               	movlw	0
 34912   018A76  6E0F               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 34913   018A78  0E00               	movlw	0
 34914   018A7A  6E0E               	movwf	read_prec_or_width@n^(0+1280),c
 34915                           
 34916                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 34917   018A7C  C507  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 34918   018A80  C508  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 34919   018A84  C4DE F4F6          	movff	postinc2,tblptrl
 34920   018A88  C4DD F4F7          	movff	postdec2,tblptrh
 34921   018A8C                     	if	0	;tblptru may be non-zero
 34922   018A8C                     	endif
 34923   018A8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34924   018A8C  0E00               	movlw	low (__mediumconst shr (0+16))
 34925   018A8E  6EF8               	movwf	tblptru,c
 34926   018A90                     	endif
 34927   018A90  0008               	tblrd		*
 34928   018A92  50F5               	movf	tablat,w,c
 34929   018A94  0A2A               	xorlw	42
 34930   018A96  A4D8               	btfss	status,2,c
 34931   018A98  D033               	goto	l9015
 34932                           
 34933                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 34934   018A9A  C507  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 34935   018A9E  C508  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 34936   018AA2  2ADE               	incf	postinc2,f,c
 34937   018AA4  0E00               	movlw	0
 34938   018AA6  22DD               	addwfc	postdec2,f,c
 34939                           
 34940                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 34941   018AA8  C509  F4D9         	movff	read_prec_or_width@ap,fsr2l
 34942   018AAC  C50A  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 34943   018AB0  C4DF F50B          	movff	indf2,??_read_prec_or_width
 34944   018AB4  0E02               	movlw	2
 34945   018AB6  26DE               	addwf	postinc2,f,c
 34946   018AB8  C4DF F50C          	movff	indf2,??_read_prec_or_width+1
 34947   018ABC  0E00               	movlw	0
 34948   018ABE  22DD               	addwfc	postdec2,f,c
 34949   018AC0  C50B  F4D9         	movff	??_read_prec_or_width,fsr2l
 34950   018AC4  C50C  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 34951   018AC8  C4DE F50E          	movff	postinc2,read_prec_or_width@n
 34952   018ACC  C4DD F50F          	movff	postdec2,read_prec_or_width@n+1
 34953                           
 34954                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 34955   018AD0  D028               	goto	u10380
 34956   018AD2                     l9011:
 34957                           
 34958                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 34959   018AD2  C50E  F501         	movff	read_prec_or_width@n,___wmul@multiplier
 34960   018AD6  C50F  F502         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
 34961   018ADA  0E00               	movlw	0
 34962   018ADC  6E04               	movwf	(___wmul@multiplicand+1)^(0+1280),c
 34963   018ADE  0E0A               	movlw	10
 34964   018AE0  6E03               	movwf	___wmul@multiplicand^(0+1280),c
 34965   018AE2  EC66  F0CF         	call	___wmul	;wreg free
 34966   018AE6  500D               	movf	read_prec_or_width@c^(0+1280),w,c
 34967   018AE8  2401               	addwf	?___wmul^(0+1280),w,c
 34968   018AEA  6E0E               	movwf	read_prec_or_width@n^(0+1280),c
 34969   018AEC  0E00               	movlw	0
 34970   018AEE  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
 34971   018AF0  6E0F               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 34972                           
 34973                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 34974   018AF2  C507  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 34975   018AF6  C508  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 34976   018AFA  2ADE               	incf	postinc2,f,c
 34977   018AFC  0E00               	movlw	0
 34978   018AFE  22DD               	addwfc	postdec2,f,c
 34979   018B00                     l9015:
 34980                           
 34981                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 34982   018B00  C507  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 34983   018B04  C508  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 34984   018B08  C4DE F4F6          	movff	postinc2,tblptrl
 34985   018B0C  C4DD F4F7          	movff	postdec2,tblptrh
 34986   018B10                     	if	0	;tblptru may be non-zero
 34987   018B10                     	endif
 34988   018B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34989   018B10  0E00               	movlw	low (__mediumconst shr (0+16))
 34990   018B12  6EF8               	movwf	tblptru,c
 34991   018B14                     	endif
 34992   018B14  0008               	tblrd		*
 34993   018B16  50F5               	movf	tablat,w,c
 34994   018B18  0FD0               	addlw	208
 34995   018B1A  6E0D               	movwf	read_prec_or_width@c^(0+1280),c
 34996   018B1C  0E09               	movlw	9
 34997   018B1E  640D               	cpfsgt	read_prec_or_width@c^(0+1280),c
 34998   018B20  D7D8               	goto	l9011
 34999   018B22                     u10380:
 35000                           
 35001                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 35002                           
 35003                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1169:     }
 35004   018B22  C50E  F507         	movff	read_prec_or_width@n,?_read_prec_or_width
 35005   018B26  C50F  F508         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 35006   018B2A  0012               	return		;funcret
 35007   018B2C                     __end_of_read_prec_or_width:
 35008                           	callstack 0
 35009                           
 35010 ;; *************** function ___wmul *****************
 35011 ;; Defined at:
 35012 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 35013 ;; Parameters:    Size  Location     Type
 35014 ;;  multiplier      2    0[COMRAM] unsigned int 
 35015 ;;  multiplicand    2    2[COMRAM] unsigned int 
 35016 ;; Auto vars:     Size  Location     Type
 35017 ;;  product         2    4[COMRAM] unsigned int 
 35018 ;; Return value:  Size  Location     Type
 35019 ;;                  2    0[COMRAM] unsigned int 
 35020 ;; Registers used:
 35021 ;;		wreg, status,2, status,0, prodl, prodh
 35022 ;; Tracked objects:
 35023 ;;		On entry : 0/5
 35024 ;;		On exit  : 0/0
 35025 ;;		Unchanged: 0/0
 35026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35030 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35031 ;;Total ram usage:        6 bytes
 35032 ;; Hardware stack levels used: 1
 35033 ;; This function calls:
 35034 ;;		Nothing
 35035 ;; This function is called by:
 35036 ;;		_menu_select
 35037 ;;		_disk_io_handle
 35038 ;;		_read_prec_or_width
 35039 ;; This function uses a non-reentrant model
 35040 ;;
 35041                           
 35042                           	psect	text82
 35043   019ECC                     __ptext82:
 35044                           	callstack 0
 35045   019ECC                     ___wmul:
 35046                           	callstack 121
 35047                           
 35048                           ;incstack = 0
 35049   019ECC  5001               	movf	___wmul@multiplier^(0+1280),w,c
 35050   019ECE  0203               	mulwf	___wmul@multiplicand^(0+1280),c
 35051   019ED0  C4F3 F505          	movff	prodl,___wmul@product
 35052   019ED4  C4F4 F506          	movff	prodh,___wmul@product+1
 35053   019ED8  5001               	movf	___wmul@multiplier^(0+1280),w,c
 35054   019EDA  0204               	mulwf	(___wmul@multiplicand+1)^(0+1280),c
 35055   019EDC  50F3               	movf	243,w,c
 35056   019EDE  2606               	addwf	(___wmul@product+1)^(0+1280),f,c
 35057   019EE0  5002               	movf	(___wmul@multiplier+1)^(0+1280),w,c
 35058   019EE2  0203               	mulwf	___wmul@multiplicand^(0+1280),c
 35059   019EE4  50F3               	movf	243,w,c
 35060   019EE6  2606               	addwf	(___wmul@product+1)^(0+1280),f,c
 35061   019EE8  C505  F501         	movff	___wmul@product,?___wmul
 35062   019EEC  C506  F502         	movff	___wmul@product+1,?___wmul+1
 35063   019EF0  0012               	return		;funcret
 35064   019EF2                     __end_of___wmul:
 35065                           	callstack 0
 35066                           
 35067 ;; *************** function _efgtoa *****************
 35068 ;; Defined at:
 35069 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 35070 ;; Parameters:    Size  Location     Type
 35071 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
 35072 ;;		 -> sprintf@f(12), NULL(0), 
 35073 ;;  f               4   73[COMRAM] PTR struct _IO_FILE
 35074 ;;  c               1   77[COMRAM] unsigned char 
 35075 ;; Auto vars:     Size  Location     Type
 35076 ;;  u               4   40[BANK5 ] struct flui
 35077 ;;  g               4   34[BANK5 ] struct flui
 35078 ;;  l               4   27[BANK5 ] struct flui
 35079 ;;  h               4   23[BANK5 ] struct flui
 35080 ;;  ou              4   19[BANK5 ] struct flui
 35081 ;;  n               2   38[BANK5 ] int 
 35082 ;;  i               2   31[BANK5 ] int 
 35083 ;;  w               2   17[BANK5 ] int 
 35084 ;;  e               2   15[BANK5 ] int 
 35085 ;;  m               2   13[BANK5 ] int 
 35086 ;;  d               2   11[BANK5 ] int 
 35087 ;;  t               2    4[BANK5 ] int 
 35088 ;;  p               2    2[BANK5 ] int 
 35089 ;;  ne              2    0[BANK5 ] int 
 35090 ;;  sign            1   33[BANK5 ] unsigned char 
 35091 ;;  nmode           1   10[BANK5 ] unsigned char 
 35092 ;;  mode            1    9[BANK5 ] unsigned char 
 35093 ;;  pp              1    8[BANK5 ] unsigned char 
 35094 ;;  esign           1    0        unsigned char 
 35095 ;; Return value:  Size  Location     Type
 35096 ;;                  1    wreg      void 
 35097 ;; Registers used:
 35098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35099 ;; Tracked objects:
 35100 ;;		On entry : 0/5
 35101 ;;		On exit  : 0/0
 35102 ;;		Unchanged: 0/0
 35103 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35104 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35105 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35107 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35108 ;;Total ram usage:       53 bytes
 35109 ;; Hardware stack levels used: 1
 35110 ;; Hardware stack levels required when called: 4
 35111 ;; This function calls:
 35112 ;;		___fladd
 35113 ;;		___fldiv
 35114 ;;		___fleq
 35115 ;;		___flge
 35116 ;;		___flmul
 35117 ;;		___flneg
 35118 ;;		___flsub
 35119 ;;		___fltol
 35120 ;;		___fpclassifyf
 35121 ;;		_floorf
 35122 ;;		_labs
 35123 ;;		_memcpy
 35124 ;;		_pad
 35125 ;;		_strcpy
 35126 ;; This function is called by:
 35127 ;;		_vfpfcnvrt
 35128 ;; This function uses a non-reentrant model
 35129 ;;
 35130                           
 35131                           	psect	text83
 35132   010000                     __ptext83:
 35133                           	callstack 0
 35134   010000                     _efgtoa:
 35135                           	callstack 118
 35136                           
 35137                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 35138                           
 35139                           ;incstack = 0
 35140   010000  0E00               	movlw	0
 35141   010002  0105               	movlb	5	; () banked
 35142   010004  6F81               	movwf	efgtoa@sign& (0+255),b
 35143                           
 35144                           ; BSR set to: 5
 35145                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 35146   010006  C54A  F582         	movff	efgtoa@f,efgtoa@g
 35147   01000A  C54B  F583         	movff	efgtoa@f+1,efgtoa@g+1
 35148   01000E  C54C  F584         	movff	efgtoa@f+2,efgtoa@g+2
 35149   010012  C54D  F585         	movff	efgtoa@f+3,efgtoa@g+3
 35150                           
 35151                           ; BSR set to: 5
 35152                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 35153   010016  AF85               	btfss	(efgtoa@g+3)& (0+255),7,b
 35154   010018  D014               	goto	l8693
 35155                           
 35156                           ; BSR set to: 5
 35157                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 35158   01001A  0E01               	movlw	1
 35159   01001C  6F81               	movwf	efgtoa@sign& (0+255),b
 35160                           
 35161                           ; BSR set to: 5
 35162                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 35163   01001E  C582  F501         	movff	efgtoa@g,___flneg@f1
 35164   010022  C583  F502         	movff	efgtoa@g+1,___flneg@f1+1
 35165   010026  C584  F503         	movff	efgtoa@g+2,___flneg@f1+2
 35166   01002A  C585  F504         	movff	efgtoa@g+3,___flneg@f1+3
 35167   01002E  ECD4  F0CE         	call	___flneg	;wreg free
 35168   010032  C501  F582         	movff	?___flneg,efgtoa@g
 35169   010036  C502  F583         	movff	?___flneg+1,efgtoa@g+1
 35170   01003A  C503  F584         	movff	?___flneg+2,efgtoa@g+2
 35171   01003E  C504  F585         	movff	?___flneg+3,efgtoa@g+3
 35172   010042                     l8693:
 35173                           
 35174                           ; BSR set to: 5
 35175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 35176   010042  0E00               	movlw	0
 35177   010044  6F87               	movwf	(efgtoa@n+1)& (0+255),b
 35178   010046  0E00               	movlw	0
 35179   010048  6F86               	movwf	efgtoa@n& (0+255),b
 35180                           
 35181                           ; BSR set to: 5
 35182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 35183   01004A  C713  F571         	movff	_width,efgtoa@w
 35184   01004E  C714  F572         	movff	_width+1,efgtoa@w+1
 35185                           
 35186                           ; BSR set to: 5
 35187                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
 35188   010052  5181               	movf	efgtoa@sign& (0+255),w,b
 35189   010054  B4D8               	btfsc	status,2,c
 35190   010056  D00D               	goto	l8707
 35191                           
 35192                           ; BSR set to: 5
 35193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 35194   010058  5181               	movf	efgtoa@sign& (0+255),w,b
 35195   01005A  A4D8               	btfss	status,2,c
 35196   01005C  D004               	goto	l8703
 35197                           
 35198                           ; BSR set to: 5
 35199   01005E  0E00               	movlw	0
 35200   010060  6F67               	movwf	(_efgtoa$3420+1)& (0+255),b
 35201   010062  0E2B               	movlw	43
 35202   010064  D003               	goto	L24
 35203   010066                     l8703:
 35204                           
 35205                           ; BSR set to: 5
 35206   010066  0E00               	movlw	0
 35207   010068  6F67               	movwf	(_efgtoa$3420+1)& (0+255),b
 35208   01006A  0E2D               	movlw	45
 35209   01006C                     L24:
 35210   01006C  6F66               	movwf	_efgtoa$3420& (0+255),b
 35211                           
 35212                           ; BSR set to: 5
 35213   01006E  C566  F581         	movff	_efgtoa$3420,efgtoa@sign
 35214   010072                     l8707:
 35215                           
 35216                           ; BSR set to: 5
 35217                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 35218   010072  C582  F501         	movff	efgtoa@g,___fpclassifyf@x
 35219   010076  C583  F502         	movff	efgtoa@g+1,___fpclassifyf@x+1
 35220   01007A  C584  F503         	movff	efgtoa@g+2,___fpclassifyf@x+2
 35221   01007E  C585  F504         	movff	efgtoa@g+3,___fpclassifyf@x+3
 35222   010082  EC32  F0C2         	call	___fpclassifyf	;wreg free
 35223   010086  0401               	decf	?___fpclassifyf^(0+1280),w,c
 35224   010088  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 35225   01008A  A4D8               	btfss	status,2,c
 35226   01008C  D02D               	goto	l8725
 35227                           
 35228                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 35229   01008E  0105               	movlb	5	; () banked
 35230   010090  5181               	movf	efgtoa@sign& (0+255),w,b
 35231   010092  B4D8               	btfsc	status,2,c
 35232   010094  D009               	goto	l8717
 35233                           
 35234                           ; BSR set to: 5
 35235                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 35236   010096  C581  F72C         	movff	efgtoa@sign,_dbuf
 35237                           
 35238                           ; BSR set to: 5
 35239                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
 35240   01009A  0771               	decf	efgtoa@w& (0+255),f,b
 35241   01009C  A0D8               	btfss	status,0,c
 35242   01009E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 35243                           
 35244                           ; BSR set to: 5
 35245                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 35246   0100A0  0E00               	movlw	0
 35247   0100A2  6F87               	movwf	(efgtoa@n+1)& (0+255),b
 35248   0100A4  0E01               	movlw	1
 35249   0100A6  6F86               	movwf	efgtoa@n& (0+255),b
 35250   0100A8                     l8717:
 35251                           
 35252                           ; BSR set to: 5
 35253                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 35254   0100A8  0E2C               	movlw	low _dbuf
 35255   0100AA  2586               	addwf	efgtoa@n& (0+255),w,b
 35256   0100AC  6E01               	movwf	strcpy@dest^(0+1280),c
 35257   0100AE  0E07               	movlw	high _dbuf
 35258   0100B0  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 35259   0100B2  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 35260   0100B4  0EF7               	movlw	low STR_91
 35261   0100B6  6E03               	movwf	strcpy@src^(0+1280),c
 35262   0100B8  0EFF               	movlw	high STR_91
 35263   0100BA  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 35264   0100BC  EC89  F0CE         	call	_strcpy	;wreg free
 35265   0100C0                     l8719:
 35266                           
 35267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 35268   0100C0  0105               	movlb	5	; () banked
 35269   0100C2  0EFD               	movlw	253
 35270   0100C4  2771               	addwf	efgtoa@w& (0+255),f,b
 35271   0100C6  0EFF               	movlw	255
 35272   0100C8  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
 35273                           
 35274                           ; BSR set to: 5
 35275                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 35276   0100CA  C548  F512         	movff	efgtoa@fp,pad@fp
 35277   0100CE  C549  F513         	movff	efgtoa@fp+1,pad@fp+1
 35278   0100D2  0E2C               	movlw	low _dbuf
 35279   0100D4  6E14               	movwf	pad@buf^(0+1280),c
 35280   0100D6  0E07               	movlw	high _dbuf
 35281   0100D8  6E15               	movwf	(pad@buf+1)^(0+1280),c
 35282   0100DA  C571  F516         	movff	efgtoa@w,pad@p
 35283   0100DE  C572  F517         	movff	efgtoa@w+1,pad@p+1
 35284   0100E2  ECD4  F0C9         	call	_pad	;wreg free
 35285   0100E6  0012               	return	
 35286   0100E8                     l8725:
 35287                           
 35288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 35289   0100E8  C582  F501         	movff	efgtoa@g,___fpclassifyf@x
 35290   0100EC  C583  F502         	movff	efgtoa@g+1,___fpclassifyf@x+1
 35291   0100F0  C584  F503         	movff	efgtoa@g+2,___fpclassifyf@x+2
 35292   0100F4  C585  F504         	movff	efgtoa@g+3,___fpclassifyf@x+3
 35293   0100F8  EC32  F0C2         	call	___fpclassifyf	;wreg free
 35294   0100FC  5001               	movf	?___fpclassifyf^(0+1280),w,c
 35295   0100FE  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 35296   010100  A4D8               	btfss	status,2,c
 35297   010102  D01A               	goto	l8743
 35298                           
 35299                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 35300   010104  0105               	movlb	5	; () banked
 35301   010106  5181               	movf	efgtoa@sign& (0+255),w,b
 35302   010108  B4D8               	btfsc	status,2,c
 35303   01010A  D009               	goto	l8735
 35304                           
 35305                           ; BSR set to: 5
 35306                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 35307   01010C  C581  F72C         	movff	efgtoa@sign,_dbuf
 35308                           
 35309                           ; BSR set to: 5
 35310                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
 35311   010110  0771               	decf	efgtoa@w& (0+255),f,b
 35312   010112  A0D8               	btfss	status,0,c
 35313   010114  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 35314                           
 35315                           ; BSR set to: 5
 35316                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 35317   010116  0E00               	movlw	0
 35318   010118  6F87               	movwf	(efgtoa@n+1)& (0+255),b
 35319   01011A  0E01               	movlw	1
 35320   01011C  6F86               	movwf	efgtoa@n& (0+255),b
 35321   01011E                     l8735:
 35322                           
 35323                           ; BSR set to: 5
 35324                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 35325   01011E  0E2C               	movlw	low _dbuf
 35326   010120  2586               	addwf	efgtoa@n& (0+255),w,b
 35327   010122  6E01               	movwf	strcpy@dest^(0+1280),c
 35328   010124  0E07               	movlw	high _dbuf
 35329   010126  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 35330   010128  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 35331   01012A  0EFB               	movlw	low STR_94
 35332   01012C  6E03               	movwf	strcpy@src^(0+1280),c
 35333   01012E  0EFF               	movlw	high STR_94
 35334   010130  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 35335   010132  EC89  F0CE         	call	_strcpy	;wreg free
 35336   010136  D7C4               	goto	l8719
 35337   010138                     l8743:
 35338                           
 35339                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 35340   010138  0E00               	movlw	0
 35341   01013A  0105               	movlb	5	; () banked
 35342   01013C  6F88               	movwf	efgtoa@u& (0+255),b
 35343   01013E  0E00               	movlw	0
 35344   010140  6F89               	movwf	(efgtoa@u+1)& (0+255),b
 35345   010142  0E80               	movlw	128
 35346   010144  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
 35347   010146  0E3F               	movlw	63
 35348   010148  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
 35349                           
 35350                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 35351   01014A  0E00               	movlw	0
 35352   01014C  6F70               	movwf	(efgtoa@e+1)& (0+255),b
 35353   01014E  0E00               	movlw	0
 35354   010150  6F6F               	movwf	efgtoa@e& (0+255),b
 35355                           
 35356                           ; BSR set to: 5
 35357                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 35358   010152  C582  F501         	movff	efgtoa@g,___fleq@ff1
 35359   010156  C583  F502         	movff	efgtoa@g+1,___fleq@ff1+1
 35360   01015A  C584  F503         	movff	efgtoa@g+2,___fleq@ff1+2
 35361   01015E  C585  F504         	movff	efgtoa@g+3,___fleq@ff1+3
 35362   010162  0E00               	movlw	0
 35363   010164  6E05               	movwf	___fleq@ff2^(0+1280),c
 35364   010166  0E00               	movlw	0
 35365   010168  6E06               	movwf	(___fleq@ff2+1)^(0+1280),c
 35366   01016A  0E00               	movlw	0
 35367   01016C  6E07               	movwf	(___fleq@ff2+2)^(0+1280),c
 35368   01016E  0E00               	movlw	0
 35369   010170  6E08               	movwf	(___fleq@ff2+3)^(0+1280),c
 35370   010172  ECCC  F0C8         	call	___fleq	;wreg free
 35371   010176  A0D8               	btfss	status,0,c
 35372   010178  D00C               	goto	l8751
 35373   01017A  D0BE               	goto	u9930
 35374   01017C                     l2498:
 35375                           
 35376                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 35377   01017C  C573  F588         	movff	efgtoa@ou,efgtoa@u
 35378   010180  C574  F589         	movff	efgtoa@ou+1,efgtoa@u+1
 35379   010184  C575  F58A         	movff	efgtoa@ou+2,efgtoa@u+2
 35380   010188  C576  F58B         	movff	efgtoa@ou+3,efgtoa@u+3
 35381                           
 35382                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
 35383   01018C  0105               	movlb	5	; () banked
 35384   01018E  4B6F               	infsnz	efgtoa@e& (0+255),f,b
 35385   010190  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
 35386   010192                     l8751:
 35387                           
 35388                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 35389   010192  C588  F501         	movff	efgtoa@u,___flmul@b
 35390   010196  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
 35391   01019A  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
 35392   01019E  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
 35393   0101A2  0E00               	movlw	0
 35394   0101A4  6E05               	movwf	___flmul@a^(0+1280),c
 35395   0101A6  0E00               	movlw	0
 35396   0101A8  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 35397   0101AA  0E20               	movlw	32
 35398   0101AC  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 35399   0101AE  0E41               	movlw	65
 35400   0101B0  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 35401   0101B2  EC17  F0A2         	call	___flmul	;wreg free
 35402   0101B6  C501  F573         	movff	?___flmul,efgtoa@ou
 35403   0101BA  C502  F574         	movff	?___flmul+1,efgtoa@ou+1
 35404   0101BE  C503  F575         	movff	?___flmul+2,efgtoa@ou+2
 35405   0101C2  C504  F576         	movff	?___flmul+3,efgtoa@ou+3
 35406   0101C6  0105               	movlb	5	; () banked
 35407   0101C8  5173               	movf	efgtoa@ou& (0+255),w,b
 35408   0101CA  5D82               	subwf	efgtoa@g& (0+255),w,b
 35409   0101CC  6E01               	movwf	labs@a^(0+1280),c
 35410   0101CE  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
 35411   0101D0  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
 35412   0101D2  6E02               	movwf	(labs@a+1)^(0+1280),c
 35413   0101D4  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
 35414   0101D6  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
 35415   0101D8  6E03               	movwf	(labs@a+2)^(0+1280),c
 35416   0101DA  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
 35417   0101DC  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
 35418   0101DE  6E04               	movwf	(labs@a+3)^(0+1280),c
 35419   0101E0  ECFE  F0CC         	call	_labs	;wreg free
 35420   0101E4  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
 35421   0101E6  D7CA               	goto	l2498
 35422   0101E8  5004               	movf	(?_labs+3)^(0+1280),w,c
 35423   0101EA  1003               	iorwf	(?_labs+2)^(0+1280),w,c
 35424   0101EC  1002               	iorwf	(?_labs+1)^(0+1280),w,c
 35425   0101EE  E104               	bnz	u9890
 35426   0101F0  0E02               	movlw	2
 35427   0101F2  5C01               	subwf	?_labs^(0+1280),w,c
 35428   0101F4  A0D8               	btfss	status,0,c
 35429   0101F6  D7C2               	goto	l2498
 35430   0101F8                     u9890:
 35431                           
 35432                           ; BSR set to: 5
 35433   0101F8  C573  F51A         	movff	efgtoa@ou,___flge@ff1
 35434   0101FC  C574  F51B         	movff	efgtoa@ou+1,___flge@ff1+1
 35435   010200  C575  F51C         	movff	efgtoa@ou+2,___flge@ff1+2
 35436   010204  C576  F51D         	movff	efgtoa@ou+3,___flge@ff1+3
 35437   010208  C582  F51E         	movff	efgtoa@g,___flge@ff2
 35438   01020C  C583  F51F         	movff	efgtoa@g+1,___flge@ff2+1
 35439   010210  C584  F520         	movff	efgtoa@g+2,___flge@ff2+2
 35440   010214  C585  F521         	movff	efgtoa@g+3,___flge@ff2+3
 35441   010218  EC63  F0C1         	call	___flge	;wreg free
 35442   01021C  A0D8               	btfss	status,0,c
 35443   01021E  D7AE               	goto	l2498
 35444                           
 35445                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 35446   010220  0105               	movlb	5	; () banked
 35447   010222  5188               	movf	efgtoa@u& (0+255),w,b
 35448   010224  5D82               	subwf	efgtoa@g& (0+255),w,b
 35449   010226  6E01               	movwf	labs@a^(0+1280),c
 35450   010228  5189               	movf	(efgtoa@u+1)& (0+255),w,b
 35451   01022A  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
 35452   01022C  6E02               	movwf	(labs@a+1)^(0+1280),c
 35453   01022E  518A               	movf	(efgtoa@u+2)& (0+255),w,b
 35454   010230  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
 35455   010232  6E03               	movwf	(labs@a+2)^(0+1280),c
 35456   010234  518B               	movf	(efgtoa@u+3)& (0+255),w,b
 35457   010236  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
 35458   010238  6E04               	movwf	(labs@a+3)^(0+1280),c
 35459   01023A  ECFE  F0CC         	call	_labs	;wreg free
 35460   01023E  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
 35461   010240  D008               	goto	u9910
 35462   010242  5004               	movf	(?_labs+3)^(0+1280),w,c
 35463   010244  1003               	iorwf	(?_labs+2)^(0+1280),w,c
 35464   010246  1002               	iorwf	(?_labs+1)^(0+1280),w,c
 35465   010248  E143               	bnz	l8769
 35466   01024A  0E02               	movlw	2
 35467   01024C  5C01               	subwf	?_labs^(0+1280),w,c
 35468   01024E  B0D8               	btfsc	status,0,c
 35469   010250  D03F               	goto	l8769
 35470   010252                     u9910:
 35471                           
 35472                           ; BSR set to: 5
 35473                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
 35474   010252  C588  F582         	movff	efgtoa@u,efgtoa@g
 35475   010256  C589  F583         	movff	efgtoa@u+1,efgtoa@g+1
 35476   01025A  C58A  F584         	movff	efgtoa@u+2,efgtoa@g+2
 35477   01025E  C58B  F585         	movff	efgtoa@u+3,efgtoa@g+3
 35478                           
 35479                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
 35480   010262  D04A               	goto	u9930
 35481   010264                     l8761:
 35482                           
 35483                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 35484   010264  C588  F51B         	movff	efgtoa@u,___fldiv@b
 35485   010268  C589  F51C         	movff	efgtoa@u+1,___fldiv@b+1
 35486   01026C  C58A  F51D         	movff	efgtoa@u+2,___fldiv@b+2
 35487   010270  C58B  F51E         	movff	efgtoa@u+3,___fldiv@b+3
 35488   010274  0E00               	movlw	0
 35489   010276  6E1F               	movwf	___fldiv@a^(0+1280),c
 35490   010278  0E00               	movlw	0
 35491   01027A  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 35492   01027C  0E20               	movlw	32
 35493   01027E  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 35494   010280  0E41               	movlw	65
 35495   010282  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 35496   010284  EC63  F0A9         	call	___fldiv	;wreg free
 35497   010288  C51B  F588         	movff	?___fldiv,efgtoa@u
 35498   01028C  C51C  F589         	movff	?___fldiv+1,efgtoa@u+1
 35499   010290  C51D  F58A         	movff	?___fldiv+2,efgtoa@u+2
 35500   010294  C51E  F58B         	movff	?___fldiv+3,efgtoa@u+3
 35501                           
 35502                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
 35503   010298  0105               	movlb	5	; () banked
 35504   01029A  076F               	decf	efgtoa@e& (0+255),f,b
 35505   01029C  A0D8               	btfss	status,0,c
 35506   01029E  0770               	decf	(efgtoa@e+1)& (0+255),f,b
 35507                           
 35508                           ; BSR set to: 5
 35509                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 35510   0102A0  5188               	movf	efgtoa@u& (0+255),w,b
 35511   0102A2  5D82               	subwf	efgtoa@g& (0+255),w,b
 35512   0102A4  6E01               	movwf	labs@a^(0+1280),c
 35513   0102A6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
 35514   0102A8  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
 35515   0102AA  6E02               	movwf	(labs@a+1)^(0+1280),c
 35516   0102AC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
 35517   0102AE  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
 35518   0102B0  6E03               	movwf	(labs@a+2)^(0+1280),c
 35519   0102B2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
 35520   0102B4  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
 35521   0102B6  6E04               	movwf	(labs@a+3)^(0+1280),c
 35522   0102B8  ECFE  F0CC         	call	_labs	;wreg free
 35523   0102BC  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
 35524   0102BE  D7C9               	goto	u9910
 35525   0102C0  5004               	movf	(?_labs+3)^(0+1280),w,c
 35526   0102C2  1003               	iorwf	(?_labs+2)^(0+1280),w,c
 35527   0102C4  1002               	iorwf	(?_labs+1)^(0+1280),w,c
 35528   0102C6  E104               	bnz	l8769
 35529   0102C8  0E02               	movlw	2
 35530   0102CA  5C01               	subwf	?_labs^(0+1280),w,c
 35531   0102CC  A0D8               	btfss	status,0,c
 35532   0102CE  D7C1               	goto	u9910
 35533   0102D0                     l8769:
 35534                           
 35535                           ; BSR set to: 5
 35536                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 35537   0102D0  C582  F51A         	movff	efgtoa@g,___flge@ff1
 35538   0102D4  C583  F51B         	movff	efgtoa@g+1,___flge@ff1+1
 35539   0102D8  C584  F51C         	movff	efgtoa@g+2,___flge@ff1+2
 35540   0102DC  C585  F51D         	movff	efgtoa@g+3,___flge@ff1+3
 35541   0102E0  C588  F51E         	movff	efgtoa@u,___flge@ff2
 35542   0102E4  C589  F51F         	movff	efgtoa@u+1,___flge@ff2+1
 35543   0102E8  C58A  F520         	movff	efgtoa@u+2,___flge@ff2+2
 35544   0102EC  C58B  F521         	movff	efgtoa@u+3,___flge@ff2+3
 35545   0102F0  EC63  F0C1         	call	___flge	;wreg free
 35546   0102F4  A0D8               	btfss	status,0,c
 35547   0102F6  D7B6               	goto	l8761
 35548   0102F8                     u9930:
 35549                           
 35550                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 35551                           
 35552                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 677:     }
 35553   0102F8  C54E  F569         	movff	efgtoa@c,efgtoa@mode
 35554                           
 35555                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 35556   0102FC  C569  F56A         	movff	efgtoa@mode,efgtoa@nmode
 35557                           
 35558                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 35559   010300  0107               	movlb	7	; () banked
 35560   010302  BF16               	btfsc	(_prec+1)& (0+255),7,b
 35561   010304  D005               	goto	l8775
 35562                           
 35563                           ; BSR set to: 7
 35564   010306  C715  F562         	movff	_prec,efgtoa@p
 35565   01030A  C716  F563         	movff	_prec+1,efgtoa@p+1
 35566   01030E  D005               	goto	l8777
 35567   010310                     l8775:
 35568                           
 35569                           ; BSR set to: 7
 35570   010310  0E00               	movlw	0
 35571   010312  0105               	movlb	5	; () banked
 35572   010314  6F63               	movwf	(efgtoa@p+1)& (0+255),b
 35573   010316  0E06               	movlw	6
 35574   010318  6F62               	movwf	efgtoa@p& (0+255),b
 35575   01031A                     l8777:
 35576                           
 35577                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
 35578   01031A  C562  F56D         	movff	efgtoa@p,efgtoa@m
 35579   01031E  C563  F56E         	movff	efgtoa@p+1,efgtoa@m+1
 35580                           
 35581                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
 35582   010322  0105               	movlb	5	; () banked
 35583   010324  4B6D               	infsnz	efgtoa@m& (0+255),f,b
 35584   010326  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
 35585                           
 35586                           ; BSR set to: 5
 35587                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 35588   010328  0E66               	movlw	102
 35589   01032A  196A               	xorwf	efgtoa@nmode& (0+255),w,b
 35590   01032C  A4D8               	btfss	status,2,c
 35591   01032E  D016               	goto	l8791
 35592                           
 35593                           ; BSR set to: 5
 35594                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 35595   010330  AF70               	btfss	(efgtoa@e+1)& (0+255),7,b
 35596   010332  D00C               	goto	l8787
 35597                           
 35598                           ; BSR set to: 5
 35599                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 35600   010334  0E00               	movlw	0
 35601   010336  6F88               	movwf	efgtoa@u& (0+255),b
 35602   010338  0E00               	movlw	0
 35603   01033A  6F89               	movwf	(efgtoa@u+1)& (0+255),b
 35604   01033C  0E80               	movlw	128
 35605   01033E  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
 35606   010340  0E3F               	movlw	63
 35607   010342  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
 35608                           
 35609                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 35610   010344  0E00               	movlw	0
 35611   010346  6F70               	movwf	(efgtoa@e+1)& (0+255),b
 35612   010348  0E00               	movlw	0
 35613   01034A  6F6F               	movwf	efgtoa@e& (0+255),b
 35614   01034C                     l8787:
 35615                           
 35616                           ; BSR set to: 5
 35617                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 35618   01034C  0E67               	movlw	103
 35619   01034E  1969               	xorwf	efgtoa@mode& (0+255),w,b
 35620   010350  B4D8               	btfsc	status,2,c
 35621   010352  D004               	goto	l8791
 35622                           
 35623                           ; BSR set to: 5
 35624                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 35625   010354  516F               	movf	efgtoa@e& (0+255),w,b
 35626   010356  276D               	addwf	efgtoa@m& (0+255),f,b
 35627   010358  5170               	movf	(efgtoa@e+1)& (0+255),w,b
 35628   01035A  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
 35629   01035C                     l8791:
 35630                           
 35631                           ; BSR set to: 5
 35632                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 35633   01035C  0E00               	movlw	0
 35634   01035E  6F80               	movwf	(efgtoa@i+1)& (0+255),b
 35635   010360  0E00               	movlw	0
 35636   010362  6F7F               	movwf	efgtoa@i& (0+255),b
 35637                           
 35638                           ; BSR set to: 5
 35639                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 35640   010364  C582  F577         	movff	efgtoa@g,efgtoa@h
 35641   010368  C583  F578         	movff	efgtoa@g+1,efgtoa@h+1
 35642   01036C  C584  F579         	movff	efgtoa@g+2,efgtoa@h+2
 35643   010370  C585  F57A         	movff	efgtoa@g+3,efgtoa@h+3
 35644                           
 35645                           ; BSR set to: 5
 35646                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 35647   010374  C588  F573         	movff	efgtoa@u,efgtoa@ou
 35648   010378  C589  F574         	movff	efgtoa@u+1,efgtoa@ou+1
 35649   01037C  C58A  F575         	movff	efgtoa@u+2,efgtoa@ou+2
 35650   010380  C58B  F576         	movff	efgtoa@u+3,efgtoa@ou+3
 35651                           
 35652                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 35653   010384  D07B               	goto	l8805
 35654   010386                     l8797:
 35655                           
 35656                           ; BSR set to: 5
 35657                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 35658   010386  C577  F51B         	movff	efgtoa@h,___fldiv@b
 35659   01038A  C578  F51C         	movff	efgtoa@h+1,___fldiv@b+1
 35660   01038E  C579  F51D         	movff	efgtoa@h+2,___fldiv@b+2
 35661   010392  C57A  F51E         	movff	efgtoa@h+3,___fldiv@b+3
 35662   010396  C588  F51F         	movff	efgtoa@u,___fldiv@a
 35663   01039A  C589  F520         	movff	efgtoa@u+1,___fldiv@a+1
 35664   01039E  C58A  F521         	movff	efgtoa@u+2,___fldiv@a+2
 35665   0103A2  C58B  F522         	movff	efgtoa@u+3,___fldiv@a+3
 35666   0103A6  EC63  F0A9         	call	___fldiv	;wreg free
 35667   0103AA  C51B  F534         	movff	?___fldiv,floorf@x
 35668   0103AE  C51C  F535         	movff	?___fldiv+1,floorf@x+1
 35669   0103B2  C51D  F536         	movff	?___fldiv+2,floorf@x+2
 35670   0103B6  C51E  F537         	movff	?___fldiv+3,floorf@x+3
 35671   0103BA  ECBD  F0B4         	call	_floorf	;wreg free
 35672   0103BE  C534  F57B         	movff	?_floorf,efgtoa@l
 35673   0103C2  C535  F57C         	movff	?_floorf+1,efgtoa@l+1
 35674   0103C6  C536  F57D         	movff	?_floorf+2,efgtoa@l+2
 35675   0103CA  C537  F57E         	movff	?_floorf+3,efgtoa@l+3
 35676                           
 35677                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 35678   0103CE  C57B  F501         	movff	efgtoa@l,___fltol@f1
 35679   0103D2  C57C  F502         	movff	efgtoa@l+1,___fltol@f1+1
 35680   0103D6  C57D  F503         	movff	efgtoa@l+2,___fltol@f1+2
 35681   0103DA  C57E  F504         	movff	efgtoa@l+3,___fltol@f1+3
 35682   0103DE  EC81  F0C4         	call	___fltol	;wreg free
 35683   0103E2  C501  F56B         	movff	?___fltol,efgtoa@d
 35684   0103E6  C502  F56C         	movff	?___fltol+1,efgtoa@d+1
 35685                           
 35686                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 35687   0103EA  C577  F51A         	movff	efgtoa@h,___flsub@b
 35688   0103EE  C578  F51B         	movff	efgtoa@h+1,___flsub@b+1
 35689   0103F2  C579  F51C         	movff	efgtoa@h+2,___flsub@b+2
 35690   0103F6  C57A  F51D         	movff	efgtoa@h+3,___flsub@b+3
 35691   0103FA  C57B  F505         	movff	efgtoa@l,___flmul@a
 35692   0103FE  C57C  F506         	movff	efgtoa@l+1,___flmul@a+1
 35693   010402  C57D  F507         	movff	efgtoa@l+2,___flmul@a+2
 35694   010406  C57E  F508         	movff	efgtoa@l+3,___flmul@a+3
 35695   01040A  C588  F501         	movff	efgtoa@u,___flmul@b
 35696   01040E  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
 35697   010412  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
 35698   010416  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
 35699   01041A  EC17  F0A2         	call	___flmul	;wreg free
 35700   01041E  C501  F51E         	movff	?___flmul,___flsub@a
 35701   010422  C502  F51F         	movff	?___flmul+1,___flsub@a+1
 35702   010426  C503  F520         	movff	?___flmul+2,___flsub@a+2
 35703   01042A  C504  F521         	movff	?___flmul+3,___flsub@a+3
 35704   01042E  EC6C  F0CD         	call	___flsub	;wreg free
 35705   010432  C51A  F577         	movff	?___flsub,efgtoa@h
 35706   010436  C51B  F578         	movff	?___flsub+1,efgtoa@h+1
 35707   01043A  C51C  F579         	movff	?___flsub+2,efgtoa@h+2
 35708   01043E  C51D  F57A         	movff	?___flsub+3,efgtoa@h+3
 35709                           
 35710                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 35711   010442  C588  F51B         	movff	efgtoa@u,___fldiv@b
 35712   010446  C589  F51C         	movff	efgtoa@u+1,___fldiv@b+1
 35713   01044A  C58A  F51D         	movff	efgtoa@u+2,___fldiv@b+2
 35714   01044E  C58B  F51E         	movff	efgtoa@u+3,___fldiv@b+3
 35715   010452  0E00               	movlw	0
 35716   010454  6E1F               	movwf	___fldiv@a^(0+1280),c
 35717   010456  0E00               	movlw	0
 35718   010458  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 35719   01045A  0E20               	movlw	32
 35720   01045C  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 35721   01045E  0E41               	movlw	65
 35722   010460  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 35723   010462  EC63  F0A9         	call	___fldiv	;wreg free
 35724   010466  C51B  F588         	movff	?___fldiv,efgtoa@u
 35725   01046A  C51C  F589         	movff	?___fldiv+1,efgtoa@u+1
 35726   01046E  C51D  F58A         	movff	?___fldiv+2,efgtoa@u+2
 35727   010472  C51E  F58B         	movff	?___fldiv+3,efgtoa@u+3
 35728                           
 35729                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
 35730   010476  0105               	movlb	5	; () banked
 35731   010478  4B7F               	infsnz	efgtoa@i& (0+255),f,b
 35732   01047A  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
 35733   01047C                     l8805:
 35734                           
 35735                           ; BSR set to: 5
 35736                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 35737   01047C  516D               	movf	efgtoa@m& (0+255),w,b
 35738   01047E  5D7F               	subwf	efgtoa@i& (0+255),w,b
 35739   010480  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 35740   010482  0A80               	xorlw	128
 35741   010484  6E4F               	movwf	??_efgtoa^(0+1280),c
 35742   010486  516E               	movf	(efgtoa@m+1)& (0+255),w,b
 35743   010488  0A80               	xorlw	128
 35744   01048A  584F               	subwfb	??_efgtoa^(0+1280),w,c
 35745   01048C  A0D8               	btfss	status,0,c
 35746   01048E  D77B               	goto	l8797
 35747                           
 35748                           ; BSR set to: 5
 35749                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 35750   010490  C588  F501         	movff	efgtoa@u,___flmul@b
 35751   010494  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
 35752   010498  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
 35753   01049C  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
 35754   0104A0  0E00               	movlw	0
 35755   0104A2  6E05               	movwf	___flmul@a^(0+1280),c
 35756   0104A4  0E00               	movlw	0
 35757   0104A6  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 35758   0104A8  0EA0               	movlw	160
 35759   0104AA  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 35760   0104AC  0E40               	movlw	64
 35761   0104AE  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 35762   0104B0  EC17  F0A2         	call	___flmul	;wreg free
 35763   0104B4  C501  F57B         	movff	?___flmul,efgtoa@l
 35764   0104B8  C502  F57C         	movff	?___flmul+1,efgtoa@l+1
 35765   0104BC  C503  F57D         	movff	?___flmul+2,efgtoa@l+2
 35766   0104C0  C504  F57E         	movff	?___flmul+3,efgtoa@l+3
 35767                           
 35768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 35769   0104C4  C577  F51A         	movff	efgtoa@h,___flge@ff1
 35770   0104C8  C578  F51B         	movff	efgtoa@h+1,___flge@ff1+1
 35771   0104CC  C579  F51C         	movff	efgtoa@h+2,___flge@ff1+2
 35772   0104D0  C57A  F51D         	movff	efgtoa@h+3,___flge@ff1+3
 35773   0104D4  C57B  F51E         	movff	efgtoa@l,___flge@ff2
 35774   0104D8  C57C  F51F         	movff	efgtoa@l+1,___flge@ff2+1
 35775   0104DC  C57D  F520         	movff	efgtoa@l+2,___flge@ff2+2
 35776   0104E0  C57E  F521         	movff	efgtoa@l+3,___flge@ff2+3
 35777   0104E4  EC63  F0C1         	call	___flge	;wreg free
 35778   0104E8  B0D8               	btfsc	status,0,c
 35779   0104EA  D003               	goto	l8813
 35780                           
 35781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 35782   0104EC  0E00               	movlw	0
 35783   0104EE  0105               	movlb	5	; () banked
 35784   0104F0  D018               	goto	L25
 35785   0104F2                     l8813:
 35786                           
 35787                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 35788   0104F2  C577  F501         	movff	efgtoa@h,___fleq@ff1
 35789   0104F6  C578  F502         	movff	efgtoa@h+1,___fleq@ff1+1
 35790   0104FA  C579  F503         	movff	efgtoa@h+2,___fleq@ff1+2
 35791   0104FE  C57A  F504         	movff	efgtoa@h+3,___fleq@ff1+3
 35792   010502  C57B  F505         	movff	efgtoa@l,___fleq@ff2
 35793   010506  C57C  F506         	movff	efgtoa@l+1,___fleq@ff2+1
 35794   01050A  C57D  F507         	movff	efgtoa@l+2,___fleq@ff2+2
 35795   01050E  C57E  F508         	movff	efgtoa@l+3,___fleq@ff2+3
 35796   010512  ECCC  F0C8         	call	___fleq	;wreg free
 35797   010516  A0D8               	btfss	status,0,c
 35798   010518  D00B               	goto	l8819
 35799   01051A  0105               	movlb	5	; () banked
 35800   01051C  B16B               	btfsc	efgtoa@d& (0+255),0,b
 35801   01051E  D008               	goto	l8819
 35802                           
 35803                           ; BSR set to: 5
 35804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 35805   010520  0E00               	movlw	0
 35806   010522                     L25:
 35807   010522  6F7B               	movwf	efgtoa@l& (0+255),b
 35808   010524  0E00               	movlw	0
 35809   010526  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
 35810   010528  0E00               	movlw	0
 35811   01052A  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
 35812   01052C  0E00               	movlw	0
 35813   01052E  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
 35814   010530                     l8819:
 35815                           
 35816                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 35817   010530  C582  F501         	movff	efgtoa@g,___fladd@b
 35818   010534  C583  F502         	movff	efgtoa@g+1,___fladd@b+1
 35819   010538  C584  F503         	movff	efgtoa@g+2,___fladd@b+2
 35820   01053C  C585  F504         	movff	efgtoa@g+3,___fladd@b+3
 35821   010540  C57B  F505         	movff	efgtoa@l,___fladd@a
 35822   010544  C57C  F506         	movff	efgtoa@l+1,___fladd@a+1
 35823   010548  C57D  F507         	movff	efgtoa@l+2,___fladd@a+2
 35824   01054C  C57E  F508         	movff	efgtoa@l+3,___fladd@a+3
 35825   010550  ECAD  F0A3         	call	___fladd	;wreg free
 35826   010554  C501  F577         	movff	?___fladd,efgtoa@h
 35827   010558  C502  F578         	movff	?___fladd+1,efgtoa@h+1
 35828   01055C  C503  F579         	movff	?___fladd+2,efgtoa@h+2
 35829   010560  C504  F57A         	movff	?___fladd+3,efgtoa@h+3
 35830                           
 35831                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 35832   010564  C577  F51A         	movff	efgtoa@h,___flge@ff1
 35833   010568  C578  F51B         	movff	efgtoa@h+1,___flge@ff1+1
 35834   01056C  C579  F51C         	movff	efgtoa@h+2,___flge@ff1+2
 35835   010570  C57A  F51D         	movff	efgtoa@h+3,___flge@ff1+3
 35836   010574  0E00               	movlw	0
 35837   010576  6E05               	movwf	___flmul@a^(0+1280),c
 35838   010578  0E00               	movlw	0
 35839   01057A  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 35840   01057C  0E20               	movlw	32
 35841   01057E  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 35842   010580  0E41               	movlw	65
 35843   010582  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 35844   010584  C573  F501         	movff	efgtoa@ou,___flmul@b
 35845   010588  C574  F502         	movff	efgtoa@ou+1,___flmul@b+1
 35846   01058C  C575  F503         	movff	efgtoa@ou+2,___flmul@b+2
 35847   010590  C576  F504         	movff	efgtoa@ou+3,___flmul@b+3
 35848   010594  EC17  F0A2         	call	___flmul	;wreg free
 35849   010598  C501  F51E         	movff	?___flmul,___flge@ff2
 35850   01059C  C502  F51F         	movff	?___flmul+1,___flge@ff2+1
 35851   0105A0  C503  F520         	movff	?___flmul+2,___flge@ff2+2
 35852   0105A4  C504  F521         	movff	?___flmul+3,___flge@ff2+3
 35853   0105A8  EC63  F0C1         	call	___flge	;wreg free
 35854   0105AC  A0D8               	btfss	status,0,c
 35855   0105AE  D024               	goto	l8831
 35856                           
 35857                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
 35858   0105B0  0105               	movlb	5	; () banked
 35859   0105B2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
 35860   0105B4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
 35861                           
 35862                           ; BSR set to: 5
 35863                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 35864   0105B6  C573  F501         	movff	efgtoa@ou,___flmul@b
 35865   0105BA  C574  F502         	movff	efgtoa@ou+1,___flmul@b+1
 35866   0105BE  C575  F503         	movff	efgtoa@ou+2,___flmul@b+2
 35867   0105C2  C576  F504         	movff	efgtoa@ou+3,___flmul@b+3
 35868   0105C6  0E00               	movlw	0
 35869   0105C8  6E05               	movwf	___flmul@a^(0+1280),c
 35870   0105CA  0E00               	movlw	0
 35871   0105CC  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 35872   0105CE  0E20               	movlw	32
 35873   0105D0  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 35874   0105D2  0E41               	movlw	65
 35875   0105D4  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 35876   0105D6  EC17  F0A2         	call	___flmul	;wreg free
 35877   0105DA  C501  F573         	movff	?___flmul,efgtoa@ou
 35878   0105DE  C502  F574         	movff	?___flmul+1,efgtoa@ou+1
 35879   0105E2  C503  F575         	movff	?___flmul+2,efgtoa@ou+2
 35880   0105E6  C504  F576         	movff	?___flmul+3,efgtoa@ou+3
 35881                           
 35882                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 35883   0105EA  0E66               	movlw	102
 35884   0105EC  0105               	movlb	5	; () banked
 35885   0105EE  196A               	xorwf	efgtoa@nmode& (0+255),w,b
 35886   0105F0  A4D8               	btfss	status,2,c
 35887   0105F2  D002               	goto	l8831
 35888                           
 35889                           ; BSR set to: 5
 35890                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
 35891   0105F4  4B6D               	infsnz	efgtoa@m& (0+255),f,b
 35892   0105F6  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
 35893   0105F8                     l8831:
 35894                           
 35895                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 35896   0105F8  C573  F588         	movff	efgtoa@ou,efgtoa@u
 35897   0105FC  C574  F589         	movff	efgtoa@ou+1,efgtoa@u+1
 35898   010600  C575  F58A         	movff	efgtoa@ou+2,efgtoa@u+2
 35899   010604  C576  F58B         	movff	efgtoa@ou+3,efgtoa@u+3
 35900                           
 35901                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 35902   010608  C56F  F560         	movff	efgtoa@e,efgtoa@ne
 35903   01060C  C570  F561         	movff	efgtoa@e+1,efgtoa@ne+1
 35904                           
 35905                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 35906   010610  0E00               	movlw	0
 35907   010612  0105               	movlb	5	; () banked
 35908   010614  6F68               	movwf	efgtoa@pp& (0+255),b
 35909                           
 35910                           ; BSR set to: 5
 35911                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 35912   010616  0E00               	movlw	0
 35913   010618  6F65               	movwf	(efgtoa@t+1)& (0+255),b
 35914   01061A  0E00               	movlw	0
 35915   01061C  6F64               	movwf	efgtoa@t& (0+255),b
 35916                           
 35917                           ; BSR set to: 5
 35918                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 35919   01061E  0E00               	movlw	0
 35920   010620  6F80               	movwf	(efgtoa@i+1)& (0+255),b
 35921   010622  0E00               	movlw	0
 35922   010624  6F7F               	movwf	efgtoa@i& (0+255),b
 35923                           
 35924                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 35925   010626  D0CD               	goto	l8881
 35926   010628                     l8841:
 35927                           
 35928                           ; BSR set to: 5
 35929                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 35930   010628  C577  F51B         	movff	efgtoa@h,___fldiv@b
 35931   01062C  C578  F51C         	movff	efgtoa@h+1,___fldiv@b+1
 35932   010630  C579  F51D         	movff	efgtoa@h+2,___fldiv@b+2
 35933   010634  C57A  F51E         	movff	efgtoa@h+3,___fldiv@b+3
 35934   010638  C588  F51F         	movff	efgtoa@u,___fldiv@a
 35935   01063C  C589  F520         	movff	efgtoa@u+1,___fldiv@a+1
 35936   010640  C58A  F521         	movff	efgtoa@u+2,___fldiv@a+2
 35937   010644  C58B  F522         	movff	efgtoa@u+3,___fldiv@a+3
 35938   010648  EC63  F0A9         	call	___fldiv	;wreg free
 35939   01064C  C51B  F534         	movff	?___fldiv,floorf@x
 35940   010650  C51C  F535         	movff	?___fldiv+1,floorf@x+1
 35941   010654  C51D  F536         	movff	?___fldiv+2,floorf@x+2
 35942   010658  C51E  F537         	movff	?___fldiv+3,floorf@x+3
 35943   01065C  ECBD  F0B4         	call	_floorf	;wreg free
 35944   010660  C534  F57B         	movff	?_floorf,efgtoa@l
 35945   010664  C535  F57C         	movff	?_floorf+1,efgtoa@l+1
 35946   010668  C536  F57D         	movff	?_floorf+2,efgtoa@l+2
 35947   01066C  C537  F57E         	movff	?_floorf+3,efgtoa@l+3
 35948                           
 35949                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 35950   010670  C57B  F501         	movff	efgtoa@l,___fltol@f1
 35951   010674  C57C  F502         	movff	efgtoa@l+1,___fltol@f1+1
 35952   010678  C57D  F503         	movff	efgtoa@l+2,___fltol@f1+2
 35953   01067C  C57E  F504         	movff	efgtoa@l+3,___fltol@f1+3
 35954   010680  EC81  F0C4         	call	___fltol	;wreg free
 35955   010684  BE02               	btfsc	(?___fltol+1)^(0+1280),7,c
 35956   010686  D006               	goto	u10040
 35957   010688  5002               	movf	(?___fltol+1)^(0+1280),w,c
 35958   01068A  E113               	bnz	l8845
 35959   01068C  0E0A               	movlw	10
 35960   01068E  5C01               	subwf	?___fltol^(0+1280),w,c
 35961   010690  B0D8               	btfsc	status,0,c
 35962   010692  D00F               	goto	l8845
 35963   010694                     u10040:
 35964   010694  C57B  F501         	movff	efgtoa@l,___fltol@f1
 35965   010698  C57C  F502         	movff	efgtoa@l+1,___fltol@f1+1
 35966   01069C  C57D  F503         	movff	efgtoa@l+2,___fltol@f1+2
 35967   0106A0  C57E  F504         	movff	efgtoa@l+3,___fltol@f1+3
 35968   0106A4  EC81  F0C4         	call	___fltol	;wreg free
 35969   0106A8  C501  F56B         	movff	?___fltol,efgtoa@d
 35970   0106AC  C502  F56C         	movff	?___fltol+1,efgtoa@d+1
 35971   0106B0  D005               	goto	l2526
 35972   0106B2                     l8845:
 35973   0106B2  0E00               	movlw	0
 35974   0106B4  0105               	movlb	5	; () banked
 35975   0106B6  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
 35976   0106B8  0E09               	movlw	9
 35977   0106BA  6F6B               	movwf	efgtoa@d& (0+255),b
 35978   0106BC                     l2526:
 35979                           
 35980                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 35981   0106BC  0105               	movlb	5	; () banked
 35982   0106BE  5168               	movf	efgtoa@pp& (0+255),w,b
 35983   0106C0  B4D8               	btfsc	status,2,c
 35984                           
 35985                           ; BSR set to: 5
 35986   0106C2  AF61               	btfss	(efgtoa@ne+1)& (0+255),7,b
 35987   0106C4  D020               	goto	l8865
 35988                           
 35989                           ; BSR set to: 5
 35990                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 35991   0106C6  0E2C               	movlw	low _dbuf
 35992   0106C8  2586               	addwf	efgtoa@n& (0+255),w,b
 35993   0106CA  6ED9               	movwf	fsr2l,c
 35994   0106CC  0E07               	movlw	high _dbuf
 35995   0106CE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 35996   0106D0  6EDA               	movwf	fsr2h,c
 35997   0106D2  0E2E               	movlw	46
 35998   0106D4  6EDF               	movwf	indf2,c
 35999                           
 36000                           ; BSR set to: 5
 36001   0106D6  4B86               	infsnz	efgtoa@n& (0+255),f,b
 36002   0106D8  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
 36003                           
 36004                           ; BSR set to: 5
 36005                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 36006   0106DA  0771               	decf	efgtoa@w& (0+255),f,b
 36007   0106DC  A0D8               	btfss	status,0,c
 36008   0106DE  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 36009                           
 36010                           ; BSR set to: 5
 36011                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 36012   0106E0  0E01               	movlw	1
 36013   0106E2  6F68               	movwf	efgtoa@pp& (0+255),b
 36014   0106E4  D010               	goto	l8865
 36015   0106E6                     l8857:
 36016                           
 36017                           ; BSR set to: 5
 36018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 36019   0106E6  0E2C               	movlw	low _dbuf
 36020   0106E8  2586               	addwf	efgtoa@n& (0+255),w,b
 36021   0106EA  6ED9               	movwf	fsr2l,c
 36022   0106EC  0E07               	movlw	high _dbuf
 36023   0106EE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36024   0106F0  6EDA               	movwf	fsr2h,c
 36025   0106F2  0E30               	movlw	48
 36026   0106F4  6EDF               	movwf	indf2,c
 36027                           
 36028                           ; BSR set to: 5
 36029   0106F6  4B86               	infsnz	efgtoa@n& (0+255),f,b
 36030   0106F8  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
 36031                           
 36032                           ; BSR set to: 5
 36033                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 36034   0106FA  0771               	decf	efgtoa@w& (0+255),f,b
 36035   0106FC  A0D8               	btfss	status,0,c
 36036   0106FE  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 36037                           
 36038                           ; BSR set to: 5
 36039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 36040   010700  0764               	decf	efgtoa@t& (0+255),f,b
 36041   010702  A0D8               	btfss	status,0,c
 36042   010704  0765               	decf	(efgtoa@t+1)& (0+255),f,b
 36043   010706                     l8865:
 36044                           
 36045                           ; BSR set to: 5
 36046                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 36047   010706  5164               	movf	efgtoa@t& (0+255),w,b
 36048   010708  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
 36049   01070A  A4D8               	btfss	status,2,c
 36050   01070C  D7EC               	goto	l8857
 36051                           
 36052                           ; BSR set to: 5
 36053                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 36054   01070E  0E2C               	movlw	low _dbuf
 36055   010710  2586               	addwf	efgtoa@n& (0+255),w,b
 36056   010712  6ED9               	movwf	fsr2l,c
 36057   010714  0E07               	movlw	high _dbuf
 36058   010716  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36059   010718  6EDA               	movwf	fsr2h,c
 36060   01071A  516B               	movf	efgtoa@d& (0+255),w,b
 36061   01071C  0F30               	addlw	48
 36062   01071E  6EDF               	movwf	indf2,c
 36063                           
 36064                           ; BSR set to: 5
 36065   010720  4B86               	infsnz	efgtoa@n& (0+255),f,b
 36066   010722  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
 36067                           
 36068                           ; BSR set to: 5
 36069                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 36070   010724  0771               	decf	efgtoa@w& (0+255),f,b
 36071   010726  A0D8               	btfss	status,0,c
 36072   010728  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 36073                           
 36074                           ; BSR set to: 5
 36075                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 36076   01072A  C577  F51A         	movff	efgtoa@h,___flsub@b
 36077   01072E  C578  F51B         	movff	efgtoa@h+1,___flsub@b+1
 36078   010732  C579  F51C         	movff	efgtoa@h+2,___flsub@b+2
 36079   010736  C57A  F51D         	movff	efgtoa@h+3,___flsub@b+3
 36080   01073A  C57B  F505         	movff	efgtoa@l,___flmul@a
 36081   01073E  C57C  F506         	movff	efgtoa@l+1,___flmul@a+1
 36082   010742  C57D  F507         	movff	efgtoa@l+2,___flmul@a+2
 36083   010746  C57E  F508         	movff	efgtoa@l+3,___flmul@a+3
 36084   01074A  C588  F501         	movff	efgtoa@u,___flmul@b
 36085   01074E  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
 36086   010752  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
 36087   010756  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
 36088   01075A  EC17  F0A2         	call	___flmul	;wreg free
 36089   01075E  C501  F51E         	movff	?___flmul,___flsub@a
 36090   010762  C502  F51F         	movff	?___flmul+1,___flsub@a+1
 36091   010766  C503  F520         	movff	?___flmul+2,___flsub@a+2
 36092   01076A  C504  F521         	movff	?___flmul+3,___flsub@a+3
 36093   01076E  EC6C  F0CD         	call	___flsub	;wreg free
 36094   010772  C51A  F577         	movff	?___flsub,efgtoa@h
 36095   010776  C51B  F578         	movff	?___flsub+1,efgtoa@h+1
 36096   01077A  C51C  F579         	movff	?___flsub+2,efgtoa@h+2
 36097   01077E  C51D  F57A         	movff	?___flsub+3,efgtoa@h+3
 36098                           
 36099                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 36100   010782  C588  F51B         	movff	efgtoa@u,___fldiv@b
 36101   010786  C589  F51C         	movff	efgtoa@u+1,___fldiv@b+1
 36102   01078A  C58A  F51D         	movff	efgtoa@u+2,___fldiv@b+2
 36103   01078E  C58B  F51E         	movff	efgtoa@u+3,___fldiv@b+3
 36104   010792  0E00               	movlw	0
 36105   010794  6E1F               	movwf	___fldiv@a^(0+1280),c
 36106   010796  0E00               	movlw	0
 36107   010798  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 36108   01079A  0E20               	movlw	32
 36109   01079C  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 36110   01079E  0E41               	movlw	65
 36111   0107A0  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 36112   0107A2  EC63  F0A9         	call	___fldiv	;wreg free
 36113   0107A6  C51B  F588         	movff	?___fldiv,efgtoa@u
 36114   0107AA  C51C  F589         	movff	?___fldiv+1,efgtoa@u+1
 36115   0107AE  C51D  F58A         	movff	?___fldiv+2,efgtoa@u+2
 36116   0107B2  C51E  F58B         	movff	?___fldiv+3,efgtoa@u+3
 36117                           
 36118                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 36119   0107B6  0105               	movlb	5	; () banked
 36120   0107B8  0760               	decf	efgtoa@ne& (0+255),f,b
 36121   0107BA  A0D8               	btfss	status,0,c
 36122   0107BC  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
 36123                           
 36124                           ; BSR set to: 5
 36125                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
 36126   0107BE  4B7F               	infsnz	efgtoa@i& (0+255),f,b
 36127   0107C0  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
 36128   0107C2                     l8881:
 36129                           
 36130                           ; BSR set to: 5
 36131                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 36132   0107C2  516D               	movf	efgtoa@m& (0+255),w,b
 36133   0107C4  5D7F               	subwf	efgtoa@i& (0+255),w,b
 36134   0107C6  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 36135   0107C8  0A80               	xorlw	128
 36136   0107CA  6E4F               	movwf	??_efgtoa^(0+1280),c
 36137   0107CC  516E               	movf	(efgtoa@m+1)& (0+255),w,b
 36138   0107CE  0A80               	xorlw	128
 36139   0107D0  584F               	subwfb	??_efgtoa^(0+1280),w,c
 36140   0107D2  B0D8               	btfsc	status,0,c
 36141   0107D4  D008               	goto	u10090
 36142                           
 36143                           ; BSR set to: 5
 36144   0107D6  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
 36145   0107D8  D727               	goto	l8841
 36146   0107DA  5187               	movf	(efgtoa@n+1)& (0+255),w,b
 36147   0107DC  E104               	bnz	u10090
 36148   0107DE  0E4B               	movlw	75
 36149   0107E0  5D86               	subwf	efgtoa@n& (0+255),w,b
 36150   0107E2  A0D8               	btfss	status,0,c
 36151   0107E4  D721               	goto	l8841
 36152   0107E6                     u10090:
 36153                           
 36154                           ; BSR set to: 5
 36155                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 36156   0107E6  0E00               	movlw	0
 36157   0107E8  6F80               	movwf	(efgtoa@i+1)& (0+255),b
 36158   0107EA  0E4F               	movlw	79
 36159   0107EC  6F7F               	movwf	efgtoa@i& (0+255),b
 36160                           
 36161                           ; BSR set to: 5
 36162                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 36163   0107EE  0E2C               	movlw	low _dbuf
 36164   0107F0  257F               	addwf	efgtoa@i& (0+255),w,b
 36165   0107F2  6ED9               	movwf	fsr2l,c
 36166   0107F4  0E07               	movlw	high _dbuf
 36167   0107F6  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
 36168   0107F8  6EDA               	movwf	fsr2h,c
 36169   0107FA  6ADF               	clrf	indf2,c
 36170                           
 36171                           ; BSR set to: 5
 36172                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 36173   0107FC  0E2C               	movlw	low _dbuf
 36174   0107FE  6E4F               	movwf	??_efgtoa^(0+1280),c
 36175   010800  0E07               	movlw	high _dbuf
 36176   010802  6E50               	movwf	(??_efgtoa+1)^(0+1280),c
 36177   010804  5186               	movf	efgtoa@n& (0+255),w,b
 36178   010806  5E4F               	subwf	??_efgtoa^(0+1280),f,c
 36179   010808  5187               	movf	(efgtoa@n+1)& (0+255),w,b
 36180   01080A  5A50               	subwfb	(??_efgtoa+1)^(0+1280),f,c
 36181   01080C  517F               	movf	efgtoa@i& (0+255),w,b
 36182   01080E  244F               	addwf	??_efgtoa^(0+1280),w,c
 36183   010810  6E01               	movwf	memcpy@d1^(0+1280),c
 36184   010812  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 36185   010814  2050               	addwfc	(??_efgtoa+1)^(0+1280),w,c
 36186   010816  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
 36187   010818  0E2C               	movlw	low _dbuf
 36188   01081A  6E03               	movwf	memcpy@s1^(0+1280),c
 36189   01081C  0E07               	movlw	high _dbuf
 36190   01081E  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
 36191   010820  C586  F505         	movff	efgtoa@n,memcpy@n
 36192   010824  C587  F506         	movff	efgtoa@n+1,memcpy@n+1
 36193   010828  ECB1  F0CD         	call	_memcpy	;wreg free
 36194                           
 36195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 36196   01082C  0105               	movlb	5	; () banked
 36197   01082E  5186               	movf	efgtoa@n& (0+255),w,b
 36198   010830  5D7F               	subwf	efgtoa@i& (0+255),w,b
 36199   010832  6F86               	movwf	efgtoa@n& (0+255),b
 36200   010834  5187               	movf	(efgtoa@n+1)& (0+255),w,b
 36201   010836  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
 36202   010838  6F87               	movwf	(efgtoa@n+1)& (0+255),b
 36203                           
 36204                           ; BSR set to: 5
 36205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 36206   01083A  5181               	movf	efgtoa@sign& (0+255),w,b
 36207   01083C  B4D8               	btfsc	status,2,c
 36208   01083E  D002               	goto	u10100
 36209   010840  0E01               	movlw	1
 36210   010842  D001               	goto	u10110
 36211   010844                     u10100:
 36212   010844  0E00               	movlw	0
 36213   010846                     u10110:
 36214   010846  6F7F               	movwf	efgtoa@i& (0+255),b
 36215   010848  6B80               	clrf	(efgtoa@i+1)& (0+255),b
 36216                           
 36217                           ; BSR set to: 5
 36218                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
 36219   01084A  0106               	movlb	6	; () banked
 36220   01084C  B3FF               	btfsc	_flags& (0+255),1,b
 36221   01084E  D00F               	goto	l8903
 36222   010850  D023               	goto	u10140
 36223   010852                     l8899:
 36224                           
 36225                           ; BSR set to: 5
 36226                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
 36227   010852  0786               	decf	efgtoa@n& (0+255),f,b
 36228   010854  A0D8               	btfss	status,0,c
 36229   010856  0787               	decf	(efgtoa@n+1)& (0+255),f,b
 36230   010858  0E2C               	movlw	low _dbuf
 36231   01085A  2586               	addwf	efgtoa@n& (0+255),w,b
 36232   01085C  6ED9               	movwf	fsr2l,c
 36233   01085E  0E07               	movlw	high _dbuf
 36234   010860  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36235   010862  6EDA               	movwf	fsr2h,c
 36236   010864  0E30               	movlw	48
 36237   010866  6EDF               	movwf	indf2,c
 36238                           
 36239                           ; BSR set to: 5
 36240                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 856:    w--;
 36241   010868  0771               	decf	efgtoa@w& (0+255),f,b
 36242   01086A  A0D8               	btfss	status,0,c
 36243   01086C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 36244   01086E                     l8903:
 36245                           
 36246                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
 36247   01086E  0105               	movlb	5	; () banked
 36248   010870  5171               	movf	efgtoa@w& (0+255),w,b
 36249   010872  5D7F               	subwf	efgtoa@i& (0+255),w,b
 36250   010874  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 36251   010876  0A80               	xorlw	128
 36252   010878  6E4F               	movwf	??_efgtoa^(0+1280),c
 36253   01087A  5172               	movf	(efgtoa@w+1)& (0+255),w,b
 36254   01087C  0A80               	xorlw	128
 36255   01087E  584F               	subwfb	??_efgtoa^(0+1280),w,c
 36256   010880  B0D8               	btfsc	status,0,c
 36257   010882  D00A               	goto	u10140
 36258                           
 36259                           ; BSR set to: 5
 36260   010884  5186               	movf	efgtoa@n& (0+255),w,b
 36261   010886  5D7F               	subwf	efgtoa@i& (0+255),w,b
 36262   010888  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 36263   01088A  0A80               	xorlw	128
 36264   01088C  6E4F               	movwf	??_efgtoa^(0+1280),c
 36265   01088E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
 36266   010890  0A80               	xorlw	128
 36267   010892  584F               	subwfb	??_efgtoa^(0+1280),w,c
 36268   010894  A0D8               	btfss	status,0,c
 36269   010896  D7DD               	goto	l8899
 36270   010898                     u10140:
 36271                           
 36272                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 36273   010898  0105               	movlb	5	; () banked
 36274   01089A  5181               	movf	efgtoa@sign& (0+255),w,b
 36275   01089C  B4D8               	btfsc	status,2,c
 36276   01089E  D00B               	goto	l8911
 36277                           
 36278                           ; BSR set to: 5
 36279                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 36280   0108A0  0786               	decf	efgtoa@n& (0+255),f,b
 36281   0108A2  A0D8               	btfss	status,0,c
 36282   0108A4  0787               	decf	(efgtoa@n+1)& (0+255),f,b
 36283   0108A6  0E2C               	movlw	low _dbuf
 36284   0108A8  2586               	addwf	efgtoa@n& (0+255),w,b
 36285   0108AA  6ED9               	movwf	fsr2l,c
 36286   0108AC  0E07               	movlw	high _dbuf
 36287   0108AE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36288   0108B0  6EDA               	movwf	fsr2h,c
 36289   0108B2  C581  F4DF         	movff	efgtoa@sign,indf2
 36290   0108B6                     l8911:
 36291                           
 36292                           ; BSR set to: 5
 36293                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 36294   0108B6  517F               	movf	efgtoa@i& (0+255),w,b
 36295   0108B8  5F71               	subwf	efgtoa@w& (0+255),f,b
 36296   0108BA  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 36297   0108BC  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
 36298                           
 36299                           ; BSR set to: 5
 36300                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 36301   0108BE  C548  F512         	movff	efgtoa@fp,pad@fp
 36302   0108C2  C549  F513         	movff	efgtoa@fp+1,pad@fp+1
 36303   0108C6  0E2C               	movlw	low _dbuf
 36304   0108C8  2586               	addwf	efgtoa@n& (0+255),w,b
 36305   0108CA  6E14               	movwf	pad@buf^(0+1280),c
 36306   0108CC  0E07               	movlw	high _dbuf
 36307   0108CE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36308   0108D0  6E15               	movwf	(pad@buf+1)^(0+1280),c
 36309   0108D2  C571  F516         	movff	efgtoa@w,pad@p
 36310   0108D6  C572  F517         	movff	efgtoa@w+1,pad@p+1
 36311   0108DA  ECD4  F0C9         	call	_pad	;wreg free
 36312   0108DE  0012               	return		;funcret
 36313   0108E0                     __end_of_efgtoa:
 36314                           	callstack 0
 36315                           
 36316 ;; *************** function _strcpy *****************
 36317 ;; Defined at:
 36318 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 36319 ;; Parameters:    Size  Location     Type
 36320 ;;  dest            2    0[COMRAM] PTR unsigned char 
 36321 ;;		 -> dbuf(80), fileinfo(22), 
 36322 ;;  src             2    2[COMRAM] PTR const unsigned char 
 36323 ;;		 -> STR_94(4), STR_91(4), STR_76(9), 
 36324 ;; Auto vars:     Size  Location     Type
 36325 ;;  d               2    4[COMRAM] PTR unsigned char 
 36326 ;;		 -> dbuf(80), fileinfo(22), 
 36327 ;; Return value:  Size  Location     Type
 36328 ;;                  2    0[COMRAM] PTR unsigned char 
 36329 ;; Registers used:
 36330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36331 ;; Tracked objects:
 36332 ;;		On entry : 3D/7
 36333 ;;		On exit  : 3D/5
 36334 ;;		Unchanged: 3C/0
 36335 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36336 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36339 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36340 ;;Total ram usage:        6 bytes
 36341 ;; Hardware stack levels used: 1
 36342 ;; This function calls:
 36343 ;;		Nothing
 36344 ;; This function is called by:
 36345 ;;		_menu_select
 36346 ;;		_efgtoa
 36347 ;; This function uses a non-reentrant model
 36348 ;;
 36349                           
 36350                           	psect	text84
 36351   019D12                     __ptext84:
 36352                           	callstack 0
 36353   019D12                     _strcpy:
 36354                           	callstack 121
 36355                           
 36356                           ;incstack = 0
 36357   019D12  C501  F505         	movff	strcpy@dest,strcpy@d
 36358   019D16  C502  F506         	movff	strcpy@dest+1,strcpy@d+1
 36359   019D1A                     l8077:
 36360   019D1A  C503  F4F6         	movff	strcpy@src,tblptrl
 36361   019D1E  C504  F4F7         	movff	strcpy@src+1,tblptrh
 36362   019D22  4A03               	infsnz	strcpy@src^(0+1280),f,c
 36363   019D24  2A04               	incf	(strcpy@src+1)^(0+1280),f,c
 36364   019D26                     	if	0	;tblptru may be non-zero
 36365   019D26                     	endif
 36366   019D26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36367   019D26  0E00               	movlw	low (__mediumconst shr (0+16))
 36368   019D28  6EF8               	movwf	tblptru,c
 36369   019D2A                     	endif
 36370   019D2A  C505  F4D9         	movff	strcpy@d,fsr2l
 36371   019D2E  C506  F4DA         	movff	strcpy@d+1,fsr2h
 36372   019D32  4A05               	infsnz	strcpy@d^(0+1280),f,c
 36373   019D34  2A06               	incf	(strcpy@d+1)^(0+1280),f,c
 36374   019D36  0008               	tblrd		*
 36375   019D38  C4F5 F4DF          	movff	tablat,indf2
 36376   019D3C  50DF               	movf	indf2,w,c
 36377   019D3E  B4D8               	btfsc	status,2,c
 36378   019D40  0012               	return	
 36379   019D42  D7EB               	goto	l8077
 36380   019D44                     __end_of_strcpy:
 36381                           	callstack 0
 36382                           
 36383 ;; *************** function _memcpy *****************
 36384 ;; Defined at:
 36385 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 36386 ;; Parameters:    Size  Location     Type
 36387 ;;  d1              2    0[COMRAM] PTR void 
 36388 ;;		 -> files$buf(512), fs$win(512), dbuf(80), disk_buf(128), 
 36389 ;;		 -> files(3276), fs(560), f_rename@djn(40), f_rename@buf(32), 
 36390 ;;		 -> NULL(0), 
 36391 ;;  s1              2    2[COMRAM] PTR const void 
 36392 ;;		 -> files$buf(512), djn$fn(12), fs$win(512), dbuf(80), 
 36393 ;;		 -> disk_buf(128), files(3276), fs(560), f_rename@djn(40), 
 36394 ;;		 -> f_rename@buf(32), f_rename@djo(40), f_mkdir@dj(40), dj$fn(12), 
 36395 ;;		 -> f_open@dj(40), NULL(0), 
 36396 ;;  n               2    4[COMRAM] unsigned int 
 36397 ;; Auto vars:     Size  Location     Type
 36398 ;;  s               2    8[COMRAM] PTR const unsigned char 
 36399 ;;		 -> files$buf(512), djn$fn(12), fs$win(512), dbuf(80), 
 36400 ;;		 -> disk_buf(128), files(3276), fs(560), f_rename@djn(40), 
 36401 ;;		 -> f_rename@buf(32), f_rename@djo(40), f_mkdir@dj(40), dj$fn(12), 
 36402 ;;		 -> f_open@dj(40), NULL(0), 
 36403 ;;  d               2    6[COMRAM] PTR unsigned char 
 36404 ;;		 -> files$buf(512), fs$win(512), dbuf(80), disk_buf(128), 
 36405 ;;		 -> files(3276), fs(560), f_rename@djn(40), f_rename@buf(32), 
 36406 ;;		 -> NULL(0), 
 36407 ;;  tmp             1   10[COMRAM] unsigned char 
 36408 ;; Return value:  Size  Location     Type
 36409 ;;                  2    0[COMRAM] PTR void 
 36410 ;; Registers used:
 36411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36412 ;; Tracked objects:
 36413 ;;		On entry : 3C/6
 36414 ;;		On exit  : 3C/4
 36415 ;;		Unchanged: 3C/0
 36416 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36417 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36418 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36420 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36421 ;;Total ram usage:       11 bytes
 36422 ;; Hardware stack levels used: 1
 36423 ;; This function calls:
 36424 ;;		Nothing
 36425 ;; This function is called by:
 36426 ;;		_dir_register
 36427 ;;		_f_read
 36428 ;;		_f_write
 36429 ;;		_efgtoa
 36430 ;; This function uses a non-reentrant model
 36431 ;;
 36432                           
 36433                           	psect	text85
 36434   019B62                     __ptext85:
 36435                           	callstack 0
 36436   019B62                     _memcpy:
 36437                           	callstack 121
 36438                           
 36439                           ;incstack = 0
 36440   019B62  C503  F509         	movff	memcpy@s1,memcpy@s
 36441   019B66  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
 36442   019B6A  C501  F507         	movff	memcpy@d1,memcpy@d
 36443   019B6E  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
 36444   019B72  D010               	goto	l8073
 36445   019B74                     l8065:
 36446   019B74  C509  F4D9         	movff	memcpy@s,fsr2l
 36447   019B78  C50A  F4DA         	movff	memcpy@s+1,fsr2h
 36448   019B7C  50DF               	movf	indf2,w,c
 36449   019B7E  6E0B               	movwf	memcpy@tmp^(0+1280),c
 36450   019B80  4A09               	infsnz	memcpy@s^(0+1280),f,c
 36451   019B82  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
 36452   019B84  C507  F4D9         	movff	memcpy@d,fsr2l
 36453   019B88  C508  F4DA         	movff	memcpy@d+1,fsr2h
 36454   019B8C  C50B  F4DF         	movff	memcpy@tmp,indf2
 36455   019B90  4A07               	infsnz	memcpy@d^(0+1280),f,c
 36456   019B92  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
 36457   019B94                     l8073:
 36458   019B94  0605               	decf	memcpy@n^(0+1280),f,c
 36459   019B96  A0D8               	btfss	status,0,c
 36460   019B98  0606               	decf	(memcpy@n+1)^(0+1280),f,c
 36461   019B9A  2805               	incf	memcpy@n^(0+1280),w,c
 36462   019B9C  E1EB               	bnz	l8065
 36463   019B9E  2806               	incf	(memcpy@n+1)^(0+1280),w,c
 36464   019BA0  B4D8               	btfsc	status,2,c
 36465   019BA2  0012               	return	
 36466   019BA4  D7E7               	goto	l8065
 36467   019BA6                     __end_of_memcpy:
 36468                           	callstack 0
 36469                           
 36470 ;; *************** function _labs *****************
 36471 ;; Defined at:
 36472 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
 36473 ;; Parameters:    Size  Location     Type
 36474 ;;  a               4    0[COMRAM] long 
 36475 ;; Auto vars:     Size  Location     Type
 36476 ;;		None
 36477 ;; Return value:  Size  Location     Type
 36478 ;;                  4    0[COMRAM] long 
 36479 ;; Registers used:
 36480 ;;		wreg, status,2, status,0
 36481 ;; Tracked objects:
 36482 ;;		On entry : 3F/5
 36483 ;;		On exit  : 3F/5
 36484 ;;		Unchanged: 3E/0
 36485 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36488 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36489 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36490 ;;Total ram usage:        8 bytes
 36491 ;; Hardware stack levels used: 1
 36492 ;; This function calls:
 36493 ;;		Nothing
 36494 ;; This function is called by:
 36495 ;;		_efgtoa
 36496 ;; This function uses a non-reentrant model
 36497 ;;
 36498                           
 36499                           	psect	text86
 36500   0199FC                     __ptext86:
 36501                           	callstack 0
 36502   0199FC                     _labs:
 36503                           	callstack 121
 36504                           
 36505                           ; BSR set to: 5
 36506                           
 36507                           ;incstack = 0
 36508   0199FC  BE04               	btfsc	(labs@a+3)^(0+1280),7,c
 36509   0199FE  D009               	goto	l8575
 36510                           
 36511                           ; BSR set to: 5
 36512   019A00  C501  F501         	movff	labs@a,?_labs
 36513   019A04  C502  F502         	movff	labs@a+1,?_labs+1
 36514   019A08  C503  F503         	movff	labs@a+2,?_labs+2
 36515   019A0C  C504  F504         	movff	labs@a+3,?_labs+3
 36516   019A10  0012               	return	
 36517   019A12                     l8575:
 36518                           
 36519                           ; BSR set to: 5
 36520   019A12  C501  F505         	movff	labs@a,??_labs
 36521   019A16  C502  F506         	movff	labs@a+1,??_labs+1
 36522   019A1A  C503  F507         	movff	labs@a+2,??_labs+2
 36523   019A1E  C504  F508         	movff	labs@a+3,??_labs+3
 36524   019A22  1E05               	comf	??_labs^(0+1280),f,c
 36525   019A24  1E06               	comf	(??_labs+1)^(0+1280),f,c
 36526   019A26  1E07               	comf	(??_labs+2)^(0+1280),f,c
 36527   019A28  1E08               	comf	(??_labs+3)^(0+1280),f,c
 36528   019A2A  2A05               	incf	??_labs^(0+1280),f,c
 36529   019A2C  0E00               	movlw	0
 36530   019A2E  2206               	addwfc	(??_labs+1)^(0+1280),f,c
 36531   019A30  2207               	addwfc	(??_labs+2)^(0+1280),f,c
 36532   019A32  2208               	addwfc	(??_labs+3)^(0+1280),f,c
 36533   019A34  C505  F501         	movff	??_labs,?_labs
 36534   019A38  C506  F502         	movff	??_labs+1,?_labs+1
 36535   019A3C  C507  F503         	movff	??_labs+2,?_labs+2
 36536   019A40  C508  F504         	movff	??_labs+3,?_labs+3
 36537                           
 36538                           ; BSR set to: 5
 36539   019A44  0012               	return		;funcret
 36540   019A46                     __end_of_labs:
 36541                           	callstack 0
 36542                           
 36543 ;; *************** function _floorf *****************
 36544 ;; Defined at:
 36545 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
 36546 ;; Parameters:    Size  Location     Type
 36547 ;;  x               4   51[COMRAM] float 
 36548 ;; Auto vars:     Size  Location     Type
 36549 ;;  u               4   67[COMRAM] struct .
 36550 ;;  m               4   61[COMRAM] unsigned long 
 36551 ;;  e               2   65[COMRAM] int 
 36552 ;; Return value:  Size  Location     Type
 36553 ;;                  4   51[COMRAM] float 
 36554 ;; Registers used:
 36555 ;;		wreg, status,2, status,0
 36556 ;; Tracked objects:
 36557 ;;		On entry : 0/5
 36558 ;;		On exit  : 0/0
 36559 ;;		Unchanged: 0/0
 36560 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36562 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36563 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36564 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36565 ;;Total ram usage:       20 bytes
 36566 ;; Hardware stack levels used: 1
 36567 ;; This function calls:
 36568 ;;		Nothing
 36569 ;; This function is called by:
 36570 ;;		_efgtoa
 36571 ;; This function uses a non-reentrant model
 36572 ;;
 36573                           
 36574                           	psect	text87
 36575   01697A                     __ptext87:
 36576                           	callstack 0
 36577   01697A                     _floorf:
 36578                           	callstack 121
 36579                           
 36580                           ; BSR set to: 5
 36581                           ;incstack = 0
 36582   01697A  C70B  F544         	movff	floorf@F521,floorf@u
 36583   01697E  C70C  F545         	movff	floorf@F521+1,floorf@u+1
 36584   016982  C70D  F546         	movff	floorf@F521+2,floorf@u+2
 36585   016986  C70E  F547         	movff	floorf@F521+3,floorf@u+3
 36586   01698A  C534  F544         	movff	floorf@x,floorf@u
 36587   01698E  C535  F545         	movff	floorf@x+1,floorf@u+1
 36588   016992  C536  F546         	movff	floorf@x+2,floorf@u+2
 36589   016996  C537  F547         	movff	floorf@x+3,floorf@u+3
 36590   01699A  0E81               	movlw	129
 36591   01699C  6E38               	movwf	??_floorf^(0+1280),c
 36592   01699E  0EFF               	movlw	255
 36593   0169A0  6E39               	movwf	(??_floorf+1)^(0+1280),c
 36594   0169A2  C544  F53A         	movff	floorf@u,??_floorf+2
 36595   0169A6  C545  F53B         	movff	floorf@u+1,??_floorf+3
 36596   0169AA  C546  F53C         	movff	floorf@u+2,??_floorf+4
 36597   0169AE  C547  F53D         	movff	floorf@u+3,??_floorf+5
 36598   0169B2  0E18               	movlw	24
 36599   0169B4  D005               	goto	u9540
 36600   0169B6                     u9545:
 36601   0169B6  90D8               	bcf	status,0,c
 36602   0169B8  323D               	rrcf	(??_floorf+5)^(0+1280),f,c
 36603   0169BA  323C               	rrcf	(??_floorf+4)^(0+1280),f,c
 36604   0169BC  323B               	rrcf	(??_floorf+3)^(0+1280),f,c
 36605   0169BE  323A               	rrcf	(??_floorf+2)^(0+1280),f,c
 36606   0169C0                     u9540:
 36607   0169C0  2EE8               	decfsz	wreg,f,c
 36608   0169C2  D7F9               	goto	u9545
 36609   0169C4  503A               	movf	(??_floorf+2)^(0+1280),w,c
 36610   0169C6  2438               	addwf	??_floorf^(0+1280),w,c
 36611   0169C8  6E42               	movwf	floorf@e^(0+1280),c
 36612   0169CA  0E00               	movlw	0
 36613   0169CC  2039               	addwfc	(??_floorf+1)^(0+1280),w,c
 36614   0169CE  6E43               	movwf	(floorf@e+1)^(0+1280),c
 36615   0169D0  BE43               	btfsc	(floorf@e+1)^(0+1280),7,c
 36616   0169D2  D00F               	goto	l8585
 36617   0169D4  5043               	movf	(floorf@e+1)^(0+1280),w,c
 36618   0169D6  E104               	bnz	u9550
 36619   0169D8  0E17               	movlw	23
 36620   0169DA  5C42               	subwf	floorf@e^(0+1280),w,c
 36621   0169DC  A0D8               	btfss	status,0,c
 36622   0169DE  D009               	goto	l8585
 36623   0169E0                     u9550:
 36624   0169E0  C534  F534         	movff	floorf@x,?_floorf
 36625   0169E4  C535  F535         	movff	floorf@x+1,?_floorf+1
 36626   0169E8  C536  F536         	movff	floorf@x+2,?_floorf+2
 36627   0169EC  C537  F537         	movff	floorf@x+3,?_floorf+3
 36628   0169F0  0012               	return	
 36629   0169F2                     l8585:
 36630   0169F2  BE43               	btfsc	(floorf@e+1)^(0+1280),7,c
 36631   0169F4  D05B               	goto	l8595
 36632   0169F6  C542  F538         	movff	floorf@e,??_floorf
 36633   0169FA  0EFF               	movlw	255
 36634   0169FC  6E39               	movwf	(??_floorf+1)^(0+1280),c
 36635   0169FE  0EFF               	movlw	255
 36636   016A00  6E3A               	movwf	(??_floorf+2)^(0+1280),c
 36637   016A02  0E7F               	movlw	127
 36638   016A04  6E3B               	movwf	(??_floorf+3)^(0+1280),c
 36639   016A06  0E00               	movlw	0
 36640   016A08  6E3C               	movwf	(??_floorf+4)^(0+1280),c
 36641   016A0A                     u9575:
 36642   016A0A  6638               	tstfsz	??_floorf^(0+1280),c
 36643   016A0C  D001               	goto	u9576
 36644   016A0E  D007               	goto	u9577
 36645   016A10                     u9576:
 36646   016A10  343C               	rlcf	(??_floorf+4)^(0+1280),w,c
 36647   016A12  323C               	rrcf	(??_floorf+4)^(0+1280),f,c
 36648   016A14  323B               	rrcf	(??_floorf+3)^(0+1280),f,c
 36649   016A16  323A               	rrcf	(??_floorf+2)^(0+1280),f,c
 36650   016A18  3239               	rrcf	(??_floorf+1)^(0+1280),f,c
 36651   016A1A  2E38               	decfsz	??_floorf^(0+1280),f,c
 36652   016A1C  D7F6               	goto	u9575
 36653   016A1E                     u9577:
 36654   016A1E  C539  F53E         	movff	??_floorf+1,floorf@m
 36655   016A22  C53A  F53F         	movff	??_floorf+2,floorf@m+1
 36656   016A26  C53B  F540         	movff	??_floorf+3,floorf@m+2
 36657   016A2A  C53C  F541         	movff	??_floorf+4,floorf@m+3
 36658   016A2E  503E               	movf	floorf@m^(0+1280),w,c
 36659   016A30  1444               	andwf	floorf@u^(0+1280),w,c
 36660   016A32  6E38               	movwf	??_floorf^(0+1280),c
 36661   016A34  503F               	movf	(floorf@m+1)^(0+1280),w,c
 36662   016A36  1445               	andwf	(floorf@u+1)^(0+1280),w,c
 36663   016A38  6E39               	movwf	(??_floorf+1)^(0+1280),c
 36664   016A3A  5040               	movf	(floorf@m+2)^(0+1280),w,c
 36665   016A3C  1446               	andwf	(floorf@u+2)^(0+1280),w,c
 36666   016A3E  6E3A               	movwf	(??_floorf+2)^(0+1280),c
 36667   016A40  5041               	movf	(floorf@m+3)^(0+1280),w,c
 36668   016A42  1447               	andwf	(floorf@u+3)^(0+1280),w,c
 36669   016A44  6E3B               	movwf	(??_floorf+3)^(0+1280),c
 36670   016A46  5038               	movf	??_floorf^(0+1280),w,c
 36671   016A48  1039               	iorwf	(??_floorf+1)^(0+1280),w,c
 36672   016A4A  103A               	iorwf	(??_floorf+2)^(0+1280),w,c
 36673   016A4C  103B               	iorwf	(??_floorf+3)^(0+1280),w,c
 36674   016A4E  B4D8               	btfsc	status,2,c
 36675   016A50  D7C7               	goto	u9550
 36676   016A52  C544  F538         	movff	floorf@u,??_floorf
 36677   016A56  C545  F539         	movff	floorf@u+1,??_floorf+1
 36678   016A5A  C546  F53A         	movff	floorf@u+2,??_floorf+2
 36679   016A5E  C547  F53B         	movff	floorf@u+3,??_floorf+3
 36680   016A62  0E20               	movlw	32
 36681   016A64  D005               	goto	u9590
 36682   016A66                     u9595:
 36683   016A66  90D8               	bcf	status,0,c
 36684   016A68  323B               	rrcf	(??_floorf+3)^(0+1280),f,c
 36685   016A6A  323A               	rrcf	(??_floorf+2)^(0+1280),f,c
 36686   016A6C  3239               	rrcf	(??_floorf+1)^(0+1280),f,c
 36687   016A6E  3238               	rrcf	??_floorf^(0+1280),f,c
 36688   016A70                     u9590:
 36689   016A70  2EE8               	decfsz	wreg,f,c
 36690   016A72  D7F9               	goto	u9595
 36691   016A74  5038               	movf	??_floorf^(0+1280),w,c
 36692   016A76  B4D8               	btfsc	status,2,c
 36693   016A78  D008               	goto	l2682
 36694   016A7A  503E               	movf	floorf@m^(0+1280),w,c
 36695   016A7C  2644               	addwf	floorf@u^(0+1280),f,c
 36696   016A7E  503F               	movf	(floorf@m+1)^(0+1280),w,c
 36697   016A80  2245               	addwfc	(floorf@u+1)^(0+1280),f,c
 36698   016A82  5040               	movf	(floorf@m+2)^(0+1280),w,c
 36699   016A84  2246               	addwfc	(floorf@u+2)^(0+1280),f,c
 36700   016A86  5041               	movf	(floorf@m+3)^(0+1280),w,c
 36701   016A88  2247               	addwfc	(floorf@u+3)^(0+1280),f,c
 36702   016A8A                     l2682:
 36703   016A8A  1C3E               	comf	floorf@m^(0+1280),w,c
 36704   016A8C  6E38               	movwf	??_floorf^(0+1280),c
 36705   016A8E  1C3F               	comf	(floorf@m+1)^(0+1280),w,c
 36706   016A90  6E39               	movwf	(??_floorf+1)^(0+1280),c
 36707   016A92  1C40               	comf	(floorf@m+2)^(0+1280),w,c
 36708   016A94  6E3A               	movwf	(??_floorf+2)^(0+1280),c
 36709   016A96  1C41               	comf	(floorf@m+3)^(0+1280),w,c
 36710   016A98  6E3B               	movwf	(??_floorf+3)^(0+1280),c
 36711   016A9A  5038               	movf	??_floorf^(0+1280),w,c
 36712   016A9C  1644               	andwf	floorf@u^(0+1280),f,c
 36713   016A9E  5039               	movf	(??_floorf+1)^(0+1280),w,c
 36714   016AA0  1645               	andwf	(floorf@u+1)^(0+1280),f,c
 36715   016AA2  503A               	movf	(??_floorf+2)^(0+1280),w,c
 36716   016AA4  1646               	andwf	(floorf@u+2)^(0+1280),f,c
 36717   016AA6  503B               	movf	(??_floorf+3)^(0+1280),w,c
 36718   016AA8  1647               	andwf	(floorf@u+3)^(0+1280),f,c
 36719   016AAA  D032               	goto	l8603
 36720   016AAC                     l8595:
 36721   016AAC  C544  F538         	movff	floorf@u,??_floorf
 36722   016AB0  C545  F539         	movff	floorf@u+1,??_floorf+1
 36723   016AB4  C546  F53A         	movff	floorf@u+2,??_floorf+2
 36724   016AB8  C547  F53B         	movff	floorf@u+3,??_floorf+3
 36725   016ABC  0E20               	movlw	32
 36726   016ABE  D005               	goto	u9610
 36727   016AC0                     u9615:
 36728   016AC0  90D8               	bcf	status,0,c
 36729   016AC2  323B               	rrcf	(??_floorf+3)^(0+1280),f,c
 36730   016AC4  323A               	rrcf	(??_floorf+2)^(0+1280),f,c
 36731   016AC6  3239               	rrcf	(??_floorf+1)^(0+1280),f,c
 36732   016AC8  3238               	rrcf	??_floorf^(0+1280),f,c
 36733   016ACA                     u9610:
 36734   016ACA  2EE8               	decfsz	wreg,f,c
 36735   016ACC  D7F9               	goto	u9615
 36736   016ACE  6638               	tstfsz	??_floorf^(0+1280),c
 36737   016AD0  D008               	goto	l8599
 36738   016AD2  0E00               	movlw	0
 36739   016AD4  6E44               	movwf	floorf@u^(0+1280),c
 36740   016AD6  0E00               	movlw	0
 36741   016AD8  6E45               	movwf	(floorf@u+1)^(0+1280),c
 36742   016ADA  0E00               	movlw	0
 36743   016ADC  6E46               	movwf	(floorf@u+2)^(0+1280),c
 36744   016ADE  0E00               	movlw	0
 36745   016AE0  D016               	goto	L26
 36746   016AE2                     l8599:
 36747   016AE2  90D8               	bcf	status,0,c
 36748   016AE4  3444               	rlcf	floorf@u^(0+1280),w,c
 36749   016AE6  6E38               	movwf	??_floorf^(0+1280),c
 36750   016AE8  3445               	rlcf	(floorf@u+1)^(0+1280),w,c
 36751   016AEA  6E39               	movwf	(??_floorf+1)^(0+1280),c
 36752   016AEC  3446               	rlcf	(floorf@u+2)^(0+1280),w,c
 36753   016AEE  6E3A               	movwf	(??_floorf+2)^(0+1280),c
 36754   016AF0  3447               	rlcf	(floorf@u+3)^(0+1280),w,c
 36755   016AF2  6E3B               	movwf	(??_floorf+3)^(0+1280),c
 36756   016AF4  5038               	movf	??_floorf^(0+1280),w,c
 36757   016AF6  1039               	iorwf	(??_floorf+1)^(0+1280),w,c
 36758   016AF8  103A               	iorwf	(??_floorf+2)^(0+1280),w,c
 36759   016AFA  103B               	iorwf	(??_floorf+3)^(0+1280),w,c
 36760   016AFC  B4D8               	btfsc	status,2,c
 36761   016AFE  D008               	goto	l8603
 36762   016B00  0E00               	movlw	0
 36763   016B02  6E44               	movwf	floorf@u^(0+1280),c
 36764   016B04  0E00               	movlw	0
 36765   016B06  6E45               	movwf	(floorf@u+1)^(0+1280),c
 36766   016B08  0E80               	movlw	128
 36767   016B0A  6E46               	movwf	(floorf@u+2)^(0+1280),c
 36768   016B0C  0EBF               	movlw	191
 36769   016B0E                     L26:
 36770   016B0E  6E47               	movwf	(floorf@u+3)^(0+1280),c
 36771   016B10                     l8603:
 36772   016B10  C544  F534         	movff	floorf@u,?_floorf
 36773   016B14  C545  F535         	movff	floorf@u+1,?_floorf+1
 36774   016B18  C546  F536         	movff	floorf@u+2,?_floorf+2
 36775   016B1C  C547  F537         	movff	floorf@u+3,?_floorf+3
 36776   016B20  0012               	return		;funcret
 36777   016B22                     __end_of_floorf:
 36778                           	callstack 0
 36779                           
 36780 ;; *************** function ___fpclassifyf *****************
 36781 ;; Defined at:
 36782 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
 36783 ;; Parameters:    Size  Location     Type
 36784 ;;  x               4    0[COMRAM] float 
 36785 ;; Auto vars:     Size  Location     Type
 36786 ;;  u               4   10[COMRAM] struct .
 36787 ;;  e               2    8[COMRAM] int 
 36788 ;; Return value:  Size  Location     Type
 36789 ;;                  2    0[COMRAM] int 
 36790 ;; Registers used:
 36791 ;;		wreg, status,2, status,0
 36792 ;; Tracked objects:
 36793 ;;		On entry : 0/5
 36794 ;;		On exit  : 0/0
 36795 ;;		Unchanged: 0/0
 36796 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36798 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36800 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36801 ;;Total ram usage:       14 bytes
 36802 ;; Hardware stack levels used: 1
 36803 ;; This function calls:
 36804 ;;		Nothing
 36805 ;; This function is called by:
 36806 ;;		_efgtoa
 36807 ;; This function uses a non-reentrant model
 36808 ;;
 36809                           
 36810                           	psect	text88
 36811   018464                     __ptext88:
 36812                           	callstack 0
 36813   018464                     ___fpclassifyf:
 36814                           	callstack 121
 36815                           
 36816                           ;incstack = 0
 36817   018464  C70F  F50B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 36818   018468  C710  F50C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 36819   01846C  C711  F50D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 36820   018470  C712  F50E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 36821   018474  C501  F50B         	movff	___fpclassifyf@x,___fpclassifyf@u
 36822   018478  C502  F50C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 36823   01847C  C503  F50D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 36824   018480  C504  F50E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 36825   018484  C50B  F505         	movff	___fpclassifyf@u,??___fpclassifyf
 36826   018488  C50C  F506         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 36827   01848C  C50D  F507         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 36828   018490  C50E  F508         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 36829   018494  0E18               	movlw	24
 36830   018496  D005               	goto	u9460
 36831   018498                     u9465:
 36832   018498  90D8               	bcf	status,0,c
 36833   01849A  3208               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
 36834   01849C  3207               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
 36835   01849E  3206               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
 36836   0184A0  3205               	rrcf	??___fpclassifyf^(0+1280),f,c
 36837   0184A2                     u9460:
 36838   0184A2  2EE8               	decfsz	wreg,f,c
 36839   0184A4  D7F9               	goto	u9465
 36840   0184A6  5005               	movf	??___fpclassifyf^(0+1280),w,c
 36841   0184A8  6E09               	movwf	___fpclassifyf@e^(0+1280),c
 36842   0184AA  6A0A               	clrf	(___fpclassifyf@e+1)^(0+1280),c
 36843   0184AC  5009               	movf	___fpclassifyf@e^(0+1280),w,c
 36844   0184AE  100A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 36845   0184B0  A4D8               	btfss	status,2,c
 36846   0184B2  D019               	goto	l8561
 36847   0184B4  90D8               	bcf	status,0,c
 36848   0184B6  340B               	rlcf	___fpclassifyf@u^(0+1280),w,c
 36849   0184B8  6E05               	movwf	??___fpclassifyf^(0+1280),c
 36850   0184BA  340C               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
 36851   0184BC  6E06               	movwf	(??___fpclassifyf+1)^(0+1280),c
 36852   0184BE  340D               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
 36853   0184C0  6E07               	movwf	(??___fpclassifyf+2)^(0+1280),c
 36854   0184C2  340E               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
 36855   0184C4  6E08               	movwf	(??___fpclassifyf+3)^(0+1280),c
 36856   0184C6  5005               	movf	??___fpclassifyf^(0+1280),w,c
 36857   0184C8  1006               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 36858   0184CA  1007               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 36859   0184CC  1008               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 36860   0184CE  A4D8               	btfss	status,2,c
 36861   0184D0  D005               	goto	l8557
 36862   0184D2  0E00               	movlw	0
 36863   0184D4  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 36864   0184D6  0E02               	movlw	2
 36865   0184D8  6E01               	movwf	?___fpclassifyf^(0+1280),c
 36866   0184DA  0012               	return	
 36867   0184DC                     l8557:
 36868   0184DC  0E00               	movlw	0
 36869   0184DE  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 36870   0184E0  0E03               	movlw	3
 36871   0184E2  6E01               	movwf	?___fpclassifyf^(0+1280),c
 36872   0184E4  0012               	return	
 36873   0184E6                     l8561:
 36874   0184E6  2809               	incf	___fpclassifyf@e^(0+1280),w,c
 36875   0184E8  100A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 36876   0184EA  A4D8               	btfss	status,2,c
 36877   0184EC  D01C               	goto	l8567
 36878   0184EE  C50B  F505         	movff	___fpclassifyf@u,??___fpclassifyf
 36879   0184F2  C50C  F506         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 36880   0184F6  C50D  F507         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 36881   0184FA  C50E  F508         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 36882   0184FE  0E09               	movlw	9
 36883   018500                     u9505:
 36884   018500  90D8               	bcf	status,0,c
 36885   018502  3605               	rlcf	??___fpclassifyf^(0+1280),f,c
 36886   018504  3606               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
 36887   018506  3607               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
 36888   018508  3608               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
 36889   01850A  2EE8               	decfsz	wreg,f,c
 36890   01850C  D7F9               	goto	u9505
 36891   01850E  5005               	movf	??___fpclassifyf^(0+1280),w,c
 36892   018510  1006               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 36893   018512  1007               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 36894   018514  1008               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 36895   018516  A4D8               	btfss	status,2,c
 36896   018518  D002               	goto	u9510
 36897   01851A  0E01               	movlw	1
 36898   01851C  D001               	goto	u9520
 36899   01851E                     u9510:
 36900   01851E  0E00               	movlw	0
 36901   018520                     u9520:
 36902   018520  6E01               	movwf	?___fpclassifyf^(0+1280),c
 36903   018522  6A02               	clrf	(?___fpclassifyf+1)^(0+1280),c
 36904   018524  0012               	return	
 36905   018526                     l8567:
 36906   018526  0E00               	movlw	0
 36907   018528  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 36908   01852A  0E04               	movlw	4
 36909   01852C  6E01               	movwf	?___fpclassifyf^(0+1280),c
 36910   01852E  0012               	return		;funcret
 36911   018530                     __end_of___fpclassifyf:
 36912                           	callstack 0
 36913                           
 36914 ;; *************** function ___fltol *****************
 36915 ;; Defined at:
 36916 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
 36917 ;; Parameters:    Size  Location     Type
 36918 ;;  f1              4    0[COMRAM] int 
 36919 ;; Auto vars:     Size  Location     Type
 36920 ;;  exp1            1    9[COMRAM] unsigned char 
 36921 ;;  sign1           1    8[COMRAM] unsigned char 
 36922 ;; Return value:  Size  Location     Type
 36923 ;;                  4    0[COMRAM] long 
 36924 ;; Registers used:
 36925 ;;		wreg, status,2, status,0
 36926 ;; Tracked objects:
 36927 ;;		On entry : 0/5
 36928 ;;		On exit  : 0/0
 36929 ;;		Unchanged: 0/0
 36930 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36933 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36934 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36935 ;;Total ram usage:       10 bytes
 36936 ;; Hardware stack levels used: 1
 36937 ;; This function calls:
 36938 ;;		Nothing
 36939 ;; This function is called by:
 36940 ;;		_efgtoa
 36941 ;; This function uses a non-reentrant model
 36942 ;;
 36943                           
 36944                           	psect	text89
 36945   018902                     __ptext89:
 36946                           	callstack 0
 36947   018902                     ___fltol:
 36948                           	callstack 121
 36949                           
 36950                           ;incstack = 0
 36951   018902  3403               	rlcf	(___fltol@f1+2)^(0+1280),w,c
 36952   018904  3404               	rlcf	(___fltol@f1+3)^(0+1280),w,c
 36953   018906  6E0A               	movwf	___fltol@exp1^(0+1280),c
 36954   018908  500A               	movf	___fltol@exp1^(0+1280),w,c
 36955   01890A  A4D8               	btfss	status,2,c
 36956   01890C  D009               	goto	l8491
 36957   01890E                     u9340:
 36958   01890E  0E00               	movlw	0
 36959   018910  6E01               	movwf	?___fltol^(0+1280),c
 36960   018912  0E00               	movlw	0
 36961   018914  6E02               	movwf	(?___fltol+1)^(0+1280),c
 36962   018916  0E00               	movlw	0
 36963   018918  6E03               	movwf	(?___fltol+2)^(0+1280),c
 36964   01891A  0E00               	movlw	0
 36965   01891C  6E04               	movwf	(?___fltol+3)^(0+1280),c
 36966   01891E  0012               	return	
 36967   018920                     l8491:
 36968   018920  C501  F505         	movff	___fltol@f1,??___fltol
 36969   018924  C502  F506         	movff	___fltol@f1+1,??___fltol+1
 36970   018928  C503  F507         	movff	___fltol@f1+2,??___fltol+2
 36971   01892C  C504  F508         	movff	___fltol@f1+3,??___fltol+3
 36972   018930  0E20               	movlw	32
 36973   018932  D005               	goto	u9350
 36974   018934                     u9355:
 36975   018934  90D8               	bcf	status,0,c
 36976   018936  3208               	rrcf	(??___fltol+3)^(0+1280),f,c
 36977   018938  3207               	rrcf	(??___fltol+2)^(0+1280),f,c
 36978   01893A  3206               	rrcf	(??___fltol+1)^(0+1280),f,c
 36979   01893C  3205               	rrcf	??___fltol^(0+1280),f,c
 36980   01893E                     u9350:
 36981   01893E  2EE8               	decfsz	wreg,f,c
 36982   018940  D7F9               	goto	u9355
 36983   018942  5005               	movf	??___fltol^(0+1280),w,c
 36984   018944  6E09               	movwf	___fltol@sign1^(0+1280),c
 36985   018946  8E03               	bsf	(___fltol@f1+2)^(0+1280),7,c
 36986   018948  0EFF               	movlw	255
 36987   01894A  1601               	andwf	___fltol@f1^(0+1280),f,c
 36988   01894C  0EFF               	movlw	255
 36989   01894E  1602               	andwf	(___fltol@f1+1)^(0+1280),f,c
 36990   018950  0EFF               	movlw	255
 36991   018952  1603               	andwf	(___fltol@f1+2)^(0+1280),f,c
 36992   018954  0E00               	movlw	0
 36993   018956  1604               	andwf	(___fltol@f1+3)^(0+1280),f,c
 36994   018958  0E96               	movlw	150
 36995   01895A  5E0A               	subwf	___fltol@exp1^(0+1280),f,c
 36996   01895C  AE0A               	btfss	___fltol@exp1^(0+1280),7,c
 36997   01895E  D00D               	goto	l8511
 36998   018960  500A               	movf	___fltol@exp1^(0+1280),w,c
 36999   018962  0A80               	xorlw	128
 37000   018964  0F97               	addlw	151
 37001   018966  A0D8               	btfss	status,0,c
 37002   018968  D7D2               	goto	u9340
 37003   01896A                     l8507:
 37004   01896A  90D8               	bcf	status,0,c
 37005   01896C  3204               	rrcf	(___fltol@f1+3)^(0+1280),f,c
 37006   01896E  3203               	rrcf	(___fltol@f1+2)^(0+1280),f,c
 37007   018970  3202               	rrcf	(___fltol@f1+1)^(0+1280),f,c
 37008   018972  3201               	rrcf	___fltol@f1^(0+1280),f,c
 37009   018974  3E0A               	incfsz	___fltol@exp1^(0+1280),f,c
 37010   018976  D7F9               	goto	l8507
 37011   018978  D00D               	goto	u9390
 37012   01897A                     l8511:
 37013   01897A  0E1F               	movlw	31
 37014   01897C  640A               	cpfsgt	___fltol@exp1^(0+1280),c
 37015   01897E  D007               	goto	l8519
 37016   018980  D7C6               	goto	u9340
 37017   018982                     l8517:
 37018   018982  90D8               	bcf	status,0,c
 37019   018984  3601               	rlcf	___fltol@f1^(0+1280),f,c
 37020   018986  3602               	rlcf	(___fltol@f1+1)^(0+1280),f,c
 37021   018988  3603               	rlcf	(___fltol@f1+2)^(0+1280),f,c
 37022   01898A  3604               	rlcf	(___fltol@f1+3)^(0+1280),f,c
 37023   01898C  060A               	decf	___fltol@exp1^(0+1280),f,c
 37024   01898E                     l8519:
 37025   01898E  500A               	movf	___fltol@exp1^(0+1280),w,c
 37026   018990  A4D8               	btfss	status,2,c
 37027   018992  D7F7               	goto	l8517
 37028   018994                     u9390:
 37029   018994  5009               	movf	___fltol@sign1^(0+1280),w,c
 37030   018996  B4D8               	btfsc	status,2,c
 37031   018998  D008               	goto	l8525
 37032   01899A  1E04               	comf	(___fltol@f1+3)^(0+1280),f,c
 37033   01899C  1E03               	comf	(___fltol@f1+2)^(0+1280),f,c
 37034   01899E  1E02               	comf	(___fltol@f1+1)^(0+1280),f,c
 37035   0189A0  6C01               	negf	___fltol@f1^(0+1280),c
 37036   0189A2  0E00               	movlw	0
 37037   0189A4  2202               	addwfc	(___fltol@f1+1)^(0+1280),f,c
 37038   0189A6  2203               	addwfc	(___fltol@f1+2)^(0+1280),f,c
 37039   0189A8  2204               	addwfc	(___fltol@f1+3)^(0+1280),f,c
 37040   0189AA                     l8525:
 37041   0189AA  C501  F501         	movff	___fltol@f1,?___fltol
 37042   0189AE  C502  F502         	movff	___fltol@f1+1,?___fltol+1
 37043   0189B2  C503  F503         	movff	___fltol@f1+2,?___fltol+2
 37044   0189B6  C504  F504         	movff	___fltol@f1+3,?___fltol+3
 37045   0189BA  0012               	return		;funcret
 37046   0189BC                     __end_of___fltol:
 37047                           	callstack 0
 37048                           
 37049 ;; *************** function ___flsub *****************
 37050 ;; Defined at:
 37051 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 37052 ;; Parameters:    Size  Location     Type
 37053 ;;  b               4   25[COMRAM] long 
 37054 ;;  a               4   29[COMRAM] long 
 37055 ;; Auto vars:     Size  Location     Type
 37056 ;;		None
 37057 ;; Return value:  Size  Location     Type
 37058 ;;                  4   25[COMRAM] long 
 37059 ;; Registers used:
 37060 ;;		wreg, status,2, status,0, cstack
 37061 ;; Tracked objects:
 37062 ;;		On entry : 0/5
 37063 ;;		On exit  : 0/0
 37064 ;;		Unchanged: 0/0
 37065 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37066 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37069 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37070 ;;Total ram usage:        8 bytes
 37071 ;; Hardware stack levels used: 1
 37072 ;; Hardware stack levels required when called: 1
 37073 ;; This function calls:
 37074 ;;		___fladd
 37075 ;; This function is called by:
 37076 ;;		_efgtoa
 37077 ;; This function uses a non-reentrant model
 37078 ;;
 37079                           
 37080                           	psect	text90
 37081   019AD8                     __ptext90:
 37082                           	callstack 0
 37083   019AD8                     ___flsub:
 37084                           	callstack 120
 37085                           
 37086                           ;incstack = 0
 37087   019AD8  0E00               	movlw	0
 37088   019ADA  1A1E               	xorwf	___flsub@a^(0+1280),f,c
 37089   019ADC  0E00               	movlw	0
 37090   019ADE  1A1F               	xorwf	(___flsub@a+1)^(0+1280),f,c
 37091   019AE0  0E00               	movlw	0
 37092   019AE2  1A20               	xorwf	(___flsub@a+2)^(0+1280),f,c
 37093   019AE4  0E80               	movlw	128
 37094   019AE6  1A21               	xorwf	(___flsub@a+3)^(0+1280),f,c
 37095   019AE8  C51A  F501         	movff	___flsub@b,___fladd@b
 37096   019AEC  C51B  F502         	movff	___flsub@b+1,___fladd@b+1
 37097   019AF0  C51C  F503         	movff	___flsub@b+2,___fladd@b+2
 37098   019AF4  C51D  F504         	movff	___flsub@b+3,___fladd@b+3
 37099   019AF8  C51E  F505         	movff	___flsub@a,___fladd@a
 37100   019AFC  C51F  F506         	movff	___flsub@a+1,___fladd@a+1
 37101   019B00  C520  F507         	movff	___flsub@a+2,___fladd@a+2
 37102   019B04  C521  F508         	movff	___flsub@a+3,___fladd@a+3
 37103   019B08  ECAD  F0A3         	call	___fladd	;wreg free
 37104   019B0C  C501  F51A         	movff	?___fladd,?___flsub
 37105   019B10  C502  F51B         	movff	?___fladd+1,?___flsub+1
 37106   019B14  C503  F51C         	movff	?___fladd+2,?___flsub+2
 37107   019B18  C504  F51D         	movff	?___fladd+3,?___flsub+3
 37108   019B1C  0012               	return		;funcret
 37109   019B1E                     __end_of___flsub:
 37110                           	callstack 0
 37111                           
 37112 ;; *************** function ___fladd *****************
 37113 ;; Defined at:
 37114 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 37115 ;; Parameters:    Size  Location     Type
 37116 ;;  b               4    0[COMRAM] long 
 37117 ;;  a               4    4[COMRAM] long 
 37118 ;; Auto vars:     Size  Location     Type
 37119 ;;  grs             1   15[COMRAM] unsigned char 
 37120 ;;  bexp            1   14[COMRAM] unsigned char 
 37121 ;;  aexp            1   13[COMRAM] unsigned char 
 37122 ;;  signs           1   12[COMRAM] unsigned char 
 37123 ;; Return value:  Size  Location     Type
 37124 ;;                  4    0[COMRAM] unsigned char 
 37125 ;; Registers used:
 37126 ;;		wreg, status,2, status,0
 37127 ;; Tracked objects:
 37128 ;;		On entry : 0/5
 37129 ;;		On exit  : 0/0
 37130 ;;		Unchanged: 0/0
 37131 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37132 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37134 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37135 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37136 ;;Total ram usage:       16 bytes
 37137 ;; Hardware stack levels used: 1
 37138 ;; This function calls:
 37139 ;;		Nothing
 37140 ;; This function is called by:
 37141 ;;		___flsub
 37142 ;;		_efgtoa
 37143 ;; This function uses a non-reentrant model
 37144 ;;
 37145                           
 37146                           	psect	text91
 37147   01475A                     __ptext91:
 37148                           	callstack 0
 37149   01475A                     ___fladd:
 37150                           	callstack 120
 37151                           
 37152                           ;incstack = 0
 37153   01475A  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 37154   01475C  0B80               	andlw	128
 37155   01475E  6E0D               	movwf	___fladd@signs^(0+1280),c
 37156   014760  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 37157   014762  2404               	addwf	(___fladd@b+3)^(0+1280),w,c
 37158   014764  6E0F               	movwf	___fladd@bexp^(0+1280),c
 37159   014766  BE03               	btfsc	(___fladd@b+2)^(0+1280),7,c
 37160   014768  800F               	bsf	___fladd@bexp^(0+1280),0,c
 37161   01476A  500F               	movf	___fladd@bexp^(0+1280),w,c
 37162   01476C  B4D8               	btfsc	status,2,c
 37163   01476E  D00D               	goto	l7869
 37164   014770  280F               	incf	___fladd@bexp^(0+1280),w,c
 37165   014772  A4D8               	btfss	status,2,c
 37166   014774  D008               	goto	l7865
 37167   014776  0E00               	movlw	0
 37168   014778  6E01               	movwf	___fladd@b^(0+1280),c
 37169   01477A  0E00               	movlw	0
 37170   01477C  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 37171   01477E  0E00               	movlw	0
 37172   014780  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 37173   014782  0E00               	movlw	0
 37174   014784  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37175   014786                     l7865:
 37176   014786  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
 37177   014788  D006               	goto	L27
 37178   01478A                     l7869:
 37179   01478A  0E00               	movlw	0
 37180   01478C  6E01               	movwf	___fladd@b^(0+1280),c
 37181   01478E  0E00               	movlw	0
 37182   014790  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 37183   014792  0E00               	movlw	0
 37184   014794  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 37185   014796                     L27:
 37186   014796  0E00               	movlw	0
 37187   014798  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37188   01479A  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 37189   01479C  0B80               	andlw	128
 37190   01479E  6E0E               	movwf	___fladd@aexp^(0+1280),c
 37191   0147A0  500D               	movf	___fladd@signs^(0+1280),w,c
 37192   0147A2  180E               	xorwf	___fladd@aexp^(0+1280),w,c
 37193   0147A4  A4D8               	btfss	status,2,c
 37194   0147A6  8C0D               	bsf	___fladd@signs^(0+1280),6,c
 37195   0147A8  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 37196   0147AA  2408               	addwf	(___fladd@a+3)^(0+1280),w,c
 37197   0147AC  6E0E               	movwf	___fladd@aexp^(0+1280),c
 37198   0147AE  BE07               	btfsc	(___fladd@a+2)^(0+1280),7,c
 37199   0147B0  800E               	bsf	___fladd@aexp^(0+1280),0,c
 37200   0147B2  500E               	movf	___fladd@aexp^(0+1280),w,c
 37201   0147B4  B4D8               	btfsc	status,2,c
 37202   0147B6  D00D               	goto	l7893
 37203   0147B8  280E               	incf	___fladd@aexp^(0+1280),w,c
 37204   0147BA  A4D8               	btfss	status,2,c
 37205   0147BC  D008               	goto	l7889
 37206   0147BE  0E00               	movlw	0
 37207   0147C0  6E05               	movwf	___fladd@a^(0+1280),c
 37208   0147C2  0E00               	movlw	0
 37209   0147C4  6E06               	movwf	(___fladd@a+1)^(0+1280),c
 37210   0147C6  0E00               	movlw	0
 37211   0147C8  6E07               	movwf	(___fladd@a+2)^(0+1280),c
 37212   0147CA  0E00               	movlw	0
 37213   0147CC  6E08               	movwf	(___fladd@a+3)^(0+1280),c
 37214   0147CE                     l7889:
 37215   0147CE  8E07               	bsf	(___fladd@a+2)^(0+1280),7,c
 37216   0147D0  D006               	goto	L28
 37217   0147D2                     l7893:
 37218   0147D2  0E00               	movlw	0
 37219   0147D4  6E05               	movwf	___fladd@a^(0+1280),c
 37220   0147D6  0E00               	movlw	0
 37221   0147D8  6E06               	movwf	(___fladd@a+1)^(0+1280),c
 37222   0147DA  0E00               	movlw	0
 37223   0147DC  6E07               	movwf	(___fladd@a+2)^(0+1280),c
 37224   0147DE                     L28:
 37225   0147DE  0E00               	movlw	0
 37226   0147E0  6E08               	movwf	(___fladd@a+3)^(0+1280),c
 37227   0147E2  500F               	movf	___fladd@bexp^(0+1280),w,c
 37228   0147E4  5C0E               	subwf	___fladd@aexp^(0+1280),w,c
 37229   0147E6  B0D8               	btfsc	status,0,c
 37230   0147E8  D022               	goto	l7931
 37231   0147EA  AC0D               	btfss	___fladd@signs^(0+1280),6,c
 37232   0147EC  D002               	goto	l7901
 37233   0147EE  0E80               	movlw	128
 37234   0147F0  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
 37235   0147F2                     l7901:
 37236   0147F2  C50F  F510         	movff	___fladd@bexp,___fladd@grs
 37237   0147F6  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
 37238   0147FA  C510  F50E         	movff	___fladd@grs,___fladd@aexp
 37239   0147FE  C501  F510         	movff	___fladd@b,___fladd@grs
 37240   014802  C505  F501         	movff	___fladd@a,___fladd@b
 37241   014806  C510  F505         	movff	___fladd@grs,___fladd@a
 37242   01480A  C502  F510         	movff	___fladd@b+1,___fladd@grs
 37243   01480E  C506  F502         	movff	___fladd@a+1,___fladd@b+1
 37244   014812  C510  F506         	movff	___fladd@grs,___fladd@a+1
 37245   014816  C503  F510         	movff	___fladd@b+2,___fladd@grs
 37246   01481A  C507  F503         	movff	___fladd@a+2,___fladd@b+2
 37247   01481E  C510  F507         	movff	___fladd@grs,___fladd@a+2
 37248   014822  C504  F510         	movff	___fladd@b+3,___fladd@grs
 37249   014826  C508  F504         	movff	___fladd@a+3,___fladd@b+3
 37250   01482A  C510  F508         	movff	___fladd@grs,___fladd@a+3
 37251   01482E                     l7931:
 37252   01482E  0E00               	movlw	0
 37253   014830  6E10               	movwf	___fladd@grs^(0+1280),c
 37254   014832  500F               	movf	___fladd@bexp^(0+1280),w,c
 37255   014834  C50E  F509         	movff	___fladd@aexp,??___fladd
 37256   014838  6A0A               	clrf	(??___fladd+1)^(0+1280),c
 37257   01483A  5E09               	subwf	??___fladd^(0+1280),f,c
 37258   01483C  0E00               	movlw	0
 37259   01483E  5A0A               	subwfb	(??___fladd+1)^(0+1280),f,c
 37260   014840  BE0A               	btfsc	(??___fladd+1)^(0+1280),7,c
 37261   014842  D02C               	goto	l2237
 37262   014844  500A               	movf	(??___fladd+1)^(0+1280),w,c
 37263   014846  E104               	bnz	u8390
 37264   014848  0E1A               	movlw	26
 37265   01484A  5C09               	subwf	??___fladd^(0+1280),w,c
 37266   01484C  A0D8               	btfss	status,0,c
 37267   01484E  D026               	goto	l2237
 37268   014850                     u8390:
 37269   014850  5001               	movf	___fladd@b^(0+1280),w,c
 37270   014852  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
 37271   014854  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
 37272   014856  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
 37273   014858  B4D8               	btfsc	status,2,c
 37274   01485A  D002               	goto	u8400
 37275   01485C  0E01               	movlw	1
 37276   01485E  D001               	goto	u8410
 37277   014860                     u8400:
 37278   014860  0E00               	movlw	0
 37279   014862                     u8410:
 37280   014862  6E10               	movwf	___fladd@grs^(0+1280),c
 37281   014864  0E00               	movlw	0
 37282   014866  6E01               	movwf	___fladd@b^(0+1280),c
 37283   014868  0E00               	movlw	0
 37284   01486A  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 37285   01486C  0E00               	movlw	0
 37286   01486E  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 37287   014870  0E00               	movlw	0
 37288   014872  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37289   014874  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
 37290   014878  D015               	goto	u8440
 37291   01487A                     l2238:
 37292   01487A  A010               	btfss	___fladd@grs^(0+1280),0,c
 37293   01487C  D005               	goto	l7943
 37294   01487E  90D8               	bcf	status,0,c
 37295   014880  3010               	rrcf	___fladd@grs^(0+1280),w,c
 37296   014882  0901               	iorlw	1
 37297   014884  6E10               	movwf	___fladd@grs^(0+1280),c
 37298   014886  D002               	goto	l7945
 37299   014888                     l7943:
 37300   014888  90D8               	bcf	status,0,c
 37301   01488A  3210               	rrcf	___fladd@grs^(0+1280),f,c
 37302   01488C                     l7945:
 37303   01488C  B001               	btfsc	___fladd@b^(0+1280),0,c
 37304   01488E  8E10               	bsf	___fladd@grs^(0+1280),7,c
 37305   014890  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
 37306   014892  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
 37307   014894  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
 37308   014896  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
 37309   014898  3201               	rrcf	___fladd@b^(0+1280),f,c
 37310   01489A  2A0F               	incf	___fladd@bexp^(0+1280),f,c
 37311   01489C                     l2237:
 37312   01489C  500E               	movf	___fladd@aexp^(0+1280),w,c
 37313   01489E  5C0F               	subwf	___fladd@bexp^(0+1280),w,c
 37314   0148A0  A0D8               	btfss	status,0,c
 37315   0148A2  D7EB               	goto	l2238
 37316   0148A4                     u8440:
 37317   0148A4  BC0D               	btfsc	___fladd@signs^(0+1280),6,c
 37318   0148A6  D028               	goto	l7977
 37319   0148A8  500F               	movf	___fladd@bexp^(0+1280),w,c
 37320   0148AA  A4D8               	btfss	status,2,c
 37321   0148AC  D009               	goto	l7959
 37322   0148AE  0E00               	movlw	0
 37323   0148B0  6E01               	movwf	?___fladd^(0+1280),c
 37324   0148B2  0E00               	movlw	0
 37325   0148B4  6E02               	movwf	(?___fladd+1)^(0+1280),c
 37326   0148B6  0E00               	movlw	0
 37327   0148B8  6E03               	movwf	(?___fladd+2)^(0+1280),c
 37328   0148BA  0E00               	movlw	0
 37329   0148BC  6E04               	movwf	(?___fladd+3)^(0+1280),c
 37330   0148BE  0012               	return	
 37331   0148C0                     l7959:
 37332   0148C0  5005               	movf	___fladd@a^(0+1280),w,c
 37333   0148C2  2601               	addwf	___fladd@b^(0+1280),f,c
 37334   0148C4  5006               	movf	(___fladd@a+1)^(0+1280),w,c
 37335   0148C6  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
 37336   0148C8  5007               	movf	(___fladd@a+2)^(0+1280),w,c
 37337   0148CA  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
 37338   0148CC  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 37339   0148CE  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
 37340   0148D0  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
 37341   0148D2  D071               	goto	u8570
 37342   0148D4  A010               	btfss	___fladd@grs^(0+1280),0,c
 37343   0148D6  D005               	goto	l7967
 37344   0148D8  90D8               	bcf	status,0,c
 37345   0148DA  3010               	rrcf	___fladd@grs^(0+1280),w,c
 37346   0148DC  0901               	iorlw	1
 37347   0148DE  6E10               	movwf	___fladd@grs^(0+1280),c
 37348   0148E0  D002               	goto	l7969
 37349   0148E2                     l7967:
 37350   0148E2  90D8               	bcf	status,0,c
 37351   0148E4  3210               	rrcf	___fladd@grs^(0+1280),f,c
 37352   0148E6                     l7969:
 37353   0148E6  B001               	btfsc	___fladd@b^(0+1280),0,c
 37354   0148E8  8E10               	bsf	___fladd@grs^(0+1280),7,c
 37355   0148EA  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
 37356   0148EC  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
 37357   0148EE  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
 37358   0148F0  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
 37359   0148F2  3201               	rrcf	___fladd@b^(0+1280),f,c
 37360   0148F4  2A0F               	incf	___fladd@bexp^(0+1280),f,c
 37361   0148F6  D05F               	goto	u8570
 37362   0148F8                     l7977:
 37363   0148F8  5005               	movf	___fladd@a^(0+1280),w,c
 37364   0148FA  5C01               	subwf	___fladd@b^(0+1280),w,c
 37365   0148FC  5006               	movf	(___fladd@a+1)^(0+1280),w,c
 37366   0148FE  5802               	subwfb	(___fladd@b+1)^(0+1280),w,c
 37367   014900  5007               	movf	(___fladd@a+2)^(0+1280),w,c
 37368   014902  5803               	subwfb	(___fladd@b+2)^(0+1280),w,c
 37369   014904  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 37370   014906  0A80               	xorlw	128
 37371   014908  6E09               	movwf	??___fladd^(0+1280),c
 37372   01490A  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 37373   01490C  0A80               	xorlw	128
 37374   01490E  5809               	subwfb	??___fladd^(0+1280),w,c
 37375   014910  B0D8               	btfsc	status,0,c
 37376   014912  D025               	goto	l7987
 37377   014914  5001               	movf	___fladd@b^(0+1280),w,c
 37378   014916  5C05               	subwf	___fladd@a^(0+1280),w,c
 37379   014918  6E09               	movwf	??___fladd^(0+1280),c
 37380   01491A  5002               	movf	(___fladd@b+1)^(0+1280),w,c
 37381   01491C  5806               	subwfb	(___fladd@a+1)^(0+1280),w,c
 37382   01491E  6E0A               	movwf	(??___fladd+1)^(0+1280),c
 37383   014920  5003               	movf	(___fladd@b+2)^(0+1280),w,c
 37384   014922  5807               	subwfb	(___fladd@a+2)^(0+1280),w,c
 37385   014924  6E0B               	movwf	(??___fladd+2)^(0+1280),c
 37386   014926  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 37387   014928  5808               	subwfb	(___fladd@a+3)^(0+1280),w,c
 37388   01492A  6E0C               	movwf	(??___fladd+3)^(0+1280),c
 37389   01492C  0EFF               	movlw	255
 37390   01492E  2409               	addwf	??___fladd^(0+1280),w,c
 37391   014930  6E01               	movwf	___fladd@b^(0+1280),c
 37392   014932  0EFF               	movlw	255
 37393   014934  200A               	addwfc	(??___fladd+1)^(0+1280),w,c
 37394   014936  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 37395   014938  0EFF               	movlw	255
 37396   01493A  200B               	addwfc	(??___fladd+2)^(0+1280),w,c
 37397   01493C  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 37398   01493E  0EFF               	movlw	255
 37399   014940  200C               	addwfc	(??___fladd+3)^(0+1280),w,c
 37400   014942  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37401   014944  0E80               	movlw	128
 37402   014946  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
 37403   014948  6C10               	negf	___fladd@grs^(0+1280),c
 37404   01494A  5010               	movf	___fladd@grs^(0+1280),w,c
 37405   01494C  A4D8               	btfss	status,2,c
 37406   01494E  D00F               	goto	l2253
 37407   014950  0E01               	movlw	1
 37408   014952  2601               	addwf	___fladd@b^(0+1280),f,c
 37409   014954  0E00               	movlw	0
 37410   014956  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
 37411   014958  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
 37412   01495A  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
 37413   01495C  D008               	goto	l2253
 37414   01495E                     l7987:
 37415   01495E  5005               	movf	___fladd@a^(0+1280),w,c
 37416   014960  5E01               	subwf	___fladd@b^(0+1280),f,c
 37417   014962  5006               	movf	(___fladd@a+1)^(0+1280),w,c
 37418   014964  5A02               	subwfb	(___fladd@b+1)^(0+1280),f,c
 37419   014966  5007               	movf	(___fladd@a+2)^(0+1280),w,c
 37420   014968  5A03               	subwfb	(___fladd@b+2)^(0+1280),f,c
 37421   01496A  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 37422   01496C  5A04               	subwfb	(___fladd@b+3)^(0+1280),f,c
 37423   01496E                     l2253:
 37424   01496E  5001               	movf	___fladd@b^(0+1280),w,c
 37425   014970  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
 37426   014972  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
 37427   014974  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
 37428   014976  A4D8               	btfss	status,2,c
 37429   014978  D01C               	goto	l8011
 37430   01497A  5010               	movf	___fladd@grs^(0+1280),w,c
 37431   01497C  A4D8               	btfss	status,2,c
 37432   01497E  D019               	goto	l8011
 37433   014980  0E00               	movlw	0
 37434   014982  6E01               	movwf	?___fladd^(0+1280),c
 37435   014984  0E00               	movlw	0
 37436   014986  6E02               	movwf	(?___fladd+1)^(0+1280),c
 37437   014988  0E00               	movlw	0
 37438   01498A  6E03               	movwf	(?___fladd+2)^(0+1280),c
 37439   01498C  0E00               	movlw	0
 37440   01498E  6E04               	movwf	(?___fladd+3)^(0+1280),c
 37441   014990  0012               	return	
 37442   014992                     l7995:
 37443   014992  90D8               	bcf	status,0,c
 37444   014994  3601               	rlcf	___fladd@b^(0+1280),f,c
 37445   014996  3602               	rlcf	(___fladd@b+1)^(0+1280),f,c
 37446   014998  3603               	rlcf	(___fladd@b+2)^(0+1280),f,c
 37447   01499A  3604               	rlcf	(___fladd@b+3)^(0+1280),f,c
 37448   01499C  BE10               	btfsc	___fladd@grs^(0+1280),7,c
 37449   01499E  8001               	bsf	___fladd@b^(0+1280),0,c
 37450   0149A0  A010               	btfss	___fladd@grs^(0+1280),0,c
 37451   0149A2  D002               	goto	l8005
 37452   0149A4  80D8               	bsf	status,0,c
 37453   0149A6  D001               	goto	L29
 37454   0149A8                     l8005:
 37455   0149A8  90D8               	bcf	status,0,c
 37456   0149AA                     L29:
 37457   0149AA  3610               	rlcf	___fladd@grs^(0+1280),f,c
 37458   0149AC  500F               	movf	___fladd@bexp^(0+1280),w,c
 37459   0149AE  A4D8               	btfss	status,2,c
 37460   0149B0  060F               	decf	___fladd@bexp^(0+1280),f,c
 37461   0149B2                     l8011:
 37462   0149B2  AE03               	btfss	(___fladd@b+2)^(0+1280),7,c
 37463   0149B4  D7EE               	goto	l7995
 37464   0149B6                     u8570:
 37465   0149B6  0E00               	movlw	0
 37466   0149B8  6E0E               	movwf	___fladd@aexp^(0+1280),c
 37467   0149BA  AE10               	btfss	___fladd@grs^(0+1280),7,c
 37468   0149BC  D00B               	goto	l2262
 37469   0149BE  C510  F509         	movff	___fladd@grs,??___fladd
 37470   0149C2  0E7F               	movlw	127
 37471   0149C4  1609               	andwf	??___fladd^(0+1280),f,c
 37472   0149C6  B4D8               	btfsc	status,2,c
 37473   0149C8  D003               	goto	l2263
 37474   0149CA                     u8590:
 37475   0149CA  0E01               	movlw	1
 37476   0149CC  6E0E               	movwf	___fladd@aexp^(0+1280),c
 37477   0149CE  D002               	goto	l2262
 37478   0149D0                     l2263:
 37479   0149D0  B001               	btfsc	___fladd@b^(0+1280),0,c
 37480   0149D2  D7FB               	goto	u8590
 37481   0149D4                     l2262:
 37482   0149D4  500E               	movf	___fladd@aexp^(0+1280),w,c
 37483   0149D6  B4D8               	btfsc	status,2,c
 37484   0149D8  D020               	goto	l8031
 37485   0149DA  0E01               	movlw	1
 37486   0149DC  2601               	addwf	___fladd@b^(0+1280),f,c
 37487   0149DE  0E00               	movlw	0
 37488   0149E0  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
 37489   0149E2  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
 37490   0149E4  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
 37491   0149E6  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
 37492   0149E8  D018               	goto	l8031
 37493   0149EA  C501  F509         	movff	___fladd@b,??___fladd
 37494   0149EE  C502  F50A         	movff	___fladd@b+1,??___fladd+1
 37495   0149F2  C503  F50B         	movff	___fladd@b+2,??___fladd+2
 37496   0149F6  C504  F50C         	movff	___fladd@b+3,??___fladd+3
 37497   0149FA  340C               	rlcf	(??___fladd+3)^(0+1280),w,c
 37498   0149FC  320C               	rrcf	(??___fladd+3)^(0+1280),f,c
 37499   0149FE  320B               	rrcf	(??___fladd+2)^(0+1280),f,c
 37500   014A00  320A               	rrcf	(??___fladd+1)^(0+1280),f,c
 37501   014A02  3209               	rrcf	??___fladd^(0+1280),f,c
 37502   014A04  C509  F501         	movff	??___fladd,___fladd@b
 37503   014A08  C50A  F502         	movff	??___fladd+1,___fladd@b+1
 37504   014A0C  C50B  F503         	movff	??___fladd+2,___fladd@b+2
 37505   014A10  C50C  F504         	movff	??___fladd+3,___fladd@b+3
 37506   014A14  280F               	incf	___fladd@bexp^(0+1280),w,c
 37507   014A16  A4D8               	btfss	status,2,c
 37508   014A18  2A0F               	incf	___fladd@bexp^(0+1280),f,c
 37509   014A1A                     l8031:
 37510   014A1A  280F               	incf	___fladd@bexp^(0+1280),w,c
 37511   014A1C  B4D8               	btfsc	status,2,c
 37512   014A1E  D003               	goto	u8650
 37513   014A20  500F               	movf	___fladd@bexp^(0+1280),w,c
 37514   014A22  A4D8               	btfss	status,2,c
 37515   014A24  D00D               	goto	l8039
 37516   014A26                     u8650:
 37517   014A26  0E00               	movlw	0
 37518   014A28  6E01               	movwf	___fladd@b^(0+1280),c
 37519   014A2A  0E00               	movlw	0
 37520   014A2C  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 37521   014A2E  0E00               	movlw	0
 37522   014A30  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 37523   014A32  0E00               	movlw	0
 37524   014A34  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37525   014A36  500F               	movf	___fladd@bexp^(0+1280),w,c
 37526   014A38  A4D8               	btfss	status,2,c
 37527   014A3A  D002               	goto	l8039
 37528   014A3C  0E00               	movlw	0
 37529   014A3E  6E0D               	movwf	___fladd@signs^(0+1280),c
 37530   014A40                     l8039:
 37531   014A40  A00F               	btfss	___fladd@bexp^(0+1280),0,c
 37532   014A42  D002               	goto	l8043
 37533   014A44  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
 37534   014A46  D001               	goto	l8045
 37535   014A48                     l8043:
 37536   014A48  9E03               	bcf	(___fladd@b+2)^(0+1280),7,c
 37537   014A4A                     l8045:
 37538   014A4A  90D8               	bcf	status,0,c
 37539   014A4C  300F               	rrcf	___fladd@bexp^(0+1280),w,c
 37540   014A4E  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37541   014A50  BE0D               	btfsc	___fladd@signs^(0+1280),7,c
 37542   014A52  8E04               	bsf	(___fladd@b+3)^(0+1280),7,c
 37543   014A54  C501  F501         	movff	___fladd@b,?___fladd
 37544   014A58  C502  F502         	movff	___fladd@b+1,?___fladd+1
 37545   014A5C  C503  F503         	movff	___fladd@b+2,?___fladd+2
 37546   014A60  C504  F504         	movff	___fladd@b+3,?___fladd+3
 37547   014A64  0012               	return		;funcret
 37548   014A66                     __end_of___fladd:
 37549                           	callstack 0
 37550                           
 37551 ;; *************** function ___flneg *****************
 37552 ;; Defined at:
 37553 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
 37554 ;; Parameters:    Size  Location     Type
 37555 ;;  f1              4    0[COMRAM] unsigned char 
 37556 ;; Auto vars:     Size  Location     Type
 37557 ;;		None
 37558 ;; Return value:  Size  Location     Type
 37559 ;;                  4    0[COMRAM] unsigned char 
 37560 ;; Registers used:
 37561 ;;		wreg, status,2, status,0
 37562 ;; Tracked objects:
 37563 ;;		On entry : 3F/5
 37564 ;;		On exit  : 3F/5
 37565 ;;		Unchanged: 3E/0
 37566 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37570 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37571 ;;Total ram usage:        4 bytes
 37572 ;; Hardware stack levels used: 1
 37573 ;; This function calls:
 37574 ;;		Nothing
 37575 ;; This function is called by:
 37576 ;;		_efgtoa
 37577 ;; This function uses a non-reentrant model
 37578 ;;
 37579                           
 37580                           	psect	text92
 37581   019DA8                     __ptext92:
 37582                           	callstack 0
 37583   019DA8                     ___flneg:
 37584                           	callstack 121
 37585                           
 37586                           ; BSR set to: 5
 37587                           
 37588                           ;incstack = 0
 37589   019DA8  5001               	movf	___flneg@f1^(0+1280),w,c
 37590   019DAA  1002               	iorwf	(___flneg@f1+1)^(0+1280),w,c
 37591   019DAC  1003               	iorwf	(___flneg@f1+2)^(0+1280),w,c
 37592   019DAE  1004               	iorwf	(___flneg@f1+3)^(0+1280),w,c
 37593   019DB0  B4D8               	btfsc	status,2,c
 37594   019DB2  D008               	goto	l8481
 37595                           
 37596                           ; BSR set to: 5
 37597   019DB4  0E00               	movlw	0
 37598   019DB6  1A01               	xorwf	___flneg@f1^(0+1280),f,c
 37599   019DB8  0E00               	movlw	0
 37600   019DBA  1A02               	xorwf	(___flneg@f1+1)^(0+1280),f,c
 37601   019DBC  0E00               	movlw	0
 37602   019DBE  1A03               	xorwf	(___flneg@f1+2)^(0+1280),f,c
 37603   019DC0  0E80               	movlw	128
 37604   019DC2  1A04               	xorwf	(___flneg@f1+3)^(0+1280),f,c
 37605   019DC4                     l8481:
 37606                           
 37607                           ; BSR set to: 5
 37608   019DC4  C501  F501         	movff	___flneg@f1,?___flneg
 37609   019DC8  C502  F502         	movff	___flneg@f1+1,?___flneg+1
 37610   019DCC  C503  F503         	movff	___flneg@f1+2,?___flneg+2
 37611   019DD0  C504  F504         	movff	___flneg@f1+3,?___flneg+3
 37612                           
 37613                           ; BSR set to: 5
 37614   019DD4  0012               	return		;funcret
 37615   019DD6                     __end_of___flneg:
 37616                           	callstack 0
 37617                           
 37618 ;; *************** function ___flmul *****************
 37619 ;; Defined at:
 37620 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
 37621 ;; Parameters:    Size  Location     Type
 37622 ;;  b               4    0[COMRAM] unsigned char 
 37623 ;;  a               4    4[COMRAM] unsigned char 
 37624 ;; Auto vars:     Size  Location     Type
 37625 ;;  prod            4   19[COMRAM] struct .
 37626 ;;  grs             4   14[COMRAM] unsigned long 
 37627 ;;  temp            2   23[COMRAM] struct .
 37628 ;;  bexp            1   18[COMRAM] unsigned char 
 37629 ;;  aexp            1   13[COMRAM] unsigned char 
 37630 ;;  sign            1   12[COMRAM] unsigned char 
 37631 ;; Return value:  Size  Location     Type
 37632 ;;                  4    0[COMRAM] unsigned char 
 37633 ;; Registers used:
 37634 ;;		wreg, status,2, status,0, prodl, prodh
 37635 ;; Tracked objects:
 37636 ;;		On entry : 0/5
 37637 ;;		On exit  : 0/0
 37638 ;;		Unchanged: 0/0
 37639 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37640 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37641 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37642 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37643 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37644 ;;Total ram usage:       25 bytes
 37645 ;; Hardware stack levels used: 1
 37646 ;; This function calls:
 37647 ;;		Nothing
 37648 ;; This function is called by:
 37649 ;;		_efgtoa
 37650 ;; This function uses a non-reentrant model
 37651 ;;
 37652                           
 37653                           	psect	text93
 37654   01442E                     __ptext93:
 37655                           	callstack 0
 37656   01442E                     ___flmul:
 37657                           	callstack 121
 37658                           
 37659                           ; BSR set to: 5
 37660                           ;incstack = 0
 37661   01442E  5004               	movf	(___flmul@b+3)^(0+1280),w,c
 37662   014430  0B80               	andlw	128
 37663   014432  6E0D               	movwf	___flmul@sign^(0+1280),c
 37664   014434  5004               	movf	(___flmul@b+3)^(0+1280),w,c
 37665   014436  2404               	addwf	(___flmul@b+3)^(0+1280),w,c
 37666   014438  6E13               	movwf	___flmul@bexp^(0+1280),c
 37667   01443A  BE03               	btfsc	(___flmul@b+2)^(0+1280),7,c
 37668   01443C  8013               	bsf	___flmul@bexp^(0+1280),0,c
 37669   01443E  5013               	movf	___flmul@bexp^(0+1280),w,c
 37670   014440  B4D8               	btfsc	status,2,c
 37671   014442  D00D               	goto	l8317
 37672   014444  2813               	incf	___flmul@bexp^(0+1280),w,c
 37673   014446  A4D8               	btfss	status,2,c
 37674   014448  D008               	goto	l8315
 37675   01444A  0E00               	movlw	0
 37676   01444C  6E01               	movwf	___flmul@b^(0+1280),c
 37677   01444E  0E00               	movlw	0
 37678   014450  6E02               	movwf	(___flmul@b+1)^(0+1280),c
 37679   014452  0E00               	movlw	0
 37680   014454  6E03               	movwf	(___flmul@b+2)^(0+1280),c
 37681   014456  0E00               	movlw	0
 37682   014458  6E04               	movwf	(___flmul@b+3)^(0+1280),c
 37683   01445A                     l8315:
 37684   01445A  8E03               	bsf	(___flmul@b+2)^(0+1280),7,c
 37685   01445C  D008               	goto	l8319
 37686   01445E                     l8317:
 37687   01445E  0E00               	movlw	0
 37688   014460  6E01               	movwf	___flmul@b^(0+1280),c
 37689   014462  0E00               	movlw	0
 37690   014464  6E02               	movwf	(___flmul@b+1)^(0+1280),c
 37691   014466  0E00               	movlw	0
 37692   014468  6E03               	movwf	(___flmul@b+2)^(0+1280),c
 37693   01446A  0E00               	movlw	0
 37694   01446C  6E04               	movwf	(___flmul@b+3)^(0+1280),c
 37695   01446E                     l8319:
 37696   01446E  5008               	movf	(___flmul@a+3)^(0+1280),w,c
 37697   014470  0B80               	andlw	128
 37698   014472  1A0D               	xorwf	___flmul@sign^(0+1280),f,c
 37699   014474  5008               	movf	(___flmul@a+3)^(0+1280),w,c
 37700   014476  2408               	addwf	(___flmul@a+3)^(0+1280),w,c
 37701   014478  6E0E               	movwf	___flmul@aexp^(0+1280),c
 37702   01447A  BE07               	btfsc	(___flmul@a+2)^(0+1280),7,c
 37703   01447C  800E               	bsf	___flmul@aexp^(0+1280),0,c
 37704   01447E  500E               	movf	___flmul@aexp^(0+1280),w,c
 37705   014480  B4D8               	btfsc	status,2,c
 37706   014482  D00D               	goto	l8335
 37707   014484  280E               	incf	___flmul@aexp^(0+1280),w,c
 37708   014486  A4D8               	btfss	status,2,c
 37709   014488  D008               	goto	l8333
 37710   01448A  0E00               	movlw	0
 37711   01448C  6E05               	movwf	___flmul@a^(0+1280),c
 37712   01448E  0E00               	movlw	0
 37713   014490  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 37714   014492  0E00               	movlw	0
 37715   014494  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 37716   014496  0E00               	movlw	0
 37717   014498  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 37718   01449A                     l8333:
 37719   01449A  8E07               	bsf	(___flmul@a+2)^(0+1280),7,c
 37720   01449C  D008               	goto	l2322
 37721   01449E                     l8335:
 37722   01449E  0E00               	movlw	0
 37723   0144A0  6E05               	movwf	___flmul@a^(0+1280),c
 37724   0144A2  0E00               	movlw	0
 37725   0144A4  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 37726   0144A6  0E00               	movlw	0
 37727   0144A8  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 37728   0144AA  0E00               	movlw	0
 37729   0144AC  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 37730   0144AE                     l2322:
 37731   0144AE  500E               	movf	___flmul@aexp^(0+1280),w,c
 37732   0144B0  B4D8               	btfsc	status,2,c
 37733   0144B2  D003               	goto	u9140
 37734   0144B4  5013               	movf	___flmul@bexp^(0+1280),w,c
 37735   0144B6  A4D8               	btfss	status,2,c
 37736   0144B8  D009               	goto	l8343
 37737   0144BA                     u9140:
 37738   0144BA  0E00               	movlw	0
 37739   0144BC  6E01               	movwf	?___flmul^(0+1280),c
 37740   0144BE  0E00               	movlw	0
 37741   0144C0  6E02               	movwf	(?___flmul+1)^(0+1280),c
 37742   0144C2  0E00               	movlw	0
 37743   0144C4  6E03               	movwf	(?___flmul+2)^(0+1280),c
 37744   0144C6  0E00               	movlw	0
 37745   0144C8  6E04               	movwf	(?___flmul+3)^(0+1280),c
 37746   0144CA  0012               	return	
 37747   0144CC                     l8343:
 37748   0144CC  5007               	movf	(___flmul@a+2)^(0+1280),w,c
 37749   0144CE  0201               	mulwf	___flmul@b^(0+1280),c
 37750   0144D0  C4F3 F518          	movff	prodl,___flmul@temp
 37751   0144D4  C4F4 F519          	movff	prodh,___flmul@temp+1
 37752   0144D8  5018               	movf	___flmul@temp^(0+1280),w,c
 37753   0144DA  6E0F               	movwf	___flmul@grs^(0+1280),c
 37754   0144DC  6A10               	clrf	(___flmul@grs+1)^(0+1280),c
 37755   0144DE  6A11               	clrf	(___flmul@grs+2)^(0+1280),c
 37756   0144E0  6A12               	clrf	(___flmul@grs+3)^(0+1280),c
 37757   0144E2  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37758   0144E4  6E14               	movwf	___flmul@prod^(0+1280),c
 37759   0144E6  6A15               	clrf	(___flmul@prod+1)^(0+1280),c
 37760   0144E8  6A16               	clrf	(___flmul@prod+2)^(0+1280),c
 37761   0144EA  6A17               	clrf	(___flmul@prod+3)^(0+1280),c
 37762   0144EC  5006               	movf	(___flmul@a+1)^(0+1280),w,c
 37763   0144EE  0202               	mulwf	(___flmul@b+1)^(0+1280),c
 37764   0144F0  C4F3 F518          	movff	prodl,___flmul@temp
 37765   0144F4  C4F4 F519          	movff	prodh,___flmul@temp+1
 37766   0144F8  5018               	movf	___flmul@temp^(0+1280),w,c
 37767   0144FA  260F               	addwf	___flmul@grs^(0+1280),f,c
 37768   0144FC  0E00               	movlw	0
 37769   0144FE  2210               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 37770   014500  2211               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 37771   014502  2212               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 37772   014504  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37773   014506  2614               	addwf	___flmul@prod^(0+1280),f,c
 37774   014508  0E00               	movlw	0
 37775   01450A  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37776   01450C  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37777   01450E  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37778   014510  5005               	movf	___flmul@a^(0+1280),w,c
 37779   014512  0203               	mulwf	(___flmul@b+2)^(0+1280),c
 37780   014514  C4F3 F518          	movff	prodl,___flmul@temp
 37781   014518  C4F4 F519          	movff	prodh,___flmul@temp+1
 37782   01451C  5018               	movf	___flmul@temp^(0+1280),w,c
 37783   01451E  260F               	addwf	___flmul@grs^(0+1280),f,c
 37784   014520  0E00               	movlw	0
 37785   014522  2210               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 37786   014524  2211               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 37787   014526  2212               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 37788   014528  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37789   01452A  2614               	addwf	___flmul@prod^(0+1280),f,c
 37790   01452C  0E00               	movlw	0
 37791   01452E  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37792   014530  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37793   014532  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37794   014534  C511  F512         	movff	___flmul@grs+2,___flmul@grs+3
 37795   014538  C510  F511         	movff	___flmul@grs+1,___flmul@grs+2
 37796   01453C  C50F  F510         	movff	___flmul@grs,___flmul@grs+1
 37797   014540  6A0F               	clrf	___flmul@grs^(0+1280),c
 37798   014542  5005               	movf	___flmul@a^(0+1280),w,c
 37799   014544  0202               	mulwf	(___flmul@b+1)^(0+1280),c
 37800   014546  C4F3 F518          	movff	prodl,___flmul@temp
 37801   01454A  C4F4 F519          	movff	prodh,___flmul@temp+1
 37802   01454E  5018               	movf	___flmul@temp^(0+1280),w,c
 37803   014550  260F               	addwf	___flmul@grs^(0+1280),f,c
 37804   014552  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37805   014554  2210               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 37806   014556  0E00               	movlw	0
 37807   014558  2211               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 37808   01455A  0E00               	movlw	0
 37809   01455C  2212               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 37810   01455E  5006               	movf	(___flmul@a+1)^(0+1280),w,c
 37811   014560  0201               	mulwf	___flmul@b^(0+1280),c
 37812   014562  C4F3 F518          	movff	prodl,___flmul@temp
 37813   014566  C4F4 F519          	movff	prodh,___flmul@temp+1
 37814   01456A  5018               	movf	___flmul@temp^(0+1280),w,c
 37815   01456C  260F               	addwf	___flmul@grs^(0+1280),f,c
 37816   01456E  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37817   014570  2210               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 37818   014572  0E00               	movlw	0
 37819   014574  2211               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 37820   014576  0E00               	movlw	0
 37821   014578  2212               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 37822   01457A  C511  F512         	movff	___flmul@grs+2,___flmul@grs+3
 37823   01457E  C510  F511         	movff	___flmul@grs+1,___flmul@grs+2
 37824   014582  C50F  F510         	movff	___flmul@grs,___flmul@grs+1
 37825   014586  6A0F               	clrf	___flmul@grs^(0+1280),c
 37826   014588  5005               	movf	___flmul@a^(0+1280),w,c
 37827   01458A  0201               	mulwf	___flmul@b^(0+1280),c
 37828   01458C  C4F3 F518          	movff	prodl,___flmul@temp
 37829   014590  C4F4 F519          	movff	prodh,___flmul@temp+1
 37830   014594  5018               	movf	___flmul@temp^(0+1280),w,c
 37831   014596  260F               	addwf	___flmul@grs^(0+1280),f,c
 37832   014598  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37833   01459A  2210               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 37834   01459C  0E00               	movlw	0
 37835   01459E  2211               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 37836   0145A0  0E00               	movlw	0
 37837   0145A2  2212               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 37838   0145A4  5007               	movf	(___flmul@a+2)^(0+1280),w,c
 37839   0145A6  0202               	mulwf	(___flmul@b+1)^(0+1280),c
 37840   0145A8  C4F3 F518          	movff	prodl,___flmul@temp
 37841   0145AC  C4F4 F519          	movff	prodh,___flmul@temp+1
 37842   0145B0  5018               	movf	___flmul@temp^(0+1280),w,c
 37843   0145B2  2614               	addwf	___flmul@prod^(0+1280),f,c
 37844   0145B4  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37845   0145B6  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37846   0145B8  0E00               	movlw	0
 37847   0145BA  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37848   0145BC  0E00               	movlw	0
 37849   0145BE  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37850   0145C0  5006               	movf	(___flmul@a+1)^(0+1280),w,c
 37851   0145C2  0203               	mulwf	(___flmul@b+2)^(0+1280),c
 37852   0145C4  C4F3 F518          	movff	prodl,___flmul@temp
 37853   0145C8  C4F4 F519          	movff	prodh,___flmul@temp+1
 37854   0145CC  5018               	movf	___flmul@temp^(0+1280),w,c
 37855   0145CE  2614               	addwf	___flmul@prod^(0+1280),f,c
 37856   0145D0  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37857   0145D2  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37858   0145D4  0E00               	movlw	0
 37859   0145D6  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37860   0145D8  0E00               	movlw	0
 37861   0145DA  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37862   0145DC  5007               	movf	(___flmul@a+2)^(0+1280),w,c
 37863   0145DE  0203               	mulwf	(___flmul@b+2)^(0+1280),c
 37864   0145E0  C4F3 F518          	movff	prodl,___flmul@temp
 37865   0145E4  C4F4 F519          	movff	prodh,___flmul@temp+1
 37866   0145E8  5018               	movf	___flmul@temp^(0+1280),w,c
 37867   0145EA  6E09               	movwf	??___flmul^(0+1280),c
 37868   0145EC  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37869   0145EE  6E0A               	movwf	(??___flmul+1)^(0+1280),c
 37870   0145F0  6A0B               	clrf	(??___flmul+2)^(0+1280),c
 37871   0145F2  6A0C               	clrf	(??___flmul+3)^(0+1280),c
 37872   0145F4  C50B  F50C         	movff	??___flmul+2,??___flmul+3
 37873   0145F8  C50A  F50B         	movff	??___flmul+1,??___flmul+2
 37874   0145FC  C509  F50A         	movff	??___flmul,??___flmul+1
 37875   014600  6A09               	clrf	??___flmul^(0+1280),c
 37876   014602  5009               	movf	??___flmul^(0+1280),w,c
 37877   014604  2614               	addwf	___flmul@prod^(0+1280),f,c
 37878   014606  500A               	movf	(??___flmul+1)^(0+1280),w,c
 37879   014608  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37880   01460A  500B               	movf	(??___flmul+2)^(0+1280),w,c
 37881   01460C  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37882   01460E  500C               	movf	(??___flmul+3)^(0+1280),w,c
 37883   014610  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37884   014612  5012               	movf	(___flmul@grs+3)^(0+1280),w,c
 37885   014614  2614               	addwf	___flmul@prod^(0+1280),f,c
 37886   014616  0E00               	movlw	0
 37887   014618  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37888   01461A  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37889   01461C  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37890   01461E  C511  F512         	movff	___flmul@grs+2,___flmul@grs+3
 37891   014622  C510  F511         	movff	___flmul@grs+1,___flmul@grs+2
 37892   014626  C50F  F510         	movff	___flmul@grs,___flmul@grs+1
 37893   01462A  6A0F               	clrf	___flmul@grs^(0+1280),c
 37894   01462C  500E               	movf	___flmul@aexp^(0+1280),w,c
 37895   01462E  C513  F509         	movff	___flmul@bexp,??___flmul
 37896   014632  6A0A               	clrf	(??___flmul+1)^(0+1280),c
 37897   014634  2609               	addwf	??___flmul^(0+1280),f,c
 37898   014636  0E00               	movlw	0
 37899   014638  220A               	addwfc	(??___flmul+1)^(0+1280),f,c
 37900   01463A  0E82               	movlw	130
 37901   01463C  2409               	addwf	??___flmul^(0+1280),w,c
 37902   01463E  6E18               	movwf	___flmul@temp^(0+1280),c
 37903   014640  0EFF               	movlw	255
 37904   014642  200A               	addwfc	(??___flmul+1)^(0+1280),w,c
 37905   014644  6E19               	movwf	(___flmul@temp+1)^(0+1280),c
 37906   014646  D00F               	goto	l8391
 37907   014648                     l8385:
 37908   014648  90D8               	bcf	status,0,c
 37909   01464A  3614               	rlcf	___flmul@prod^(0+1280),f,c
 37910   01464C  3615               	rlcf	(___flmul@prod+1)^(0+1280),f,c
 37911   01464E  3616               	rlcf	(___flmul@prod+2)^(0+1280),f,c
 37912   014650  3617               	rlcf	(___flmul@prod+3)^(0+1280),f,c
 37913   014652  BE12               	btfsc	(___flmul@grs+3)^(0+1280),7,c
 37914   014654  8014               	bsf	___flmul@prod^(0+1280),0,c
 37915   014656  90D8               	bcf	status,0,c
 37916   014658  360F               	rlcf	___flmul@grs^(0+1280),f,c
 37917   01465A  3610               	rlcf	(___flmul@grs+1)^(0+1280),f,c
 37918   01465C  3611               	rlcf	(___flmul@grs+2)^(0+1280),f,c
 37919   01465E  3612               	rlcf	(___flmul@grs+3)^(0+1280),f,c
 37920   014660  0618               	decf	___flmul@temp^(0+1280),f,c
 37921   014662  A0D8               	btfss	status,0,c
 37922   014664  0619               	decf	(___flmul@temp+1)^(0+1280),f,c
 37923   014666                     l8391:
 37924   014666  AE16               	btfss	(___flmul@prod+2)^(0+1280),7,c
 37925   014668  D7EF               	goto	l8385
 37926   01466A  0E00               	movlw	0
 37927   01466C  6E0E               	movwf	___flmul@aexp^(0+1280),c
 37928   01466E  AE12               	btfss	(___flmul@grs+3)^(0+1280),7,c
 37929   014670  D017               	goto	l2331
 37930   014672  0EFF               	movlw	255
 37931   014674  140F               	andwf	___flmul@grs^(0+1280),w,c
 37932   014676  6E09               	movwf	??___flmul^(0+1280),c
 37933   014678  0EFF               	movlw	255
 37934   01467A  1410               	andwf	(___flmul@grs+1)^(0+1280),w,c
 37935   01467C  6E0A               	movwf	(??___flmul+1)^(0+1280),c
 37936   01467E  0EFF               	movlw	255
 37937   014680  1411               	andwf	(___flmul@grs+2)^(0+1280),w,c
 37938   014682  6E0B               	movwf	(??___flmul+2)^(0+1280),c
 37939   014684  0E7F               	movlw	127
 37940   014686  1412               	andwf	(___flmul@grs+3)^(0+1280),w,c
 37941   014688  6E0C               	movwf	(??___flmul+3)^(0+1280),c
 37942   01468A  5009               	movf	??___flmul^(0+1280),w,c
 37943   01468C  100A               	iorwf	(??___flmul+1)^(0+1280),w,c
 37944   01468E  100B               	iorwf	(??___flmul+2)^(0+1280),w,c
 37945   014690  100C               	iorwf	(??___flmul+3)^(0+1280),w,c
 37946   014692  B4D8               	btfsc	status,2,c
 37947   014694  D003               	goto	l2332
 37948   014696                     u9180:
 37949   014696  0E01               	movlw	1
 37950   014698  6E0E               	movwf	___flmul@aexp^(0+1280),c
 37951   01469A  D002               	goto	l2331
 37952   01469C                     l2332:
 37953   01469C  B014               	btfsc	___flmul@prod^(0+1280),0,c
 37954   01469E  D7FB               	goto	u9180
 37955   0146A0                     l2331:
 37956   0146A0  500E               	movf	___flmul@aexp^(0+1280),w,c
 37957   0146A2  B4D8               	btfsc	status,2,c
 37958   0146A4  D01F               	goto	l8411
 37959   0146A6  0E01               	movlw	1
 37960   0146A8  2614               	addwf	___flmul@prod^(0+1280),f,c
 37961   0146AA  0E00               	movlw	0
 37962   0146AC  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37963   0146AE  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37964   0146B0  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37965   0146B2  A017               	btfss	(___flmul@prod+3)^(0+1280),0,c
 37966   0146B4  D017               	goto	l8411
 37967   0146B6  C514  F509         	movff	___flmul@prod,??___flmul
 37968   0146BA  C515  F50A         	movff	___flmul@prod+1,??___flmul+1
 37969   0146BE  C516  F50B         	movff	___flmul@prod+2,??___flmul+2
 37970   0146C2  C517  F50C         	movff	___flmul@prod+3,??___flmul+3
 37971   0146C6  340C               	rlcf	(??___flmul+3)^(0+1280),w,c
 37972   0146C8  320C               	rrcf	(??___flmul+3)^(0+1280),f,c
 37973   0146CA  320B               	rrcf	(??___flmul+2)^(0+1280),f,c
 37974   0146CC  320A               	rrcf	(??___flmul+1)^(0+1280),f,c
 37975   0146CE  3209               	rrcf	??___flmul^(0+1280),f,c
 37976   0146D0  C509  F514         	movff	??___flmul,___flmul@prod
 37977   0146D4  C50A  F515         	movff	??___flmul+1,___flmul@prod+1
 37978   0146D8  C50B  F516         	movff	??___flmul+2,___flmul@prod+2
 37979   0146DC  C50C  F517         	movff	??___flmul+3,___flmul@prod+3
 37980   0146E0  4A18               	infsnz	___flmul@temp^(0+1280),f,c
 37981   0146E2  2A19               	incf	(___flmul@temp+1)^(0+1280),f,c
 37982   0146E4                     l8411:
 37983   0146E4  BE19               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 37984   0146E6  D00D               	goto	l8415
 37985   0146E8  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37986   0146EA  E103               	bnz	u9220
 37987   0146EC  2818               	incf	___flmul@temp^(0+1280),w,c
 37988   0146EE  A0D8               	btfss	status,0,c
 37989   0146F0  D008               	goto	l8415
 37990   0146F2                     u9220:
 37991   0146F2  0E00               	movlw	0
 37992   0146F4  6E14               	movwf	___flmul@prod^(0+1280),c
 37993   0146F6  0E00               	movlw	0
 37994   0146F8  6E15               	movwf	(___flmul@prod+1)^(0+1280),c
 37995   0146FA  0E80               	movlw	128
 37996   0146FC  6E16               	movwf	(___flmul@prod+2)^(0+1280),c
 37997   0146FE  0E7F               	movlw	127
 37998   014700  D020               	goto	L30
 37999   014702                     l8415:
 38000   014702  BE19               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 38001   014704  D005               	goto	u9230
 38002   014706  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 38003   014708  E10E               	bnz	l2339
 38004   01470A  0418               	decf	___flmul@temp^(0+1280),w,c
 38005   01470C  B0D8               	btfsc	status,0,c
 38006   01470E  D00B               	goto	l2339
 38007   014710                     u9230:
 38008   014710  0E00               	movlw	0
 38009   014712  6E14               	movwf	___flmul@prod^(0+1280),c
 38010   014714  0E00               	movlw	0
 38011   014716  6E15               	movwf	(___flmul@prod+1)^(0+1280),c
 38012   014718  0E00               	movlw	0
 38013   01471A  6E16               	movwf	(___flmul@prod+2)^(0+1280),c
 38014   01471C  0E00               	movlw	0
 38015   01471E  6E17               	movwf	(___flmul@prod+3)^(0+1280),c
 38016   014720  0E00               	movlw	0
 38017   014722  6E0D               	movwf	___flmul@sign^(0+1280),c
 38018   014724  D00F               	goto	l8427
 38019   014726                     l2339:
 38020   014726  C518  F513         	movff	___flmul@temp,___flmul@bexp
 38021   01472A  0EFF               	movlw	255
 38022   01472C  1614               	andwf	___flmul@prod^(0+1280),f,c
 38023   01472E  0EFF               	movlw	255
 38024   014730  1615               	andwf	(___flmul@prod+1)^(0+1280),f,c
 38025   014732  0E7F               	movlw	127
 38026   014734  1616               	andwf	(___flmul@prod+2)^(0+1280),f,c
 38027   014736  0E00               	movlw	0
 38028   014738  1617               	andwf	(___flmul@prod+3)^(0+1280),f,c
 38029   01473A  B013               	btfsc	___flmul@bexp^(0+1280),0,c
 38030   01473C  8E16               	bsf	(___flmul@prod+2)^(0+1280),7,c
 38031   01473E  90D8               	bcf	status,0,c
 38032   014740  3013               	rrcf	___flmul@bexp^(0+1280),w,c
 38033   014742                     L30:
 38034   014742  6E17               	movwf	(___flmul@prod+3)^(0+1280),c
 38035   014744                     l8427:
 38036   014744  500D               	movf	___flmul@sign^(0+1280),w,c
 38037   014746  1217               	iorwf	(___flmul@prod+3)^(0+1280),f,c
 38038   014748  C514  F501         	movff	___flmul@prod,?___flmul
 38039   01474C  C515  F502         	movff	___flmul@prod+1,?___flmul+1
 38040   014750  C516  F503         	movff	___flmul@prod+2,?___flmul+2
 38041   014754  C517  F504         	movff	___flmul@prod+3,?___flmul+3
 38042   014758  0012               	return		;funcret
 38043   01475A                     __end_of___flmul:
 38044                           	callstack 0
 38045                           
 38046 ;; *************** function ___flge *****************
 38047 ;; Defined at:
 38048 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
 38049 ;; Parameters:    Size  Location     Type
 38050 ;;  ff1             4   25[COMRAM] unsigned char 
 38051 ;;  ff2             4   29[COMRAM] unsigned char 
 38052 ;; Auto vars:     Size  Location     Type
 38053 ;;		None
 38054 ;; Return value:  Size  Location     Type
 38055 ;;		None               void
 38056 ;; Registers used:
 38057 ;;		wreg, status,2, status,0
 38058 ;; Tracked objects:
 38059 ;;		On entry : 0/5
 38060 ;;		On exit  : 0/0
 38061 ;;		Unchanged: 0/0
 38062 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38063 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38065 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38066 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38067 ;;Total ram usage:       12 bytes
 38068 ;; Hardware stack levels used: 1
 38069 ;; This function calls:
 38070 ;;		Nothing
 38071 ;; This function is called by:
 38072 ;;		_efgtoa
 38073 ;; This function uses a non-reentrant model
 38074 ;;
 38075                           
 38076                           	psect	text94
 38077   0182C6                     __ptext94:
 38078                           	callstack 0
 38079   0182C6                     ___flge:
 38080                           	callstack 121
 38081                           
 38082                           ;incstack = 0
 38083   0182C6  0E00               	movlw	0
 38084   0182C8  141A               	andwf	___flge@ff1^(0+1280),w,c
 38085   0182CA  6E22               	movwf	??___flge^(0+1280),c
 38086   0182CC  0E00               	movlw	0
 38087   0182CE  141B               	andwf	(___flge@ff1+1)^(0+1280),w,c
 38088   0182D0  6E23               	movwf	(??___flge+1)^(0+1280),c
 38089   0182D2  0E80               	movlw	128
 38090   0182D4  141C               	andwf	(___flge@ff1+2)^(0+1280),w,c
 38091   0182D6  6E24               	movwf	(??___flge+2)^(0+1280),c
 38092   0182D8  0E7F               	movlw	127
 38093   0182DA  141D               	andwf	(___flge@ff1+3)^(0+1280),w,c
 38094   0182DC  6E25               	movwf	(??___flge+3)^(0+1280),c
 38095   0182DE  5022               	movf	??___flge^(0+1280),w,c
 38096   0182E0  1023               	iorwf	(??___flge+1)^(0+1280),w,c
 38097   0182E2  1024               	iorwf	(??___flge+2)^(0+1280),w,c
 38098   0182E4  1025               	iorwf	(??___flge+3)^(0+1280),w,c
 38099   0182E6  A4D8               	btfss	status,2,c
 38100   0182E8  D008               	goto	l8459
 38101   0182EA  0E00               	movlw	0
 38102   0182EC  6E1A               	movwf	___flge@ff1^(0+1280),c
 38103   0182EE  0E00               	movlw	0
 38104   0182F0  6E1B               	movwf	(___flge@ff1+1)^(0+1280),c
 38105   0182F2  0E00               	movlw	0
 38106   0182F4  6E1C               	movwf	(___flge@ff1+2)^(0+1280),c
 38107   0182F6  0E00               	movlw	0
 38108   0182F8  6E1D               	movwf	(___flge@ff1+3)^(0+1280),c
 38109   0182FA                     l8459:
 38110   0182FA  0E00               	movlw	0
 38111   0182FC  141E               	andwf	___flge@ff2^(0+1280),w,c
 38112   0182FE  6E22               	movwf	??___flge^(0+1280),c
 38113   018300  0E00               	movlw	0
 38114   018302  141F               	andwf	(___flge@ff2+1)^(0+1280),w,c
 38115   018304  6E23               	movwf	(??___flge+1)^(0+1280),c
 38116   018306  0E80               	movlw	128
 38117   018308  1420               	andwf	(___flge@ff2+2)^(0+1280),w,c
 38118   01830A  6E24               	movwf	(??___flge+2)^(0+1280),c
 38119   01830C  0E7F               	movlw	127
 38120   01830E  1421               	andwf	(___flge@ff2+3)^(0+1280),w,c
 38121   018310  6E25               	movwf	(??___flge+3)^(0+1280),c
 38122   018312  5022               	movf	??___flge^(0+1280),w,c
 38123   018314  1023               	iorwf	(??___flge+1)^(0+1280),w,c
 38124   018316  1024               	iorwf	(??___flge+2)^(0+1280),w,c
 38125   018318  1025               	iorwf	(??___flge+3)^(0+1280),w,c
 38126   01831A  A4D8               	btfss	status,2,c
 38127   01831C  D008               	goto	l8463
 38128   01831E  0E00               	movlw	0
 38129   018320  6E1E               	movwf	___flge@ff2^(0+1280),c
 38130   018322  0E00               	movlw	0
 38131   018324  6E1F               	movwf	(___flge@ff2+1)^(0+1280),c
 38132   018326  0E00               	movlw	0
 38133   018328  6E20               	movwf	(___flge@ff2+2)^(0+1280),c
 38134   01832A  0E00               	movlw	0
 38135   01832C  6E21               	movwf	(___flge@ff2+3)^(0+1280),c
 38136   01832E                     l8463:
 38137   01832E  AE1D               	btfss	(___flge@ff1+3)^(0+1280),7,c
 38138   018330  D009               	goto	l8467
 38139   018332  6C1A               	negf	___flge@ff1^(0+1280),c
 38140   018334  1E1B               	comf	(___flge@ff1+1)^(0+1280),f,c
 38141   018336  B0D8               	btfsc	status,0,c
 38142   018338  2A1B               	incf	(___flge@ff1+1)^(0+1280),f,c
 38143   01833A  1E1C               	comf	(___flge@ff1+2)^(0+1280),f,c
 38144   01833C  B0D8               	btfsc	status,0,c
 38145   01833E  2A1C               	incf	(___flge@ff1+2)^(0+1280),f,c
 38146   018340  0E80               	movlw	128
 38147   018342  561D               	subfwb	(___flge@ff1+3)^(0+1280),f,c
 38148   018344                     l8467:
 38149   018344  AE21               	btfss	(___flge@ff2+3)^(0+1280),7,c
 38150   018346  D009               	goto	l1973
 38151   018348  6C1E               	negf	___flge@ff2^(0+1280),c
 38152   01834A  1E1F               	comf	(___flge@ff2+1)^(0+1280),f,c
 38153   01834C  B0D8               	btfsc	status,0,c
 38154   01834E  2A1F               	incf	(___flge@ff2+1)^(0+1280),f,c
 38155   018350  1E20               	comf	(___flge@ff2+2)^(0+1280),f,c
 38156   018352  B0D8               	btfsc	status,0,c
 38157   018354  2A20               	incf	(___flge@ff2+2)^(0+1280),f,c
 38158   018356  0E80               	movlw	128
 38159   018358  5621               	subfwb	(___flge@ff2+3)^(0+1280),f,c
 38160   01835A                     l1973:
 38161   01835A  0E00               	movlw	0
 38162   01835C  1A1A               	xorwf	___flge@ff1^(0+1280),f,c
 38163   01835E  0E00               	movlw	0
 38164   018360  1A1B               	xorwf	(___flge@ff1+1)^(0+1280),f,c
 38165   018362  0E00               	movlw	0
 38166   018364  1A1C               	xorwf	(___flge@ff1+2)^(0+1280),f,c
 38167   018366  0E80               	movlw	128
 38168   018368  1A1D               	xorwf	(___flge@ff1+3)^(0+1280),f,c
 38169   01836A  0E00               	movlw	0
 38170   01836C  1A1E               	xorwf	___flge@ff2^(0+1280),f,c
 38171   01836E  0E00               	movlw	0
 38172   018370  1A1F               	xorwf	(___flge@ff2+1)^(0+1280),f,c
 38173   018372  0E00               	movlw	0
 38174   018374  1A20               	xorwf	(___flge@ff2+2)^(0+1280),f,c
 38175   018376  0E80               	movlw	128
 38176   018378  1A21               	xorwf	(___flge@ff2+3)^(0+1280),f,c
 38177   01837A  501E               	movf	___flge@ff2^(0+1280),w,c
 38178   01837C  5C1A               	subwf	___flge@ff1^(0+1280),w,c
 38179   01837E  501F               	movf	(___flge@ff2+1)^(0+1280),w,c
 38180   018380  581B               	subwfb	(___flge@ff1+1)^(0+1280),w,c
 38181   018382  5020               	movf	(___flge@ff2+2)^(0+1280),w,c
 38182   018384  581C               	subwfb	(___flge@ff1+2)^(0+1280),w,c
 38183   018386  5021               	movf	(___flge@ff2+3)^(0+1280),w,c
 38184   018388  581D               	subwfb	(___flge@ff1+3)^(0+1280),w,c
 38185   01838A  B0D8               	btfsc	status,0,c
 38186   01838C  D002               	goto	l8473
 38187   01838E  90D8               	bcf	status,0,c
 38188   018390  0012               	return	
 38189   018392                     l8473:
 38190   018392  80D8               	bsf	status,0,c
 38191   018394  0012               	return		;funcret
 38192   018396                     __end_of___flge:
 38193                           	callstack 0
 38194                           
 38195 ;; *************** function ___fleq *****************
 38196 ;; Defined at:
 38197 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
 38198 ;; Parameters:    Size  Location     Type
 38199 ;;  ff1             4    0[COMRAM] unsigned char 
 38200 ;;  ff2             4    4[COMRAM] unsigned char 
 38201 ;; Auto vars:     Size  Location     Type
 38202 ;;		None
 38203 ;; Return value:  Size  Location     Type
 38204 ;;		None               void
 38205 ;; Registers used:
 38206 ;;		wreg, status,2, status,0
 38207 ;; Tracked objects:
 38208 ;;		On entry : 0/5
 38209 ;;		On exit  : 0/0
 38210 ;;		Unchanged: 0/0
 38211 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38212 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38214 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38215 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38216 ;;Total ram usage:       12 bytes
 38217 ;; Hardware stack levels used: 1
 38218 ;; This function calls:
 38219 ;;		Nothing
 38220 ;; This function is called by:
 38221 ;;		_efgtoa
 38222 ;; This function uses a non-reentrant model
 38223 ;;
 38224                           
 38225                           	psect	text95
 38226   019198                     __ptext95:
 38227                           	callstack 0
 38228   019198                     ___fleq:
 38229                           	callstack 121
 38230                           
 38231                           ;incstack = 0
 38232   019198  0E00               	movlw	0
 38233   01919A  1401               	andwf	___fleq@ff1^(0+1280),w,c
 38234   01919C  6E09               	movwf	??___fleq^(0+1280),c
 38235   01919E  0E00               	movlw	0
 38236   0191A0  1402               	andwf	(___fleq@ff1+1)^(0+1280),w,c
 38237   0191A2  6E0A               	movwf	(??___fleq+1)^(0+1280),c
 38238   0191A4  0E80               	movlw	128
 38239   0191A6  1403               	andwf	(___fleq@ff1+2)^(0+1280),w,c
 38240   0191A8  6E0B               	movwf	(??___fleq+2)^(0+1280),c
 38241   0191AA  0E7F               	movlw	127
 38242   0191AC  1404               	andwf	(___fleq@ff1+3)^(0+1280),w,c
 38243   0191AE  6E0C               	movwf	(??___fleq+3)^(0+1280),c
 38244   0191B0  5009               	movf	??___fleq^(0+1280),w,c
 38245   0191B2  100A               	iorwf	(??___fleq+1)^(0+1280),w,c
 38246   0191B4  100B               	iorwf	(??___fleq+2)^(0+1280),w,c
 38247   0191B6  100C               	iorwf	(??___fleq+3)^(0+1280),w,c
 38248   0191B8  A4D8               	btfss	status,2,c
 38249   0191BA  D008               	goto	l8443
 38250   0191BC  0E00               	movlw	0
 38251   0191BE  6E01               	movwf	___fleq@ff1^(0+1280),c
 38252   0191C0  0E00               	movlw	0
 38253   0191C2  6E02               	movwf	(___fleq@ff1+1)^(0+1280),c
 38254   0191C4  0E00               	movlw	0
 38255   0191C6  6E03               	movwf	(___fleq@ff1+2)^(0+1280),c
 38256   0191C8  0E00               	movlw	0
 38257   0191CA  6E04               	movwf	(___fleq@ff1+3)^(0+1280),c
 38258   0191CC                     l8443:
 38259   0191CC  0E00               	movlw	0
 38260   0191CE  1405               	andwf	___fleq@ff2^(0+1280),w,c
 38261   0191D0  6E09               	movwf	??___fleq^(0+1280),c
 38262   0191D2  0E00               	movlw	0
 38263   0191D4  1406               	andwf	(___fleq@ff2+1)^(0+1280),w,c
 38264   0191D6  6E0A               	movwf	(??___fleq+1)^(0+1280),c
 38265   0191D8  0E80               	movlw	128
 38266   0191DA  1407               	andwf	(___fleq@ff2+2)^(0+1280),w,c
 38267   0191DC  6E0B               	movwf	(??___fleq+2)^(0+1280),c
 38268   0191DE  0E7F               	movlw	127
 38269   0191E0  1408               	andwf	(___fleq@ff2+3)^(0+1280),w,c
 38270   0191E2  6E0C               	movwf	(??___fleq+3)^(0+1280),c
 38271   0191E4  5009               	movf	??___fleq^(0+1280),w,c
 38272   0191E6  100A               	iorwf	(??___fleq+1)^(0+1280),w,c
 38273   0191E8  100B               	iorwf	(??___fleq+2)^(0+1280),w,c
 38274   0191EA  100C               	iorwf	(??___fleq+3)^(0+1280),w,c
 38275   0191EC  A4D8               	btfss	status,2,c
 38276   0191EE  D008               	goto	l8447
 38277   0191F0  0E00               	movlw	0
 38278   0191F2  6E05               	movwf	___fleq@ff2^(0+1280),c
 38279   0191F4  0E00               	movlw	0
 38280   0191F6  6E06               	movwf	(___fleq@ff2+1)^(0+1280),c
 38281   0191F8  0E00               	movlw	0
 38282   0191FA  6E07               	movwf	(___fleq@ff2+2)^(0+1280),c
 38283   0191FC  0E00               	movlw	0
 38284   0191FE  6E08               	movwf	(___fleq@ff2+3)^(0+1280),c
 38285   019200                     l8447:
 38286   019200  5005               	movf	___fleq@ff2^(0+1280),w,c
 38287   019202  1801               	xorwf	___fleq@ff1^(0+1280),w,c
 38288   019204  E10A               	bnz	u9270
 38289   019206  5006               	movf	(___fleq@ff2+1)^(0+1280),w,c
 38290   019208  1802               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
 38291   01920A  E107               	bnz	u9270
 38292   01920C  5007               	movf	(___fleq@ff2+2)^(0+1280),w,c
 38293   01920E  1803               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
 38294   019210  E104               	bnz	u9270
 38295   019212  5008               	movf	(___fleq@ff2+3)^(0+1280),w,c
 38296   019214  1804               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
 38297   019216  B4D8               	btfsc	status,2,c
 38298   019218  D002               	goto	l8451
 38299   01921A                     u9270:
 38300   01921A  90D8               	bcf	status,0,c
 38301   01921C  0012               	return	
 38302   01921E                     l8451:
 38303   01921E  80D8               	bsf	status,0,c
 38304   019220  0012               	return		;funcret
 38305   019222                     __end_of___fleq:
 38306                           	callstack 0
 38307                           
 38308 ;; *************** function ___fldiv *****************
 38309 ;; Defined at:
 38310 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 38311 ;; Parameters:    Size  Location     Type
 38312 ;;  b               4   26[COMRAM] unsigned char 
 38313 ;;  a               4   30[COMRAM] unsigned char 
 38314 ;; Auto vars:     Size  Location     Type
 38315 ;;  grs             4   45[COMRAM] unsigned long 
 38316 ;;  rem             4   38[COMRAM] unsigned long 
 38317 ;;  new_exp         2   43[COMRAM] short 
 38318 ;;  aexp            1   50[COMRAM] unsigned char 
 38319 ;;  bexp            1   49[COMRAM] unsigned char 
 38320 ;;  sign            1   42[COMRAM] unsigned char 
 38321 ;; Return value:  Size  Location     Type
 38322 ;;                  4   26[COMRAM] unsigned char 
 38323 ;; Registers used:
 38324 ;;		wreg, status,2, status,0
 38325 ;; Tracked objects:
 38326 ;;		On entry : 0/4
 38327 ;;		On exit  : 0/0
 38328 ;;		Unchanged: 0/0
 38329 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38330 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38331 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38332 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38333 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38334 ;;Total ram usage:       25 bytes
 38335 ;; Hardware stack levels used: 1
 38336 ;; This function calls:
 38337 ;;		Nothing
 38338 ;; This function is called by:
 38339 ;;		_main
 38340 ;;		_efgtoa
 38341 ;; This function uses a non-reentrant model
 38342 ;;
 38343                           
 38344                           	psect	text96
 38345   0152C6                     __ptext96:
 38346                           	callstack 0
 38347   0152C6                     ___fldiv:
 38348                           	callstack 121
 38349                           
 38350                           ;incstack = 0
 38351   0152C6  501E               	movf	(___fldiv@b+3)^(0+1280),w,c
 38352   0152C8  0B80               	andlw	128
 38353   0152CA  6E2B               	movwf	___fldiv@sign^(0+1280),c
 38354   0152CC  501E               	movf	(___fldiv@b+3)^(0+1280),w,c
 38355   0152CE  241E               	addwf	(___fldiv@b+3)^(0+1280),w,c
 38356   0152D0  6E32               	movwf	___fldiv@bexp^(0+1280),c
 38357   0152D2  BE1D               	btfsc	(___fldiv@b+2)^(0+1280),7,c
 38358   0152D4  8032               	bsf	___fldiv@bexp^(0+1280),0,c
 38359   0152D6  5032               	movf	___fldiv@bexp^(0+1280),w,c
 38360   0152D8  B4D8               	btfsc	status,2,c
 38361   0152DA  D00D               	goto	l8181
 38362   0152DC  2832               	incf	___fldiv@bexp^(0+1280),w,c
 38363   0152DE  A4D8               	btfss	status,2,c
 38364   0152E0  D008               	goto	l8177
 38365   0152E2  0E00               	movlw	0
 38366   0152E4  6E1B               	movwf	___fldiv@b^(0+1280),c
 38367   0152E6  0E00               	movlw	0
 38368   0152E8  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38369   0152EA  0E00               	movlw	0
 38370   0152EC  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38371   0152EE  0E00               	movlw	0
 38372   0152F0  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38373   0152F2                     l8177:
 38374   0152F2  8E1D               	bsf	(___fldiv@b+2)^(0+1280),7,c
 38375   0152F4  D006               	goto	L31
 38376   0152F6                     l8181:
 38377   0152F6  0E00               	movlw	0
 38378   0152F8  6E1B               	movwf	___fldiv@b^(0+1280),c
 38379   0152FA  0E00               	movlw	0
 38380   0152FC  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38381   0152FE  0E00               	movlw	0
 38382   015300  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38383   015302                     L31:
 38384   015302  0E00               	movlw	0
 38385   015304  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38386   015306  5022               	movf	(___fldiv@a+3)^(0+1280),w,c
 38387   015308  0B80               	andlw	128
 38388   01530A  1A2B               	xorwf	___fldiv@sign^(0+1280),f,c
 38389   01530C  5022               	movf	(___fldiv@a+3)^(0+1280),w,c
 38390   01530E  2422               	addwf	(___fldiv@a+3)^(0+1280),w,c
 38391   015310  6E33               	movwf	___fldiv@aexp^(0+1280),c
 38392   015312  BE21               	btfsc	(___fldiv@a+2)^(0+1280),7,c
 38393   015314  8033               	bsf	___fldiv@aexp^(0+1280),0,c
 38394   015316  5033               	movf	___fldiv@aexp^(0+1280),w,c
 38395   015318  B4D8               	btfsc	status,2,c
 38396   01531A  D00D               	goto	l8201
 38397   01531C  2833               	incf	___fldiv@aexp^(0+1280),w,c
 38398   01531E  A4D8               	btfss	status,2,c
 38399   015320  D008               	goto	l8197
 38400   015322  0E00               	movlw	0
 38401   015324  6E1F               	movwf	___fldiv@a^(0+1280),c
 38402   015326  0E00               	movlw	0
 38403   015328  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 38404   01532A  0E00               	movlw	0
 38405   01532C  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 38406   01532E  0E00               	movlw	0
 38407   015330  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 38408   015332                     l8197:
 38409   015332  8E21               	bsf	(___fldiv@a+2)^(0+1280),7,c
 38410   015334  D006               	goto	L32
 38411   015336                     l8201:
 38412   015336  0E00               	movlw	0
 38413   015338  6E1F               	movwf	___fldiv@a^(0+1280),c
 38414   01533A  0E00               	movlw	0
 38415   01533C  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 38416   01533E  0E00               	movlw	0
 38417   015340  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 38418   015342                     L32:
 38419   015342  0E00               	movlw	0
 38420   015344  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 38421   015346  501F               	movf	___fldiv@a^(0+1280),w,c
 38422   015348  1020               	iorwf	(___fldiv@a+1)^(0+1280),w,c
 38423   01534A  1021               	iorwf	(___fldiv@a+2)^(0+1280),w,c
 38424   01534C  1022               	iorwf	(___fldiv@a+3)^(0+1280),w,c
 38425   01534E  A4D8               	btfss	status,2,c
 38426   015350  D017               	goto	l8215
 38427   015352  0E00               	movlw	0
 38428   015354  6E1B               	movwf	___fldiv@b^(0+1280),c
 38429   015356  0E00               	movlw	0
 38430   015358  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38431   01535A  0E00               	movlw	0
 38432   01535C  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38433   01535E  0E00               	movlw	0
 38434   015360  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38435   015362  0E80               	movlw	128
 38436   015364  121D               	iorwf	(___fldiv@b+2)^(0+1280),f,c
 38437   015366  0E7F               	movlw	127
 38438   015368  121E               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 38439   01536A                     l8209:
 38440   01536A  502B               	movf	___fldiv@sign^(0+1280),w,c
 38441   01536C  121E               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 38442   01536E  C51B  F51B         	movff	___fldiv@b,?___fldiv
 38443   015372  C51C  F51C         	movff	___fldiv@b+1,?___fldiv+1
 38444   015376  C51D  F51D         	movff	___fldiv@b+2,?___fldiv+2
 38445   01537A  C51E  F51E         	movff	___fldiv@b+3,?___fldiv+3
 38446   01537E  0012               	return	
 38447   015380                     l8215:
 38448   015380  5032               	movf	___fldiv@bexp^(0+1280),w,c
 38449   015382  A4D8               	btfss	status,2,c
 38450   015384  D009               	goto	l8223
 38451   015386  0E00               	movlw	0
 38452   015388  6E1B               	movwf	?___fldiv^(0+1280),c
 38453   01538A  0E00               	movlw	0
 38454   01538C  6E1C               	movwf	(?___fldiv+1)^(0+1280),c
 38455   01538E  0E00               	movlw	0
 38456   015390  6E1D               	movwf	(?___fldiv+2)^(0+1280),c
 38457   015392  0E00               	movlw	0
 38458   015394  6E1E               	movwf	(?___fldiv+3)^(0+1280),c
 38459   015396  0012               	return	
 38460   015398                     l8223:
 38461   015398  5033               	movf	___fldiv@aexp^(0+1280),w,c
 38462   01539A  C532  F523         	movff	___fldiv@bexp,??___fldiv
 38463   01539E  6A24               	clrf	(??___fldiv+1)^(0+1280),c
 38464   0153A0  5E23               	subwf	??___fldiv^(0+1280),f,c
 38465   0153A2  0E00               	movlw	0
 38466   0153A4  5A24               	subwfb	(??___fldiv+1)^(0+1280),f,c
 38467   0153A6  0E7F               	movlw	127
 38468   0153A8  2423               	addwf	??___fldiv^(0+1280),w,c
 38469   0153AA  6E2C               	movwf	___fldiv@new_exp^(0+1280),c
 38470   0153AC  0E00               	movlw	0
 38471   0153AE  2024               	addwfc	(??___fldiv+1)^(0+1280),w,c
 38472   0153B0  6E2D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 38473   0153B2  C51B  F527         	movff	___fldiv@b,___fldiv@rem
 38474   0153B6  C51C  F528         	movff	___fldiv@b+1,___fldiv@rem+1
 38475   0153BA  C51D  F529         	movff	___fldiv@b+2,___fldiv@rem+2
 38476   0153BE  C51E  F52A         	movff	___fldiv@b+3,___fldiv@rem+3
 38477   0153C2  0E00               	movlw	0
 38478   0153C4  6E1B               	movwf	___fldiv@b^(0+1280),c
 38479   0153C6  0E00               	movlw	0
 38480   0153C8  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38481   0153CA  0E00               	movlw	0
 38482   0153CC  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38483   0153CE  0E00               	movlw	0
 38484   0153D0  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38485   0153D2  0E00               	movlw	0
 38486   0153D4  6E2E               	movwf	___fldiv@grs^(0+1280),c
 38487   0153D6  0E00               	movlw	0
 38488   0153D8  6E2F               	movwf	(___fldiv@grs+1)^(0+1280),c
 38489   0153DA  0E00               	movlw	0
 38490   0153DC  6E30               	movwf	(___fldiv@grs+2)^(0+1280),c
 38491   0153DE  0E00               	movlw	0
 38492   0153E0  6E31               	movwf	(___fldiv@grs+3)^(0+1280),c
 38493   0153E2  0E00               	movlw	0
 38494   0153E4  6E33               	movwf	___fldiv@aexp^(0+1280),c
 38495   0153E6  D028               	goto	l2292
 38496   0153E8                     l8233:
 38497   0153E8  5033               	movf	___fldiv@aexp^(0+1280),w,c
 38498   0153EA  B4D8               	btfsc	status,2,c
 38499   0153EC  D011               	goto	l8241
 38500   0153EE  90D8               	bcf	status,0,c
 38501   0153F0  3627               	rlcf	___fldiv@rem^(0+1280),f,c
 38502   0153F2  3628               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
 38503   0153F4  3629               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
 38504   0153F6  362A               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
 38505   0153F8  90D8               	bcf	status,0,c
 38506   0153FA  361B               	rlcf	___fldiv@b^(0+1280),f,c
 38507   0153FC  361C               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 38508   0153FE  361D               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 38509   015400  361E               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 38510   015402  BE31               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
 38511   015404  801B               	bsf	___fldiv@b^(0+1280),0,c
 38512   015406  90D8               	bcf	status,0,c
 38513   015408  362E               	rlcf	___fldiv@grs^(0+1280),f,c
 38514   01540A  362F               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 38515   01540C  3630               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 38516   01540E  3631               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 38517   015410                     l8241:
 38518   015410  501F               	movf	___fldiv@a^(0+1280),w,c
 38519   015412  5C27               	subwf	___fldiv@rem^(0+1280),w,c
 38520   015414  5020               	movf	(___fldiv@a+1)^(0+1280),w,c
 38521   015416  5828               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
 38522   015418  5021               	movf	(___fldiv@a+2)^(0+1280),w,c
 38523   01541A  5829               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
 38524   01541C  5022               	movf	(___fldiv@a+3)^(0+1280),w,c
 38525   01541E  582A               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
 38526   015420  A0D8               	btfss	status,0,c
 38527   015422  D009               	goto	l8247
 38528   015424  8C31               	bsf	(___fldiv@grs+3)^(0+1280),6,c
 38529   015426  501F               	movf	___fldiv@a^(0+1280),w,c
 38530   015428  5E27               	subwf	___fldiv@rem^(0+1280),f,c
 38531   01542A  5020               	movf	(___fldiv@a+1)^(0+1280),w,c
 38532   01542C  5A28               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
 38533   01542E  5021               	movf	(___fldiv@a+2)^(0+1280),w,c
 38534   015430  5A29               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
 38535   015432  5022               	movf	(___fldiv@a+3)^(0+1280),w,c
 38536   015434  5A2A               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
 38537   015436                     l8247:
 38538   015436  2A33               	incf	___fldiv@aexp^(0+1280),f,c
 38539   015438                     l2292:
 38540   015438  0E19               	movlw	25
 38541   01543A  6433               	cpfsgt	___fldiv@aexp^(0+1280),c
 38542   01543C  D7D5               	goto	l8233
 38543   01543E  5027               	movf	___fldiv@rem^(0+1280),w,c
 38544   015440  1028               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
 38545   015442  1029               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
 38546   015444  102A               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
 38547   015446  B4D8               	btfsc	status,2,c
 38548   015448  D011               	goto	l8259
 38549   01544A  802E               	bsf	___fldiv@grs^(0+1280),0,c
 38550   01544C  D00F               	goto	l8259
 38551   01544E                     l8253:
 38552   01544E  90D8               	bcf	status,0,c
 38553   015450  361B               	rlcf	___fldiv@b^(0+1280),f,c
 38554   015452  361C               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 38555   015454  361D               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 38556   015456  361E               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 38557   015458  BE31               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
 38558   01545A  801B               	bsf	___fldiv@b^(0+1280),0,c
 38559   01545C  90D8               	bcf	status,0,c
 38560   01545E  362E               	rlcf	___fldiv@grs^(0+1280),f,c
 38561   015460  362F               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 38562   015462  3630               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 38563   015464  3631               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 38564   015466  062C               	decf	___fldiv@new_exp^(0+1280),f,c
 38565   015468  A0D8               	btfss	status,0,c
 38566   01546A  062D               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
 38567   01546C                     l8259:
 38568   01546C  AE1D               	btfss	(___fldiv@b+2)^(0+1280),7,c
 38569   01546E  D7EF               	goto	l8253
 38570   015470  0E00               	movlw	0
 38571   015472  6E33               	movwf	___fldiv@aexp^(0+1280),c
 38572   015474  AE31               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 38573   015476  D017               	goto	l2303
 38574   015478  0EFF               	movlw	255
 38575   01547A  142E               	andwf	___fldiv@grs^(0+1280),w,c
 38576   01547C  6E23               	movwf	??___fldiv^(0+1280),c
 38577   01547E  0EFF               	movlw	255
 38578   015480  142F               	andwf	(___fldiv@grs+1)^(0+1280),w,c
 38579   015482  6E24               	movwf	(??___fldiv+1)^(0+1280),c
 38580   015484  0EFF               	movlw	255
 38581   015486  1430               	andwf	(___fldiv@grs+2)^(0+1280),w,c
 38582   015488  6E25               	movwf	(??___fldiv+2)^(0+1280),c
 38583   01548A  0E7F               	movlw	127
 38584   01548C  1431               	andwf	(___fldiv@grs+3)^(0+1280),w,c
 38585   01548E  6E26               	movwf	(??___fldiv+3)^(0+1280),c
 38586   015490  5023               	movf	??___fldiv^(0+1280),w,c
 38587   015492  1024               	iorwf	(??___fldiv+1)^(0+1280),w,c
 38588   015494  1025               	iorwf	(??___fldiv+2)^(0+1280),w,c
 38589   015496  1026               	iorwf	(??___fldiv+3)^(0+1280),w,c
 38590   015498  B4D8               	btfsc	status,2,c
 38591   01549A  D003               	goto	l2304
 38592   01549C                     u9000:
 38593   01549C  0E01               	movlw	1
 38594   01549E  6E33               	movwf	___fldiv@aexp^(0+1280),c
 38595   0154A0  D002               	goto	l2303
 38596   0154A2                     l2304:
 38597   0154A2  B01B               	btfsc	___fldiv@b^(0+1280),0,c
 38598   0154A4  D7FB               	goto	u9000
 38599   0154A6                     l2303:
 38600   0154A6  5033               	movf	___fldiv@aexp^(0+1280),w,c
 38601   0154A8  B4D8               	btfsc	status,2,c
 38602   0154AA  D01F               	goto	l8279
 38603   0154AC  0E01               	movlw	1
 38604   0154AE  261B               	addwf	___fldiv@b^(0+1280),f,c
 38605   0154B0  0E00               	movlw	0
 38606   0154B2  221C               	addwfc	(___fldiv@b+1)^(0+1280),f,c
 38607   0154B4  221D               	addwfc	(___fldiv@b+2)^(0+1280),f,c
 38608   0154B6  221E               	addwfc	(___fldiv@b+3)^(0+1280),f,c
 38609   0154B8  A01E               	btfss	(___fldiv@b+3)^(0+1280),0,c
 38610   0154BA  D017               	goto	l8279
 38611   0154BC  C51B  F523         	movff	___fldiv@b,??___fldiv
 38612   0154C0  C51C  F524         	movff	___fldiv@b+1,??___fldiv+1
 38613   0154C4  C51D  F525         	movff	___fldiv@b+2,??___fldiv+2
 38614   0154C8  C51E  F526         	movff	___fldiv@b+3,??___fldiv+3
 38615   0154CC  3426               	rlcf	(??___fldiv+3)^(0+1280),w,c
 38616   0154CE  3226               	rrcf	(??___fldiv+3)^(0+1280),f,c
 38617   0154D0  3225               	rrcf	(??___fldiv+2)^(0+1280),f,c
 38618   0154D2  3224               	rrcf	(??___fldiv+1)^(0+1280),f,c
 38619   0154D4  3223               	rrcf	??___fldiv^(0+1280),f,c
 38620   0154D6  C523  F51B         	movff	??___fldiv,___fldiv@b
 38621   0154DA  C524  F51C         	movff	??___fldiv+1,___fldiv@b+1
 38622   0154DE  C525  F51D         	movff	??___fldiv+2,___fldiv@b+2
 38623   0154E2  C526  F51E         	movff	??___fldiv+3,___fldiv@b+3
 38624   0154E6  4A2C               	infsnz	___fldiv@new_exp^(0+1280),f,c
 38625   0154E8  2A2D               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
 38626   0154EA                     l8279:
 38627   0154EA  BE2D               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 38628   0154EC  D010               	goto	l8283
 38629   0154EE  502D               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 38630   0154F0  E103               	bnz	u9040
 38631   0154F2  282C               	incf	___fldiv@new_exp^(0+1280),w,c
 38632   0154F4  A0D8               	btfss	status,0,c
 38633   0154F6  D00B               	goto	l8283
 38634   0154F8                     u9040:
 38635   0154F8  0E00               	movlw	0
 38636   0154FA  6E2D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 38637   0154FC  682C               	setf	___fldiv@new_exp^(0+1280),c
 38638   0154FE  0E00               	movlw	0
 38639   015500  6E1B               	movwf	___fldiv@b^(0+1280),c
 38640   015502  0E00               	movlw	0
 38641   015504  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38642   015506  0E00               	movlw	0
 38643   015508  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38644   01550A  0E00               	movlw	0
 38645   01550C  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38646   01550E                     l8283:
 38647   01550E  BE2D               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 38648   015510  D005               	goto	u9050
 38649   015512  502D               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 38650   015514  E111               	bnz	l8287
 38651   015516  042C               	decf	___fldiv@new_exp^(0+1280),w,c
 38652   015518  B0D8               	btfsc	status,0,c
 38653   01551A  D00E               	goto	l8287
 38654   01551C                     u9050:
 38655   01551C  0E00               	movlw	0
 38656   01551E  6E2D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 38657   015520  0E00               	movlw	0
 38658   015522  6E2C               	movwf	___fldiv@new_exp^(0+1280),c
 38659   015524  0E00               	movlw	0
 38660   015526  6E1B               	movwf	___fldiv@b^(0+1280),c
 38661   015528  0E00               	movlw	0
 38662   01552A  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38663   01552C  0E00               	movlw	0
 38664   01552E  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38665   015530  0E00               	movlw	0
 38666   015532  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38667   015534  0E00               	movlw	0
 38668   015536  6E2B               	movwf	___fldiv@sign^(0+1280),c
 38669   015538                     l8287:
 38670   015538  C52C  F532         	movff	___fldiv@new_exp,___fldiv@bexp
 38671   01553C  A032               	btfss	___fldiv@bexp^(0+1280),0,c
 38672   01553E  D002               	goto	l8293
 38673   015540  8E1D               	bsf	(___fldiv@b+2)^(0+1280),7,c
 38674   015542  D001               	goto	l8295
 38675   015544                     l8293:
 38676   015544  9E1D               	bcf	(___fldiv@b+2)^(0+1280),7,c
 38677   015546                     l8295:
 38678   015546  90D8               	bcf	status,0,c
 38679   015548  3032               	rrcf	___fldiv@bexp^(0+1280),w,c
 38680   01554A  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38681   01554C  D70E               	goto	l8209
 38682   01554E                     __end_of___fldiv:
 38683                           	callstack 0
 38684                           
 38685 ;; *************** function _dtoa *****************
 38686 ;; Defined at:
 38687 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 38688 ;; Parameters:    Size  Location     Type
 38689 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
 38690 ;;		 -> sprintf@f(12), NULL(0), 
 38691 ;;  d               4   28[COMRAM] long 
 38692 ;; Auto vars:     Size  Location     Type
 38693 ;;  i               2   39[COMRAM] int 
 38694 ;;  w               2   36[COMRAM] int 
 38695 ;;  p               2   34[COMRAM] int 
 38696 ;;  s               1   38[COMRAM] unsigned char 
 38697 ;; Return value:  Size  Location     Type
 38698 ;;                  1    wreg      void 
 38699 ;; Registers used:
 38700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38701 ;; Tracked objects:
 38702 ;;		On entry : 3F/5
 38703 ;;		On exit  : 0/0
 38704 ;;		Unchanged: 0/0
 38705 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38706 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38707 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38709 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38710 ;;Total ram usage:       15 bytes
 38711 ;; Hardware stack levels used: 1
 38712 ;; Hardware stack levels required when called: 4
 38713 ;; This function calls:
 38714 ;;		___aldiv
 38715 ;;		___almod
 38716 ;;		_abs
 38717 ;;		_pad
 38718 ;; This function is called by:
 38719 ;;		_vfpfcnvrt
 38720 ;; This function uses a non-reentrant model
 38721 ;;
 38722                           
 38723                           	psect	text97
 38724   017150                     __ptext97:
 38725                           	callstack 0
 38726   017150                     _dtoa:
 38727                           	callstack 118
 38728                           
 38729                           ; BSR set to: 5
 38730                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 38731                           
 38732                           ;incstack = 0
 38733   017150  AE20               	btfss	(dtoa@d+3)^(0+1280),7,c
 38734   017152  D002               	goto	u9690
 38735   017154  0E01               	movlw	1
 38736   017156  D001               	goto	u9700
 38737   017158                     u9690:
 38738   017158  0E00               	movlw	0
 38739   01715A                     u9700:
 38740   01715A  6E27               	movwf	dtoa@s^(0+1280),c
 38741                           
 38742                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
 38743   01715C  0107               	movlb	7	; () banked
 38744   01715E  BF16               	btfsc	(_prec+1)& (0+255),7,b
 38745   017160  D002               	goto	l8635
 38746                           
 38747                           ; BSR set to: 7
 38748                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
 38749   017162  0106               	movlb	6	; () banked
 38750   017164  93FF               	bcf	_flags& (0+255),1,b
 38751   017166                     l8635:
 38752                           
 38753                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 38754   017166  0107               	movlb	7	; () banked
 38755   017168  AF16               	btfss	(_prec+1)& (0+255),7,b
 38756   01716A  D005               	goto	l2466
 38757                           
 38758                           ; BSR set to: 7
 38759   01716C  0E00               	movlw	0
 38760   01716E  6E24               	movwf	(dtoa@p+1)^(0+1280),c
 38761   017170  0E01               	movlw	1
 38762   017172  6E23               	movwf	dtoa@p^(0+1280),c
 38763   017174  D004               	goto	l2468
 38764   017176                     l2466:
 38765                           
 38766                           ; BSR set to: 7
 38767   017176  C715  F523         	movff	_prec,dtoa@p
 38768   01717A  C716  F524         	movff	_prec+1,dtoa@p+1
 38769   01717E                     l2468:
 38770                           
 38771                           ; BSR set to: 7
 38772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 38773   01717E  C713  F525         	movff	_width,dtoa@w
 38774   017182  C714  F526         	movff	_width+1,dtoa@w+1
 38775                           
 38776                           ; BSR set to: 7
 38777                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
 38778   017186  5027               	movf	dtoa@s^(0+1280),w,c
 38779   017188  B4D8               	btfsc	status,2,c
 38780   01718A  D010               	goto	l2469
 38781                           
 38782                           ; BSR set to: 7
 38783                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
 38784   01718C  0625               	decf	dtoa@w^(0+1280),f,c
 38785   01718E  A0D8               	btfss	status,0,c
 38786   017190  0626               	decf	(dtoa@w+1)^(0+1280),f,c
 38787                           
 38788                           ; BSR set to: 7
 38789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 38790   017192  5027               	movf	dtoa@s^(0+1280),w,c
 38791   017194  A4D8               	btfss	status,2,c
 38792   017196  D004               	goto	l8647
 38793                           
 38794                           ; BSR set to: 7
 38795   017198  0E00               	movlw	0
 38796   01719A  6E22               	movwf	(_dtoa$3389+1)^(0+1280),c
 38797   01719C  0E2B               	movlw	43
 38798   01719E  D003               	goto	L33
 38799   0171A0                     l8647:
 38800                           
 38801                           ; BSR set to: 7
 38802   0171A0  0E00               	movlw	0
 38803   0171A2  6E22               	movwf	(_dtoa$3389+1)^(0+1280),c
 38804   0171A4  0E2D               	movlw	45
 38805   0171A6                     L33:
 38806   0171A6  6E21               	movwf	_dtoa$3389^(0+1280),c
 38807                           
 38808                           ; BSR set to: 7
 38809   0171A8  C521  F527         	movff	_dtoa$3389,dtoa@s
 38810   0171AC                     l2469:
 38811                           
 38812                           ; BSR set to: 7
 38813                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 38814   0171AC  0E00               	movlw	0
 38815   0171AE  6E29               	movwf	(dtoa@i+1)^(0+1280),c
 38816   0171B0  0E4F               	movlw	79
 38817   0171B2  6E28               	movwf	dtoa@i^(0+1280),c
 38818                           
 38819                           ; BSR set to: 7
 38820                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 38821   0171B4  0E00               	movlw	0
 38822   0171B6  6F7B               	movwf	(_dbuf+79)& (0+255),b
 38823                           
 38824                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 38825   0171B8  D044               	goto	l8663
 38826   0171BA                     l8653:
 38827                           
 38828                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
 38829   0171BA  0628               	decf	dtoa@i^(0+1280),f,c
 38830   0171BC  A0D8               	btfss	status,0,c
 38831   0171BE  0629               	decf	(dtoa@i+1)^(0+1280),f,c
 38832                           
 38833                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 38834   0171C0  0E2C               	movlw	low _dbuf
 38835   0171C2  2428               	addwf	dtoa@i^(0+1280),w,c
 38836   0171C4  6ED9               	movwf	fsr2l,c
 38837   0171C6  0E07               	movlw	high _dbuf
 38838   0171C8  2029               	addwfc	(dtoa@i+1)^(0+1280),w,c
 38839   0171CA  6EDA               	movwf	fsr2h,c
 38840   0171CC  C51D  F501         	movff	dtoa@d,___almod@dividend
 38841   0171D0  C51E  F502         	movff	dtoa@d+1,___almod@dividend+1
 38842   0171D4  C51F  F503         	movff	dtoa@d+2,___almod@dividend+2
 38843   0171D8  C520  F504         	movff	dtoa@d+3,___almod@dividend+3
 38844   0171DC  0E0A               	movlw	10
 38845   0171DE  6E05               	movwf	___almod@divisor^(0+1280),c
 38846   0171E0  0E00               	movlw	0
 38847   0171E2  6E06               	movwf	(___almod@divisor+1)^(0+1280),c
 38848   0171E4  0E00               	movlw	0
 38849   0171E6  6E07               	movwf	(___almod@divisor+2)^(0+1280),c
 38850   0171E8  0E00               	movlw	0
 38851   0171EA  6E08               	movwf	(___almod@divisor+3)^(0+1280),c
 38852   0171EC  EC99  F0C6         	call	___almod	;wreg free
 38853   0171F0  C501  F50B         	movff	?___almod,abs@a
 38854   0171F4  C502  F50C         	movff	?___almod+1,abs@a+1
 38855   0171F8  EC3F  F0CF         	call	_abs	;wreg free
 38856   0171FC  500B               	movf	?_abs^(0+1280),w,c
 38857   0171FE  0F30               	addlw	48
 38858   017200  6EDF               	movwf	indf2,c
 38859                           
 38860                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
 38861   017202  0623               	decf	dtoa@p^(0+1280),f,c
 38862   017204  A0D8               	btfss	status,0,c
 38863   017206  0624               	decf	(dtoa@p+1)^(0+1280),f,c
 38864                           
 38865                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
 38866   017208  0625               	decf	dtoa@w^(0+1280),f,c
 38867   01720A  A0D8               	btfss	status,0,c
 38868   01720C  0626               	decf	(dtoa@w+1)^(0+1280),f,c
 38869                           
 38870                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 38871   01720E  C51D  F501         	movff	dtoa@d,___aldiv@dividend
 38872   017212  C51E  F502         	movff	dtoa@d+1,___aldiv@dividend+1
 38873   017216  C51F  F503         	movff	dtoa@d+2,___aldiv@dividend+2
 38874   01721A  C520  F504         	movff	dtoa@d+3,___aldiv@dividend+3
 38875   01721E  0E0A               	movlw	10
 38876   017220  6E05               	movwf	___aldiv@divisor^(0+1280),c
 38877   017222  0E00               	movlw	0
 38878   017224  6E06               	movwf	(___aldiv@divisor+1)^(0+1280),c
 38879   017226  0E00               	movlw	0
 38880   017228  6E07               	movwf	(___aldiv@divisor+2)^(0+1280),c
 38881   01722A  0E00               	movlw	0
 38882   01722C  6E08               	movwf	(___aldiv@divisor+3)^(0+1280),c
 38883   01722E  EC98  F0C2         	call	___aldiv	;wreg free
 38884   017232  C501  F51D         	movff	?___aldiv,dtoa@d
 38885   017236  C502  F51E         	movff	?___aldiv+1,dtoa@d+1
 38886   01723A  C503  F51F         	movff	?___aldiv+2,dtoa@d+2
 38887   01723E  C504  F520         	movff	?___aldiv+3,dtoa@d+3
 38888   017242                     l8663:
 38889                           
 38890                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 38891   017242  BE29               	btfsc	(dtoa@i+1)^(0+1280),7,c
 38892   017244  D01C               	goto	u9790
 38893   017246  5029               	movf	(dtoa@i+1)^(0+1280),w,c
 38894   017248  E103               	bnz	u9750
 38895   01724A  0428               	decf	dtoa@i^(0+1280),w,c
 38896   01724C  A0D8               	btfss	status,0,c
 38897   01724E  D017               	goto	u9790
 38898   017250                     u9750:
 38899   017250  501D               	movf	dtoa@d^(0+1280),w,c
 38900   017252  101E               	iorwf	(dtoa@d+1)^(0+1280),w,c
 38901   017254  101F               	iorwf	(dtoa@d+2)^(0+1280),w,c
 38902   017256  1020               	iorwf	(dtoa@d+3)^(0+1280),w,c
 38903   017258  A4D8               	btfss	status,2,c
 38904   01725A  D7AF               	goto	l8653
 38905   01725C  BE24               	btfsc	(dtoa@p+1)^(0+1280),7,c
 38906   01725E  D005               	goto	u9770
 38907   017260  5024               	movf	(dtoa@p+1)^(0+1280),w,c
 38908   017262  E1AB               	bnz	l8653
 38909   017264  0423               	decf	dtoa@p^(0+1280),w,c
 38910   017266  B0D8               	btfsc	status,0,c
 38911   017268  D7A8               	goto	l8653
 38912   01726A                     u9770:
 38913   01726A  BE26               	btfsc	(dtoa@w+1)^(0+1280),7,c
 38914   01726C  D008               	goto	u9790
 38915   01726E  5026               	movf	(dtoa@w+1)^(0+1280),w,c
 38916   017270  E103               	bnz	u9780
 38917   017272  0425               	decf	dtoa@w^(0+1280),w,c
 38918   017274  A0D8               	btfss	status,0,c
 38919   017276  D003               	goto	u9790
 38920   017278                     u9780:
 38921   017278  0106               	movlb	6	; () banked
 38922   01727A  B3FF               	btfsc	_flags& (0+255),1,b
 38923   01727C  D79E               	goto	l8653
 38924   01727E                     u9790:
 38925                           
 38926                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 38927   01727E  5027               	movf	dtoa@s^(0+1280),w,c
 38928   017280  B4D8               	btfsc	status,2,c
 38929   017282  D00B               	goto	l8679
 38930                           
 38931                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
 38932   017284  0628               	decf	dtoa@i^(0+1280),f,c
 38933   017286  A0D8               	btfss	status,0,c
 38934   017288  0629               	decf	(dtoa@i+1)^(0+1280),f,c
 38935                           
 38936                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 38937   01728A  0E2C               	movlw	low _dbuf
 38938   01728C  2428               	addwf	dtoa@i^(0+1280),w,c
 38939   01728E  6ED9               	movwf	fsr2l,c
 38940   017290  0E07               	movlw	high _dbuf
 38941   017292  2029               	addwfc	(dtoa@i+1)^(0+1280),w,c
 38942   017294  6EDA               	movwf	fsr2h,c
 38943   017296  C527  F4DF         	movff	dtoa@s,indf2
 38944   01729A                     l8679:
 38945                           
 38946                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 38947   01729A  C51B  F512         	movff	dtoa@fp,pad@fp
 38948   01729E  C51C  F513         	movff	dtoa@fp+1,pad@fp+1
 38949   0172A2  0E2C               	movlw	low _dbuf
 38950   0172A4  2428               	addwf	dtoa@i^(0+1280),w,c
 38951   0172A6  6E14               	movwf	pad@buf^(0+1280),c
 38952   0172A8  0E07               	movlw	high _dbuf
 38953   0172AA  2029               	addwfc	(dtoa@i+1)^(0+1280),w,c
 38954   0172AC  6E15               	movwf	(pad@buf+1)^(0+1280),c
 38955   0172AE  C525  F516         	movff	dtoa@w,pad@p
 38956   0172B2  C526  F517         	movff	dtoa@w+1,pad@p+1
 38957   0172B6  ECD4  F0C9         	call	_pad	;wreg free
 38958   0172BA  0012               	return		;funcret
 38959   0172BC                     __end_of_dtoa:
 38960                           	callstack 0
 38961                           
 38962 ;; *************** function _pad *****************
 38963 ;; Defined at:
 38964 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 38965 ;; Parameters:    Size  Location     Type
 38966 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 38967 ;;		 -> sprintf@f(12), NULL(0), 
 38968 ;;  buf             2   19[COMRAM] PTR unsigned char 
 38969 ;;		 -> dbuf(80), 
 38970 ;;  p               2   21[COMRAM] int 
 38971 ;; Auto vars:     Size  Location     Type
 38972 ;;  i               2   24[COMRAM] int 
 38973 ;; Return value:  Size  Location     Type
 38974 ;;                  1    wreg      void 
 38975 ;; Registers used:
 38976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38977 ;; Tracked objects:
 38978 ;;		On entry : 0/7
 38979 ;;		On exit  : 0/0
 38980 ;;		Unchanged: 0/0
 38981 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38982 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38983 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38985 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38986 ;;Total ram usage:        9 bytes
 38987 ;; Hardware stack levels used: 1
 38988 ;; Hardware stack levels required when called: 3
 38989 ;; This function calls:
 38990 ;;		_fputc
 38991 ;;		_fputs
 38992 ;; This function is called by:
 38993 ;;		_dtoa
 38994 ;;		_efgtoa
 38995 ;;		_xtoa
 38996 ;; This function uses a non-reentrant model
 38997 ;;
 38998                           
 38999                           	psect	text98
 39000   0193A8                     __ptext98:
 39001                           	callstack 0
 39002   0193A8                     _pad:
 39003                           	callstack 118
 39004                           
 39005                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 39006                           
 39007                           ;incstack = 0
 39008   0193A8  0106               	movlb	6	; () banked
 39009   0193AA  A1FF               	btfss	_flags& (0+255),0,b
 39010   0193AC  D00A               	goto	l8533
 39011                           
 39012                           ; BSR set to: 6
 39013                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 39014   0193AE  C514  F50B         	movff	pad@buf,fputs@s
 39015   0193B2  C515  F50C         	movff	pad@buf+1,fputs@s+1
 39016   0193B6  C512  F50D         	movff	pad@fp,fputs@fp
 39017   0193BA  C513  F50E         	movff	pad@fp+1,fputs@fp+1
 39018   0193BE  EC51  F0CE         	call	_fputs	;wreg free
 39019   0193C2                     l8533:
 39020                           
 39021                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 39022   0193C2  AE17               	btfss	(pad@p+1)^(0+1280),7,c
 39023   0193C4  D004               	goto	l2440
 39024                           
 39025                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 39026   0193C6  0E00               	movlw	0
 39027   0193C8  6E17               	movwf	(pad@p+1)^(0+1280),c
 39028   0193CA  0E00               	movlw	0
 39029   0193CC  6E16               	movwf	pad@p^(0+1280),c
 39030   0193CE                     l2440:
 39031                           
 39032                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 39033   0193CE  0E00               	movlw	0
 39034   0193D0  6E1A               	movwf	(pad@i+1)^(0+1280),c
 39035   0193D2  0E00               	movlw	0
 39036   0193D4  6E19               	movwf	pad@i^(0+1280),c
 39037                           
 39038                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 39039   0193D6  D00C               	goto	l8541
 39040   0193D8                     l8537:
 39041                           
 39042                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 39043   0193D8  0E00               	movlw	0
 39044   0193DA  6E03               	movwf	(fputc@c+1)^(0+1280),c
 39045   0193DC  0E20               	movlw	32
 39046   0193DE  6E02               	movwf	fputc@c^(0+1280),c
 39047   0193E0  C512  F504         	movff	pad@fp,fputc@fp
 39048   0193E4  C513  F505         	movff	pad@fp+1,fputc@fp+1
 39049   0193E8  EC96  F0C7         	call	_fputc	;wreg free
 39050                           
 39051                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
 39052   0193EC  4A19               	infsnz	pad@i^(0+1280),f,c
 39053   0193EE  2A1A               	incf	(pad@i+1)^(0+1280),f,c
 39054   0193F0                     l8541:
 39055                           
 39056                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 39057   0193F0  5016               	movf	pad@p^(0+1280),w,c
 39058   0193F2  5C19               	subwf	pad@i^(0+1280),w,c
 39059   0193F4  501A               	movf	(pad@i+1)^(0+1280),w,c
 39060   0193F6  0A80               	xorlw	128
 39061   0193F8  6E18               	movwf	??_pad^(0+1280),c
 39062   0193FA  5017               	movf	(pad@p+1)^(0+1280),w,c
 39063   0193FC  0A80               	xorlw	128
 39064   0193FE  5818               	subwfb	??_pad^(0+1280),w,c
 39065   019400  A0D8               	btfss	status,0,c
 39066   019402  D7EA               	goto	l8537
 39067                           
 39068                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 39069   019404  0106               	movlb	6	; () banked
 39070   019406  B1FF               	btfsc	_flags& (0+255),0,b
 39071   019408  0012               	return	
 39072                           
 39073                           ; BSR set to: 6
 39074                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 39075   01940A  C514  F50B         	movff	pad@buf,fputs@s
 39076   01940E  C515  F50C         	movff	pad@buf+1,fputs@s+1
 39077   019412  C512  F50D         	movff	pad@fp,fputs@fp
 39078   019416  C513  F50E         	movff	pad@fp+1,fputs@fp+1
 39079   01941A  EC51  F0CE         	call	_fputs	;wreg free
 39080   01941E  0012               	return		;funcret
 39081   019420                     __end_of_pad:
 39082                           	callstack 0
 39083                           
 39084 ;; *************** function _fputs *****************
 39085 ;; Defined at:
 39086 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
 39087 ;; Parameters:    Size  Location     Type
 39088 ;;  s               2   10[COMRAM] PTR const unsigned char 
 39089 ;;		 -> dbuf(80), 
 39090 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 39091 ;;		 -> sprintf@f(12), NULL(0), 
 39092 ;; Auto vars:     Size  Location     Type
 39093 ;;  i               2   15[COMRAM] int 
 39094 ;;  c               1   14[COMRAM] unsigned char 
 39095 ;; Return value:  Size  Location     Type
 39096 ;;                  2   10[COMRAM] int 
 39097 ;; Registers used:
 39098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39099 ;; Tracked objects:
 39100 ;;		On entry : 3F/6
 39101 ;;		On exit  : 0/0
 39102 ;;		Unchanged: 0/0
 39103 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39105 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39107 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39108 ;;Total ram usage:        7 bytes
 39109 ;; Hardware stack levels used: 1
 39110 ;; Hardware stack levels required when called: 2
 39111 ;; This function calls:
 39112 ;;		_fputc
 39113 ;; This function is called by:
 39114 ;;		_pad
 39115 ;; This function uses a non-reentrant model
 39116 ;;
 39117                           
 39118                           	psect	text99
 39119   019CA2                     __ptext99:
 39120                           	callstack 0
 39121   019CA2                     _fputs:
 39122                           	callstack 118
 39123                           
 39124                           ; BSR set to: 6
 39125                           
 39126                           ;incstack = 0
 39127   019CA2  0E00               	movlw	0
 39128   019CA4  6E11               	movwf	(fputs@i+1)^(0+1280),c
 39129   019CA6  0E00               	movlw	0
 39130   019CA8  6E10               	movwf	fputs@i^(0+1280),c
 39131   019CAA  D00B               	goto	l8061
 39132   019CAC                     l8057:
 39133   019CAC  C50F  F502         	movff	fputs@c,fputc@c
 39134   019CB0  6A03               	clrf	(fputc@c+1)^(0+1280),c
 39135   019CB2  C50D  F504         	movff	fputs@fp,fputc@fp
 39136   019CB6  C50E  F505         	movff	fputs@fp+1,fputc@fp+1
 39137   019CBA  EC96  F0C7         	call	_fputc	;wreg free
 39138   019CBE  4A10               	infsnz	fputs@i^(0+1280),f,c
 39139   019CC0  2A11               	incf	(fputs@i+1)^(0+1280),f,c
 39140   019CC2                     l8061:
 39141   019CC2  5010               	movf	fputs@i^(0+1280),w,c
 39142   019CC4  240B               	addwf	fputs@s^(0+1280),w,c
 39143   019CC6  6ED9               	movwf	fsr2l,c
 39144   019CC8  5011               	movf	(fputs@i+1)^(0+1280),w,c
 39145   019CCA  200C               	addwfc	(fputs@s+1)^(0+1280),w,c
 39146   019CCC  6EDA               	movwf	fsr2h,c
 39147   019CCE  50DF               	movf	indf2,w,c
 39148   019CD0  6E0F               	movwf	fputs@c^(0+1280),c
 39149   019CD2  500F               	movf	fputs@c^(0+1280),w,c
 39150   019CD4  B4D8               	btfsc	status,2,c
 39151   019CD6  0012               	return	
 39152   019CD8  D7E9               	goto	l8057
 39153   019CDA                     __end_of_fputs:
 39154                           	callstack 0
 39155                           
 39156 ;; *************** function _abs *****************
 39157 ;; Defined at:
 39158 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
 39159 ;; Parameters:    Size  Location     Type
 39160 ;;  a               2   10[COMRAM] int 
 39161 ;; Auto vars:     Size  Location     Type
 39162 ;;		None
 39163 ;; Return value:  Size  Location     Type
 39164 ;;                  2   10[COMRAM] int 
 39165 ;; Registers used:
 39166 ;;		wreg, status,2, status,0
 39167 ;; Tracked objects:
 39168 ;;		On entry : 0/7
 39169 ;;		On exit  : 0/0
 39170 ;;		Unchanged: 0/0
 39171 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39175 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39176 ;;Total ram usage:        4 bytes
 39177 ;; Hardware stack levels used: 1
 39178 ;; This function calls:
 39179 ;;		Nothing
 39180 ;; This function is called by:
 39181 ;;		_dtoa
 39182 ;; This function uses a non-reentrant model
 39183 ;;
 39184                           
 39185                           	psect	text100
 39186   019E7E                     __ptext100:
 39187                           	callstack 0
 39188   019E7E                     _abs:
 39189                           	callstack 121
 39190                           
 39191                           ;incstack = 0
 39192   019E7E  BE0C               	btfsc	(abs@a+1)^(0+1280),7,c
 39193   019E80  D005               	goto	l2670
 39194   019E82  C50B  F50B         	movff	abs@a,?_abs
 39195   019E86  C50C  F50C         	movff	abs@a+1,?_abs+1
 39196   019E8A  0012               	return	
 39197   019E8C                     l2670:
 39198   019E8C  C50B  F50D         	movff	abs@a,??_abs
 39199   019E90  C50C  F50E         	movff	abs@a+1,??_abs+1
 39200   019E94  1E0D               	comf	??_abs^(0+1280),f,c
 39201   019E96  1E0E               	comf	(??_abs+1)^(0+1280),f,c
 39202   019E98  4A0D               	infsnz	??_abs^(0+1280),f,c
 39203   019E9A  2A0E               	incf	(??_abs+1)^(0+1280),f,c
 39204   019E9C  C50D  F50B         	movff	??_abs,?_abs
 39205   019EA0  C50E  F50C         	movff	??_abs+1,?_abs+1
 39206   019EA4  0012               	return		;funcret
 39207   019EA6                     __end_of_abs:
 39208                           	callstack 0
 39209                           
 39210 ;; *************** function ___almod *****************
 39211 ;; Defined at:
 39212 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\almod.c"
 39213 ;; Parameters:    Size  Location     Type
 39214 ;;  dividend        4    0[COMRAM] long 
 39215 ;;  divisor         4    4[COMRAM] long 
 39216 ;; Auto vars:     Size  Location     Type
 39217 ;;  sign            1    9[COMRAM] unsigned char 
 39218 ;;  counter         1    8[COMRAM] unsigned char 
 39219 ;; Return value:  Size  Location     Type
 39220 ;;                  4    0[COMRAM] long 
 39221 ;; Registers used:
 39222 ;;		wreg, status,2, status,0
 39223 ;; Tracked objects:
 39224 ;;		On entry : 0/7
 39225 ;;		On exit  : 0/0
 39226 ;;		Unchanged: 0/0
 39227 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39228 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39231 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39232 ;;Total ram usage:       10 bytes
 39233 ;; Hardware stack levels used: 1
 39234 ;; This function calls:
 39235 ;;		Nothing
 39236 ;; This function is called by:
 39237 ;;		_dtoa
 39238 ;; This function uses a non-reentrant model
 39239 ;;
 39240                           
 39241                           	psect	text101
 39242   018D32                     __ptext101:
 39243                           	callstack 0
 39244   018D32                     ___almod:
 39245                           	callstack 121
 39246                           
 39247                           ;incstack = 0
 39248   018D32  0E00               	movlw	0
 39249   018D34  6E0A               	movwf	___almod@sign^(0+1280),c
 39250   018D36  AE04               	btfss	(___almod@dividend+3)^(0+1280),7,c
 39251   018D38  D00A               	goto	l8137
 39252   018D3A  1E04               	comf	(___almod@dividend+3)^(0+1280),f,c
 39253   018D3C  1E03               	comf	(___almod@dividend+2)^(0+1280),f,c
 39254   018D3E  1E02               	comf	(___almod@dividend+1)^(0+1280),f,c
 39255   018D40  6C01               	negf	___almod@dividend^(0+1280),c
 39256   018D42  0E00               	movlw	0
 39257   018D44  2202               	addwfc	(___almod@dividend+1)^(0+1280),f,c
 39258   018D46  2203               	addwfc	(___almod@dividend+2)^(0+1280),f,c
 39259   018D48  2204               	addwfc	(___almod@dividend+3)^(0+1280),f,c
 39260   018D4A  0E01               	movlw	1
 39261   018D4C  6E0A               	movwf	___almod@sign^(0+1280),c
 39262   018D4E                     l8137:
 39263   018D4E  AE08               	btfss	(___almod@divisor+3)^(0+1280),7,c
 39264   018D50  D008               	goto	l8141
 39265   018D52  1E08               	comf	(___almod@divisor+3)^(0+1280),f,c
 39266   018D54  1E07               	comf	(___almod@divisor+2)^(0+1280),f,c
 39267   018D56  1E06               	comf	(___almod@divisor+1)^(0+1280),f,c
 39268   018D58  6C05               	negf	___almod@divisor^(0+1280),c
 39269   018D5A  0E00               	movlw	0
 39270   018D5C  2206               	addwfc	(___almod@divisor+1)^(0+1280),f,c
 39271   018D5E  2207               	addwfc	(___almod@divisor+2)^(0+1280),f,c
 39272   018D60  2208               	addwfc	(___almod@divisor+3)^(0+1280),f,c
 39273   018D62                     l8141:
 39274   018D62  5005               	movf	___almod@divisor^(0+1280),w,c
 39275   018D64  1006               	iorwf	(___almod@divisor+1)^(0+1280),w,c
 39276   018D66  1007               	iorwf	(___almod@divisor+2)^(0+1280),w,c
 39277   018D68  1008               	iorwf	(___almod@divisor+3)^(0+1280),w,c
 39278   018D6A  B4D8               	btfsc	status,2,c
 39279   018D6C  D024               	goto	l8157
 39280   018D6E  0E01               	movlw	1
 39281   018D70  6E09               	movwf	___almod@counter^(0+1280),c
 39282   018D72  D006               	goto	l8147
 39283   018D74                     l8145:
 39284   018D74  90D8               	bcf	status,0,c
 39285   018D76  3605               	rlcf	___almod@divisor^(0+1280),f,c
 39286   018D78  3606               	rlcf	(___almod@divisor+1)^(0+1280),f,c
 39287   018D7A  3607               	rlcf	(___almod@divisor+2)^(0+1280),f,c
 39288   018D7C  3608               	rlcf	(___almod@divisor+3)^(0+1280),f,c
 39289   018D7E  2A09               	incf	___almod@counter^(0+1280),f,c
 39290   018D80                     l8147:
 39291   018D80  AE08               	btfss	(___almod@divisor+3)^(0+1280),7,c
 39292   018D82  D7F8               	goto	l8145
 39293   018D84                     u8810:
 39294   018D84  5005               	movf	___almod@divisor^(0+1280),w,c
 39295   018D86  5C01               	subwf	___almod@dividend^(0+1280),w,c
 39296   018D88  5006               	movf	(___almod@divisor+1)^(0+1280),w,c
 39297   018D8A  5802               	subwfb	(___almod@dividend+1)^(0+1280),w,c
 39298   018D8C  5007               	movf	(___almod@divisor+2)^(0+1280),w,c
 39299   018D8E  5803               	subwfb	(___almod@dividend+2)^(0+1280),w,c
 39300   018D90  5008               	movf	(___almod@divisor+3)^(0+1280),w,c
 39301   018D92  5804               	subwfb	(___almod@dividend+3)^(0+1280),w,c
 39302   018D94  A0D8               	btfss	status,0,c
 39303   018D96  D008               	goto	l8153
 39304   018D98  5005               	movf	___almod@divisor^(0+1280),w,c
 39305   018D9A  5E01               	subwf	___almod@dividend^(0+1280),f,c
 39306   018D9C  5006               	movf	(___almod@divisor+1)^(0+1280),w,c
 39307   018D9E  5A02               	subwfb	(___almod@dividend+1)^(0+1280),f,c
 39308   018DA0  5007               	movf	(___almod@divisor+2)^(0+1280),w,c
 39309   018DA2  5A03               	subwfb	(___almod@dividend+2)^(0+1280),f,c
 39310   018DA4  5008               	movf	(___almod@divisor+3)^(0+1280),w,c
 39311   018DA6  5A04               	subwfb	(___almod@dividend+3)^(0+1280),f,c
 39312   018DA8                     l8153:
 39313   018DA8  90D8               	bcf	status,0,c
 39314   018DAA  3208               	rrcf	(___almod@divisor+3)^(0+1280),f,c
 39315   018DAC  3207               	rrcf	(___almod@divisor+2)^(0+1280),f,c
 39316   018DAE  3206               	rrcf	(___almod@divisor+1)^(0+1280),f,c
 39317   018DB0  3205               	rrcf	___almod@divisor^(0+1280),f,c
 39318   018DB2  2E09               	decfsz	___almod@counter^(0+1280),f,c
 39319   018DB4  D7E7               	goto	u8810
 39320   018DB6                     l8157:
 39321   018DB6  500A               	movf	___almod@sign^(0+1280),w,c
 39322   018DB8  B4D8               	btfsc	status,2,c
 39323   018DBA  D008               	goto	l8161
 39324   018DBC  1E04               	comf	(___almod@dividend+3)^(0+1280),f,c
 39325   018DBE  1E03               	comf	(___almod@dividend+2)^(0+1280),f,c
 39326   018DC0  1E02               	comf	(___almod@dividend+1)^(0+1280),f,c
 39327   018DC2  6C01               	negf	___almod@dividend^(0+1280),c
 39328   018DC4  0E00               	movlw	0
 39329   018DC6  2202               	addwfc	(___almod@dividend+1)^(0+1280),f,c
 39330   018DC8  2203               	addwfc	(___almod@dividend+2)^(0+1280),f,c
 39331   018DCA  2204               	addwfc	(___almod@dividend+3)^(0+1280),f,c
 39332   018DCC                     l8161:
 39333   018DCC  C501  F501         	movff	___almod@dividend,?___almod
 39334   018DD0  C502  F502         	movff	___almod@dividend+1,?___almod+1
 39335   018DD4  C503  F503         	movff	___almod@dividend+2,?___almod+2
 39336   018DD8  C504  F504         	movff	___almod@dividend+3,?___almod+3
 39337   018DDC  0012               	return		;funcret
 39338   018DDE                     __end_of___almod:
 39339                           	callstack 0
 39340                           
 39341 ;; *************** function ___aldiv *****************
 39342 ;; Defined at:
 39343 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
 39344 ;; Parameters:    Size  Location     Type
 39345 ;;  dividend        4    0[COMRAM] long 
 39346 ;;  divisor         4    4[COMRAM] long 
 39347 ;; Auto vars:     Size  Location     Type
 39348 ;;  quotient        4   10[COMRAM] long 
 39349 ;;  sign            1    9[COMRAM] unsigned char 
 39350 ;;  counter         1    8[COMRAM] unsigned char 
 39351 ;; Return value:  Size  Location     Type
 39352 ;;                  4    0[COMRAM] long 
 39353 ;; Registers used:
 39354 ;;		wreg, status,2, status,0
 39355 ;; Tracked objects:
 39356 ;;		On entry : 0/7
 39357 ;;		On exit  : 0/0
 39358 ;;		Unchanged: 0/0
 39359 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39361 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39363 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39364 ;;Total ram usage:       14 bytes
 39365 ;; Hardware stack levels used: 1
 39366 ;; This function calls:
 39367 ;;		Nothing
 39368 ;; This function is called by:
 39369 ;;		_dtoa
 39370 ;; This function uses a non-reentrant model
 39371 ;;
 39372                           
 39373                           	psect	text102
 39374   018530                     __ptext102:
 39375                           	callstack 0
 39376   018530                     ___aldiv:
 39377                           	callstack 121
 39378                           
 39379                           ;incstack = 0
 39380   018530  0E00               	movlw	0
 39381   018532  6E0A               	movwf	___aldiv@sign^(0+1280),c
 39382   018534  AE08               	btfss	(___aldiv@divisor+3)^(0+1280),7,c
 39383   018536  D00A               	goto	l8093
 39384   018538  1E08               	comf	(___aldiv@divisor+3)^(0+1280),f,c
 39385   01853A  1E07               	comf	(___aldiv@divisor+2)^(0+1280),f,c
 39386   01853C  1E06               	comf	(___aldiv@divisor+1)^(0+1280),f,c
 39387   01853E  6C05               	negf	___aldiv@divisor^(0+1280),c
 39388   018540  0E00               	movlw	0
 39389   018542  2206               	addwfc	(___aldiv@divisor+1)^(0+1280),f,c
 39390   018544  2207               	addwfc	(___aldiv@divisor+2)^(0+1280),f,c
 39391   018546  2208               	addwfc	(___aldiv@divisor+3)^(0+1280),f,c
 39392   018548  0E01               	movlw	1
 39393   01854A  6E0A               	movwf	___aldiv@sign^(0+1280),c
 39394   01854C                     l8093:
 39395   01854C  AE04               	btfss	(___aldiv@dividend+3)^(0+1280),7,c
 39396   01854E  D00A               	goto	l8099
 39397   018550  1E04               	comf	(___aldiv@dividend+3)^(0+1280),f,c
 39398   018552  1E03               	comf	(___aldiv@dividend+2)^(0+1280),f,c
 39399   018554  1E02               	comf	(___aldiv@dividend+1)^(0+1280),f,c
 39400   018556  6C01               	negf	___aldiv@dividend^(0+1280),c
 39401   018558  0E00               	movlw	0
 39402   01855A  2202               	addwfc	(___aldiv@dividend+1)^(0+1280),f,c
 39403   01855C  2203               	addwfc	(___aldiv@dividend+2)^(0+1280),f,c
 39404   01855E  2204               	addwfc	(___aldiv@dividend+3)^(0+1280),f,c
 39405   018560  0E01               	movlw	1
 39406   018562  1A0A               	xorwf	___aldiv@sign^(0+1280),f,c
 39407   018564                     l8099:
 39408   018564  0E00               	movlw	0
 39409   018566  6E0B               	movwf	___aldiv@quotient^(0+1280),c
 39410   018568  0E00               	movlw	0
 39411   01856A  6E0C               	movwf	(___aldiv@quotient+1)^(0+1280),c
 39412   01856C  0E00               	movlw	0
 39413   01856E  6E0D               	movwf	(___aldiv@quotient+2)^(0+1280),c
 39414   018570  0E00               	movlw	0
 39415   018572  6E0E               	movwf	(___aldiv@quotient+3)^(0+1280),c
 39416   018574  5005               	movf	___aldiv@divisor^(0+1280),w,c
 39417   018576  1006               	iorwf	(___aldiv@divisor+1)^(0+1280),w,c
 39418   018578  1007               	iorwf	(___aldiv@divisor+2)^(0+1280),w,c
 39419   01857A  1008               	iorwf	(___aldiv@divisor+3)^(0+1280),w,c
 39420   01857C  B4D8               	btfsc	status,2,c
 39421   01857E  D02A               	goto	l8121
 39422   018580  0E01               	movlw	1
 39423   018582  6E09               	movwf	___aldiv@counter^(0+1280),c
 39424   018584  D006               	goto	l8107
 39425   018586                     l8105:
 39426   018586  90D8               	bcf	status,0,c
 39427   018588  3605               	rlcf	___aldiv@divisor^(0+1280),f,c
 39428   01858A  3606               	rlcf	(___aldiv@divisor+1)^(0+1280),f,c
 39429   01858C  3607               	rlcf	(___aldiv@divisor+2)^(0+1280),f,c
 39430   01858E  3608               	rlcf	(___aldiv@divisor+3)^(0+1280),f,c
 39431   018590  2A09               	incf	___aldiv@counter^(0+1280),f,c
 39432   018592                     l8107:
 39433   018592  AE08               	btfss	(___aldiv@divisor+3)^(0+1280),7,c
 39434   018594  D7F8               	goto	l8105
 39435   018596                     u8750:
 39436   018596  90D8               	bcf	status,0,c
 39437   018598  360B               	rlcf	___aldiv@quotient^(0+1280),f,c
 39438   01859A  360C               	rlcf	(___aldiv@quotient+1)^(0+1280),f,c
 39439   01859C  360D               	rlcf	(___aldiv@quotient+2)^(0+1280),f,c
 39440   01859E  360E               	rlcf	(___aldiv@quotient+3)^(0+1280),f,c
 39441   0185A0  5005               	movf	___aldiv@divisor^(0+1280),w,c
 39442   0185A2  5C01               	subwf	___aldiv@dividend^(0+1280),w,c
 39443   0185A4  5006               	movf	(___aldiv@divisor+1)^(0+1280),w,c
 39444   0185A6  5802               	subwfb	(___aldiv@dividend+1)^(0+1280),w,c
 39445   0185A8  5007               	movf	(___aldiv@divisor+2)^(0+1280),w,c
 39446   0185AA  5803               	subwfb	(___aldiv@dividend+2)^(0+1280),w,c
 39447   0185AC  5008               	movf	(___aldiv@divisor+3)^(0+1280),w,c
 39448   0185AE  5804               	subwfb	(___aldiv@dividend+3)^(0+1280),w,c
 39449   0185B0  A0D8               	btfss	status,0,c
 39450   0185B2  D009               	goto	l8117
 39451   0185B4  5005               	movf	___aldiv@divisor^(0+1280),w,c
 39452   0185B6  5E01               	subwf	___aldiv@dividend^(0+1280),f,c
 39453   0185B8  5006               	movf	(___aldiv@divisor+1)^(0+1280),w,c
 39454   0185BA  5A02               	subwfb	(___aldiv@dividend+1)^(0+1280),f,c
 39455   0185BC  5007               	movf	(___aldiv@divisor+2)^(0+1280),w,c
 39456   0185BE  5A03               	subwfb	(___aldiv@dividend+2)^(0+1280),f,c
 39457   0185C0  5008               	movf	(___aldiv@divisor+3)^(0+1280),w,c
 39458   0185C2  5A04               	subwfb	(___aldiv@dividend+3)^(0+1280),f,c
 39459   0185C4  800B               	bsf	___aldiv@quotient^(0+1280),0,c
 39460   0185C6                     l8117:
 39461   0185C6  90D8               	bcf	status,0,c
 39462   0185C8  3208               	rrcf	(___aldiv@divisor+3)^(0+1280),f,c
 39463   0185CA  3207               	rrcf	(___aldiv@divisor+2)^(0+1280),f,c
 39464   0185CC  3206               	rrcf	(___aldiv@divisor+1)^(0+1280),f,c
 39465   0185CE  3205               	rrcf	___aldiv@divisor^(0+1280),f,c
 39466   0185D0  2E09               	decfsz	___aldiv@counter^(0+1280),f,c
 39467   0185D2  D7E1               	goto	u8750
 39468   0185D4                     l8121:
 39469   0185D4  500A               	movf	___aldiv@sign^(0+1280),w,c
 39470   0185D6  B4D8               	btfsc	status,2,c
 39471   0185D8  D008               	goto	l8125
 39472   0185DA  1E0E               	comf	(___aldiv@quotient+3)^(0+1280),f,c
 39473   0185DC  1E0D               	comf	(___aldiv@quotient+2)^(0+1280),f,c
 39474   0185DE  1E0C               	comf	(___aldiv@quotient+1)^(0+1280),f,c
 39475   0185E0  6C0B               	negf	___aldiv@quotient^(0+1280),c
 39476   0185E2  0E00               	movlw	0
 39477   0185E4  220C               	addwfc	(___aldiv@quotient+1)^(0+1280),f,c
 39478   0185E6  220D               	addwfc	(___aldiv@quotient+2)^(0+1280),f,c
 39479   0185E8  220E               	addwfc	(___aldiv@quotient+3)^(0+1280),f,c
 39480   0185EA                     l8125:
 39481   0185EA  C50B  F501         	movff	___aldiv@quotient,?___aldiv
 39482   0185EE  C50C  F502         	movff	___aldiv@quotient+1,?___aldiv+1
 39483   0185F2  C50D  F503         	movff	___aldiv@quotient+2,?___aldiv+2
 39484   0185F6  C50E  F504         	movff	___aldiv@quotient+3,?___aldiv+3
 39485   0185FA  0012               	return		;funcret
 39486   0185FC                     __end_of___aldiv:
 39487                           	callstack 0
 39488                           
 39489 ;; *************** function _ctoa *****************
 39490 ;; Defined at:
 39491 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 39492 ;; Parameters:    Size  Location     Type
 39493 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
 39494 ;;		 -> sprintf@f(12), NULL(0), 
 39495 ;;  c               1   12[COMRAM] unsigned char 
 39496 ;; Auto vars:     Size  Location     Type
 39497 ;;  w               2   16[COMRAM] int 
 39498 ;;  l               2   14[COMRAM] int 
 39499 ;; Return value:  Size  Location     Type
 39500 ;;                  1    wreg      void 
 39501 ;; Registers used:
 39502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39503 ;; Tracked objects:
 39504 ;;		On entry : 3F/5
 39505 ;;		On exit  : 0/0
 39506 ;;		Unchanged: 0/0
 39507 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39508 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39509 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39511 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39512 ;;Total ram usage:        8 bytes
 39513 ;; Hardware stack levels used: 1
 39514 ;; Hardware stack levels required when called: 2
 39515 ;; This function calls:
 39516 ;;		_fputc
 39517 ;; This function is called by:
 39518 ;;		_vfpfcnvrt
 39519 ;; This function uses a non-reentrant model
 39520 ;;
 39521                           
 39522                           	psect	text103
 39523   019104                     __ptext103:
 39524                           	callstack 0
 39525   019104                     _ctoa:
 39526                           	callstack 120
 39527                           
 39528                           ; BSR set to: 5
 39529                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 476: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 477: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 478:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 481:  
      +                             w = width ? width - 1 : width;
 39530                           
 39531                           ;incstack = 0
 39532   019104  0107               	movlb	7	; () banked
 39533   019106  5113               	movf	_width& (0+255),w,b
 39534   019108  1114               	iorwf	(_width+1)& (0+255),w,b
 39535   01910A  A4D8               	btfss	status,2,c
 39536   01910C  D005               	goto	l8611
 39537                           
 39538                           ; BSR set to: 7
 39539   01910E  C713  F511         	movff	_width,ctoa@w
 39540   019112  C714  F512         	movff	_width+1,ctoa@w+1
 39541   019116  D006               	goto	l8613
 39542   019118                     l8611:
 39543                           
 39544                           ; BSR set to: 7
 39545   019118  0EFF               	movlw	255
 39546   01911A  2513               	addwf	_width& (0+255),w,b
 39547   01911C  6E11               	movwf	ctoa@w^(0+1280),c
 39548   01911E  0EFF               	movlw	255
 39549   019120  2114               	addwfc	(_width+1)& (0+255),w,b
 39550   019122  6E12               	movwf	(ctoa@w+1)^(0+1280),c
 39551   019124                     l8613:
 39552                           
 39553                           ; BSR set to: 7
 39554                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
 39555   019124  0106               	movlb	6	; () banked
 39556   019126  A1FF               	btfss	_flags& (0+255),0,b
 39557   019128  D009               	goto	l8617
 39558                           
 39559                           ; BSR set to: 6
 39560                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
 39561   01912A  C50D  F502         	movff	ctoa@c,fputc@c
 39562   01912E  6A03               	clrf	(fputc@c+1)^(0+1280),c
 39563   019130  C50B  F504         	movff	ctoa@fp,fputc@fp
 39564   019134  C50C  F505         	movff	ctoa@fp+1,fputc@fp+1
 39565   019138  EC96  F0C7         	call	_fputc	;wreg free
 39566   01913C                     l8617:
 39567                           
 39568                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
 39569   01913C  AE12               	btfss	(ctoa@w+1)^(0+1280),7,c
 39570   01913E  D004               	goto	l2456
 39571   019140  0E00               	movlw	0
 39572   019142  6E12               	movwf	(ctoa@w+1)^(0+1280),c
 39573   019144  0E00               	movlw	0
 39574   019146  6E11               	movwf	ctoa@w^(0+1280),c
 39575   019148                     l2456:
 39576                           
 39577                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 492:     l = 0;
 39578   019148  0E00               	movlw	0
 39579   01914A  6E10               	movwf	(ctoa@l+1)^(0+1280),c
 39580   01914C  0E00               	movlw	0
 39581   01914E  6E0F               	movwf	ctoa@l^(0+1280),c
 39582                           
 39583                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
 39584   019150  D00C               	goto	l8627
 39585   019152                     l8623:
 39586                           
 39587                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
 39588   019152  0E00               	movlw	0
 39589   019154  6E03               	movwf	(fputc@c+1)^(0+1280),c
 39590   019156  0E20               	movlw	32
 39591   019158  6E02               	movwf	fputc@c^(0+1280),c
 39592   01915A  C50B  F504         	movff	ctoa@fp,fputc@fp
 39593   01915E  C50C  F505         	movff	ctoa@fp+1,fputc@fp+1
 39594   019162  EC96  F0C7         	call	_fputc	;wreg free
 39595                           
 39596                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 495:         ++l;
 39597   019166  4A0F               	infsnz	ctoa@l^(0+1280),f,c
 39598   019168  2A10               	incf	(ctoa@l+1)^(0+1280),f,c
 39599   01916A                     l8627:
 39600                           
 39601                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
 39602   01916A  5011               	movf	ctoa@w^(0+1280),w,c
 39603   01916C  5C0F               	subwf	ctoa@l^(0+1280),w,c
 39604   01916E  5010               	movf	(ctoa@l+1)^(0+1280),w,c
 39605   019170  0A80               	xorlw	128
 39606   019172  6E0E               	movwf	??_ctoa^(0+1280),c
 39607   019174  5012               	movf	(ctoa@w+1)^(0+1280),w,c
 39608   019176  0A80               	xorlw	128
 39609   019178  580E               	subwfb	??_ctoa^(0+1280),w,c
 39610   01917A  A0D8               	btfss	status,0,c
 39611   01917C  D7EA               	goto	l8623
 39612                           
 39613                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
 39614   01917E  0106               	movlb	6	; () banked
 39615   019180  B1FF               	btfsc	_flags& (0+255),0,b
 39616   019182  0012               	return	
 39617                           
 39618                           ; BSR set to: 6
 39619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
 39620   019184  C50D  F502         	movff	ctoa@c,fputc@c
 39621   019188  6A03               	clrf	(fputc@c+1)^(0+1280),c
 39622   01918A  C50B  F504         	movff	ctoa@fp,fputc@fp
 39623   01918E  C50C  F505         	movff	ctoa@fp+1,fputc@fp+1
 39624   019192  EC96  F0C7         	call	_fputc	;wreg free
 39625   019196  0012               	return		;funcret
 39626   019198                     __end_of_ctoa:
 39627                           	callstack 0
 39628                           
 39629 ;; *************** function _fputc *****************
 39630 ;; Defined at:
 39631 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
 39632 ;; Parameters:    Size  Location     Type
 39633 ;;  c               2    1[COMRAM] int 
 39634 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
 39635 ;;		 -> sprintf@f(12), NULL(0), 
 39636 ;; Auto vars:     Size  Location     Type
 39637 ;;		None
 39638 ;; Return value:  Size  Location     Type
 39639 ;;                  2    1[COMRAM] int 
 39640 ;; Registers used:
 39641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39642 ;; Tracked objects:
 39643 ;;		On entry : 0/5
 39644 ;;		On exit  : 0/0
 39645 ;;		Unchanged: 0/0
 39646 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39649 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39650 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39651 ;;Total ram usage:        9 bytes
 39652 ;; Hardware stack levels used: 1
 39653 ;; Hardware stack levels required when called: 1
 39654 ;; This function calls:
 39655 ;;		_putch
 39656 ;; This function is called by:
 39657 ;;		_pad
 39658 ;;		_ctoa
 39659 ;;		_stoa
 39660 ;;		_vfpfcnvrt
 39661 ;;		_fputs
 39662 ;; This function uses a non-reentrant model
 39663 ;;
 39664                           
 39665                           	psect	text104
 39666   018F2C                     __ptext104:
 39667                           	callstack 0
 39668   018F2C                     _fputc:
 39669                           	callstack 118
 39670                           
 39671                           ;incstack = 0
 39672   018F2C  5004               	movf	fputc@fp^(0+1280),w,c
 39673   018F2E  1005               	iorwf	(fputc@fp+1)^(0+1280),w,c
 39674   018F30  B4D8               	btfsc	status,2,c
 39675   018F32  D004               	goto	u8270
 39676   018F34  5004               	movf	fputc@fp^(0+1280),w,c
 39677   018F36  1005               	iorwf	(fputc@fp+1)^(0+1280),w,c
 39678   018F38  A4D8               	btfss	status,2,c
 39679   018F3A  D004               	goto	l7845
 39680   018F3C                     u8270:
 39681   018F3C  5002               	movf	fputc@c^(0+1280),w,c
 39682   018F3E  ECF6  F0CF         	call	_putch
 39683   018F42  0012               	return	
 39684   018F44                     l7845:
 39685   018F44  EE20 F00A          	lfsr	2,10
 39686   018F48  5004               	movf	fputc@fp^(0+1280),w,c
 39687   018F4A  26D9               	addwf	fsr2l,f,c
 39688   018F4C  5005               	movf	(fputc@fp+1)^(0+1280),w,c
 39689   018F4E  22DA               	addwfc	fsr2h,f,c
 39690   018F50  50DE               	movf	postinc2,w,c
 39691   018F52  10DE               	iorwf	postinc2,w,c
 39692   018F54  B4D8               	btfsc	status,2,c
 39693   018F56  D016               	goto	u8290
 39694   018F58  EE20 F00A          	lfsr	2,10
 39695   018F5C  5004               	movf	fputc@fp^(0+1280),w,c
 39696   018F5E  26D9               	addwf	fsr2l,f,c
 39697   018F60  5005               	movf	(fputc@fp+1)^(0+1280),w,c
 39698   018F62  22DA               	addwfc	fsr2h,f,c
 39699   018F64  EE10 F003          	lfsr	1,3
 39700   018F68  5004               	movf	fputc@fp^(0+1280),w,c
 39701   018F6A  26E1               	addwf	fsr1l,f,c
 39702   018F6C  5005               	movf	(fputc@fp+1)^(0+1280),w,c
 39703   018F6E  22E2               	addwfc	fsr1h,f,c
 39704   018F70  50DE               	movf	postinc2,w,c
 39705   018F72  5CE6               	subwf	postinc1,w,c
 39706   018F74  50E6               	movf	postinc1,w,c
 39707   018F76  0A80               	xorlw	128
 39708   018F78  6E0A               	movwf	(??_fputc+4)^(0+1280),c
 39709   018F7A  50DE               	movf	postinc2,w,c
 39710   018F7C  0A80               	xorlw	128
 39711   018F7E  580A               	subwfb	(??_fputc+4)^(0+1280),w,c
 39712   018F80  B0D8               	btfsc	status,0,c
 39713   018F82  0012               	return	
 39714   018F84                     u8290:
 39715   018F84  EE20 F003          	lfsr	2,3
 39716   018F88  5004               	movf	fputc@fp^(0+1280),w,c
 39717   018F8A  26D9               	addwf	fsr2l,f,c
 39718   018F8C  5005               	movf	(fputc@fp+1)^(0+1280),w,c
 39719   018F8E  22DA               	addwfc	fsr2h,f,c
 39720   018F90  C4DE F506          	movff	postinc2,??_fputc
 39721   018F94  C4DD F507          	movff	postdec2,??_fputc+1
 39722   018F98  C504  F4D9         	movff	fputc@fp,fsr2l
 39723   018F9C  C505  F4DA         	movff	fputc@fp+1,fsr2h
 39724   018FA0  C4DE F508          	movff	postinc2,??_fputc+2
 39725   018FA4  C4DD F509          	movff	postdec2,??_fputc+3
 39726   018FA8  5006               	movf	??_fputc^(0+1280),w,c
 39727   018FAA  2408               	addwf	(??_fputc+2)^(0+1280),w,c
 39728   018FAC  6ED9               	movwf	fsr2l,c
 39729   018FAE  5007               	movf	(??_fputc+1)^(0+1280),w,c
 39730   018FB0  2009               	addwfc	(??_fputc+3)^(0+1280),w,c
 39731   018FB2  6EDA               	movwf	fsr2h,c
 39732   018FB4  C502  F4DF         	movff	fputc@c,indf2
 39733   018FB8  EE20 F003          	lfsr	2,3
 39734   018FBC  5004               	movf	fputc@fp^(0+1280),w,c
 39735   018FBE  26D9               	addwf	fsr2l,f,c
 39736   018FC0  5005               	movf	(fputc@fp+1)^(0+1280),w,c
 39737   018FC2  22DA               	addwfc	fsr2h,f,c
 39738   018FC4  2ADE               	incf	postinc2,f,c
 39739   018FC6  0E00               	movlw	0
 39740   018FC8  22DD               	addwfc	postdec2,f,c
 39741   018FCA  0012               	return		;funcret
 39742   018FCC                     __end_of_fputc:
 39743                           	callstack 0
 39744                           
 39745 ;; *************** function _putch *****************
 39746 ;; Defined at:
 39747 ;;		line 101 in file "src/io.c"
 39748 ;; Parameters:    Size  Location     Type
 39749 ;;  c               1    wreg     unsigned char 
 39750 ;; Auto vars:     Size  Location     Type
 39751 ;;  c               1    0[COMRAM] unsigned char 
 39752 ;; Return value:  Size  Location     Type
 39753 ;;                  1    wreg      void 
 39754 ;; Registers used:
 39755 ;;		wreg
 39756 ;; Tracked objects:
 39757 ;;		On entry : 0/5
 39758 ;;		On exit  : 0/0
 39759 ;;		Unchanged: 0/0
 39760 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39765 ;;Total ram usage:        1 bytes
 39766 ;; Hardware stack levels used: 1
 39767 ;; This function calls:
 39768 ;;		Nothing
 39769 ;; This function is called by:
 39770 ;;		_fputc
 39771 ;; This function uses a non-reentrant model
 39772 ;;
 39773                           
 39774                           	psect	text105
 39775   019FEC                     __ptext105:
 39776                           	callstack 0
 39777   019FEC                     _putch:
 39778                           	callstack 118
 39779                           
 39780                           ;incstack = 0
 39781                           ;putch@c stored from wreg
 39782   019FEC  6E01               	movwf	putch@c^(0+1280),c
 39783   019FEE                     
 39784                           ;src/io.c: 102:  while(!U3TXIF);
 39785   019FEE  A2B7               	btfss	1207,1,c	;volatile
 39786   019FF0  D7FE               	goto	l7835
 39787                           
 39788                           ;src/io.c: 103:  U3TXB = c;
 39789   019FF2  C501  F2C9         	movff	putch@c,713	;volatile
 39790   019FF6  0012               	return		;funcret
 39791   019FF8                     __end_of_putch:
 39792                           	callstack 0
 39793                           
 39794 ;; *************** function _SPI_SD_begin *****************
 39795 ;; Defined at:
 39796 ;;		line 64 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 39797 ;; Parameters:    Size  Location     Type
 39798 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 39799 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 39800 ;; Auto vars:     Size  Location     Type
 39801 ;;  ctx             2    2[COMRAM] PTR struct SPI_HW
 39802 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 39803 ;; Return value:  Size  Location     Type
 39804 ;;                  1    wreg      void 
 39805 ;; Registers used:
 39806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39807 ;; Tracked objects:
 39808 ;;		On entry : 3F/7
 39809 ;;		On exit  : 3F/0
 39810 ;;		Unchanged: 0/0
 39811 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39815 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39816 ;;Total ram usage:        4 bytes
 39817 ;; Hardware stack levels used: 1
 39818 ;; This function calls:
 39819 ;;		Nothing
 39820 ;; This function is called by:
 39821 ;;		_SDCard_init
 39822 ;; This function uses a non-reentrant model
 39823 ;;
 39824                           
 39825                           	psect	text106
 39826   019D44                     __ptext106:
 39827                           	callstack 0
 39828   019D44                     _SPI_SD_begin:
 39829                           	callstack 124
 39830                           
 39831                           ; BSR set to: 7
 39832                           ;src/boards/../../drivers/pic18f47q43_spi.c: 64: void SPI_SD_begin(struct SPI *ctx_);src
      +                          /boards/../../drivers/pic18f47q43_spi.c: 65: {;src/boards/../../drivers/pic18f47q43_spi.
      +                          c: 66:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 39833                           
 39834                           ;incstack = 0
 39835   019D44  C501  F503         	movff	SPI_SD_begin@ctx_,SPI_SD_begin@ctx
 39836   019D48  C502  F504         	movff	SPI_SD_begin@ctx_+1,SPI_SD_begin@ctx+1
 39837                           
 39838                           ; BSR set to: 7
 39839                           ;src/boards/../../drivers/pic18f47q43_spi.c: 67:     ctx->bus_acquired = 0;
 39840   019D4C  EE20 F002          	lfsr	2,2
 39841   019D50  5003               	movf	SPI_SD_begin@ctx^(0+1280),w,c
 39842   019D52  26D9               	addwf	fsr2l,f,c
 39843   019D54  5004               	movf	(SPI_SD_begin@ctx+1)^(0+1280),w,c
 39844   019D56  22DA               	addwfc	fsr2h,f,c
 39845   019D58  6ADF               	clrf	indf2,c
 39846                           
 39847                           ; BSR set to: 7
 39848                           ;src/boards/../../drivers/pic18f47q43_spi.c: 69:     SPI1CON0 = 0;
 39849   019D5A  0E00               	movlw	0
 39850   019D5C  0100               	movlb	0	; () banked
 39851   019D5E  6F84               	movwf	132,b	;volatile
 39852                           
 39853                           ; BSR set to: 0
 39854                           ;src/boards/../../drivers/pic18f47q43_spi.c: 70:     SPI1CON1 = 0;
 39855   019D60  0E00               	movlw	0
 39856   019D62  6F85               	movwf	133,b	;volatile
 39857                           
 39858                           ; BSR set to: 0
 39859                           ;src/boards/../../drivers/pic18f47q43_spi.c: 71:     SPI1SCKPPS = ((2 << 3) | 0);
 39860   019D64  0E10               	movlw	16
 39861   019D66  0102               	movlb	2	; () banked
 39862   019D68  6F6A               	movwf	106,b	;volatile
 39863                           
 39864                           ; BSR set to: 2
 39865                           ;src/boards/../../drivers/pic18f47q43_spi.c: 72:     SPI1SDIPPS = ((2 << 3) | 2);
 39866   019D6A  0E12               	movlw	18
 39867   019D6C  6F6B               	movwf	107,b	;volatile
 39868                           
 39869                           ; BSR set to: 2
 39870                           ;src/boards/../../drivers/pic18f47q43_spi.c: 78:     {;src/boards/../../drivers/pic18f47
      +                          q43_spi.c: 79:     TRISC4 = 0;
 39871   019D6E  98C8               	bcf	1224,4,c	;volatile
 39872                           
 39873                           ; BSR set to: 2
 39874                           ;src/boards/../../drivers/pic18f47q43_spi.c: 80:     };src/boards/../../drivers/pic18f47
      +                          q43_spi.c: 81:     SPI1CON0bits.EN = 1;
 39875   019D70  0100               	movlb	0	; () banked
 39876   019D72  8F84               	bsf	132,7,b	;volatile
 39877                           
 39878                           ; BSR set to: 0
 39879   019D74  0012               	return		;funcret
 39880   019D76                     __end_of_SPI_SD_begin:
 39881                           	callstack 0
 39882                           
 39883 ;; *************** function _SDCard_command *****************
 39884 ;; Defined at:
 39885 ;;		line 316 in file "src/boards/../../drivers/SDCard.c"
 39886 ;; Parameters:    Size  Location     Type
 39887 ;;  command         1    wreg     unsigned char 
 39888 ;;  argument        4   39[COMRAM] unsigned long 
 39889 ;;  response_buf    2   43[COMRAM] PTR void 
 39890 ;;		 -> SDCard_init@buf(5), 
 39891 ;;  length          2   45[COMRAM] unsigned int 
 39892 ;; Auto vars:     Size  Location     Type
 39893 ;;  command         1   49[COMRAM] unsigned char 
 39894 ;;  responsep       2   52[COMRAM] PTR unsigned char 
 39895 ;;		 -> SDCard_init@buf(5), 
 39896 ;;  result          2   50[COMRAM] int 
 39897 ;;  spi             2   47[COMRAM] PTR struct SPI
 39898 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 39899 ;; Return value:  Size  Location     Type
 39900 ;;                  2   39[COMRAM] int 
 39901 ;; Registers used:
 39902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39903 ;; Tracked objects:
 39904 ;;		On entry : 0/0
 39905 ;;		On exit  : 0/0
 39906 ;;		Unchanged: 0/0
 39907 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39908 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39909 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39911 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39912 ;;Total ram usage:       15 bytes
 39913 ;; Hardware stack levels used: 1
 39914 ;; Hardware stack levels required when called: 4
 39915 ;; This function calls:
 39916 ;;		_SDCard_end_transaction
 39917 ;;		_SPI_SD_receive
 39918 ;;		___SDCard_command_r1
 39919 ;; This function is called by:
 39920 ;;		_SDCard_init
 39921 ;; This function uses a non-reentrant model
 39922 ;;
 39923                           
 39924                           	psect	text107
 39925   0195F2                     __ptext107:
 39926                           	callstack 0
 39927   0195F2                     _SDCard_command:
 39928                           	callstack 120
 39929                           
 39930                           ; BSR set to: 0
 39931                           ;incstack = 0
 39932                           ;SDCard_command@command stored from wreg
 39933   0195F2  6E32               	movwf	SDCard_command@command^(0+1280),c
 39934                           
 39935                           ;src/boards/../../drivers/SDCard.c: 316: int SDCard_command(uint8_t command, uint32_t ar
      +                          gument, void *response_buffer, unsigned int length);src/boards/../../drivers/SDCard.c: 3
      +                          17: {;src/boards/../../drivers/SDCard.c: 318:     struct SPI *spi = ctx_.spi;
 39936   0195F4  C706  F530         	movff	_ctx_,SDCard_command@spi
 39937   0195F8  C707  F531         	movff	_ctx_+1,SDCard_command@spi+1
 39938                           
 39939                           ;src/boards/../../drivers/SDCard.c: 319:     int result;;src/boards/../../drivers/SDCard
      +                          .c: 320:     uint8_t *responsep = (uint8_t*)response_buffer;
 39940   0195FC  C52C  F535         	movff	SDCard_command@response_buffer,SDCard_command@responsep
 39941   019600  C52D  F536         	movff	SDCard_command@response_buffer+1,SDCard_command@responsep+1
 39942                           
 39943                           ;src/boards/../../drivers/SDCard.c: 322:     result = __SDCard_command_r1(command, argum
      +                          ent, responsep);
 39944   019604  C528  F518         	movff	SDCard_command@argument,___SDCard_command_r1@argument
 39945   019608  C529  F519         	movff	SDCard_command@argument+1,___SDCard_command_r1@argument+1
 39946   01960C  C52A  F51A         	movff	SDCard_command@argument+2,___SDCard_command_r1@argument+2
 39947   019610  C52B  F51B         	movff	SDCard_command@argument+3,___SDCard_command_r1@argument+3
 39948   019614  C535  F51C         	movff	SDCard_command@responsep,___SDCard_command_r1@r1
 39949   019618  C536  F51D         	movff	SDCard_command@responsep+1,___SDCard_command_r1@r1+1
 39950   01961C  5032               	movf	SDCard_command@command^(0+1280),w,c
 39951   01961E  ECEF  F0C6         	call	___SDCard_command_r1
 39952   019622  C518  F533         	movff	?___SDCard_command_r1,SDCard_command@result
 39953   019626  C519  F534         	movff	?___SDCard_command_r1+1,SDCard_command@result+1
 39954                           
 39955                           ;src/boards/../../drivers/SDCard.c: 323:     if (result != 0) {
 39956   01962A  5033               	movf	SDCard_command@result^(0+1280),w,c
 39957   01962C  1034               	iorwf	(SDCard_command@result+1)^(0+1280),w,c
 39958   01962E  B4D8               	btfsc	status,2,c
 39959   019630  D003               	goto	l11441
 39960                           
 39961                           ;src/boards/../../drivers/SDCard.c: 324:         SDCard_end_transaction();
 39962   019632  EC16  F0CF         	call	_SDCard_end_transaction	;wreg free
 39963   019636  0012               	return	
 39964   019638                     l11441:
 39965                           
 39966                           ;src/boards/../../drivers/SDCard.c: 328:     SPI_SD_receive(spi, &responsep[1], length -
      +                           1);
 39967   019638  C530  F501         	movff	SDCard_command@spi,SPI_SD_receive@ctx_
 39968   01963C  C531  F502         	movff	SDCard_command@spi+1,SPI_SD_receive@ctx_+1
 39969   019640  0E01               	movlw	1
 39970   019642  2435               	addwf	SDCard_command@responsep^(0+1280),w,c
 39971   019644  6E03               	movwf	SPI_SD_receive@buf^(0+1280),c
 39972   019646  0E00               	movlw	0
 39973   019648  2036               	addwfc	(SDCard_command@responsep+1)^(0+1280),w,c
 39974   01964A  6E04               	movwf	(SPI_SD_receive@buf+1)^(0+1280),c
 39975   01964C  0EFF               	movlw	255
 39976   01964E  242E               	addwf	SDCard_command@length^(0+1280),w,c
 39977   019650  6E05               	movwf	SPI_SD_receive@count^(0+1280),c
 39978   019652  0EFF               	movlw	255
 39979   019654  202F               	addwfc	(SDCard_command@length+1)^(0+1280),w,c
 39980   019656  6E06               	movwf	(SPI_SD_receive@count+1)^(0+1280),c
 39981   019658  ECE2  F0AB         	call	_SPI_SD_receive	;wreg free
 39982                           
 39983                           ;src/boards/../../drivers/SDCard.c: 329:     SDCard_end_transaction();
 39984   01965C  EC16  F0CF         	call	_SDCard_end_transaction	;wreg free
 39985   019660  0012               	return		;funcret
 39986   019662                     __end_of_SDCard_command:
 39987                           	callstack 0
 39988                           
 39989 ;; *************** function ___SDCard_command_r1 *****************
 39990 ;; Defined at:
 39991 ;;		line 143 in file "src/boards/../../drivers/SDCard.c"
 39992 ;; Parameters:    Size  Location     Type
 39993 ;;  command         1    wreg     unsigned char 
 39994 ;;  argument        4   23[COMRAM] unsigned long 
 39995 ;;  r1              2   27[COMRAM] PTR unsigned char 
 39996 ;;		 -> SDCard_write512@response(1), SDCard_read512@response(1), SDCard_init@buf(5), 
 39997 ;; Auto vars:     Size  Location     Type
 39998 ;;  command         1   29[COMRAM] unsigned char 
 39999 ;;  buf             6   30[COMRAM] unsigned char [6]
 40000 ;;  spi             2   37[COMRAM] PTR struct SPI
 40001 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40002 ;;  response        1   36[COMRAM] unsigned char 
 40003 ;; Return value:  Size  Location     Type
 40004 ;;                  2   23[COMRAM] int 
 40005 ;; Registers used:
 40006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40007 ;; Tracked objects:
 40008 ;;		On entry : 0/5
 40009 ;;		On exit  : 0/0
 40010 ;;		Unchanged: 0/0
 40011 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40012 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40013 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40015 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40016 ;;Total ram usage:       16 bytes
 40017 ;; Hardware stack levels used: 1
 40018 ;; Hardware stack levels required when called: 3
 40019 ;; This function calls:
 40020 ;;		_SDCard_crc
 40021 ;;		_SPI_SD_begin_transaction
 40022 ;;		_SPI_SD_dummy_clocks
 40023 ;;		_SPI_SD_send
 40024 ;;		___SDCard_wait_response
 40025 ;; This function is called by:
 40026 ;;		_SDCard_read512
 40027 ;;		_SDCard_write512
 40028 ;;		_SDCard_command
 40029 ;; This function uses a non-reentrant model
 40030 ;;
 40031                           
 40032                           	psect	text108
 40033   018DDE                     __ptext108:
 40034                           	callstack 0
 40035   018DDE                     ___SDCard_command_r1:
 40036                           	callstack 115
 40037                           
 40038                           ;incstack = 0
 40039                           ;___SDCard_command_r1@command stored from wreg
 40040   018DDE  6E1E               	movwf	___SDCard_command_r1@command^(0+1280),c
 40041                           
 40042                           ;src/boards/../../drivers/SDCard.c: 143: static int __SDCard_command_r1(uint8_t command,
      +                           uint32_t argument, uint8_t *r1);src/boards/../../drivers/SDCard.c: 144: {;src/boards/..
      +                          /../drivers/SDCard.c: 145:     struct SPI *spi = ctx_.spi;
 40043   018DE0  C706  F526         	movff	_ctx_,___SDCard_command_r1@spi
 40044   018DE4  C707  F527         	movff	_ctx_+1,___SDCard_command_r1@spi+1
 40045                           
 40046                           ;src/boards/../../drivers/SDCard.c: 146:     uint8_t buf[6];;src/boards/../../drivers/SD
      +                          Card.c: 147:     uint8_t response;;src/boards/../../drivers/SDCard.c: 149:     buf[0] = 
      +                          command | 0x40;
 40047   018DE8  501E               	movf	___SDCard_command_r1@command^(0+1280),w,c
 40048   018DEA  0940               	iorlw	64
 40049   018DEC  6E1F               	movwf	___SDCard_command_r1@buf^(0+1280),c
 40050                           
 40051                           ;src/boards/../../drivers/SDCard.c: 150:     buf[1] = (argument >> 24) & 0xff;
 40052   018DEE  C51B  F520         	movff	___SDCard_command_r1@argument+3,___SDCard_command_r1@buf+1
 40053                           
 40054                           ;src/boards/../../drivers/SDCard.c: 151:     buf[2] = (argument >> 16) & 0xff;
 40055   018DF2  C51A  F521         	movff	___SDCard_command_r1@argument+2,___SDCard_command_r1@buf+2
 40056                           
 40057                           ;src/boards/../../drivers/SDCard.c: 152:     buf[3] = (argument >> 8) & 0xff;
 40058   018DF6  C519  F522         	movff	___SDCard_command_r1@argument+1,___SDCard_command_r1@buf+3
 40059                           
 40060                           ;src/boards/../../drivers/SDCard.c: 153:     buf[4] = (argument >> 0) & 0xff;
 40061   018DFA  C518  F523         	movff	___SDCard_command_r1@argument,___SDCard_command_r1@buf+4
 40062                           
 40063                           ;src/boards/../../drivers/SDCard.c: 154:     buf[5] = SDCard_crc(buf, 5) | 0x01;
 40064   018DFE  0E1F               	movlw	low ___SDCard_command_r1@buf
 40065   018E00  6E01               	movwf	SDCard_crc@buf^(0+1280),c
 40066   018E02  0E05               	movlw	high ___SDCard_command_r1@buf
 40067   018E04  6E02               	movwf	(SDCard_crc@buf+1)^(0+1280),c
 40068   018E06  0E00               	movlw	0
 40069   018E08  6E04               	movwf	(SDCard_crc@count+1)^(0+1280),c
 40070   018E0A  0E05               	movlw	5
 40071   018E0C  6E03               	movwf	SDCard_crc@count^(0+1280),c
 40072   018E0E  EC02  F0CC         	call	_SDCard_crc	;wreg free
 40073   018E12  0901               	iorlw	1
 40074   018E14  6E24               	movwf	(___SDCard_command_r1@buf+5)^(0+1280),c
 40075                           
 40076                           ;src/boards/../../drivers/SDCard.c: 156:     SPI_SD_begin_transaction(spi);
 40077   018E16  C526  F505         	movff	___SDCard_command_r1@spi,SPI_SD_begin_transaction@ctx_
 40078   018E1A  C527  F506         	movff	___SDCard_command_r1@spi+1,SPI_SD_begin_transaction@ctx_+1
 40079   018E1E  EC9C  F0CF         	call	_SPI_SD_begin_transaction	;wreg free
 40080                           
 40081                           ;src/boards/../../drivers/SDCard.c: 157:     SPI_SD_dummy_clocks(spi, 1);
 40082   018E22  C526  F50B         	movff	___SDCard_command_r1@spi,SPI_SD_dummy_clocks@ctx_
 40083   018E26  C527  F50C         	movff	___SDCard_command_r1@spi+1,SPI_SD_dummy_clocks@ctx_+1
 40084   018E2A  0E00               	movlw	0
 40085   018E2C  6E0E               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 40086   018E2E  0E01               	movlw	1
 40087   018E30  6E0D               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 40088   018E32  EC88  F0CC         	call	_SPI_SD_dummy_clocks	;wreg free
 40089                           
 40090                           ;src/boards/../../drivers/SDCard.c: 158:     SPI_SD_send(spi, buf, 6);
 40091   018E36  C526  F501         	movff	___SDCard_command_r1@spi,SPI_SD_send@ctx_
 40092   018E3A  C527  F502         	movff	___SDCard_command_r1@spi+1,SPI_SD_send@ctx_+1
 40093   018E3E  0E1F               	movlw	low ___SDCard_command_r1@buf
 40094   018E40  6E03               	movwf	SPI_SD_send@buf^(0+1280),c
 40095   018E42  0E05               	movlw	high ___SDCard_command_r1@buf
 40096   018E44  6E04               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 40097   018E46  0E00               	movlw	0
 40098   018E48  6E06               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 40099   018E4A  0E06               	movlw	6
 40100   018E4C  6E05               	movwf	SPI_SD_send@count^(0+1280),c
 40101   018E4E  EC9E  F0CB         	call	_SPI_SD_send	;wreg free
 40102                           
 40103                           ;src/boards/../../drivers/SDCard.c: 160:     response = __SDCard_wait_response(0xff, ctx
      +                          _.timeout);
 40104   018E52  C708  F512         	movff	_ctx_+2,___SDCard_wait_response@attempts
 40105   018E56  C709  F513         	movff	_ctx_+3,___SDCard_wait_response@attempts+1
 40106   018E5A  0EFF               	movlw	255
 40107   018E5C  ECBB  F0CE         	call	___SDCard_wait_response
 40108   018E60  6E25               	movwf	___SDCard_command_r1@response^(0+1280),c
 40109                           
 40110                           ;src/boards/../../drivers/SDCard.c: 161:     *r1 = response;
 40111   018E62  C51C  F4D9         	movff	___SDCard_command_r1@r1,fsr2l
 40112   018E66  C51D  F4DA         	movff	___SDCard_command_r1@r1+1,fsr2h
 40113   018E6A  C525  F4DF         	movff	___SDCard_command_r1@response,indf2
 40114                           
 40115                           ;src/boards/../../drivers/SDCard.c: 162:     if (response == 0xff) {
 40116   018E6E  2825               	incf	___SDCard_command_r1@response^(0+1280),w,c
 40117   018E70  A4D8               	btfss	status,2,c
 40118   018E72  D005               	goto	l9493
 40119                           
 40120                           ;src/boards/../../drivers/SDCard.c: 163:         return 1;
 40121   018E74  0E00               	movlw	0
 40122   018E76  6E19               	movwf	(?___SDCard_command_r1+1)^(0+1280),c
 40123   018E78  0E01               	movlw	1
 40124   018E7A  6E18               	movwf	?___SDCard_command_r1^(0+1280),c
 40125   018E7C  0012               	return	
 40126   018E7E                     l9493:
 40127                           
 40128                           ;src/boards/../../drivers/SDCard.c: 166:     return 0;
 40129   018E7E  0E00               	movlw	0
 40130   018E80  6E19               	movwf	(?___SDCard_command_r1+1)^(0+1280),c
 40131   018E82  0E00               	movlw	0
 40132   018E84  6E18               	movwf	?___SDCard_command_r1^(0+1280),c
 40133   018E86  0012               	return		;funcret
 40134   018E88                     __end_of___SDCard_command_r1:
 40135                           	callstack 0
 40136                           
 40137 ;; *************** function ___SDCard_wait_response *****************
 40138 ;; Defined at:
 40139 ;;		line 133 in file "src/boards/../../drivers/SDCard.c"
 40140 ;; Parameters:    Size  Location     Type
 40141 ;;  no_response     1    wreg     unsigned char 
 40142 ;;  attempts        2   17[COMRAM] unsigned int 
 40143 ;; Auto vars:     Size  Location     Type
 40144 ;;  no_response     1   21[COMRAM] unsigned char 
 40145 ;;  spi             2   19[COMRAM] PTR struct SPI
 40146 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40147 ;;  response        1   22[COMRAM] unsigned char 
 40148 ;; Return value:  Size  Location     Type
 40149 ;;                  1    wreg      unsigned char 
 40150 ;; Registers used:
 40151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40152 ;; Tracked objects:
 40153 ;;		On entry : 0/5
 40154 ;;		On exit  : 0/0
 40155 ;;		Unchanged: 0/0
 40156 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40158 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40161 ;;Total ram usage:        6 bytes
 40162 ;; Hardware stack levels used: 1
 40163 ;; Hardware stack levels required when called: 2
 40164 ;; This function calls:
 40165 ;;		_SPI_SD_receive_byte
 40166 ;; This function is called by:
 40167 ;;		___SDCard_command_r1
 40168 ;;		_SDCard_read512
 40169 ;;		_SDCard_write512
 40170 ;; This function uses a non-reentrant model
 40171 ;;
 40172                           
 40173                           	psect	text109
 40174   019D76                     __ptext109:
 40175                           	callstack 0
 40176   019D76                     ___SDCard_wait_response:
 40177                           	callstack 116
 40178                           
 40179                           ;incstack = 0
 40180                           ;___SDCard_wait_response@no_response stored from wreg
 40181   019D76  6E16               	movwf	___SDCard_wait_response@no_response^(0+1280),c
 40182                           
 40183                           ;src/boards/../../drivers/SDCard.c: 133: static uint8_t __SDCard_wait_response(uint8_t n
      +                          o_response, unsigned int attempts);src/boards/../../drivers/SDCard.c: 134: {;src/boards/
      +                          ../../drivers/SDCard.c: 135:     struct SPI *spi = ctx_.spi;
 40184   019D78  C706  F514         	movff	_ctx_,___SDCard_wait_response@spi
 40185   019D7C  C707  F515         	movff	_ctx_+1,___SDCard_wait_response@spi+1
 40186   019D80                     l9393:
 40187                           
 40188                           ;src/boards/../../drivers/SDCard.c: 138:         response = SPI_SD_receive_byte(spi);
 40189   019D80  C514  F50F         	movff	___SDCard_wait_response@spi,SPI_SD_receive_byte@ctx_
 40190   019D84  C515  F510         	movff	___SDCard_wait_response@spi+1,SPI_SD_receive_byte@ctx_+1
 40191   019D88  EC8B  F0CF         	call	_SPI_SD_receive_byte	;wreg free
 40192   019D8C  6E17               	movwf	___SDCard_wait_response@response^(0+1280),c
 40193                           
 40194                           ;src/boards/../../drivers/SDCard.c: 139:     } while ((response == no_response) && 0 < -
      +                          -attempts);
 40195   019D8E  5016               	movf	___SDCard_wait_response@no_response^(0+1280),w,c
 40196   019D90  1817               	xorwf	___SDCard_wait_response@response^(0+1280),w,c
 40197   019D92  A4D8               	btfss	status,2,c
 40198   019D94  D007               	goto	u10880
 40199   019D96  0612               	decf	___SDCard_wait_response@attempts^(0+1280),f,c
 40200   019D98  A0D8               	btfss	status,0,c
 40201   019D9A  0613               	decf	(___SDCard_wait_response@attempts+1)^(0+1280),f,c
 40202   019D9C  5012               	movf	___SDCard_wait_response@attempts^(0+1280),w,c
 40203   019D9E  1013               	iorwf	(___SDCard_wait_response@attempts+1)^(0+1280),w,c
 40204   019DA0  A4D8               	btfss	status,2,c
 40205   019DA2  D7EE               	goto	l9393
 40206   019DA4                     u10880:
 40207                           
 40208                           ;src/boards/../../drivers/SDCard.c: 140:     return response;
 40209   019DA4  5017               	movf	___SDCard_wait_response@response^(0+1280),w,c
 40210   019DA6  0012               	return		;funcret
 40211   019DA8                     __end_of___SDCard_wait_response:
 40212                           	callstack 0
 40213                           
 40214 ;; *************** function _SPI_SD_receive_byte *****************
 40215 ;; Defined at:
 40216 ;;		line 275 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 40217 ;; Parameters:    Size  Location     Type
 40218 ;;  ctx_            2   14[COMRAM] PTR struct SPI
 40219 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40220 ;; Auto vars:     Size  Location     Type
 40221 ;;  dummy           1   16[COMRAM] unsigned char 
 40222 ;; Return value:  Size  Location     Type
 40223 ;;                  1    wreg      unsigned char 
 40224 ;; Registers used:
 40225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40226 ;; Tracked objects:
 40227 ;;		On entry : 0/5
 40228 ;;		On exit  : 0/0
 40229 ;;		Unchanged: 0/0
 40230 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40234 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40235 ;;Total ram usage:        3 bytes
 40236 ;; Hardware stack levels used: 1
 40237 ;; Hardware stack levels required when called: 1
 40238 ;; This function calls:
 40239 ;;		_SPI_SD_receive
 40240 ;; This function is called by:
 40241 ;;		___SDCard_wait_response
 40242 ;;		_SDCard_read512
 40243 ;; This function uses a non-reentrant model
 40244 ;;
 40245                           
 40246                           	psect	text110
 40247   019F16                     __ptext110:
 40248                           	callstack 0
 40249   019F16                     _SPI_SD_receive_byte:
 40250                           	callstack 116
 40251                           
 40252                           ;src/boards/../../drivers/pic18f47q43_spi.c: 275: uint8_t SPI_SD_receive_byte(struct SPI
      +                           *ctx_);src/boards/../../drivers/pic18f47q43_spi.c: 276: {;src/boards/../../drivers/pic1
      +                          8f47q43_spi.c: 277:     uint8_t dummy = 0xff;
 40253                           
 40254                           ;incstack = 0
 40255   019F16  6811               	setf	SPI_SD_receive_byte@dummy^(0+1280),c
 40256                           
 40257                           ;src/boards/../../drivers/pic18f47q43_spi.c: 278:     SPI_SD_receive(ctx_, &dummy, 1);
 40258   019F18  C50F  F501         	movff	SPI_SD_receive_byte@ctx_,SPI_SD_receive@ctx_
 40259   019F1C  C510  F502         	movff	SPI_SD_receive_byte@ctx_+1,SPI_SD_receive@ctx_+1
 40260   019F20  0E11               	movlw	low SPI_SD_receive_byte@dummy
 40261   019F22  6E03               	movwf	SPI_SD_receive@buf^(0+1280),c
 40262   019F24  0E05               	movlw	high SPI_SD_receive_byte@dummy
 40263   019F26  6E04               	movwf	(SPI_SD_receive@buf+1)^(0+1280),c
 40264   019F28  0E00               	movlw	0
 40265   019F2A  6E06               	movwf	(SPI_SD_receive@count+1)^(0+1280),c
 40266   019F2C  0E01               	movlw	1
 40267   019F2E  6E05               	movwf	SPI_SD_receive@count^(0+1280),c
 40268   019F30  ECE2  F0AB         	call	_SPI_SD_receive	;wreg free
 40269                           
 40270                           ;src/boards/../../drivers/pic18f47q43_spi.c: 279:     return dummy;
 40271   019F34  5011               	movf	SPI_SD_receive_byte@dummy^(0+1280),w,c
 40272   019F36  0012               	return		;funcret
 40273   019F38                     __end_of_SPI_SD_receive_byte:
 40274                           	callstack 0
 40275                           
 40276 ;; *************** function _SPI_SD_receive *****************
 40277 ;; Defined at:
 40278 ;;		line 191 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 40279 ;; Parameters:    Size  Location     Type
 40280 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 40281 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40282 ;;  buf             2    2[COMRAM] PTR void 
 40283 ;;		 -> disk_buf(128), files(3276), fs(560), SDCard_init@buf(5), 
 40284 ;;		 -> SPI_SD_receive_byte@dummy(1), NULL(0), disk_initialize@buf(128), 
 40285 ;;  count           2    4[COMRAM] unsigned int 
 40286 ;; Auto vars:     Size  Location     Type
 40287 ;;  i               1   11[COMRAM] unsigned char 
 40288 ;;  i               2    8[COMRAM] int 
 40289 ;;  repeat          1   10[COMRAM] unsigned char 
 40290 ;;  p               2   12[COMRAM] PTR unsigned char 
 40291 ;;		 -> disk_buf(128), files(3276), fs(560), SDCard_init@buf(5), 
 40292 ;;		 -> SPI_SD_receive_byte@dummy(1), NULL(0), disk_initialize@buf(128), 
 40293 ;; Return value:  Size  Location     Type
 40294 ;;                  1    wreg      void 
 40295 ;; Registers used:
 40296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40297 ;; Tracked objects:
 40298 ;;		On entry : 0/5
 40299 ;;		On exit  : 0/0
 40300 ;;		Unchanged: 0/0
 40301 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40302 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40303 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40305 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40306 ;;Total ram usage:       14 bytes
 40307 ;; Hardware stack levels used: 1
 40308 ;; This function calls:
 40309 ;;		Nothing
 40310 ;; This function is called by:
 40311 ;;		_SPI_SD_receive_byte
 40312 ;;		_SDCard_read512
 40313 ;;		_SDCard_command
 40314 ;; This function uses a non-reentrant model
 40315 ;;
 40316                           
 40317                           	psect	text111
 40318   0157C4                     __ptext111:
 40319                           	callstack 0
 40320   0157C4                     _SPI_SD_receive:
 40321                           	callstack 116
 40322                           
 40323                           ;src/boards/../../drivers/pic18f47q43_spi.c: 191: void SPI_SD_receive(struct SPI *ctx_, 
      +                          void *buf, unsigned int count);src/boards/../../drivers/pic18f47q43_spi.c: 192: {;src/bo
      +                          ards/../../drivers/pic18f47q43_spi.c: 193:     uint8_t *p = (uint8_t*)buf;
 40324                           
 40325                           ;incstack = 0
 40326   0157C4  C503  F50D         	movff	SPI_SD_receive@buf,SPI_SD_receive@p
 40327   0157C8  C504  F50E         	movff	SPI_SD_receive@buf+1,SPI_SD_receive@p+1
 40328                           
 40329                           ;src/boards/../../drivers/pic18f47q43_spi.c: 195:     if (count == 0)
 40330   0157CC  5005               	movf	SPI_SD_receive@count^(0+1280),w,c
 40331   0157CE  1006               	iorwf	(SPI_SD_receive@count+1)^(0+1280),w,c
 40332   0157D0  B4D8               	btfsc	status,2,c
 40333   0157D2  0012               	return	
 40334                           
 40335                           ;src/boards/../../drivers/pic18f47q43_spi.c: 198:     SPI1TCNTH = (count >> 8);
 40336   0157D4  C506  F083         	movff	SPI_SD_receive@count+1,131	;volatile
 40337                           
 40338                           ;src/boards/../../drivers/pic18f47q43_spi.c: 199:     SPI1TCNTL = (count & 0xff);
 40339   0157D8  C505  F082         	movff	SPI_SD_receive@count,130	;volatile
 40340                           
 40341                           ;src/boards/../../drivers/pic18f47q43_spi.c: 201:     if ((count & 0x07) || 255 < count 
      +                          / 8) {
 40342   0157DC  C505  F507         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 40343   0157E0  0E07               	movlw	7
 40344   0157E2  1607               	andwf	??_SPI_SD_receive^(0+1280),f,c
 40345   0157E4  A4D8               	btfss	status,2,c
 40346   0157E6  D010               	goto	u10410
 40347   0157E8  C505  F507         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 40348   0157EC  C506  F508         	movff	SPI_SD_receive@count+1,??_SPI_SD_receive+1
 40349   0157F0  90D8               	bcf	status,0,c
 40350   0157F2  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40351   0157F4  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40352   0157F6  90D8               	bcf	status,0,c
 40353   0157F8  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40354   0157FA  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40355   0157FC  90D8               	bcf	status,0,c
 40356   0157FE  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40357   015800  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40358   015802  0408               	decf	(??_SPI_SD_receive+1)^(0+1280),w,c
 40359   015804  A0D8               	btfss	status,0,c
 40360   015806  D026               	goto	l1263
 40361   015808                     u10410:
 40362                           
 40363                           ;src/boards/../../drivers/pic18f47q43_spi.c: 202:         SPI1TXB = 0xff;
 40364   015808  0100               	movlb	0	; () banked
 40365   01580A  6981               	setf	129,b	;volatile
 40366                           
 40367                           ; BSR set to: 0
 40368                           ;src/boards/../../drivers/pic18f47q43_spi.c: 203:         for (int i = 1; i < count; i++
      +                          ) {
 40369   01580C  0E00               	movlw	0
 40370   01580E  6E0A               	movwf	(SPI_SD_receive@i+1)^(0+1280),c
 40371   015810  0E01               	movlw	1
 40372   015812  6E09               	movwf	SPI_SD_receive@i^(0+1280),c
 40373   015814  D00E               	goto	l9033
 40374   015816                     l1267:
 40375                           
 40376                           ;src/boards/../../drivers/pic18f47q43_spi.c: 204:             SPI1TXB = 0xff;
 40377   015816  0100               	movlb	0	; () banked
 40378   015818  6981               	setf	129,b	;volatile
 40379   01581A                     l1268:
 40380   01581A  A0B1               	btfss	1201,0,c	;volatile
 40381   01581C  D7FE               	goto	l1268
 40382                           
 40383                           ;src/boards/../../drivers/pic18f47q43_spi.c: 206:             *p++ = SPI1RXB;
 40384   01581E  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40385   015822  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40386   015826  C080 F4DF          	movff	128,indf2	;volatile
 40387   01582A  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40388   01582C  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40389                           
 40390                           ;src/boards/../../drivers/pic18f47q43_spi.c: 207:         }
 40391   01582E  4A09               	infsnz	SPI_SD_receive@i^(0+1280),f,c
 40392   015830  2A0A               	incf	(SPI_SD_receive@i+1)^(0+1280),f,c
 40393   015832                     l9033:
 40394   015832  5005               	movf	SPI_SD_receive@count^(0+1280),w,c
 40395   015834  5C09               	subwf	SPI_SD_receive@i^(0+1280),w,c
 40396   015836  5006               	movf	(SPI_SD_receive@count+1)^(0+1280),w,c
 40397   015838  580A               	subwfb	(SPI_SD_receive@i+1)^(0+1280),w,c
 40398   01583A  A0D8               	btfss	status,0,c
 40399   01583C  D7EC               	goto	l1267
 40400   01583E                     u10430:
 40401   01583E  A0B1               	btfss	1201,0,c	;volatile
 40402   015840  D7FE               	goto	u10430
 40403   015842                     u10440:
 40404                           
 40405                           ;src/boards/../../drivers/pic18f47q43_spi.c: 209:         *p++ = SPI1RXB;
 40406   015842  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40407   015846  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40408   01584A  C080 F4DF          	movff	128,indf2	;volatile
 40409   01584E  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40410   015850  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40411                           
 40412                           ;src/boards/../../drivers/pic18f47q43_spi.c: 210:     } else {
 40413   015852  0012               	return	
 40414   015854                     l1263:
 40415                           
 40416                           ;src/boards/../../drivers/pic18f47q43_spi.c: 211:         SPI1TXB = 0xff;
 40417   015854  0100               	movlb	0	; () banked
 40418   015856  6981               	setf	129,b	;volatile
 40419                           
 40420                           ;src/boards/../../drivers/pic18f47q43_spi.c: 212:         SPI1TXB = 0xff;
 40421   015858  6981               	setf	129,b	;volatile
 40422   01585A                     l1276:
 40423   01585A  A0B1               	btfss	1201,0,c	;volatile
 40424   01585C  D7FE               	goto	l1276
 40425                           
 40426                           ;src/boards/../../drivers/pic18f47q43_spi.c: 214:         *p++ = SPI1RXB;
 40427   01585E  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40428   015862  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40429   015866  C080 F4DF          	movff	128,indf2	;volatile
 40430   01586A  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40431   01586C  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40432                           
 40433                           ;src/boards/../../drivers/pic18f47q43_spi.c: 215:         SPI1TXB = 0xff;
 40434   01586E  0100               	movlb	0	; () banked
 40435   015870  6981               	setf	129,b	;volatile
 40436   015872                     l1279:
 40437   015872  A0B1               	btfss	1201,0,c	;volatile
 40438   015874  D7FE               	goto	l1279
 40439                           
 40440                           ;src/boards/../../drivers/pic18f47q43_spi.c: 217:         *p++ = SPI1RXB;
 40441   015876  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40442   01587A  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40443   01587E  C080 F4DF          	movff	128,indf2	;volatile
 40444   015882  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40445   015884  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40446                           
 40447                           ;src/boards/../../drivers/pic18f47q43_spi.c: 218:         SPI1TXB = 0xff;
 40448   015886  0100               	movlb	0	; () banked
 40449   015888  6981               	setf	129,b	;volatile
 40450   01588A                     l1282:
 40451   01588A  A0B1               	btfss	1201,0,c	;volatile
 40452   01588C  D7FE               	goto	l1282
 40453                           
 40454                           ;src/boards/../../drivers/pic18f47q43_spi.c: 220:         *p++ = SPI1RXB;
 40455   01588E  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40456   015892  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40457   015896  C080 F4DF          	movff	128,indf2	;volatile
 40458   01589A  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40459   01589C  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40460                           
 40461                           ;src/boards/../../drivers/pic18f47q43_spi.c: 221:         SPI1TXB = 0xff;
 40462   01589E  0100               	movlb	0	; () banked
 40463   0158A0  6981               	setf	129,b	;volatile
 40464   0158A2                     l1285:
 40465   0158A2  A0B1               	btfss	1201,0,c	;volatile
 40466   0158A4  D7FE               	goto	l1285
 40467                           
 40468                           ;src/boards/../../drivers/pic18f47q43_spi.c: 223:         *p++ = SPI1RXB;
 40469   0158A6  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40470   0158AA  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40471   0158AE  C080 F4DF          	movff	128,indf2	;volatile
 40472   0158B2  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40473   0158B4  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40474                           
 40475                           ;src/boards/../../drivers/pic18f47q43_spi.c: 224:         SPI1TXB = 0xff;
 40476   0158B6  0100               	movlb	0	; () banked
 40477   0158B8  6981               	setf	129,b	;volatile
 40478   0158BA                     l1288:
 40479   0158BA  A0B1               	btfss	1201,0,c	;volatile
 40480   0158BC  D7FE               	goto	l1288
 40481                           
 40482                           ;src/boards/../../drivers/pic18f47q43_spi.c: 226:         *p++ = SPI1RXB;
 40483   0158BE  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40484   0158C2  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40485   0158C6  C080 F4DF          	movff	128,indf2	;volatile
 40486   0158CA  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40487   0158CC  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40488                           
 40489                           ;src/boards/../../drivers/pic18f47q43_spi.c: 227:         SPI1TXB = 0xff;
 40490   0158CE  0100               	movlb	0	; () banked
 40491   0158D0  6981               	setf	129,b	;volatile
 40492   0158D2                     l1291:
 40493   0158D2  A0B1               	btfss	1201,0,c	;volatile
 40494   0158D4  D7FE               	goto	l1291
 40495                           
 40496                           ;src/boards/../../drivers/pic18f47q43_spi.c: 229:         *p++ = SPI1RXB;
 40497   0158D6  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40498   0158DA  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40499   0158DE  C080 F4DF          	movff	128,indf2	;volatile
 40500   0158E2  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40501   0158E4  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40502                           
 40503                           ;src/boards/../../drivers/pic18f47q43_spi.c: 230:         SPI1TXB = 0xff;
 40504   0158E6  0100               	movlb	0	; () banked
 40505   0158E8  6981               	setf	129,b	;volatile
 40506   0158EA                     l1294:
 40507   0158EA  A0B1               	btfss	1201,0,c	;volatile
 40508   0158EC  D7FE               	goto	l1294
 40509                           
 40510                           ;src/boards/../../drivers/pic18f47q43_spi.c: 232:         *p++ = SPI1RXB;
 40511   0158EE  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40512   0158F2  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40513   0158F6  C080 F4DF          	movff	128,indf2	;volatile
 40514   0158FA  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40515   0158FC  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40516                           
 40517                           ;src/boards/../../drivers/pic18f47q43_spi.c: 233:         uint8_t repeat = (uint8_t)(cou
      +                          nt / 8);
 40518   0158FE  C505  F507         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 40519   015902  C506  F508         	movff	SPI_SD_receive@count+1,??_SPI_SD_receive+1
 40520   015906  90D8               	bcf	status,0,c
 40521   015908  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40522   01590A  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40523   01590C  90D8               	bcf	status,0,c
 40524   01590E  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40525   015910  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40526   015912  90D8               	bcf	status,0,c
 40527   015914  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40528   015916  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40529   015918  5007               	movf	??_SPI_SD_receive^(0+1280),w,c
 40530   01591A  6E0B               	movwf	SPI_SD_receive@repeat^(0+1280),c
 40531                           
 40532                           ;src/boards/../../drivers/pic18f47q43_spi.c: 234:         for (uint8_t i = 1; i < repeat
      +                          ; i++) {
 40533   01591C  0E01               	movlw	1
 40534   01591E  6E0C               	movwf	SPI_SD_receive@i_2404^(0+1280),c
 40535   015920  D061               	goto	l9131
 40536   015922                     l1298:
 40537                           
 40538                           ;src/boards/../../drivers/pic18f47q43_spi.c: 235:             SPI1TXB = 0xff;
 40539   015922  0100               	movlb	0	; () banked
 40540   015924  6981               	setf	129,b	;volatile
 40541   015926                     l1299:
 40542   015926  A0B1               	btfss	1201,0,c	;volatile
 40543   015928  D7FE               	goto	l1299
 40544                           
 40545                           ;src/boards/../../drivers/pic18f47q43_spi.c: 237:             *p++ = SPI1RXB;
 40546   01592A  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40547   01592E  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40548   015932  C080 F4DF          	movff	128,indf2	;volatile
 40549   015936  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40550   015938  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40551                           
 40552                           ;src/boards/../../drivers/pic18f47q43_spi.c: 238:             SPI1TXB = 0xff;
 40553   01593A  0100               	movlb	0	; () banked
 40554   01593C  6981               	setf	129,b	;volatile
 40555   01593E                     l1302:
 40556   01593E  A0B1               	btfss	1201,0,c	;volatile
 40557   015940  D7FE               	goto	l1302
 40558                           
 40559                           ;src/boards/../../drivers/pic18f47q43_spi.c: 240:             *p++ = SPI1RXB;
 40560   015942  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40561   015946  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40562   01594A  C080 F4DF          	movff	128,indf2	;volatile
 40563   01594E  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40564   015950  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40565                           
 40566                           ;src/boards/../../drivers/pic18f47q43_spi.c: 241:             SPI1TXB = 0xff;
 40567   015952  0100               	movlb	0	; () banked
 40568   015954  6981               	setf	129,b	;volatile
 40569   015956                     l1305:
 40570   015956  A0B1               	btfss	1201,0,c	;volatile
 40571   015958  D7FE               	goto	l1305
 40572                           
 40573                           ;src/boards/../../drivers/pic18f47q43_spi.c: 243:             *p++ = SPI1RXB;
 40574   01595A  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40575   01595E  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40576   015962  C080 F4DF          	movff	128,indf2	;volatile
 40577   015966  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40578   015968  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40579                           
 40580                           ;src/boards/../../drivers/pic18f47q43_spi.c: 244:             SPI1TXB = 0xff;
 40581   01596A  0100               	movlb	0	; () banked
 40582   01596C  6981               	setf	129,b	;volatile
 40583   01596E                     l1308:
 40584   01596E  A0B1               	btfss	1201,0,c	;volatile
 40585   015970  D7FE               	goto	l1308
 40586                           
 40587                           ;src/boards/../../drivers/pic18f47q43_spi.c: 246:             *p++ = SPI1RXB;
 40588   015972  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40589   015976  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40590   01597A  C080 F4DF          	movff	128,indf2	;volatile
 40591   01597E  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40592   015980  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40593                           
 40594                           ;src/boards/../../drivers/pic18f47q43_spi.c: 247:             SPI1TXB = 0xff;
 40595   015982  0100               	movlb	0	; () banked
 40596   015984  6981               	setf	129,b	;volatile
 40597   015986                     l1311:
 40598   015986  A0B1               	btfss	1201,0,c	;volatile
 40599   015988  D7FE               	goto	l1311
 40600                           
 40601                           ;src/boards/../../drivers/pic18f47q43_spi.c: 249:             *p++ = SPI1RXB;
 40602   01598A  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40603   01598E  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40604   015992  C080 F4DF          	movff	128,indf2	;volatile
 40605   015996  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40606   015998  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40607                           
 40608                           ;src/boards/../../drivers/pic18f47q43_spi.c: 250:             SPI1TXB = 0xff;
 40609   01599A  0100               	movlb	0	; () banked
 40610   01599C  6981               	setf	129,b	;volatile
 40611   01599E                     l1314:
 40612   01599E  A0B1               	btfss	1201,0,c	;volatile
 40613   0159A0  D7FE               	goto	l1314
 40614                           
 40615                           ;src/boards/../../drivers/pic18f47q43_spi.c: 252:             *p++ = SPI1RXB;
 40616   0159A2  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40617   0159A6  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40618   0159AA  C080 F4DF          	movff	128,indf2	;volatile
 40619   0159AE  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40620   0159B0  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40621                           
 40622                           ;src/boards/../../drivers/pic18f47q43_spi.c: 253:             SPI1TXB = 0xff;
 40623   0159B2  0100               	movlb	0	; () banked
 40624   0159B4  6981               	setf	129,b	;volatile
 40625   0159B6                     l1317:
 40626   0159B6  A0B1               	btfss	1201,0,c	;volatile
 40627   0159B8  D7FE               	goto	l1317
 40628                           
 40629                           ;src/boards/../../drivers/pic18f47q43_spi.c: 255:             *p++ = SPI1RXB;
 40630   0159BA  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40631   0159BE  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40632   0159C2  C080 F4DF          	movff	128,indf2	;volatile
 40633   0159C6  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40634   0159C8  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40635                           
 40636                           ;src/boards/../../drivers/pic18f47q43_spi.c: 256:             SPI1TXB = 0xff;
 40637   0159CA  0100               	movlb	0	; () banked
 40638   0159CC  6981               	setf	129,b	;volatile
 40639   0159CE                     l1320:
 40640   0159CE  A0B1               	btfss	1201,0,c	;volatile
 40641   0159D0  D7FE               	goto	l1320
 40642                           
 40643                           ;src/boards/../../drivers/pic18f47q43_spi.c: 258:             *p++ = SPI1RXB;
 40644   0159D2  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40645   0159D6  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40646   0159DA  C080 F4DF          	movff	128,indf2	;volatile
 40647   0159DE  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40648   0159E0  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40649                           
 40650                           ;src/boards/../../drivers/pic18f47q43_spi.c: 259:         }
 40651   0159E2  2A0C               	incf	SPI_SD_receive@i_2404^(0+1280),f,c
 40652   0159E4                     l9131:
 40653   0159E4  500B               	movf	SPI_SD_receive@repeat^(0+1280),w,c
 40654   0159E6  5C0C               	subwf	SPI_SD_receive@i_2404^(0+1280),w,c
 40655   0159E8  A0D8               	btfss	status,0,c
 40656   0159EA  D79B               	goto	l1298
 40657   0159EC                     u10600:
 40658   0159EC  B0B1               	btfsc	1201,0,c	;volatile
 40659   0159EE  D729               	goto	u10440
 40660   0159F0  D7FD               	goto	u10600
 40661   0159F2                     __end_of_SPI_SD_receive:
 40662                           	callstack 0
 40663                           
 40664 ;; *************** function _SPI_SD_begin_transaction *****************
 40665 ;; Defined at:
 40666 ;;		line 140 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 40667 ;; Parameters:    Size  Location     Type
 40668 ;;  ctx_            2    4[COMRAM] PTR struct SPI
 40669 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40670 ;; Auto vars:     Size  Location     Type
 40671 ;;		None
 40672 ;; Return value:  Size  Location     Type
 40673 ;;                  1    wreg      void 
 40674 ;; Registers used:
 40675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40676 ;; Tracked objects:
 40677 ;;		On entry : 0/0
 40678 ;;		On exit  : 0/0
 40679 ;;		Unchanged: 0/0
 40680 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40685 ;;Total ram usage:        2 bytes
 40686 ;; Hardware stack levels used: 1
 40687 ;; Hardware stack levels required when called: 1
 40688 ;; This function calls:
 40689 ;;		_SPI_SD_select
 40690 ;;		_acquire_bus
 40691 ;; This function is called by:
 40692 ;;		_SDCard_init
 40693 ;;		___SDCard_command_r1
 40694 ;; This function uses a non-reentrant model
 40695 ;;
 40696                           
 40697                           	psect	text112
 40698   019F38                     __ptext112:
 40699                           	callstack 0
 40700   019F38                     _SPI_SD_begin_transaction:
 40701                           	callstack 116
 40702                           
 40703                           ;src/boards/../../drivers/pic18f47q43_spi.c: 140: void SPI_SD_begin_transaction(struct S
      +                          PI *ctx_);src/boards/../../drivers/pic18f47q43_spi.c: 141: {;src/boards/../../drivers/pi
      +                          c18f47q43_spi.c: 142:     acquire_bus(ctx_);
 40704                           
 40705                           ;incstack = 0
 40706   019F38  C505  F501         	movff	SPI_SD_begin_transaction@ctx_,acquire_bus@ctx_
 40707   019F3C  C506  F502         	movff	SPI_SD_begin_transaction@ctx_+1,acquire_bus@ctx_+1
 40708   019F40  EC23  F0CD         	call	_acquire_bus	;wreg free
 40709                           
 40710                           ;src/boards/../../drivers/pic18f47q43_spi.c: 143:     SPI_SD_select(ctx_, 1);
 40711   019F44  C505  F501         	movff	SPI_SD_begin_transaction@ctx_,SPI_SD_select@ctx_
 40712   019F48  C506  F502         	movff	SPI_SD_begin_transaction@ctx_+1,SPI_SD_select@ctx_+1
 40713   019F4C  0E00               	movlw	0
 40714   019F4E  6E04               	movwf	(SPI_SD_select@select+1)^(0+1280),c
 40715   019F50  0E01               	movlw	1
 40716   019F52  6E03               	movwf	SPI_SD_select@select^(0+1280),c
 40717   019F54  ECE2  F0CF         	call	_SPI_SD_select	;wreg free
 40718   019F58  0012               	return		;funcret
 40719   019F5A                     __end_of_SPI_SD_begin_transaction:
 40720                           	callstack 0
 40721                           
 40722 ;; *************** function _SDCard_crc *****************
 40723 ;; Defined at:
 40724 ;;		line 334 in file "src/boards/../../drivers/SDCard.c"
 40725 ;; Parameters:    Size  Location     Type
 40726 ;;  buf             2    0[COMRAM] PTR const void 
 40727 ;;		 -> __SDCard_command_r1@buf(6), 
 40728 ;;  count           2    2[COMRAM] unsigned int 
 40729 ;; Auto vars:     Size  Location     Type
 40730 ;;  i               2    6[COMRAM] int 
 40731 ;;  p               2    9[COMRAM] PTR unsigned char 
 40732 ;;		 -> __SDCard_command_r1@buf(6), 
 40733 ;;  endp            2    4[COMRAM] PTR unsigned char 
 40734 ;;		 -> __SDCard_command_r1@buf(6), 
 40735 ;;  crc             1    8[COMRAM] unsigned char 
 40736 ;; Return value:  Size  Location     Type
 40737 ;;                  1    wreg      unsigned char 
 40738 ;; Registers used:
 40739 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40740 ;; Tracked objects:
 40741 ;;		On entry : 0/5
 40742 ;;		On exit  : 0/0
 40743 ;;		Unchanged: 0/0
 40744 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40745 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40746 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40748 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40749 ;;Total ram usage:       11 bytes
 40750 ;; Hardware stack levels used: 1
 40751 ;; This function calls:
 40752 ;;		Nothing
 40753 ;; This function is called by:
 40754 ;;		___SDCard_command_r1
 40755 ;; This function uses a non-reentrant model
 40756 ;;
 40757                           
 40758                           	psect	text113
 40759   019804                     __ptext113:
 40760                           	callstack 0
 40761   019804                     _SDCard_crc:
 40762                           	callstack 117
 40763                           
 40764                           ;src/boards/../../drivers/SDCard.c: 334: uint8_t SDCard_crc(const void *buf, unsigned in
      +                          t count);src/boards/../../drivers/SDCard.c: 335: {;src/boards/../../drivers/SDCard.c: 33
      +                          6:     uint8_t crc = 0;
 40765                           
 40766                           ;incstack = 0
 40767   019804  0E00               	movlw	0
 40768   019806  6E09               	movwf	SDCard_crc@crc^(0+1280),c
 40769                           
 40770                           ;src/boards/../../drivers/SDCard.c: 337:     uint8_t *p = (uint8_t*)buf;
 40771   019808  C501  F50A         	movff	SDCard_crc@buf,SDCard_crc@p
 40772   01980C  C502  F50B         	movff	SDCard_crc@buf+1,SDCard_crc@p+1
 40773                           
 40774                           ;src/boards/../../drivers/SDCard.c: 338:     uint8_t *endp = p + count;
 40775   019810  5003               	movf	SDCard_crc@count^(0+1280),w,c
 40776   019812  240A               	addwf	SDCard_crc@p^(0+1280),w,c
 40777   019814  6E05               	movwf	SDCard_crc@endp^(0+1280),c
 40778   019816  5004               	movf	(SDCard_crc@count+1)^(0+1280),w,c
 40779   019818  200B               	addwfc	(SDCard_crc@p+1)^(0+1280),w,c
 40780   01981A  6E06               	movwf	(SDCard_crc@endp+1)^(0+1280),c
 40781                           
 40782                           ;src/boards/../../drivers/SDCard.c: 340:     while (p < endp) {
 40783   01981C  D01C               	goto	u10900
 40784   01981E                     l9409:
 40785                           
 40786                           ;src/boards/../../drivers/SDCard.c: 341:         crc ^= *p++;
 40787   01981E  C50A  F4D9         	movff	SDCard_crc@p,fsr2l
 40788   019822  C50B  F4DA         	movff	SDCard_crc@p+1,fsr2h
 40789   019826  50DF               	movf	indf2,w,c
 40790   019828  1A09               	xorwf	SDCard_crc@crc^(0+1280),f,c
 40791   01982A  4A0A               	infsnz	SDCard_crc@p^(0+1280),f,c
 40792   01982C  2A0B               	incf	(SDCard_crc@p+1)^(0+1280),f,c
 40793                           
 40794                           ;src/boards/../../drivers/SDCard.c: 342:         for (int i = 0; i < 8; i++) {
 40795   01982E  0E00               	movlw	0
 40796   019830  6E08               	movwf	(SDCard_crc@i+1)^(0+1280),c
 40797   019832  0E00               	movlw	0
 40798   019834  6E07               	movwf	SDCard_crc@i^(0+1280),c
 40799   019836                     l1486:
 40800                           
 40801                           ;src/boards/../../drivers/SDCard.c: 343:             if (crc & 0x80)
 40802   019836  AE09               	btfss	SDCard_crc@crc^(0+1280),7,c
 40803   019838  D002               	goto	l1488
 40804                           
 40805                           ;src/boards/../../drivers/SDCard.c: 344:                 crc ^= 0x89;
 40806   01983A  0E89               	movlw	137
 40807   01983C  1A09               	xorwf	SDCard_crc@crc^(0+1280),f,c
 40808   01983E                     l1488:
 40809                           
 40810                           ;src/boards/../../drivers/SDCard.c: 345:             crc <<= 1;
 40811   01983E  90D8               	bcf	status,0,c
 40812   019840  3609               	rlcf	SDCard_crc@crc^(0+1280),f,c
 40813                           
 40814                           ;src/boards/../../drivers/SDCard.c: 346:         }
 40815   019842  4A07               	infsnz	SDCard_crc@i^(0+1280),f,c
 40816   019844  2A08               	incf	(SDCard_crc@i+1)^(0+1280),f,c
 40817   019846  BE08               	btfsc	(SDCard_crc@i+1)^(0+1280),7,c
 40818   019848  D7F6               	goto	l1486
 40819   01984A  5008               	movf	(SDCard_crc@i+1)^(0+1280),w,c
 40820   01984C  E104               	bnz	u10900
 40821   01984E  0E08               	movlw	8
 40822   019850  5C07               	subwf	SDCard_crc@i^(0+1280),w,c
 40823   019852  A0D8               	btfss	status,0,c
 40824   019854  D7F0               	goto	l1486
 40825   019856                     u10900:
 40826                           
 40827                           ;src/boards/../../drivers/SDCard.c: 340:     while (p < endp) {
 40828   019856  5005               	movf	SDCard_crc@endp^(0+1280),w,c
 40829   019858  5C0A               	subwf	SDCard_crc@p^(0+1280),w,c
 40830   01985A  5006               	movf	(SDCard_crc@endp+1)^(0+1280),w,c
 40831   01985C  580B               	subwfb	(SDCard_crc@p+1)^(0+1280),w,c
 40832   01985E  A0D8               	btfss	status,0,c
 40833   019860  D7DE               	goto	l9409
 40834                           
 40835                           ;src/boards/../../drivers/SDCard.c: 349:     return crc;
 40836   019862  5009               	movf	SDCard_crc@crc^(0+1280),w,c
 40837   019864  0012               	return		;funcret
 40838   019866                     __end_of_SDCard_crc:
 40839                           	callstack 0
 40840                           
 40841 ;; *************** function _SDCard_end_transaction *****************
 40842 ;; Defined at:
 40843 ;;		line 46 in file "src/boards/../../drivers/SDCard.c"
 40844 ;; Parameters:    Size  Location     Type
 40845 ;;		None
 40846 ;; Auto vars:     Size  Location     Type
 40847 ;;  spi             2   17[COMRAM] PTR struct SPI
 40848 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40849 ;; Return value:  Size  Location     Type
 40850 ;;                  1    wreg      void 
 40851 ;; Registers used:
 40852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40853 ;; Tracked objects:
 40854 ;;		On entry : 0/5
 40855 ;;		On exit  : 0/0
 40856 ;;		Unchanged: 0/0
 40857 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40862 ;;Total ram usage:        2 bytes
 40863 ;; Hardware stack levels used: 1
 40864 ;; Hardware stack levels required when called: 2
 40865 ;; This function calls:
 40866 ;;		_SPI_SD_dummy_clocks
 40867 ;;		_SPI_SD_end_transaction
 40868 ;; This function is called by:
 40869 ;;		_SDCard_init
 40870 ;;		_SDCard_read512
 40871 ;;		_SDCard_write512
 40872 ;;		_SDCard_command
 40873 ;; This function uses a non-reentrant model
 40874 ;;
 40875                           
 40876                           	psect	text114
 40877   019E2C                     __ptext114:
 40878                           	callstack 0
 40879   019E2C                     _SDCard_end_transaction:
 40880                           	callstack 116
 40881                           
 40882                           ;src/boards/../../drivers/SDCard.c: 48:     struct SPI *spi = ctx_.spi;
 40883                           
 40884                           ;incstack = 0
 40885   019E2C  C706  F512         	movff	_ctx_,SDCard_end_transaction@spi
 40886   019E30  C707  F513         	movff	_ctx_+1,SDCard_end_transaction@spi+1
 40887                           
 40888                           ;src/boards/../../drivers/SDCard.c: 49:     SPI_SD_end_transaction(spi);
 40889   019E34  C512  F505         	movff	SDCard_end_transaction@spi,SPI_SD_end_transaction@ctx_
 40890   019E38  C513  F506         	movff	SDCard_end_transaction@spi+1,SPI_SD_end_transaction@ctx_+1
 40891   019E3C  ECAD  F0CF         	call	_SPI_SD_end_transaction	;wreg free
 40892                           
 40893                           ;src/boards/../../drivers/SDCard.c: 50:     SPI_SD_dummy_clocks(spi, 1);
 40894   019E40  C512  F50B         	movff	SDCard_end_transaction@spi,SPI_SD_dummy_clocks@ctx_
 40895   019E44  C513  F50C         	movff	SDCard_end_transaction@spi+1,SPI_SD_dummy_clocks@ctx_+1
 40896   019E48  0E00               	movlw	0
 40897   019E4A  6E0E               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 40898   019E4C  0E01               	movlw	1
 40899   019E4E  6E0D               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 40900   019E50  EC88  F0CC         	call	_SPI_SD_dummy_clocks	;wreg free
 40901   019E54  0012               	return		;funcret
 40902   019E56                     __end_of_SDCard_end_transaction:
 40903                           	callstack 0
 40904                           
 40905 ;; *************** function _SPI_SD_end_transaction *****************
 40906 ;; Defined at:
 40907 ;;		line 146 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 40908 ;; Parameters:    Size  Location     Type
 40909 ;;  ctx_            2    4[COMRAM] PTR struct SPI
 40910 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40911 ;; Auto vars:     Size  Location     Type
 40912 ;;		None
 40913 ;; Return value:  Size  Location     Type
 40914 ;;                  1    wreg      void 
 40915 ;; Registers used:
 40916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40917 ;; Tracked objects:
 40918 ;;		On entry : 0/5
 40919 ;;		On exit  : 0/0
 40920 ;;		Unchanged: 0/0
 40921 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40926 ;;Total ram usage:        2 bytes
 40927 ;; Hardware stack levels used: 1
 40928 ;; Hardware stack levels required when called: 1
 40929 ;; This function calls:
 40930 ;;		_SPI_SD_select
 40931 ;;		_release_bus
 40932 ;; This function is called by:
 40933 ;;		_SDCard_end_transaction
 40934 ;; This function uses a non-reentrant model
 40935 ;;
 40936                           
 40937                           	psect	text115
 40938   019F5A                     __ptext115:
 40939                           	callstack 0
 40940   019F5A                     _SPI_SD_end_transaction:
 40941                           	callstack 116
 40942                           
 40943                           ;src/boards/../../drivers/pic18f47q43_spi.c: 146: void SPI_SD_end_transaction(struct SPI
      +                           *ctx_);src/boards/../../drivers/pic18f47q43_spi.c: 147: {;src/boards/../../drivers/pic1
      +                          8f47q43_spi.c: 148:     SPI_SD_select(ctx_, 0);
 40944                           
 40945                           ;incstack = 0
 40946   019F5A  C505  F501         	movff	SPI_SD_end_transaction@ctx_,SPI_SD_select@ctx_
 40947   019F5E  C506  F502         	movff	SPI_SD_end_transaction@ctx_+1,SPI_SD_select@ctx_+1
 40948   019F62  0E00               	movlw	0
 40949   019F64  6E04               	movwf	(SPI_SD_select@select+1)^(0+1280),c
 40950   019F66  0E00               	movlw	0
 40951   019F68  6E03               	movwf	SPI_SD_select@select^(0+1280),c
 40952   019F6A  ECE2  F0CF         	call	_SPI_SD_select	;wreg free
 40953                           
 40954                           ;src/boards/../../drivers/pic18f47q43_spi.c: 149:     release_bus(ctx_);
 40955   019F6E  C505  F501         	movff	SPI_SD_end_transaction@ctx_,release_bus@ctx_
 40956   019F72  C506  F502         	movff	SPI_SD_end_transaction@ctx_+1,release_bus@ctx_+1
 40957   019F76  EC6D  F0CE         	call	_release_bus	;wreg free
 40958   019F7A  0012               	return		;funcret
 40959   019F7C                     __end_of_SPI_SD_end_transaction:
 40960                           	callstack 0
 40961                           
 40962 ;; *************** function _SPI_SD_select *****************
 40963 ;; Defined at:
 40964 ;;		line 282 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 40965 ;; Parameters:    Size  Location     Type
 40966 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 40967 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40968 ;;  select          2    2[COMRAM] int 
 40969 ;; Auto vars:     Size  Location     Type
 40970 ;;		None
 40971 ;; Return value:  Size  Location     Type
 40972 ;;                  1    wreg      void 
 40973 ;; Registers used:
 40974 ;;		wreg, status,2, status,0
 40975 ;; Tracked objects:
 40976 ;;		On entry : 0/0
 40977 ;;		On exit  : 0/0
 40978 ;;		Unchanged: 0/0
 40979 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40983 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40984 ;;Total ram usage:        4 bytes
 40985 ;; Hardware stack levels used: 1
 40986 ;; This function calls:
 40987 ;;		Nothing
 40988 ;; This function is called by:
 40989 ;;		_SPI_SD_begin_transaction
 40990 ;;		_SPI_SD_end_transaction
 40991 ;; This function uses a non-reentrant model
 40992 ;;
 40993                           
 40994                           	psect	text116
 40995   019FC4                     __ptext116:
 40996                           	callstack 0
 40997   019FC4                     _SPI_SD_select:
 40998                           	callstack 116
 40999                           
 41000                           ;src/boards/../../drivers/pic18f47q43_spi.c: 282: void SPI_SD_select(struct SPI *ctx_, i
      +                          nt select);src/boards/../../drivers/pic18f47q43_spi.c: 283: {;src/boards/../../drivers/p
      +                          ic18f47q43_spi.c: 284:     LATC4 = select ? 0 : 1;
 41001                           
 41002                           ;incstack = 0
 41003   019FC4  5003               	movf	SPI_SD_select@select^(0+1280),w,c
 41004   019FC6  1004               	iorwf	(SPI_SD_select@select+1)^(0+1280),w,c
 41005   019FC8  A4D8               	btfss	status,2,c
 41006   019FCA  D002               	goto	u10790
 41007   019FCC  88C0               	bsf	1216,4,c	;volatile
 41008   019FCE  0012               	return	
 41009   019FD0                     u10790:
 41010   019FD0  98C0               	bcf	1216,4,c	;volatile
 41011   019FD2  0012               	return		;funcret
 41012   019FD4                     __end_of_SPI_SD_select:
 41013                           	callstack 0
 41014                           
 41015 ;; *************** function _SPI_SD_dummy_clocks *****************
 41016 ;; Defined at:
 41017 ;;		line 265 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 41018 ;; Parameters:    Size  Location     Type
 41019 ;;  ctx_            2   10[COMRAM] PTR struct SPI
 41020 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41021 ;;  clocks          2   12[COMRAM] unsigned int 
 41022 ;; Auto vars:     Size  Location     Type
 41023 ;;  i               2   14[COMRAM] int 
 41024 ;;  dummy           1   16[COMRAM] unsigned char 
 41025 ;; Return value:  Size  Location     Type
 41026 ;;                  1    wreg      void 
 41027 ;; Registers used:
 41028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41029 ;; Tracked objects:
 41030 ;;		On entry : 0/5
 41031 ;;		On exit  : 0/0
 41032 ;;		Unchanged: 0/0
 41033 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41035 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41037 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41038 ;;Total ram usage:        7 bytes
 41039 ;; Hardware stack levels used: 1
 41040 ;; Hardware stack levels required when called: 1
 41041 ;; This function calls:
 41042 ;;		_SPI_SD_send
 41043 ;;		_acquire_bus
 41044 ;;		_release_bus
 41045 ;; This function is called by:
 41046 ;;		_SDCard_end_transaction
 41047 ;;		_SDCard_init
 41048 ;;		___SDCard_command_r1
 41049 ;;		_SDCard_write512
 41050 ;; This function uses a non-reentrant model
 41051 ;;
 41052                           
 41053                           	psect	text117
 41054   019910                     __ptext117:
 41055                           	callstack 0
 41056   019910                     _SPI_SD_dummy_clocks:
 41057                           	callstack 116
 41058                           
 41059                           ;src/boards/../../drivers/pic18f47q43_spi.c: 265: void SPI_SD_dummy_clocks(struct SPI *c
      +                          tx_, unsigned int clocks);src/boards/../../drivers/pic18f47q43_spi.c: 266: {;src/boards/
      +                          ../../drivers/pic18f47q43_spi.c: 267:     uint8_t dummy = 0xff;
 41060                           
 41061                           ;incstack = 0
 41062   019910  6811               	setf	SPI_SD_dummy_clocks@dummy^(0+1280),c
 41063                           
 41064                           ;src/boards/../../drivers/pic18f47q43_spi.c: 268:     acquire_bus(ctx_);
 41065   019912  C50B  F501         	movff	SPI_SD_dummy_clocks@ctx_,acquire_bus@ctx_
 41066   019916  C50C  F502         	movff	SPI_SD_dummy_clocks@ctx_+1,acquire_bus@ctx_+1
 41067   01991A  EC23  F0CD         	call	_acquire_bus	;wreg free
 41068                           
 41069                           ;src/boards/../../drivers/pic18f47q43_spi.c: 269:     for (int i = 0; i < clocks; i++) {
 41070   01991E  0E00               	movlw	0
 41071   019920  6E10               	movwf	(SPI_SD_dummy_clocks@i+1)^(0+1280),c
 41072   019922  0E00               	movlw	0
 41073   019924  6E0F               	movwf	SPI_SD_dummy_clocks@i^(0+1280),c
 41074   019926  D010               	goto	l9387
 41075   019928                     l9383:
 41076                           
 41077                           ;src/boards/../../drivers/pic18f47q43_spi.c: 270:         SPI_SD_send(ctx_, &dummy, 1);
 41078   019928  C50B  F501         	movff	SPI_SD_dummy_clocks@ctx_,SPI_SD_send@ctx_
 41079   01992C  C50C  F502         	movff	SPI_SD_dummy_clocks@ctx_+1,SPI_SD_send@ctx_+1
 41080   019930  0E11               	movlw	low SPI_SD_dummy_clocks@dummy
 41081   019932  6E03               	movwf	SPI_SD_send@buf^(0+1280),c
 41082   019934  0E05               	movlw	high SPI_SD_dummy_clocks@dummy
 41083   019936  6E04               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 41084   019938  0E00               	movlw	0
 41085   01993A  6E06               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 41086   01993C  0E01               	movlw	1
 41087   01993E  6E05               	movwf	SPI_SD_send@count^(0+1280),c
 41088   019940  EC9E  F0CB         	call	_SPI_SD_send	;wreg free
 41089                           
 41090                           ;src/boards/../../drivers/pic18f47q43_spi.c: 271:     }
 41091   019944  4A0F               	infsnz	SPI_SD_dummy_clocks@i^(0+1280),f,c
 41092   019946  2A10               	incf	(SPI_SD_dummy_clocks@i+1)^(0+1280),f,c
 41093   019948                     l9387:
 41094   019948  500D               	movf	SPI_SD_dummy_clocks@clocks^(0+1280),w,c
 41095   01994A  5C0F               	subwf	SPI_SD_dummy_clocks@i^(0+1280),w,c
 41096   01994C  500E               	movf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),w,c
 41097   01994E  5810               	subwfb	(SPI_SD_dummy_clocks@i+1)^(0+1280),w,c
 41098   019950  A0D8               	btfss	status,0,c
 41099   019952  D7EA               	goto	l9383
 41100                           
 41101                           ;src/boards/../../drivers/pic18f47q43_spi.c: 272:     release_bus(ctx_);
 41102   019954  C50B  F501         	movff	SPI_SD_dummy_clocks@ctx_,release_bus@ctx_
 41103   019958  C50C  F502         	movff	SPI_SD_dummy_clocks@ctx_+1,release_bus@ctx_+1
 41104   01995C  EC6D  F0CE         	call	_release_bus	;wreg free
 41105   019960  0012               	return		;funcret
 41106   019962                     __end_of_SPI_SD_dummy_clocks:
 41107                           	callstack 0
 41108                           
 41109 ;; *************** function _release_bus *****************
 41110 ;; Defined at:
 41111 ;;		line 54 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 41112 ;; Parameters:    Size  Location     Type
 41113 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 41114 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41115 ;; Auto vars:     Size  Location     Type
 41116 ;;  ctx             2    2[COMRAM] PTR struct SPI_HW
 41117 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41118 ;; Return value:  Size  Location     Type
 41119 ;;                  1    wreg      void 
 41120 ;; Registers used:
 41121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41122 ;; Tracked objects:
 41123 ;;		On entry : 0/5
 41124 ;;		On exit  : 0/0
 41125 ;;		Unchanged: 0/0
 41126 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41131 ;;Total ram usage:        4 bytes
 41132 ;; Hardware stack levels used: 1
 41133 ;; This function calls:
 41134 ;;		Nothing
 41135 ;; This function is called by:
 41136 ;;		_SPI_SD_end_transaction
 41137 ;;		_SPI_SD_dummy_clocks
 41138 ;; This function uses a non-reentrant model
 41139 ;;
 41140                           
 41141                           	psect	text118
 41142   019CDA                     __ptext118:
 41143                           	callstack 0
 41144   019CDA                     _release_bus:
 41145                           	callstack 116
 41146                           
 41147                           ;src/boards/../../drivers/pic18f47q43_spi.c: 54: static void release_bus(struct SPI *ctx
      +                          _);src/boards/../../drivers/pic18f47q43_spi.c: 55: {;src/boards/../../drivers/pic18f47q4
      +                          3_spi.c: 56:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 41148                           
 41149                           ;incstack = 0
 41150   019CDA  C501  F503         	movff	release_bus@ctx_,release_bus@ctx
 41151   019CDE  C502  F504         	movff	release_bus@ctx_+1,release_bus@ctx+1
 41152                           
 41153                           ;src/boards/../../drivers/pic18f47q43_spi.c: 57:     if (--ctx->bus_acquired <= 0) {
 41154   019CE2  EE20 F002          	lfsr	2,2
 41155   019CE6  5003               	movf	release_bus@ctx^(0+1280),w,c
 41156   019CE8  26D9               	addwf	fsr2l,f,c
 41157   019CEA  5004               	movf	(release_bus@ctx+1)^(0+1280),w,c
 41158   019CEC  22DA               	addwfc	fsr2h,f,c
 41159   019CEE  06DF               	decf	indf2,f,c
 41160   019CF0  50DF               	movf	indf2,w,c
 41161   019CF2  A4D8               	btfss	status,2,c
 41162   019CF4  0012               	return	
 41163                           
 41164                           ;src/boards/../../drivers/pic18f47q43_spi.c: 58:         RC0PPS = 0x00;
 41165   019CF6  0E00               	movlw	0
 41166   019CF8  0102               	movlb	2	; () banked
 41167   019CFA  6F11               	movwf	17,b	;volatile
 41168                           
 41169                           ;src/boards/../../drivers/pic18f47q43_spi.c: 59:         RC1PPS = 0x00;
 41170   019CFC  0E00               	movlw	0
 41171   019CFE  6F12               	movwf	18,b	;volatile
 41172                           
 41173                           ; BSR set to: 2
 41174                           ;src/boards/../../drivers/pic18f47q43_spi.c: 60:         TRISF = ctx->tris;
 41175   019D00  EE20 F003          	lfsr	2,3
 41176   019D04  5003               	movf	release_bus@ctx^(0+1280),w,c
 41177   019D06  26D9               	addwf	fsr2l,f,c
 41178   019D08  5004               	movf	(release_bus@ctx+1)^(0+1280),w,c
 41179   019D0A  22DA               	addwfc	fsr2h,f,c
 41180   019D0C  50DF               	movf	indf2,w,c
 41181   019D0E  6ECB               	movwf	203,c	;volatile
 41182   019D10  0012               	return		;funcret
 41183   019D12                     __end_of_release_bus:
 41184                           	callstack 0
 41185                           
 41186 ;; *************** function _acquire_bus *****************
 41187 ;; Defined at:
 41188 ;;		line 38 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 41189 ;; Parameters:    Size  Location     Type
 41190 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 41191 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41192 ;; Auto vars:     Size  Location     Type
 41193 ;;  ctx             2    2[COMRAM] PTR struct SPI_HW
 41194 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41195 ;; Return value:  Size  Location     Type
 41196 ;;                  1    wreg      void 
 41197 ;; Registers used:
 41198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41199 ;; Tracked objects:
 41200 ;;		On entry : 0/0
 41201 ;;		On exit  : 0/0
 41202 ;;		Unchanged: 0/0
 41203 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41207 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41208 ;;Total ram usage:        4 bytes
 41209 ;; Hardware stack levels used: 1
 41210 ;; This function calls:
 41211 ;;		Nothing
 41212 ;; This function is called by:
 41213 ;;		_SPI_SD_begin_transaction
 41214 ;;		_SPI_SD_dummy_clocks
 41215 ;; This function uses a non-reentrant model
 41216 ;;
 41217                           
 41218                           	psect	text119
 41219   019A46                     __ptext119:
 41220                           	callstack 0
 41221   019A46                     _acquire_bus:
 41222                           	callstack 116
 41223                           
 41224                           ;src/boards/../../drivers/pic18f47q43_spi.c: 38: static void acquire_bus(struct SPI *ctx
      +                          _);src/boards/../../drivers/pic18f47q43_spi.c: 39: {;src/boards/../../drivers/pic18f47q4
      +                          3_spi.c: 40:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 41225                           
 41226                           ;incstack = 0
 41227   019A46  C501  F503         	movff	acquire_bus@ctx_,acquire_bus@ctx
 41228   019A4A  C502  F504         	movff	acquire_bus@ctx_+1,acquire_bus@ctx+1
 41229                           
 41230                           ;src/boards/../../drivers/pic18f47q43_spi.c: 41:     if (ctx->bus_acquired == 0) {
 41231   019A4E  EE20 F002          	lfsr	2,2
 41232   019A52  5003               	movf	acquire_bus@ctx^(0+1280),w,c
 41233   019A54  26D9               	addwf	fsr2l,f,c
 41234   019A56  5004               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 41235   019A58  22DA               	addwfc	fsr2h,f,c
 41236   019A5A  50DF               	movf	indf2,w,c
 41237   019A5C  A4D8               	btfss	status,2,c
 41238   019A5E  D010               	goto	l9315
 41239                           
 41240                           ;src/boards/../../drivers/pic18f47q43_spi.c: 42:         RC0PPS = 0x31;
 41241   019A60  0E31               	movlw	49
 41242   019A62  0102               	movlb	2	; () banked
 41243   019A64  6F11               	movwf	17,b	;volatile
 41244                           
 41245                           ;src/boards/../../drivers/pic18f47q43_spi.c: 44:         RC1PPS = 0x32;
 41246   019A66  0E32               	movlw	50
 41247   019A68  6F12               	movwf	18,b	;volatile
 41248                           
 41249                           ; BSR set to: 2
 41250                           ;src/boards/../../drivers/pic18f47q43_spi.c: 46:         ctx->tris = TRISF;
 41251   019A6A  EE20 F003          	lfsr	2,3
 41252   019A6E  5003               	movf	acquire_bus@ctx^(0+1280),w,c
 41253   019A70  26D9               	addwf	fsr2l,f,c
 41254   019A72  5004               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 41255   019A74  22DA               	addwfc	fsr2h,f,c
 41256   019A76  C4CB F4DF          	movff	1227,indf2	;volatile
 41257                           
 41258                           ; BSR set to: 2
 41259                           ;src/boards/../../drivers/pic18f47q43_spi.c: 47:         TRISC1 = 0;
 41260   019A7A  92C8               	bcf	1224,1,c	;volatile
 41261                           
 41262                           ; BSR set to: 2
 41263                           ;src/boards/../../drivers/pic18f47q43_spi.c: 48:         TRISC0 = 0;
 41264   019A7C  90C8               	bcf	1224,0,c	;volatile
 41265                           
 41266                           ; BSR set to: 2
 41267                           ;src/boards/../../drivers/pic18f47q43_spi.c: 49:         TRISC2 = 1;
 41268   019A7E  84C8               	bsf	1224,2,c	;volatile
 41269   019A80                     l9315:
 41270                           
 41271                           ;src/boards/../../drivers/pic18f47q43_spi.c: 51:     ctx->bus_acquired++;
 41272   019A80  EE20 F002          	lfsr	2,2
 41273   019A84  5003               	movf	acquire_bus@ctx^(0+1280),w,c
 41274   019A86  26D9               	addwf	fsr2l,f,c
 41275   019A88  5004               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 41276   019A8A  22DA               	addwfc	fsr2h,f,c
 41277   019A8C  2ADF               	incf	indf2,f,c
 41278   019A8E  0012               	return		;funcret
 41279   019A90                     __end_of_acquire_bus:
 41280                           	callstack 0
 41281                           
 41282 ;; *************** function _SPI_SD_send *****************
 41283 ;; Defined at:
 41284 ;;		line 170 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 41285 ;; Parameters:    Size  Location     Type
 41286 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 41287 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41288 ;;  buf             2    2[COMRAM] PTR const void 
 41289 ;;		 -> files$buf(512), fs$win(512), disk_buf(128), files(3276), 
 41290 ;;		 -> fs(560), SDCard_write512@response(1), __SDCard_command_r1@buf(6), SPI_SD_dummy_clocks@dummy(1), 
 41291 ;;		 -> NULL(0), 
 41292 ;;  count           2    4[COMRAM] unsigned int 
 41293 ;; Auto vars:     Size  Location     Type
 41294 ;;  i               2    6[COMRAM] int 
 41295 ;;  p               2    8[COMRAM] PTR unsigned char 
 41296 ;;		 -> files$buf(512), fs$win(512), disk_buf(128), files(3276), 
 41297 ;;		 -> fs(560), SDCard_write512@response(1), __SDCard_command_r1@buf(6), SPI_SD_dummy_clocks@dummy(1), 
 41298 ;;		 -> NULL(0), 
 41299 ;;  dummy           1    0        unsigned char 
 41300 ;; Return value:  Size  Location     Type
 41301 ;;                  1    wreg      void 
 41302 ;; Registers used:
 41303 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41304 ;; Tracked objects:
 41305 ;;		On entry : 0/5
 41306 ;;		On exit  : 0/0
 41307 ;;		Unchanged: 0/0
 41308 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41309 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41310 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41312 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41313 ;;Total ram usage:       10 bytes
 41314 ;; Hardware stack levels used: 1
 41315 ;; This function calls:
 41316 ;;		Nothing
 41317 ;; This function is called by:
 41318 ;;		_SPI_SD_dummy_clocks
 41319 ;;		___SDCard_command_r1
 41320 ;;		_SDCard_write512
 41321 ;; This function uses a non-reentrant model
 41322 ;;
 41323                           
 41324                           	psect	text120
 41325   01973C                     __ptext120:
 41326                           	callstack 0
 41327   01973C                     _SPI_SD_send:
 41328                           	callstack 117
 41329                           
 41330                           ;src/boards/../../drivers/pic18f47q43_spi.c: 170: void SPI_SD_send(struct SPI *ctx_, con
      +                          st void *buf, unsigned int count);src/boards/../../drivers/pic18f47q43_spi.c: 171: {;src
      +                          /boards/../../drivers/pic18f47q43_spi.c: 172:     uint8_t *p = (uint8_t*)buf;
 41331                           
 41332                           ;incstack = 0
 41333   01973C  C503  F509         	movff	SPI_SD_send@buf,SPI_SD_send@p
 41334   019740  C504  F50A         	movff	SPI_SD_send@buf+1,SPI_SD_send@p+1
 41335                           
 41336                           ;src/boards/../../drivers/pic18f47q43_spi.c: 173:     uint8_t dummy;;src/boards/../../dr
      +                          ivers/pic18f47q43_spi.c: 175:     if (count == 0)
 41337   019744  5005               	movf	SPI_SD_send@count^(0+1280),w,c
 41338   019746  1006               	iorwf	(SPI_SD_send@count+1)^(0+1280),w,c
 41339   019748  B4D8               	btfsc	status,2,c
 41340   01974A  0012               	return	
 41341                           
 41342                           ;src/boards/../../drivers/pic18f47q43_spi.c: 178:     SPI1TCNTH = (count >> 8);
 41343   01974C  C506  F083         	movff	SPI_SD_send@count+1,131	;volatile
 41344                           
 41345                           ;src/boards/../../drivers/pic18f47q43_spi.c: 179:     SPI1TCNTL = (count & 0xff);
 41346   019750  C505  F082         	movff	SPI_SD_send@count,130	;volatile
 41347                           
 41348                           ;src/boards/../../drivers/pic18f47q43_spi.c: 181:     SPI1TXB = *p++;
 41349   019754  C509  F4D9         	movff	SPI_SD_send@p,fsr2l
 41350   019758  C50A  F4DA         	movff	SPI_SD_send@p+1,fsr2h
 41351   01975C  50DF               	movf	indf2,w,c
 41352   01975E  0100               	movlb	0	; () banked
 41353   019760  6F81               	movwf	129,b	;volatile
 41354                           
 41355                           ; BSR set to: 0
 41356   019762  4A09               	infsnz	SPI_SD_send@p^(0+1280),f,c
 41357   019764  2A0A               	incf	(SPI_SD_send@p+1)^(0+1280),f,c
 41358                           
 41359                           ; BSR set to: 0
 41360                           ;src/boards/../../drivers/pic18f47q43_spi.c: 182:     for (int i = 1; i < count; i++) {
 41361   019766  0E00               	movlw	0
 41362   019768  6E08               	movwf	(SPI_SD_send@i+1)^(0+1280),c
 41363   01976A  0E01               	movlw	1
 41364   01976C  6E07               	movwf	SPI_SD_send@i^(0+1280),c
 41365   01976E  D00E               	goto	l9343
 41366   019770                     l9337:
 41367                           
 41368                           ; BSR set to: 0
 41369                           ;src/boards/../../drivers/pic18f47q43_spi.c: 183:         SPI1TXB = *p++;
 41370   019770  C509  F4D9         	movff	SPI_SD_send@p,fsr2l
 41371   019774  C50A  F4DA         	movff	SPI_SD_send@p+1,fsr2h
 41372   019778  50DF               	movf	indf2,w,c
 41373   01977A  6F81               	movwf	129,b	;volatile
 41374                           
 41375                           ; BSR set to: 0
 41376   01977C  4A09               	infsnz	SPI_SD_send@p^(0+1280),f,c
 41377   01977E  2A0A               	incf	(SPI_SD_send@p+1)^(0+1280),f,c
 41378   019780                     l1252:
 41379   019780  A0B1               	btfss	1201,0,c	;volatile
 41380   019782  D7FE               	goto	l1252
 41381   019784  0100               	movlb	0	; () banked
 41382   019786  5180               	movf	128,w,b	;volatile
 41383                           
 41384                           ; BSR set to: 0
 41385                           ;src/boards/../../drivers/pic18f47q43_spi.c: 186:     }
 41386   019788  4A07               	infsnz	SPI_SD_send@i^(0+1280),f,c
 41387   01978A  2A08               	incf	(SPI_SD_send@i+1)^(0+1280),f,c
 41388   01978C                     l9343:
 41389                           
 41390                           ; BSR set to: 0
 41391   01978C  5005               	movf	SPI_SD_send@count^(0+1280),w,c
 41392   01978E  5C07               	subwf	SPI_SD_send@i^(0+1280),w,c
 41393   019790  5006               	movf	(SPI_SD_send@count+1)^(0+1280),w,c
 41394   019792  5808               	subwfb	(SPI_SD_send@i+1)^(0+1280),w,c
 41395   019794  A0D8               	btfss	status,0,c
 41396   019796  D7EC               	goto	l9337
 41397   019798                     u10830:
 41398   019798  A0B1               	btfss	1201,0,c	;volatile
 41399   01979A  D7FE               	goto	u10830
 41400   01979C  0100               	movlb	0	; () banked
 41401   01979E  5180               	movf	128,w,b	;volatile
 41402   0197A0  0012               	return		;funcret
 41403   0197A2                     __end_of_SPI_SD_send:
 41404                           	callstack 0
 41405                           
 41406                           	psect	rparam
 41407   000000                     
 41408                           	psect	config
 41409                           
 41410                           ;Config register CONFIG1 @ 0x300000
 41411                           ;	External Oscillator Selection
 41412                           ;	FEXTOSC = OFF, Oscillator not enabled
 41413                           ;	Reset Oscillator Selection
 41414                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 41415   300000                     	org	3145728
 41416   300000  8C                 	db	140
 41417                           
 41418                           ;Config register CONFIG2 @ 0x300001
 41419                           ;	Clock out Enable bit
 41420                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 41421                           ;	PRLOCKED One-Way Set Enable bit
 41422                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 41423                           ;	Clock Switch Enable bit
 41424                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 41425                           ;	Fail-Safe Clock Monitor Enable bit
 41426                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 41427   300001                     	org	3145729
 41428   300001  FF                 	db	255
 41429                           
 41430                           ;Config register CONFIG3 @ 0x300002
 41431                           ;	MCLR Enable bit
 41432                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 41433                           ;	Power-up timer selection bits
 41434                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 41435                           ;	Multi-vector enable bit
 41436                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 41437                           ;	IVTLOCK bit One-way set enable bit
 41438                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 41439                           ;	Low Power BOR Enable bit
 41440                           ;	LPBOREN = OFF, Low-Power BOR disabled
 41441                           ;	Brown-out Reset Enable bits
 41442                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 41443   300002                     	org	3145730
 41444   300002  FF                 	db	255
 41445                           
 41446                           ;Config register CONFIG4 @ 0x300003
 41447                           ;	Brown-out Reset Voltage Selection bits
 41448                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 41449                           ;	ZCD Disable bit
 41450                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 41451                           ;	PPSLOCK bit One-Way Set Enable bit
 41452                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
 41453                           ;	Stack Full/Underflow Reset Enable bit
 41454                           ;	STVREN = ON, Stack full/underflow will cause Reset
 41455                           ;	Low Voltage Programming Enable bit
 41456                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 41457                           ;	Extended Instruction Set Enable bit
 41458                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 41459   300003                     	org	3145731
 41460   300003  F7                 	db	247
 41461                           
 41462                           ;Config register CONFIG5 @ 0x300004
 41463                           ;	WDT Period selection bits
 41464                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 41465                           ;	WDT operating mode
 41466                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 41467   300004                     	org	3145732
 41468   300004  9F                 	db	159
 41469                           
 41470                           ;Config register CONFIG6 @ 0x300005
 41471                           ;	WDT Window Select bits
 41472                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 41473                           ;	WDT input clock selector
 41474                           ;	WDTCCS = SC, Software Control
 41475   300005                     	org	3145733
 41476   300005  FF                 	db	255
 41477                           
 41478                           ;Config register CONFIG7 @ 0x300006
 41479                           ;	Boot Block Size selection bits
 41480                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 41481                           ;	Boot Block enable bit
 41482                           ;	BBEN = OFF, Boot block disabled
 41483                           ;	Storage Area Flash enable bit
 41484                           ;	SAFEN = OFF, SAF disabled
 41485                           ;	Background Debugger
 41486                           ;	DEBUG = 0x1, unprogrammed default
 41487   300006                     	org	3145734
 41488   300006  FF                 	db	255
 41489                           
 41490                           ;Config register CONFIG8 @ 0x300007
 41491                           ;	Boot Block Write Protection bit
 41492                           ;	WRTB = OFF, Boot Block not Write protected
 41493                           ;	Configuration Register Write Protection bit
 41494                           ;	WRTC = OFF, Configuration registers not Write protected
 41495                           ;	Data EEPROM Write Protection bit
 41496                           ;	WRTD = OFF, Data EEPROM not Write protected
 41497                           ;	SAF Write protection bit
 41498                           ;	WRTSAF = OFF, SAF not Write Protected
 41499                           ;	Application Block write protection bit
 41500                           ;	WRTAPP = OFF, Application Block not write protected
 41501   300007                     	org	3145735
 41502   300007  FF                 	db	255
 41503                           
 41504                           ;Config register CONFIG10 @ 0x300009
 41505                           ;	PFM and Data EEPROM Code Protection bit
 41506                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 41507   300009                     	org	3145737
 41508   300009  FF                 	db	255
 41509                           tosu	equ	0x4FF
 41510                           tosh	equ	0x4FE
 41511                           tosl	equ	0x4FD
 41512                           stkptr	equ	0x4FC
 41513                           pclatu	equ	0x4FB
 41514                           pclath	equ	0x4FA
 41515                           pcl	equ	0x4F9
 41516                           tblptru	equ	0x4F8
 41517                           tblptrh	equ	0x4F7
 41518                           tblptrl	equ	0x4F6
 41519                           tablat	equ	0x4F5
 41520                           prodh	equ	0x4F4
 41521                           prodl	equ	0x4F3
 41522                           indf0	equ	0x4EF
 41523                           postinc0	equ	0x4EE
 41524                           postdec0	equ	0x4ED
 41525                           preinc0	equ	0x4EC
 41526                           plusw0	equ	0x4EB
 41527                           fsr0h	equ	0x4EA
 41528                           fsr0l	equ	0x4E9
 41529                           wreg	equ	0x4E8
 41530                           indf1	equ	0x4E7
 41531                           postinc1	equ	0x4E6
 41532                           postdec1	equ	0x4E5
 41533                           preinc1	equ	0x4E4
 41534                           plusw1	equ	0x4E3
 41535                           fsr1h	equ	0x4E2
 41536                           fsr1l	equ	0x4E1
 41537                           bsr	equ	0x4E0
 41538                           indf2	equ	0x4DF
 41539                           postinc2	equ	0x4DE
 41540                           postdec2	equ	0x4DD
 41541                           preinc2	equ	0x4DC
 41542                           plusw2	equ	0x4DB
 41543                           fsr2h	equ	0x4DA
 41544                           fsr2l	equ	0x4D9
 41545                           status	equ	0x4D8

Data Sizes:
    Strings     2012
    Constant    7858
    Data        71
    BSS         4667
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK5           160    160     160
    BANK6           256    255     256
    BANK7           256     22     219
    BANK8           256      0     192
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    acquire_bus@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    acquire_bus@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    check_fs@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    create_chain@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 3288
		 -> f_mkdir@dj(COMRAM[40]), f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), 
		 -> files(BIGRAM[3276]), fsdir(BANK7[40]), 

    create_chain@obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), 

    create_name@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    create_name@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_62(CODE[5]), STR_65(CODE[2]), tmp_buf(BIGRAM[512]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK6[2]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), fsdir$fn(BANK7[12]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    ctx_$spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 

    dir_alloc@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), 

    dir_find@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_find@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_find@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), fsdir(BANK7[40]), 

    dir_next@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_next@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_next@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_read@dp	PTR struct . size(2) Largest target is 42
		 -> f_unlink@sdj(COMRAM[40]), fsdir(BANK7[40]), 

    dir_read@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_read@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_read@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 

    dir_register@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_register@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_register@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_remove@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_remove@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), fsdir(BANK7[40]), 

    dir_sdi@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    disk_io_handle@disk_datap	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_io_handle@filep	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    disk_io_handle@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    disk_io_handle@filep$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    disk_io_handle@filep$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), files(BIGRAM[3276]), fs(BIGRAM[560]), NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), NULL(NULL[0]), 

    dj$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dj$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    djn$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    djn$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    djo$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    djo$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    drives$filep	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    emuz80_57q_read_from_sram@buf	PTR unsigned char  size(2) Largest target is 512
		 -> disk_buf(BANK8[128]), tmp_buf(BIGRAM[512]), 

    emuz80_57q_write_to_sram@buf	PTR unsigned char  size(2) Largest target is 5683
		 -> bdosccp(CODE[5683]), bios(CODE[1332]), disk_buf(BANK8[128]), rom(CODE[831]), 
		 -> tmp_buf(BIGRAM[512]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    f_close@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_close@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_closedir@dp	PTR struct . size(2) Largest target is 42
		 -> fsdir(BANK7[40]), 

    f_closedir@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_closedir@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_closedir@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_lseek@fp	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    f_lseek@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_lseek@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_lseek@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_mkdir@dj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_62(CODE[5]), STR_65(CODE[2]), tmp_buf(BIGRAM[512]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_62(CODE[5]), STR_65(CODE[2]), tmp_buf(BIGRAM[512]), 

    f_open@dj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    f_open@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_open@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_62(CODE[5]), STR_65(CODE[2]), tmp_buf(BIGRAM[512]), 

    f_opendir@dp	PTR struct . size(2) Largest target is 42
		 -> fsdir(BANK7[40]), 

    f_opendir@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_opendir@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_opendir@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_opendir@path	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_62(CODE[5]), STR_65(CODE[2]), tmp_buf(BIGRAM[512]), 

    f_read@br	PTR unsigned int  size(2) Largest target is 2
		 -> disk_io_handle@n(BANK6[2]), 

    f_read@buff	PTR void  size(2) Largest target is 128
		 -> disk_buf(BANK8[128]), 

    f_read@fp	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    f_read@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_read@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_read@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_read@rbuff	PTR unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK8[128]), 

    f_readdir@dp	PTR struct . size(2) Largest target is 42
		 -> fsdir(BANK7[40]), 

    f_readdir@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_readdir@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_readdir@fno	PTR struct . size(2) Largest target is 22
		 -> fileinfo(BANK7[22]), NULL(NULL[0]), 

    f_readdir@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_rename@djn$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_rename@djo$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_stat@dj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    f_sync@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_sync@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_truncate@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_truncate@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_unlink@dj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_unlink@sdj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_write@buff	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK8[128]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> disk_io_handle@n(BANK6[2]), 

    f_write@fp	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    f_write@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_write@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK8[128]), 

    FatFs	PTR struct .[1] size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    files$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    files$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    files$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), 

    follow_path@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    follow_path@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    follow_path@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_62(CODE[5]), STR_65(CODE[2]), tmp_buf(BIGRAM[512]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    fsdir$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    fsdir$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    fsdir$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    get_fat@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 3288
		 -> f_getfree@obj(COMRAM[14]), f_mkdir@dj(COMRAM[40]), f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_unlink@sdj(COMRAM[40]), files(BIGRAM[3276]), fsdir(BANK7[40]), 

    get_fat@obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    get_fileinfo@dp	PTR struct . size(2) Largest target is 42
		 -> f_stat@dj(COMRAM[40]), fsdir(BANK7[40]), 

    get_fileinfo@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    get_fileinfo@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    get_fileinfo@fno	PTR struct . size(2) Largest target is 22
		 -> fileinfo(BANK7[22]), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_getfree@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), f_mount@path(BANK6[2]), f_mount@rp(BANK6[2]), 
		 -> f_open@path(BANK6[2]), f_opendir@path(BANK6[2]), f_rename@path_new(COMRAM[2]), f_rename@path_old(COMRAM[2]), 
		 -> f_stat@path(COMRAM[2]), f_unlink@path(COMRAM[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_62(CODE[5]), STR_65(CODE[2]), tmp_buf(BIGRAM[512]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_62(CODE[5]), STR_65(CODE[2]), tmp_buf(BIGRAM[512]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 512
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), fsdir$fn(BANK7[12]), STR_30(CODE[9]), 
		 -> tmp_buf(BIGRAM[512]), 

    memcmp@vl	PTR const void  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    memcmp@vr	PTR const void  size(2) Largest target is 512
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), fsdir$fn(BANK7[12]), STR_30(CODE[9]), 
		 -> tmp_buf(BIGRAM[512]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3288
		 -> dbuf(BANK7[80]), disk_buf(BANK8[128]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), 
		 -> files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), fs$win(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 3288
		 -> dbuf(BANK7[80]), disk_buf(BANK8[128]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), 
		 -> files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), fs$win(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3288
		 -> dbuf(BANK7[80]), disk_buf(BANK8[128]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3288
		 -> dbuf(BANK7[80]), disk_buf(BANK8[128]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 3288
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), files(BIGRAM[3276]), fs(BIGRAM[560]), fsdir(BANK7[40]), 
		 -> fsdir$fn(BANK7[12]), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 3288
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), files(BIGRAM[3276]), fs(BIGRAM[560]), fsdir(BANK7[40]), 
		 -> fsdir$fn(BANK7[12]), NULL(NULL[0]), 

    menu_select$3959	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    menu_select@buf	const PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    mount_volume@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    mount_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_getfree@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), f_mount@path(BANK6[2]), f_open@path(BANK6[2]), 
		 -> f_opendir@path(BANK6[2]), f_rename@path_old(COMRAM[2]), f_stat@path(COMRAM[2]), f_unlink@path(COMRAM[2]), 

    mount_volume@rfs	PTR PTR struct . size(2) Largest target is 42
		 -> dj$obj(COMRAM[15]), f_getfree@fs(COMRAM[2]), f_mkdir@fs(COMRAM[2]), f_mount@fs(BANK6[2]), 
		 -> f_open@dj(BANK6[40]), f_open@fs(BANK6[2]), f_opendir@fs(BANK6[2]), f_rename@fs(COMRAM[2]), 
		 -> f_unlink@fs(COMRAM[2]), 

    move_window@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), ?_sprintf(BANK5[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_11(CODE[44]), STR_12(CODE[28]), 
		 -> STR_14(CODE[44]), STR_15(CODE[29]), STR_17(CODE[44]), STR_18(CODE[50]), 
		 -> STR_19(CODE[8]), STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), 
		 -> STR_22(CODE[9]), STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), 
		 -> STR_3(CODE[39]), STR_31(CODE[38]), STR_33(CODE[45]), STR_35(CODE[28]), 
		 -> STR_36(CODE[25]), STR_37(CODE[19]), STR_38(CODE[45]), STR_39(CODE[25]), 
		 -> STR_4(CODE[26]), STR_40(CODE[27]), STR_41(CODE[35]), STR_42(CODE[46]), 
		 -> STR_43(CODE[36]), STR_44(CODE[43]), STR_45(CODE[38]), STR_46(CODE[41]), 
		 -> STR_47(CODE[18]), STR_48(CODE[34]), STR_49(CODE[36]), STR_50(CODE[50]), 
		 -> STR_52(CODE[55]), STR_53(CODE[50]), STR_55(CODE[50]), STR_56(CODE[35]), 
		 -> STR_57(CODE[42]), STR_58(CODE[47]), STR_59(CODE[30]), STR_6(CODE[19]), 
		 -> STR_60(CODE[40]), STR_61(CODE[3]), STR_63(CODE[27]), STR_64(CODE[36]), 
		 -> STR_66(CODE[27]), STR_69(CODE[9]), STR_7(CODE[21]), STR_71(CODE[9]), 
		 -> STR_72(CODE[5]), STR_75(CODE[18]), STR_78(CODE[52]), STR_79(CODE[16]), 
		 -> STR_8(CODE[33]), STR_80(CODE[24]), STR_81(CODE[34]), STR_82(CODE[3]), 
		 -> STR_83(CODE[25]), STR_84(CODE[25]), STR_85(CODE[14]), STR_86(CODE[18]), 
		 -> STR_87(CODE[22]), STR_88(CODE[31]), STR_89(CODE[32]), STR_9(CODE[23]), 
		 -> STR_90(CODE[21]), 

    put_fat@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    release_bus@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    release_bus@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), f_unlink@dj(COMRAM[40]), 

    remove_chain@obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    S205$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    S212$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    S2165SDCard$spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    S247$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    S2591$filep	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    S3285$buffer	PTR unsigned char  size(2) Largest target is 0

    S3285$source	PTR const unsigned char  size(2) Largest target is 0

    SDCard_command@response_buffer	PTR void  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), 

    SDCard_command@responsep	PTR unsigned char  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), 

    SDCard_command@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    __SDCard_command_r1@r1	PTR unsigned char  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 

    __SDCard_command_r1@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    __SDCard_crc16@buf	PTR const void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), 
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 
		 -> NULL(NULL[0]), 

    __SDCard_crc16@endp	PTR unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), 
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 
		 -> NULL(NULL[0]), 

    __SDCard_crc16@p	PTR unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), 
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 
		 -> NULL(NULL[0]), 

    SDCard_crc@buf	PTR const void  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_crc@endp	PTR unsigned char  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_crc@p	PTR unsigned char  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_end_transaction@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SDCard_init@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SDCard_read512@buf	PTR void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), fs(BIGRAM[560]), 
		 -> NULL(NULL[0]), 

    SDCard_read512@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    __SDCard_wait_response@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SDCard_write512@buf	PTR const void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_write512@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    sdj$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    sdj$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    sobj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 3288
		 -> dbuf(BANK7[80]), disk_buf(BANK8[128]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), 
		 -> files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), fs$win(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 3288
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), files(BIGRAM[3276]), fs(BIGRAM[560]), fsdir(BANK7[40]), 
		 -> fsdir$fn(BANK7[12]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 15
		 -> STR_28(CODE[15]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), fileinfo(BANK7[22]), 

    SPI_SD_begin@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_begin@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_begin_transaction@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_configure@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_configure@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_ctx	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), 

    SPI_SD_dummy_clocks@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_end_transaction@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_receive@buf	PTR void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), fs(BIGRAM[560]), 
		 -> SDCard_init@buf(BANK5[5]), SPI_SD_receive_byte@dummy(COMRAM[1]), NULL(NULL[0]), 

    SPI_SD_receive@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_receive@p	PTR unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), fs(BIGRAM[560]), 
		 -> SDCard_init@buf(BANK5[5]), SPI_SD_receive_byte@dummy(COMRAM[1]), NULL(NULL[0]), 

    SPI_SD_receive_byte@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_select@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_send@buf	PTR const void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), __SDCard_command_r1@buf(COMRAM[6]), SDCard_write512@response(BANK5[1]), SPI_SD_dummy_clocks@dummy(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    SPI_SD_send@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_send@p	PTR unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), __SDCard_command_r1@buf(COMRAM[6]), SDCard_write512@response(BANK5[1]), SPI_SD_dummy_clocks@dummy(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), ?_sprintf(BANK5[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_77(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 560
		 -> disk_initialize@buf(BANK6[128]), dj$sect(COMRAM[4]), djn$sect(COMRAM[4]), djo$sect(COMRAM[4]), 
		 -> fileinfo(BANK7[22]), files$buf(BIGRAM[512]), files$dir_sect(BIGRAM[4]), files$fptr(BIGRAM[4]), 
		 -> files$obj$objsize(BIGRAM[4]), files$sect(BIGRAM[4]), fs(BIGRAM[560]), fs$csize(BIGRAM[2]), 
		 -> fs$fatbase(BIGRAM[4]), fs$pdrv(BIGRAM[1]), fs$volbase(BIGRAM[4]), fs$win(BIGRAM[512]), 
		 -> fs$winsect(BIGRAM[4]), fsdir$sect(BANK7[4]), ?_printf(BANK5[2]), sdj$sect(COMRAM[4]), 
		 -> ?_sprintf(BANK5[2]), STR_13(CODE[6]), STR_16(CODE[6]), STR_26(CODE[1]), 
		 -> STR_32(CODE[17]), STR_34(CODE[17]), STR_5(CODE[1]), STR_51(CODE[5]), 
		 -> STR_54(CODE[5]), STR_97(CODE[7]), util_addrdump@chars(BANK5[17]), util_hexdump@chars(BANK5[17]), 
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 560
		 -> disk_initialize@buf(BANK6[128]), dj$sect(COMRAM[4]), djn$sect(COMRAM[4]), djo$sect(COMRAM[4]), 
		 -> fileinfo(BANK7[22]), files$buf(BIGRAM[512]), files$dir_sect(BIGRAM[4]), files$fptr(BIGRAM[4]), 
		 -> files$obj$objsize(BIGRAM[4]), files$sect(BIGRAM[4]), fs(BIGRAM[560]), fs$csize(BIGRAM[2]), 
		 -> fs$fatbase(BIGRAM[4]), fs$pdrv(BIGRAM[1]), fs$volbase(BIGRAM[4]), fs$win(BIGRAM[512]), 
		 -> fs$winsect(BIGRAM[4]), fsdir$sect(BANK7[4]), ?_printf(BANK5[2]), sdj$sect(COMRAM[4]), 
		 -> ?_sprintf(BANK5[2]), STR_13(CODE[6]), STR_16(CODE[6]), STR_26(CODE[1]), 
		 -> STR_32(CODE[17]), STR_34(CODE[17]), STR_5(CODE[1]), STR_51(CODE[5]), 
		 -> STR_54(CODE[5]), util_addrdump@chars(BANK5[17]), util_hexdump@chars(BANK5[17]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_28(CODE[15]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 22
		 -> fileinfo(BANK7[22]), fileinfo$fname(BANK7[13]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_70(CODE[9]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), fileinfo(BANK7[22]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), fileinfo(BANK7[22]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_76(CODE[9]), STR_91(CODE[4]), STR_94(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 22
		 -> fileinfo(BANK7[22]), fileinfo$fname(BANK7[13]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_67(CODE[9]), STR_68(CODE[8]), STR_73(CODE[9]), STR_74(CODE[8]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    util_addrdump@addr	PTR const void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), 
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    util_addrdump@buf	PTR const unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), 
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    util_addrdump@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_13(CODE[6]), STR_16(CODE[6]), STR_51(CODE[5]), STR_54(CODE[5]), 

    util_hexdump@addr	PTR const void  size(2) Largest target is 128
		 -> disk_initialize@buf(BANK6[128]), 

    util_hexdump@buf	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_initialize@buf(BANK6[128]), 

    util_hexdump@header	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_5(CODE[1]), 

    validate$1075	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), fsdir(BANK7[40]), 

    validate@obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_close@fs(COMRAM[2]), f_closedir@fs(BANK5[2]), f_lseek@fs(BANK6[2]), f_read@fs(BANK6[2]), 
		 -> f_readdir@fs(BANK6[2]), f_sync@fs(BANK6[2]), f_truncate@fs(COMRAM[2]), f_write@fs(BANK6[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 55
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_11(CODE[44]), STR_12(CODE[28]), 
		 -> STR_14(CODE[44]), STR_15(CODE[29]), STR_17(CODE[44]), STR_18(CODE[50]), 
		 -> STR_19(CODE[8]), STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), 
		 -> STR_22(CODE[9]), STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), 
		 -> STR_3(CODE[39]), STR_31(CODE[38]), STR_33(CODE[45]), STR_35(CODE[28]), 
		 -> STR_36(CODE[25]), STR_37(CODE[19]), STR_38(CODE[45]), STR_39(CODE[25]), 
		 -> STR_4(CODE[26]), STR_40(CODE[27]), STR_41(CODE[35]), STR_42(CODE[46]), 
		 -> STR_43(CODE[36]), STR_44(CODE[43]), STR_45(CODE[38]), STR_46(CODE[41]), 
		 -> STR_47(CODE[18]), STR_48(CODE[34]), STR_49(CODE[36]), STR_50(CODE[50]), 
		 -> STR_52(CODE[55]), STR_53(CODE[50]), STR_55(CODE[50]), STR_56(CODE[35]), 
		 -> STR_57(CODE[42]), STR_58(CODE[47]), STR_59(CODE[30]), STR_6(CODE[19]), 
		 -> STR_60(CODE[40]), STR_61(CODE[3]), STR_63(CODE[27]), STR_64(CODE[36]), 
		 -> STR_66(CODE[27]), STR_69(CODE[9]), STR_7(CODE[21]), STR_71(CODE[9]), 
		 -> STR_72(CODE[5]), STR_75(CODE[18]), STR_77(CODE[15]), STR_78(CODE[52]), 
		 -> STR_79(CODE[16]), STR_8(CODE[33]), STR_80(CODE[24]), STR_81(CODE[34]), 
		 -> STR_82(CODE[3]), STR_83(CODE[25]), STR_84(CODE[25]), STR_85(CODE[14]), 
		 -> STR_86(CODE[18]), STR_87(CODE[22]), STR_88(CODE[31]), STR_89(CODE[32]), 
		 -> STR_9(CODE[23]), STR_90(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 55
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_11(CODE[44]), STR_12(CODE[28]), 
		 -> STR_14(CODE[44]), STR_15(CODE[29]), STR_17(CODE[44]), STR_18(CODE[50]), 
		 -> STR_19(CODE[8]), STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), 
		 -> STR_22(CODE[9]), STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), 
		 -> STR_3(CODE[39]), STR_31(CODE[38]), STR_33(CODE[45]), STR_35(CODE[28]), 
		 -> STR_36(CODE[25]), STR_37(CODE[19]), STR_38(CODE[45]), STR_39(CODE[25]), 
		 -> STR_4(CODE[26]), STR_40(CODE[27]), STR_41(CODE[35]), STR_42(CODE[46]), 
		 -> STR_43(CODE[36]), STR_44(CODE[43]), STR_45(CODE[38]), STR_46(CODE[41]), 
		 -> STR_47(CODE[18]), STR_48(CODE[34]), STR_49(CODE[36]), STR_50(CODE[50]), 
		 -> STR_52(CODE[55]), STR_53(CODE[50]), STR_55(CODE[50]), STR_56(CODE[35]), 
		 -> STR_57(CODE[42]), STR_58(CODE[47]), STR_59(CODE[30]), STR_6(CODE[19]), 
		 -> STR_60(CODE[40]), STR_61(CODE[3]), STR_63(CODE[27]), STR_64(CODE[36]), 
		 -> STR_66(CODE[27]), STR_69(CODE[9]), STR_7(CODE[21]), STR_71(CODE[9]), 
		 -> STR_72(CODE[5]), STR_75(CODE[18]), STR_77(CODE[15]), STR_78(CODE[52]), 
		 -> STR_79(CODE[16]), STR_8(CODE[33]), STR_80(CODE[24]), STR_81(CODE[34]), 
		 -> STR_82(CODE[3]), STR_83(CODE[25]), STR_84(CODE[25]), STR_85(CODE[14]), 
		 -> STR_86(CODE[18]), STR_87(CODE[22]), STR_88(CODE[31]), STR_89(CODE[32]), 
		 -> STR_9(CODE[23]), STR_90(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_11(CODE[44]), STR_12(CODE[28]), 
		 -> STR_14(CODE[44]), STR_15(CODE[29]), STR_17(CODE[44]), STR_18(CODE[50]), 
		 -> STR_19(CODE[8]), STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), 
		 -> STR_22(CODE[9]), STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), 
		 -> STR_3(CODE[39]), STR_31(CODE[38]), STR_33(CODE[45]), STR_35(CODE[28]), 
		 -> STR_36(CODE[25]), STR_37(CODE[19]), STR_38(CODE[45]), STR_39(CODE[25]), 
		 -> STR_4(CODE[26]), STR_40(CODE[27]), STR_41(CODE[35]), STR_42(CODE[46]), 
		 -> STR_43(CODE[36]), STR_44(CODE[43]), STR_45(CODE[38]), STR_46(CODE[41]), 
		 -> STR_47(CODE[18]), STR_48(CODE[34]), STR_49(CODE[36]), STR_50(CODE[50]), 
		 -> STR_52(CODE[55]), STR_53(CODE[50]), STR_55(CODE[50]), STR_56(CODE[35]), 
		 -> STR_57(CODE[42]), STR_58(CODE[47]), STR_59(CODE[30]), STR_6(CODE[19]), 
		 -> STR_60(CODE[40]), STR_61(CODE[3]), STR_63(CODE[27]), STR_64(CODE[36]), 
		 -> STR_66(CODE[27]), STR_69(CODE[9]), STR_7(CODE[21]), STR_71(CODE[9]), 
		 -> STR_72(CODE[5]), STR_75(CODE[18]), STR_77(CODE[15]), STR_78(CODE[52]), 
		 -> STR_79(CODE[16]), STR_8(CODE[33]), STR_80(CODE[24]), STR_81(CODE[34]), 
		 -> STR_82(CODE[3]), STR_83(CODE[25]), STR_84(CODE[25]), STR_85(CODE[14]), 
		 -> STR_86(CODE[18]), STR_87(CODE[22]), STR_88(CODE[31]), STR_89(CODE[32]), 
		 -> STR_9(CODE[23]), STR_90(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _wait_for_programmer->_printf
    _sprintf->_vfprintf
    _get_fileinfo->_ld_dword
    _ld_clust->_ld_word
    _create_name->_memset
    _dir_clear->_sync_window
    _mem_init->_printf
    _mount_volume->_disk_status
    _disk_initialize->_printf
    _util_hexdump->_printf
    _sync_fs->_sync_window
    _disk_ioctl->_printf
    _st_clust->_st_word
    _validate->_disk_status
    _disk_status->_printf
    _move_window->_sync_window
    _disk_write->_printf
    _SDCard_write512->_printf
    _disk_read->_printf
    _SDCard_read512->_printf
    _util_addrdump->_printf
    _clst2sect->___lmul
    ___xxtofl->___lmul
    _SD_init->_SDCard_init
    _SDCard_init->_printf
    _SPI_SD_configure->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod
    _ctoa->_fputc
    _fputc->_putch
    _SDCard_command->___SDCard_command_r1
    ___SDCard_command_r1->___SDCard_wait_response
    ___SDCard_wait_response->_SPI_SD_receive_byte
    _SPI_SD_receive_byte->_SPI_SD_receive
    _SPI_SD_begin_transaction->_SPI_SD_select
    _SPI_SD_begin_transaction->_acquire_bus
    _SDCard_end_transaction->_SPI_SD_dummy_clocks
    _SPI_SD_end_transaction->_SPI_SD_select
    _SPI_SD_end_transaction->_release_bus
    _SPI_SD_dummy_clocks->_SPI_SD_send

Critical Paths under _main in BANK5

    _wait_for_programmer->_printf
    _sprintf->_vfprintf
    _dir_read->_move_window
    _f_open->_move_window
    _dir_find->_move_window
    _dir_register->_move_window
    _dir_alloc->_move_window
    _dir_clear->_sync_window
    _f_closedir->_validate
    _mem_init->_printf
    _mount_volume->_move_window
    _check_fs->_move_window
    _disk_initialize->_SDCard_read512
    _util_hexdump->_printf
    _f_sync->_move_window
    _f_sync->_sync_fs
    _sync_fs->_sync_window
    _disk_ioctl->_printf
    _disk_status->_printf
    _put_fat->_move_window
    _get_fat->_move_window
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_SDCard_write512
    _SDCard_write512->_util_addrdump
    _disk_read->_SDCard_read512
    _SDCard_read512->_util_addrdump
    _util_addrdump->_printf
    _SD_init->_SDCard_init
    _SDCard_init->_SPI_SD_configure
    _SPI_SD_configure->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK6

    _menu_select->_f_open
    _f_readdir->_dir_read
    _dir_read->_dir_next
    _f_opendir->_mount_volume
    _f_open->_mount_volume
    _remove_chain->_put_fat
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _f_mount->_mount_volume
    _mount_volume->_disk_initialize
    _find_volume->_check_fs
    _check_fs->_move_window
    _disk_io_handle->_f_write
    _f_write->_create_chain
    _f_sync->_move_window
    _f_sync->_sync_fs
    _f_read->_get_fat
    _f_lseek->_create_chain
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window

Critical Paths under _main in BANK7

    _main->_menu_select

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0 26999440
                                             18 BANK7      4     4      0
                            _SD_init
                            ___fldiv
                             ___lmul
                           ___xxtofl
                     _disk_io_handle
        _emuz80_57q_enter_bus_master
         _emuz80_57q_exit_bus_master
               _emuz80_57q_start_cpu
                _emuz80_57q_sys_init
           _emuz80_57q_write_to_sram
                            _f_mount
                           _mem_init
                        _menu_select
                             _printf
                _wait_for_programmer
 ---------------------------------------------------------------------------------
 (1) _wait_for_programmer                                  2     2      0   50524
                                             70 BANK5      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _menu_select                                         18    16      2 19760904
                                              0 BANK7     18    16      2
                             ___wmul
                         _f_closedir
                             _f_open
                          _f_opendir
                          _f_readdir
                              _getch
                             _printf
                            _sprintf
                             _strcmp
                             _strcpy
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     1      6    1091
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4     264
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8   45590
                                             58 BANK5     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _f_readdir                                            7     3      4 4740018
                                            111 BANK6      7     3      4
                           _dir_next
                           _dir_read
                            _dir_sdi
                       _get_fileinfo
                           _validate
 ---------------------------------------------------------------------------------
 (3) _get_fileinfo                                        13     9      4    3619
                                             13 COMRAM    13     9      4
                           _ld_dword
                            _ld_word
 ---------------------------------------------------------------------------------
 (3) _dir_read                                            13     9      4 2337691
                                             98 BANK6     13     9      4
                           _dir_next
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_opendir                                            7     3      4 4979269
                                            175 BANK6      7     3      4
                            _dir_sdi
                        _follow_path
                           _ld_clust
                       _mount_volume
 ---------------------------------------------------------------------------------
 (2) _f_open                                              82    77      5 9889660
                                            175 BANK6     80    75      5
                          _clst2sect
                       _dir_register
                          _disk_read
                        _follow_path
                            _get_fat
                        _get_fattime
                           _ld_clust
                           _ld_dword
                             _memset
                       _mount_volume
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (3) _remove_chain                                        25    15     10  937641
                                             43 BANK6     25    15     10
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _follow_path                                         14    10      4 3288015
                                            106 BANK6     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (3) _ld_clust                                            12     8      4    2547
                                              7 COMRAM    12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             8     6      2 2809721
                                             98 BANK6      8     6      2
                           _dir_next
                            _dir_sdi
                             _memcmp
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _create_name                                         21    17      4    3067
                                              8 COMRAM    21    17      4
                            _dbc_1st
                            _dbc_2nd
                             _memset
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strchr                                               4     0      4     240
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _dbc_2nd                                              3     1      2     132
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _dbc_1st                                              3     1      2      88
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _dir_register                                         5     3      2 3275100
                                            110 BANK6      5     3      2
                          _dir_alloc
                             _memcpy
                             _memset
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _dir_alloc                                           12     8      4 2808639
                                             98 BANK6     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _dir_sdi                                             30    24      6  471184
                                             36 BANK6     26    20      6
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (4) _dir_next                                            30    26      4 1874666
                                             72 BANK6     26    22      4
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (5) _dir_clear                                           18    12      6  465391
                                              0 BANK6     18    12      6
                          _clst2sect
                         _disk_write
                             _memset
                        _sync_window
 ---------------------------------------------------------------------------------
 (2) _f_closedir                                           5     3      2   52129
                                             81 BANK5      5     3      2
                           _validate
 ---------------------------------------------------------------------------------
 (1) _mem_init                                            10    10      0   54275
                                             70 BANK5     10    10      0
          _emuz80_57q_read_from_sram
           _emuz80_57q_write_to_sram
                             _memcmp
                             _printf
 ---------------------------------------------------------------------------------
 (1) _f_mount                                             12     7      5 1218135
                                            175 BANK6     12     7      5
                       _get_ldnumber
                       _mount_volume
 ---------------------------------------------------------------------------------
 (3) _mount_volume                                        46    41      5 1216875
                                            129 BANK6     46    41      5
                            ___lldiv
                             ___lmul
                    _disk_initialize
                        _disk_status
                        _find_volume
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _get_ldnumber                                        15    13      2     644
                                              0 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (4) _find_volume                                         30    26      4  469045
                                             24 BANK6     30    26      4
                           _check_fs
                           _ld_dword
 ---------------------------------------------------------------------------------
 (5) _check_fs                                            14     8      6  467145
                                             10 BANK6     14     8      6
                           _ld_dword
                            _ld_word
                             _memcmp
                        _move_window
 ---------------------------------------------------------------------------------
 (6) _memcmp                                              12     6      6    1093
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (4) _disk_initialize                                    133   133      0  226345
                                            132 BANK5      4     4      0
                                              0 BANK6    129   129      0
                     _SDCard_read512
                             _printf
                       _util_hexdump
 ---------------------------------------------------------------------------------
 (5) _util_hexdump                                        29    23      6   51437
                                             70 BANK5     29    23      6
                             _printf
 ---------------------------------------------------------------------------------
 (1) _emuz80_57q_sys_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _emuz80_57q_start_cpu                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _emuz80_57q_exit_bus_master                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _emuz80_57q_enter_bus_master                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disk_io_handle                                      17    17      0 5684220
                                            115 BANK6     17    17      0
                             ___wmul
           _emuz80_57q_get_from_sram
          _emuz80_57q_read_from_sram
           _emuz80_57q_write_to_sram
                            _f_lseek
                             _f_read
                             _f_sync
                            _f_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _f_write                                             43    35      8 1455746
                                             72 BANK6     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                             _memcpy
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_sync                                              11     9      2 1267722
                                             10 BANK6     11     9      2
                         _disk_write
                        _get_fattime
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (3) _sync_fs                                             11     9      2  517228
                                            159 BANK5      1     1      0
                                              0 BANK6     10     8      2
                         _disk_ioctl
                         _disk_write
                             _memset
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    1425
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _disk_ioctl                                           5     2      3   50854
                                             70 BANK5      5     2      3
                             _printf
 ---------------------------------------------------------------------------------
 (3) _st_clust                                             9     1      8    2197
                                              4 COMRAM     9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (3) _get_fattime                                          4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _f_read                                              43    35      8  984576
                                             36 BANK6     43    35      8
                          _clst2sect
                          _disk_read
                         _disk_write
                            _get_fat
                             _memcpy
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_lseek                                             41    35      6 1921157
                                             72 BANK6     41    35      6
                            ___lldiv
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _get_fat
                           _validate
 ---------------------------------------------------------------------------------
 (3) _validate                                            11     7      4   51956
                                             70 BANK5     11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (4) _disk_status                                          1     1      0   50546
                                             94 COMRAM     1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (5) _create_chain                                        29    23      6  938305
                                             43 BANK6     29    23      6
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (6) _put_fat                                             33    23     10  468546
                                             10 BANK6     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (7) _st_word                                              4     0      4     874
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _st_dword                                             6     0      6    2024
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             26    20      6  467489
                                             10 BANK6     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _move_window                                         11     5      6  462322
                                            159 BANK5      1     1      0
                                              0 BANK6     10     4      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _sync_window                                         19    17      2  230941
                                             94 COMRAM     1     1      0
                                            141 BANK5     18    16      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (7) _disk_write                                          11     3      8  230403
                                            130 BANK5     11     3      8
                    _SDCard_write512
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (8) _SDCard_write512                                     27    17     10  125156
                                            103 BANK5     27    17     10
             _SDCard_end_transaction
                _SPI_SD_dummy_clocks
                        _SPI_SD_send
                ___SDCard_command_r1
                     ___SDCard_crc16
             ___SDCard_wait_response
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (6) _disk_read                                           11     3      8  228347
                                            132 BANK5     11     3      8
                     _SDCard_read512
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (7) _SDCard_read512                                      29    19     10  123973
                                            103 BANK5     29    19     10
             _SDCard_end_transaction
                     _SPI_SD_receive
                _SPI_SD_receive_byte
                ___SDCard_command_r1
                     ___SDCard_crc16
             ___SDCard_wait_response
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (8) _util_addrdump                                       33    23     10   52258
                                             70 BANK5     33    23     10
                             _printf
 ---------------------------------------------------------------------------------
 (9) ___SDCard_crc16                                      13     7      6    1785
                                              0 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (4) _ld_word                                              7     5      2    1597
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _ld_dword                                            13     9      4    1231
                                              0 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (4) _clst2sect                                           12     6      6    1965
                                             12 COMRAM    12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     664
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     564
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _emuz80_57q_write_to_sram                            12     6      6    1389
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _emuz80_57q_read_from_sram                           10     4      6     933
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _emuz80_57q_get_from_sram                             5     3      2     471
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             12 COMRAM    14    10      4
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SD_init                                              2     2      0  176225
                                             93 BANK5      2     2      0
                        _SDCard_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SDCard_init                                         16    10      6  125701
                                             94 COMRAM     1     1      0
                                             78 BANK5     15     9      6
                     _SDCard_command
             _SDCard_end_transaction
                       _SPI_SD_begin
           _SPI_SD_begin_transaction
                   _SPI_SD_configure
                _SPI_SD_dummy_clocks
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SPI_SD_configure                                    10     4      6   51265
                                             70 BANK5      8     2      6
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16     4     12   50524
                                             92 COMRAM     2     2      0
                                             58 BANK5     12     0     12
                             ___lmul (ARG)
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45223
                                             90 COMRAM     2     2      0
                                             52 BANK5      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           18    12      6   44617
                                             80 COMRAM    10     4      6
                                             44 BANK5      8     8      0
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                21    14      7    5546
                                             26 COMRAM    21    14      7
                                _pad
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2108
                                             10 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     5      4    1795
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   23367
                                             71 COMRAM     9     2      7
                                              0 BANK5     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     529
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    2267
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             51 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2505
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             26 COMRAM    25    17      8
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                15     9      6    6556
                                             26 COMRAM    15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4952
                                             17 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2017
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     448
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1949
                                             10 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1616
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_SD_begin                                         4     2      2     121
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SDCard_command                                      15     7      8   15317
                                             39 COMRAM    15     7      8
             _SDCard_end_transaction
                     _SPI_SD_receive
                ___SDCard_command_r1
 ---------------------------------------------------------------------------------
 (9) ___SDCard_command_r1                                 16    10      6    8798
                                             23 COMRAM    16    10      6
                         _SDCard_crc
           _SPI_SD_begin_transaction
                _SPI_SD_dummy_clocks
                        _SPI_SD_send
             ___SDCard_wait_response
 ---------------------------------------------------------------------------------
 (9) ___SDCard_wait_response                               6     4      2    2322
                                             17 COMRAM     6     4      2
                _SPI_SD_receive_byte
 ---------------------------------------------------------------------------------
 (10) _SPI_SD_receive_byte                                 3     1      2    1830
                                             14 COMRAM     3     1      2
                     _SPI_SD_receive
 ---------------------------------------------------------------------------------
 (11) _SPI_SD_receive                                     14     8      6    1347
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (10) _SPI_SD_begin_transaction                            2     0      2     763
                                              4 COMRAM     2     0      2
                      _SPI_SD_select
                        _acquire_bus
 ---------------------------------------------------------------------------------
 (10) _SDCard_crc                                         11     7      4     381
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (9) _SDCard_end_transaction                               2     2      0    3619
                                             17 COMRAM     2     2      0
                _SPI_SD_dummy_clocks
             _SPI_SD_end_transaction
 ---------------------------------------------------------------------------------
 (10) _SPI_SD_end_transaction                              2     0      2     665
                                              4 COMRAM     2     0      2
                      _SPI_SD_select
                        _release_bus
 ---------------------------------------------------------------------------------
 (11) _SPI_SD_select                                       4     0      4     326
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _SPI_SD_dummy_clocks                                 7     3      4    2909
                                             10 COMRAM     7     3      4
                        _SPI_SD_send
                        _acquire_bus
                        _release_bus
 ---------------------------------------------------------------------------------
 (11) _release_bus                                         4     2      2     219
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _acquire_bus                                         4     2      2     241
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _SPI_SD_send                                        11     5      6    1552
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SD_init
     _SDCard_init
       _SDCard_command
         _SDCard_end_transaction
           _SPI_SD_dummy_clocks
             _SPI_SD_send
             _acquire_bus
             _release_bus
           _SPI_SD_end_transaction
             _SPI_SD_select
             _release_bus
         _SPI_SD_receive
         ___SDCard_command_r1
           _SDCard_crc
           _SPI_SD_begin_transaction
             _SPI_SD_select
             _acquire_bus
           _SPI_SD_dummy_clocks
           _SPI_SD_send
           ___SDCard_wait_response
             _SPI_SD_receive_byte
               _SPI_SD_receive
       _SDCard_end_transaction
       _SPI_SD_begin
       _SPI_SD_begin_transaction
       _SPI_SD_configure
         _printf
           ___lmul (ARG)
           ___xxtofl (ARG)
             ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _ctoa
                 _fputc
                   _putch
               _dtoa
                 ___aldiv
                 ___almod
                 _abs
                   ___almod (ARG)
                 _pad
                   _fputc
                   _fputs
                     _fputc
               _efgtoa
                 ___fladd
                 ___fldiv
                   ___lmul (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _labs
                 _memcpy
                 _pad
                 _strcpy
               _fputc
               _read_prec_or_width
                 ___wmul
               _stoa
                 _fputc
               _xtoa
                 _pad
       _SPI_SD_dummy_clocks
       _printf
     _printf
   ___fldiv
   ___lmul
   ___xxtofl
   _disk_io_handle
     ___wmul
     _emuz80_57q_get_from_sram
     _emuz80_57q_read_from_sram
     _emuz80_57q_write_to_sram
     _f_lseek
       ___lldiv
       _clst2sect
         ___lmul
       _create_chain
         _get_fat
           _ld_dword
           _ld_word
           _move_window
             _disk_read
               _SDCard_read512
                 _SDCard_end_transaction
                 _SPI_SD_receive
                 _SPI_SD_receive_byte
                 ___SDCard_command_r1
                 ___SDCard_crc16
                 ___SDCard_wait_response
                 _printf
                 _util_addrdump
                   _printf
               _printf
               _util_addrdump
             _sync_window
               _disk_write
                 _SDCard_write512
                   _SDCard_end_transaction
                   _SPI_SD_dummy_clocks
                   _SPI_SD_send
                   ___SDCard_command_r1
                   ___SDCard_crc16
                   ___SDCard_wait_response
                   _printf
                   _util_addrdump
                 _printf
                 _util_addrdump
         _put_fat
           _ld_dword
           _move_window
           _st_dword
           _st_word
       _disk_read
       _disk_write
       _get_fat
       _validate
         _disk_status
           _printf
     _f_read
       _clst2sect
       _disk_read
       _disk_write
       _get_fat
       _memcpy
       _validate
     _f_sync
       _disk_write
       _get_fattime
       _move_window
       _st_clust
         _st_word
       _st_dword
       _st_word
       _sync_fs
         _disk_ioctl
           _printf
         _disk_write
         _memset
         _st_dword
         _st_word
         _sync_window
       _validate
     _f_write
       _clst2sect
       _create_chain
       _disk_read
       _disk_write
       _memcpy
       _validate
     _printf
   _emuz80_57q_enter_bus_master
   _emuz80_57q_exit_bus_master
   _emuz80_57q_start_cpu
   _emuz80_57q_sys_init
   _emuz80_57q_write_to_sram
   _f_mount
     _get_ldnumber
     _mount_volume
       ___lldiv
       ___lmul
       _disk_initialize
         _SDCard_read512
         _printf
         _util_hexdump
           _printf
       _disk_status
       _find_volume
         _check_fs
           _ld_dword
           _ld_word
           _memcmp
           _move_window
         _ld_dword
       _get_ldnumber
       _ld_dword
       _ld_word
       _move_window
   _mem_init
     _emuz80_57q_read_from_sram
     _emuz80_57q_write_to_sram
     _memcmp
     _printf
   _menu_select
     ___wmul
     _f_closedir
       _validate
     _f_open
       _clst2sect
       _dir_register
         _dir_alloc
           _dir_next
             _clst2sect
             _create_chain
             _dir_clear
               _clst2sect
               _disk_write
               _memset
               _sync_window
             _get_fat
           _dir_sdi
             _clst2sect
             _get_fat
           _move_window
         _memcpy
         _memset
         _move_window
       _disk_read
       _follow_path
         _create_name
           _dbc_1st
           _dbc_2nd
           _memset
           _strchr
         _dir_find
           _dir_next
           _dir_sdi
           _memcmp
           _move_window
         _dir_sdi
         _ld_clust
           _ld_word
       _get_fat
       _get_fattime
       _ld_clust
       _ld_dword
       _memset
       _mount_volume
       _move_window
       _remove_chain
         _get_fat
         _put_fat
       _st_clust
       _st_dword
     _f_opendir
       _dir_sdi
       _follow_path
       _ld_clust
       _mount_volume
     _f_readdir
       _dir_next
       _dir_read
         _dir_next
         _move_window
       _dir_sdi
       _get_fileinfo
         _ld_dword
         _ld_word
       _validate
     _getch
     _printf
     _sprintf
       _vfprintf
     _strcmp
     _strcpy
     _strncmp
   _printf
   _wait_for_programmer
     _printf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0    10FC      69       53.1%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllhlh    12A      0       0      91        0.0%
BITBIGSFRlllhll    124      0       0     101        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0      C0      11       75.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100     16      DB       9       85.5%
BITBANK6           100      0       0       6        0.0%
BANK6              100     FF     100       7      100.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0     A0      A0       5      100.0%
BITBIGSFRlllll      80      0       0     106        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRlllhlh     50      0       0      95        0.0%
BITBIGSFRlllhlh     4E      0       0      98        0.0%
BITBIGSFRlllhhh     3E      0       0      80        0.0%
BITBIGSFRllllhh     24      0       0     103        0.0%
BITBIGSFRlllhll     22      0       0     102        0.0%
BITBIGSFRhhhh       1F      0       0      70        0.0%
BITBIGSFRlllhhh     19      0       0      83        0.0%
BITBIGSFRlllhhh     12      0       0      82        0.0%
BITBIGSFRlllhhh      F      0       0      79        0.0%
BITBIGSFRlllhlh      A      0       0      96        0.0%
BITBIGSFRhhhl        9      0       0      71        0.0%
BITBIGSFRlllhlh      9      0       0      99        0.0%
BITBIGSFRlllhlh      7      0       0      93        0.0%
BITBIGSFRlllhhh      6      0       0      76        0.0%
BITBIGSFRlllhhh      6      0       0      86        0.0%
BITBIGSFRlllhhh      6      0       0      89        0.0%
BITBIGSFRlllhhl      6      0       0      90        0.0%
BITBIGSFRlllhhh      5      0       0      77        0.0%
BITBIGSFRlllhhh      5      0       0      84        0.0%
BITBIGSFRlllhhh      4      0       0      87        0.0%
BITBIGSFRlllhhh      3      0       0      81        0.0%
BITBIGSFRlllhhh      2      0       0      78        0.0%
BITBIGSFRllhhh       2      0       0      75        0.0%
BITBIGSFRhhl         2      0       0      72        0.0%
BITBIGSFRlhhhl       2      0       0      74        0.0%
BITBIGSFRhl          2      0       0      73        0.0%
BITBIGSFRlllhlh      1      0       0      94        0.0%
BITBIGSFRllllhh      1      0       0     104        0.0%
BITBIGSFRllllhl      1      0       0     105        0.0%
BITBIGSFRlllhlh      1      0       0      97        0.0%
BITBIGSFRlllhlh      1      0       0      92        0.0%
BITBIGSFRlllhlh      1      0       0     100        0.0%
BITBIGSFRlllhhh      1      0       0      85        0.0%
BITBIGSFRlllhhh      1      0       0      88        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39A     107        0.0%
DATA                 0      0    1496       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jul 27 17:04:53 2024

                        get_fat@clst 060C                         ___fldiv@aexp 0533  
                       ___fldiv@bexp 0532                       ?_SPI_SD_select 0501  
                       ___fldiv@sign 052B                         create_name@c 051D  
                       create_name@d 0512                         create_name@i 051B  
                       create_name@p 0515                     get_ldnumber@path 0501  
                    ?_SPI_SD_receive 0501                                   l29 7A2C  
                                 l97 9974                                   _fs 158C  
                  ?_SPI_SD_configure 05A6                  ___wmul@multiplicand 0503  
                  SDCard_command@spi 0530                     _menu_select$3959 07C4  
                     ??_dir_register 0560                     disk_write@sector 05E4  
                      create_name@dp 0509                        create_name@ni 0513  
                      create_name@si 0517                       create_chain@cs 0644  
                     create_chain@fs 0642                    SDCard_read512@crc 05E1  
                  SDCard_read512@buf 05CD                                  l112 7F04  
       ?_emuz80_57q_enter_bus_master 0501                                  l122 7CD2  
                                l202 714C                                  l231 412A  
                                l320 356C                                  l216 6604  
                                l321 359E                                  l226 4120  
                                l323 3596                                  l229 441C  
                                l600 83FE                                  l352 4C52  
                                l249 35E6                                  l362 3DCE  
                                l531 6E96                                  l632 254E  
                                l624 219A                    SDCard_read512@spi 05DF  
                                l617 1FE8                                  l378 4024  
                                l626 2190                                  l618 1FE0  
                                l731 1BB4                                  l396 81CE  
                                l725 1934                                  l655 2A7C  
                                l567 0C10                                  l487 6C4C  
                                l594 8772                                  l578 0FCA  
                                l771 8C82                                  l684 1752  
                                l589 8752                                  l685 145A  
                                l757 7C58                                  l774 8C42  
                                l759 7C08                   ??_SPI_SD_configure 05AC  
                                _GIE 26B7                                  _RA0 2670  
                                _BSR 04E0                                  _RC6 2686  
       emuz80_57q_read_from_sram@buf 0503         emuz80_57q_read_from_sram@len 0505  
                                _abs 9E7E                                  _pad 93A8  
                                _rom F4E4                                  prod 04F3  
                     ??_create_chain 0631                                  wreg 04E8  
                        disk_write@i 05EB                         ___flmul@aexp 050E  
                       ___flmul@bexp 0513                         ___flmul@sign 050D  
                       ___flmul@temp 0518                         ___flmul@prod 0514  
                     create_name@sfn 0519                      create_chain@ncl 063E  
                    create_chain@obj 062B              SPI_SD_receive_byte@ctx_ 050F  
                    create_chain@scl 063A                      create_chain@res 0639  
                        ld_clust@dir 050A                                 U3TXB 02C9  
                 SDCard_read512@addr 05C7                         ___fltol@exp1 050A  
                               l1210 81F4                                 ?_abs 050B  
                               l1302 593E                                 l1214 8224  
                               l1311 5986                                 l1320 59CE  
                               l1305 5956                                 PORTA 04CE  
                               l1314 599E                                 l1252 9780  
                               l1308 596E                                 l1180 98D8  
                               l1317 59B6                                 l1181 98FE  
                               l1173 952A                                 l1174 9570  
                               PORTF 04D3                                 l1263 5854  
                               l2303 54A6                                 l2304 54A2  
                               l1282 588A                                 l2322 44AE  
                               l1186 8ECE                                 l1291 58D2  
                               l1267 5816                                 l2331 46A0  
                               l1523 5B58                                 l1276 585A  
                               l1268 581A                                 l2332 469C  
                               l1524 5B5E                                 l1285 58A2  
                               l2253 496E                                 l2237 489C  
                               l1381 61D8                                 l1509 5AE4  
                               l1294 58EA                                 l2262 49D4  
                               l2238 487A                                 l1526 5B64  
                               l1518 5B1C                                 l1279 5872  
                               l2263 49D0                                 l1527 5B7C  
                               l1288 58BA                                 l2440 93CE  
                               l1528 5BA6                                 l1298 5922  
                               l2370 7602                                 l1299 5926  
                               l2339 4726                                 l2363 7584  
                               l2292 5438                                 l1486 9836  
                               l2526 06BC                                 l1670 95AA  
                               l1735 9396                                 l1488 983E  
                               l2456 9148                                 l2609 2CDA  
                               l2466 7176                                 l2468 717E  
                               l2548 7480                                 l2469 71AC  
                               l2565 7DAC                   SDCard_read512@offs 05CB  
                               l2670 9E8C                                 l2567 7DB4  
                               l2682 6A8A                                 l2498 017C  
                               l1973 835A                                 ?_pad 0512  
                               l8011 49B2                                 l8005 49A8  
                               l8031 4A1A                                 l8105 8586  
                               l8121 85D4                                 l8201 5336  
                               l8107 8592                                 l8043 4A48  
                               l9011 8AD2                                 l8125 85EA  
                               l8117 85C6                                 l8141 8D62  
                               l8061 9CC2                                 l8045 4A4A  
                               l8223 5398                                 l8215 5380  
                               l8039 4A40                                 l9015 8B00  
                               l9033 5832                                 l8161 8DCC  
                               l8153 8DA8                                 l8145 8D74  
                               l8137 8D4E                                 l8057 9CAC  
                               l8241 5410                                 l8233 53E8  
                               l8209 536A                                 l8065 9B74  
                               l8073 9B94                                 l9131 59E4  
                               l8147 8D80                                 l8411 46E4  
                               l8315 445A                                 l9211 2DE4  
                               l9203 2D9C                                 l8093 854C  
                               l8157 8DB6                                 l8253 544E  
                               l8181 52F6                                 l8333 449A  
                               l8317 445E                                 l8077 9D1A  
                               l9221 2E7A                                 l9205 2DAA  
                               l8247 5436                                 l8415 4702  
                               l8343 44CC                                 l8335 449E  
                               l8319 446E                                 l8511 897A  
                               l9231 2ED6                                 l9223 2E88  
                               l9215 2E12                                 l9151 2BA6  
                               l8177 52F2                                 l9241 2F28  
                               l9225 2EA6                                 l9217 2E48  
                               l9233 2EF2                                 l9315 9A80  
                               l8611 9118                                 l8099 8564  
                               l8283 550E                                 l8259 546C  
                               l8451 921E                                 l8443 91CC  
                               l8427 4744                                 l8507 896A  
                               l8603 6B10                                 l9251 2FB0  
                               l9171 2C4C                                 l9155 2BAC  
                               l9147 2B92                                 l8613 9124  
                               l8541 93F0                                 l8533 93C2  
                               l8293 5544                                 l8197 5332  
                               l7901 47F2                                 l8525 89AA  
                               l8517 8982                                 l9261 3010  
                               l9165 2C04                                 l9157 2BCC  
                               l9343 978C                                 l8623 9152  
                               l8295 5546                                 l8287 5538  
                               l8279 54EA                                 l8447 9200  
                               l8463 832E                                 l8391 4666  
                               l8519 898E                                 l8703 0066  
                               l9263 3016                                 l9271 3036  
                               l9183 2CD4                                 l9191 2CE4  
                               l9511 8BC4                                 l9337 9770  
                               l9409 981E                                 l8617 913C  
                               l8537 93D8                                 l8473 8392  
                               l8385 4648                                 l8481 9DC4  
                               l8561 84E6                                 l9281 308E  
                               l9273 304E                                 l9265 301A  
                               l9257 2FEC                                 l9193 2D08  
                               l7835 9FEE                                 l8627 916A  
                               l8635 7166                                 l8467 8344  
                               l8459 82FA                                 l7931 482E  
                               l8491 8920                                 l8707 0072  
                               l9283 30AC                                 l9291 30F2  
                               l9187 2CDE                                 l9179 2CB0  
                               l9355 9A9A                                 l9435 7C9A  
                               l7845 8F44                                 l8653 71BA  
                               l8557 84DC                                 l8813 04F2  
                               l8805 047C                                 l8717 00A8  
                               l8725 00E8                                 l9269 3020  
                               l9197 2D36                                 l9357 9AB6  
                               l9453 7D80                                 l9445 7D42  
                               l9533 559C                                 l9701 922E  
                               l9383 9928                                 l8663 7242  
                               l8647 71A0                                 l7943 4888  
                               l8567 8526                                 l8575 9A12  
                               l8911 08B6                                 l8903 086E  
                               l8831 05F8                                 l8751 0192  
                               l8735 011E                                 l8743 0138  
                               l8719 00C0                                 l9279 3080  
                               l9199 2D6A                                 l9295 3102  
                               l9447 7D5E                                 l9455 7D84  
                               l9607 57B6                                 l9543 5602  
                               l9393 9D80                                 l7945 488C  
                               l7865 4786                                 l8585 69F2  
                               l8841 0628                                 l8761 0264  
                               l8921 741C                                 l9289 30DC  
                               l9641 5EBC                                 l9529 5572  
                               l9713 9280                                 l9387 9948  
                               l8595 6AAC                                 l8819 0530  
                               l8923 7426                                 l9635 5EA2  
                               l9619 5E44                                 l9555 5670  
                               l9539 55D8                                 l9493 8E7E  
                               l7893 47D2                                 l7869 478A  
                               l8845 06B2                                 l8693 0042  
                               l8941 74C6                                 l8925 742A  
                               l9629 5E82                                 l9741 9302  
                               l9581 5752                                 l8679 729A  
                               l7967 48E2                                 l7959 48C0  
                               l8599 6AE2                                 l8791 035C  
                               l8775 0310                                 l8935 7498  
                               l9831 9876                                 l9647 5EF6  
                               l9719 9294                                 l9823 88DE  
                               l7969 48E6                                 l7977 48F8  
                               l7889 47CE                                 l8857 06E6  
                               l8865 0706                                 l8881 07C2  
                               l8777 031A                                 l8769 02D0  
                               l8953 7530                                 l8945 7500  
                               l9665 5F94                                 l9657 5F4E  
                               l9649 5EFC                                 l9729 92B0  
                               l9593 5782                                 l9825 88FC  
                               l9905 43FE                                 l9841 9DE0  
                               l7995 4992                                 l7987 495E  
                               l8787 034C                                 l8939 74B0  
                               l9835 988A                                 l9499 8B42  
                               l9659 5F5A                                 l9667 5F9A  
                               l9691 6032                                 l9747 9316  
                               l9931 3692                                 l8797 0386  
                               l8949 7518                                 l8981 7DFC  
                               l8973 7DE6                                 l9597 5796  
                               l9845 9DF0                                 l8991 7E50  
                               l8967 7DCC                                 l8959 7D9C  
                               l9855 87DC                                 l9687 6022  
                               l9767 7148                                 STR_1 FE42  
                               STR_2 FE8B                                 l9689 6028  
                               l9953 37A8                                 STR_3 FB37  
                               STR_4 FDC4                                 l8899 0852  
                               l9891 42A2                                 l9963 3842  
                               STR_6 FEF5                                 l9973 397E  
                               l9949 3772                                 STR_7 FECD  
                               STR_8 FCA0                                 l9887 427A  
                               l9897 433E                                 l9889 4298  
                               l9977 3990                                 l9979 39AC  
                               l9995 31A2                                 _LATB 04BF  
                               _LATD 04C1                                 _LATF 04C3  
                               _U3ON 1697                                 u9000 549C  
                               u9040 54F8                                 u8400 4860  
                               u9050 551C                                 u8410 4862  
                               u9220 46F2                                 u9140 44BA  
                               u8270 8F3C                                 u9230 4710  
                               u8440 48A4                                 u8290 8F84  
                               u9180 4696                                 u9340 890E  
                               u9270 921A                                 u8390 4850  
                               u9350 893E                                 u9510 851E  
                               u9520 8520                                 u9505 8500  
                               u8810 8D84                                 u8650 4A26  
                               u8570 49B6                                 u9610 6ACA  
                               u9355 8934                                 u9700 715A  
                               u9460 84A2                                 u9540 69C0  
                               u8750 8596                                 u8590 49CA  
                               u9390 8994                                 u9550 69E0  
                               u9615 6AC0                                 u9465 8498  
                               u9545 69B6                                 u9750 7250  
                               u9590 6A70                                 u9910 0252  
                               u9575 6A0A                                 u9576 6A10  
                     ??_get_fileinfo 0512                                 u9577 6A1E  
                               u9770 726A                                 u9690 7158  
                               u9930 02F8                                 u9595 6A66  
                               u9780 7278                                 u9790 727E  
                               u9890 01F8                                 _WPUB 0409  
                               _WPUD 0419                                 _WPUF 0429  
                               _Fsid 0721                                 abs@a 050B  
                               _dbuf 072C                                 _bios EFB0  
                               _labs 99FC                                 _ctoa 9104  
                               _main 59F2                                 _dtoa 7150  
                               _ctx_ 0706                         find_volume@i 0634  
                               _prec 0715                                 pad@i 0519  
                               pad@p 0516                                 fsr0h 04EA  
                               fsr1h 04E2                                 indf0 04EF  
                               fsr2h 04DA                                 fsr0l 04E9  
                               indf1 04E7                                 indf2 04DF  
                               fsr1l 04E1                                 fsr2l 04D9  
                               _stoa 7404                          ld_dword@ptr 0501  
                               _xtoa 7D92                        disk_ioctl@cmd 05A6  
                      disk_read@buff 05E4                        disk_ioctl@res 05AA  
                      ___fpclassifyf 8464                        disk_read@pdrv 05EC  
                     menu_select@buf 07C6                      __end_of_SD_init 95F2  
                               prodh 04F4                                 prodl 04F3  
                     ??_get_ldnumber 0503                                 start FFFC  
        SPI_SD_configure@clock_speed 05A8                      ___fldiv@new_exp 052C  
             ___SDCard_command_r1@r1 051C                   disk_initialize@buf 0600  
                       ?_follow_path 066A                         ___param_bank 0000  
                    create_name@path 050B                     create_chain@clst 062D  
                              ??_abs 050D             SPI_SD_receive_byte@dummy 0511  
                      get_fileinfo@c 051A                                ??_pad 0518  
                       SPI_SD_send@i 0507                         SPI_SD_send@p 0509  
                        _sync_window 6FDE                                l10003 31F2  
                              l10011 3246                                l10007 3216  
                              l10103 77D0                                l10033 332E  
                              l10017 3270                                l10043 3396  
                              l10027 32E2                                l10115 7858  
                              l10203 90CE                                l10211 90FA  
                              l10061 340E                                l10045 33A6  
                              l10117 7862                                l11013 86C0  
                              l10071 3466                                l10127 8C98  
                              l10231 4A92                                l11023 6640  
                              l10049 33C2                                l12001 1BDE  
                              l10145 7EDC                                l10137 8CF4  
                              l10129 8CA6                                l10401 5C72  
                              l11121 090A                                l10305 3DEA  
                              l10241 4B00                                l11041 66A6  
                              l10163 7FB2                                l10155 7F74  
                              l10251 4B8C                                l10227 4A8E  
                              l11107 6CC4                                l11035 667C  
                              l11043 66C6                                l10093 357E  
                              l10085 34F0                                l10077 3482  
                              l12021 1C64                                l10157 7F90  
                              l10165 7FB6                                l10333 3F5E  
                              l10317 3E94                                l10261 4C12  
                              l10253 4BCE                                l12031 1CA4  
                              l12023 1C90                                l11151 097A  
                              l10351 3FE4                                l10343 3F9C  
                              l10327 3F48                                l10175 969A  
                              l10183 96C6                                l11071 6BFA  
                              l12103 7B56                                l11209 0AC6  
                              l11161 09A2                                l11129 0930  
                              l10273 4CA0                                l11057 6B34  
                              l11411 8240                                l11403 820A  
                              l10531 9EFE                                l12043 1CF0  
                              l10443 5DF6                                l10419 5CF8  
                              l11147 0976                                l10363 4002  
                              l10195 90A2                                l11059 6B3A  
                              l12131 7C6A                                l11421 8268  
                              l11413 8248                                l11405 8226  
                              l12061 1DB0                                l10509 7AA4  
                              l10453 5E2A                                l11309 0F9C  
                              l10373 407C                                l10613 76C0  
                              l12125 7C4C                                l11415 8250  
                              l11407 822C                                l12207 9902  
                              l10551 998E                                l11335 118A  
                              l11271 0D44                                l11263 0D10  
                              l11183 09E6                                l10703 51E6  
                              l12119 7C04                                l12151 8C20  
                              l11441 9638                                l11417 8258  
                              l11409 8238                                l11425 8286  
                              l10545 996E                                l10449 5E10  
                              l11177 09D6                                l11169 09AC  
                              l10633 7798                                l10625 771E  
                              l11601 2562                                l11419 8260  
                              l10539 9F12                                l12091 1F28  
                              l12083 1EE0                                l12067 1E14  
                              l10555 99AC                                l11267 0D2A  
                              l12403 8444                                l10387 9B3E  
                              l10731 5266                                l10715 5210  
                              l10651 5062                                l11451 1F54  
                              l12253 6124                                l12237 60E2  
                              l11701 297A                                l10813 6EA8  
                              l11197 0A68                                l10581 819C  
                              l10717 5220                                l11517 2182  
                              l11359 8762                                l11631 2640  
                              l10831 6FB6                                l10823 6F30  
                              l10807 6EA0                                l10583 81A4  
                              l10567 8110                                l10663 50B0  
                              l10719 5226                                l10911 684C  
                              l11535 21E0                                l11471 1FA4  
                              l12351 97A4                                l12335 8FE6  
                              l11625 25C8                                l10825 6F3C  
                              l10753 72E6                                l11297 0EA6  
                              l10737 52AA                                l10681 5148  
                              l10665 50B4                                l11481 1FD0  
                              l12353 97AC                                l12337 8FF4  
                              l12259 612C                                l10843 9348  
                              l11715 2A16                                l11723 2A5E  
                              l11731 2B0C                                l11619 25B4  
                              l11811 140A                                l11803 13E4  
                              l10683 5158                                l10659 509E  
                              l10931 68A8                                l11571 23DA  
                              l12611 3A9A                                l12189 9574  
                              l10845 9354                                l11645 2710  
                              l11741 2B4A                                l10829 6F72  
                              l12541 6D0E                                l10669 511E  
                              l11565 2398                                l11399 81F8  
                              l10855 9388                                l11663 2794  
                              l11655 276E                                l11647 2748  
                              l10783 73F0                                l12383 83BC  
                              l10599 94FA                                l10943 6946  
                              l11575 23F0                                l11479 1FCC  
                              l11729 2AC0                                l11665 27B0  
                              l11921 62E2                                l11825 14D0  
                              l10777 73CA                                l12529 6CD0  
                              l11593 249E                                l11577 2400  
                              l12609 3A94                                l12811 7674  
                              l11771 1288                                l12715 4DEE  
                              l10787 73FA                                l10971 7962  
                              l12651 3BBE                                l12643 3B66  
                              l12619 3ADE                                l12573 958C  
                              l11685 2870                                l10877 65D8  
                              l11941 641C                                l11845 1590  
                              l11861 169A                                l12741 4F46  
                              l12717 4DF6                                l12397 843A  
                              l12661 3C12                                l12653 3BC2  
                              l12629 3B1A                                l11951 18DE  
                              l11919 62D0                                l11791 13B8  
                              l11767 1218                                l11759 1204  
                              l12743 4F52                                l12727 4EB2  
                              l12567 6DEC                                l10895 6808  
                              l10983 79CA                                l10959 7904  
                              l12577 95AC                                l11873 1734  
                              l12737 4F12                                l12665 3C2C  
                              l12681 3D1E                                l12593 39E4  
                              l11699 295A                                l11883 17F4  
                              l11859 167C                                l12763 500A  
                              l10995 7A1A                                l12659 3BFE  
                              l12851 5B22                                l12781 75B2  
                              l11973 1AFE                                l11957 18E8  
                              l11789 1380                                l12757 4FDE  
                              l10989 79E8                                l12693 3D5E  
                              l12685 3D3A                                l12861 5B74  
                              l12845 5B12                                l12837 5AE6  
                              l12829 5AA4                                l12783 75B8  
                              l12775 7594                                l11895 1860  
                              l11879 1796                                l12679 3D18  
                              l12599 3A0A                                l12855 5B46  
                              l12793 7628                                l12785 75C4  
                              l12795 7634                                l12787 75EA  
                              l11995 1B98                                l11987 1B72  
                              l11899 189A                                l12883 5BD0  
                              l11997 1BD0                  SDCard_read512@count 05CF  
                      ___fltol@sign1 0509                      __end_of___aldiv 85FC  
                              ?_labs 0501                      __end_of___almod 8DDE  
                              ?_ctoa 050B                      __end_of___fladd 4A66  
                              ?_main 0501                                ?_dtoa 051B  
                              _G3POL 06BA                      __end_of___fldiv 554E  
                    __end_of___flneg 9DD6                                STR_10 FF3E  
                              STR_11 FA39                                STR_20 FFE1  
                              STR_12 FD57                                STR_21 FFA0  
                              STR_13 FFE7                                STR_30 FFB8  
                              STR_22 FFC1                                STR_14 FA65  
                              STR_23 FFE1                                STR_15 FD1E  
                              STR_31 FB84                                STR_24 FFA0  
                              STR_32 FF50                                STR_40 FDA9  
                              STR_25 FE73                                STR_41 FC16  
                              STR_17 FA0D                                STR_33 F9B3  
                              STR_34 FF50                                STR_42 F985  
                              STR_18 F924                                STR_50 F88E  
                              STR_51 FFED                                STR_19 FFD2  
                              STR_27 FF80                                STR_35 FD3B  
                              STR_43 FBF2                                STR_28 FF80  
                              STR_36 FE29                                STR_60 FB0F  
                              STR_44 FA91                                STR_52 F823  
                              STR_61 FBCB                                STR_29 FFB8  
                              STR_37 FEE2                                STR_45 FB5E  
                              STR_53 F8C0                                STR_70 FFAF  
                              STR_62 FFF2                                STR_46 FAE6  
                              STR_38 F9E0                                STR_71 FFA6  
                              STR_47 FF2C                                STR_39 FE10  
                              STR_63 FD8E                                STR_55 F8F2  
                              STR_72 FEC8                                STR_80 FE5B  
                              STR_48 FC7E                                STR_56 FC39  
                              STR_64 FBAA                                STR_65 FFF5  
                              STR_73 FFAF                                STR_81 FC5C  
                              STR_49 FBCE                                STR_57 FABC  
                              STR_82 FBCB                                STR_74 FFCA  
                              STR_90 FEB8                                STR_66 FD73  
                              STR_58 F956                                STR_91 FFF7  
                              STR_67 FFAF                                STR_75 FF08  
                              STR_83 FDF7                                STR_59 FD00  
                              STR_76 FFAF                                STR_68 FFCA  
                              STR_84 FDDE                                STR_69 FF9D  
                              STR_85 FF8F                                STR_77 FF71  
                              STR_94 FFFB                                STR_86 FF1A  
                              STR_78 F85A                                STR_79 FF61  
                              STR_87 FEA2                                STR_88 FCE1  
                    __end_of___flmul 475A                                STR_97 FFDA  
                              STR_89 FCC1                      __end_of_dbc_2nd 9104  
                SDCard_read512@retry 05D9                      __end_of___flsub 9B1E  
                    __end_of___fltol 89BC                      __end_of_dbc_1st 96D0  
                              ?_stoa 050B                      __end_of___lldiv 93A8  
                              u10100 0844                                u10110 0846  
                              u10040 0694                          ?_SDCard_crc 0501  
                              u10140 0898                                u11005 8BB2  
                              u10230 74E8                                u10310 7E3C  
                              u11030 5632                                u10320 7E60  
                              u11120 5E7A                                u10410 5808  
                              u10090 07E6                                u10170 7458  
                              u11210 6006                                u11050 5668  
                              u10315 7E32                                u10340 7E7A  
                              u11220 601A                                u11060 574A  
                              u10237 74DE                                u10430 583E  
                              u10350 7E88                                u11310 8874  
                              u12030 9690                                u10600 59EC  
                              u10440 5842                                u10360 7E8E  
                              u10177 744E                                u11090 577A  
                              u12210 4C22                                u12130 4A8E  
                              u13010 5194                                u10380 8B22  
                              u12300 3E7A                                u13100 529A  
                              u11405 4174                                u12070 9098  
                              ?_xtoa 051B                                u12320 3ED2  
                              u11425 4204                                u12305 3E70  
                              u13017 518A                                u13130 7308  
                              u12250 4CF2                                u12170 4B4A  
                              u11515 3630                                u13107 5290  
                              u10900 9856                                u11380 40F0  
                              u13220 73BC                                u12340 3F44  
                              u12260 3DBA                                u12325 3EC8  
                              u10830 9798                                u11470 4380  
                              u11390 4110                                u11630 3190  
                              u13310 6FCA                                u13230 73D8  
                              u13150 731C                                u12350 3F5A  
                              u12270 3DE6                                u11455 4286  
                              u14015 0C4A                                u12255 4CE8  
                              u12175 4B40                                u15000 13D0  
                              u13320 6FDC                                u13400 67E4  
                              u11545 36FE                                u13137 72FE  
                              u11570 3790                                u11490 35C4  
                              u11730 3366                                u11650 3204  
                              u15010 13F6                                u12610 5E20  
                              u13170 734E                                u12370 3F86  
                              u13410 6804                                u11475 4376  
                              u13227 73B2                                u14115 0E86  
                              u12195 4BAE                                u13340 9358  
                              u12620 7A28                                u13260 6E96  
                              u14140 0FF0                                u11900 78EA  
                              u11901 78E6                                u10790 9FD0  
                              u11590 3884                                u11670 325E  
                              u12470 5CB6                                u13270 6F1E  
                              u13190 7378                                u13430 6848  
                              u11575 3786                                _LATA5 25F5  
                              u10880 9DA4                                u16000 959C  
                              u12720 9EFA                                u13600 7A00  
                              _LATA6 25F6                                u11681 3298  
                              u13177 7344                                u14145 0FE6  
                              u15130 16C0                                u11930 8CDC  
                              u12490 5CEC                                _LATE0 2610  
                              _LATC4 2604                                u11595 387A  
                              u15115 1648                                _LATC5 2605  
                              _LATE1 2611                                u11940 8CE2  
                              u12820 76BA                                _LATE2 2612  
                              u15125 1686                                u13197 736E  
                              _LATC7 2607                                u15150 1730  
                              u12590 5DF6                                u13710 6B84  
                              _ODCE1 2111                                u15400 1D04  
                              u15320 1B5E                                u15240 18E4  
                              u11960 8D22                                u12920 50E2  
                              u13560 79B6                                u16040 3A52  
                              u10985 8B6E                                u15065 1532  
                              u11937 8CD2                                u15330 1B84  
                              u11890 78CA                                u12770 8188  
                              u13730 6BC2                                u13490 6976  
                              u14610 24BC                                u13570 79B8  
                              u16130 3B2A                                u10995 8B92  
                              _U3BRG 02D4                                u14700 26A2  
                              u16300 4EF4                                u12940 5116  
                              u16220 3D3A                                u16140 3B2E  
                              u13717 6B7A                                u15430 1D9C  
                              u13910 09E2                                u12790 81C2  
                              u16070 3ABE                                u11967 8D18  
                              u12927 50D8                                u14615 24B2  
                              u14535 2340                                u12880 5090  
                              u13680 66D2                                u16160 3BAE  
                              u16080 3AD0                                u14705 2698  
                              u13737 6BB8                                u16410 763E  
                              u14730 275A                                u14650 25B0  
                              u16330 4FC0                                u16250 4DDA  
                              u12970 5132                                u13690 6B5C  
                              u14570 241A                                u15435 1D92  
                              u12947 510C                                u15460 1E6A  
                              u15380 1CB4                                u14740 2780  
                              u14900 1200                                u13860 0972  
                              u13780 6C46                                u15285 19AA  
                              u12990 5144                                u16190 3BE6  
                              u12887 5086                                u15720 611A  
                              u15640 955A                                u14840 29A0  
                              u14825 292C                                u16265 4E70  
                              u13697 6B52                                u15490 1F24  
                              u14835 2964                                u16507 80C4  
                              u15740 6194                                u16517 95DE  
                              u14765 2812                                u14870 2A5A  
                              u14950 12EA                                u16470 5AEC  
                              u15647 9550                                u15760 61CC  
                              u15690 60D8                                u15850 9042  
                              u14955 12E0                                u15870 97DC  
                              u16497 9BCC                                u15980 6E0A  
                              u15990 6E42                                u15995 6E38  
                              _U3RXB 02C7                                _U3TXB 02C9  
                       vfpfcnvrt@fmt 0553                                _PORTB 04CF  
                              _PORTF 04D3                                _TRISB 04C7  
                              _TRISD 04C9                                _TRISF 04CB  
                              _WPUA0 2008                                _WPUA1 2009  
                              _WPUA3 200B                                _WPUA5 200D  
                              _WPUC3 208B                                _WPUA7 200F  
                              _WPUC5 208D                                _WPUC6 208E  
                              _FatFs 0723        ??_emuz80_57q_enter_bus_master 0501  
         ?_emuz80_57q_read_from_sram 0501                      __end_of_bdosccp EFB0  
                    __end_of_f_lseek 1F48                  ___lmul@multiplicand 0505  
                    __end_of_f_mount 8464                      __end_of_dir_sdi 4D4A  
                    __end_of_f_write 18AE                      __end_of_get_fat 442E  
                SPI_SD_select@select 0503            SPI_SD_configure@data_mode 05AB  
                disk_io_handle@filep 067F                      __end_of_ld_word 9CA2  
                              _debug 0700                                _flags 06FF  
            ?_SDCard_end_transaction 0501                                _files 08C0  
                              _getch 9FD4                                _fsdir 077C  
                read_prec_or_width@c 050D                  read_prec_or_width@n 050E  
                              _fputc 8F2C                        find_volume@fs 0618  
                              _fputs 9CA2                                labs@a 0501  
                              pad@fp 0512                                _width 0713  
                   SPI_SD_begin@ctx_ 0501                                ctoa@c 050D  
                              _putch 9FEC                                ctoa@l 050F  
                              ctoa@w 0511                                dtoa@d 051D  
                              dtoa@i 0528                                dtoa@p 0523  
                              dtoa@s 0527                                dtoa@w 0525  
                    util_hexdump@buf 05BF                         ?_menu_select 07BE  
               SDCard_command@length 052E            SPI_SD_configure@bit_order 05AA  
                     disk_ioctl@buff 05A7                       disk_read@count 05EA  
                              tablat 04F5                       SDCard_crc@endp 0505  
                     disk_ioctl@pdrv 05A9          ___SDCard_command_r1@command 051E  
               SDCard_command@result 0533                                plusw2 04DB  
                              stoa@l 0517                                stoa@p 0511  
                              stoa@s 050D                      __end_of_put_fat 39B0  
                              stoa@w 0513                                status 04D8  
                    __end_of_st_word 9E7E             ??_SPI_SD_end_transaction 0507  
                    __end_of_sprintf 99FC                       ?___fpclassifyf 0501  
                              xtoa@a 0528                                xtoa@c 052D  
                              xtoa@d 051D                                xtoa@i 052E  
                              xtoa@p 0529                                xtoa@w 052B  
                              xtoa@x 0521                      __end_of_sync_fs 6608  
                    __end_of_strncmp 906A                        get_ldnumber@i 0505  
                       _util_hexdump 7EB0            ?_emuz80_57q_get_from_sram 0501  
        __end_of_emuz80_57q_sys_init 8F2C                      ??_SPI_SD_select 0505  
                    __initialization 9420                       SDCard_init@buf 05B8  
                     SDCard_init@spi 05B6              ___SDCard_command_r1@buf 051F  
            ___SDCard_command_r1@spi 0526                  disk_initialize@pdrv 0680  
                       __end_of_bios F4E4                         __end_of_labs 9A46  
                       __end_of_ctoa 9198                         __end_of_main 5C1A  
                       __end_of_dtoa 72BC                         __end_of_stoa 7546  
                       __end_of_xtoa 7EB0                               CLCDATA 00D4  
                             ??_labs 0505                       get_fileinfo@di 0518  
                             ??_ctoa 050E                       get_fileinfo@dp 050E  
                             ??_main 0560                               ??_dtoa 0521  
                     get_fileinfo@si 0516                 SDCard_read512@i_2487 05D7  
                       ?_release_bus 0501                               ??_stoa 050F  
                             ??_xtoa 0522                        __activetblptr 0003  
                   ??_disk_io_handle 0673                   SDCard_init@timeout 05B2  
         __end_of_read_prec_or_width 8B2C       __end_of_SDCard_end_transaction 9E56  
                             ?_getch 0501                               _CLC1IE 24F5  
                             _CLC1IF 2575                               ?_fputc 0502  
                             ?_fputs 050B            disk_io_handle@disk_sector 0719  
               SDCard_read512@result 05DD                               _ANSELA 0400  
                             ?_putch 0501                               _ANSELB 0408  
                             _ANSELC 0410                               _ANSELD 0418  
                             _ANSELF 0428                            ??_SD_init 05BD  
                       ?_SDCard_init 05AE                               _NCO1EN 2237  
                             _RA3PPS 0204                               _RC0PPS 0211  
                             _RA4PPS 0205                               _RC1PPS 0212  
                             _RA6PPS 0207                               _U3RXEN 168C  
                             _U3RXIF 25B8                               _U3TXIF 25B9  
                             _U3TXEN 168D                               _OSCFRQ 00B1  
                      vfpfcnvrt@done 058C                               _TRISA0 2630  
                             _TRISA1 2631                               _TRISA3 2633  
                             _TRISA4 2634                               _TRISC0 2640  
                             _TRISC1 2641                               _TRISA5 2635  
                             _TRISA6 2636                               _TRISC2 2642  
                             _TRISC3 2643                               _TRISA7 2637  
                             _TRISE0 2650                               _TRISC4 2644  
                             _TRISC5 2645                               _TRISE1 2651  
                             _TRISC6 2646                               _TRISE2 2652  
                             _TRISC7 2647                            CLC2_check 5B30  
               __end_of_dir_register 86C4                               _DbcTbl D971  
                          CLC3_check 5B26                     __end_of___xxtofl 7686  
                   __end_of_check_fs 5E34                      disk_io_handle@n 0682  
                   __end_of_dir_find 77BA                     __end_of_dir_read 7A1E  
                   __end_of_dir_next 40D0                         ?_move_window 0600  
               __end_of_create_chain 35B0                         vfprintf@cfmt 055B  
                   __end_of_ld_clust 950C                               ___flge 82C6  
                             ___fleq 9198                     __end_of_ld_dword 8A74  
                             ___lmul 9866                            ??___aldiv 0509  
                          ??___almod 0509                            ??___fladd 0509  
                             ___wmul 9ECC                            ??___fldiv 0523  
                          ??___flneg 0505                            ??___flmul 0509  
                          ??_dbc_2nd 0503                            ??___flsub 0522  
                          ??___fltol 0505                            ??_dbc_1st 0503  
                             _f_read 2566                            ??___lldiv 0509  
                             _f_open 1F48                               _efgtoa 0000  
                             _f_sync 6238                     __end_of_mem_init 6E54  
               disk_io_handle@sector 067B                               _drives 0880  
                             _floorf 697A                               _memcmp 8C86  
                             _memcpy 9B62                 read_prec_or_width@ap 0509  
                             _memset 9DD6                       find_volume@fmt 0632  
                             clear_0 9468                               clear_1 947A  
                             clear_2 9486                  _wait_for_programmer 9BA6  
                          ??_f_lseek 064E                 __end_of_get_fileinfo 67C4  
                             isa$std 0001                            ??_f_mount 0560  
            ?___SDCard_wait_response 0512                               _printf 9EA6  
                             pad@buf 0514                SDCard_command@command 0532  
                          ??_dir_sdi 062A                               ctoa@fp 050B  
                          ??_f_write 0650                     util_hexdump@addr 05A8  
                          ??_get_fat 0610                               dtoa@fp 051B  
                             _strchr 9B1E                               _strcmp 97A2  
                             _strcpy 9D12                     util_hexdump@size 05AA  
                          ??_ld_word 0503                               fputc@c 0502  
                   __end_of_validate 8786                               fputs@c 050F  
                             fputs@i 0510                               fputs@s 050B  
                    SDCard_crc@count 0503                 __end_of_get_ldnumber 7404  
                    ___fpclassifyf@e 0509                      ___fpclassifyf@u 050B  
                    ___fpclassifyf@x 0501                        _util_addrdump 7C6E  
                       __mediumconst D970                      disk_read@sector 05E6  
                   menu_select@drive 07C8                               tblptrh 04F7  
                             tblptrl 04F6                               tblptru 04F8  
                   __end_of_st_clust 9C2A                     __end_of_st_dword 973C  
                             stoa@cp 0515                               stoa@fp 050B  
                             putch@c 0501                     __end_of_vfprintf 9AD8  
                          ??_put_fat 0614                            ??_st_word 0505  
         emuz80_57q_write_to_sram@ab 050B                            ??_sprintf 055D  
                             xtoa@fp 051B                            ??_sync_fs 0602  
                          ??_strncmp 0507           ??_emuz80_57q_write_to_sram 0507  
                         ___flge@ff1 051A                           ___flge@ff2 051E  
                    ??___fpclassifyf 0505         __end_of_emuz80_57q_start_cpu 80D4  
               ?_wait_for_programmer 0501                         ___xxtofl@arg 0517  
                       ___xxtofl@exp 0516                         ___xxtofl@val 050D  
                         ___fleq@ff1 0501                           ___fleq@ff2 0505  
            SDCard_write512@response 05E1                     SPI_SD_send@count 0505  
                         __accesstop 0560              __end_of__initialization 9490  
                       ?_SPI_SD_send 0501                       get_ldnumber@tc 0509  
                         ___flneg@f1 0501                       disk_write@buff 05E2  
                     get_ldnumber@tp 050C                       get_ldnumber@tt 0507  
                     disk_write@pdrv 05EA                  _SPI_SD_dummy_clocks 9910  
                    SDCard_read512@i 05D5                        ___rparam_used 0001  
                         ___fltol@f1 0501                     ??_SPI_SD_receive 0507  
                     __pcstackCOMRAM 0501                         __pidataBANK7 9FF8  
                       __pidataBANK8 9C2A                        __end_of_getch 9FE0  
                      __end_of_fputc 8FCC                        __end_of_fputs 9CDA  
     __end_of___SDCard_wait_response 9DA8                  ___SDCard_crc16@endp 050A  
                      f_closedir@res 05B5                        __end_of_putch 9FF8  
    ___SDCard_wait_response@attempts 0512                 ?_SPI_SD_dummy_clocks 050B  
           disk_io_handle@disk_datap 0717             disk_io_handle@disk_drive 072A  
              SDCard_write512@i_2504 05D7                       ?_util_addrdump 05A6  
           disk_io_handle@disk_track 0729                       _SDCard_command 95F2  
                     _SDCard_read512 5E34               SDCard_init@clock_speed 05B0  
                            ??_getch 0503                      get_fileinfo@fno 0510  
                            ??_fputc 0506      ___SDCard_wait_response@response 0517  
                            ??_fputs 050F                              ??_putch 0501  
              ??_wait_for_programmer 05A6                       SPI_SD_send@buf 0503  
                         __pbssBANK6 06FF                           __pbssBANK7 0700  
                         __pbssBANK8 0800                SDCard_write512@result 05DB  
                         _f_closedir 9E02                         SD_init@retry 071B  
                SDCard_write512@addr 05C7                  SDCard_write512@offs 05CB  
                _SPI_SD_receive_byte 9F16            ?_SPI_SD_begin_transaction 0505  
                            ?___flge 051A                              ?___fleq 0501  
                            ?___lmul 0501                              ?___wmul 0501  
                 util_addrdump@chars 05B2                              ?_f_read 0624  
                       mem_init@addr 05AC                              ?_f_open 06AF  
                            ?_efgtoa 0548                              ?_f_sync 060A  
                  ??_disk_initialize 05E4                              ?_floorf 0534  
                            ?_memcmp 0501                              ?_memcpy 0501  
                            ?_memset 0501                         ?_sync_window 05ED  
                     ___lmul@product 0509                              _CLCDATA 00D4  
              ??_SPI_SD_dummy_clocks 050F                              ?_printf 059A  
                            _ANSELE0 2100                              _ANSELE1 2101  
                            _ANSELE2 2102               __end_of_SDCard_command 9662  
             __end_of_SDCard_read512 6040                              ?_strchr 0501  
             _SPI_SD_end_transaction 9F5A                              ?_strcmp 0501  
                            ?_strcpy 0501                         ??_SDCard_crc 0505  
                            _CLCnCON 00D6                              _CLCnPOL 00D7  
                            _NCO1INC 0443                              _NCO1OUT 2235  
               ?_SPI_SD_receive_byte 050F                            ?___xxtofl 050D  
                          ?_check_fs 060A                           _disk_ioctl 9962  
                            _U3RXPPS 0276          ??_emuz80_57q_read_from_sram 0507  
                            _IVTBASE 045D                       follow_path@res 0677  
                         _disk_write 9222                              _IVTLOCK 0459  
                            _SPI1CLK 008C                              _SPI1RXB 0080  
                            _SPI1TXB 0081                       remove_chain@fs 0642  
                          ?_dir_find 0662                            ?_dir_read 0662  
                          ?_dir_next 0648                  _pic18f47q43_spi_ctx 07BA  
                          ?_ld_clust 0508                            ?_ld_dword 0501  
                            _SD_init 9582                    ??_SDCard_write512 05D1  
                ___SDCard_command_r1 8DDE                            ?_mem_init 0501  
                  __end_of_f_readdir 8C86                        ?_remove_chain 062B  
 ___SDCard_wait_response@no_response 0516                    __end_of_f_opendir 7C6E  
                        SDCard_crc@i 0507                          SDCard_crc@p 050A  
                  __end_of_dir_clear 78EE                    __end_of_dir_alloc 81D2  
                          _CLCIN0PPS 0261                            _CLCIN1PPS 0262  
                          _CLCIN2PPS 0263                            _CLCIN3PPS 0264  
                            __Hparam 0000                            _CLCIN4PPS 0265  
                          _CLCIN5PPS 0266                            _CLCIN6PPS 0267  
                          _CLCIN7PPS 0268                   __end_of_SDCard_crc 9866  
                  __end_of_clst2sect 8846                              __Lparam 0000  
                          ?_validate 05A6                            _CLCSELECT 00D5  
                  __end_of_disk_read 9326                         _f_write$1360 065C  
                            ___aldiv 8530                              ___almod 8D32  
                            ___fladd 475A                              ___fldiv 52C6  
                            ___flneg 9DA8                            ?_st_clust 0505  
                            ___flmul 442E                              _dbc_2nd 906A  
                            ___flsub 9AD8                              ___fltol 8902  
                            _dbc_1st 9662                            ?_st_dword 0501  
                            ___lldiv 9326                           check_fs@fs 060A  
                          ?_vfprintf 0594                              __pcinit 9420  
                     ___SDCard_crc16 8B2C                              _bdosccp D97D  
               ?___SDCard_command_r1 0518                              _f_lseek 18AE  
                            __ramtop 2500                              _f_mount 8396  
               _emuz80_57q_start_cpu 7FC4                      ??_util_addrdump 05B0  
                            __ptext0 59F2                              __ptext1 9BA6  
                            __ptext2 39B0                              __ptext3 8FCC  
                            __ptext4 97A2                              __ptext5 99B0  
                            __ptext6 9FD4                              __ptext7 8BDA  
                            __ptext8 6608                              __ptext9 78EE  
                            _dir_sdi 4A66                      ?_SDCard_command 0528  
                            _f_write 11B6                      ?_SDCard_read512 05C7  
                        validate@obj 05A6                              _get_fat 40D0  
                        validate@res 05B0                          validate@rfs 05A8  
                            _io_addr 072B                         _dir_register 85FC  
              ??_SPI_SD_receive_byte 0511                              _ld_word 9C6A  
         emuz80_57q_get_from_sram@ab 0504                           f_read@buff 0626  
                         f_read@clst 063D                read_prec_or_width@fmt 0507  
                         ??___xxtofl 0511                           f_read@sect 0649  
                         f_read@rcnt 0647                           ??_check_fs 0610  
                    find_volume@part 061A         ??_emuz80_57q_exit_bus_master 0501  
                   ___aldiv@dividend 0501            SDCard_end_transaction@spi 0512  
                            efgtoa@c 054E                              efgtoa@d 056B  
                            efgtoa@e 056F                              efgtoa@f 054A  
                            efgtoa@g 0582                              efgtoa@h 0577  
                            efgtoa@i 057F                              efgtoa@l 057B  
                            efgtoa@m 056D             SPI_SD_dummy_clocks@dummy 0511  
                            efgtoa@n 0586                              efgtoa@p 0562  
                            efgtoa@t 0564                              efgtoa@u 0588  
                            efgtoa@w 0571               util_addrdump@addr_offs 05A8  
                       _create_chain 312C               SDCard_command@argument 0528  
                         ??_dir_find 0664                              _tmp_buf 17BC  
                         ??_dir_read 0666                              _put_fat 35B0  
                         ??_dir_next 064C     __end_of_emuz80_57q_write_to_sram 9582  
                            _st_word 9E56                              _sprintf 99B0  
                  util_hexdump@chars 05AE                           f_lseek@bcs 0667  
                         ??_ld_clust 050C                              _sync_fs 6420  
                         f_lseek@ofs 064A                              _strncmp 8FCC  
                         f_lseek@res 0666                           ??_ld_dword 0505  
               end_of_initialization 9490                        ??_acquire_bus 0503  
                            floorf@e 0542                              floorf@m 053E  
                            floorf@u 0544                              floorf@x 0534  
                        ?_f_closedir 05B1                    mount_volume@bsect 069E  
                         f_open@clst 06D0                           f_open@mode 06B3  
                         f_open@path 06B1                       ??_remove_chain 0635  
                            memcmp@l 0509                              memcmp@n 0505  
                            memcmp@r 050B                    mount_volume@nclst 06A3  
                            memcpy@d 0507                              memcpy@n 0505  
                            memcpy@s 0509                           ??_mem_init 05A6  
                            fputc@fp 0504                    mount_volume@tsect 069A  
                       _get_fileinfo 6608                              memset@c 0503  
                            memset@n 0505                              memset@p 0507  
                            fputs@fp 050D            SPI_SD_dummy_clocks@clocks 050D  
                      ?_mount_volume 0681                   _read_prec_or_width 8A74  
                    disk_status@pdrv 055F                       util_addrdump@i 05C5  
          _emuz80_57q_read_from_sram 98BC                      ___lldiv@divisor 0505  
                         f_mount@cfs 06B7                           f_mount@res 06B4  
                         f_mount@opt 06B3                           f_mount@vol 06B9  
                    ___lldiv@counter 050D                         _get_ldnumber 72BC  
                         ??_validate 05AA                    __end_of_vfpfcnvrt 312C  
                         efgtoa@mode 0569                           efgtoa@sign 0581  
                          _SPI1TCNTH 0083                            _SPI1TCNTL 0082  
                   ___aldiv@quotient 050B                              postdec1 04E5  
                            postdec2 04DD                  ?_read_prec_or_width 0507  
                            postinc0 04EE                              postinc1 04E6  
                            postinc2 04DE                __end_of_SPI_SD_select 9FD4  
                   vfpfcnvrt@convarg 058D                           ??_st_clust 050D  
             __end_of___SDCard_crc16 8BDA                       move_window@res 05FF  
                         ??_st_dword 0507                           ??_vfprintf 055B  
                         _num_drives D97B                              strchr@c 0503  
                         dir_clear@n 0610                              strchr@s 0501  
              ??___SDCard_command_r1 051E                              strcmp@l 0501  
                            strcmp@r 0503                           dir_alloc@n 066B  
        emuz80_57q_write_to_sram@buf 0503          emuz80_57q_write_to_sram@len 0505  
                  SPI_SD_receive@buf 0503                              strcpy@d 0505  
                   remove_chain@clst 062D                           dir_find@dp 0662  
                         dir_find@fs 0666                ?_emuz80_57q_start_cpu 0501  
__end_of_emuz80_57q_enter_bus_master 9FB2          _emuz80_57q_enter_bus_master 9F9C  
                    _create_name$887 0510                           dir_read@dp 0662  
                         dir_read@fs 066A                           dir_sdi@csz 0634  
                         dir_sdi@ofs 0626                           dir_next@dp 0648  
                         dir_next@fs 065C                          ___fladd@grs 0510  
                        ?_disk_ioctl 05A6                      release_bus@ctx_ 0501  
                         f_write@btw 064C                        ___xxtofl@sign 0515  
                         f_write@res 0660                        ?_SPI_SD_begin 0501  
                        ?_disk_write 05E2                           get_fat@obj 060A  
                         get_fat@val 061A                 ??_read_prec_or_width 050B  
                        ___fldiv@grs 052E                          ___fldiv@rem 0527  
                    get_ldnumber@vol 050A                      disk_write@count 05E8  
                         disk_read@i 05ED                     _SPI_SD_configure 81D2  
        emuz80_57q_read_from_sram@ab 0509                         menu_select@c 07CF  
                       menu_select@i 07CD                        ??_create_name 050D  
                        ___flmul@grs 050F                       ??_mount_volume 0686  
                         ld_clust@cl 0510                           ld_clust@fs 0508  
           _emuz80_57q_get_from_sram 9F7C                        ??_get_fattime 0505  
                  SPI_SD_select@ctx_ 0501                        ??_find_volume 061C  
                         ld_dword@rv 050A                       __end_of_DbcTbl D97B  
                      ??_disk_status 055F                  __end_of_acquire_bus 9A90  
     SDCard_init@initial_clock_speed 05AE                      ?___SDCard_crc16 0501  
                     __end_of___flge 8396                       __end_of___fleq 9222  
                     __end_of___lmul 98BC                          vfpfcnvrt@ap 0555  
                        st_clust@dir 0507                          vfpfcnvrt@cp 0592  
                        vfpfcnvrt@fp 0551                       __end_of___wmul 9EF2  
                     __end_of_f_read 2B4E                       __end_of_f_open 2566  
                     __end_of_efgtoa 08E0                       __end_of_f_sync 6420  
                 disk_io_handle@addr 0677                   disk_io_handle@fres 0681  
                     __end_of_floorf 6B22                       __end_of_memcmp 8D32  
                     __end_of_memcpy 9BA6                           floorf@F521 070B  
                     __end_of_memset 9E02                      SPI_SD_begin@ctx 0503  
                         ld_word@ptr 0501                        SDCard_crc@crc 0509  
                      SDCard_crc@buf 0501                 ___SDCard_crc16@count 0505  
                     __end_of_printf 9ECC                       __end_of_strchr 9B62  
                     __end_of_strcmp 9804                       __end_of_strcpy 9D44  
                     ??_SPI_SD_begin 0503                  start_initialization 9420  
                        st_dword@val 0503                          st_dword@ptr 0501  
                        __end_of_abs 9EA6           ___SDCard_wait_response@spi 0514  
                        __end_of_pad 9420                          __end_of_rom F823  
   __end_of_SPI_SD_begin_transaction 9F5A                          put_fat@clst 060C  
              __end_of___fpclassifyf 8530                      _disk_initialize 7A1E  
               SPI_SD_dummy_clocks@i 050F                             CLC2_exit 5B38  
                           CLC3_exit 5B40              disk_io_handle@addr_2826 0679  
                      ??_follow_path 066E                  __end_of_create_name 52C6  
                        vfprintf@fmt 0596                             ??___flge 0522  
                           ??___fleq 0509                             ??___lmul 0509  
                           ??___wmul 0505                             ??_f_read 062C  
                __end_of_get_fattime 9FC4            ?_emuz80_57q_write_to_sram 0501  
                           ??_f_open 06B4                             ??_efgtoa 054F  
            ?_SPI_SD_end_transaction 0505                             ??_f_sync 0560  
             ??_emuz80_57q_start_cpu 0501                          __pdataBANK7 07D4  
                        __pdataBANK8 0880                             ??_floorf 0538  
                __end_of_find_volume 6FDE                             ??_memcmp 0507  
                __end_of_disk_status 9F16                             ??_memcpy 0507  
                           ??_memset 0507             ??_SDCard_end_transaction 0512  
                         memset@dest 0501                             ??_printf 055D  
               __end_of_remove_chain 697A                      SPI_SD_receive@i 0509  
                    SPI_SD_receive@p 050D                             ??_strchr 0505  
                           ??_strcmp 0505                             ??_strcpy 0505  
                          ___fladd@a 0505                            ___fladd@b 0501  
 __end_of_emuz80_57q_exit_bus_master 9FEC           _emuz80_57q_exit_bus_master 9FE0  
                    SPI_SD_send@ctx_ 0501                            ___fldiv@a 051F  
                          ___fldiv@b 051B                          __pbssBIGRAM 08C0  
                    _SDCard_write512 554E                            ___flmul@a 0505  
                          ___flmul@b 0501          __end_of_wait_for_programmer 9BE8  
                          ___flsub@a 051E                            ___flsub@b 051A  
                      __pcstackBANK5 0560                        __pcstackBANK6 0600  
                      __pcstackBANK7 07BE        emuz80_57q_read_from_sram@addr 0501  
                 ___SDCard_crc16@crc 0501                   ___SDCard_crc16@buf 0503  
                       f_closedir@dp 05B1                         f_closedir@fs 05B3  
                        _debug_flags 0725                         check_fs@sect 060C  
                       check_fs@sign 0613                        ??_menu_select 07C0  
            disk_io_handle@disk_dmah 0727              disk_io_handle@disk_dmal 0728  
                           ?_SD_init 0501                          _acquire_bus 9A46  
                      f_opendir@path 06B1                 SDCard_write512@count 05CF  
               SDCard_write512@retry 05D9                        ?_util_hexdump 05A6  
                   ___SDCard_crc16@p 050C                   SDCard_write512@crc 05DF  
                 SDCard_write512@buf 05CD                          _efgtoa$3420 0566  
                          _f_readdir 8BDA                   SDCard_write512@spi 05DD  
                          _main$3958 07D0                            _dtoa$3389 0521  
                   SDCard_write512@i 05D5                            _f_opendir 7B4A  
        __end_of_SPI_SD_dummy_clocks 9962       __end_of_SPI_SD_end_transaction 9F7C  
                  util_addrdump@addr 05AC                        __pmediumconst D970  
                   ??_SDCard_command 0530                     ??_SDCard_read512 05D1  
                           ?___aldiv 0501                             ?___almod 0501  
                           ?___fladd 0501                    util_addrdump@size 05AE  
                           ?___fldiv 051B                            __ptext100 9E7E  
                          __ptext101 8D32                            __ptext110 9F16  
                          __ptext102 8530                             ?___flneg 0501  
                          __ptext111 57C4                            __ptext103 9104  
                          __ptext120 973C                            __ptext112 9F38  
                          __ptext104 8F2C                            __ptext113 9804  
                          __ptext105 9FEC                            __ptext114 9E2C  
                          __ptext106 9D44                            __ptext115 9F5A  
                          __ptext107 95F2                            __ptext116 9FC4  
                          __ptext108 8DDE                            __ptext117 9910  
                          __ptext109 9D76                            __ptext118 9CDA  
                          __ptext119 9A46                             ?___flmul 0501  
                          _dir_clear 77BA                             ?_dbc_2nd 0501  
                          _dir_alloc 80D4                             ?___flsub 051A  
                           ?___fltol 0501                             ?_dbc_1st 0501  
                           ?___lldiv 0501                            _clst2sect 8786  
                     dir_alloc@n_ent 0664                            _disk_read 92A4  
                util_addrdump@header 05A6                            _disk_stat 07DA  
                      follow_path@dp 066A                        follow_path@fs 0674  
                           ?_f_lseek 0648                        follow_path@ns 0676  
                      _validate$1075 05AE                     ___almod@dividend 0501  
                __end_of_follow_path 6CC8                             ?_f_mount 06AF  
                      ??_release_bus 0503                             ?_dir_sdi 0624  
                           ?_f_write 0648                             ?_get_fat 060A  
               __end_of_mount_volume 11B6                             ?_ld_word 0501  
       emuz80_57q_get_from_sram@addr 0501               SDCard_read512@resp_crc 05DB  
             SDCard_read512@response 05E3                            check_fs@b 0617  
                           ?_put_fat 060A                            check_fs@w 0615  
                           ?_st_word 0501              __end_of_disk_initialize 7B4A  
                           ?_sprintf 059A                             _CLCnGLS0 00DC  
                           _CLCnGLS1 00DD                             _CLCnGLS2 00DE  
                           _CLCnGLS3 00DF                             ?_sync_fs 0600  
                        _get_fat$406 0618                             ?_strncmp 0501  
                           _CLCnSEL0 00D8                             _CLCnSEL1 00D9  
                           _CLCnSEL2 00DA                             _CLCnSEL3 00DB  
                      ??_SDCard_init 055F                         f_read@remain 0638  
                       ??_f_closedir 0560                            f_read@btr 0628  
                          f_read@res 063C                    find_volume@mbr_pt 0622  
                    ___aldiv@divisor 0505              SPI_SD_dummy_clocks@ctx_ 050B  
                _emuz80_57q_sys_init 8E88                      ___aldiv@counter 0509  
                        _create_name 5012                       ___wmul@product 0505  
           _SPI_SD_begin_transaction 9F38                            f_lseek@fp 0648  
                          f_lseek@fs 066B                       ??_util_hexdump 05AC  
                          f_open@bcs 06BC                            f_open@ofs 06CC  
                          f_open@res 06D6                     mount_volume@mode 0685  
                   mount_volume@path 0681                     mount_volume@nrsv 0698  
                        _get_fattime 9FB2                     mount_volume@stat 06A2  
                __end_of_menu_select 3D6A        SDCard_command@response_buffer 052C  
           ??___SDCard_wait_response 0514                         _SPI1CON0bits 0084  
                       _SPI1CON1bits 0085                         _SPI1CON2bits 0086  
            menu_select@drive_letter 07CA                           ?_f_readdir 066F  
                        _find_volume 6E54                          _disk_status 9EF2  
    emuz80_57q_get_from_sram@ret_val 0503                        ??_move_window 0606  
                          f_mount@fs 06AF                            f_mount@rp 06B5  
                    follow_path@path 066C                 __end_of_SPI_SD_begin 9D76  
                           _SPI1BAUD 0089                             _SPI1CON0 0084  
                           _SPI1CON1 0085                             _SPI1INTE 008B  
                         ?_f_opendir 06AF                             _SPI1RXIF 2588  
                      move_window@fs 0600                            _num_files 071D  
                         ?_dir_clear 0600                            dir_find@c 0668  
                         ?_dir_alloc 0662                      remove_chain@obj 062B  
                    remove_chain@res 0641                      remove_chain@nxt 063D  
        __end_of_SPI_SD_receive_byte 9F38                           ?_clst2sect 050D  
                          f_sync@dir 0611                         f_readdir@fno 0671  
            __end_of_SDCard_write512 57C4                         f_readdir@res 0675  
                          f_sync@res 0610                            dir_read@b 066D  
           __end_of_SPI_SD_configure 82C6                            dir_sdi@dp 0624  
                          dir_sdi@fs 063C                           ?_disk_read 05E4  
                          _vfpfcnvrt 2B4E                       release_bus@ctx 0503  
                          f_write@cc 0665                            f_write@bw 064E  
                          f_write@fp 0648                 menu_select@selection 07CB  
                          f_write@fs 0671                            _xtoa$3442 0526  
               ?_emuz80_57q_sys_init 0501                            get_fat@bc 0620  
                          get_fat@fs 0622                            get_fat@wc 061E  
                  ___wmul@multiplier 0501                   __end_of_f_closedir 9E2C  
         emuz80_57q_read_from_sram@i 0507                            _start_lba 07D4  
  __end_of_emuz80_57q_read_from_sram 9910                __end_of_util_addrdump 7D92  
                    acquire_bus@ctx_ 0501                         ??_disk_ioctl 055F  
                       ??_disk_write 055F           ??_emuz80_57q_get_from_sram 0503  
                       f_lseek@ifptr 065E                         f_lseek@nsect 0662  
                __end_of_release_bus 9D12                           st_clust@cl 0509  
                         vfpfcnvrt@c 0591                           st_clust@fs 0505  
                  ___lmul@multiplier 0501                            copy_data0 9434  
                          copy_data1 9454                        util_hexdump@i 05C1  
                          ld_word@rv 0506                       _disk_io_handle 4D4A  
                      ??_SPI_SD_send 0507                         SDCard_init@i 05B4  
                         put_fat@res 062A                           put_fat@val 0610  
                          mem_init@i 05AA                     ??___SDCard_crc16 0507  
                    dir_next@stretch 064A                  __end_of_SDCard_init 6238  
                           __Hrparam 0000          __end_of___SDCard_command_r1 8E88  
                          memcpy@tmp 050B                           vfprintf@ap 0598  
                           __Lrparam 0000                           vfprintf@fp 0594  
                        _follow_path 6B22                   __end_of_disk_ioctl 99B0  
                 __end_of_disk_write 92A4                           st_word@val 0503  
                         st_word@ptr 0501                           ?_vfpfcnvrt 0551  
              ??_emuz80_57q_sys_init 0501                  __end_of_move_window 8902  
       ___SDCard_command_r1@argument 0518                   ___fpclassifyf@F465 070F  
                       f_opendir@res 06B5            emuz80_57q_write_to_sram@i 0509  
                           dbc_2nd@c 0503                           sprintf@fmt 059C  
                           dbc_1st@c 0503                             ___xxtofl 7546  
                           _check_fs 5C1A                 SPI_SD_receive@i_2404 050C  
                    dir_register@res 0672                        dir_clear@ibuf 0608  
                      dir_clear@clst 0602                     util_addrdump@buf 05C3  
                      dir_clear@sect 060A               __end_of_disk_io_handle 5012  
                           __ptext10 7B4A                             __ptext11 1F48  
                           __ptext20 85FC                             __ptext12 67C4  
                           __ptext21 80D4                             __ptext13 6B22  
                           __ptext30 6E54                             __ptext22 4A66  
                           __ptext14 9496                             __ptext31 5C1A  
                           __ptext23 3D6A                             __ptext15 7686  
                           __ptext40 11B6                             __ptext32 8C86  
                           __ptext24 77BA                             __ptext16 5012  
                           __ptext41 6238                             __ptext33 7A1E  
                           __ptext25 9E02                             __ptext17 9B1E  
                           __ptext50 9EF2                             __ptext42 6420  
                           __ptext34 7EB0                             __ptext26 6CC8  
                           __ptext18 906A                             __ptext51 312C  
                           __ptext43 9DD6                             __ptext35 8E88  
                           __ptext27 8396                             __ptext19 9662  
                           __ptext60 92A4                             __ptext52 35B0  
                           __ptext44 9962                             __ptext36 7FC4  
                           __ptext28 08E0                             __ptext61 5E34  
                           __ptext53 9E56                             __ptext45 9BE8  
                           __ptext37 9FE0                             __ptext29 72BC  
                           __ptext70 98BC                             __ptext62 7C6E  
                           __ptext54 96D0                             __ptext46 9FB2  
                           __ptext38 9F9C                             __ptext71 9F7C  
                           __ptext63 8B2C                             __ptext55 40D0  
                           __ptext47 2566                             __ptext39 4D4A  
                           __ptext80 7404                             __ptext72 7546  
                           __ptext64 9C6A                             __ptext56 8846  
                           __ptext48 18AE                             __ptext81 8A74  
                           __ptext73 9582                             __ptext65 89BC  
                           __ptext57 6FDE                             __ptext49 86C4  
                           __ptext90 9AD8                             __ptext82 9ECC  
                           __ptext74 6040                             __ptext66 8786  
                           __ptext58 9222                             __ptext91 475A  
                           __ptext83 0000                             __ptext75 81D2  
                           __ptext67 9866                             __ptext59 554E  
                           __ptext92 9DA8                             __ptext84 9D12  
                           __ptext76 9EA6                             __ptext68 9326  
                           _dir_find 7686                             __ptext93 442E  
                           __ptext85 9B62                             __ptext77 9A90  
                           __ptext69 950C                             __ptext94 82C6  
                           __ptext86 99FC                             __ptext78 2B4E  
                           __ptext95 9198                             __ptext87 697A  
                           __ptext79 7D92                             __ptext96 52C6  
                           __ptext88 8464                             __ptext97 7150  
                           __ptext89 8902                             __ptext98 93A8  
                           __ptext99 9CA2                             _dir_read 78EE  
                           _dir_next 3D6A                             _disk_buf 0800  
                           _fileinfo 07A4                     ?_disk_initialize 0501  
                           _ld_clust 9496                             _ld_dword 89BC  
                    ___almod@divisor 0505                       sync_window@res 055F  
                        _menu_select 39B0                      ___almod@counter 0509  
       ___SDCard_command_r1@response 0525                           strcpy@dest 0501  
             _SDCard_end_transaction 9E2C                             _mem_init 6CC8  
               SPI_SD_receive@repeat 050B                          f_read@csect 0643  
                         sync_fs@res 05FF                         _remove_chain 67C4  
                        f_read@rbuff 0641                             f_read@cc 0645  
                           f_read@br 062A                             f_read@fp 0624  
                           f_read@fs 064D                             f_open@dj 06D7  
                           f_open@cl 06C4                             f_open@fp 06AF  
                           f_open@fs 06D4                             f_open@sc 06C8  
                    mount_volume@fmt 06AB                             f_open@tm 06C0  
                        _IVTLOCKbits 0459                      mount_volume@rfs 0683  
                        ??_f_readdir 0560                      mount_volume@vol 0692  
                           _validate 86C4                             efgtoa@fp 0548  
                           efgtoa@ne 0560                             efgtoa@pp 0568  
                           efgtoa@ou 0573                          ??_f_opendir 0560  
                __end_of_SPI_SD_send 97A2                             isa$xinst 0000  
                        f_readdir@dp 066F                          f_readdir@fs 0673  
                           f_sync@fp 060A                             f_sync@fs 0613  
                           f_sync@tm 060C                          ??_dir_clear 0606  
                        ??_dir_alloc 0666                             _st_clust 9BE8  
                           _st_dword 96D0                          ??_clst2sect 0513  
                           _vfprintf 9A90                     ?_SDCard_write512 05C7  
                      ??_sync_window 05EF                            printf@fmt 059A  
                     acquire_bus@ctx 0503                          ??_disk_read 055F  
                 util_hexdump@header 05A6                          f_lseek@clst 066D  
                     _SPI_SD_receive 57C4                          _release_bus 9CDA  
               __end_of_util_hexdump 7FC4                 SPI_SD_configure@ctx_ 05A6  
        ?_emuz80_57q_exit_bus_master 0501                   mount_volume@fasize 06A7  
                          put_fat@bc 0628                            put_fat@fs 060A  
                           memcmp@vl 0501                             memcmp@vr 0503  
                           memcpy@d1 0501                             memcpy@s1 0503  
                 mount_volume@szbfat 068E                      ?_disk_io_handle 0501  
                 mount_volume@sysect 0694                        clst2sect@clst 050F  
                        f_opendir@dp 06AF                          f_opendir@fs 06B3  
                       ?_acquire_bus 0501                          _SDCard_init 6040  
                          sprintf@ap 05A2                       dir_register@dp 066E  
                     dir_register@fs 0670                   __end_of_num_drives D97D  
                       dir_clear@szb 060E                     ___lldiv@dividend 0501  
                       dir_alloc@res 066D                        sync_window@fs 05ED  
                        _SLRCONCbits 0413                  SPI_SD_receive@count 0505  
                       _mount_volume 08E0                          f_mount@path 06B1  
                          strcpy@src 0503                            sync_fs@fs 0600  
            SDCard_command@responsep 0535                       mount_volume@fs 06AD  
                        _move_window 8846                          efgtoa@nmode 056A  
                         _SPI1SDIPPS 026B                           _SPI1SCKPPS 026A  
           _debug_flags@SDCard$F2418 071F                             printf@ap 055D  
                         _SPI1TWIDTH 0088               __end_of_SPI_SD_receive 59F2  
                      _SPI_SD_select 9FC4                          ??_vfpfcnvrt 0557  
                           put_fat@p 0626                      move_window@sect 0602  
                      ?_dir_register 066E                           _SDCard_crc 9804  
                       dir_read@attr 066C                             sprintf@f 05A4  
                           sprintf@s 059A                          dir_clear@fs 0600  
       emuz80_57q_write_to_sram@addr 0501                          dir_alloc@dp 0662  
                        dir_alloc@fs 0669                     ___lldiv@quotient 0509  
                 SPI_SD_receive@ctx_ 0501     __end_of_emuz80_57q_get_from_sram 9F9C  
             ___SDCard_wait_response 9D76                  __end_of_sync_window 7150  
                        dir_find@res 0669                             strncmp@l 0501  
                           strncmp@n 0505                             strncmp@r 0503  
                  remove_chain@pclst 0631                         ___aldiv@sign 050A  
                      ?_create_chain 062B           ??_SPI_SD_begin_transaction 0507  
                       _SPI_SD_begin 9D44         SPI_SD_begin_transaction@ctx_ 0505  
                       dir_next@clst 065E                        ___fladd@signs 050D  
                        clst2sect@fs 050D                          dir_read@res 066E  
                        dir_read@vol 0664                          dir_sdi@clst 0638  
                       ___almod@sign 050A                        ?_get_fileinfo 050E  
                       ?_create_name 0509                         ___fladd@aexp 050E  
                       ___fladd@bexp 050F                          _SPI_SD_send 973C  
                        dir_next@ofs 0658                         f_write@csect 0663  
                       f_write@wbuff 0661                         ?_get_fattime 0501  
                         _SPI_SD_ctx 07D8                          f_write@buff 064A  
                        f_write@clst 0667                          f_write@sect 066D  
                       ?_find_volume 0618                          f_write@wcnt 066B  
                      ?_get_ldnumber 0501             _emuz80_57q_write_to_sram 950C  
                       ?_disk_status 0501                          _put_fat$435 0622  
                        _put_fat$436 0624           SPI_SD_end_transaction@ctx_ 0505  
