

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Aug 04 22:25:50 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK7,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK8,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	cstackBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=3
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=3
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=3
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=3
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=3
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=3
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=3
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=3
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=3
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	text113,global,reloc=2,class=CODE,delta=1
   132                           	psect	text114,global,reloc=2,class=CODE,delta=1
   133                           	psect	text115,global,reloc=2,class=CODE,delta=1
   134                           	psect	text116,global,reloc=2,class=CODE,delta=1
   135                           	psect	text117,global,reloc=2,class=CODE,delta=1
   136                           	psect	text118,global,reloc=2,class=CODE,delta=1
   137                           	psect	text119,global,reloc=2,class=CODE,delta=1
   138                           	psect	text120,global,reloc=2,class=CODE,delta=1
   139                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   140                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   141                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   142   000000                     
   143                           ; Generated 23/02/2024 GMT
   144                           ; 
   145                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   146                           ; All rights reserved.
   147                           ; 
   148                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   149                           ; 
   150                           ; Redistribution and use in source and binary forms, with or without modification, are
   151                           ; permitted provided that the following conditions are met:
   152                           ; 
   153                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   154                           ;        conditions and the following disclaimer.
   155                           ; 
   156                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   157                           ;        of conditions and the following disclaimer in the documentation and/or other
   158                           ;        materials provided with the distribution. Publication is not required when
   159                           ;        this file is used in an embedded application.
   160                           ; 
   161                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   162                           ;        software without specific prior written permission.
   163                           ; 
   164                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   165                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   166                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   167                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   168                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   169                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   170                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   171                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   172                           ; 
   173                           ; 
   174                           ; Code-generator required, PIC18F57Q43 Definitions
   175                           ; 
   176                           ; SFR Addresses
   177   000000                     
   178                           	psect	idataBANK7
   179   019FF0                     __pidataBANK7:
   180                           	callstack 0
   181                           
   182                           ;initializer for _start_lba
   183   019FF0  FFFF               	dw	65535
   184   019FF2  FFFF               	dw	65535
   185                           
   186                           ;initializer for _SPI_SD_ctx
   187   019FF4  BB                 	db	low _pic18f47q43_spi_ctx
   188   019FF5  07                 	db	high _pic18f47q43_spi_ctx
   189                           
   190                           ;initializer for _disk_stat
   191   019FF6  01                 	db	1
   192                           
   193                           	psect	idataBANK8
   194   019C22                     __pidataBANK8:
   195                           	callstack 0
   196                           
   197                           ;initializer for _drives
   198   019C22  001A               	dw	26
   199   019C24  00                 	db	0
   200   019C25  00                 	db	0
   201   019C26  001A               	dw	26
   202   019C28  00                 	db	0
   203   019C29  00                 	db	0
   204   019C2A  001A               	dw	26
   205   019C2C  00                 	db	0
   206   019C2D  00                 	db	0
   207   019C2E  001A               	dw	26
   208   019C30  00                 	db	0
   209   019C31  00                 	db	0
   210   019C32  0000               	dw	0
   211   019C34  00                 	db	0
   212   019C35  00                 	db	0
   213   019C36  0000               	dw	0
   214   019C38  00                 	db	0
   215   019C39  00                 	db	0
   216   019C3A  0000               	dw	0
   217   019C3C  00                 	db	0
   218   019C3D  00                 	db	0
   219   019C3E  0000               	dw	0
   220   019C40  00                 	db	0
   221   019C41  00                 	db	0
   222   019C42  0080               	dw	128
   223   019C44  00                 	db	0
   224   019C45  00                 	db	0
   225   019C46  0080               	dw	128
   226   019C48  00                 	db	0
   227   019C49  00                 	db	0
   228   019C4A  0080               	dw	128
   229   019C4C  00                 	db	0
   230   019C4D  00                 	db	0
   231   019C4E  0080               	dw	128
   232   019C50  00                 	db	0
   233   019C51  00                 	db	0
   234   019C52  0000               	dw	0
   235   019C54  00                 	db	0
   236   019C55  00                 	db	0
   237   019C56  0000               	dw	0
   238   019C58  00                 	db	0
   239   019C59  00                 	db	0
   240   019C5A  0000               	dw	0
   241   019C5C  00                 	db	0
   242   019C5D  00                 	db	0
   243   019C5E  4064               	dw	16484
   244   019C60  00                 	db	0
   245   019C61  00                 	db	0
   246                           
   247                           	psect	mediumconst
   248   00D962                     __pmediumconst:
   249                           	callstack 0
   250   00D962  00                 	db	0
   251   00D963                     _DbcTbl:
   252                           	callstack 0
   253   00D963  81                 	db	129
   254   00D964  9F                 	db	159
   255   00D965  E0                 	db	224
   256   00D966  FC                 	db	252
   257   00D967  40                 	db	64
   258   00D968  7E                 	db	126
   259   00D969  80                 	db	128
   260   00D96A  FC                 	db	252
   261   00D96B  00                 	db	0
   262   00D96C  00                 	db	0
   263   00D96D                     __end_of_DbcTbl:
   264                           	callstack 0
   265   00D96D  0010               	dw	16
   266   00D96F                     __end_of_num_drives:
   267                           	callstack 0
   268   00D96F                     _bdosccp:
   269                           	callstack 0
   270   00D96F  C3                 	db	195
   271   00D970  5C                 	db	92
   272   00D971  E7                 	db	231
   273   00D972  C3                 	db	195
   274   00D973  58                 	db	88
   275   00D974  E7                 	db	231
   276   00D975  7F                 	db	127
   277   00D976  00                 	db	0
   278   00D977  43                 	db	67
   279   00D978  6F                 	db	111
   280   00D979  70                 	db	112
   281   00D97A  79                 	db	121
   282   00D97B  72                 	db	114
   283   00D97C  69                 	db	105
   284   00D97D  67                 	db	103
   285   00D97E  68                 	db	104
   286   00D97F  74                 	db	116
   287   00D980  20                 	db	32
   288   00D981  31                 	db	49
   289   00D982  39                 	db	57
   290   00D983  37                 	db	55
   291   00D984  39                 	db	57
   292   00D985  20                 	db	32
   293   00D986  28                 	db	40
   294   00D987  63                 	db	99
   295   00D988  29                 	db	41
   296   00D989  20                 	db	32
   297   00D98A  62                 	db	98
   298   00D98B  79                 	db	121
   299   00D98C  20                 	db	32
   300   00D98D  44                 	db	68
   301   00D98E  69                 	db	105
   302   00D98F  67                 	db	103
   303   00D990  69                 	db	105
   304   00D991  74                 	db	116
   305   00D992  61                 	db	97
   306   00D993  6C                 	db	108
   307   00D994  20                 	db	32
   308   00D995  52                 	db	82
   309   00D996  65                 	db	101
   310   00D997  73                 	db	115
   311   00D998  65                 	db	101
   312   00D999  61                 	db	97
   313   00D99A  72                 	db	114
   314   00D99B  63                 	db	99
   315   00D99C  68                 	db	104
   316   00D99D  20                 	db	32
   317   00D99E  20                 	db	32
   318   00D99F  20                 	db	32
   319   00D9A0  20                 	db	32
   320   00D9A1  20                 	db	32
   321   00D9A2  20                 	db	32
   322   00D9A3  00                 	db	0
   323   00D9A4  00                 	db	0
   324   00D9A5  00                 	db	0
   325   00D9A6  00                 	db	0
   326   00D9A7  00                 	db	0
   327   00D9A8  00                 	db	0
   328   00D9A9  00                 	db	0
   329   00D9AA  00                 	db	0
   330   00D9AB  00                 	db	0
   331   00D9AC  00                 	db	0
   332   00D9AD  00                 	db	0
   333   00D9AE  00                 	db	0
   334   00D9AF  00                 	db	0
   335   00D9B0  00                 	db	0
   336   00D9B1  00                 	db	0
   337   00D9B2  00                 	db	0
   338   00D9B3  00                 	db	0
   339   00D9B4  00                 	db	0
   340   00D9B5  00                 	db	0
   341   00D9B6  00                 	db	0
   342   00D9B7  00                 	db	0
   343   00D9B8  00                 	db	0
   344   00D9B9  00                 	db	0
   345   00D9BA  00                 	db	0
   346   00D9BB  00                 	db	0
   347   00D9BC  00                 	db	0
   348   00D9BD  00                 	db	0
   349   00D9BE  00                 	db	0
   350   00D9BF  00                 	db	0
   351   00D9C0  00                 	db	0
   352   00D9C1  00                 	db	0
   353   00D9C2  00                 	db	0
   354   00D9C3  00                 	db	0
   355   00D9C4  00                 	db	0
   356   00D9C5  00                 	db	0
   357   00D9C6  00                 	db	0
   358   00D9C7  00                 	db	0
   359   00D9C8  00                 	db	0
   360   00D9C9  00                 	db	0
   361   00D9CA  00                 	db	0
   362   00D9CB  00                 	db	0
   363   00D9CC  00                 	db	0
   364   00D9CD  00                 	db	0
   365   00D9CE  00                 	db	0
   366   00D9CF  00                 	db	0
   367   00D9D0  00                 	db	0
   368   00D9D1  00                 	db	0
   369   00D9D2  00                 	db	0
   370   00D9D3  00                 	db	0
   371   00D9D4  00                 	db	0
   372   00D9D5  00                 	db	0
   373   00D9D6  00                 	db	0
   374   00D9D7  00                 	db	0
   375   00D9D8  00                 	db	0
   376   00D9D9  00                 	db	0
   377   00D9DA  00                 	db	0
   378   00D9DB  00                 	db	0
   379   00D9DC  00                 	db	0
   380   00D9DD  00                 	db	0
   381   00D9DE  00                 	db	0
   382   00D9DF  00                 	db	0
   383   00D9E0  00                 	db	0
   384   00D9E1  00                 	db	0
   385   00D9E2  00                 	db	0
   386   00D9E3  00                 	db	0
   387   00D9E4  00                 	db	0
   388   00D9E5  00                 	db	0
   389   00D9E6  00                 	db	0
   390   00D9E7  00                 	db	0
   391   00D9E8  00                 	db	0
   392   00D9E9  00                 	db	0
   393   00D9EA  00                 	db	0
   394   00D9EB  00                 	db	0
   395   00D9EC  00                 	db	0
   396   00D9ED  00                 	db	0
   397   00D9EE  00                 	db	0
   398   00D9EF  00                 	db	0
   399   00D9F0  00                 	db	0
   400   00D9F1  00                 	db	0
   401   00D9F2  00                 	db	0
   402   00D9F3  00                 	db	0
   403   00D9F4  00                 	db	0
   404   00D9F5  00                 	db	0
   405   00D9F6  00                 	db	0
   406   00D9F7  08                 	db	8
   407   00D9F8  E4                 	db	228
   408   00D9F9  00                 	db	0
   409   00D9FA  00                 	db	0
   410   00D9FB  5F                 	db	95
   411   00D9FC  0E                 	db	14
   412   00D9FD  02                 	db	2
   413   00D9FE  C3                 	db	195
   414   00D9FF  05                 	db	5
   415   00DA00  00                 	db	0
   416   00DA01  C5                 	db	197
   417   00DA02  CD                 	db	205
   418   00DA03  8C                 	db	140
   419   00DA04  E4                 	db	228
   420   00DA05  C1                 	db	193
   421   00DA06  C9                 	db	201
   422   00DA07  3E                 	db	62
   423   00DA08  0D                 	db	13
   424   00DA09  CD                 	db	205
   425   00DA0A  92                 	db	146
   426   00DA0B  E4                 	db	228
   427   00DA0C  3E                 	db	62
   428   00DA0D  0A                 	db	10
   429   00DA0E  C3                 	db	195
   430   00DA0F  92                 	db	146
   431   00DA10  E4                 	db	228
   432   00DA11  3E                 	db	62
   433   00DA12  20                 	db	32
   434   00DA13  C3                 	db	195
   435   00DA14  92                 	db	146
   436   00DA15  E4                 	db	228
   437   00DA16  C5                 	db	197
   438   00DA17  CD                 	db	205
   439   00DA18  98                 	db	152
   440   00DA19  E4                 	db	228
   441   00DA1A  E1                 	db	225
   442   00DA1B  7E                 	db	126
   443   00DA1C  B7                 	db	183
   444   00DA1D  C8                 	db	200
   445   00DA1E  23                 	db	35
   446   00DA1F  E5                 	db	229
   447   00DA20  CD                 	db	205
   448   00DA21  8C                 	db	140
   449   00DA22  E4                 	db	228
   450   00DA23  E1                 	db	225
   451   00DA24  C3                 	db	195
   452   00DA25  AC                 	db	172
   453   00DA26  E4                 	db	228
   454   00DA27  0E                 	db	14
   455   00DA28  0D                 	db	13
   456   00DA29  C3                 	db	195
   457   00DA2A  05                 	db	5
   458   00DA2B  00                 	db	0
   459   00DA2C  5F                 	db	95
   460   00DA2D  0E                 	db	14
   461   00DA2E  0E                 	db	14
   462   00DA2F  C3                 	db	195
   463   00DA30  05                 	db	5
   464   00DA31  00                 	db	0
   465   00DA32  CD                 	db	205
   466   00DA33  05                 	db	5
   467   00DA34  00                 	db	0
   468   00DA35  32                 	db	50
   469   00DA36  EE                 	db	238
   470   00DA37  EB                 	db	235
   471   00DA38  3C                 	db	60
   472   00DA39  C9                 	db	201
   473   00DA3A  0E                 	db	14
   474   00DA3B  0F                 	db	15
   475   00DA3C  C3                 	db	195
   476   00DA3D  C3                 	db	195
   477   00DA3E  E4                 	db	228
   478   00DA3F  AF                 	db	175
   479   00DA40  32                 	db	50
   480   00DA41  ED                 	db	237
   481   00DA42  EB                 	db	235
   482   00DA43  11                 	db	17
   483   00DA44  CD                 	db	205
   484   00DA45  EB                 	db	235
   485   00DA46  C3                 	db	195
   486   00DA47  CB                 	db	203
   487   00DA48  E4                 	db	228
   488   00DA49  0E                 	db	14
   489   00DA4A  10                 	db	16
   490   00DA4B  C3                 	db	195
   491   00DA4C  C3                 	db	195
   492   00DA4D  E4                 	db	228
   493   00DA4E  0E                 	db	14
   494   00DA4F  11                 	db	17
   495   00DA50  C3                 	db	195
   496   00DA51  C3                 	db	195
   497   00DA52  E4                 	db	228
   498   00DA53  0E                 	db	14
   499   00DA54  12                 	db	18
   500   00DA55  C3                 	db	195
   501   00DA56  C3                 	db	195
   502   00DA57  E4                 	db	228
   503   00DA58  11                 	db	17
   504   00DA59  CD                 	db	205
   505   00DA5A  EB                 	db	235
   506   00DA5B  C3                 	db	195
   507   00DA5C  DF                 	db	223
   508   00DA5D  E4                 	db	228
   509   00DA5E  0E                 	db	14
   510   00DA5F  13                 	db	19
   511   00DA60  C3                 	db	195
   512   00DA61  05                 	db	5
   513   00DA62  00                 	db	0
   514   00DA63  CD                 	db	205
   515   00DA64  05                 	db	5
   516   00DA65  00                 	db	0
   517   00DA66  B7                 	db	183
   518   00DA67  C9                 	db	201
   519   00DA68  0E                 	db	14
   520   00DA69  14                 	db	20
   521   00DA6A  C3                 	db	195
   522   00DA6B  F4                 	db	244
   523   00DA6C  E4                 	db	228
   524   00DA6D  11                 	db	17
   525   00DA6E  CD                 	db	205
   526   00DA6F  EB                 	db	235
   527   00DA70  C3                 	db	195
   528   00DA71  F9                 	db	249
   529   00DA72  E4                 	db	228
   530   00DA73  0E                 	db	14
   531   00DA74  15                 	db	21
   532   00DA75  C3                 	db	195
   533   00DA76  F4                 	db	244
   534   00DA77  E4                 	db	228
   535   00DA78  0E                 	db	14
   536   00DA79  16                 	db	22
   537   00DA7A  C3                 	db	195
   538   00DA7B  C3                 	db	195
   539   00DA7C  E4                 	db	228
   540   00DA7D  0E                 	db	14
   541   00DA7E  17                 	db	23
   542   00DA7F  C3                 	db	195
   543   00DA80  05                 	db	5
   544   00DA81  00                 	db	0
   545   00DA82  1E                 	db	30
   546   00DA83  FF                 	db	255
   547   00DA84  0E                 	db	14
   548   00DA85  20                 	db	32
   549   00DA86  C3                 	db	195
   550   00DA87  05                 	db	5
   551   00DA88  00                 	db	0
   552   00DA89  CD                 	db	205
   553   00DA8A  13                 	db	19
   554   00DA8B  E5                 	db	229
   555   00DA8C  87                 	db	135
   556   00DA8D  87                 	db	135
   557   00DA8E  87                 	db	135
   558   00DA8F  87                 	db	135
   559   00DA90  21                 	db	33
   560   00DA91  EF                 	db	239
   561   00DA92  EB                 	db	235
   562   00DA93  B6                 	db	182
   563   00DA94  32                 	db	50
   564   00DA95  04                 	db	4
   565   00DA96  00                 	db	0
   566   00DA97  C9                 	db	201
   567   00DA98  3A                 	db	58
   568   00DA99  EF                 	db	239
   569   00DA9A  EB                 	db	235
   570   00DA9B  32                 	db	50
   571   00DA9C  04                 	db	4
   572   00DA9D  00                 	db	0
   573   00DA9E  C9                 	db	201
   574   00DA9F  FE                 	db	254
   575   00DAA0  61                 	db	97
   576   00DAA1  D8                 	db	216
   577   00DAA2  FE                 	db	254
   578   00DAA3  7B                 	db	123
   579   00DAA4  D0                 	db	208
   580   00DAA5  E6                 	db	230
   581   00DAA6  5F                 	db	95
   582   00DAA7  C9                 	db	201
   583   00DAA8  3A                 	db	58
   584   00DAA9  AB                 	db	171
   585   00DAAA  EB                 	db	235
   586   00DAAB  B7                 	db	183
   587   00DAAC  CA                 	db	202
   588   00DAAD  96                 	db	150
   589   00DAAE  E5                 	db	229
   590   00DAAF  3A                 	db	58
   591   00DAB0  EF                 	db	239
   592   00DAB1  EB                 	db	235
   593   00DAB2  B7                 	db	183
   594   00DAB3  3E                 	db	62
   595   00DAB4  00                 	db	0
   596   00DAB5  C4                 	db	196
   597   00DAB6  BD                 	db	189
   598   00DAB7  E4                 	db	228
   599   00DAB8  11                 	db	17
   600   00DAB9  AC                 	db	172
   601   00DABA  EB                 	db	235
   602   00DABB  CD                 	db	205
   603   00DABC  CB                 	db	203
   604   00DABD  E4                 	db	228
   605   00DABE  CA                 	db	202
   606   00DABF  96                 	db	150
   607   00DAC0  E5                 	db	229
   608   00DAC1  3A                 	db	58
   609   00DAC2  BB                 	db	187
   610   00DAC3  EB                 	db	235
   611   00DAC4  3D                 	db	61
   612   00DAC5  32                 	db	50
   613   00DAC6  CC                 	db	204
   614   00DAC7  EB                 	db	235
   615   00DAC8  11                 	db	17
   616   00DAC9  AC                 	db	172
   617   00DACA  EB                 	db	235
   618   00DACB  CD                 	db	205
   619   00DACC  F9                 	db	249
   620   00DACD  E4                 	db	228
   621   00DACE  C2                 	db	194
   622   00DACF  96                 	db	150
   623   00DAD0  E5                 	db	229
   624   00DAD1  11                 	db	17
   625   00DAD2  07                 	db	7
   626   00DAD3  E4                 	db	228
   627   00DAD4  21                 	db	33
   628   00DAD5  80                 	db	128
   629   00DAD6  00                 	db	0
   630   00DAD7  06                 	db	6
   631   00DAD8  80                 	db	128
   632   00DAD9  CD                 	db	205
   633   00DADA  42                 	db	66
   634   00DADB  E8                 	db	232
   635   00DADC  21                 	db	33
   636   00DADD  BA                 	db	186
   637   00DADE  EB                 	db	235
   638   00DADF  36                 	db	54
   639   00DAE0  00                 	db	0
   640   00DAE1  23                 	db	35
   641   00DAE2  35                 	db	53
   642   00DAE3  11                 	db	17
   643   00DAE4  AC                 	db	172
   644   00DAE5  EB                 	db	235
   645   00DAE6  CD                 	db	205
   646   00DAE7  DA                 	db	218
   647   00DAE8  E4                 	db	228
   648   00DAE9  CA                 	db	202
   649   00DAEA  96                 	db	150
   650   00DAEB  E5                 	db	229
   651   00DAEC  3A                 	db	58
   652   00DAED  EF                 	db	239
   653   00DAEE  EB                 	db	235
   654   00DAEF  B7                 	db	183
   655   00DAF0  C4                 	db	196
   656   00DAF1  BD                 	db	189
   657   00DAF2  E4                 	db	228
   658   00DAF3  21                 	db	33
   659   00DAF4  08                 	db	8
   660   00DAF5  E4                 	db	228
   661   00DAF6  CD                 	db	205
   662   00DAF7  AC                 	db	172
   663   00DAF8  E4                 	db	228
   664   00DAF9  CD                 	db	205
   665   00DAFA  C2                 	db	194
   666   00DAFB  E5                 	db	229
   667   00DAFC  CA                 	db	202
   668   00DAFD  A7                 	db	167
   669   00DAFE  E5                 	db	229
   670   00DAFF  CD                 	db	205
   671   00DB00  DD                 	db	221
   672   00DB01  E5                 	db	229
   673   00DB02  C3                 	db	195
   674   00DB03  82                 	db	130
   675   00DB04  E7                 	db	231
   676   00DB05  CD                 	db	205
   677   00DB06  DD                 	db	221
   678   00DB07  E5                 	db	229
   679   00DB08  CD                 	db	205
   680   00DB09  1A                 	db	26
   681   00DB0A  E5                 	db	229
   682   00DB0B  0E                 	db	14
   683   00DB0C  0A                 	db	10
   684   00DB0D  11                 	db	17
   685   00DB0E  06                 	db	6
   686   00DB0F  E4                 	db	228
   687   00DB10  CD                 	db	205
   688   00DB11  05                 	db	5
   689   00DB12  00                 	db	0
   690   00DB13  CD                 	db	205
   691   00DB14  29                 	db	41
   692   00DB15  E5                 	db	229
   693   00DB16  21                 	db	33
   694   00DB17  07                 	db	7
   695   00DB18  E4                 	db	228
   696   00DB19  46                 	db	70
   697   00DB1A  23                 	db	35
   698   00DB1B  78                 	db	120
   699   00DB1C  B7                 	db	183
   700   00DB1D  CA                 	db	202
   701   00DB1E  BA                 	db	186
   702   00DB1F  E5                 	db	229
   703   00DB20  7E                 	db	126
   704   00DB21  CD                 	db	205
   705   00DB22  30                 	db	48
   706   00DB23  E5                 	db	229
   707   00DB24  77                 	db	119
   708   00DB25  05                 	db	5
   709   00DB26  C3                 	db	195
   710   00DB27  AB                 	db	171
   711   00DB28  E5                 	db	229
   712   00DB29  77                 	db	119
   713   00DB2A  21                 	db	33
   714   00DB2B  08                 	db	8
   715   00DB2C  E4                 	db	228
   716   00DB2D  22                 	db	34
   717   00DB2E  88                 	db	136
   718   00DB2F  E4                 	db	228
   719   00DB30  C9                 	db	201
   720   00DB31  0E                 	db	14
   721   00DB32  0B                 	db	11
   722   00DB33  CD                 	db	205
   723   00DB34  05                 	db	5
   724   00DB35  00                 	db	0
   725   00DB36  B7                 	db	183
   726   00DB37  C8                 	db	200
   727   00DB38  0E                 	db	14
   728   00DB39  01                 	db	1
   729   00DB3A  CD                 	db	205
   730   00DB3B  05                 	db	5
   731   00DB3C  00                 	db	0
   732   00DB3D  B7                 	db	183
   733   00DB3E  C9                 	db	201
   734   00DB3F  0E                 	db	14
   735   00DB40  19                 	db	25
   736   00DB41  C3                 	db	195
   737   00DB42  05                 	db	5
   738   00DB43  00                 	db	0
   739   00DB44  11                 	db	17
   740   00DB45  80                 	db	128
   741   00DB46  00                 	db	0
   742   00DB47  0E                 	db	14
   743   00DB48  1A                 	db	26
   744   00DB49  C3                 	db	195
   745   00DB4A  05                 	db	5
   746   00DB4B  00                 	db	0
   747   00DB4C  21                 	db	33
   748   00DB4D  AB                 	db	171
   749   00DB4E  EB                 	db	235
   750   00DB4F  7E                 	db	126
   751   00DB50  B7                 	db	183
   752   00DB51  C8                 	db	200
   753   00DB52  36                 	db	54
   754   00DB53  00                 	db	0
   755   00DB54  AF                 	db	175
   756   00DB55  CD                 	db	205
   757   00DB56  BD                 	db	189
   758   00DB57  E4                 	db	228
   759   00DB58  11                 	db	17
   760   00DB59  AC                 	db	172
   761   00DB5A  EB                 	db	235
   762   00DB5B  CD                 	db	205
   763   00DB5C  EF                 	db	239
   764   00DB5D  E4                 	db	228
   765   00DB5E  3A                 	db	58
   766   00DB5F  EF                 	db	239
   767   00DB60  EB                 	db	235
   768   00DB61  C3                 	db	195
   769   00DB62  BD                 	db	189
   770   00DB63  E4                 	db	228
   771   00DB64  11                 	db	17
   772   00DB65  28                 	db	40
   773   00DB66  E7                 	db	231
   774   00DB67  21                 	db	33
   775   00DB68  00                 	db	0
   776   00DB69  EC                 	db	236
   777   00DB6A  06                 	db	6
   778   00DB6B  06                 	db	6
   779   00DB6C  1A                 	db	26
   780   00DB6D  BE                 	db	190
   781   00DB6E  C2                 	db	194
   782   00DB6F  CF                 	db	207
   783   00DB70  E7                 	db	231
   784   00DB71  13                 	db	19
   785   00DB72  23                 	db	35
   786   00DB73  05                 	db	5
   787   00DB74  C2                 	db	194
   788   00DB75  FD                 	db	253
   789   00DB76  E5                 	db	229
   790   00DB77  C9                 	db	201
   791   00DB78  CD                 	db	205
   792   00DB79  98                 	db	152
   793   00DB7A  E4                 	db	228
   794   00DB7B  2A                 	db	42
   795   00DB7C  8A                 	db	138
   796   00DB7D  E4                 	db	228
   797   00DB7E  7E                 	db	126
   798   00DB7F  FE                 	db	254
   799   00DB80  20                 	db	32
   800   00DB81  CA                 	db	202
   801   00DB82  22                 	db	34
   802   00DB83  E6                 	db	230
   803   00DB84  B7                 	db	183
   804   00DB85  CA                 	db	202
   805   00DB86  22                 	db	34
   806   00DB87  E6                 	db	230
   807   00DB88  E5                 	db	229
   808   00DB89  CD                 	db	205
   809   00DB8A  8C                 	db	140
   810   00DB8B  E4                 	db	228
   811   00DB8C  E1                 	db	225
   812   00DB8D  23                 	db	35
   813   00DB8E  C3                 	db	195
   814   00DB8F  0F                 	db	15
   815   00DB90  E6                 	db	230
   816   00DB91  3E                 	db	62
   817   00DB92  3F                 	db	63
   818   00DB93  CD                 	db	205
   819   00DB94  8C                 	db	140
   820   00DB95  E4                 	db	228
   821   00DB96  CD                 	db	205
   822   00DB97  98                 	db	152
   823   00DB98  E4                 	db	228
   824   00DB99  CD                 	db	205
   825   00DB9A  DD                 	db	221
   826   00DB9B  E5                 	db	229
   827   00DB9C  C3                 	db	195
   828   00DB9D  82                 	db	130
   829   00DB9E  E7                 	db	231
   830   00DB9F  1A                 	db	26
   831   00DBA0  B7                 	db	183
   832   00DBA1  C8                 	db	200
   833   00DBA2  FE                 	db	254
   834   00DBA3  20                 	db	32
   835   00DBA4  DA                 	db	218
   836   00DBA5  09                 	db	9
   837   00DBA6  E6                 	db	230
   838   00DBA7  C8                 	db	200
   839   00DBA8  FE                 	db	254
   840   00DBA9  3D                 	db	61
   841   00DBAA  C8                 	db	200
   842   00DBAB  FE                 	db	254
   843   00DBAC  5F                 	db	95
   844   00DBAD  C8                 	db	200
   845   00DBAE  FE                 	db	254
   846   00DBAF  2E                 	db	46
   847   00DBB0  C8                 	db	200
   848   00DBB1  FE                 	db	254
   849   00DBB2  3A                 	db	58
   850   00DBB3  C8                 	db	200
   851   00DBB4  FE                 	db	254
   852   00DBB5  3B                 	db	59
   853   00DBB6  C8                 	db	200
   854   00DBB7  FE                 	db	254
   855   00DBB8  3C                 	db	60
   856   00DBB9  C8                 	db	200
   857   00DBBA  FE                 	db	254
   858   00DBBB  3E                 	db	62
   859   00DBBC  C8                 	db	200
   860   00DBBD  C9                 	db	201
   861   00DBBE  1A                 	db	26
   862   00DBBF  B7                 	db	183
   863   00DBC0  C8                 	db	200
   864   00DBC1  FE                 	db	254
   865   00DBC2  20                 	db	32
   866   00DBC3  C0                 	db	192
   867   00DBC4  13                 	db	19
   868   00DBC5  C3                 	db	195
   869   00DBC6  4F                 	db	79
   870   00DBC7  E6                 	db	230
   871   00DBC8  85                 	db	133
   872   00DBC9  6F                 	db	111
   873   00DBCA  D0                 	db	208
   874   00DBCB  24                 	db	36
   875   00DBCC  C9                 	db	201
   876   00DBCD  3E                 	db	62
   877   00DBCE  00                 	db	0
   878   00DBCF  21                 	db	33
   879   00DBD0  CD                 	db	205
   880   00DBD1  EB                 	db	235
   881   00DBD2  CD                 	db	205
   882   00DBD3  59                 	db	89
   883   00DBD4  E6                 	db	230
   884   00DBD5  E5                 	db	229
   885   00DBD6  E5                 	db	229
   886   00DBD7  AF                 	db	175
   887   00DBD8  32                 	db	50
   888   00DBD9  F0                 	db	240
   889   00DBDA  EB                 	db	235
   890   00DBDB  2A                 	db	42
   891   00DBDC  88                 	db	136
   892   00DBDD  E4                 	db	228
   893   00DBDE  EB                 	db	235
   894   00DBDF  CD                 	db	205
   895   00DBE0  4F                 	db	79
   896   00DBE1  E6                 	db	230
   897   00DBE2  EB                 	db	235
   898   00DBE3  22                 	db	34
   899   00DBE4  8A                 	db	138
   900   00DBE5  E4                 	db	228
   901   00DBE6  EB                 	db	235
   902   00DBE7  E1                 	db	225
   903   00DBE8  1A                 	db	26
   904   00DBE9  B7                 	db	183
   905   00DBEA  CA                 	db	202
   906   00DBEB  89                 	db	137
   907   00DBEC  E6                 	db	230
   908   00DBED  DE                 	db	222
   909   00DBEE  40                 	db	64
   910   00DBEF  47                 	db	71
   911   00DBF0  13                 	db	19
   912   00DBF1  1A                 	db	26
   913   00DBF2  FE                 	db	254
   914   00DBF3  3A                 	db	58
   915   00DBF4  CA                 	db	202
   916   00DBF5  90                 	db	144
   917   00DBF6  E6                 	db	230
   918   00DBF7  1B                 	db	27
   919   00DBF8  3A                 	db	58
   920   00DBF9  EF                 	db	239
   921   00DBFA  EB                 	db	235
   922   00DBFB  77                 	db	119
   923   00DBFC  C3                 	db	195
   924   00DBFD  96                 	db	150
   925   00DBFE  E6                 	db	230
   926   00DBFF  78                 	db	120
   927   00DC00  32                 	db	50
   928   00DC01  F0                 	db	240
   929   00DC02  EB                 	db	235
   930   00DC03  70                 	db	112
   931   00DC04  13                 	db	19
   932   00DC05  06                 	db	6
   933   00DC06  08                 	db	8
   934   00DC07  CD                 	db	205
   935   00DC08  30                 	db	48
   936   00DC09  E6                 	db	230
   937   00DC0A  CA                 	db	202
   938   00DC0B  B9                 	db	185
   939   00DC0C  E6                 	db	230
   940   00DC0D  23                 	db	35
   941   00DC0E  FE                 	db	254
   942   00DC0F  2A                 	db	42
   943   00DC10  C2                 	db	194
   944   00DC11  A9                 	db	169
   945   00DC12  E6                 	db	230
   946   00DC13  36                 	db	54
   947   00DC14  3F                 	db	63
   948   00DC15  C3                 	db	195
   949   00DC16  AB                 	db	171
   950   00DC17  E6                 	db	230
   951   00DC18  77                 	db	119
   952   00DC19  13                 	db	19
   953   00DC1A  05                 	db	5
   954   00DC1B  C2                 	db	194
   955   00DC1C  98                 	db	152
   956   00DC1D  E6                 	db	230
   957   00DC1E  CD                 	db	205
   958   00DC1F  30                 	db	48
   959   00DC20  E6                 	db	230
   960   00DC21  CA                 	db	202
   961   00DC22  C0                 	db	192
   962   00DC23  E6                 	db	230
   963   00DC24  13                 	db	19
   964   00DC25  C3                 	db	195
   965   00DC26  AF                 	db	175
   966   00DC27  E6                 	db	230
   967   00DC28  23                 	db	35
   968   00DC29  36                 	db	54
   969   00DC2A  20                 	db	32
   970   00DC2B  05                 	db	5
   971   00DC2C  C2                 	db	194
   972   00DC2D  B9                 	db	185
   973   00DC2E  E6                 	db	230
   974   00DC2F  06                 	db	6
   975   00DC30  03                 	db	3
   976   00DC31  FE                 	db	254
   977   00DC32  2E                 	db	46
   978   00DC33  C2                 	db	194
   979   00DC34  E9                 	db	233
   980   00DC35  E6                 	db	230
   981   00DC36  13                 	db	19
   982   00DC37  CD                 	db	205
   983   00DC38  30                 	db	48
   984   00DC39  E6                 	db	230
   985   00DC3A  CA                 	db	202
   986   00DC3B  E9                 	db	233
   987   00DC3C  E6                 	db	230
   988   00DC3D  23                 	db	35
   989   00DC3E  FE                 	db	254
   990   00DC3F  2A                 	db	42
   991   00DC40  C2                 	db	194
   992   00DC41  D9                 	db	217
   993   00DC42  E6                 	db	230
   994   00DC43  36                 	db	54
   995   00DC44  3F                 	db	63
   996   00DC45  C3                 	db	195
   997   00DC46  DB                 	db	219
   998   00DC47  E6                 	db	230
   999   00DC48  77                 	db	119
  1000   00DC49  13                 	db	19
  1001   00DC4A  05                 	db	5
  1002   00DC4B  C2                 	db	194
  1003   00DC4C  C8                 	db	200
  1004   00DC4D  E6                 	db	230
  1005   00DC4E  CD                 	db	205
  1006   00DC4F  30                 	db	48
  1007   00DC50  E6                 	db	230
  1008   00DC51  CA                 	db	202
  1009   00DC52  F0                 	db	240
  1010   00DC53  E6                 	db	230
  1011   00DC54  13                 	db	19
  1012   00DC55  C3                 	db	195
  1013   00DC56  DF                 	db	223
  1014   00DC57  E6                 	db	230
  1015   00DC58  23                 	db	35
  1016   00DC59  36                 	db	54
  1017   00DC5A  20                 	db	32
  1018   00DC5B  05                 	db	5
  1019   00DC5C  C2                 	db	194
  1020   00DC5D  E9                 	db	233
  1021   00DC5E  E6                 	db	230
  1022   00DC5F  06                 	db	6
  1023   00DC60  03                 	db	3
  1024   00DC61  23                 	db	35
  1025   00DC62  36                 	db	54
  1026   00DC63  00                 	db	0
  1027   00DC64  05                 	db	5
  1028   00DC65  C2                 	db	194
  1029   00DC66  F2                 	db	242
  1030   00DC67  E6                 	db	230
  1031   00DC68  EB                 	db	235
  1032   00DC69  22                 	db	34
  1033   00DC6A  88                 	db	136
  1034   00DC6B  E4                 	db	228
  1035   00DC6C  E1                 	db	225
  1036   00DC6D  01                 	db	1
  1037   00DC6E  0B                 	db	11
  1038   00DC6F  00                 	db	0
  1039   00DC70  23                 	db	35
  1040   00DC71  7E                 	db	126
  1041   00DC72  FE                 	db	254
  1042   00DC73  3F                 	db	63
  1043   00DC74  C2                 	db	194
  1044   00DC75  09                 	db	9
  1045   00DC76  E7                 	db	231
  1046   00DC77  04                 	db	4
  1047   00DC78  0D                 	db	13
  1048   00DC79  C2                 	db	194
  1049   00DC7A  01                 	db	1
  1050   00DC7B  E7                 	db	231
  1051   00DC7C  78                 	db	120
  1052   00DC7D  B7                 	db	183
  1053   00DC7E  C9                 	db	201
  1054   00DC7F  44                 	db	68
  1055   00DC80  49                 	db	73
  1056   00DC81  52                 	db	82
  1057   00DC82  20                 	db	32
  1058   00DC83  45                 	db	69
  1059   00DC84  52                 	db	82
  1060   00DC85  41                 	db	65
  1061   00DC86  20                 	db	32
  1062   00DC87  54                 	db	84
  1063   00DC88  59                 	db	89
  1064   00DC89  50                 	db	80
  1065   00DC8A  45                 	db	69
  1066   00DC8B  53                 	db	83
  1067   00DC8C  41                 	db	65
  1068   00DC8D  56                 	db	86
  1069   00DC8E  45                 	db	69
  1070   00DC8F  52                 	db	82
  1071   00DC90  45                 	db	69
  1072   00DC91  4E                 	db	78
  1073   00DC92  20                 	db	32
  1074   00DC93  55                 	db	85
  1075   00DC94  53                 	db	83
  1076   00DC95  45                 	db	69
  1077   00DC96  52                 	db	82
  1078   00DC97  00                 	db	0
  1079   00DC98  16                 	db	22
  1080   00DC99  00                 	db	0
  1081   00DC9A  00                 	db	0
  1082   00DC9B  00                 	db	0
  1083   00DC9C  00                 	db	0
  1084   00DC9D  21                 	db	33
  1085   00DC9E  10                 	db	16
  1086   00DC9F  E7                 	db	231
  1087   00DCA0  0E                 	db	14
  1088   00DCA1  00                 	db	0
  1089   00DCA2  79                 	db	121
  1090   00DCA3  FE                 	db	254
  1091   00DCA4  06                 	db	6
  1092   00DCA5  D0                 	db	208
  1093   00DCA6  11                 	db	17
  1094   00DCA7  CE                 	db	206
  1095   00DCA8  EB                 	db	235
  1096   00DCA9  06                 	db	6
  1097   00DCAA  04                 	db	4
  1098   00DCAB  1A                 	db	26
  1099   00DCAC  BE                 	db	190
  1100   00DCAD  C2                 	db	194
  1101   00DCAE  4F                 	db	79
  1102   00DCAF  E7                 	db	231
  1103   00DCB0  13                 	db	19
  1104   00DCB1  23                 	db	35
  1105   00DCB2  05                 	db	5
  1106   00DCB3  C2                 	db	194
  1107   00DCB4  3C                 	db	60
  1108   00DCB5  E7                 	db	231
  1109   00DCB6  1A                 	db	26
  1110   00DCB7  FE                 	db	254
  1111   00DCB8  20                 	db	32
  1112   00DCB9  C2                 	db	194
  1113   00DCBA  54                 	db	84
  1114   00DCBB  E7                 	db	231
  1115   00DCBC  79                 	db	121
  1116   00DCBD  C9                 	db	201
  1117   00DCBE  23                 	db	35
  1118   00DCBF  05                 	db	5
  1119   00DCC0  C2                 	db	194
  1120   00DCC1  4F                 	db	79
  1121   00DCC2  E7                 	db	231
  1122   00DCC3  0C                 	db	12
  1123   00DCC4  C3                 	db	195
  1124   00DCC5  33                 	db	51
  1125   00DCC6  E7                 	db	231
  1126   00DCC7  AF                 	db	175
  1127   00DCC8  32                 	db	50
  1128   00DCC9  07                 	db	7
  1129   00DCCA  E4                 	db	228
  1130   00DCCB  31                 	db	49
  1131   00DCCC  AB                 	db	171
  1132   00DCCD  EB                 	db	235
  1133   00DCCE  C5                 	db	197
  1134   00DCCF  79                 	db	121
  1135   00DCD0  1F                 	db	31
  1136   00DCD1  1F                 	db	31
  1137   00DCD2  1F                 	db	31
  1138   00DCD3  1F                 	db	31
  1139   00DCD4  E6                 	db	230
  1140   00DCD5  0F                 	db	15
  1141   00DCD6  5F                 	db	95
  1142   00DCD7  CD                 	db	205
  1143   00DCD8  15                 	db	21
  1144   00DCD9  E5                 	db	229
  1145   00DCDA  CD                 	db	205
  1146   00DCDB  B8                 	db	184
  1147   00DCDC  E4                 	db	228
  1148   00DCDD  32                 	db	50
  1149   00DCDE  AB                 	db	171
  1150   00DCDF  EB                 	db	235
  1151   00DCE0  C1                 	db	193
  1152   00DCE1  79                 	db	121
  1153   00DCE2  E6                 	db	230
  1154   00DCE3  0F                 	db	15
  1155   00DCE4  32                 	db	50
  1156   00DCE5  EF                 	db	239
  1157   00DCE6  EB                 	db	235
  1158   00DCE7  CD                 	db	205
  1159   00DCE8  BD                 	db	189
  1160   00DCE9  E4                 	db	228
  1161   00DCEA  3A                 	db	58
  1162   00DCEB  07                 	db	7
  1163   00DCEC  E4                 	db	228
  1164   00DCED  B7                 	db	183
  1165   00DCEE  C2                 	db	194
  1166   00DCEF  98                 	db	152
  1167   00DCF0  E7                 	db	231
  1168   00DCF1  31                 	db	49
  1169   00DCF2  AB                 	db	171
  1170   00DCF3  EB                 	db	235
  1171   00DCF4  CD                 	db	205
  1172   00DCF5  98                 	db	152
  1173   00DCF6  E4                 	db	228
  1174   00DCF7  CD                 	db	205
  1175   00DCF8  D0                 	db	208
  1176   00DCF9  E5                 	db	229
  1177   00DCFA  C6                 	db	198
  1178   00DCFB  41                 	db	65
  1179   00DCFC  CD                 	db	205
  1180   00DCFD  8C                 	db	140
  1181   00DCFE  E4                 	db	228
  1182   00DCFF  3E                 	db	62
  1183   00DD00  3E                 	db	62
  1184   00DD01  CD                 	db	205
  1185   00DD02  8C                 	db	140
  1186   00DD03  E4                 	db	228
  1187   00DD04  CD                 	db	205
  1188   00DD05  39                 	db	57
  1189   00DD06  E5                 	db	229
  1190   00DD07  11                 	db	17
  1191   00DD08  80                 	db	128
  1192   00DD09  00                 	db	0
  1193   00DD0A  CD                 	db	205
  1194   00DD0B  D8                 	db	216
  1195   00DD0C  E5                 	db	229
  1196   00DD0D  CD                 	db	205
  1197   00DD0E  D0                 	db	208
  1198   00DD0F  E5                 	db	229
  1199   00DD10  32                 	db	50
  1200   00DD11  EF                 	db	239
  1201   00DD12  EB                 	db	235
  1202   00DD13  CD                 	db	205
  1203   00DD14  5E                 	db	94
  1204   00DD15  E6                 	db	230
  1205   00DD16  C4                 	db	196
  1206   00DD17  09                 	db	9
  1207   00DD18  E6                 	db	230
  1208   00DD19  3A                 	db	58
  1209   00DD1A  F0                 	db	240
  1210   00DD1B  EB                 	db	235
  1211   00DD1C  B7                 	db	183
  1212   00DD1D  C2                 	db	194
  1213   00DD1E  A5                 	db	165
  1214   00DD1F  EA                 	db	234
  1215   00DD20  CD                 	db	205
  1216   00DD21  2E                 	db	46
  1217   00DD22  E7                 	db	231
  1218   00DD23  21                 	db	33
  1219   00DD24  C1                 	db	193
  1220   00DD25  E7                 	db	231
  1221   00DD26  5F                 	db	95
  1222   00DD27  16                 	db	22
  1223   00DD28  00                 	db	0
  1224   00DD29  19                 	db	25
  1225   00DD2A  19                 	db	25
  1226   00DD2B  7E                 	db	126
  1227   00DD2C  23                 	db	35
  1228   00DD2D  66                 	db	102
  1229   00DD2E  6F                 	db	111
  1230   00DD2F  E9                 	db	233
  1231   00DD30  77                 	db	119
  1232   00DD31  E8                 	db	232
  1233   00DD32  1F                 	db	31
  1234   00DD33  E9                 	db	233
  1235   00DD34  5D                 	db	93
  1236   00DD35  E9                 	db	233
  1237   00DD36  AD                 	db	173
  1238   00DD37  E9                 	db	233
  1239   00DD38  10                 	db	16
  1240   00DD39  EA                 	db	234
  1241   00DD3A  8E                 	db	142
  1242   00DD3B  EA                 	db	234
  1243   00DD3C  A5                 	db	165
  1244   00DD3D  EA                 	db	234
  1245   00DD3E  21                 	db	33
  1246   00DD3F  F3                 	db	243
  1247   00DD40  76                 	db	118
  1248   00DD41  22                 	db	34
  1249   00DD42  00                 	db	0
  1250   00DD43  E4                 	db	228
  1251   00DD44  21                 	db	33
  1252   00DD45  00                 	db	0
  1253   00DD46  E4                 	db	228
  1254   00DD47  E9                 	db	233
  1255   00DD48  01                 	db	1
  1256   00DD49  DF                 	db	223
  1257   00DD4A  E7                 	db	231
  1258   00DD4B  C3                 	db	195
  1259   00DD4C  A7                 	db	167
  1260   00DD4D  E4                 	db	228
  1261   00DD4E  52                 	db	82
  1262   00DD4F  65                 	db	101
  1263   00DD50  61                 	db	97
  1264   00DD51  64                 	db	100
  1265   00DD52  20                 	db	32
  1266   00DD53  65                 	db	101
  1267   00DD54  72                 	db	114
  1268   00DD55  72                 	db	114
  1269   00DD56  6F                 	db	111
  1270   00DD57  72                 	db	114
  1271   00DD58  00                 	db	0
  1272   00DD59  01                 	db	1
  1273   00DD5A  F0                 	db	240
  1274   00DD5B  E7                 	db	231
  1275   00DD5C  C3                 	db	195
  1276   00DD5D  A7                 	db	167
  1277   00DD5E  E4                 	db	228
  1278   00DD5F  4E                 	db	78
  1279   00DD60  6F                 	db	111
  1280   00DD61  20                 	db	32
  1281   00DD62  66                 	db	102
  1282   00DD63  69                 	db	105
  1283   00DD64  6C                 	db	108
  1284   00DD65  65                 	db	101
  1285   00DD66  00                 	db	0
  1286   00DD67  CD                 	db	205
  1287   00DD68  5E                 	db	94
  1288   00DD69  E6                 	db	230
  1289   00DD6A  3A                 	db	58
  1290   00DD6B  F0                 	db	240
  1291   00DD6C  EB                 	db	235
  1292   00DD6D  B7                 	db	183
  1293   00DD6E  C2                 	db	194
  1294   00DD6F  09                 	db	9
  1295   00DD70  E6                 	db	230
  1296   00DD71  21                 	db	33
  1297   00DD72  CE                 	db	206
  1298   00DD73  EB                 	db	235
  1299   00DD74  01                 	db	1
  1300   00DD75  0B                 	db	11
  1301   00DD76  00                 	db	0
  1302   00DD77  7E                 	db	126
  1303   00DD78  FE                 	db	254
  1304   00DD79  20                 	db	32
  1305   00DD7A  CA                 	db	202
  1306   00DD7B  33                 	db	51
  1307   00DD7C  E8                 	db	232
  1308   00DD7D  23                 	db	35
  1309   00DD7E  D6                 	db	214
  1310   00DD7F  30                 	db	48
  1311   00DD80  FE                 	db	254
  1312   00DD81  0A                 	db	10
  1313   00DD82  D2                 	db	210
  1314   00DD83  09                 	db	9
  1315   00DD84  E6                 	db	230
  1316   00DD85  57                 	db	87
  1317   00DD86  78                 	db	120
  1318   00DD87  E6                 	db	230
  1319   00DD88  E0                 	db	224
  1320   00DD89  C2                 	db	194
  1321   00DD8A  09                 	db	9
  1322   00DD8B  E6                 	db	230
  1323   00DD8C  78                 	db	120
  1324   00DD8D  07                 	db	7
  1325   00DD8E  07                 	db	7
  1326   00DD8F  07                 	db	7
  1327   00DD90  80                 	db	128
  1328   00DD91  DA                 	db	218
  1329   00DD92  09                 	db	9
  1330   00DD93  E6                 	db	230
  1331   00DD94  80                 	db	128
  1332   00DD95  DA                 	db	218
  1333   00DD96  09                 	db	9
  1334   00DD97  E6                 	db	230
  1335   00DD98  82                 	db	130
  1336   00DD99  DA                 	db	218
  1337   00DD9A  09                 	db	9
  1338   00DD9B  E6                 	db	230
  1339   00DD9C  47                 	db	71
  1340   00DD9D  0D                 	db	13
  1341   00DD9E  C2                 	db	194
  1342   00DD9F  08                 	db	8
  1343   00DDA0  E8                 	db	232
  1344   00DDA1  C9                 	db	201
  1345   00DDA2  7E                 	db	126
  1346   00DDA3  FE                 	db	254
  1347   00DDA4  20                 	db	32
  1348   00DDA5  C2                 	db	194
  1349   00DDA6  09                 	db	9
  1350   00DDA7  E6                 	db	230
  1351   00DDA8  23                 	db	35
  1352   00DDA9  0D                 	db	13
  1353   00DDAA  C2                 	db	194
  1354   00DDAB  33                 	db	51
  1355   00DDAC  E8                 	db	232
  1356   00DDAD  78                 	db	120
  1357   00DDAE  C9                 	db	201
  1358   00DDAF  06                 	db	6
  1359   00DDB0  03                 	db	3
  1360   00DDB1  7E                 	db	126
  1361   00DDB2  12                 	db	18
  1362   00DDB3  23                 	db	35
  1363   00DDB4  13                 	db	19
  1364   00DDB5  05                 	db	5
  1365   00DDB6  C2                 	db	194
  1366   00DDB7  42                 	db	66
  1367   00DDB8  E8                 	db	232
  1368   00DDB9  C9                 	db	201
  1369   00DDBA  21                 	db	33
  1370   00DDBB  80                 	db	128
  1371   00DDBC  00                 	db	0
  1372   00DDBD  81                 	db	129
  1373   00DDBE  CD                 	db	205
  1374   00DDBF  59                 	db	89
  1375   00DDC0  E6                 	db	230
  1376   00DDC1  7E                 	db	126
  1377   00DDC2  C9                 	db	201
  1378   00DDC3  AF                 	db	175
  1379   00DDC4  32                 	db	50
  1380   00DDC5  CD                 	db	205
  1381   00DDC6  EB                 	db	235
  1382   00DDC7  3A                 	db	58
  1383   00DDC8  F0                 	db	240
  1384   00DDC9  EB                 	db	235
  1385   00DDCA  B7                 	db	183
  1386   00DDCB  C8                 	db	200
  1387   00DDCC  3D                 	db	61
  1388   00DDCD  21                 	db	33
  1389   00DDCE  EF                 	db	239
  1390   00DDCF  EB                 	db	235
  1391   00DDD0  BE                 	db	190
  1392   00DDD1  C8                 	db	200
  1393   00DDD2  C3                 	db	195
  1394   00DDD3  BD                 	db	189
  1395   00DDD4  E4                 	db	228
  1396   00DDD5  3A                 	db	58
  1397   00DDD6  F0                 	db	240
  1398   00DDD7  EB                 	db	235
  1399   00DDD8  B7                 	db	183
  1400   00DDD9  C8                 	db	200
  1401   00DDDA  3D                 	db	61
  1402   00DDDB  21                 	db	33
  1403   00DDDC  EF                 	db	239
  1404   00DDDD  EB                 	db	235
  1405   00DDDE  BE                 	db	190
  1406   00DDDF  C8                 	db	200
  1407   00DDE0  3A                 	db	58
  1408   00DDE1  EF                 	db	239
  1409   00DDE2  EB                 	db	235
  1410   00DDE3  C3                 	db	195
  1411   00DDE4  BD                 	db	189
  1412   00DDE5  E4                 	db	228
  1413   00DDE6  CD                 	db	205
  1414   00DDE7  5E                 	db	94
  1415   00DDE8  E6                 	db	230
  1416   00DDE9  CD                 	db	205
  1417   00DDEA  54                 	db	84
  1418   00DDEB  E8                 	db	232
  1419   00DDEC  21                 	db	33
  1420   00DDED  CE                 	db	206
  1421   00DDEE  EB                 	db	235
  1422   00DDEF  7E                 	db	126
  1423   00DDF0  FE                 	db	254
  1424   00DDF1  20                 	db	32
  1425   00DDF2  C2                 	db	194
  1426   00DDF3  8F                 	db	143
  1427   00DDF4  E8                 	db	232
  1428   00DDF5  06                 	db	6
  1429   00DDF6  0B                 	db	11
  1430   00DDF7  36                 	db	54
  1431   00DDF8  3F                 	db	63
  1432   00DDF9  23                 	db	35
  1433   00DDFA  05                 	db	5
  1434   00DDFB  C2                 	db	194
  1435   00DDFC  88                 	db	136
  1436   00DDFD  E8                 	db	232
  1437   00DDFE  1E                 	db	30
  1438   00DDFF  00                 	db	0
  1439   00DE00  D5                 	db	213
  1440   00DE01  CD                 	db	205
  1441   00DE02  E9                 	db	233
  1442   00DE03  E4                 	db	228
  1443   00DE04  CC                 	db	204
  1444   00DE05  EA                 	db	234
  1445   00DE06  E7                 	db	231
  1446   00DE07  CA                 	db	202
  1447   00DE08  1B                 	db	27
  1448   00DE09  E9                 	db	233
  1449   00DE0A  3A                 	db	58
  1450   00DE0B  EE                 	db	238
  1451   00DE0C  EB                 	db	235
  1452   00DE0D  0F                 	db	15
  1453   00DE0E  0F                 	db	15
  1454   00DE0F  0F                 	db	15
  1455   00DE10  E6                 	db	230
  1456   00DE11  60                 	db	96
  1457   00DE12  4F                 	db	79
  1458   00DE13  3E                 	db	62
  1459   00DE14  0A                 	db	10
  1460   00DE15  CD                 	db	205
  1461   00DE16  4B                 	db	75
  1462   00DE17  E8                 	db	232
  1463   00DE18  17                 	db	23
  1464   00DE19  DA                 	db	218
  1465   00DE1A  0F                 	db	15
  1466   00DE1B  E9                 	db	233
  1467   00DE1C  D1                 	db	209
  1468   00DE1D  7B                 	db	123
  1469   00DE1E  1C                 	db	28
  1470   00DE1F  D5                 	db	213
  1471   00DE20  E6                 	db	230
  1472   00DE21  03                 	db	3
  1473   00DE22  F5                 	db	245
  1474   00DE23  C2                 	db	194
  1475   00DE24  CC                 	db	204
  1476   00DE25  E8                 	db	232
  1477   00DE26  CD                 	db	205
  1478   00DE27  98                 	db	152
  1479   00DE28  E4                 	db	228
  1480   00DE29  C5                 	db	197
  1481   00DE2A  CD                 	db	205
  1482   00DE2B  D0                 	db	208
  1483   00DE2C  E5                 	db	229
  1484   00DE2D  C1                 	db	193
  1485   00DE2E  C6                 	db	198
  1486   00DE2F  41                 	db	65
  1487   00DE30  CD                 	db	205
  1488   00DE31  92                 	db	146
  1489   00DE32  E4                 	db	228
  1490   00DE33  3E                 	db	62
  1491   00DE34  3A                 	db	58
  1492   00DE35  CD                 	db	205
  1493   00DE36  92                 	db	146
  1494   00DE37  E4                 	db	228
  1495   00DE38  C3                 	db	195
  1496   00DE39  D4                 	db	212
  1497   00DE3A  E8                 	db	232
  1498   00DE3B  CD                 	db	205
  1499   00DE3C  A2                 	db	162
  1500   00DE3D  E4                 	db	228
  1501   00DE3E  3E                 	db	62
  1502   00DE3F  3A                 	db	58
  1503   00DE40  CD                 	db	205
  1504   00DE41  92                 	db	146
  1505   00DE42  E4                 	db	228
  1506   00DE43  CD                 	db	205
  1507   00DE44  A2                 	db	162
  1508   00DE45  E4                 	db	228
  1509   00DE46  06                 	db	6
  1510   00DE47  01                 	db	1
  1511   00DE48  78                 	db	120
  1512   00DE49  CD                 	db	205
  1513   00DE4A  4B                 	db	75
  1514   00DE4B  E8                 	db	232
  1515   00DE4C  E6                 	db	230
  1516   00DE4D  7F                 	db	127
  1517   00DE4E  FE                 	db	254
  1518   00DE4F  20                 	db	32
  1519   00DE50  C2                 	db	194
  1520   00DE51  F9                 	db	249
  1521   00DE52  E8                 	db	232
  1522   00DE53  F1                 	db	241
  1523   00DE54  F5                 	db	245
  1524   00DE55  FE                 	db	254
  1525   00DE56  03                 	db	3
  1526   00DE57  C2                 	db	194
  1527   00DE58  F7                 	db	247
  1528   00DE59  E8                 	db	232
  1529   00DE5A  3E                 	db	62
  1530   00DE5B  09                 	db	9
  1531   00DE5C  CD                 	db	205
  1532   00DE5D  4B                 	db	75
  1533   00DE5E  E8                 	db	232
  1534   00DE5F  E6                 	db	230
  1535   00DE60  7F                 	db	127
  1536   00DE61  FE                 	db	254
  1537   00DE62  20                 	db	32
  1538   00DE63  CA                 	db	202
  1539   00DE64  0E                 	db	14
  1540   00DE65  E9                 	db	233
  1541   00DE66  3E                 	db	62
  1542   00DE67  20                 	db	32
  1543   00DE68  CD                 	db	205
  1544   00DE69  92                 	db	146
  1545   00DE6A  E4                 	db	228
  1546   00DE6B  04                 	db	4
  1547   00DE6C  78                 	db	120
  1548   00DE6D  FE                 	db	254
  1549   00DE6E  0C                 	db	12
  1550   00DE6F  D2                 	db	210
  1551   00DE70  0E                 	db	14
  1552   00DE71  E9                 	db	233
  1553   00DE72  FE                 	db	254
  1554   00DE73  09                 	db	9
  1555   00DE74  C2                 	db	194
  1556   00DE75  D9                 	db	217
  1557   00DE76  E8                 	db	232
  1558   00DE77  CD                 	db	205
  1559   00DE78  A2                 	db	162
  1560   00DE79  E4                 	db	228
  1561   00DE7A  C3                 	db	195
  1562   00DE7B  D9                 	db	217
  1563   00DE7C  E8                 	db	232
  1564   00DE7D  F1                 	db	241
  1565   00DE7E  CD                 	db	205
  1566   00DE7F  C2                 	db	194
  1567   00DE80  E5                 	db	229
  1568   00DE81  C2                 	db	194
  1569   00DE82  1B                 	db	27
  1570   00DE83  E9                 	db	233
  1571   00DE84  CD                 	db	205
  1572   00DE85  E4                 	db	228
  1573   00DE86  E4                 	db	228
  1574   00DE87  C3                 	db	195
  1575   00DE88  98                 	db	152
  1576   00DE89  E8                 	db	232
  1577   00DE8A  D1                 	db	209
  1578   00DE8B  C3                 	db	195
  1579   00DE8C  86                 	db	134
  1580   00DE8D  EB                 	db	235
  1581   00DE8E  CD                 	db	205
  1582   00DE8F  5E                 	db	94
  1583   00DE90  E6                 	db	230
  1584   00DE91  FE                 	db	254
  1585   00DE92  0B                 	db	11
  1586   00DE93  C2                 	db	194
  1587   00DE94  42                 	db	66
  1588   00DE95  E9                 	db	233
  1589   00DE96  01                 	db	1
  1590   00DE97  52                 	db	82
  1591   00DE98  E9                 	db	233
  1592   00DE99  CD                 	db	205
  1593   00DE9A  A7                 	db	167
  1594   00DE9B  E4                 	db	228
  1595   00DE9C  CD                 	db	205
  1596   00DE9D  39                 	db	57
  1597   00DE9E  E5                 	db	229
  1598   00DE9F  21                 	db	33
  1599   00DEA0  07                 	db	7
  1600   00DEA1  E4                 	db	228
  1601   00DEA2  35                 	db	53
  1602   00DEA3  C2                 	db	194
  1603   00DEA4  82                 	db	130
  1604   00DEA5  E7                 	db	231
  1605   00DEA6  23                 	db	35
  1606   00DEA7  7E                 	db	126
  1607   00DEA8  FE                 	db	254
  1608   00DEA9  59                 	db	89
  1609   00DEAA  C2                 	db	194
  1610   00DEAB  82                 	db	130
  1611   00DEAC  E7                 	db	231
  1612   00DEAD  23                 	db	35
  1613   00DEAE  22                 	db	34
  1614   00DEAF  88                 	db	136
  1615   00DEB0  E4                 	db	228
  1616   00DEB1  CD                 	db	205
  1617   00DEB2  54                 	db	84
  1618   00DEB3  E8                 	db	232
  1619   00DEB4  11                 	db	17
  1620   00DEB5  CD                 	db	205
  1621   00DEB6  EB                 	db	235
  1622   00DEB7  CD                 	db	205
  1623   00DEB8  EF                 	db	239
  1624   00DEB9  E4                 	db	228
  1625   00DEBA  3C                 	db	60
  1626   00DEBB  CC                 	db	204
  1627   00DEBC  EA                 	db	234
  1628   00DEBD  E7                 	db	231
  1629   00DEBE  C3                 	db	195
  1630   00DEBF  86                 	db	134
  1631   00DEC0  EB                 	db	235
  1632   00DEC1  41                 	db	65
  1633   00DEC2  6C                 	db	108
  1634   00DEC3  6C                 	db	108
  1635   00DEC4  20                 	db	32
  1636   00DEC5  28                 	db	40
  1637   00DEC6  79                 	db	121
  1638   00DEC7  2F                 	db	47
  1639   00DEC8  6E                 	db	110
  1640   00DEC9  29                 	db	41
  1641   00DECA  3F                 	db	63
  1642   00DECB  00                 	db	0
  1643   00DECC  CD                 	db	205
  1644   00DECD  5E                 	db	94
  1645   00DECE  E6                 	db	230
  1646   00DECF  C2                 	db	194
  1647   00DED0  09                 	db	9
  1648   00DED1  E6                 	db	230
  1649   00DED2  CD                 	db	205
  1650   00DED3  54                 	db	84
  1651   00DED4  E8                 	db	232
  1652   00DED5  CD                 	db	205
  1653   00DED6  D0                 	db	208
  1654   00DED7  E4                 	db	228
  1655   00DED8  CA                 	db	202
  1656   00DED9  A7                 	db	167
  1657   00DEDA  E9                 	db	233
  1658   00DEDB  CD                 	db	205
  1659   00DEDC  98                 	db	152
  1660   00DEDD  E4                 	db	228
  1661   00DEDE  21                 	db	33
  1662   00DEDF  F1                 	db	241
  1663   00DEE0  EB                 	db	235
  1664   00DEE1  36                 	db	54
  1665   00DEE2  FF                 	db	255
  1666   00DEE3  21                 	db	33
  1667   00DEE4  F1                 	db	241
  1668   00DEE5  EB                 	db	235
  1669   00DEE6  7E                 	db	126
  1670   00DEE7  FE                 	db	254
  1671   00DEE8  80                 	db	128
  1672   00DEE9  DA                 	db	218
  1673   00DEEA  87                 	db	135
  1674   00DEEB  E9                 	db	233
  1675   00DEEC  E5                 	db	229
  1676   00DEED  CD                 	db	205
  1677   00DEEE  FE                 	db	254
  1678   00DEEF  E4                 	db	228
  1679   00DEF0  E1                 	db	225
  1680   00DEF1  C2                 	db	194
  1681   00DEF2  A0                 	db	160
  1682   00DEF3  E9                 	db	233
  1683   00DEF4  AF                 	db	175
  1684   00DEF5  77                 	db	119
  1685   00DEF6  34                 	db	52
  1686   00DEF7  21                 	db	33
  1687   00DEF8  80                 	db	128
  1688   00DEF9  00                 	db	0
  1689   00DEFA  CD                 	db	205
  1690   00DEFB  59                 	db	89
  1691   00DEFC  E6                 	db	230
  1692   00DEFD  7E                 	db	126
  1693   00DEFE  FE                 	db	254
  1694   00DEFF  1A                 	db	26
  1695   00DF00  CA                 	db	202
  1696   00DF01  86                 	db	134
  1697   00DF02  EB                 	db	235
  1698   00DF03  CD                 	db	205
  1699   00DF04  8C                 	db	140
  1700   00DF05  E4                 	db	228
  1701   00DF06  CD                 	db	205
  1702   00DF07  C2                 	db	194
  1703   00DF08  E5                 	db	229
  1704   00DF09  C2                 	db	194
  1705   00DF0A  86                 	db	134
  1706   00DF0B  EB                 	db	235
  1707   00DF0C  C3                 	db	195
  1708   00DF0D  74                 	db	116
  1709   00DF0E  E9                 	db	233
  1710   00DF0F  3D                 	db	61
  1711   00DF10  CA                 	db	202
  1712   00DF11  86                 	db	134
  1713   00DF12  EB                 	db	235
  1714   00DF13  CD                 	db	205
  1715   00DF14  D9                 	db	217
  1716   00DF15  E7                 	db	231
  1717   00DF16  CD                 	db	205
  1718   00DF17  66                 	db	102
  1719   00DF18  E8                 	db	232
  1720   00DF19  C3                 	db	195
  1721   00DF1A  09                 	db	9
  1722   00DF1B  E6                 	db	230
  1723   00DF1C  CD                 	db	205
  1724   00DF1D  F8                 	db	248
  1725   00DF1E  E7                 	db	231
  1726   00DF1F  F5                 	db	245
  1727   00DF20  CD                 	db	205
  1728   00DF21  5E                 	db	94
  1729   00DF22  E6                 	db	230
  1730   00DF23  C2                 	db	194
  1731   00DF24  09                 	db	9
  1732   00DF25  E6                 	db	230
  1733   00DF26  CD                 	db	205
  1734   00DF27  54                 	db	84
  1735   00DF28  E8                 	db	232
  1736   00DF29  11                 	db	17
  1737   00DF2A  CD                 	db	205
  1738   00DF2B  EB                 	db	235
  1739   00DF2C  D5                 	db	213
  1740   00DF2D  CD                 	db	205
  1741   00DF2E  EF                 	db	239
  1742   00DF2F  E4                 	db	228
  1743   00DF30  D1                 	db	209
  1744   00DF31  CD                 	db	205
  1745   00DF32  09                 	db	9
  1746   00DF33  E5                 	db	229
  1747   00DF34  CA                 	db	202
  1748   00DF35  FB                 	db	251
  1749   00DF36  E9                 	db	233
  1750   00DF37  AF                 	db	175
  1751   00DF38  32                 	db	50
  1752   00DF39  ED                 	db	237
  1753   00DF3A  EB                 	db	235
  1754   00DF3B  F1                 	db	241
  1755   00DF3C  6F                 	db	111
  1756   00DF3D  26                 	db	38
  1757   00DF3E  00                 	db	0
  1758   00DF3F  29                 	db	41
  1759   00DF40  11                 	db	17
  1760   00DF41  00                 	db	0
  1761   00DF42  01                 	db	1
  1762   00DF43  7C                 	db	124
  1763   00DF44  B5                 	db	181
  1764   00DF45  CA                 	db	202
  1765   00DF46  F1                 	db	241
  1766   00DF47  E9                 	db	233
  1767   00DF48  2B                 	db	43
  1768   00DF49  E5                 	db	229
  1769   00DF4A  21                 	db	33
  1770   00DF4B  80                 	db	128
  1771   00DF4C  00                 	db	0
  1772   00DF4D  19                 	db	25
  1773   00DF4E  E5                 	db	229
  1774   00DF4F  CD                 	db	205
  1775   00DF50  D8                 	db	216
  1776   00DF51  E5                 	db	229
  1777   00DF52  11                 	db	17
  1778   00DF53  CD                 	db	205
  1779   00DF54  EB                 	db	235
  1780   00DF55  CD                 	db	205
  1781   00DF56  04                 	db	4
  1782   00DF57  E5                 	db	229
  1783   00DF58  D1                 	db	209
  1784   00DF59  E1                 	db	225
  1785   00DF5A  C2                 	db	194
  1786   00DF5B  FB                 	db	251
  1787   00DF5C  E9                 	db	233
  1788   00DF5D  C3                 	db	195
  1789   00DF5E  D4                 	db	212
  1790   00DF5F  E9                 	db	233
  1791   00DF60  11                 	db	17
  1792   00DF61  CD                 	db	205
  1793   00DF62  EB                 	db	235
  1794   00DF63  CD                 	db	205
  1795   00DF64  DA                 	db	218
  1796   00DF65  E4                 	db	228
  1797   00DF66  3C                 	db	60
  1798   00DF67  C2                 	db	194
  1799   00DF68  01                 	db	1
  1800   00DF69  EA                 	db	234
  1801   00DF6A  01                 	db	1
  1802   00DF6B  07                 	db	7
  1803   00DF6C  EA                 	db	234
  1804   00DF6D  CD                 	db	205
  1805   00DF6E  A7                 	db	167
  1806   00DF6F  E4                 	db	228
  1807   00DF70  CD                 	db	205
  1808   00DF71  D5                 	db	213
  1809   00DF72  E5                 	db	229
  1810   00DF73  C3                 	db	195
  1811   00DF74  86                 	db	134
  1812   00DF75  EB                 	db	235
  1813   00DF76  4E                 	db	78
  1814   00DF77  6F                 	db	111
  1815   00DF78  20                 	db	32
  1816   00DF79  73                 	db	115
  1817   00DF7A  70                 	db	112
  1818   00DF7B  61                 	db	97
  1819   00DF7C  63                 	db	99
  1820   00DF7D  65                 	db	101
  1821   00DF7E  00                 	db	0
  1822   00DF7F  CD                 	db	205
  1823   00DF80  5E                 	db	94
  1824   00DF81  E6                 	db	230
  1825   00DF82  C2                 	db	194
  1826   00DF83  09                 	db	9
  1827   00DF84  E6                 	db	230
  1828   00DF85  3A                 	db	58
  1829   00DF86  F0                 	db	240
  1830   00DF87  EB                 	db	235
  1831   00DF88  F5                 	db	245
  1832   00DF89  CD                 	db	205
  1833   00DF8A  54                 	db	84
  1834   00DF8B  E8                 	db	232
  1835   00DF8C  CD                 	db	205
  1836   00DF8D  E9                 	db	233
  1837   00DF8E  E4                 	db	228
  1838   00DF8F  C2                 	db	194
  1839   00DF90  79                 	db	121
  1840   00DF91  EA                 	db	234
  1841   00DF92  21                 	db	33
  1842   00DF93  CD                 	db	205
  1843   00DF94  EB                 	db	235
  1844   00DF95  11                 	db	17
  1845   00DF96  DD                 	db	221
  1846   00DF97  EB                 	db	235
  1847   00DF98  06                 	db	6
  1848   00DF99  10                 	db	16
  1849   00DF9A  CD                 	db	205
  1850   00DF9B  42                 	db	66
  1851   00DF9C  E8                 	db	232
  1852   00DF9D  2A                 	db	42
  1853   00DF9E  88                 	db	136
  1854   00DF9F  E4                 	db	228
  1855   00DFA0  EB                 	db	235
  1856   00DFA1  CD                 	db	205
  1857   00DFA2  4F                 	db	79
  1858   00DFA3  E6                 	db	230
  1859   00DFA4  FE                 	db	254
  1860   00DFA5  3D                 	db	61
  1861   00DFA6  CA                 	db	202
  1862   00DFA7  3F                 	db	63
  1863   00DFA8  EA                 	db	234
  1864   00DFA9  FE                 	db	254
  1865   00DFAA  5F                 	db	95
  1866   00DFAB  C2                 	db	194
  1867   00DFAC  73                 	db	115
  1868   00DFAD  EA                 	db	234
  1869   00DFAE  EB                 	db	235
  1870   00DFAF  23                 	db	35
  1871   00DFB0  22                 	db	34
  1872   00DFB1  88                 	db	136
  1873   00DFB2  E4                 	db	228
  1874   00DFB3  CD                 	db	205
  1875   00DFB4  5E                 	db	94
  1876   00DFB5  E6                 	db	230
  1877   00DFB6  C2                 	db	194
  1878   00DFB7  73                 	db	115
  1879   00DFB8  EA                 	db	234
  1880   00DFB9  F1                 	db	241
  1881   00DFBA  47                 	db	71
  1882   00DFBB  21                 	db	33
  1883   00DFBC  F0                 	db	240
  1884   00DFBD  EB                 	db	235
  1885   00DFBE  7E                 	db	126
  1886   00DFBF  B7                 	db	183
  1887   00DFC0  CA                 	db	202
  1888   00DFC1  59                 	db	89
  1889   00DFC2  EA                 	db	234
  1890   00DFC3  B8                 	db	184
  1891   00DFC4  70                 	db	112
  1892   00DFC5  C2                 	db	194
  1893   00DFC6  73                 	db	115
  1894   00DFC7  EA                 	db	234
  1895   00DFC8  70                 	db	112
  1896   00DFC9  AF                 	db	175
  1897   00DFCA  32                 	db	50
  1898   00DFCB  CD                 	db	205
  1899   00DFCC  EB                 	db	235
  1900   00DFCD  CD                 	db	205
  1901   00DFCE  E9                 	db	233
  1902   00DFCF  E4                 	db	228
  1903   00DFD0  CA                 	db	202
  1904   00DFD1  6D                 	db	109
  1905   00DFD2  EA                 	db	234
  1906   00DFD3  11                 	db	17
  1907   00DFD4  CD                 	db	205
  1908   00DFD5  EB                 	db	235
  1909   00DFD6  CD                 	db	205
  1910   00DFD7  0E                 	db	14
  1911   00DFD8  E5                 	db	229
  1912   00DFD9  C3                 	db	195
  1913   00DFDA  86                 	db	134
  1914   00DFDB  EB                 	db	235
  1915   00DFDC  CD                 	db	205
  1916   00DFDD  EA                 	db	234
  1917   00DFDE  E7                 	db	231
  1918   00DFDF  C3                 	db	195
  1919   00DFE0  86                 	db	134
  1920   00DFE1  EB                 	db	235
  1921   00DFE2  CD                 	db	205
  1922   00DFE3  66                 	db	102
  1923   00DFE4  E8                 	db	232
  1924   00DFE5  C3                 	db	195
  1925   00DFE6  09                 	db	9
  1926   00DFE7  E6                 	db	230
  1927   00DFE8  01                 	db	1
  1928   00DFE9  82                 	db	130
  1929   00DFEA  EA                 	db	234
  1930   00DFEB  CD                 	db	205
  1931   00DFEC  A7                 	db	167
  1932   00DFED  E4                 	db	228
  1933   00DFEE  C3                 	db	195
  1934   00DFEF  86                 	db	134
  1935   00DFF0  EB                 	db	235
  1936   00DFF1  46                 	db	70
  1937   00DFF2  69                 	db	105
  1938   00DFF3  6C                 	db	108
  1939   00DFF4  65                 	db	101
  1940   00DFF5  20                 	db	32
  1941   00DFF6  65                 	db	101
  1942   00DFF7  78                 	db	120
  1943   00DFF8  69                 	db	105
  1944   00DFF9  73                 	db	115
  1945   00DFFA  74                 	db	116
  1946   00DFFB  73                 	db	115
  1947   00DFFC  00                 	db	0
  1948   00DFFD  CD                 	db	205
  1949   00DFFE  F8                 	db	248
  1950   00DFFF  E7                 	db	231
  1951   00E000  FE                 	db	254
  1952   00E001  10                 	db	16
  1953   00E002  D2                 	db	210
  1954   00E003  09                 	db	9
  1955   00E004  E6                 	db	230
  1956   00E005  5F                 	db	95
  1957   00E006  3A                 	db	58
  1958   00E007  CE                 	db	206
  1959   00E008  EB                 	db	235
  1960   00E009  FE                 	db	254
  1961   00E00A  20                 	db	32
  1962   00E00B  CA                 	db	202
  1963   00E00C  09                 	db	9
  1964   00E00D  E6                 	db	230
  1965   00E00E  CD                 	db	205
  1966   00E00F  15                 	db	21
  1967   00E010  E5                 	db	229
  1968   00E011  C3                 	db	195
  1969   00E012  89                 	db	137
  1970   00E013  EB                 	db	235
  1971   00E014  CD                 	db	205
  1972   00E015  F5                 	db	245
  1973   00E016  E5                 	db	229
  1974   00E017  3A                 	db	58
  1975   00E018  CE                 	db	206
  1976   00E019  EB                 	db	235
  1977   00E01A  FE                 	db	254
  1978   00E01B  20                 	db	32
  1979   00E01C  C2                 	db	194
  1980   00E01D  C4                 	db	196
  1981   00E01E  EA                 	db	234
  1982   00E01F  3A                 	db	58
  1983   00E020  F0                 	db	240
  1984   00E021  EB                 	db	235
  1985   00E022  B7                 	db	183
  1986   00E023  CA                 	db	202
  1987   00E024  89                 	db	137
  1988   00E025  EB                 	db	235
  1989   00E026  3D                 	db	61
  1990   00E027  32                 	db	50
  1991   00E028  EF                 	db	239
  1992   00E029  EB                 	db	235
  1993   00E02A  CD                 	db	205
  1994   00E02B  29                 	db	41
  1995   00E02C  E5                 	db	229
  1996   00E02D  CD                 	db	205
  1997   00E02E  BD                 	db	189
  1998   00E02F  E4                 	db	228
  1999   00E030  C3                 	db	195
  2000   00E031  89                 	db	137
  2001   00E032  EB                 	db	235
  2002   00E033  11                 	db	17
  2003   00E034  D6                 	db	214
  2004   00E035  EB                 	db	235
  2005   00E036  1A                 	db	26
  2006   00E037  FE                 	db	254
  2007   00E038  20                 	db	32
  2008   00E039  C2                 	db	194
  2009   00E03A  09                 	db	9
  2010   00E03B  E6                 	db	230
  2011   00E03C  D5                 	db	213
  2012   00E03D  CD                 	db	205
  2013   00E03E  54                 	db	84
  2014   00E03F  E8                 	db	232
  2015   00E040  D1                 	db	209
  2016   00E041  21                 	db	33
  2017   00E042  83                 	db	131
  2018   00E043  EB                 	db	235
  2019   00E044  CD                 	db	205
  2020   00E045  40                 	db	64
  2021   00E046  E8                 	db	232
  2022   00E047  CD                 	db	205
  2023   00E048  D0                 	db	208
  2024   00E049  E4                 	db	228
  2025   00E04A  CA                 	db	202
  2026   00E04B  6B                 	db	107
  2027   00E04C  EB                 	db	235
  2028   00E04D  21                 	db	33
  2029   00E04E  00                 	db	0
  2030   00E04F  01                 	db	1
  2031   00E050  E5                 	db	229
  2032   00E051  EB                 	db	235
  2033   00E052  CD                 	db	205
  2034   00E053  D8                 	db	216
  2035   00E054  E5                 	db	229
  2036   00E055  11                 	db	17
  2037   00E056  CD                 	db	205
  2038   00E057  EB                 	db	235
  2039   00E058  CD                 	db	205
  2040   00E059  F9                 	db	249
  2041   00E05A  E4                 	db	228
  2042   00E05B  C2                 	db	194
  2043   00E05C  01                 	db	1
  2044   00E05D  EB                 	db	235
  2045   00E05E  E1                 	db	225
  2046   00E05F  11                 	db	17
  2047   00E060  80                 	db	128
  2048   00E061  00                 	db	0
  2049   00E062  19                 	db	25
  2050   00E063  11                 	db	17
  2051   00E064  00                 	db	0
  2052   00E065  E4                 	db	228
  2053   00E066  7D                 	db	125
  2054   00E067  93                 	db	147
  2055   00E068  7C                 	db	124
  2056   00E069  9A                 	db	154
  2057   00E06A  D2                 	db	210
  2058   00E06B  71                 	db	113
  2059   00E06C  EB                 	db	235
  2060   00E06D  C3                 	db	195
  2061   00E06E  E1                 	db	225
  2062   00E06F  EA                 	db	234
  2063   00E070  E1                 	db	225
  2064   00E071  3D                 	db	61
  2065   00E072  C2                 	db	194
  2066   00E073  71                 	db	113
  2067   00E074  EB                 	db	235
  2068   00E075  CD                 	db	205
  2069   00E076  66                 	db	102
  2070   00E077  E8                 	db	232
  2071   00E078  CD                 	db	205
  2072   00E079  5E                 	db	94
  2073   00E07A  E6                 	db	230
  2074   00E07B  21                 	db	33
  2075   00E07C  F0                 	db	240
  2076   00E07D  EB                 	db	235
  2077   00E07E  E5                 	db	229
  2078   00E07F  7E                 	db	126
  2079   00E080  32                 	db	50
  2080   00E081  CD                 	db	205
  2081   00E082  EB                 	db	235
  2082   00E083  3E                 	db	62
  2083   00E084  10                 	db	16
  2084   00E085  CD                 	db	205
  2085   00E086  60                 	db	96
  2086   00E087  E6                 	db	230
  2087   00E088  E1                 	db	225
  2088   00E089  7E                 	db	126
  2089   00E08A  32                 	db	50
  2090   00E08B  DD                 	db	221
  2091   00E08C  EB                 	db	235
  2092   00E08D  AF                 	db	175
  2093   00E08E  32                 	db	50
  2094   00E08F  ED                 	db	237
  2095   00E090  EB                 	db	235
  2096   00E091  11                 	db	17
  2097   00E092  5C                 	db	92
  2098   00E093  00                 	db	0
  2099   00E094  21                 	db	33
  2100   00E095  CD                 	db	205
  2101   00E096  EB                 	db	235
  2102   00E097  06                 	db	6
  2103   00E098  21                 	db	33
  2104   00E099  CD                 	db	205
  2105   00E09A  42                 	db	66
  2106   00E09B  E8                 	db	232
  2107   00E09C  21                 	db	33
  2108   00E09D  08                 	db	8
  2109   00E09E  E4                 	db	228
  2110   00E09F  7E                 	db	126
  2111   00E0A0  B7                 	db	183
  2112   00E0A1  CA                 	db	202
  2113   00E0A2  3E                 	db	62
  2114   00E0A3  EB                 	db	235
  2115   00E0A4  FE                 	db	254
  2116   00E0A5  20                 	db	32
  2117   00E0A6  CA                 	db	202
  2118   00E0A7  3E                 	db	62
  2119   00E0A8  EB                 	db	235
  2120   00E0A9  23                 	db	35
  2121   00E0AA  C3                 	db	195
  2122   00E0AB  30                 	db	48
  2123   00E0AC  EB                 	db	235
  2124   00E0AD  06                 	db	6
  2125   00E0AE  00                 	db	0
  2126   00E0AF  11                 	db	17
  2127   00E0B0  81                 	db	129
  2128   00E0B1  00                 	db	0
  2129   00E0B2  7E                 	db	126
  2130   00E0B3  12                 	db	18
  2131   00E0B4  B7                 	db	183
  2132   00E0B5  CA                 	db	202
  2133   00E0B6  4F                 	db	79
  2134   00E0B7  EB                 	db	235
  2135   00E0B8  04                 	db	4
  2136   00E0B9  23                 	db	35
  2137   00E0BA  13                 	db	19
  2138   00E0BB  C3                 	db	195
  2139   00E0BC  43                 	db	67
  2140   00E0BD  EB                 	db	235
  2141   00E0BE  78                 	db	120
  2142   00E0BF  32                 	db	50
  2143   00E0C0  80                 	db	128
  2144   00E0C1  00                 	db	0
  2145   00E0C2  CD                 	db	205
  2146   00E0C3  98                 	db	152
  2147   00E0C4  E4                 	db	228
  2148   00E0C5  CD                 	db	205
  2149   00E0C6  D5                 	db	213
  2150   00E0C7  E5                 	db	229
  2151   00E0C8  CD                 	db	205
  2152   00E0C9  1A                 	db	26
  2153   00E0CA  E5                 	db	229
  2154   00E0CB  CD                 	db	205
  2155   00E0CC  00                 	db	0
  2156   00E0CD  01                 	db	1
  2157   00E0CE  31                 	db	49
  2158   00E0CF  AB                 	db	171
  2159   00E0D0  EB                 	db	235
  2160   00E0D1  CD                 	db	205
  2161   00E0D2  29                 	db	41
  2162   00E0D3  E5                 	db	229
  2163   00E0D4  CD                 	db	205
  2164   00E0D5  BD                 	db	189
  2165   00E0D6  E4                 	db	228
  2166   00E0D7  C3                 	db	195
  2167   00E0D8  82                 	db	130
  2168   00E0D9  E7                 	db	231
  2169   00E0DA  CD                 	db	205
  2170   00E0DB  66                 	db	102
  2171   00E0DC  E8                 	db	232
  2172   00E0DD  C3                 	db	195
  2173   00E0DE  09                 	db	9
  2174   00E0DF  E6                 	db	230
  2175   00E0E0  01                 	db	1
  2176   00E0E1  7A                 	db	122
  2177   00E0E2  EB                 	db	235
  2178   00E0E3  CD                 	db	205
  2179   00E0E4  A7                 	db	167
  2180   00E0E5  E4                 	db	228
  2181   00E0E6  C3                 	db	195
  2182   00E0E7  86                 	db	134
  2183   00E0E8  EB                 	db	235
  2184   00E0E9  42                 	db	66
  2185   00E0EA  61                 	db	97
  2186   00E0EB  64                 	db	100
  2187   00E0EC  20                 	db	32
  2188   00E0ED  6C                 	db	108
  2189   00E0EE  6F                 	db	111
  2190   00E0EF  61                 	db	97
  2191   00E0F0  64                 	db	100
  2192   00E0F1  00                 	db	0
  2193   00E0F2  43                 	db	67
  2194   00E0F3  4F                 	db	79
  2195   00E0F4  4D                 	db	77
  2196   00E0F5  CD                 	db	205
  2197   00E0F6  66                 	db	102
  2198   00E0F7  E8                 	db	232
  2199   00E0F8  CD                 	db	205
  2200   00E0F9  5E                 	db	94
  2201   00E0FA  E6                 	db	230
  2202   00E0FB  3A                 	db	58
  2203   00E0FC  CE                 	db	206
  2204   00E0FD  EB                 	db	235
  2205   00E0FE  D6                 	db	214
  2206   00E0FF  20                 	db	32
  2207   00E100  21                 	db	33
  2208   00E101  F0                 	db	240
  2209   00E102  EB                 	db	235
  2210   00E103  B6                 	db	182
  2211   00E104  C2                 	db	194
  2212   00E105  09                 	db	9
  2213   00E106  E6                 	db	230
  2214   00E107  C3                 	db	195
  2215   00E108  82                 	db	130
  2216   00E109  E7                 	db	231
  2217   00E10A  00                 	db	0
  2218   00E10B  00                 	db	0
  2219   00E10C  00                 	db	0
  2220   00E10D  00                 	db	0
  2221   00E10E  00                 	db	0
  2222   00E10F  00                 	db	0
  2223   00E110  00                 	db	0
  2224   00E111  00                 	db	0
  2225   00E112  00                 	db	0
  2226   00E113  00                 	db	0
  2227   00E114  00                 	db	0
  2228   00E115  00                 	db	0
  2229   00E116  00                 	db	0
  2230   00E117  00                 	db	0
  2231   00E118  00                 	db	0
  2232   00E119  00                 	db	0
  2233   00E11A  00                 	db	0
  2234   00E11B  00                 	db	0
  2235   00E11C  24                 	db	36
  2236   00E11D  24                 	db	36
  2237   00E11E  24                 	db	36
  2238   00E11F  20                 	db	32
  2239   00E120  20                 	db	32
  2240   00E121  20                 	db	32
  2241   00E122  20                 	db	32
  2242   00E123  20                 	db	32
  2243   00E124  53                 	db	83
  2244   00E125  55                 	db	85
  2245   00E126  42                 	db	66
  2246   00E127  00                 	db	0
  2247   00E128  00                 	db	0
  2248   00E129  00                 	db	0
  2249   00E12A  00                 	db	0
  2250   00E12B  00                 	db	0
  2251   00E12C  00                 	db	0
  2252   00E12D  00                 	db	0
  2253   00E12E  00                 	db	0
  2254   00E12F  00                 	db	0
  2255   00E130  00                 	db	0
  2256   00E131  00                 	db	0
  2257   00E132  00                 	db	0
  2258   00E133  00                 	db	0
  2259   00E134  00                 	db	0
  2260   00E135  00                 	db	0
  2261   00E136  00                 	db	0
  2262   00E137  00                 	db	0
  2263   00E138  00                 	db	0
  2264   00E139  00                 	db	0
  2265   00E13A  00                 	db	0
  2266   00E13B  00                 	db	0
  2267   00E13C  00                 	db	0
  2268   00E13D  20                 	db	32
  2269   00E13E  20                 	db	32
  2270   00E13F  20                 	db	32
  2271   00E140  20                 	db	32
  2272   00E141  20                 	db	32
  2273   00E142  20                 	db	32
  2274   00E143  20                 	db	32
  2275   00E144  20                 	db	32
  2276   00E145  20                 	db	32
  2277   00E146  20                 	db	32
  2278   00E147  20                 	db	32
  2279   00E148  00                 	db	0
  2280   00E149  00                 	db	0
  2281   00E14A  00                 	db	0
  2282   00E14B  00                 	db	0
  2283   00E14C  00                 	db	0
  2284   00E14D  20                 	db	32
  2285   00E14E  20                 	db	32
  2286   00E14F  20                 	db	32
  2287   00E150  20                 	db	32
  2288   00E151  20                 	db	32
  2289   00E152  20                 	db	32
  2290   00E153  20                 	db	32
  2291   00E154  20                 	db	32
  2292   00E155  20                 	db	32
  2293   00E156  20                 	db	32
  2294   00E157  20                 	db	32
  2295   00E158  00                 	db	0
  2296   00E159  00                 	db	0
  2297   00E15A  00                 	db	0
  2298   00E15B  00                 	db	0
  2299   00E15C  00                 	db	0
  2300   00E15D  00                 	db	0
  2301   00E15E  00                 	db	0
  2302   00E15F  00                 	db	0
  2303   00E160  00                 	db	0
  2304   00E161  00                 	db	0
  2305   00E162  00                 	db	0
  2306   00E163  00                 	db	0
  2307   00E164  00                 	db	0
  2308   00E165  00                 	db	0
  2309   00E166  00                 	db	0
  2310   00E167  00                 	db	0
  2311   00E168  00                 	db	0
  2312   00E169  00                 	db	0
  2313   00E16A  00                 	db	0
  2314   00E16B  00                 	db	0
  2315   00E16C  00                 	db	0
  2316   00E16D  00                 	db	0
  2317   00E16E  00                 	db	0
  2318   00E16F  00                 	db	0
  2319   00E170  16                 	db	22
  2320   00E171  00                 	db	0
  2321   00E172  00                 	db	0
  2322   00E173  00                 	db	0
  2323   00E174  00                 	db	0
  2324   00E175  C3                 	db	195
  2325   00E176  11                 	db	17
  2326   00E177  EC                 	db	236
  2327   00E178  99                 	db	153
  2328   00E179  EC                 	db	236
  2329   00E17A  A5                 	db	165
  2330   00E17B  EC                 	db	236
  2331   00E17C  AB                 	db	171
  2332   00E17D  EC                 	db	236
  2333   00E17E  B1                 	db	177
  2334   00E17F  EC                 	db	236
  2335   00E180  EB                 	db	235
  2336   00E181  22                 	db	34
  2337   00E182  43                 	db	67
  2338   00E183  EF                 	db	239
  2339   00E184  EB                 	db	235
  2340   00E185  7B                 	db	123
  2341   00E186  32                 	db	50
  2342   00E187  D6                 	db	214
  2343   00E188  F9                 	db	249
  2344   00E189  21                 	db	33
  2345   00E18A  00                 	db	0
  2346   00E18B  00                 	db	0
  2347   00E18C  22                 	db	34
  2348   00E18D  45                 	db	69
  2349   00E18E  EF                 	db	239
  2350   00E18F  39                 	db	57
  2351   00E190  22                 	db	34
  2352   00E191  0F                 	db	15
  2353   00E192  EF                 	db	239
  2354   00E193  31                 	db	49
  2355   00E194  41                 	db	65
  2356   00E195  EF                 	db	239
  2357   00E196  AF                 	db	175
  2358   00E197  32                 	db	50
  2359   00E198  E0                 	db	224
  2360   00E199  F9                 	db	249
  2361   00E19A  32                 	db	50
  2362   00E19B  DE                 	db	222
  2363   00E19C  F9                 	db	249
  2364   00E19D  21                 	db	33
  2365   00E19E  74                 	db	116
  2366   00E19F  F9                 	db	249
  2367   00E1A0  E5                 	db	229
  2368   00E1A1  79                 	db	121
  2369   00E1A2  FE                 	db	254
  2370   00E1A3  29                 	db	41
  2371   00E1A4  D0                 	db	208
  2372   00E1A5  4B                 	db	75
  2373   00E1A6  21                 	db	33
  2374   00E1A7  47                 	db	71
  2375   00E1A8  EC                 	db	236
  2376   00E1A9  5F                 	db	95
  2377   00E1AA  16                 	db	22
  2378   00E1AB  00                 	db	0
  2379   00E1AC  19                 	db	25
  2380   00E1AD  19                 	db	25
  2381   00E1AE  5E                 	db	94
  2382   00E1AF  23                 	db	35
  2383   00E1B0  56                 	db	86
  2384   00E1B1  2A                 	db	42
  2385   00E1B2  43                 	db	67
  2386   00E1B3  EF                 	db	239
  2387   00E1B4  EB                 	db	235
  2388   00E1B5  E9                 	db	233
  2389   00E1B6  03                 	db	3
  2390   00E1B7  FA                 	db	250
  2391   00E1B8  C8                 	db	200
  2392   00E1B9  EE                 	db	238
  2393   00E1BA  90                 	db	144
  2394   00E1BB  ED                 	db	237
  2395   00E1BC  CE                 	db	206
  2396   00E1BD  EE                 	db	238
  2397   00E1BE  12                 	db	18
  2398   00E1BF  FA                 	db	250
  2399   00E1C0  0F                 	db	15
  2400   00E1C1  FA                 	db	250
  2401   00E1C2  D4                 	db	212
  2402   00E1C3  EE                 	db	238
  2403   00E1C4  ED                 	db	237
  2404   00E1C5  EE                 	db	238
  2405   00E1C6  F3                 	db	243
  2406   00E1C7  EE                 	db	238
  2407   00E1C8  F8                 	db	248
  2408   00E1C9  EE                 	db	238
  2409   00E1CA  E1                 	db	225
  2410   00E1CB  ED                 	db	237
  2411   00E1CC  FE                 	db	254
  2412   00E1CD  EE                 	db	238
  2413   00E1CE  7E                 	db	126
  2414   00E1CF  F8                 	db	248
  2415   00E1D0  83                 	db	131
  2416   00E1D1  F8                 	db	248
  2417   00E1D2  45                 	db	69
  2418   00E1D3  F8                 	db	248
  2419   00E1D4  9C                 	db	156
  2420   00E1D5  F8                 	db	248
  2421   00E1D6  A5                 	db	165
  2422   00E1D7  F8                 	db	248
  2423   00E1D8  AB                 	db	171
  2424   00E1D9  F8                 	db	248
  2425   00E1DA  C8                 	db	200
  2426   00E1DB  F8                 	db	248
  2427   00E1DC  D7                 	db	215
  2428   00E1DD  F8                 	db	248
  2429   00E1DE  E0                 	db	224
  2430   00E1DF  F8                 	db	248
  2431   00E1E0  E6                 	db	230
  2432   00E1E1  F8                 	db	248
  2433   00E1E2  EC                 	db	236
  2434   00E1E3  F8                 	db	248
  2435   00E1E4  F5                 	db	245
  2436   00E1E5  F8                 	db	248
  2437   00E1E6  FE                 	db	254
  2438   00E1E7  F8                 	db	248
  2439   00E1E8  04                 	db	4
  2440   00E1E9  F9                 	db	249
  2441   00E1EA  0A                 	db	10
  2442   00E1EB  F9                 	db	249
  2443   00E1EC  11                 	db	17
  2444   00E1ED  F9                 	db	249
  2445   00E1EE  2C                 	db	44
  2446   00E1EF  F1                 	db	241
  2447   00E1F0  17                 	db	23
  2448   00E1F1  F9                 	db	249
  2449   00E1F2  1D                 	db	29
  2450   00E1F3  F9                 	db	249
  2451   00E1F4  26                 	db	38
  2452   00E1F5  F9                 	db	249
  2453   00E1F6  2D                 	db	45
  2454   00E1F7  F9                 	db	249
  2455   00E1F8  41                 	db	65
  2456   00E1F9  F9                 	db	249
  2457   00E1FA  47                 	db	71
  2458   00E1FB  F9                 	db	249
  2459   00E1FC  4D                 	db	77
  2460   00E1FD  F9                 	db	249
  2461   00E1FE  0E                 	db	14
  2462   00E1FF  F8                 	db	248
  2463   00E200  53                 	db	83
  2464   00E201  F9                 	db	249
  2465   00E202  04                 	db	4
  2466   00E203  EF                 	db	239
  2467   00E204  04                 	db	4
  2468   00E205  EF                 	db	239
  2469   00E206  9B                 	db	155
  2470   00E207  F9                 	db	249
  2471   00E208  21                 	db	33
  2472   00E209  CA                 	db	202
  2473   00E20A  EC                 	db	236
  2474   00E20B  CD                 	db	205
  2475   00E20C  E5                 	db	229
  2476   00E20D  EC                 	db	236
  2477   00E20E  FE                 	db	254
  2478   00E20F  03                 	db	3
  2479   00E210  CA                 	db	202
  2480   00E211  00                 	db	0
  2481   00E212  00                 	db	0
  2482   00E213  C9                 	db	201
  2483   00E214  21                 	db	33
  2484   00E215  D5                 	db	213
  2485   00E216  EC                 	db	236
  2486   00E217  C3                 	db	195
  2487   00E218  B4                 	db	180
  2488   00E219  EC                 	db	236
  2489   00E21A  21                 	db	33
  2490   00E21B  E1                 	db	225
  2491   00E21C  EC                 	db	236
  2492   00E21D  C3                 	db	195
  2493   00E21E  B4                 	db	180
  2494   00E21F  EC                 	db	236
  2495   00E220  21                 	db	33
  2496   00E221  DC                 	db	220
  2497   00E222  EC                 	db	236
  2498   00E223  CD                 	db	205
  2499   00E224  E5                 	db	229
  2500   00E225  EC                 	db	236
  2501   00E226  C3                 	db	195
  2502   00E227  00                 	db	0
  2503   00E228  00                 	db	0
  2504   00E229  42                 	db	66
  2505   00E22A  64                 	db	100
  2506   00E22B  6F                 	db	111
  2507   00E22C  73                 	db	115
  2508   00E22D  20                 	db	32
  2509   00E22E  45                 	db	69
  2510   00E22F  72                 	db	114
  2511   00E230  72                 	db	114
  2512   00E231  20                 	db	32
  2513   00E232  4F                 	db	79
  2514   00E233  6E                 	db	110
  2515   00E234  20                 	db	32
  2516   00E235  20                 	db	32
  2517   00E236  3A                 	db	58
  2518   00E237  20                 	db	32
  2519   00E238  24                 	db	36
  2520   00E239  42                 	db	66
  2521   00E23A  61                 	db	97
  2522   00E23B  64                 	db	100
  2523   00E23C  20                 	db	32
  2524   00E23D  53                 	db	83
  2525   00E23E  65                 	db	101
  2526   00E23F  63                 	db	99
  2527   00E240  74                 	db	116
  2528   00E241  6F                 	db	111
  2529   00E242  72                 	db	114
  2530   00E243  24                 	db	36
  2531   00E244  53                 	db	83
  2532   00E245  65                 	db	101
  2533   00E246  6C                 	db	108
  2534   00E247  65                 	db	101
  2535   00E248  63                 	db	99
  2536   00E249  74                 	db	116
  2537   00E24A  24                 	db	36
  2538   00E24B  46                 	db	70
  2539   00E24C  69                 	db	105
  2540   00E24D  6C                 	db	108
  2541   00E24E  65                 	db	101
  2542   00E24F  20                 	db	32
  2543   00E250  52                 	db	82
  2544   00E251  2F                 	db	47
  2545   00E252  4F                 	db	79
  2546   00E253  24                 	db	36
  2547   00E254  E5                 	db	229
  2548   00E255  CD                 	db	205
  2549   00E256  C9                 	db	201
  2550   00E257  ED                 	db	237
  2551   00E258  3A                 	db	58
  2552   00E259  42                 	db	66
  2553   00E25A  EF                 	db	239
  2554   00E25B  C6                 	db	198
  2555   00E25C  41                 	db	65
  2556   00E25D  32                 	db	50
  2557   00E25E  C6                 	db	198
  2558   00E25F  EC                 	db	236
  2559   00E260  01                 	db	1
  2560   00E261  BA                 	db	186
  2561   00E262  EC                 	db	236
  2562   00E263  CD                 	db	205
  2563   00E264  D3                 	db	211
  2564   00E265  ED                 	db	237
  2565   00E266  C1                 	db	193
  2566   00E267  CD                 	db	205
  2567   00E268  D3                 	db	211
  2568   00E269  ED                 	db	237
  2569   00E26A  21                 	db	33
  2570   00E26B  0E                 	db	14
  2571   00E26C  EF                 	db	239
  2572   00E26D  7E                 	db	126
  2573   00E26E  36                 	db	54
  2574   00E26F  00                 	db	0
  2575   00E270  B7                 	db	183
  2576   00E271  C0                 	db	192
  2577   00E272  C3                 	db	195
  2578   00E273  09                 	db	9
  2579   00E274  FA                 	db	250
  2580   00E275  CD                 	db	205
  2581   00E276  FB                 	db	251
  2582   00E277  EC                 	db	236
  2583   00E278  CD                 	db	205
  2584   00E279  14                 	db	20
  2585   00E27A  ED                 	db	237
  2586   00E27B  D8                 	db	216
  2587   00E27C  F5                 	db	245
  2588   00E27D  4F                 	db	79
  2589   00E27E  CD                 	db	205
  2590   00E27F  90                 	db	144
  2591   00E280  ED                 	db	237
  2592   00E281  F1                 	db	241
  2593   00E282  C9                 	db	201
  2594   00E283  FE                 	db	254
  2595   00E284  0D                 	db	13
  2596   00E285  C8                 	db	200
  2597   00E286  FE                 	db	254
  2598   00E287  0A                 	db	10
  2599   00E288  C8                 	db	200
  2600   00E289  FE                 	db	254
  2601   00E28A  09                 	db	9
  2602   00E28B  C8                 	db	200
  2603   00E28C  FE                 	db	254
  2604   00E28D  08                 	db	8
  2605   00E28E  C8                 	db	200
  2606   00E28F  FE                 	db	254
  2607   00E290  20                 	db	32
  2608   00E291  C9                 	db	201
  2609   00E292  3A                 	db	58
  2610   00E293  0E                 	db	14
  2611   00E294  EF                 	db	239
  2612   00E295  B7                 	db	183
  2613   00E296  C2                 	db	194
  2614   00E297  45                 	db	69
  2615   00E298  ED                 	db	237
  2616   00E299  CD                 	db	205
  2617   00E29A  06                 	db	6
  2618   00E29B  FA                 	db	250
  2619   00E29C  E6                 	db	230
  2620   00E29D  01                 	db	1
  2621   00E29E  C8                 	db	200
  2622   00E29F  CD                 	db	205
  2623   00E2A0  09                 	db	9
  2624   00E2A1  FA                 	db	250
  2625   00E2A2  FE                 	db	254
  2626   00E2A3  13                 	db	19
  2627   00E2A4  C2                 	db	194
  2628   00E2A5  42                 	db	66
  2629   00E2A6  ED                 	db	237
  2630   00E2A7  CD                 	db	205
  2631   00E2A8  09                 	db	9
  2632   00E2A9  FA                 	db	250
  2633   00E2AA  FE                 	db	254
  2634   00E2AB  03                 	db	3
  2635   00E2AC  CA                 	db	202
  2636   00E2AD  00                 	db	0
  2637   00E2AE  00                 	db	0
  2638   00E2AF  AF                 	db	175
  2639   00E2B0  C9                 	db	201
  2640   00E2B1  32                 	db	50
  2641   00E2B2  0E                 	db	14
  2642   00E2B3  EF                 	db	239
  2643   00E2B4  3E                 	db	62
  2644   00E2B5  01                 	db	1
  2645   00E2B6  C9                 	db	201
  2646   00E2B7  3A                 	db	58
  2647   00E2B8  0A                 	db	10
  2648   00E2B9  EF                 	db	239
  2649   00E2BA  B7                 	db	183
  2650   00E2BB  C2                 	db	194
  2651   00E2BC  62                 	db	98
  2652   00E2BD  ED                 	db	237
  2653   00E2BE  C5                 	db	197
  2654   00E2BF  CD                 	db	205
  2655   00E2C0  23                 	db	35
  2656   00E2C1  ED                 	db	237
  2657   00E2C2  C1                 	db	193
  2658   00E2C3  C5                 	db	197
  2659   00E2C4  CD                 	db	205
  2660   00E2C5  0C                 	db	12
  2661   00E2C6  FA                 	db	250
  2662   00E2C7  C1                 	db	193
  2663   00E2C8  C5                 	db	197
  2664   00E2C9  3A                 	db	58
  2665   00E2CA  0D                 	db	13
  2666   00E2CB  EF                 	db	239
  2667   00E2CC  B7                 	db	183
  2668   00E2CD  C4                 	db	196
  2669   00E2CE  0F                 	db	15
  2670   00E2CF  FA                 	db	250
  2671   00E2D0  C1                 	db	193
  2672   00E2D1  79                 	db	121
  2673   00E2D2  21                 	db	33
  2674   00E2D3  0C                 	db	12
  2675   00E2D4  EF                 	db	239
  2676   00E2D5  FE                 	db	254
  2677   00E2D6  7F                 	db	127
  2678   00E2D7  C8                 	db	200
  2679   00E2D8  34                 	db	52
  2680   00E2D9  FE                 	db	254
  2681   00E2DA  20                 	db	32
  2682   00E2DB  D0                 	db	208
  2683   00E2DC  35                 	db	53
  2684   00E2DD  7E                 	db	126
  2685   00E2DE  B7                 	db	183
  2686   00E2DF  C8                 	db	200
  2687   00E2E0  79                 	db	121
  2688   00E2E1  FE                 	db	254
  2689   00E2E2  08                 	db	8
  2690   00E2E3  C2                 	db	194
  2691   00E2E4  79                 	db	121
  2692   00E2E5  ED                 	db	237
  2693   00E2E6  35                 	db	53
  2694   00E2E7  C9                 	db	201
  2695   00E2E8  FE                 	db	254
  2696   00E2E9  0A                 	db	10
  2697   00E2EA  C0                 	db	192
  2698   00E2EB  36                 	db	54
  2699   00E2EC  00                 	db	0
  2700   00E2ED  C9                 	db	201
  2701   00E2EE  79                 	db	121
  2702   00E2EF  CD                 	db	205
  2703   00E2F0  14                 	db	20
  2704   00E2F1  ED                 	db	237
  2705   00E2F2  D2                 	db	210
  2706   00E2F3  90                 	db	144
  2707   00E2F4  ED                 	db	237
  2708   00E2F5  F5                 	db	245
  2709   00E2F6  0E                 	db	14
  2710   00E2F7  5E                 	db	94
  2711   00E2F8  CD                 	db	205
  2712   00E2F9  48                 	db	72
  2713   00E2FA  ED                 	db	237
  2714   00E2FB  F1                 	db	241
  2715   00E2FC  F6                 	db	246
  2716   00E2FD  40                 	db	64
  2717   00E2FE  4F                 	db	79
  2718   00E2FF  79                 	db	121
  2719   00E300  FE                 	db	254
  2720   00E301  09                 	db	9
  2721   00E302  C2                 	db	194
  2722   00E303  48                 	db	72
  2723   00E304  ED                 	db	237
  2724   00E305  0E                 	db	14
  2725   00E306  20                 	db	32
  2726   00E307  CD                 	db	205
  2727   00E308  48                 	db	72
  2728   00E309  ED                 	db	237
  2729   00E30A  3A                 	db	58
  2730   00E30B  0C                 	db	12
  2731   00E30C  EF                 	db	239
  2732   00E30D  E6                 	db	230
  2733   00E30E  07                 	db	7
  2734   00E30F  C2                 	db	194
  2735   00E310  96                 	db	150
  2736   00E311  ED                 	db	237
  2737   00E312  C9                 	db	201
  2738   00E313  CD                 	db	205
  2739   00E314  AC                 	db	172
  2740   00E315  ED                 	db	237
  2741   00E316  0E                 	db	14
  2742   00E317  20                 	db	32
  2743   00E318  CD                 	db	205
  2744   00E319  0C                 	db	12
  2745   00E31A  FA                 	db	250
  2746   00E31B  0E                 	db	14
  2747   00E31C  08                 	db	8
  2748   00E31D  C3                 	db	195
  2749   00E31E  0C                 	db	12
  2750   00E31F  FA                 	db	250
  2751   00E320  0E                 	db	14
  2752   00E321  23                 	db	35
  2753   00E322  CD                 	db	205
  2754   00E323  48                 	db	72
  2755   00E324  ED                 	db	237
  2756   00E325  CD                 	db	205
  2757   00E326  C9                 	db	201
  2758   00E327  ED                 	db	237
  2759   00E328  3A                 	db	58
  2760   00E329  0C                 	db	12
  2761   00E32A  EF                 	db	239
  2762   00E32B  21                 	db	33
  2763   00E32C  0B                 	db	11
  2764   00E32D  EF                 	db	239
  2765   00E32E  BE                 	db	190
  2766   00E32F  D0                 	db	208
  2767   00E330  0E                 	db	14
  2768   00E331  20                 	db	32
  2769   00E332  CD                 	db	205
  2770   00E333  48                 	db	72
  2771   00E334  ED                 	db	237
  2772   00E335  C3                 	db	195
  2773   00E336  B9                 	db	185
  2774   00E337  ED                 	db	237
  2775   00E338  0E                 	db	14
  2776   00E339  0D                 	db	13
  2777   00E33A  CD                 	db	205
  2778   00E33B  48                 	db	72
  2779   00E33C  ED                 	db	237
  2780   00E33D  0E                 	db	14
  2781   00E33E  0A                 	db	10
  2782   00E33F  C3                 	db	195
  2783   00E340  48                 	db	72
  2784   00E341  ED                 	db	237
  2785   00E342  0A                 	db	10
  2786   00E343  FE                 	db	254
  2787   00E344  24                 	db	36
  2788   00E345  C8                 	db	200
  2789   00E346  03                 	db	3
  2790   00E347  C5                 	db	197
  2791   00E348  4F                 	db	79
  2792   00E349  CD                 	db	205
  2793   00E34A  90                 	db	144
  2794   00E34B  ED                 	db	237
  2795   00E34C  C1                 	db	193
  2796   00E34D  C3                 	db	195
  2797   00E34E  D3                 	db	211
  2798   00E34F  ED                 	db	237
  2799   00E350  3A                 	db	58
  2800   00E351  0C                 	db	12
  2801   00E352  EF                 	db	239
  2802   00E353  32                 	db	50
  2803   00E354  0B                 	db	11
  2804   00E355  EF                 	db	239
  2805   00E356  2A                 	db	42
  2806   00E357  43                 	db	67
  2807   00E358  EF                 	db	239
  2808   00E359  4E                 	db	78
  2809   00E35A  23                 	db	35
  2810   00E35B  E5                 	db	229
  2811   00E35C  06                 	db	6
  2812   00E35D  00                 	db	0
  2813   00E35E  C5                 	db	197
  2814   00E35F  E5                 	db	229
  2815   00E360  CD                 	db	205
  2816   00E361  FB                 	db	251
  2817   00E362  EC                 	db	236
  2818   00E363  E6                 	db	230
  2819   00E364  7F                 	db	127
  2820   00E365  E1                 	db	225
  2821   00E366  C1                 	db	193
  2822   00E367  FE                 	db	254
  2823   00E368  0D                 	db	13
  2824   00E369  CA                 	db	202
  2825   00E36A  C1                 	db	193
  2826   00E36B  EE                 	db	238
  2827   00E36C  FE                 	db	254
  2828   00E36D  0A                 	db	10
  2829   00E36E  CA                 	db	202
  2830   00E36F  C1                 	db	193
  2831   00E370  EE                 	db	238
  2832   00E371  FE                 	db	254
  2833   00E372  08                 	db	8
  2834   00E373  C2                 	db	194
  2835   00E374  16                 	db	22
  2836   00E375  EE                 	db	238
  2837   00E376  78                 	db	120
  2838   00E377  B7                 	db	183
  2839   00E378  CA                 	db	202
  2840   00E379  EF                 	db	239
  2841   00E37A  ED                 	db	237
  2842   00E37B  05                 	db	5
  2843   00E37C  3A                 	db	58
  2844   00E37D  0C                 	db	12
  2845   00E37E  EF                 	db	239
  2846   00E37F  32                 	db	50
  2847   00E380  0A                 	db	10
  2848   00E381  EF                 	db	239
  2849   00E382  C3                 	db	195
  2850   00E383  70                 	db	112
  2851   00E384  EE                 	db	238
  2852   00E385  FE                 	db	254
  2853   00E386  7F                 	db	127
  2854   00E387  C2                 	db	194
  2855   00E388  26                 	db	38
  2856   00E389  EE                 	db	238
  2857   00E38A  78                 	db	120
  2858   00E38B  B7                 	db	183
  2859   00E38C  CA                 	db	202
  2860   00E38D  EF                 	db	239
  2861   00E38E  ED                 	db	237
  2862   00E38F  7E                 	db	126
  2863   00E390  05                 	db	5
  2864   00E391  2B                 	db	43
  2865   00E392  C3                 	db	195
  2866   00E393  A9                 	db	169
  2867   00E394  EE                 	db	238
  2868   00E395  FE                 	db	254
  2869   00E396  05                 	db	5
  2870   00E397  C2                 	db	194
  2871   00E398  37                 	db	55
  2872   00E399  EE                 	db	238
  2873   00E39A  C5                 	db	197
  2874   00E39B  E5                 	db	229
  2875   00E39C  CD                 	db	205
  2876   00E39D  C9                 	db	201
  2877   00E39E  ED                 	db	237
  2878   00E39F  AF                 	db	175
  2879   00E3A0  32                 	db	50
  2880   00E3A1  0B                 	db	11
  2881   00E3A2  EF                 	db	239
  2882   00E3A3  C3                 	db	195
  2883   00E3A4  F1                 	db	241
  2884   00E3A5  ED                 	db	237
  2885   00E3A6  FE                 	db	254
  2886   00E3A7  10                 	db	16
  2887   00E3A8  C2                 	db	194
  2888   00E3A9  48                 	db	72
  2889   00E3AA  EE                 	db	238
  2890   00E3AB  E5                 	db	229
  2891   00E3AC  21                 	db	33
  2892   00E3AD  0D                 	db	13
  2893   00E3AE  EF                 	db	239
  2894   00E3AF  3E                 	db	62
  2895   00E3B0  01                 	db	1
  2896   00E3B1  96                 	db	150
  2897   00E3B2  77                 	db	119
  2898   00E3B3  E1                 	db	225
  2899   00E3B4  C3                 	db	195
  2900   00E3B5  EF                 	db	239
  2901   00E3B6  ED                 	db	237
  2902   00E3B7  FE                 	db	254
  2903   00E3B8  18                 	db	24
  2904   00E3B9  C2                 	db	194
  2905   00E3BA  5F                 	db	95
  2906   00E3BB  EE                 	db	238
  2907   00E3BC  E1                 	db	225
  2908   00E3BD  3A                 	db	58
  2909   00E3BE  0B                 	db	11
  2910   00E3BF  EF                 	db	239
  2911   00E3C0  21                 	db	33
  2912   00E3C1  0C                 	db	12
  2913   00E3C2  EF                 	db	239
  2914   00E3C3  BE                 	db	190
  2915   00E3C4  D2                 	db	210
  2916   00E3C5  E1                 	db	225
  2917   00E3C6  ED                 	db	237
  2918   00E3C7  35                 	db	53
  2919   00E3C8  CD                 	db	205
  2920   00E3C9  A4                 	db	164
  2921   00E3CA  ED                 	db	237
  2922   00E3CB  C3                 	db	195
  2923   00E3CC  4E                 	db	78
  2924   00E3CD  EE                 	db	238
  2925   00E3CE  FE                 	db	254
  2926   00E3CF  15                 	db	21
  2927   00E3D0  C2                 	db	194
  2928   00E3D1  6B                 	db	107
  2929   00E3D2  EE                 	db	238
  2930   00E3D3  CD                 	db	205
  2931   00E3D4  B1                 	db	177
  2932   00E3D5  ED                 	db	237
  2933   00E3D6  E1                 	db	225
  2934   00E3D7  C3                 	db	195
  2935   00E3D8  E1                 	db	225
  2936   00E3D9  ED                 	db	237
  2937   00E3DA  FE                 	db	254
  2938   00E3DB  12                 	db	18
  2939   00E3DC  C2                 	db	194
  2940   00E3DD  A6                 	db	166
  2941   00E3DE  EE                 	db	238
  2942   00E3DF  C5                 	db	197
  2943   00E3E0  CD                 	db	205
  2944   00E3E1  B1                 	db	177
  2945   00E3E2  ED                 	db	237
  2946   00E3E3  C1                 	db	193
  2947   00E3E4  E1                 	db	225
  2948   00E3E5  E5                 	db	229
  2949   00E3E6  C5                 	db	197
  2950   00E3E7  78                 	db	120
  2951   00E3E8  B7                 	db	183
  2952   00E3E9  CA                 	db	202
  2953   00E3EA  8A                 	db	138
  2954   00E3EB  EE                 	db	238
  2955   00E3EC  23                 	db	35
  2956   00E3ED  4E                 	db	78
  2957   00E3EE  05                 	db	5
  2958   00E3EF  C5                 	db	197
  2959   00E3F0  E5                 	db	229
  2960   00E3F1  CD                 	db	205
  2961   00E3F2  7F                 	db	127
  2962   00E3F3  ED                 	db	237
  2963   00E3F4  E1                 	db	225
  2964   00E3F5  C1                 	db	193
  2965   00E3F6  C3                 	db	195
  2966   00E3F7  78                 	db	120
  2967   00E3F8  EE                 	db	238
  2968   00E3F9  E5                 	db	229
  2969   00E3FA  3A                 	db	58
  2970   00E3FB  0A                 	db	10
  2971   00E3FC  EF                 	db	239
  2972   00E3FD  B7                 	db	183
  2973   00E3FE  CA                 	db	202
  2974   00E3FF  F1                 	db	241
  2975   00E400  ED                 	db	237
  2976   00E401  21                 	db	33
  2977   00E402  0C                 	db	12
  2978   00E403  EF                 	db	239
  2979   00E404  96                 	db	150
  2980   00E405  32                 	db	50
  2981   00E406  0A                 	db	10
  2982   00E407  EF                 	db	239
  2983   00E408  CD                 	db	205
  2984   00E409  A4                 	db	164
  2985   00E40A  ED                 	db	237
  2986   00E40B  21                 	db	33
  2987   00E40C  0A                 	db	10
  2988   00E40D  EF                 	db	239
  2989   00E40E  35                 	db	53
  2990   00E40F  C2                 	db	194
  2991   00E410  99                 	db	153
  2992   00E411  EE                 	db	238
  2993   00E412  C3                 	db	195
  2994   00E413  F1                 	db	241
  2995   00E414  ED                 	db	237
  2996   00E415  23                 	db	35
  2997   00E416  77                 	db	119
  2998   00E417  04                 	db	4
  2999   00E418  C5                 	db	197
  3000   00E419  E5                 	db	229
  3001   00E41A  4F                 	db	79
  3002   00E41B  CD                 	db	205
  3003   00E41C  7F                 	db	127
  3004   00E41D  ED                 	db	237
  3005   00E41E  E1                 	db	225
  3006   00E41F  C1                 	db	193
  3007   00E420  7E                 	db	126
  3008   00E421  FE                 	db	254
  3009   00E422  03                 	db	3
  3010   00E423  78                 	db	120
  3011   00E424  C2                 	db	194
  3012   00E425  BD                 	db	189
  3013   00E426  EE                 	db	238
  3014   00E427  FE                 	db	254
  3015   00E428  01                 	db	1
  3016   00E429  CA                 	db	202
  3017   00E42A  00                 	db	0
  3018   00E42B  00                 	db	0
  3019   00E42C  B9                 	db	185
  3020   00E42D  DA                 	db	218
  3021   00E42E  EF                 	db	239
  3022   00E42F  ED                 	db	237
  3023   00E430  E1                 	db	225
  3024   00E431  70                 	db	112
  3025   00E432  0E                 	db	14
  3026   00E433  0D                 	db	13
  3027   00E434  C3                 	db	195
  3028   00E435  48                 	db	72
  3029   00E436  ED                 	db	237
  3030   00E437  CD                 	db	205
  3031   00E438  06                 	db	6
  3032   00E439  ED                 	db	237
  3033   00E43A  C3                 	db	195
  3034   00E43B  01                 	db	1
  3035   00E43C  EF                 	db	239
  3036   00E43D  CD                 	db	205
  3037   00E43E  15                 	db	21
  3038   00E43F  FA                 	db	250
  3039   00E440  C3                 	db	195
  3040   00E441  01                 	db	1
  3041   00E442  EF                 	db	239
  3042   00E443  79                 	db	121
  3043   00E444  3C                 	db	60
  3044   00E445  CA                 	db	202
  3045   00E446  E0                 	db	224
  3046   00E447  EE                 	db	238
  3047   00E448  3C                 	db	60
  3048   00E449  CA                 	db	202
  3049   00E44A  06                 	db	6
  3050   00E44B  FA                 	db	250
  3051   00E44C  C3                 	db	195
  3052   00E44D  0C                 	db	12
  3053   00E44E  FA                 	db	250
  3054   00E44F  CD                 	db	205
  3055   00E450  06                 	db	6
  3056   00E451  FA                 	db	250
  3057   00E452  B7                 	db	183
  3058   00E453  CA                 	db	202
  3059   00E454  91                 	db	145
  3060   00E455  F9                 	db	249
  3061   00E456  CD                 	db	205
  3062   00E457  09                 	db	9
  3063   00E458  FA                 	db	250
  3064   00E459  C3                 	db	195
  3065   00E45A  01                 	db	1
  3066   00E45B  EF                 	db	239
  3067   00E45C  3A                 	db	58
  3068   00E45D  03                 	db	3
  3069   00E45E  00                 	db	0
  3070   00E45F  C3                 	db	195
  3071   00E460  01                 	db	1
  3072   00E461  EF                 	db	239
  3073   00E462  21                 	db	33
  3074   00E463  03                 	db	3
  3075   00E464  00                 	db	0
  3076   00E465  71                 	db	113
  3077   00E466  C9                 	db	201
  3078   00E467  EB                 	db	235
  3079   00E468  4D                 	db	77
  3080   00E469  44                 	db	68
  3081   00E46A  C3                 	db	195
  3082   00E46B  D3                 	db	211
  3083   00E46C  ED                 	db	237
  3084   00E46D  CD                 	db	205
  3085   00E46E  23                 	db	35
  3086   00E46F  ED                 	db	237
  3087   00E470  32                 	db	50
  3088   00E471  45                 	db	69
  3089   00E472  EF                 	db	239
  3090   00E473  C9                 	db	201
  3091   00E474  3E                 	db	62
  3092   00E475  01                 	db	1
  3093   00E476  C3                 	db	195
  3094   00E477  01                 	db	1
  3095   00E478  EF                 	db	239
  3096   00E479  00                 	db	0
  3097   00E47A  02                 	db	2
  3098   00E47B  00                 	db	0
  3099   00E47C  00                 	db	0
  3100   00E47D  00                 	db	0
  3101   00E47E  00                 	db	0
  3102   00E47F  00                 	db	0
  3103   00E480  00                 	db	0
  3104   00E481  00                 	db	0
  3105   00E482  00                 	db	0
  3106   00E483  00                 	db	0
  3107   00E484  00                 	db	0
  3108   00E485  00                 	db	0
  3109   00E486  00                 	db	0
  3110   00E487  00                 	db	0
  3111   00E488  00                 	db	0
  3112   00E489  00                 	db	0
  3113   00E48A  00                 	db	0
  3114   00E48B  00                 	db	0
  3115   00E48C  00                 	db	0
  3116   00E48D  00                 	db	0
  3117   00E48E  00                 	db	0
  3118   00E48F  00                 	db	0
  3119   00E490  00                 	db	0
  3120   00E491  00                 	db	0
  3121   00E492  00                 	db	0
  3122   00E493  00                 	db	0
  3123   00E494  00                 	db	0
  3124   00E495  00                 	db	0
  3125   00E496  00                 	db	0
  3126   00E497  00                 	db	0
  3127   00E498  00                 	db	0
  3128   00E499  00                 	db	0
  3129   00E49A  00                 	db	0
  3130   00E49B  00                 	db	0
  3131   00E49C  00                 	db	0
  3132   00E49D  00                 	db	0
  3133   00E49E  00                 	db	0
  3134   00E49F  00                 	db	0
  3135   00E4A0  00                 	db	0
  3136   00E4A1  00                 	db	0
  3137   00E4A2  00                 	db	0
  3138   00E4A3  00                 	db	0
  3139   00E4A4  00                 	db	0
  3140   00E4A5  00                 	db	0
  3141   00E4A6  00                 	db	0
  3142   00E4A7  00                 	db	0
  3143   00E4A8  00                 	db	0
  3144   00E4A9  00                 	db	0
  3145   00E4AA  00                 	db	0
  3146   00E4AB  00                 	db	0
  3147   00E4AC  00                 	db	0
  3148   00E4AD  00                 	db	0
  3149   00E4AE  00                 	db	0
  3150   00E4AF  00                 	db	0
  3151   00E4B0  00                 	db	0
  3152   00E4B1  00                 	db	0
  3153   00E4B2  00                 	db	0
  3154   00E4B3  00                 	db	0
  3155   00E4B4  00                 	db	0
  3156   00E4B5  00                 	db	0
  3157   00E4B6  21                 	db	33
  3158   00E4B7  0B                 	db	11
  3159   00E4B8  EC                 	db	236
  3160   00E4B9  5E                 	db	94
  3161   00E4BA  23                 	db	35
  3162   00E4BB  56                 	db	86
  3163   00E4BC  EB                 	db	235
  3164   00E4BD  E9                 	db	233
  3165   00E4BE  0C                 	db	12
  3166   00E4BF  0D                 	db	13
  3167   00E4C0  C8                 	db	200
  3168   00E4C1  1A                 	db	26
  3169   00E4C2  77                 	db	119
  3170   00E4C3  13                 	db	19
  3171   00E4C4  23                 	db	35
  3172   00E4C5  C3                 	db	195
  3173   00E4C6  50                 	db	80
  3174   00E4C7  EF                 	db	239
  3175   00E4C8  3A                 	db	58
  3176   00E4C9  42                 	db	66
  3177   00E4CA  EF                 	db	239
  3178   00E4CB  4F                 	db	79
  3179   00E4CC  CD                 	db	205
  3180   00E4CD  1B                 	db	27
  3181   00E4CE  FA                 	db	250
  3182   00E4CF  7C                 	db	124
  3183   00E4D0  B5                 	db	181
  3184   00E4D1  C8                 	db	200
  3185   00E4D2  5E                 	db	94
  3186   00E4D3  23                 	db	35
  3187   00E4D4  56                 	db	86
  3188   00E4D5  23                 	db	35
  3189   00E4D6  22                 	db	34
  3190   00E4D7  B3                 	db	179
  3191   00E4D8  F9                 	db	249
  3192   00E4D9  23                 	db	35
  3193   00E4DA  23                 	db	35
  3194   00E4DB  22                 	db	34
  3195   00E4DC  B5                 	db	181
  3196   00E4DD  F9                 	db	249
  3197   00E4DE  23                 	db	35
  3198   00E4DF  23                 	db	35
  3199   00E4E0  22                 	db	34
  3200   00E4E1  B7                 	db	183
  3201   00E4E2  F9                 	db	249
  3202   00E4E3  23                 	db	35
  3203   00E4E4  23                 	db	35
  3204   00E4E5  EB                 	db	235
  3205   00E4E6  22                 	db	34
  3206   00E4E7  D0                 	db	208
  3207   00E4E8  F9                 	db	249
  3208   00E4E9  21                 	db	33
  3209   00E4EA  B9                 	db	185
  3210   00E4EB  F9                 	db	249
  3211   00E4EC  0E                 	db	14
  3212   00E4ED  08                 	db	8
  3213   00E4EE  CD                 	db	205
  3214   00E4EF  4F                 	db	79
  3215   00E4F0  EF                 	db	239
  3216   00E4F1  2A                 	db	42
  3217   00E4F2  BB                 	db	187
  3218   00E4F3  F9                 	db	249
  3219   00E4F4  EB                 	db	235
  3220   00E4F5  21                 	db	33
  3221   00E4F6  C1                 	db	193
  3222   00E4F7  F9                 	db	249
  3223   00E4F8  0E                 	db	14
  3224   00E4F9  0F                 	db	15
  3225   00E4FA  CD                 	db	205
  3226   00E4FB  4F                 	db	79
  3227   00E4FC  EF                 	db	239
  3228   00E4FD  2A                 	db	42
  3229   00E4FE  C6                 	db	198
  3230   00E4FF  F9                 	db	249
  3231   00E500  7C                 	db	124
  3232   00E501  21                 	db	33
  3233   00E502  DD                 	db	221
  3234   00E503  F9                 	db	249
  3235   00E504  36                 	db	54
  3236   00E505  FF                 	db	255
  3237   00E506  B7                 	db	183
  3238   00E507  CA                 	db	202
  3239   00E508  9D                 	db	157
  3240   00E509  EF                 	db	239
  3241   00E50A  36                 	db	54
  3242   00E50B  00                 	db	0
  3243   00E50C  3E                 	db	62
  3244   00E50D  FF                 	db	255
  3245   00E50E  B7                 	db	183
  3246   00E50F  C9                 	db	201
  3247   00E510  CD                 	db	205
  3248   00E511  18                 	db	24
  3249   00E512  FA                 	db	250
  3250   00E513  AF                 	db	175
  3251   00E514  2A                 	db	42
  3252   00E515  B5                 	db	181
  3253   00E516  F9                 	db	249
  3254   00E517  77                 	db	119
  3255   00E518  23                 	db	35
  3256   00E519  77                 	db	119
  3257   00E51A  2A                 	db	42
  3258   00E51B  B7                 	db	183
  3259   00E51C  F9                 	db	249
  3260   00E51D  77                 	db	119
  3261   00E51E  23                 	db	35
  3262   00E51F  77                 	db	119
  3263   00E520  C9                 	db	201
  3264   00E521  CD                 	db	205
  3265   00E522  27                 	db	39
  3266   00E523  FA                 	db	250
  3267   00E524  C3                 	db	195
  3268   00E525  BB                 	db	187
  3269   00E526  EF                 	db	239
  3270   00E527  CD                 	db	205
  3271   00E528  2A                 	db	42
  3272   00E529  FA                 	db	250
  3273   00E52A  B7                 	db	183
  3274   00E52B  C8                 	db	200
  3275   00E52C  21                 	db	33
  3276   00E52D  09                 	db	9
  3277   00E52E  EC                 	db	236
  3278   00E52F  C3                 	db	195
  3279   00E530  4A                 	db	74
  3280   00E531  EF                 	db	239
  3281   00E532  2A                 	db	42
  3282   00E533  EA                 	db	234
  3283   00E534  F9                 	db	249
  3284   00E535  0E                 	db	14
  3285   00E536  02                 	db	2
  3286   00E537  CD                 	db	205
  3287   00E538  EA                 	db	234
  3288   00E539  F0                 	db	240
  3289   00E53A  22                 	db	34
  3290   00E53B  E5                 	db	229
  3291   00E53C  F9                 	db	249
  3292   00E53D  22                 	db	34
  3293   00E53E  EC                 	db	236
  3294   00E53F  F9                 	db	249
  3295   00E540  21                 	db	33
  3296   00E541  E5                 	db	229
  3297   00E542  F9                 	db	249
  3298   00E543  4E                 	db	78
  3299   00E544  23                 	db	35
  3300   00E545  46                 	db	70
  3301   00E546  2A                 	db	42
  3302   00E547  B7                 	db	183
  3303   00E548  F9                 	db	249
  3304   00E549  5E                 	db	94
  3305   00E54A  23                 	db	35
  3306   00E54B  56                 	db	86
  3307   00E54C  2A                 	db	42
  3308   00E54D  B5                 	db	181
  3309   00E54E  F9                 	db	249
  3310   00E54F  7E                 	db	126
  3311   00E550  23                 	db	35
  3312   00E551  66                 	db	102
  3313   00E552  6F                 	db	111
  3314   00E553  79                 	db	121
  3315   00E554  93                 	db	147
  3316   00E555  78                 	db	120
  3317   00E556  9A                 	db	154
  3318   00E557  D2                 	db	210
  3319   00E558  FA                 	db	250
  3320   00E559  EF                 	db	239
  3321   00E55A  E5                 	db	229
  3322   00E55B  2A                 	db	42
  3323   00E55C  C1                 	db	193
  3324   00E55D  F9                 	db	249
  3325   00E55E  7B                 	db	123
  3326   00E55F  95                 	db	149
  3327   00E560  5F                 	db	95
  3328   00E561  7A                 	db	122
  3329   00E562  9C                 	db	156
  3330   00E563  57                 	db	87
  3331   00E564  E1                 	db	225
  3332   00E565  2B                 	db	43
  3333   00E566  C3                 	db	195
  3334   00E567  E4                 	db	228
  3335   00E568  EF                 	db	239
  3336   00E569  E5                 	db	229
  3337   00E56A  2A                 	db	42
  3338   00E56B  C1                 	db	193
  3339   00E56C  F9                 	db	249
  3340   00E56D  19                 	db	25
  3341   00E56E  DA                 	db	218
  3342   00E56F  0F                 	db	15
  3343   00E570  F0                 	db	240
  3344   00E571  79                 	db	121
  3345   00E572  95                 	db	149
  3346   00E573  78                 	db	120
  3347   00E574  9C                 	db	156
  3348   00E575  DA                 	db	218
  3349   00E576  0F                 	db	15
  3350   00E577  F0                 	db	240
  3351   00E578  EB                 	db	235
  3352   00E579  E1                 	db	225
  3353   00E57A  23                 	db	35
  3354   00E57B  C3                 	db	195
  3355   00E57C  FA                 	db	250
  3356   00E57D  EF                 	db	239
  3357   00E57E  E1                 	db	225
  3358   00E57F  C5                 	db	197
  3359   00E580  D5                 	db	213
  3360   00E581  E5                 	db	229
  3361   00E582  EB                 	db	235
  3362   00E583  2A                 	db	42
  3363   00E584  CE                 	db	206
  3364   00E585  F9                 	db	249
  3365   00E586  19                 	db	25
  3366   00E587  44                 	db	68
  3367   00E588  4D                 	db	77
  3368   00E589  CD                 	db	205
  3369   00E58A  1E                 	db	30
  3370   00E58B  FA                 	db	250
  3371   00E58C  D1                 	db	209
  3372   00E58D  2A                 	db	42
  3373   00E58E  B5                 	db	181
  3374   00E58F  F9                 	db	249
  3375   00E590  73                 	db	115
  3376   00E591  23                 	db	35
  3377   00E592  72                 	db	114
  3378   00E593  D1                 	db	209
  3379   00E594  2A                 	db	42
  3380   00E595  B7                 	db	183
  3381   00E596  F9                 	db	249
  3382   00E597  73                 	db	115
  3383   00E598  23                 	db	35
  3384   00E599  72                 	db	114
  3385   00E59A  C1                 	db	193
  3386   00E59B  79                 	db	121
  3387   00E59C  93                 	db	147
  3388   00E59D  4F                 	db	79
  3389   00E59E  78                 	db	120
  3390   00E59F  9A                 	db	154
  3391   00E5A0  47                 	db	71
  3392   00E5A1  2A                 	db	42
  3393   00E5A2  D0                 	db	208
  3394   00E5A3  F9                 	db	249
  3395   00E5A4  EB                 	db	235
  3396   00E5A5  CD                 	db	205
  3397   00E5A6  30                 	db	48
  3398   00E5A7  FA                 	db	250
  3399   00E5A8  4D                 	db	77
  3400   00E5A9  44                 	db	68
  3401   00E5AA  C3                 	db	195
  3402   00E5AB  21                 	db	33
  3403   00E5AC  FA                 	db	250
  3404   00E5AD  21                 	db	33
  3405   00E5AE  C3                 	db	195
  3406   00E5AF  F9                 	db	249
  3407   00E5B0  4E                 	db	78
  3408   00E5B1  3A                 	db	58
  3409   00E5B2  E3                 	db	227
  3410   00E5B3  F9                 	db	249
  3411   00E5B4  B7                 	db	183
  3412   00E5B5  1F                 	db	31
  3413   00E5B6  0D                 	db	13
  3414   00E5B7  C2                 	db	194
  3415   00E5B8  45                 	db	69
  3416   00E5B9  F0                 	db	240
  3417   00E5BA  47                 	db	71
  3418   00E5BB  3E                 	db	62
  3419   00E5BC  08                 	db	8
  3420   00E5BD  96                 	db	150
  3421   00E5BE  4F                 	db	79
  3422   00E5BF  3A                 	db	58
  3423   00E5C0  E2                 	db	226
  3424   00E5C1  F9                 	db	249
  3425   00E5C2  0D                 	db	13
  3426   00E5C3  CA                 	db	202
  3427   00E5C4  5C                 	db	92
  3428   00E5C5  F0                 	db	240
  3429   00E5C6  B7                 	db	183
  3430   00E5C7  17                 	db	23
  3431   00E5C8  C3                 	db	195
  3432   00E5C9  53                 	db	83
  3433   00E5CA  F0                 	db	240
  3434   00E5CB  80                 	db	128
  3435   00E5CC  C9                 	db	201
  3436   00E5CD  2A                 	db	42
  3437   00E5CE  43                 	db	67
  3438   00E5CF  EF                 	db	239
  3439   00E5D0  11                 	db	17
  3440   00E5D1  10                 	db	16
  3441   00E5D2  00                 	db	0
  3442   00E5D3  19                 	db	25
  3443   00E5D4  09                 	db	9
  3444   00E5D5  3A                 	db	58
  3445   00E5D6  DD                 	db	221
  3446   00E5D7  F9                 	db	249
  3447   00E5D8  B7                 	db	183
  3448   00E5D9  CA                 	db	202
  3449   00E5DA  71                 	db	113
  3450   00E5DB  F0                 	db	240
  3451   00E5DC  6E                 	db	110
  3452   00E5DD  26                 	db	38
  3453   00E5DE  00                 	db	0
  3454   00E5DF  C9                 	db	201
  3455   00E5E0  09                 	db	9
  3456   00E5E1  5E                 	db	94
  3457   00E5E2  23                 	db	35
  3458   00E5E3  56                 	db	86
  3459   00E5E4  EB                 	db	235
  3460   00E5E5  C9                 	db	201
  3461   00E5E6  CD                 	db	205
  3462   00E5E7  3E                 	db	62
  3463   00E5E8  F0                 	db	240
  3464   00E5E9  4F                 	db	79
  3465   00E5EA  06                 	db	6
  3466   00E5EB  00                 	db	0
  3467   00E5EC  CD                 	db	205
  3468   00E5ED  5E                 	db	94
  3469   00E5EE  F0                 	db	240
  3470   00E5EF  22                 	db	34
  3471   00E5F0  E5                 	db	229
  3472   00E5F1  F9                 	db	249
  3473   00E5F2  C9                 	db	201
  3474   00E5F3  2A                 	db	42
  3475   00E5F4  E5                 	db	229
  3476   00E5F5  F9                 	db	249
  3477   00E5F6  7D                 	db	125
  3478   00E5F7  B4                 	db	180
  3479   00E5F8  C9                 	db	201
  3480   00E5F9  3A                 	db	58
  3481   00E5FA  C3                 	db	195
  3482   00E5FB  F9                 	db	249
  3483   00E5FC  2A                 	db	42
  3484   00E5FD  E5                 	db	229
  3485   00E5FE  F9                 	db	249
  3486   00E5FF  29                 	db	41
  3487   00E600  3D                 	db	61
  3488   00E601  C2                 	db	194
  3489   00E602  90                 	db	144
  3490   00E603  F0                 	db	240
  3491   00E604  22                 	db	34
  3492   00E605  E7                 	db	231
  3493   00E606  F9                 	db	249
  3494   00E607  3A                 	db	58
  3495   00E608  C4                 	db	196
  3496   00E609  F9                 	db	249
  3497   00E60A  4F                 	db	79
  3498   00E60B  3A                 	db	58
  3499   00E60C  E3                 	db	227
  3500   00E60D  F9                 	db	249
  3501   00E60E  A1                 	db	161
  3502   00E60F  B5                 	db	181
  3503   00E610  6F                 	db	111
  3504   00E611  22                 	db	34
  3505   00E612  E5                 	db	229
  3506   00E613  F9                 	db	249
  3507   00E614  C9                 	db	201
  3508   00E615  2A                 	db	42
  3509   00E616  43                 	db	67
  3510   00E617  EF                 	db	239
  3511   00E618  11                 	db	17
  3512   00E619  0C                 	db	12
  3513   00E61A  00                 	db	0
  3514   00E61B  19                 	db	25
  3515   00E61C  C9                 	db	201
  3516   00E61D  2A                 	db	42
  3517   00E61E  43                 	db	67
  3518   00E61F  EF                 	db	239
  3519   00E620  11                 	db	17
  3520   00E621  0F                 	db	15
  3521   00E622  00                 	db	0
  3522   00E623  19                 	db	25
  3523   00E624  EB                 	db	235
  3524   00E625  21                 	db	33
  3525   00E626  11                 	db	17
  3526   00E627  00                 	db	0
  3527   00E628  19                 	db	25
  3528   00E629  C9                 	db	201
  3529   00E62A  CD                 	db	205
  3530   00E62B  AE                 	db	174
  3531   00E62C  F0                 	db	240
  3532   00E62D  7E                 	db	126
  3533   00E62E  32                 	db	50
  3534   00E62F  E3                 	db	227
  3535   00E630  F9                 	db	249
  3536   00E631  EB                 	db	235
  3537   00E632  7E                 	db	126
  3538   00E633  32                 	db	50
  3539   00E634  E1                 	db	225
  3540   00E635  F9                 	db	249
  3541   00E636  CD                 	db	205
  3542   00E637  A6                 	db	166
  3543   00E638  F0                 	db	240
  3544   00E639  3A                 	db	58
  3545   00E63A  C5                 	db	197
  3546   00E63B  F9                 	db	249
  3547   00E63C  A6                 	db	166
  3548   00E63D  32                 	db	50
  3549   00E63E  E2                 	db	226
  3550   00E63F  F9                 	db	249
  3551   00E640  C9                 	db	201
  3552   00E641  CD                 	db	205
  3553   00E642  AE                 	db	174
  3554   00E643  F0                 	db	240
  3555   00E644  3A                 	db	58
  3556   00E645  D5                 	db	213
  3557   00E646  F9                 	db	249
  3558   00E647  FE                 	db	254
  3559   00E648  02                 	db	2
  3560   00E649  C2                 	db	194
  3561   00E64A  DE                 	db	222
  3562   00E64B  F0                 	db	240
  3563   00E64C  AF                 	db	175
  3564   00E64D  4F                 	db	79
  3565   00E64E  3A                 	db	58
  3566   00E64F  E3                 	db	227
  3567   00E650  F9                 	db	249
  3568   00E651  81                 	db	129
  3569   00E652  77                 	db	119
  3570   00E653  EB                 	db	235
  3571   00E654  3A                 	db	58
  3572   00E655  E1                 	db	225
  3573   00E656  F9                 	db	249
  3574   00E657  77                 	db	119
  3575   00E658  C9                 	db	201
  3576   00E659  0C                 	db	12
  3577   00E65A  0D                 	db	13
  3578   00E65B  C8                 	db	200
  3579   00E65C  7C                 	db	124
  3580   00E65D  B7                 	db	183
  3581   00E65E  1F                 	db	31
  3582   00E65F  67                 	db	103
  3583   00E660  7D                 	db	125
  3584   00E661  1F                 	db	31
  3585   00E662  6F                 	db	111
  3586   00E663  C3                 	db	195
  3587   00E664  EB                 	db	235
  3588   00E665  F0                 	db	240
  3589   00E666  0E                 	db	14
  3590   00E667  80                 	db	128
  3591   00E668  2A                 	db	42
  3592   00E669  B9                 	db	185
  3593   00E66A  F9                 	db	249
  3594   00E66B  AF                 	db	175
  3595   00E66C  86                 	db	134
  3596   00E66D  23                 	db	35
  3597   00E66E  0D                 	db	13
  3598   00E66F  C2                 	db	194
  3599   00E670  FD                 	db	253
  3600   00E671  F0                 	db	240
  3601   00E672  C9                 	db	201
  3602   00E673  0C                 	db	12
  3603   00E674  0D                 	db	13
  3604   00E675  C8                 	db	200
  3605   00E676  29                 	db	41
  3606   00E677  C3                 	db	195
  3607   00E678  05                 	db	5
  3608   00E679  F1                 	db	241
  3609   00E67A  C5                 	db	197
  3610   00E67B  3A                 	db	58
  3611   00E67C  42                 	db	66
  3612   00E67D  EF                 	db	239
  3613   00E67E  4F                 	db	79
  3614   00E67F  21                 	db	33
  3615   00E680  01                 	db	1
  3616   00E681  00                 	db	0
  3617   00E682  CD                 	db	205
  3618   00E683  04                 	db	4
  3619   00E684  F1                 	db	241
  3620   00E685  C1                 	db	193
  3621   00E686  79                 	db	121
  3622   00E687  B5                 	db	181
  3623   00E688  6F                 	db	111
  3624   00E689  78                 	db	120
  3625   00E68A  B4                 	db	180
  3626   00E68B  67                 	db	103
  3627   00E68C  C9                 	db	201
  3628   00E68D  2A                 	db	42
  3629   00E68E  AD                 	db	173
  3630   00E68F  F9                 	db	249
  3631   00E690  3A                 	db	58
  3632   00E691  42                 	db	66
  3633   00E692  EF                 	db	239
  3634   00E693  4F                 	db	79
  3635   00E694  CD                 	db	205
  3636   00E695  EA                 	db	234
  3637   00E696  F0                 	db	240
  3638   00E697  7D                 	db	125
  3639   00E698  E6                 	db	230
  3640   00E699  01                 	db	1
  3641   00E69A  C9                 	db	201
  3642   00E69B  21                 	db	33
  3643   00E69C  AD                 	db	173
  3644   00E69D  F9                 	db	249
  3645   00E69E  4E                 	db	78
  3646   00E69F  23                 	db	35
  3647   00E6A0  46                 	db	70
  3648   00E6A1  CD                 	db	205
  3649   00E6A2  0B                 	db	11
  3650   00E6A3  F1                 	db	241
  3651   00E6A4  22                 	db	34
  3652   00E6A5  AD                 	db	173
  3653   00E6A6  F9                 	db	249
  3654   00E6A7  2A                 	db	42
  3655   00E6A8  C8                 	db	200
  3656   00E6A9  F9                 	db	249
  3657   00E6AA  23                 	db	35
  3658   00E6AB  EB                 	db	235
  3659   00E6AC  2A                 	db	42
  3660   00E6AD  B3                 	db	179
  3661   00E6AE  F9                 	db	249
  3662   00E6AF  73                 	db	115
  3663   00E6B0  23                 	db	35
  3664   00E6B1  72                 	db	114
  3665   00E6B2  C9                 	db	201
  3666   00E6B3  CD                 	db	205
  3667   00E6B4  5E                 	db	94
  3668   00E6B5  F1                 	db	241
  3669   00E6B6  11                 	db	17
  3670   00E6B7  09                 	db	9
  3671   00E6B8  00                 	db	0
  3672   00E6B9  19                 	db	25
  3673   00E6BA  7E                 	db	126
  3674   00E6BB  17                 	db	23
  3675   00E6BC  D0                 	db	208
  3676   00E6BD  21                 	db	33
  3677   00E6BE  0F                 	db	15
  3678   00E6BF  EC                 	db	236
  3679   00E6C0  C3                 	db	195
  3680   00E6C1  4A                 	db	74
  3681   00E6C2  EF                 	db	239
  3682   00E6C3  CD                 	db	205
  3683   00E6C4  1E                 	db	30
  3684   00E6C5  F1                 	db	241
  3685   00E6C6  C8                 	db	200
  3686   00E6C7  21                 	db	33
  3687   00E6C8  0D                 	db	13
  3688   00E6C9  EC                 	db	236
  3689   00E6CA  C3                 	db	195
  3690   00E6CB  4A                 	db	74
  3691   00E6CC  EF                 	db	239
  3692   00E6CD  2A                 	db	42
  3693   00E6CE  B9                 	db	185
  3694   00E6CF  F9                 	db	249
  3695   00E6D0  3A                 	db	58
  3696   00E6D1  E9                 	db	233
  3697   00E6D2  F9                 	db	249
  3698   00E6D3  85                 	db	133
  3699   00E6D4  6F                 	db	111
  3700   00E6D5  D0                 	db	208
  3701   00E6D6  24                 	db	36
  3702   00E6D7  C9                 	db	201
  3703   00E6D8  2A                 	db	42
  3704   00E6D9  43                 	db	67
  3705   00E6DA  EF                 	db	239
  3706   00E6DB  11                 	db	17
  3707   00E6DC  0E                 	db	14
  3708   00E6DD  00                 	db	0
  3709   00E6DE  19                 	db	25
  3710   00E6DF  7E                 	db	126
  3711   00E6E0  C9                 	db	201
  3712   00E6E1  CD                 	db	205
  3713   00E6E2  69                 	db	105
  3714   00E6E3  F1                 	db	241
  3715   00E6E4  36                 	db	54
  3716   00E6E5  00                 	db	0
  3717   00E6E6  C9                 	db	201
  3718   00E6E7  CD                 	db	205
  3719   00E6E8  69                 	db	105
  3720   00E6E9  F1                 	db	241
  3721   00E6EA  F6                 	db	246
  3722   00E6EB  80                 	db	128
  3723   00E6EC  77                 	db	119
  3724   00E6ED  C9                 	db	201
  3725   00E6EE  2A                 	db	42
  3726   00E6EF  EA                 	db	234
  3727   00E6F0  F9                 	db	249
  3728   00E6F1  EB                 	db	235
  3729   00E6F2  2A                 	db	42
  3730   00E6F3  B3                 	db	179
  3731   00E6F4  F9                 	db	249
  3732   00E6F5  7B                 	db	123
  3733   00E6F6  96                 	db	150
  3734   00E6F7  23                 	db	35
  3735   00E6F8  7A                 	db	122
  3736   00E6F9  9E                 	db	158
  3737   00E6FA  C9                 	db	201
  3738   00E6FB  CD                 	db	205
  3739   00E6FC  7F                 	db	127
  3740   00E6FD  F1                 	db	241
  3741   00E6FE  D8                 	db	216
  3742   00E6FF  13                 	db	19
  3743   00E700  72                 	db	114
  3744   00E701  2B                 	db	43
  3745   00E702  73                 	db	115
  3746   00E703  C9                 	db	201
  3747   00E704  7B                 	db	123
  3748   00E705  95                 	db	149
  3749   00E706  6F                 	db	111
  3750   00E707  7A                 	db	122
  3751   00E708  9C                 	db	156
  3752   00E709  67                 	db	103
  3753   00E70A  C9                 	db	201
  3754   00E70B  0E                 	db	14
  3755   00E70C  FF                 	db	255
  3756   00E70D  2A                 	db	42
  3757   00E70E  EC                 	db	236
  3758   00E70F  F9                 	db	249
  3759   00E710  EB                 	db	235
  3760   00E711  2A                 	db	42
  3761   00E712  CC                 	db	204
  3762   00E713  F9                 	db	249
  3763   00E714  CD                 	db	205
  3764   00E715  95                 	db	149
  3765   00E716  F1                 	db	241
  3766   00E717  D0                 	db	208
  3767   00E718  C5                 	db	197
  3768   00E719  CD                 	db	205
  3769   00E71A  F7                 	db	247
  3770   00E71B  F0                 	db	240
  3771   00E71C  2A                 	db	42
  3772   00E71D  BD                 	db	189
  3773   00E71E  F9                 	db	249
  3774   00E71F  EB                 	db	235
  3775   00E720  2A                 	db	42
  3776   00E721  EC                 	db	236
  3777   00E722  F9                 	db	249
  3778   00E723  19                 	db	25
  3779   00E724  C1                 	db	193
  3780   00E725  0C                 	db	12
  3781   00E726  CA                 	db	202
  3782   00E727  C4                 	db	196
  3783   00E728  F1                 	db	241
  3784   00E729  BE                 	db	190
  3785   00E72A  C8                 	db	200
  3786   00E72B  CD                 	db	205
  3787   00E72C  7F                 	db	127
  3788   00E72D  F1                 	db	241
  3789   00E72E  D0                 	db	208
  3790   00E72F  CD                 	db	205
  3791   00E730  2C                 	db	44
  3792   00E731  F1                 	db	241
  3793   00E732  C9                 	db	201
  3794   00E733  77                 	db	119
  3795   00E734  C9                 	db	201
  3796   00E735  CD                 	db	205
  3797   00E736  9C                 	db	156
  3798   00E737  F1                 	db	241
  3799   00E738  CD                 	db	205
  3800   00E739  E0                 	db	224
  3801   00E73A  F1                 	db	241
  3802   00E73B  0E                 	db	14
  3803   00E73C  01                 	db	1
  3804   00E73D  CD                 	db	205
  3805   00E73E  B8                 	db	184
  3806   00E73F  EF                 	db	239
  3807   00E740  C3                 	db	195
  3808   00E741  DA                 	db	218
  3809   00E742  F1                 	db	241
  3810   00E743  CD                 	db	205
  3811   00E744  E0                 	db	224
  3812   00E745  F1                 	db	241
  3813   00E746  CD                 	db	205
  3814   00E747  B2                 	db	178
  3815   00E748  EF                 	db	239
  3816   00E749  21                 	db	33
  3817   00E74A  B1                 	db	177
  3818   00E74B  F9                 	db	249
  3819   00E74C  C3                 	db	195
  3820   00E74D  E3                 	db	227
  3821   00E74E  F1                 	db	241
  3822   00E74F  21                 	db	33
  3823   00E750  B9                 	db	185
  3824   00E751  F9                 	db	249
  3825   00E752  4E                 	db	78
  3826   00E753  23                 	db	35
  3827   00E754  46                 	db	70
  3828   00E755  C3                 	db	195
  3829   00E756  24                 	db	36
  3830   00E757  FA                 	db	250
  3831   00E758  2A                 	db	42
  3832   00E759  B9                 	db	185
  3833   00E75A  F9                 	db	249
  3834   00E75B  EB                 	db	235
  3835   00E75C  2A                 	db	42
  3836   00E75D  B1                 	db	177
  3837   00E75E  F9                 	db	249
  3838   00E75F  0E                 	db	14
  3839   00E760  80                 	db	128
  3840   00E761  C3                 	db	195
  3841   00E762  4F                 	db	79
  3842   00E763  EF                 	db	239
  3843   00E764  21                 	db	33
  3844   00E765  EA                 	db	234
  3845   00E766  F9                 	db	249
  3846   00E767  7E                 	db	126
  3847   00E768  23                 	db	35
  3848   00E769  BE                 	db	190
  3849   00E76A  C0                 	db	192
  3850   00E76B  3C                 	db	60
  3851   00E76C  C9                 	db	201
  3852   00E76D  21                 	db	33
  3853   00E76E  FF                 	db	255
  3854   00E76F  FF                 	db	255
  3855   00E770  22                 	db	34
  3856   00E771  EA                 	db	234
  3857   00E772  F9                 	db	249
  3858   00E773  C9                 	db	201
  3859   00E774  2A                 	db	42
  3860   00E775  C8                 	db	200
  3861   00E776  F9                 	db	249
  3862   00E777  EB                 	db	235
  3863   00E778  2A                 	db	42
  3864   00E779  EA                 	db	234
  3865   00E77A  F9                 	db	249
  3866   00E77B  23                 	db	35
  3867   00E77C  22                 	db	34
  3868   00E77D  EA                 	db	234
  3869   00E77E  F9                 	db	249
  3870   00E77F  CD                 	db	205
  3871   00E780  95                 	db	149
  3872   00E781  F1                 	db	241
  3873   00E782  D2                 	db	210
  3874   00E783  19                 	db	25
  3875   00E784  F2                 	db	242
  3876   00E785  C3                 	db	195
  3877   00E786  FE                 	db	254
  3878   00E787  F1                 	db	241
  3879   00E788  3A                 	db	58
  3880   00E789  EA                 	db	234
  3881   00E78A  F9                 	db	249
  3882   00E78B  E6                 	db	230
  3883   00E78C  03                 	db	3
  3884   00E78D  06                 	db	6
  3885   00E78E  05                 	db	5
  3886   00E78F  87                 	db	135
  3887   00E790  05                 	db	5
  3888   00E791  C2                 	db	194
  3889   00E792  20                 	db	32
  3890   00E793  F2                 	db	242
  3891   00E794  32                 	db	50
  3892   00E795  E9                 	db	233
  3893   00E796  F9                 	db	249
  3894   00E797  B7                 	db	183
  3895   00E798  C0                 	db	192
  3896   00E799  C5                 	db	197
  3897   00E79A  CD                 	db	205
  3898   00E79B  C3                 	db	195
  3899   00E79C  EF                 	db	239
  3900   00E79D  CD                 	db	205
  3901   00E79E  D4                 	db	212
  3902   00E79F  F1                 	db	241
  3903   00E7A0  C1                 	db	193
  3904   00E7A1  C3                 	db	195
  3905   00E7A2  9E                 	db	158
  3906   00E7A3  F1                 	db	241
  3907   00E7A4  79                 	db	121
  3908   00E7A5  E6                 	db	230
  3909   00E7A6  07                 	db	7
  3910   00E7A7  3C                 	db	60
  3911   00E7A8  5F                 	db	95
  3912   00E7A9  57                 	db	87
  3913   00E7AA  79                 	db	121
  3914   00E7AB  0F                 	db	15
  3915   00E7AC  0F                 	db	15
  3916   00E7AD  0F                 	db	15
  3917   00E7AE  E6                 	db	230
  3918   00E7AF  1F                 	db	31
  3919   00E7B0  4F                 	db	79
  3920   00E7B1  78                 	db	120
  3921   00E7B2  87                 	db	135
  3922   00E7B3  87                 	db	135
  3923   00E7B4  87                 	db	135
  3924   00E7B5  87                 	db	135
  3925   00E7B6  87                 	db	135
  3926   00E7B7  B1                 	db	177
  3927   00E7B8  4F                 	db	79
  3928   00E7B9  78                 	db	120
  3929   00E7BA  0F                 	db	15
  3930   00E7BB  0F                 	db	15
  3931   00E7BC  0F                 	db	15
  3932   00E7BD  E6                 	db	230
  3933   00E7BE  1F                 	db	31
  3934   00E7BF  47                 	db	71
  3935   00E7C0  2A                 	db	42
  3936   00E7C1  BF                 	db	191
  3937   00E7C2  F9                 	db	249
  3938   00E7C3  09                 	db	9
  3939   00E7C4  7E                 	db	126
  3940   00E7C5  07                 	db	7
  3941   00E7C6  1D                 	db	29
  3942   00E7C7  C2                 	db	194
  3943   00E7C8  56                 	db	86
  3944   00E7C9  F2                 	db	242
  3945   00E7CA  C9                 	db	201
  3946   00E7CB  D5                 	db	213
  3947   00E7CC  CD                 	db	205
  3948   00E7CD  35                 	db	53
  3949   00E7CE  F2                 	db	242
  3950   00E7CF  E6                 	db	230
  3951   00E7D0  FE                 	db	254
  3952   00E7D1  C1                 	db	193
  3953   00E7D2  B1                 	db	177
  3954   00E7D3  0F                 	db	15
  3955   00E7D4  15                 	db	21
  3956   00E7D5  C2                 	db	194
  3957   00E7D6  64                 	db	100
  3958   00E7D7  F2                 	db	242
  3959   00E7D8  77                 	db	119
  3960   00E7D9  C9                 	db	201
  3961   00E7DA  CD                 	db	205
  3962   00E7DB  5E                 	db	94
  3963   00E7DC  F1                 	db	241
  3964   00E7DD  11                 	db	17
  3965   00E7DE  10                 	db	16
  3966   00E7DF  00                 	db	0
  3967   00E7E0  19                 	db	25
  3968   00E7E1  C5                 	db	197
  3969   00E7E2  0E                 	db	14
  3970   00E7E3  11                 	db	17
  3971   00E7E4  D1                 	db	209
  3972   00E7E5  0D                 	db	13
  3973   00E7E6  C8                 	db	200
  3974   00E7E7  D5                 	db	213
  3975   00E7E8  3A                 	db	58
  3976   00E7E9  DD                 	db	221
  3977   00E7EA  F9                 	db	249
  3978   00E7EB  B7                 	db	183
  3979   00E7EC  CA                 	db	202
  3980   00E7ED  88                 	db	136
  3981   00E7EE  F2                 	db	242
  3982   00E7EF  C5                 	db	197
  3983   00E7F0  E5                 	db	229
  3984   00E7F1  4E                 	db	78
  3985   00E7F2  06                 	db	6
  3986   00E7F3  00                 	db	0
  3987   00E7F4  C3                 	db	195
  3988   00E7F5  8E                 	db	142
  3989   00E7F6  F2                 	db	242
  3990   00E7F7  0D                 	db	13
  3991   00E7F8  C5                 	db	197
  3992   00E7F9  4E                 	db	78
  3993   00E7FA  23                 	db	35
  3994   00E7FB  46                 	db	70
  3995   00E7FC  E5                 	db	229
  3996   00E7FD  79                 	db	121
  3997   00E7FE  B0                 	db	176
  3998   00E7FF  CA                 	db	202
  3999   00E800  9D                 	db	157
  4000   00E801  F2                 	db	242
  4001   00E802  2A                 	db	42
  4002   00E803  C6                 	db	198
  4003   00E804  F9                 	db	249
  4004   00E805  7D                 	db	125
  4005   00E806  91                 	db	145
  4006   00E807  7C                 	db	124
  4007   00E808  98                 	db	152
  4008   00E809  D4                 	db	212
  4009   00E80A  5C                 	db	92
  4010   00E80B  F2                 	db	242
  4011   00E80C  E1                 	db	225
  4012   00E80D  23                 	db	35
  4013   00E80E  C1                 	db	193
  4014   00E80F  C3                 	db	195
  4015   00E810  75                 	db	117
  4016   00E811  F2                 	db	242
  4017   00E812  2A                 	db	42
  4018   00E813  C6                 	db	198
  4019   00E814  F9                 	db	249
  4020   00E815  0E                 	db	14
  4021   00E816  03                 	db	3
  4022   00E817  CD                 	db	205
  4023   00E818  EA                 	db	234
  4024   00E819  F0                 	db	240
  4025   00E81A  23                 	db	35
  4026   00E81B  44                 	db	68
  4027   00E81C  4D                 	db	77
  4028   00E81D  2A                 	db	42
  4029   00E81E  BF                 	db	191
  4030   00E81F  F9                 	db	249
  4031   00E820  36                 	db	54
  4032   00E821  00                 	db	0
  4033   00E822  23                 	db	35
  4034   00E823  0B                 	db	11
  4035   00E824  78                 	db	120
  4036   00E825  B1                 	db	177
  4037   00E826  C2                 	db	194
  4038   00E827  B1                 	db	177
  4039   00E828  F2                 	db	242
  4040   00E829  2A                 	db	42
  4041   00E82A  CA                 	db	202
  4042   00E82B  F9                 	db	249
  4043   00E82C  EB                 	db	235
  4044   00E82D  2A                 	db	42
  4045   00E82E  BF                 	db	191
  4046   00E82F  F9                 	db	249
  4047   00E830  73                 	db	115
  4048   00E831  23                 	db	35
  4049   00E832  72                 	db	114
  4050   00E833  CD                 	db	205
  4051   00E834  A1                 	db	161
  4052   00E835  EF                 	db	239
  4053   00E836  2A                 	db	42
  4054   00E837  B3                 	db	179
  4055   00E838  F9                 	db	249
  4056   00E839  36                 	db	54
  4057   00E83A  03                 	db	3
  4058   00E83B  23                 	db	35
  4059   00E83C  36                 	db	54
  4060   00E83D  00                 	db	0
  4061   00E83E  CD                 	db	205
  4062   00E83F  FE                 	db	254
  4063   00E840  F1                 	db	241
  4064   00E841  0E                 	db	14
  4065   00E842  FF                 	db	255
  4066   00E843  CD                 	db	205
  4067   00E844  05                 	db	5
  4068   00E845  F2                 	db	242
  4069   00E846  CD                 	db	205
  4070   00E847  F5                 	db	245
  4071   00E848  F1                 	db	241
  4072   00E849  C8                 	db	200
  4073   00E84A  CD                 	db	205
  4074   00E84B  5E                 	db	94
  4075   00E84C  F1                 	db	241
  4076   00E84D  3E                 	db	62
  4077   00E84E  E5                 	db	229
  4078   00E84F  BE                 	db	190
  4079   00E850  CA                 	db	202
  4080   00E851  D2                 	db	210
  4081   00E852  F2                 	db	242
  4082   00E853  3A                 	db	58
  4083   00E854  41                 	db	65
  4084   00E855  EF                 	db	239
  4085   00E856  BE                 	db	190
  4086   00E857  C2                 	db	194
  4087   00E858  F6                 	db	246
  4088   00E859  F2                 	db	242
  4089   00E85A  23                 	db	35
  4090   00E85B  7E                 	db	126
  4091   00E85C  D6                 	db	214
  4092   00E85D  24                 	db	36
  4093   00E85E  C2                 	db	194
  4094   00E85F  F6                 	db	246
  4095   00E860  F2                 	db	242
  4096   00E861  3D                 	db	61
  4097   00E862  32                 	db	50
  4098   00E863  45                 	db	69
  4099   00E864  EF                 	db	239
  4100   00E865  0E                 	db	14
  4101   00E866  01                 	db	1
  4102   00E867  CD                 	db	205
  4103   00E868  6B                 	db	107
  4104   00E869  F2                 	db	242
  4105   00E86A  CD                 	db	205
  4106   00E86B  8C                 	db	140
  4107   00E86C  F1                 	db	241
  4108   00E86D  C3                 	db	195
  4109   00E86E  D2                 	db	210
  4110   00E86F  F2                 	db	242
  4111   00E870  3A                 	db	58
  4112   00E871  D4                 	db	212
  4113   00E872  F9                 	db	249
  4114   00E873  C3                 	db	195
  4115   00E874  01                 	db	1
  4116   00E875  EF                 	db	239
  4117   00E876  C5                 	db	197
  4118   00E877  F5                 	db	245
  4119   00E878  3A                 	db	58
  4120   00E879  C5                 	db	197
  4121   00E87A  F9                 	db	249
  4122   00E87B  2F                 	db	47
  4123   00E87C  47                 	db	71
  4124   00E87D  79                 	db	121
  4125   00E87E  A0                 	db	160
  4126   00E87F  4F                 	db	79
  4127   00E880  F1                 	db	241
  4128   00E881  A0                 	db	160
  4129   00E882  91                 	db	145
  4130   00E883  E6                 	db	230
  4131   00E884  1F                 	db	31
  4132   00E885  C1                 	db	193
  4133   00E886  C9                 	db	201
  4134   00E887  3E                 	db	62
  4135   00E888  FF                 	db	255
  4136   00E889  32                 	db	50
  4137   00E88A  D4                 	db	212
  4138   00E88B  F9                 	db	249
  4139   00E88C  21                 	db	33
  4140   00E88D  D8                 	db	216
  4141   00E88E  F9                 	db	249
  4142   00E88F  71                 	db	113
  4143   00E890  2A                 	db	42
  4144   00E891  43                 	db	67
  4145   00E892  EF                 	db	239
  4146   00E893  22                 	db	34
  4147   00E894  D9                 	db	217
  4148   00E895  F9                 	db	249
  4149   00E896  CD                 	db	205
  4150   00E897  FE                 	db	254
  4151   00E898  F1                 	db	241
  4152   00E899  CD                 	db	205
  4153   00E89A  A1                 	db	161
  4154   00E89B  EF                 	db	239
  4155   00E89C  0E                 	db	14
  4156   00E89D  00                 	db	0
  4157   00E89E  CD                 	db	205
  4158   00E89F  05                 	db	5
  4159   00E8A0  F2                 	db	242
  4160   00E8A1  CD                 	db	205
  4161   00E8A2  F5                 	db	245
  4162   00E8A3  F1                 	db	241
  4163   00E8A4  CA                 	db	202
  4164   00E8A5  94                 	db	148
  4165   00E8A6  F3                 	db	243
  4166   00E8A7  2A                 	db	42
  4167   00E8A8  D9                 	db	217
  4168   00E8A9  F9                 	db	249
  4169   00E8AA  EB                 	db	235
  4170   00E8AB  1A                 	db	26
  4171   00E8AC  FE                 	db	254
  4172   00E8AD  E5                 	db	229
  4173   00E8AE  CA                 	db	202
  4174   00E8AF  4A                 	db	74
  4175   00E8B0  F3                 	db	243
  4176   00E8B1  D5                 	db	213
  4177   00E8B2  CD                 	db	205
  4178   00E8B3  7F                 	db	127
  4179   00E8B4  F1                 	db	241
  4180   00E8B5  D1                 	db	209
  4181   00E8B6  D2                 	db	210
  4182   00E8B7  94                 	db	148
  4183   00E8B8  F3                 	db	243
  4184   00E8B9  CD                 	db	205
  4185   00E8BA  5E                 	db	94
  4186   00E8BB  F1                 	db	241
  4187   00E8BC  3A                 	db	58
  4188   00E8BD  D8                 	db	216
  4189   00E8BE  F9                 	db	249
  4190   00E8BF  4F                 	db	79
  4191   00E8C0  06                 	db	6
  4192   00E8C1  00                 	db	0
  4193   00E8C2  79                 	db	121
  4194   00E8C3  B7                 	db	183
  4195   00E8C4  CA                 	db	202
  4196   00E8C5  83                 	db	131
  4197   00E8C6  F3                 	db	243
  4198   00E8C7  1A                 	db	26
  4199   00E8C8  FE                 	db	254
  4200   00E8C9  3F                 	db	63
  4201   00E8CA  CA                 	db	202
  4202   00E8CB  7C                 	db	124
  4203   00E8CC  F3                 	db	243
  4204   00E8CD  78                 	db	120
  4205   00E8CE  FE                 	db	254
  4206   00E8CF  0D                 	db	13
  4207   00E8D0  CA                 	db	202
  4208   00E8D1  7C                 	db	124
  4209   00E8D2  F3                 	db	243
  4210   00E8D3  FE                 	db	254
  4211   00E8D4  0C                 	db	12
  4212   00E8D5  1A                 	db	26
  4213   00E8D6  CA                 	db	202
  4214   00E8D7  73                 	db	115
  4215   00E8D8  F3                 	db	243
  4216   00E8D9  96                 	db	150
  4217   00E8DA  E6                 	db	230
  4218   00E8DB  7F                 	db	127
  4219   00E8DC  C2                 	db	194
  4220   00E8DD  2D                 	db	45
  4221   00E8DE  F3                 	db	243
  4222   00E8DF  C3                 	db	195
  4223   00E8E0  7C                 	db	124
  4224   00E8E1  F3                 	db	243
  4225   00E8E2  C5                 	db	197
  4226   00E8E3  4E                 	db	78
  4227   00E8E4  CD                 	db	205
  4228   00E8E5  07                 	db	7
  4229   00E8E6  F3                 	db	243
  4230   00E8E7  C1                 	db	193
  4231   00E8E8  C2                 	db	194
  4232   00E8E9  2D                 	db	45
  4233   00E8EA  F3                 	db	243
  4234   00E8EB  13                 	db	19
  4235   00E8EC  23                 	db	35
  4236   00E8ED  04                 	db	4
  4237   00E8EE  0D                 	db	13
  4238   00E8EF  C3                 	db	195
  4239   00E8F0  53                 	db	83
  4240   00E8F1  F3                 	db	243
  4241   00E8F2  3A                 	db	58
  4242   00E8F3  EA                 	db	234
  4243   00E8F4  F9                 	db	249
  4244   00E8F5  E6                 	db	230
  4245   00E8F6  03                 	db	3
  4246   00E8F7  32                 	db	50
  4247   00E8F8  45                 	db	69
  4248   00E8F9  EF                 	db	239
  4249   00E8FA  21                 	db	33
  4250   00E8FB  D4                 	db	212
  4251   00E8FC  F9                 	db	249
  4252   00E8FD  7E                 	db	126
  4253   00E8FE  17                 	db	23
  4254   00E8FF  D0                 	db	208
  4255   00E900  AF                 	db	175
  4256   00E901  77                 	db	119
  4257   00E902  C9                 	db	201
  4258   00E903  CD                 	db	205
  4259   00E904  FE                 	db	254
  4260   00E905  F1                 	db	241
  4261   00E906  3E                 	db	62
  4262   00E907  FF                 	db	255
  4263   00E908  C3                 	db	195
  4264   00E909  01                 	db	1
  4265   00E90A  EF                 	db	239
  4266   00E90B  CD                 	db	205
  4267   00E90C  54                 	db	84
  4268   00E90D  F1                 	db	241
  4269   00E90E  0E                 	db	14
  4270   00E90F  0C                 	db	12
  4271   00E910  CD                 	db	205
  4272   00E911  18                 	db	24
  4273   00E912  F3                 	db	243
  4274   00E913  CD                 	db	205
  4275   00E914  F5                 	db	245
  4276   00E915  F1                 	db	241
  4277   00E916  C8                 	db	200
  4278   00E917  CD                 	db	205
  4279   00E918  44                 	db	68
  4280   00E919  F1                 	db	241
  4281   00E91A  CD                 	db	205
  4282   00E91B  5E                 	db	94
  4283   00E91C  F1                 	db	241
  4284   00E91D  36                 	db	54
  4285   00E91E  E5                 	db	229
  4286   00E91F  0E                 	db	14
  4287   00E920  00                 	db	0
  4288   00E921  CD                 	db	205
  4289   00E922  6B                 	db	107
  4290   00E923  F2                 	db	242
  4291   00E924  CD                 	db	205
  4292   00E925  C6                 	db	198
  4293   00E926  F1                 	db	241
  4294   00E927  CD                 	db	205
  4295   00E928  2D                 	db	45
  4296   00E929  F3                 	db	243
  4297   00E92A  C3                 	db	195
  4298   00E92B  A4                 	db	164
  4299   00E92C  F3                 	db	243
  4300   00E92D  50                 	db	80
  4301   00E92E  59                 	db	89
  4302   00E92F  79                 	db	121
  4303   00E930  B0                 	db	176
  4304   00E931  CA                 	db	202
  4305   00E932  D1                 	db	209
  4306   00E933  F3                 	db	243
  4307   00E934  0B                 	db	11
  4308   00E935  D5                 	db	213
  4309   00E936  C5                 	db	197
  4310   00E937  CD                 	db	205
  4311   00E938  35                 	db	53
  4312   00E939  F2                 	db	242
  4313   00E93A  1F                 	db	31
  4314   00E93B  D2                 	db	210
  4315   00E93C  EC                 	db	236
  4316   00E93D  F3                 	db	243
  4317   00E93E  C1                 	db	193
  4318   00E93F  D1                 	db	209
  4319   00E940  2A                 	db	42
  4320   00E941  C6                 	db	198
  4321   00E942  F9                 	db	249
  4322   00E943  7B                 	db	123
  4323   00E944  95                 	db	149
  4324   00E945  7A                 	db	122
  4325   00E946  9C                 	db	156
  4326   00E947  D2                 	db	210
  4327   00E948  F4                 	db	244
  4328   00E949  F3                 	db	243
  4329   00E94A  13                 	db	19
  4330   00E94B  C5                 	db	197
  4331   00E94C  D5                 	db	213
  4332   00E94D  42                 	db	66
  4333   00E94E  4B                 	db	75
  4334   00E94F  CD                 	db	205
  4335   00E950  35                 	db	53
  4336   00E951  F2                 	db	242
  4337   00E952  1F                 	db	31
  4338   00E953  D2                 	db	210
  4339   00E954  EC                 	db	236
  4340   00E955  F3                 	db	243
  4341   00E956  D1                 	db	209
  4342   00E957  C1                 	db	193
  4343   00E958  C3                 	db	195
  4344   00E959  C0                 	db	192
  4345   00E95A  F3                 	db	243
  4346   00E95B  17                 	db	23
  4347   00E95C  3C                 	db	60
  4348   00E95D  CD                 	db	205
  4349   00E95E  64                 	db	100
  4350   00E95F  F2                 	db	242
  4351   00E960  E1                 	db	225
  4352   00E961  D1                 	db	209
  4353   00E962  C9                 	db	201
  4354   00E963  79                 	db	121
  4355   00E964  B0                 	db	176
  4356   00E965  C2                 	db	194
  4357   00E966  C0                 	db	192
  4358   00E967  F3                 	db	243
  4359   00E968  21                 	db	33
  4360   00E969  00                 	db	0
  4361   00E96A  00                 	db	0
  4362   00E96B  C9                 	db	201
  4363   00E96C  0E                 	db	14
  4364   00E96D  00                 	db	0
  4365   00E96E  1E                 	db	30
  4366   00E96F  20                 	db	32
  4367   00E970  D5                 	db	213
  4368   00E971  06                 	db	6
  4369   00E972  00                 	db	0
  4370   00E973  2A                 	db	42
  4371   00E974  43                 	db	67
  4372   00E975  EF                 	db	239
  4373   00E976  09                 	db	9
  4374   00E977  EB                 	db	235
  4375   00E978  CD                 	db	205
  4376   00E979  5E                 	db	94
  4377   00E97A  F1                 	db	241
  4378   00E97B  C1                 	db	193
  4379   00E97C  CD                 	db	205
  4380   00E97D  4F                 	db	79
  4381   00E97E  EF                 	db	239
  4382   00E97F  CD                 	db	205
  4383   00E980  C3                 	db	195
  4384   00E981  EF                 	db	239
  4385   00E982  C3                 	db	195
  4386   00E983  C6                 	db	198
  4387   00E984  F1                 	db	241
  4388   00E985  CD                 	db	205
  4389   00E986  54                 	db	84
  4390   00E987  F1                 	db	241
  4391   00E988  0E                 	db	14
  4392   00E989  0C                 	db	12
  4393   00E98A  CD                 	db	205
  4394   00E98B  18                 	db	24
  4395   00E98C  F3                 	db	243
  4396   00E98D  2A                 	db	42
  4397   00E98E  43                 	db	67
  4398   00E98F  EF                 	db	239
  4399   00E990  7E                 	db	126
  4400   00E991  11                 	db	17
  4401   00E992  10                 	db	16
  4402   00E993  00                 	db	0
  4403   00E994  19                 	db	25
  4404   00E995  77                 	db	119
  4405   00E996  CD                 	db	205
  4406   00E997  F5                 	db	245
  4407   00E998  F1                 	db	241
  4408   00E999  C8                 	db	200
  4409   00E99A  CD                 	db	205
  4410   00E99B  44                 	db	68
  4411   00E99C  F1                 	db	241
  4412   00E99D  0E                 	db	14
  4413   00E99E  10                 	db	16
  4414   00E99F  1E                 	db	30
  4415   00E9A0  0C                 	db	12
  4416   00E9A1  CD                 	db	205
  4417   00E9A2  01                 	db	1
  4418   00E9A3  F4                 	db	244
  4419   00E9A4  CD                 	db	205
  4420   00E9A5  2D                 	db	45
  4421   00E9A6  F3                 	db	243
  4422   00E9A7  C3                 	db	195
  4423   00E9A8  27                 	db	39
  4424   00E9A9  F4                 	db	244
  4425   00E9AA  0E                 	db	14
  4426   00E9AB  0C                 	db	12
  4427   00E9AC  CD                 	db	205
  4428   00E9AD  18                 	db	24
  4429   00E9AE  F3                 	db	243
  4430   00E9AF  CD                 	db	205
  4431   00E9B0  F5                 	db	245
  4432   00E9B1  F1                 	db	241
  4433   00E9B2  C8                 	db	200
  4434   00E9B3  0E                 	db	14
  4435   00E9B4  00                 	db	0
  4436   00E9B5  1E                 	db	30
  4437   00E9B6  0C                 	db	12
  4438   00E9B7  CD                 	db	205
  4439   00E9B8  01                 	db	1
  4440   00E9B9  F4                 	db	244
  4441   00E9BA  CD                 	db	205
  4442   00E9BB  2D                 	db	45
  4443   00E9BC  F3                 	db	243
  4444   00E9BD  C3                 	db	195
  4445   00E9BE  40                 	db	64
  4446   00E9BF  F4                 	db	244
  4447   00E9C0  0E                 	db	14
  4448   00E9C1  0F                 	db	15
  4449   00E9C2  CD                 	db	205
  4450   00E9C3  18                 	db	24
  4451   00E9C4  F3                 	db	243
  4452   00E9C5  CD                 	db	205
  4453   00E9C6  F5                 	db	245
  4454   00E9C7  F1                 	db	241
  4455   00E9C8  C8                 	db	200
  4456   00E9C9  CD                 	db	205
  4457   00E9CA  A6                 	db	166
  4458   00E9CB  F0                 	db	240
  4459   00E9CC  7E                 	db	126
  4460   00E9CD  F5                 	db	245
  4461   00E9CE  E5                 	db	229
  4462   00E9CF  CD                 	db	205
  4463   00E9D0  5E                 	db	94
  4464   00E9D1  F1                 	db	241
  4465   00E9D2  EB                 	db	235
  4466   00E9D3  2A                 	db	42
  4467   00E9D4  43                 	db	67
  4468   00E9D5  EF                 	db	239
  4469   00E9D6  0E                 	db	14
  4470   00E9D7  20                 	db	32
  4471   00E9D8  D5                 	db	213
  4472   00E9D9  CD                 	db	205
  4473   00E9DA  4F                 	db	79
  4474   00E9DB  EF                 	db	239
  4475   00E9DC  CD                 	db	205
  4476   00E9DD  78                 	db	120
  4477   00E9DE  F1                 	db	241
  4478   00E9DF  D1                 	db	209
  4479   00E9E0  21                 	db	33
  4480   00E9E1  0C                 	db	12
  4481   00E9E2  00                 	db	0
  4482   00E9E3  19                 	db	25
  4483   00E9E4  4E                 	db	78
  4484   00E9E5  21                 	db	33
  4485   00E9E6  0F                 	db	15
  4486   00E9E7  00                 	db	0
  4487   00E9E8  19                 	db	25
  4488   00E9E9  46                 	db	70
  4489   00E9EA  E1                 	db	225
  4490   00E9EB  F1                 	db	241
  4491   00E9EC  77                 	db	119
  4492   00E9ED  79                 	db	121
  4493   00E9EE  BE                 	db	190
  4494   00E9EF  78                 	db	120
  4495   00E9F0  CA                 	db	202
  4496   00E9F1  8B                 	db	139
  4497   00E9F2  F4                 	db	244
  4498   00E9F3  3E                 	db	62
  4499   00E9F4  00                 	db	0
  4500   00E9F5  DA                 	db	218
  4501   00E9F6  8B                 	db	139
  4502   00E9F7  F4                 	db	244
  4503   00E9F8  3E                 	db	62
  4504   00E9F9  80                 	db	128
  4505   00E9FA  2A                 	db	42
  4506   00E9FB  43                 	db	67
  4507   00E9FC  EF                 	db	239
  4508   00E9FD  11                 	db	17
  4509   00E9FE  0F                 	db	15
  4510   00E9FF  00                 	db	0
  4511   00EA00  19                 	db	25
  4512   00EA01  77                 	db	119
  4513   00EA02  C9                 	db	201
  4514   00EA03  7E                 	db	126
  4515   00EA04  23                 	db	35
  4516   00EA05  B6                 	db	182
  4517   00EA06  2B                 	db	43
  4518   00EA07  C0                 	db	192
  4519   00EA08  1A                 	db	26
  4520   00EA09  77                 	db	119
  4521   00EA0A  13                 	db	19
  4522   00EA0B  23                 	db	35
  4523   00EA0C  1A                 	db	26
  4524   00EA0D  77                 	db	119
  4525   00EA0E  1B                 	db	27
  4526   00EA0F  2B                 	db	43
  4527   00EA10  C9                 	db	201
  4528   00EA11  AF                 	db	175
  4529   00EA12  32                 	db	50
  4530   00EA13  45                 	db	69
  4531   00EA14  EF                 	db	239
  4532   00EA15  32                 	db	50
  4533   00EA16  EA                 	db	234
  4534   00EA17  F9                 	db	249
  4535   00EA18  32                 	db	50
  4536   00EA19  EB                 	db	235
  4537   00EA1A  F9                 	db	249
  4538   00EA1B  CD                 	db	205
  4539   00EA1C  1E                 	db	30
  4540   00EA1D  F1                 	db	241
  4541   00EA1E  C0                 	db	192
  4542   00EA1F  CD                 	db	205
  4543   00EA20  69                 	db	105
  4544   00EA21  F1                 	db	241
  4545   00EA22  E6                 	db	230
  4546   00EA23  80                 	db	128
  4547   00EA24  C0                 	db	192
  4548   00EA25  0E                 	db	14
  4549   00EA26  0F                 	db	15
  4550   00EA27  CD                 	db	205
  4551   00EA28  18                 	db	24
  4552   00EA29  F3                 	db	243
  4553   00EA2A  CD                 	db	205
  4554   00EA2B  F5                 	db	245
  4555   00EA2C  F1                 	db	241
  4556   00EA2D  C8                 	db	200
  4557   00EA2E  01                 	db	1
  4558   00EA2F  10                 	db	16
  4559   00EA30  00                 	db	0
  4560   00EA31  CD                 	db	205
  4561   00EA32  5E                 	db	94
  4562   00EA33  F1                 	db	241
  4563   00EA34  09                 	db	9
  4564   00EA35  EB                 	db	235
  4565   00EA36  2A                 	db	42
  4566   00EA37  43                 	db	67
  4567   00EA38  EF                 	db	239
  4568   00EA39  09                 	db	9
  4569   00EA3A  0E                 	db	14
  4570   00EA3B  10                 	db	16
  4571   00EA3C  3A                 	db	58
  4572   00EA3D  DD                 	db	221
  4573   00EA3E  F9                 	db	249
  4574   00EA3F  B7                 	db	183
  4575   00EA40  CA                 	db	202
  4576   00EA41  E8                 	db	232
  4577   00EA42  F4                 	db	244
  4578   00EA43  7E                 	db	126
  4579   00EA44  B7                 	db	183
  4580   00EA45  1A                 	db	26
  4581   00EA46  C2                 	db	194
  4582   00EA47  DB                 	db	219
  4583   00EA48  F4                 	db	244
  4584   00EA49  77                 	db	119
  4585   00EA4A  B7                 	db	183
  4586   00EA4B  C2                 	db	194
  4587   00EA4C  E1                 	db	225
  4588   00EA4D  F4                 	db	244
  4589   00EA4E  7E                 	db	126
  4590   00EA4F  12                 	db	18
  4591   00EA50  BE                 	db	190
  4592   00EA51  C2                 	db	194
  4593   00EA52  1F                 	db	31
  4594   00EA53  F5                 	db	245
  4595   00EA54  C3                 	db	195
  4596   00EA55  FD                 	db	253
  4597   00EA56  F4                 	db	244
  4598   00EA57  CD                 	db	205
  4599   00EA58  94                 	db	148
  4600   00EA59  F4                 	db	244
  4601   00EA5A  EB                 	db	235
  4602   00EA5B  CD                 	db	205
  4603   00EA5C  94                 	db	148
  4604   00EA5D  F4                 	db	244
  4605   00EA5E  EB                 	db	235
  4606   00EA5F  1A                 	db	26
  4607   00EA60  BE                 	db	190
  4608   00EA61  C2                 	db	194
  4609   00EA62  1F                 	db	31
  4610   00EA63  F5                 	db	245
  4611   00EA64  13                 	db	19
  4612   00EA65  23                 	db	35
  4613   00EA66  1A                 	db	26
  4614   00EA67  BE                 	db	190
  4615   00EA68  C2                 	db	194
  4616   00EA69  1F                 	db	31
  4617   00EA6A  F5                 	db	245
  4618   00EA6B  0D                 	db	13
  4619   00EA6C  13                 	db	19
  4620   00EA6D  23                 	db	35
  4621   00EA6E  0D                 	db	13
  4622   00EA6F  C2                 	db	194
  4623   00EA70  CD                 	db	205
  4624   00EA71  F4                 	db	244
  4625   00EA72  01                 	db	1
  4626   00EA73  EC                 	db	236
  4627   00EA74  FF                 	db	255
  4628   00EA75  09                 	db	9
  4629   00EA76  EB                 	db	235
  4630   00EA77  09                 	db	9
  4631   00EA78  1A                 	db	26
  4632   00EA79  BE                 	db	190
  4633   00EA7A  DA                 	db	218
  4634   00EA7B  17                 	db	23
  4635   00EA7C  F5                 	db	245
  4636   00EA7D  77                 	db	119
  4637   00EA7E  01                 	db	1
  4638   00EA7F  03                 	db	3
  4639   00EA80  00                 	db	0
  4640   00EA81  09                 	db	9
  4641   00EA82  EB                 	db	235
  4642   00EA83  09                 	db	9
  4643   00EA84  7E                 	db	126
  4644   00EA85  12                 	db	18
  4645   00EA86  3E                 	db	62
  4646   00EA87  FF                 	db	255
  4647   00EA88  32                 	db	50
  4648   00EA89  D2                 	db	210
  4649   00EA8A  F9                 	db	249
  4650   00EA8B  C3                 	db	195
  4651   00EA8C  10                 	db	16
  4652   00EA8D  F4                 	db	244
  4653   00EA8E  21                 	db	33
  4654   00EA8F  45                 	db	69
  4655   00EA90  EF                 	db	239
  4656   00EA91  35                 	db	53
  4657   00EA92  C9                 	db	201
  4658   00EA93  CD                 	db	205
  4659   00EA94  54                 	db	84
  4660   00EA95  F1                 	db	241
  4661   00EA96  2A                 	db	42
  4662   00EA97  43                 	db	67
  4663   00EA98  EF                 	db	239
  4664   00EA99  E5                 	db	229
  4665   00EA9A  21                 	db	33
  4666   00EA9B  AC                 	db	172
  4667   00EA9C  F9                 	db	249
  4668   00EA9D  22                 	db	34
  4669   00EA9E  43                 	db	67
  4670   00EA9F  EF                 	db	239
  4671   00EAA0  0E                 	db	14
  4672   00EAA1  01                 	db	1
  4673   00EAA2  CD                 	db	205
  4674   00EAA3  18                 	db	24
  4675   00EAA4  F3                 	db	243
  4676   00EAA5  CD                 	db	205
  4677   00EAA6  F5                 	db	245
  4678   00EAA7  F1                 	db	241
  4679   00EAA8  E1                 	db	225
  4680   00EAA9  22                 	db	34
  4681   00EAAA  43                 	db	67
  4682   00EAAB  EF                 	db	239
  4683   00EAAC  C8                 	db	200
  4684   00EAAD  EB                 	db	235
  4685   00EAAE  21                 	db	33
  4686   00EAAF  0F                 	db	15
  4687   00EAB0  00                 	db	0
  4688   00EAB1  19                 	db	25
  4689   00EAB2  0E                 	db	14
  4690   00EAB3  11                 	db	17
  4691   00EAB4  AF                 	db	175
  4692   00EAB5  77                 	db	119
  4693   00EAB6  23                 	db	35
  4694   00EAB7  0D                 	db	13
  4695   00EAB8  C2                 	db	194
  4696   00EAB9  46                 	db	70
  4697   00EABA  F5                 	db	245
  4698   00EABB  21                 	db	33
  4699   00EABC  0D                 	db	13
  4700   00EABD  00                 	db	0
  4701   00EABE  19                 	db	25
  4702   00EABF  77                 	db	119
  4703   00EAC0  CD                 	db	205
  4704   00EAC1  8C                 	db	140
  4705   00EAC2  F1                 	db	241
  4706   00EAC3  CD                 	db	205
  4707   00EAC4  FD                 	db	253
  4708   00EAC5  F3                 	db	243
  4709   00EAC6  C3                 	db	195
  4710   00EAC7  78                 	db	120
  4711   00EAC8  F1                 	db	241
  4712   00EAC9  AF                 	db	175
  4713   00EACA  32                 	db	50
  4714   00EACB  D2                 	db	210
  4715   00EACC  F9                 	db	249
  4716   00EACD  CD                 	db	205
  4717   00EACE  A2                 	db	162
  4718   00EACF  F4                 	db	244
  4719   00EAD0  CD                 	db	205
  4720   00EAD1  F5                 	db	245
  4721   00EAD2  F1                 	db	241
  4722   00EAD3  C8                 	db	200
  4723   00EAD4  2A                 	db	42
  4724   00EAD5  43                 	db	67
  4725   00EAD6  EF                 	db	239
  4726   00EAD7  01                 	db	1
  4727   00EAD8  0C                 	db	12
  4728   00EAD9  00                 	db	0
  4729   00EADA  09                 	db	9
  4730   00EADB  7E                 	db	126
  4731   00EADC  3C                 	db	60
  4732   00EADD  E6                 	db	230
  4733   00EADE  1F                 	db	31
  4734   00EADF  77                 	db	119
  4735   00EAE0  CA                 	db	202
  4736   00EAE1  83                 	db	131
  4737   00EAE2  F5                 	db	245
  4738   00EAE3  47                 	db	71
  4739   00EAE4  3A                 	db	58
  4740   00EAE5  C5                 	db	197
  4741   00EAE6  F9                 	db	249
  4742   00EAE7  A0                 	db	160
  4743   00EAE8  21                 	db	33
  4744   00EAE9  D2                 	db	210
  4745   00EAEA  F9                 	db	249
  4746   00EAEB  A6                 	db	166
  4747   00EAEC  CA                 	db	202
  4748   00EAED  8E                 	db	142
  4749   00EAEE  F5                 	db	245
  4750   00EAEF  C3                 	db	195
  4751   00EAF0  AC                 	db	172
  4752   00EAF1  F5                 	db	245
  4753   00EAF2  01                 	db	1
  4754   00EAF3  02                 	db	2
  4755   00EAF4  00                 	db	0
  4756   00EAF5  09                 	db	9
  4757   00EAF6  34                 	db	52
  4758   00EAF7  7E                 	db	126
  4759   00EAF8  E6                 	db	230
  4760   00EAF9  0F                 	db	15
  4761   00EAFA  CA                 	db	202
  4762   00EAFB  B6                 	db	182
  4763   00EAFC  F5                 	db	245
  4764   00EAFD  0E                 	db	14
  4765   00EAFE  0F                 	db	15
  4766   00EAFF  CD                 	db	205
  4767   00EB00  18                 	db	24
  4768   00EB01  F3                 	db	243
  4769   00EB02  CD                 	db	205
  4770   00EB03  F5                 	db	245
  4771   00EB04  F1                 	db	241
  4772   00EB05  C2                 	db	194
  4773   00EB06  AC                 	db	172
  4774   00EB07  F5                 	db	245
  4775   00EB08  3A                 	db	58
  4776   00EB09  D3                 	db	211
  4777   00EB0A  F9                 	db	249
  4778   00EB0B  3C                 	db	60
  4779   00EB0C  CA                 	db	202
  4780   00EB0D  B6                 	db	182
  4781   00EB0E  F5                 	db	245
  4782   00EB0F  CD                 	db	205
  4783   00EB10  24                 	db	36
  4784   00EB11  F5                 	db	245
  4785   00EB12  CD                 	db	205
  4786   00EB13  F5                 	db	245
  4787   00EB14  F1                 	db	241
  4788   00EB15  CA                 	db	202
  4789   00EB16  B6                 	db	182
  4790   00EB17  F5                 	db	245
  4791   00EB18  C3                 	db	195
  4792   00EB19  AF                 	db	175
  4793   00EB1A  F5                 	db	245
  4794   00EB1B  CD                 	db	205
  4795   00EB1C  5A                 	db	90
  4796   00EB1D  F4                 	db	244
  4797   00EB1E  CD                 	db	205
  4798   00EB1F  BB                 	db	187
  4799   00EB20  F0                 	db	240
  4800   00EB21  AF                 	db	175
  4801   00EB22  C3                 	db	195
  4802   00EB23  01                 	db	1
  4803   00EB24  EF                 	db	239
  4804   00EB25  CD                 	db	205
  4805   00EB26  05                 	db	5
  4806   00EB27  EF                 	db	239
  4807   00EB28  C3                 	db	195
  4808   00EB29  78                 	db	120
  4809   00EB2A  F1                 	db	241
  4810   00EB2B  3E                 	db	62
  4811   00EB2C  01                 	db	1
  4812   00EB2D  32                 	db	50
  4813   00EB2E  D5                 	db	213
  4814   00EB2F  F9                 	db	249
  4815   00EB30  3E                 	db	62
  4816   00EB31  FF                 	db	255
  4817   00EB32  32                 	db	50
  4818   00EB33  D3                 	db	211
  4819   00EB34  F9                 	db	249
  4820   00EB35  CD                 	db	205
  4821   00EB36  BB                 	db	187
  4822   00EB37  F0                 	db	240
  4823   00EB38  3A                 	db	58
  4824   00EB39  E3                 	db	227
  4825   00EB3A  F9                 	db	249
  4826   00EB3B  21                 	db	33
  4827   00EB3C  E1                 	db	225
  4828   00EB3D  F9                 	db	249
  4829   00EB3E  BE                 	db	190
  4830   00EB3F  DA                 	db	218
  4831   00EB40  E6                 	db	230
  4832   00EB41  F5                 	db	245
  4833   00EB42  FE                 	db	254
  4834   00EB43  80                 	db	128
  4835   00EB44  C2                 	db	194
  4836   00EB45  FB                 	db	251
  4837   00EB46  F5                 	db	245
  4838   00EB47  CD                 	db	205
  4839   00EB48  5A                 	db	90
  4840   00EB49  F5                 	db	245
  4841   00EB4A  AF                 	db	175
  4842   00EB4B  32                 	db	50
  4843   00EB4C  E3                 	db	227
  4844   00EB4D  F9                 	db	249
  4845   00EB4E  3A                 	db	58
  4846   00EB4F  45                 	db	69
  4847   00EB50  EF                 	db	239
  4848   00EB51  B7                 	db	183
  4849   00EB52  C2                 	db	194
  4850   00EB53  FB                 	db	251
  4851   00EB54  F5                 	db	245
  4852   00EB55  CD                 	db	205
  4853   00EB56  77                 	db	119
  4854   00EB57  F0                 	db	240
  4855   00EB58  CD                 	db	205
  4856   00EB59  84                 	db	132
  4857   00EB5A  F0                 	db	240
  4858   00EB5B  CA                 	db	202
  4859   00EB5C  FB                 	db	251
  4860   00EB5D  F5                 	db	245
  4861   00EB5E  CD                 	db	205
  4862   00EB5F  8A                 	db	138
  4863   00EB60  F0                 	db	240
  4864   00EB61  CD                 	db	205
  4865   00EB62  D1                 	db	209
  4866   00EB63  EF                 	db	239
  4867   00EB64  CD                 	db	205
  4868   00EB65  B2                 	db	178
  4869   00EB66  EF                 	db	239
  4870   00EB67  C3                 	db	195
  4871   00EB68  D2                 	db	210
  4872   00EB69  F0                 	db	240
  4873   00EB6A  C3                 	db	195
  4874   00EB6B  05                 	db	5
  4875   00EB6C  EF                 	db	239
  4876   00EB6D  3E                 	db	62
  4877   00EB6E  01                 	db	1
  4878   00EB6F  32                 	db	50
  4879   00EB70  D5                 	db	213
  4880   00EB71  F9                 	db	249
  4881   00EB72  3E                 	db	62
  4882   00EB73  00                 	db	0
  4883   00EB74  32                 	db	50
  4884   00EB75  D3                 	db	211
  4885   00EB76  F9                 	db	249
  4886   00EB77  CD                 	db	205
  4887   00EB78  54                 	db	84
  4888   00EB79  F1                 	db	241
  4889   00EB7A  2A                 	db	42
  4890   00EB7B  43                 	db	67
  4891   00EB7C  EF                 	db	239
  4892   00EB7D  CD                 	db	205
  4893   00EB7E  47                 	db	71
  4894   00EB7F  F1                 	db	241
  4895   00EB80  CD                 	db	205
  4896   00EB81  BB                 	db	187
  4897   00EB82  F0                 	db	240
  4898   00EB83  3A                 	db	58
  4899   00EB84  E3                 	db	227
  4900   00EB85  F9                 	db	249
  4901   00EB86  FE                 	db	254
  4902   00EB87  80                 	db	128
  4903   00EB88  D2                 	db	210
  4904   00EB89  05                 	db	5
  4905   00EB8A  EF                 	db	239
  4906   00EB8B  CD                 	db	205
  4907   00EB8C  77                 	db	119
  4908   00EB8D  F0                 	db	240
  4909   00EB8E  CD                 	db	205
  4910   00EB8F  84                 	db	132
  4911   00EB90  F0                 	db	240
  4912   00EB91  0E                 	db	14
  4913   00EB92  00                 	db	0
  4914   00EB93  C2                 	db	194
  4915   00EB94  6E                 	db	110
  4916   00EB95  F6                 	db	246
  4917   00EB96  CD                 	db	205
  4918   00EB97  3E                 	db	62
  4919   00EB98  F0                 	db	240
  4920   00EB99  32                 	db	50
  4921   00EB9A  D7                 	db	215
  4922   00EB9B  F9                 	db	249
  4923   00EB9C  01                 	db	1
  4924   00EB9D  00                 	db	0
  4925   00EB9E  00                 	db	0
  4926   00EB9F  B7                 	db	183
  4927   00EBA0  CA                 	db	202
  4928   00EBA1  3B                 	db	59
  4929   00EBA2  F6                 	db	246
  4930   00EBA3  4F                 	db	79
  4931   00EBA4  0B                 	db	11
  4932   00EBA5  CD                 	db	205
  4933   00EBA6  5E                 	db	94
  4934   00EBA7  F0                 	db	240
  4935   00EBA8  44                 	db	68
  4936   00EBA9  4D                 	db	77
  4937   00EBAA  CD                 	db	205
  4938   00EBAB  BE                 	db	190
  4939   00EBAC  F3                 	db	243
  4940   00EBAD  7D                 	db	125
  4941   00EBAE  B4                 	db	180
  4942   00EBAF  C2                 	db	194
  4943   00EBB0  48                 	db	72
  4944   00EBB1  F6                 	db	246
  4945   00EBB2  3E                 	db	62
  4946   00EBB3  02                 	db	2
  4947   00EBB4  C3                 	db	195
  4948   00EBB5  01                 	db	1
  4949   00EBB6  EF                 	db	239
  4950   00EBB7  22                 	db	34
  4951   00EBB8  E5                 	db	229
  4952   00EBB9  F9                 	db	249
  4953   00EBBA  EB                 	db	235
  4954   00EBBB  2A                 	db	42
  4955   00EBBC  43                 	db	67
  4956   00EBBD  EF                 	db	239
  4957   00EBBE  01                 	db	1
  4958   00EBBF  10                 	db	16
  4959   00EBC0  00                 	db	0
  4960   00EBC1  09                 	db	9
  4961   00EBC2  3A                 	db	58
  4962   00EBC3  DD                 	db	221
  4963   00EBC4  F9                 	db	249
  4964   00EBC5  B7                 	db	183
  4965   00EBC6  3A                 	db	58
  4966   00EBC7  D7                 	db	215
  4967   00EBC8  F9                 	db	249
  4968   00EBC9  CA                 	db	202
  4969   00EBCA  64                 	db	100
  4970   00EBCB  F6                 	db	246
  4971   00EBCC  CD                 	db	205
  4972   00EBCD  64                 	db	100
  4973   00EBCE  F1                 	db	241
  4974   00EBCF  73                 	db	115
  4975   00EBD0  C3                 	db	195
  4976   00EBD1  6C                 	db	108
  4977   00EBD2  F6                 	db	246
  4978   00EBD3  4F                 	db	79
  4979   00EBD4  06                 	db	6
  4980   00EBD5  00                 	db	0
  4981   00EBD6  09                 	db	9
  4982   00EBD7  09                 	db	9
  4983   00EBD8  73                 	db	115
  4984   00EBD9  23                 	db	35
  4985   00EBDA  72                 	db	114
  4986   00EBDB  0E                 	db	14
  4987   00EBDC  02                 	db	2
  4988   00EBDD  3A                 	db	58
  4989   00EBDE  45                 	db	69
  4990   00EBDF  EF                 	db	239
  4991   00EBE0  B7                 	db	183
  4992   00EBE1  C0                 	db	192
  4993   00EBE2  C5                 	db	197
  4994   00EBE3  CD                 	db	205
  4995   00EBE4  8A                 	db	138
  4996   00EBE5  F0                 	db	240
  4997   00EBE6  3A                 	db	58
  4998   00EBE7  D5                 	db	213
  4999   00EBE8  F9                 	db	249
  5000   00EBE9  3D                 	db	61
  5001   00EBEA  3D                 	db	61
  5002   00EBEB  C2                 	db	194
  5003   00EBEC  BB                 	db	187
  5004   00EBED  F6                 	db	246
  5005   00EBEE  C1                 	db	193
  5006   00EBEF  C5                 	db	197
  5007   00EBF0  79                 	db	121
  5008   00EBF1  3D                 	db	61
  5009   00EBF2  3D                 	db	61
  5010   00EBF3  C2                 	db	194
  5011   00EBF4  BB                 	db	187
  5012   00EBF5  F6                 	db	246
  5013   00EBF6  E5                 	db	229
  5014   00EBF7  2A                 	db	42
  5015   00EBF8  B9                 	db	185
  5016   00EBF9  F9                 	db	249
  5017   00EBFA  57                 	db	87
  5018   00EBFB  77                 	db	119
  5019   00EBFC  23                 	db	35
  5020   00EBFD  14                 	db	20
  5021   00EBFE  F2                 	db	242
  5022   00EBFF  8C                 	db	140
  5023   00EC00  F6                 	db	246
  5024   00EC01  CD                 	db	205
  5025   00EC02  E0                 	db	224
  5026   00EC03  F1                 	db	241
  5027   00EC04  2A                 	db	42
  5028   00EC05  E7                 	db	231
  5029   00EC06  F9                 	db	249
  5030   00EC07  0E                 	db	14
  5031   00EC08  02                 	db	2
  5032   00EC09  22                 	db	34
  5033   00EC0A  E5                 	db	229
  5034   00EC0B  F9                 	db	249
  5035   00EC0C  C5                 	db	197
  5036   00EC0D  CD                 	db	205
  5037   00EC0E  D1                 	db	209
  5038   00EC0F  EF                 	db	239
  5039   00EC10  C1                 	db	193
  5040   00EC11  CD                 	db	205
  5041   00EC12  B8                 	db	184
  5042   00EC13  EF                 	db	239
  5043   00EC14  2A                 	db	42
  5044   00EC15  E5                 	db	229
  5045   00EC16  F9                 	db	249
  5046   00EC17  0E                 	db	14
  5047   00EC18  00                 	db	0
  5048   00EC19  3A                 	db	58
  5049   00EC1A  C4                 	db	196
  5050   00EC1B  F9                 	db	249
  5051   00EC1C  47                 	db	71
  5052   00EC1D  A5                 	db	165
  5053   00EC1E  B8                 	db	184
  5054   00EC1F  23                 	db	35
  5055   00EC20  C2                 	db	194
  5056   00EC21  9A                 	db	154
  5057   00EC22  F6                 	db	246
  5058   00EC23  E1                 	db	225
  5059   00EC24  22                 	db	34
  5060   00EC25  E5                 	db	229
  5061   00EC26  F9                 	db	249
  5062   00EC27  CD                 	db	205
  5063   00EC28  DA                 	db	218
  5064   00EC29  F1                 	db	241
  5065   00EC2A  CD                 	db	205
  5066   00EC2B  D1                 	db	209
  5067   00EC2C  EF                 	db	239
  5068   00EC2D  C1                 	db	193
  5069   00EC2E  C5                 	db	197
  5070   00EC2F  CD                 	db	205
  5071   00EC30  B8                 	db	184
  5072   00EC31  EF                 	db	239
  5073   00EC32  C1                 	db	193
  5074   00EC33  3A                 	db	58
  5075   00EC34  E3                 	db	227
  5076   00EC35  F9                 	db	249
  5077   00EC36  21                 	db	33
  5078   00EC37  E1                 	db	225
  5079   00EC38  F9                 	db	249
  5080   00EC39  BE                 	db	190
  5081   00EC3A  DA                 	db	218
  5082   00EC3B  D2                 	db	210
  5083   00EC3C  F6                 	db	246
  5084   00EC3D  77                 	db	119
  5085   00EC3E  34                 	db	52
  5086   00EC3F  0E                 	db	14
  5087   00EC40  02                 	db	2
  5088   00EC41  00                 	db	0
  5089   00EC42  00                 	db	0
  5090   00EC43  21                 	db	33
  5091   00EC44  00                 	db	0
  5092   00EC45  00                 	db	0
  5093   00EC46  F5                 	db	245
  5094   00EC47  CD                 	db	205
  5095   00EC48  69                 	db	105
  5096   00EC49  F1                 	db	241
  5097   00EC4A  E6                 	db	230
  5098   00EC4B  7F                 	db	127
  5099   00EC4C  77                 	db	119
  5100   00EC4D  F1                 	db	241
  5101   00EC4E  FE                 	db	254
  5102   00EC4F  7F                 	db	127
  5103   00EC50  C2                 	db	194
  5104   00EC51  00                 	db	0
  5105   00EC52  F7                 	db	247
  5106   00EC53  3A                 	db	58
  5107   00EC54  D5                 	db	213
  5108   00EC55  F9                 	db	249
  5109   00EC56  FE                 	db	254
  5110   00EC57  01                 	db	1
  5111   00EC58  C2                 	db	194
  5112   00EC59  00                 	db	0
  5113   00EC5A  F7                 	db	247
  5114   00EC5B  CD                 	db	205
  5115   00EC5C  D2                 	db	210
  5116   00EC5D  F0                 	db	240
  5117   00EC5E  CD                 	db	205
  5118   00EC5F  5A                 	db	90
  5119   00EC60  F5                 	db	245
  5120   00EC61  21                 	db	33
  5121   00EC62  45                 	db	69
  5122   00EC63  EF                 	db	239
  5123   00EC64  7E                 	db	126
  5124   00EC65  B7                 	db	183
  5125   00EC66  C2                 	db	194
  5126   00EC67  FE                 	db	254
  5127   00EC68  F6                 	db	246
  5128   00EC69  3D                 	db	61
  5129   00EC6A  32                 	db	50
  5130   00EC6B  E3                 	db	227
  5131   00EC6C  F9                 	db	249
  5132   00EC6D  36                 	db	54
  5133   00EC6E  00                 	db	0
  5134   00EC6F  C3                 	db	195
  5135   00EC70  D2                 	db	210
  5136   00EC71  F0                 	db	240
  5137   00EC72  AF                 	db	175
  5138   00EC73  32                 	db	50
  5139   00EC74  D5                 	db	213
  5140   00EC75  F9                 	db	249
  5141   00EC76  C5                 	db	197
  5142   00EC77  2A                 	db	42
  5143   00EC78  43                 	db	67
  5144   00EC79  EF                 	db	239
  5145   00EC7A  EB                 	db	235
  5146   00EC7B  21                 	db	33
  5147   00EC7C  21                 	db	33
  5148   00EC7D  00                 	db	0
  5149   00EC7E  19                 	db	25
  5150   00EC7F  7E                 	db	126
  5151   00EC80  E6                 	db	230
  5152   00EC81  7F                 	db	127
  5153   00EC82  F5                 	db	245
  5154   00EC83  7E                 	db	126
  5155   00EC84  17                 	db	23
  5156   00EC85  23                 	db	35
  5157   00EC86  7E                 	db	126
  5158   00EC87  17                 	db	23
  5159   00EC88  E6                 	db	230
  5160   00EC89  1F                 	db	31
  5161   00EC8A  4F                 	db	79
  5162   00EC8B  7E                 	db	126
  5163   00EC8C  1F                 	db	31
  5164   00EC8D  1F                 	db	31
  5165   00EC8E  1F                 	db	31
  5166   00EC8F  1F                 	db	31
  5167   00EC90  E6                 	db	230
  5168   00EC91  0F                 	db	15
  5169   00EC92  47                 	db	71
  5170   00EC93  F1                 	db	241
  5171   00EC94  23                 	db	35
  5172   00EC95  6E                 	db	110
  5173   00EC96  2C                 	db	44
  5174   00EC97  2D                 	db	45
  5175   00EC98  2E                 	db	46
  5176   00EC99  06                 	db	6
  5177   00EC9A  C2                 	db	194
  5178   00EC9B  8B                 	db	139
  5179   00EC9C  F7                 	db	247
  5180   00EC9D  21                 	db	33
  5181   00EC9E  20                 	db	32
  5182   00EC9F  00                 	db	0
  5183   00ECA0  19                 	db	25
  5184   00ECA1  77                 	db	119
  5185   00ECA2  21                 	db	33
  5186   00ECA3  0C                 	db	12
  5187   00ECA4  00                 	db	0
  5188   00ECA5  19                 	db	25
  5189   00ECA6  79                 	db	121
  5190   00ECA7  96                 	db	150
  5191   00ECA8  C2                 	db	194
  5192   00ECA9  47                 	db	71
  5193   00ECAA  F7                 	db	247
  5194   00ECAB  21                 	db	33
  5195   00ECAC  0E                 	db	14
  5196   00ECAD  00                 	db	0
  5197   00ECAE  19                 	db	25
  5198   00ECAF  78                 	db	120
  5199   00ECB0  96                 	db	150
  5200   00ECB1  E6                 	db	230
  5201   00ECB2  7F                 	db	127
  5202   00ECB3  CA                 	db	202
  5203   00ECB4  7F                 	db	127
  5204   00ECB5  F7                 	db	247
  5205   00ECB6  C5                 	db	197
  5206   00ECB7  D5                 	db	213
  5207   00ECB8  CD                 	db	205
  5208   00ECB9  A2                 	db	162
  5209   00ECBA  F4                 	db	244
  5210   00ECBB  D1                 	db	209
  5211   00ECBC  C1                 	db	193
  5212   00ECBD  2E                 	db	46
  5213   00ECBE  03                 	db	3
  5214   00ECBF  3A                 	db	58
  5215   00ECC0  45                 	db	69
  5216   00ECC1  EF                 	db	239
  5217   00ECC2  3C                 	db	60
  5218   00ECC3  CA                 	db	202
  5219   00ECC4  84                 	db	132
  5220   00ECC5  F7                 	db	247
  5221   00ECC6  21                 	db	33
  5222   00ECC7  0C                 	db	12
  5223   00ECC8  00                 	db	0
  5224   00ECC9  19                 	db	25
  5225   00ECCA  71                 	db	113
  5226   00ECCB  21                 	db	33
  5227   00ECCC  0E                 	db	14
  5228   00ECCD  00                 	db	0
  5229   00ECCE  19                 	db	25
  5230   00ECCF  70                 	db	112
  5231   00ECD0  CD                 	db	205
  5232   00ECD1  51                 	db	81
  5233   00ECD2  F4                 	db	244
  5234   00ECD3  3A                 	db	58
  5235   00ECD4  45                 	db	69
  5236   00ECD5  EF                 	db	239
  5237   00ECD6  3C                 	db	60
  5238   00ECD7  C2                 	db	194
  5239   00ECD8  7F                 	db	127
  5240   00ECD9  F7                 	db	247
  5241   00ECDA  C1                 	db	193
  5242   00ECDB  C5                 	db	197
  5243   00ECDC  2E                 	db	46
  5244   00ECDD  04                 	db	4
  5245   00ECDE  0C                 	db	12
  5246   00ECDF  CA                 	db	202
  5247   00ECE0  84                 	db	132
  5248   00ECE1  F7                 	db	247
  5249   00ECE2  CD                 	db	205
  5250   00ECE3  24                 	db	36
  5251   00ECE4  F5                 	db	245
  5252   00ECE5  2E                 	db	46
  5253   00ECE6  05                 	db	5
  5254   00ECE7  3A                 	db	58
  5255   00ECE8  45                 	db	69
  5256   00ECE9  EF                 	db	239
  5257   00ECEA  3C                 	db	60
  5258   00ECEB  CA                 	db	202
  5259   00ECEC  84                 	db	132
  5260   00ECED  F7                 	db	247
  5261   00ECEE  C1                 	db	193
  5262   00ECEF  AF                 	db	175
  5263   00ECF0  C3                 	db	195
  5264   00ECF1  01                 	db	1
  5265   00ECF2  EF                 	db	239
  5266   00ECF3  E5                 	db	229
  5267   00ECF4  CD                 	db	205
  5268   00ECF5  69                 	db	105
  5269   00ECF6  F1                 	db	241
  5270   00ECF7  36                 	db	54
  5271   00ECF8  C0                 	db	192
  5272   00ECF9  E1                 	db	225
  5273   00ECFA  C1                 	db	193
  5274   00ECFB  7D                 	db	125
  5275   00ECFC  32                 	db	50
  5276   00ECFD  45                 	db	69
  5277   00ECFE  EF                 	db	239
  5278   00ECFF  C3                 	db	195
  5279   00ED00  78                 	db	120
  5280   00ED01  F1                 	db	241
  5281   00ED02  0E                 	db	14
  5282   00ED03  FF                 	db	255
  5283   00ED04  CD                 	db	205
  5284   00ED05  03                 	db	3
  5285   00ED06  F7                 	db	247
  5286   00ED07  CC                 	db	204
  5287   00ED08  C1                 	db	193
  5288   00ED09  F5                 	db	245
  5289   00ED0A  C9                 	db	201
  5290   00ED0B  0E                 	db	14
  5291   00ED0C  00                 	db	0
  5292   00ED0D  CD                 	db	205
  5293   00ED0E  03                 	db	3
  5294   00ED0F  F7                 	db	247
  5295   00ED10  CC                 	db	204
  5296   00ED11  03                 	db	3
  5297   00ED12  F6                 	db	246
  5298   00ED13  C9                 	db	201
  5299   00ED14  EB                 	db	235
  5300   00ED15  19                 	db	25
  5301   00ED16  4E                 	db	78
  5302   00ED17  06                 	db	6
  5303   00ED18  00                 	db	0
  5304   00ED19  21                 	db	33
  5305   00ED1A  0C                 	db	12
  5306   00ED1B  00                 	db	0
  5307   00ED1C  19                 	db	25
  5308   00ED1D  7E                 	db	126
  5309   00ED1E  0F                 	db	15
  5310   00ED1F  E6                 	db	230
  5311   00ED20  80                 	db	128
  5312   00ED21  81                 	db	129
  5313   00ED22  4F                 	db	79
  5314   00ED23  3E                 	db	62
  5315   00ED24  00                 	db	0
  5316   00ED25  88                 	db	136
  5317   00ED26  47                 	db	71
  5318   00ED27  7E                 	db	126
  5319   00ED28  0F                 	db	15
  5320   00ED29  E6                 	db	230
  5321   00ED2A  0F                 	db	15
  5322   00ED2B  80                 	db	128
  5323   00ED2C  47                 	db	71
  5324   00ED2D  21                 	db	33
  5325   00ED2E  0E                 	db	14
  5326   00ED2F  00                 	db	0
  5327   00ED30  19                 	db	25
  5328   00ED31  7E                 	db	126
  5329   00ED32  87                 	db	135
  5330   00ED33  87                 	db	135
  5331   00ED34  87                 	db	135
  5332   00ED35  87                 	db	135
  5333   00ED36  F5                 	db	245
  5334   00ED37  80                 	db	128
  5335   00ED38  47                 	db	71
  5336   00ED39  F5                 	db	245
  5337   00ED3A  E1                 	db	225
  5338   00ED3B  7D                 	db	125
  5339   00ED3C  E1                 	db	225
  5340   00ED3D  B5                 	db	181
  5341   00ED3E  E6                 	db	230
  5342   00ED3F  01                 	db	1
  5343   00ED40  C9                 	db	201
  5344   00ED41  0E                 	db	14
  5345   00ED42  0C                 	db	12
  5346   00ED43  CD                 	db	205
  5347   00ED44  18                 	db	24
  5348   00ED45  F3                 	db	243
  5349   00ED46  2A                 	db	42
  5350   00ED47  43                 	db	67
  5351   00ED48  EF                 	db	239
  5352   00ED49  11                 	db	17
  5353   00ED4A  21                 	db	33
  5354   00ED4B  00                 	db	0
  5355   00ED4C  19                 	db	25
  5356   00ED4D  E5                 	db	229
  5357   00ED4E  72                 	db	114
  5358   00ED4F  23                 	db	35
  5359   00ED50  72                 	db	114
  5360   00ED51  23                 	db	35
  5361   00ED52  72                 	db	114
  5362   00ED53  CD                 	db	205
  5363   00ED54  F5                 	db	245
  5364   00ED55  F1                 	db	241
  5365   00ED56  CA                 	db	202
  5366   00ED57  0C                 	db	12
  5367   00ED58  F8                 	db	248
  5368   00ED59  CD                 	db	205
  5369   00ED5A  5E                 	db	94
  5370   00ED5B  F1                 	db	241
  5371   00ED5C  11                 	db	17
  5372   00ED5D  0F                 	db	15
  5373   00ED5E  00                 	db	0
  5374   00ED5F  CD                 	db	205
  5375   00ED60  A5                 	db	165
  5376   00ED61  F7                 	db	247
  5377   00ED62  E1                 	db	225
  5378   00ED63  E5                 	db	229
  5379   00ED64  5F                 	db	95
  5380   00ED65  79                 	db	121
  5381   00ED66  96                 	db	150
  5382   00ED67  23                 	db	35
  5383   00ED68  78                 	db	120
  5384   00ED69  9E                 	db	158
  5385   00ED6A  23                 	db	35
  5386   00ED6B  7B                 	db	123
  5387   00ED6C  9E                 	db	158
  5388   00ED6D  DA                 	db	218
  5389   00ED6E  06                 	db	6
  5390   00ED6F  F8                 	db	248
  5391   00ED70  73                 	db	115
  5392   00ED71  2B                 	db	43
  5393   00ED72  70                 	db	112
  5394   00ED73  2B                 	db	43
  5395   00ED74  71                 	db	113
  5396   00ED75  CD                 	db	205
  5397   00ED76  2D                 	db	45
  5398   00ED77  F3                 	db	243
  5399   00ED78  C3                 	db	195
  5400   00ED79  E4                 	db	228
  5401   00ED7A  F7                 	db	247
  5402   00ED7B  E1                 	db	225
  5403   00ED7C  C9                 	db	201
  5404   00ED7D  2A                 	db	42
  5405   00ED7E  43                 	db	67
  5406   00ED7F  EF                 	db	239
  5407   00ED80  11                 	db	17
  5408   00ED81  20                 	db	32
  5409   00ED82  00                 	db	0
  5410   00ED83  CD                 	db	205
  5411   00ED84  A5                 	db	165
  5412   00ED85  F7                 	db	247
  5413   00ED86  21                 	db	33
  5414   00ED87  21                 	db	33
  5415   00ED88  00                 	db	0
  5416   00ED89  19                 	db	25
  5417   00ED8A  71                 	db	113
  5418   00ED8B  23                 	db	35
  5419   00ED8C  70                 	db	112
  5420   00ED8D  23                 	db	35
  5421   00ED8E  77                 	db	119
  5422   00ED8F  C9                 	db	201
  5423   00ED90  2A                 	db	42
  5424   00ED91  AF                 	db	175
  5425   00ED92  F9                 	db	249
  5426   00ED93  3A                 	db	58
  5427   00ED94  42                 	db	66
  5428   00ED95  EF                 	db	239
  5429   00ED96  4F                 	db	79
  5430   00ED97  CD                 	db	205
  5431   00ED98  EA                 	db	234
  5432   00ED99  F0                 	db	240
  5433   00ED9A  E5                 	db	229
  5434   00ED9B  EB                 	db	235
  5435   00ED9C  CD                 	db	205
  5436   00ED9D  59                 	db	89
  5437   00ED9E  EF                 	db	239
  5438   00ED9F  E1                 	db	225
  5439   00EDA0  CC                 	db	204
  5440   00EDA1  47                 	db	71
  5441   00EDA2  EF                 	db	239
  5442   00EDA3  7D                 	db	125
  5443   00EDA4  1F                 	db	31
  5444   00EDA5  D8                 	db	216
  5445   00EDA6  2A                 	db	42
  5446   00EDA7  AF                 	db	175
  5447   00EDA8  F9                 	db	249
  5448   00EDA9  4D                 	db	77
  5449   00EDAA  44                 	db	68
  5450   00EDAB  CD                 	db	205
  5451   00EDAC  0B                 	db	11
  5452   00EDAD  F1                 	db	241
  5453   00EDAE  22                 	db	34
  5454   00EDAF  AF                 	db	175
  5455   00EDB0  F9                 	db	249
  5456   00EDB1  C3                 	db	195
  5457   00EDB2  A3                 	db	163
  5458   00EDB3  F2                 	db	242
  5459   00EDB4  3A                 	db	58
  5460   00EDB5  D6                 	db	214
  5461   00EDB6  F9                 	db	249
  5462   00EDB7  21                 	db	33
  5463   00EDB8  42                 	db	66
  5464   00EDB9  EF                 	db	239
  5465   00EDBA  BE                 	db	190
  5466   00EDBB  C8                 	db	200
  5467   00EDBC  77                 	db	119
  5468   00EDBD  C3                 	db	195
  5469   00EDBE  21                 	db	33
  5470   00EDBF  F8                 	db	248
  5471   00EDC0  3E                 	db	62
  5472   00EDC1  FF                 	db	255
  5473   00EDC2  32                 	db	50
  5474   00EDC3  DE                 	db	222
  5475   00EDC4  F9                 	db	249
  5476   00EDC5  2A                 	db	42
  5477   00EDC6  43                 	db	67
  5478   00EDC7  EF                 	db	239
  5479   00EDC8  7E                 	db	126
  5480   00EDC9  E6                 	db	230
  5481   00EDCA  1F                 	db	31
  5482   00EDCB  3D                 	db	61
  5483   00EDCC  32                 	db	50
  5484   00EDCD  D6                 	db	214
  5485   00EDCE  F9                 	db	249
  5486   00EDCF  FE                 	db	254
  5487   00EDD0  1E                 	db	30
  5488   00EDD1  D2                 	db	210
  5489   00EDD2  75                 	db	117
  5490   00EDD3  F8                 	db	248
  5491   00EDD4  3A                 	db	58
  5492   00EDD5  42                 	db	66
  5493   00EDD6  EF                 	db	239
  5494   00EDD7  32                 	db	50
  5495   00EDD8  DF                 	db	223
  5496   00EDD9  F9                 	db	249
  5497   00EDDA  7E                 	db	126
  5498   00EDDB  32                 	db	50
  5499   00EDDC  E0                 	db	224
  5500   00EDDD  F9                 	db	249
  5501   00EDDE  E6                 	db	230
  5502   00EDDF  E0                 	db	224
  5503   00EDE0  77                 	db	119
  5504   00EDE1  CD                 	db	205
  5505   00EDE2  45                 	db	69
  5506   00EDE3  F8                 	db	248
  5507   00EDE4  3A                 	db	58
  5508   00EDE5  41                 	db	65
  5509   00EDE6  EF                 	db	239
  5510   00EDE7  2A                 	db	42
  5511   00EDE8  43                 	db	67
  5512   00EDE9  EF                 	db	239
  5513   00EDEA  B6                 	db	182
  5514   00EDEB  77                 	db	119
  5515   00EDEC  C9                 	db	201
  5516   00EDED  3E                 	db	62
  5517   00EDEE  22                 	db	34
  5518   00EDEF  C3                 	db	195
  5519   00EDF0  01                 	db	1
  5520   00EDF1  EF                 	db	239
  5521   00EDF2  21                 	db	33
  5522   00EDF3  00                 	db	0
  5523   00EDF4  00                 	db	0
  5524   00EDF5  22                 	db	34
  5525   00EDF6  AD                 	db	173
  5526   00EDF7  F9                 	db	249
  5527   00EDF8  22                 	db	34
  5528   00EDF9  AF                 	db	175
  5529   00EDFA  F9                 	db	249
  5530   00EDFB  AF                 	db	175
  5531   00EDFC  32                 	db	50
  5532   00EDFD  42                 	db	66
  5533   00EDFE  EF                 	db	239
  5534   00EDFF  21                 	db	33
  5535   00EE00  80                 	db	128
  5536   00EE01  00                 	db	0
  5537   00EE02  22                 	db	34
  5538   00EE03  B1                 	db	177
  5539   00EE04  F9                 	db	249
  5540   00EE05  CD                 	db	205
  5541   00EE06  DA                 	db	218
  5542   00EE07  F1                 	db	241
  5543   00EE08  C3                 	db	195
  5544   00EE09  21                 	db	33
  5545   00EE0A  F8                 	db	248
  5546   00EE0B  CD                 	db	205
  5547   00EE0C  72                 	db	114
  5548   00EE0D  F1                 	db	241
  5549   00EE0E  CD                 	db	205
  5550   00EE0F  51                 	db	81
  5551   00EE10  F8                 	db	248
  5552   00EE11  C3                 	db	195
  5553   00EE12  51                 	db	81
  5554   00EE13  F4                 	db	244
  5555   00EE14  CD                 	db	205
  5556   00EE15  51                 	db	81
  5557   00EE16  F8                 	db	248
  5558   00EE17  C3                 	db	195
  5559   00EE18  A2                 	db	162
  5560   00EE19  F4                 	db	244
  5561   00EE1A  0E                 	db	14
  5562   00EE1B  00                 	db	0
  5563   00EE1C  EB                 	db	235
  5564   00EE1D  7E                 	db	126
  5565   00EE1E  FE                 	db	254
  5566   00EE1F  3F                 	db	63
  5567   00EE20  CA                 	db	202
  5568   00EE21  C2                 	db	194
  5569   00EE22  F8                 	db	248
  5570   00EE23  CD                 	db	205
  5571   00EE24  A6                 	db	166
  5572   00EE25  F0                 	db	240
  5573   00EE26  7E                 	db	126
  5574   00EE27  FE                 	db	254
  5575   00EE28  3F                 	db	63
  5576   00EE29  C4                 	db	196
  5577   00EE2A  72                 	db	114
  5578   00EE2B  F1                 	db	241
  5579   00EE2C  CD                 	db	205
  5580   00EE2D  51                 	db	81
  5581   00EE2E  F8                 	db	248
  5582   00EE2F  0E                 	db	14
  5583   00EE30  0F                 	db	15
  5584   00EE31  CD                 	db	205
  5585   00EE32  18                 	db	24
  5586   00EE33  F3                 	db	243
  5587   00EE34  C3                 	db	195
  5588   00EE35  E9                 	db	233
  5589   00EE36  F1                 	db	241
  5590   00EE37  2A                 	db	42
  5591   00EE38  D9                 	db	217
  5592   00EE39  F9                 	db	249
  5593   00EE3A  22                 	db	34
  5594   00EE3B  43                 	db	67
  5595   00EE3C  EF                 	db	239
  5596   00EE3D  CD                 	db	205
  5597   00EE3E  51                 	db	81
  5598   00EE3F  F8                 	db	248
  5599   00EE40  CD                 	db	205
  5600   00EE41  2D                 	db	45
  5601   00EE42  F3                 	db	243
  5602   00EE43  C3                 	db	195
  5603   00EE44  E9                 	db	233
  5604   00EE45  F1                 	db	241
  5605   00EE46  CD                 	db	205
  5606   00EE47  51                 	db	81
  5607   00EE48  F8                 	db	248
  5608   00EE49  CD                 	db	205
  5609   00EE4A  9C                 	db	156
  5610   00EE4B  F3                 	db	243
  5611   00EE4C  C3                 	db	195
  5612   00EE4D  01                 	db	1
  5613   00EE4E  F3                 	db	243
  5614   00EE4F  CD                 	db	205
  5615   00EE50  51                 	db	81
  5616   00EE51  F8                 	db	248
  5617   00EE52  C3                 	db	195
  5618   00EE53  BC                 	db	188
  5619   00EE54  F5                 	db	245
  5620   00EE55  CD                 	db	205
  5621   00EE56  51                 	db	81
  5622   00EE57  F8                 	db	248
  5623   00EE58  C3                 	db	195
  5624   00EE59  FE                 	db	254
  5625   00EE5A  F5                 	db	245
  5626   00EE5B  CD                 	db	205
  5627   00EE5C  72                 	db	114
  5628   00EE5D  F1                 	db	241
  5629   00EE5E  CD                 	db	205
  5630   00EE5F  51                 	db	81
  5631   00EE60  F8                 	db	248
  5632   00EE61  C3                 	db	195
  5633   00EE62  24                 	db	36
  5634   00EE63  F5                 	db	245
  5635   00EE64  CD                 	db	205
  5636   00EE65  51                 	db	81
  5637   00EE66  F8                 	db	248
  5638   00EE67  CD                 	db	205
  5639   00EE68  16                 	db	22
  5640   00EE69  F4                 	db	244
  5641   00EE6A  C3                 	db	195
  5642   00EE6B  01                 	db	1
  5643   00EE6C  F3                 	db	243
  5644   00EE6D  2A                 	db	42
  5645   00EE6E  AF                 	db	175
  5646   00EE6F  F9                 	db	249
  5647   00EE70  C3                 	db	195
  5648   00EE71  29                 	db	41
  5649   00EE72  F9                 	db	249
  5650   00EE73  3A                 	db	58
  5651   00EE74  42                 	db	66
  5652   00EE75  EF                 	db	239
  5653   00EE76  C3                 	db	195
  5654   00EE77  01                 	db	1
  5655   00EE78  EF                 	db	239
  5656   00EE79  EB                 	db	235
  5657   00EE7A  22                 	db	34
  5658   00EE7B  B1                 	db	177
  5659   00EE7C  F9                 	db	249
  5660   00EE7D  C3                 	db	195
  5661   00EE7E  DA                 	db	218
  5662   00EE7F  F1                 	db	241
  5663   00EE80  2A                 	db	42
  5664   00EE81  BF                 	db	191
  5665   00EE82  F9                 	db	249
  5666   00EE83  C3                 	db	195
  5667   00EE84  29                 	db	41
  5668   00EE85  F9                 	db	249
  5669   00EE86  2A                 	db	42
  5670   00EE87  AD                 	db	173
  5671   00EE88  F9                 	db	249
  5672   00EE89  C3                 	db	195
  5673   00EE8A  29                 	db	41
  5674   00EE8B  F9                 	db	249
  5675   00EE8C  CD                 	db	205
  5676   00EE8D  51                 	db	81
  5677   00EE8E  F8                 	db	248
  5678   00EE8F  CD                 	db	205
  5679   00EE90  3B                 	db	59
  5680   00EE91  F4                 	db	244
  5681   00EE92  C3                 	db	195
  5682   00EE93  01                 	db	1
  5683   00EE94  F3                 	db	243
  5684   00EE95  2A                 	db	42
  5685   00EE96  BB                 	db	187
  5686   00EE97  F9                 	db	249
  5687   00EE98  22                 	db	34
  5688   00EE99  45                 	db	69
  5689   00EE9A  EF                 	db	239
  5690   00EE9B  C9                 	db	201
  5691   00EE9C  3A                 	db	58
  5692   00EE9D  D6                 	db	214
  5693   00EE9E  F9                 	db	249
  5694   00EE9F  FE                 	db	254
  5695   00EEA0  FF                 	db	255
  5696   00EEA1  C2                 	db	194
  5697   00EEA2  3B                 	db	59
  5698   00EEA3  F9                 	db	249
  5699   00EEA4  3A                 	db	58
  5700   00EEA5  41                 	db	65
  5701   00EEA6  EF                 	db	239
  5702   00EEA7  C3                 	db	195
  5703   00EEA8  01                 	db	1
  5704   00EEA9  EF                 	db	239
  5705   00EEAA  E6                 	db	230
  5706   00EEAB  1F                 	db	31
  5707   00EEAC  32                 	db	50
  5708   00EEAD  41                 	db	65
  5709   00EEAE  EF                 	db	239
  5710   00EEAF  C9                 	db	201
  5711   00EEB0  CD                 	db	205
  5712   00EEB1  51                 	db	81
  5713   00EEB2  F8                 	db	248
  5714   00EEB3  C3                 	db	195
  5715   00EEB4  93                 	db	147
  5716   00EEB5  F7                 	db	247
  5717   00EEB6  CD                 	db	205
  5718   00EEB7  51                 	db	81
  5719   00EEB8  F8                 	db	248
  5720   00EEB9  C3                 	db	195
  5721   00EEBA  9C                 	db	156
  5722   00EEBB  F7                 	db	247
  5723   00EEBC  CD                 	db	205
  5724   00EEBD  51                 	db	81
  5725   00EEBE  F8                 	db	248
  5726   00EEBF  C3                 	db	195
  5727   00EEC0  D2                 	db	210
  5728   00EEC1  F7                 	db	247
  5729   00EEC2  2A                 	db	42
  5730   00EEC3  43                 	db	67
  5731   00EEC4  EF                 	db	239
  5732   00EEC5  7D                 	db	125
  5733   00EEC6  2F                 	db	47
  5734   00EEC7  5F                 	db	95
  5735   00EEC8  7C                 	db	124
  5736   00EEC9  2F                 	db	47
  5737   00EECA  2A                 	db	42
  5738   00EECB  AF                 	db	175
  5739   00EECC  F9                 	db	249
  5740   00EECD  A4                 	db	164
  5741   00EECE  57                 	db	87
  5742   00EECF  7D                 	db	125
  5743   00EED0  A3                 	db	163
  5744   00EED1  5F                 	db	95
  5745   00EED2  2A                 	db	42
  5746   00EED3  AD                 	db	173
  5747   00EED4  F9                 	db	249
  5748   00EED5  EB                 	db	235
  5749   00EED6  22                 	db	34
  5750   00EED7  AF                 	db	175
  5751   00EED8  F9                 	db	249
  5752   00EED9  7D                 	db	125
  5753   00EEDA  A3                 	db	163
  5754   00EEDB  6F                 	db	111
  5755   00EEDC  7C                 	db	124
  5756   00EEDD  A2                 	db	162
  5757   00EEDE  67                 	db	103
  5758   00EEDF  22                 	db	34
  5759   00EEE0  AD                 	db	173
  5760   00EEE1  F9                 	db	249
  5761   00EEE2  C9                 	db	201
  5762   00EEE3  3A                 	db	58
  5763   00EEE4  DE                 	db	222
  5764   00EEE5  F9                 	db	249
  5765   00EEE6  B7                 	db	183
  5766   00EEE7  CA                 	db	202
  5767   00EEE8  91                 	db	145
  5768   00EEE9  F9                 	db	249
  5769   00EEEA  2A                 	db	42
  5770   00EEEB  43                 	db	67
  5771   00EEEC  EF                 	db	239
  5772   00EEED  36                 	db	54
  5773   00EEEE  00                 	db	0
  5774   00EEEF  3A                 	db	58
  5775   00EEF0  E0                 	db	224
  5776   00EEF1  F9                 	db	249
  5777   00EEF2  B7                 	db	183
  5778   00EEF3  CA                 	db	202
  5779   00EEF4  91                 	db	145
  5780   00EEF5  F9                 	db	249
  5781   00EEF6  77                 	db	119
  5782   00EEF7  3A                 	db	58
  5783   00EEF8  DF                 	db	223
  5784   00EEF9  F9                 	db	249
  5785   00EEFA  32                 	db	50
  5786   00EEFB  D6                 	db	214
  5787   00EEFC  F9                 	db	249
  5788   00EEFD  CD                 	db	205
  5789   00EEFE  45                 	db	69
  5790   00EEFF  F8                 	db	248
  5791   00EF00  2A                 	db	42
  5792   00EF01  0F                 	db	15
  5793   00EF02  EF                 	db	239
  5794   00EF03  F9                 	db	249
  5795   00EF04  2A                 	db	42
  5796   00EF05  45                 	db	69
  5797   00EF06  EF                 	db	239
  5798   00EF07  7D                 	db	125
  5799   00EF08  44                 	db	68
  5800   00EF09  C9                 	db	201
  5801   00EF0A  CD                 	db	205
  5802   00EF0B  51                 	db	81
  5803   00EF0C  F8                 	db	248
  5804   00EF0D  3E                 	db	62
  5805   00EF0E  02                 	db	2
  5806   00EF0F  32                 	db	50
  5807   00EF10  D5                 	db	213
  5808   00EF11  F9                 	db	249
  5809   00EF12  0E                 	db	14
  5810   00EF13  00                 	db	0
  5811   00EF14  CD                 	db	205
  5812   00EF15  07                 	db	7
  5813   00EF16  F7                 	db	247
  5814   00EF17  CC                 	db	204
  5815   00EF18  03                 	db	3
  5816   00EF19  F6                 	db	246
  5817   00EF1A  C9                 	db	201
  5818   00EF1B  E5                 	db	229
  5819   00EF1C  00                 	db	0
  5820   00EF1D  00                 	db	0
  5821   00EF1E  00                 	db	0
  5822   00EF1F  00                 	db	0
  5823   00EF20  80                 	db	128
  5824   00EF21  00                 	db	0
  5825   00EF22  00                 	db	0
  5826   00EF23  00                 	db	0
  5827   00EF24  00                 	db	0
  5828   00EF25  00                 	db	0
  5829   00EF26  00                 	db	0
  5830   00EF27  00                 	db	0
  5831   00EF28  00                 	db	0
  5832   00EF29  00                 	db	0
  5833   00EF2A  00                 	db	0
  5834   00EF2B  00                 	db	0
  5835   00EF2C  00                 	db	0
  5836   00EF2D  00                 	db	0
  5837   00EF2E  00                 	db	0
  5838   00EF2F  00                 	db	0
  5839   00EF30  00                 	db	0
  5840   00EF31  00                 	db	0
  5841   00EF32  00                 	db	0
  5842   00EF33  00                 	db	0
  5843   00EF34  00                 	db	0
  5844   00EF35  00                 	db	0
  5845   00EF36  00                 	db	0
  5846   00EF37  00                 	db	0
  5847   00EF38  00                 	db	0
  5848   00EF39  00                 	db	0
  5849   00EF3A  00                 	db	0
  5850   00EF3B  00                 	db	0
  5851   00EF3C  00                 	db	0
  5852   00EF3D  00                 	db	0
  5853   00EF3E  00                 	db	0
  5854   00EF3F  00                 	db	0
  5855   00EF40  00                 	db	0
  5856   00EF41  00                 	db	0
  5857   00EF42  00                 	db	0
  5858   00EF43  00                 	db	0
  5859   00EF44  00                 	db	0
  5860   00EF45  00                 	db	0
  5861   00EF46  00                 	db	0
  5862   00EF47  00                 	db	0
  5863   00EF48  00                 	db	0
  5864   00EF49  00                 	db	0
  5865   00EF4A  00                 	db	0
  5866   00EF4B  00                 	db	0
  5867   00EF4C  00                 	db	0
  5868   00EF4D  00                 	db	0
  5869   00EF4E  00                 	db	0
  5870   00EF4F  00                 	db	0
  5871   00EF50  00                 	db	0
  5872   00EF51  00                 	db	0
  5873   00EF52  00                 	db	0
  5874   00EF53  00                 	db	0
  5875   00EF54  00                 	db	0
  5876   00EF55  00                 	db	0
  5877   00EF56  00                 	db	0
  5878   00EF57  00                 	db	0
  5879   00EF58  00                 	db	0
  5880   00EF59  00                 	db	0
  5881   00EF5A  00                 	db	0
  5882   00EF5B  00                 	db	0
  5883   00EF5C  00                 	db	0
  5884   00EF5D  00                 	db	0
  5885   00EF5E  00                 	db	0
  5886   00EF5F  00                 	db	0
  5887   00EF60  00                 	db	0
  5888   00EF61  00                 	db	0
  5889   00EF62  00                 	db	0
  5890   00EF63  00                 	db	0
  5891   00EF64  00                 	db	0
  5892   00EF65  00                 	db	0
  5893   00EF66  00                 	db	0
  5894   00EF67  00                 	db	0
  5895   00EF68  00                 	db	0
  5896   00EF69  00                 	db	0
  5897   00EF6A  00                 	db	0
  5898   00EF6B  00                 	db	0
  5899   00EF6C  00                 	db	0
  5900   00EF6D  00                 	db	0
  5901   00EF6E  00                 	db	0
  5902   00EF6F  C3                 	db	195
  5903   00EF70  00                 	db	0
  5904   00EF71  00                 	db	0
  5905   00EF72  C3                 	db	195
  5906   00EF73  00                 	db	0
  5907   00EF74  00                 	db	0
  5908   00EF75  C3                 	db	195
  5909   00EF76  00                 	db	0
  5910   00EF77  00                 	db	0
  5911   00EF78  C3                 	db	195
  5912   00EF79  00                 	db	0
  5913   00EF7A  00                 	db	0
  5914   00EF7B  C3                 	db	195
  5915   00EF7C  00                 	db	0
  5916   00EF7D  00                 	db	0
  5917   00EF7E  C3                 	db	195
  5918   00EF7F  00                 	db	0
  5919   00EF80  00                 	db	0
  5920   00EF81  C3                 	db	195
  5921   00EF82  00                 	db	0
  5922   00EF83  00                 	db	0
  5923   00EF84  C3                 	db	195
  5924   00EF85  00                 	db	0
  5925   00EF86  00                 	db	0
  5926   00EF87  C3                 	db	195
  5927   00EF88  00                 	db	0
  5928   00EF89  00                 	db	0
  5929   00EF8A  C3                 	db	195
  5930   00EF8B  00                 	db	0
  5931   00EF8C  00                 	db	0
  5932   00EF8D  C3                 	db	195
  5933   00EF8E  00                 	db	0
  5934   00EF8F  00                 	db	0
  5935   00EF90  C3                 	db	195
  5936   00EF91  00                 	db	0
  5937   00EF92  00                 	db	0
  5938   00EF93  C3                 	db	195
  5939   00EF94  00                 	db	0
  5940   00EF95  00                 	db	0
  5941   00EF96  C3                 	db	195
  5942   00EF97  00                 	db	0
  5943   00EF98  00                 	db	0
  5944   00EF99  C3                 	db	195
  5945   00EF9A  00                 	db	0
  5946   00EF9B  00                 	db	0
  5947   00EF9C  C3                 	db	195
  5948   00EF9D  00                 	db	0
  5949   00EF9E  00                 	db	0
  5950   00EF9F  C3                 	db	195
  5951   00EFA0  00                 	db	0
  5952   00EFA1  00                 	db	0
  5953   00EFA2                     __end_of_bdosccp:
  5954                           	callstack 0
  5955   00EFA2                     _bios:
  5956                           	callstack 0
  5957   00EFA2  C3                 	db	195
  5958   00EFA3  3B                 	db	59
  5959   00EFA4  FB                 	db	251
  5960   00EFA5  C3                 	db	195
  5961   00EFA6  4F                 	db	79
  5962   00EFA7  FB                 	db	251
  5963   00EFA8  C3                 	db	195
  5964   00EFA9  76                 	db	118
  5965   00EFAA  FB                 	db	251
  5966   00EFAB  C3                 	db	195
  5967   00EFAC  82                 	db	130
  5968   00EFAD  FB                 	db	251
  5969   00EFAE  C3                 	db	195
  5970   00EFAF  8C                 	db	140
  5971   00EFB0  FB                 	db	251
  5972   00EFB1  C3                 	db	195
  5973   00EFB2  99                 	db	153
  5974   00EFB3  FB                 	db	251
  5975   00EFB4  C3                 	db	195
  5976   00EFB5  99                 	db	153
  5977   00EFB6  FB                 	db	251
  5978   00EFB7  C3                 	db	195
  5979   00EFB8  99                 	db	153
  5980   00EFB9  FB                 	db	251
  5981   00EFBA  C3                 	db	195
  5982   00EFBB  9A                 	db	154
  5983   00EFBC  FB                 	db	251
  5984   00EFBD  C3                 	db	195
  5985   00EFBE  9F                 	db	159
  5986   00EFBF  FB                 	db	251
  5987   00EFC0  C3                 	db	195
  5988   00EFC1  CD                 	db	205
  5989   00EFC2  FB                 	db	251
  5990   00EFC3  C3                 	db	195
  5991   00EFC4  D2                 	db	210
  5992   00EFC5  FB                 	db	251
  5993   00EFC6  C3                 	db	195
  5994   00EFC7  E8                 	db	232
  5995   00EFC8  FB                 	db	251
  5996   00EFC9  C3                 	db	195
  5997   00EFCA  F1                 	db	241
  5998   00EFCB  FB                 	db	251
  5999   00EFCC  C3                 	db	195
  6000   00EFCD  F7                 	db	247
  6001   00EFCE  FB                 	db	251
  6002   00EFCF  C3                 	db	195
  6003   00EFD0  97                 	db	151
  6004   00EFD1  FB                 	db	251
  6005   00EFD2  C3                 	db	195
  6006   00EFD3  D7                 	db	215
  6007   00EFD4  FB                 	db	251
  6008   00EFD5  73                 	db	115
  6009   00EFD6  FA                 	db	250
  6010   00EFD7  00                 	db	0
  6011   00EFD8  00                 	db	0
  6012   00EFD9  00                 	db	0
  6013   00EFDA  00                 	db	0
  6014   00EFDB  00                 	db	0
  6015   00EFDC  00                 	db	0
  6016   00EFDD  FC                 	db	252
  6017   00EFDE  FB                 	db	251
  6018   00EFDF  8D                 	db	141
  6019   00EFE0  FA                 	db	250
  6020   00EFE1  F6                 	db	246
  6021   00EFE2  FE                 	db	254
  6022   00EFE3  7C                 	db	124
  6023   00EFE4  FC                 	db	252
  6024   00EFE5  73                 	db	115
  6025   00EFE6  FA                 	db	250
  6026   00EFE7  00                 	db	0
  6027   00EFE8  00                 	db	0
  6028   00EFE9  00                 	db	0
  6029   00EFEA  00                 	db	0
  6030   00EFEB  00                 	db	0
  6031   00EFEC  00                 	db	0
  6032   00EFED  FC                 	db	252
  6033   00EFEE  FB                 	db	251
  6034   00EFEF  8D                 	db	141
  6035   00EFF0  FA                 	db	250
  6036   00EFF1  06                 	db	6
  6037   00EFF2  FF                 	db	255
  6038   00EFF3  9B                 	db	155
  6039   00EFF4  FC                 	db	252
  6040   00EFF5  73                 	db	115
  6041   00EFF6  FA                 	db	250
  6042   00EFF7  00                 	db	0
  6043   00EFF8  00                 	db	0
  6044   00EFF9  00                 	db	0
  6045   00EFFA  00                 	db	0
  6046   00EFFB  00                 	db	0
  6047   00EFFC  00                 	db	0
  6048   00EFFD  FC                 	db	252
  6049   00EFFE  FB                 	db	251
  6050   00EFFF  8D                 	db	141
  6051   00F000  FA                 	db	250
  6052   00F001  16                 	db	22
  6053   00F002  FF                 	db	255
  6054   00F003  BA                 	db	186
  6055   00F004  FC                 	db	252
  6056   00F005  73                 	db	115
  6057   00F006  FA                 	db	250
  6058   00F007  00                 	db	0
  6059   00F008  00                 	db	0
  6060   00F009  00                 	db	0
  6061   00F00A  00                 	db	0
  6062   00F00B  00                 	db	0
  6063   00F00C  00                 	db	0
  6064   00F00D  FC                 	db	252
  6065   00F00E  FB                 	db	251
  6066   00F00F  8D                 	db	141
  6067   00F010  FA                 	db	250
  6068   00F011  26                 	db	38
  6069   00F012  FF                 	db	255
  6070   00F013  D9                 	db	217
  6071   00F014  FC                 	db	252
  6072   00F015  01                 	db	1
  6073   00F016  07                 	db	7
  6074   00F017  0D                 	db	13
  6075   00F018  13                 	db	19
  6076   00F019  19                 	db	25
  6077   00F01A  05                 	db	5
  6078   00F01B  0B                 	db	11
  6079   00F01C  11                 	db	17
  6080   00F01D  17                 	db	23
  6081   00F01E  03                 	db	3
  6082   00F01F  09                 	db	9
  6083   00F020  0F                 	db	15
  6084   00F021  15                 	db	21
  6085   00F022  02                 	db	2
  6086   00F023  08                 	db	8
  6087   00F024  0E                 	db	14
  6088   00F025  14                 	db	20
  6089   00F026  1A                 	db	26
  6090   00F027  06                 	db	6
  6091   00F028  0C                 	db	12
  6092   00F029  12                 	db	18
  6093   00F02A  18                 	db	24
  6094   00F02B  04                 	db	4
  6095   00F02C  0A                 	db	10
  6096   00F02D  10                 	db	16
  6097   00F02E  16                 	db	22
  6098   00F02F  1A                 	db	26
  6099   00F030  00                 	db	0
  6100   00F031  03                 	db	3
  6101   00F032  07                 	db	7
  6102   00F033  00                 	db	0
  6103   00F034  F2                 	db	242
  6104   00F035  00                 	db	0
  6105   00F036  3F                 	db	63
  6106   00F037  00                 	db	0
  6107   00F038  C0                 	db	192
  6108   00F039  00                 	db	0
  6109   00F03A  10                 	db	16
  6110   00F03B  00                 	db	0
  6111   00F03C  02                 	db	2
  6112   00F03D  00                 	db	0
  6113   00F03E  00                 	db	0
  6114   00F03F  00                 	db	0
  6115   00F040  00                 	db	0
  6116   00F041  00                 	db	0
  6117   00F042  00                 	db	0
  6118   00F043  00                 	db	0
  6119   00F044  00                 	db	0
  6120   00F045  00                 	db	0
  6121   00F046  FC                 	db	252
  6122   00F047  FB                 	db	251
  6123   00F048  BC                 	db	188
  6124   00F049  FA                 	db	250
  6125   00F04A  36                 	db	54
  6126   00F04B  FF                 	db	255
  6127   00F04C  F8                 	db	248
  6128   00F04D  FC                 	db	252
  6129   00F04E  00                 	db	0
  6130   00F04F  00                 	db	0
  6131   00F050  00                 	db	0
  6132   00F051  00                 	db	0
  6133   00F052  00                 	db	0
  6134   00F053  00                 	db	0
  6135   00F054  00                 	db	0
  6136   00F055  00                 	db	0
  6137   00F056  FC                 	db	252
  6138   00F057  FB                 	db	251
  6139   00F058  BC                 	db	188
  6140   00F059  FA                 	db	250
  6141   00F05A  36                 	db	54
  6142   00F05B  FF                 	db	255
  6143   00F05C  F7                 	db	247
  6144   00F05D  FD                 	db	253
  6145   00F05E  80                 	db	128
  6146   00F05F  00                 	db	0
  6147   00F060  04                 	db	4
  6148   00F061  0F                 	db	15
  6149   00F062  00                 	db	0
  6150   00F063  F7                 	db	247
  6151   00F064  07                 	db	7
  6152   00F065  FF                 	db	255
  6153   00F066  03                 	db	3
  6154   00F067  FF                 	db	255
  6155   00F068  FF                 	db	255
  6156   00F069  00                 	db	0
  6157   00F06A  00                 	db	0
  6158   00F06B  00                 	db	0
  6159   00F06C  00                 	db	0
  6160   00F06D  36                 	db	54
  6161   00F06E  34                 	db	52
  6162   00F06F  4B                 	db	75
  6163   00F070  20                 	db	32
  6164   00F071  43                 	db	67
  6165   00F072  50                 	db	80
  6166   00F073  2F                 	db	47
  6167   00F074  4D                 	db	77
  6168   00F075  20                 	db	32
  6169   00F076  56                 	db	86
  6170   00F077  65                 	db	101
  6171   00F078  72                 	db	114
  6172   00F079  73                 	db	115
  6173   00F07A  2E                 	db	46
  6174   00F07B  20                 	db	32
  6175   00F07C  32                 	db	50
  6176   00F07D  2E                 	db	46
  6177   00F07E  32                 	db	50
  6178   00F07F  20                 	db	32
  6179   00F080  28                 	db	40
  6180   00F081  5A                 	db	90
  6181   00F082  38                 	db	56
  6182   00F083  30                 	db	48
  6183   00F084  20                 	db	32
  6184   00F085  43                 	db	67
  6185   00F086  42                 	db	66
  6186   00F087  49                 	db	73
  6187   00F088  4F                 	db	79
  6188   00F089  53                 	db	83
  6189   00F08A  20                 	db	32
  6190   00F08B  56                 	db	86
  6191   00F08C  31                 	db	49
  6192   00F08D  2E                 	db	46
  6193   00F08E  32                 	db	50
  6194   00F08F  20                 	db	32
  6195   00F090  66                 	db	102
  6196   00F091  6F                 	db	111
  6197   00F092  72                 	db	114
  6198   00F093  20                 	db	32
  6199   00F094  5A                 	db	90
  6200   00F095  38                 	db	56
  6201   00F096  30                 	db	48
  6202   00F097  53                 	db	83
  6203   00F098  49                 	db	73
  6204   00F099  4D                 	db	77
  6205   00F09A  2C                 	db	44
  6206   00F09B  20                 	db	32
  6207   00F09C  43                 	db	67
  6208   00F09D  6F                 	db	111
  6209   00F09E  70                 	db	112
  6210   00F09F  79                 	db	121
  6211   00F0A0  72                 	db	114
  6212   00F0A1  69                 	db	105
  6213   00F0A2  67                 	db	103
  6214   00F0A3  68                 	db	104
  6215   00F0A4  74                 	db	116
  6216   00F0A5  20                 	db	32
  6217   00F0A6  31                 	db	49
  6218   00F0A7  39                 	db	57
  6219   00F0A8  38                 	db	56
  6220   00F0A9  38                 	db	56
  6221   00F0AA  2D                 	db	45
  6222   00F0AB  32                 	db	50
  6223   00F0AC  30                 	db	48
  6224   00F0AD  30                 	db	48
  6225   00F0AE  37                 	db	55
  6226   00F0AF  20                 	db	32
  6227   00F0B0  62                 	db	98
  6228   00F0B1  79                 	db	121
  6229   00F0B2  20                 	db	32
  6230   00F0B3  55                 	db	85
  6231   00F0B4  64                 	db	100
  6232   00F0B5  6F                 	db	111
  6233   00F0B6  20                 	db	32
  6234   00F0B7  4D                 	db	77
  6235   00F0B8  75                 	db	117
  6236   00F0B9  6E                 	db	110
  6237   00F0BA  6B                 	db	107
  6238   00F0BB  29                 	db	41
  6239   00F0BC  0D                 	db	13
  6240   00F0BD  0A                 	db	10
  6241   00F0BE  00                 	db	0
  6242   00F0BF  FF                 	db	255
  6243   00F0C0  FF                 	db	255
  6244   00F0C1  FF                 	db	255
  6245   00F0C2  FF                 	db	255
  6246   00F0C3  FF                 	db	255
  6247   00F0C4  FF                 	db	255
  6248   00F0C5  FF                 	db	255
  6249   00F0C6  FF                 	db	255
  6250   00F0C7  FF                 	db	255
  6251   00F0C8  FF                 	db	255
  6252   00F0C9  FF                 	db	255
  6253   00F0CA  FF                 	db	255
  6254   00F0CB  FF                 	db	255
  6255   00F0CC  FF                 	db	255
  6256   00F0CD  FF                 	db	255
  6257   00F0CE  FF                 	db	255
  6258   00F0CF  FF                 	db	255
  6259   00F0D0  FF                 	db	255
  6260   00F0D1  FF                 	db	255
  6261   00F0D2  7E                 	db	126
  6262   00F0D3  B7                 	db	183
  6263   00F0D4  C8                 	db	200
  6264   00F0D5  4F                 	db	79
  6265   00F0D6  CD                 	db	205
  6266   00F0D7  8C                 	db	140
  6267   00F0D8  FB                 	db	251
  6268   00F0D9  23                 	db	35
  6269   00F0DA  C3                 	db	195
  6270   00F0DB  30                 	db	48
  6271   00F0DC  FB                 	db	251
  6272   00F0DD  F3                 	db	243
  6273   00F0DE  31                 	db	49
  6274   00F0DF  80                 	db	128
  6275   00F0E0  00                 	db	0
  6276   00F0E1  21                 	db	33
  6277   00F0E2  CB                 	db	203
  6278   00F0E3  FA                 	db	250
  6279   00F0E4  CD                 	db	205
  6280   00F0E5  30                 	db	48
  6281   00F0E6  FB                 	db	251
  6282   00F0E7  AF                 	db	175
  6283   00F0E8  32                 	db	50
  6284   00F0E9  03                 	db	3
  6285   00F0EA  00                 	db	0
  6286   00F0EB  32                 	db	50
  6287   00F0EC  04                 	db	4
  6288   00F0ED  00                 	db	0
  6289   00F0EE  C3                 	db	195
  6290   00F0EF  55                 	db	85
  6291   00F0F0  FB                 	db	251
  6292   00F0F1  F3                 	db	243
  6293   00F0F2  31                 	db	49
  6294   00F0F3  80                 	db	128
  6295   00F0F4  00                 	db	0
  6296   00F0F5  DB                 	db	219
  6297   00F0F6  46                 	db	70
  6298   00F0F7  3E                 	db	62
  6299   00F0F8  C3                 	db	195
  6300   00F0F9  32                 	db	50
  6301   00F0FA  00                 	db	0
  6302   00F0FB  00                 	db	0
  6303   00F0FC  21                 	db	33
  6304   00F0FD  03                 	db	3
  6305   00F0FE  FA                 	db	250
  6306   00F0FF  22                 	db	34
  6307   00F100  01                 	db	1
  6308   00F101  00                 	db	0
  6309   00F102  32                 	db	50
  6310   00F103  05                 	db	5
  6311   00F104  00                 	db	0
  6312   00F105  21                 	db	33
  6313   00F106  06                 	db	6
  6314   00F107  EC                 	db	236
  6315   00F108  22                 	db	34
  6316   00F109  06                 	db	6
  6317   00F10A  00                 	db	0
  6318   00F10B  01                 	db	1
  6319   00F10C  80                 	db	128
  6320   00F10D  00                 	db	0
  6321   00F10E  CD                 	db	205
  6322   00F10F  E8                 	db	232
  6323   00F110  FB                 	db	251
  6324   00F111  3A                 	db	58
  6325   00F112  04                 	db	4
  6326   00F113  00                 	db	0
  6327   00F114  4F                 	db	79
  6328   00F115  C3                 	db	195
  6329   00F116  00                 	db	0
  6330   00F117  E4                 	db	228
  6331   00F118  DB                 	db	219
  6332   00F119  01                 	db	1
  6333   00F11A  E6                 	db	230
  6334   00F11B  02                 	db	2
  6335   00F11C  CA                 	db	202
  6336   00F11D  80                 	db	128
  6337   00F11E  FB                 	db	251
  6338   00F11F  3E                 	db	62
  6339   00F120  FF                 	db	255
  6340   00F121  C9                 	db	201
  6341   00F122  AF                 	db	175
  6342   00F123  C9                 	db	201
  6343   00F124  DB                 	db	219
  6344   00F125  01                 	db	1
  6345   00F126  E6                 	db	230
  6346   00F127  02                 	db	2
  6347   00F128  CA                 	db	202
  6348   00F129  82                 	db	130
  6349   00F12A  FB                 	db	251
  6350   00F12B  DB                 	db	219
  6351   00F12C  00                 	db	0
  6352   00F12D  C9                 	db	201
  6353   00F12E  DB                 	db	219
  6354   00F12F  01                 	db	1
  6355   00F130  E6                 	db	230
  6356   00F131  01                 	db	1
  6357   00F132  CA                 	db	202
  6358   00F133  8C                 	db	140
  6359   00F134  FB                 	db	251
  6360   00F135  79                 	db	121
  6361   00F136  D3                 	db	211
  6362   00F137  00                 	db	0
  6363   00F138  C9                 	db	201
  6364   00F139  3E                 	db	62
  6365   00F13A  FF                 	db	255
  6366   00F13B  C9                 	db	201
  6367   00F13C  AF                 	db	175
  6368   00F13D  32                 	db	50
  6369   00F13E  21                 	db	33
  6370   00F13F  FB                 	db	251
  6371   00F140  C9                 	db	201
  6372   00F141  21                 	db	33
  6373   00F142  00                 	db	0
  6374   00F143  00                 	db	0
  6375   00F144  79                 	db	121
  6376   00F145  FE                 	db	254
  6377   00F146  04                 	db	4
  6378   00F147  DA                 	db	218
  6379   00F148  B3                 	db	179
  6380   00F149  FB                 	db	251
  6381   00F14A  FE                 	db	254
  6382   00F14B  08                 	db	8
  6383   00F14C  CA                 	db	202
  6384   00F14D  C0                 	db	192
  6385   00F14E  FB                 	db	251
  6386   00F14F  FE                 	db	254
  6387   00F150  09                 	db	9
  6388   00F151  CA                 	db	202
  6389   00F152  C6                 	db	198
  6390   00F153  FB                 	db	251
  6391   00F154  C9                 	db	201
  6392   00F155  32                 	db	50
  6393   00F156  20                 	db	32
  6394   00F157  FB                 	db	251
  6395   00F158  6F                 	db	111
  6396   00F159  29                 	db	41
  6397   00F15A  29                 	db	41
  6398   00F15B  29                 	db	41
  6399   00F15C  29                 	db	41
  6400   00F15D  11                 	db	17
  6401   00F15E  33                 	db	51
  6402   00F15F  FA                 	db	250
  6403   00F160  19                 	db	25
  6404   00F161  C9                 	db	201
  6405   00F162  21                 	db	33
  6406   00F163  9C                 	db	156
  6407   00F164  FA                 	db	250
  6408   00F165  C3                 	db	195
  6409   00F166  C9                 	db	201
  6410   00F167  FB                 	db	251
  6411   00F168  21                 	db	33
  6412   00F169  AC                 	db	172
  6413   00F16A  FA                 	db	250
  6414   00F16B  32                 	db	50
  6415   00F16C  20                 	db	32
  6416   00F16D  FB                 	db	251
  6417   00F16E  C9                 	db	201
  6418   00F16F  79                 	db	121
  6419   00F170  32                 	db	50
  6420   00F171  21                 	db	33
  6421   00F172  FB                 	db	251
  6422   00F173  C9                 	db	201
  6423   00F174  79                 	db	121
  6424   00F175  32                 	db	50
  6425   00F176  22                 	db	34
  6426   00F177  FB                 	db	251
  6427   00F178  C9                 	db	201
  6428   00F179  7A                 	db	122
  6429   00F17A  B3                 	db	179
  6430   00F17B  C2                 	db	194
  6431   00F17C  E2                 	db	226
  6432   00F17D  FB                 	db	251
  6433   00F17E  69                 	db	105
  6434   00F17F  60                 	db	96
  6435   00F180  2C                 	db	44
  6436   00F181  C0                 	db	192
  6437   00F182  24                 	db	36
  6438   00F183  C9                 	db	201
  6439   00F184  EB                 	db	235
  6440   00F185  09                 	db	9
  6441   00F186  6E                 	db	110
  6442   00F187  26                 	db	38
  6443   00F188  00                 	db	0
  6444   00F189  C9                 	db	201
  6445   00F18A  79                 	db	121
  6446   00F18B  32                 	db	50
  6447   00F18C  23                 	db	35
  6448   00F18D  FB                 	db	251
  6449   00F18E  78                 	db	120
  6450   00F18F  32                 	db	50
  6451   00F190  24                 	db	36
  6452   00F191  FB                 	db	251
  6453   00F192  C9                 	db	201
  6454   00F193  DB                 	db	219
  6455   00F194  52                 	db	82
  6456   00F195  DB                 	db	219
  6457   00F196  4E                 	db	78
  6458   00F197  B7                 	db	183
  6459   00F198  C9                 	db	201
  6460   00F199  DB                 	db	219
  6461   00F19A  53                 	db	83
  6462   00F19B  DB                 	db	219
  6463   00F19C  4E                 	db	78
  6464   00F19D  C9                 	db	201
  6465   00F19E  00                 	db	0
  6466   00F19F  00                 	db	0
  6467   00F1A0  00                 	db	0
  6468   00F1A1  00                 	db	0
  6469   00F1A2  00                 	db	0
  6470   00F1A3  00                 	db	0
  6471   00F1A4  00                 	db	0
  6472   00F1A5  00                 	db	0
  6473   00F1A6  00                 	db	0
  6474   00F1A7  00                 	db	0
  6475   00F1A8  00                 	db	0
  6476   00F1A9  00                 	db	0
  6477   00F1AA  00                 	db	0
  6478   00F1AB  00                 	db	0
  6479   00F1AC  00                 	db	0
  6480   00F1AD  00                 	db	0
  6481   00F1AE  00                 	db	0
  6482   00F1AF  00                 	db	0
  6483   00F1B0  00                 	db	0
  6484   00F1B1  00                 	db	0
  6485   00F1B2  00                 	db	0
  6486   00F1B3  00                 	db	0
  6487   00F1B4  00                 	db	0
  6488   00F1B5  00                 	db	0
  6489   00F1B6  00                 	db	0
  6490   00F1B7  00                 	db	0
  6491   00F1B8  00                 	db	0
  6492   00F1B9  00                 	db	0
  6493   00F1BA  00                 	db	0
  6494   00F1BB  00                 	db	0
  6495   00F1BC  00                 	db	0
  6496   00F1BD  00                 	db	0
  6497   00F1BE  00                 	db	0
  6498   00F1BF  00                 	db	0
  6499   00F1C0  00                 	db	0
  6500   00F1C1  00                 	db	0
  6501   00F1C2  00                 	db	0
  6502   00F1C3  00                 	db	0
  6503   00F1C4  00                 	db	0
  6504   00F1C5  00                 	db	0
  6505   00F1C6  00                 	db	0
  6506   00F1C7  00                 	db	0
  6507   00F1C8  00                 	db	0
  6508   00F1C9  00                 	db	0
  6509   00F1CA  00                 	db	0
  6510   00F1CB  00                 	db	0
  6511   00F1CC  00                 	db	0
  6512   00F1CD  00                 	db	0
  6513   00F1CE  00                 	db	0
  6514   00F1CF  00                 	db	0
  6515   00F1D0  00                 	db	0
  6516   00F1D1  00                 	db	0
  6517   00F1D2  00                 	db	0
  6518   00F1D3  00                 	db	0
  6519   00F1D4  00                 	db	0
  6520   00F1D5  00                 	db	0
  6521   00F1D6  00                 	db	0
  6522   00F1D7  00                 	db	0
  6523   00F1D8  00                 	db	0
  6524   00F1D9  00                 	db	0
  6525   00F1DA  00                 	db	0
  6526   00F1DB  00                 	db	0
  6527   00F1DC  00                 	db	0
  6528   00F1DD  00                 	db	0
  6529   00F1DE  00                 	db	0
  6530   00F1DF  00                 	db	0
  6531   00F1E0  00                 	db	0
  6532   00F1E1  00                 	db	0
  6533   00F1E2  00                 	db	0
  6534   00F1E3  00                 	db	0
  6535   00F1E4  00                 	db	0
  6536   00F1E5  00                 	db	0
  6537   00F1E6  00                 	db	0
  6538   00F1E7  00                 	db	0
  6539   00F1E8  00                 	db	0
  6540   00F1E9  00                 	db	0
  6541   00F1EA  00                 	db	0
  6542   00F1EB  00                 	db	0
  6543   00F1EC  00                 	db	0
  6544   00F1ED  00                 	db	0
  6545   00F1EE  00                 	db	0
  6546   00F1EF  00                 	db	0
  6547   00F1F0  00                 	db	0
  6548   00F1F1  00                 	db	0
  6549   00F1F2  00                 	db	0
  6550   00F1F3  00                 	db	0
  6551   00F1F4  00                 	db	0
  6552   00F1F5  00                 	db	0
  6553   00F1F6  00                 	db	0
  6554   00F1F7  00                 	db	0
  6555   00F1F8  00                 	db	0
  6556   00F1F9  00                 	db	0
  6557   00F1FA  00                 	db	0
  6558   00F1FB  00                 	db	0
  6559   00F1FC  00                 	db	0
  6560   00F1FD  00                 	db	0
  6561   00F1FE  00                 	db	0
  6562   00F1FF  00                 	db	0
  6563   00F200  00                 	db	0
  6564   00F201  00                 	db	0
  6565   00F202  00                 	db	0
  6566   00F203  00                 	db	0
  6567   00F204  00                 	db	0
  6568   00F205  00                 	db	0
  6569   00F206  00                 	db	0
  6570   00F207  00                 	db	0
  6571   00F208  00                 	db	0
  6572   00F209  00                 	db	0
  6573   00F20A  00                 	db	0
  6574   00F20B  00                 	db	0
  6575   00F20C  00                 	db	0
  6576   00F20D  00                 	db	0
  6577   00F20E  00                 	db	0
  6578   00F20F  00                 	db	0
  6579   00F210  00                 	db	0
  6580   00F211  00                 	db	0
  6581   00F212  00                 	db	0
  6582   00F213  00                 	db	0
  6583   00F214  00                 	db	0
  6584   00F215  00                 	db	0
  6585   00F216  00                 	db	0
  6586   00F217  00                 	db	0
  6587   00F218  00                 	db	0
  6588   00F219  00                 	db	0
  6589   00F21A  00                 	db	0
  6590   00F21B  00                 	db	0
  6591   00F21C  00                 	db	0
  6592   00F21D  00                 	db	0
  6593   00F21E  00                 	db	0
  6594   00F21F  00                 	db	0
  6595   00F220  00                 	db	0
  6596   00F221  00                 	db	0
  6597   00F222  00                 	db	0
  6598   00F223  00                 	db	0
  6599   00F224  00                 	db	0
  6600   00F225  00                 	db	0
  6601   00F226  00                 	db	0
  6602   00F227  00                 	db	0
  6603   00F228  00                 	db	0
  6604   00F229  00                 	db	0
  6605   00F22A  00                 	db	0
  6606   00F22B  00                 	db	0
  6607   00F22C  00                 	db	0
  6608   00F22D  00                 	db	0
  6609   00F22E  00                 	db	0
  6610   00F22F  00                 	db	0
  6611   00F230  00                 	db	0
  6612   00F231  00                 	db	0
  6613   00F232  00                 	db	0
  6614   00F233  00                 	db	0
  6615   00F234  00                 	db	0
  6616   00F235  00                 	db	0
  6617   00F236  00                 	db	0
  6618   00F237  00                 	db	0
  6619   00F238  00                 	db	0
  6620   00F239  00                 	db	0
  6621   00F23A  00                 	db	0
  6622   00F23B  00                 	db	0
  6623   00F23C  00                 	db	0
  6624   00F23D  00                 	db	0
  6625   00F23E  00                 	db	0
  6626   00F23F  00                 	db	0
  6627   00F240  00                 	db	0
  6628   00F241  00                 	db	0
  6629   00F242  00                 	db	0
  6630   00F243  00                 	db	0
  6631   00F244  00                 	db	0
  6632   00F245  00                 	db	0
  6633   00F246  00                 	db	0
  6634   00F247  00                 	db	0
  6635   00F248  00                 	db	0
  6636   00F249  00                 	db	0
  6637   00F24A  00                 	db	0
  6638   00F24B  00                 	db	0
  6639   00F24C  00                 	db	0
  6640   00F24D  00                 	db	0
  6641   00F24E  00                 	db	0
  6642   00F24F  00                 	db	0
  6643   00F250  00                 	db	0
  6644   00F251  00                 	db	0
  6645   00F252  00                 	db	0
  6646   00F253  00                 	db	0
  6647   00F254  00                 	db	0
  6648   00F255  00                 	db	0
  6649   00F256  00                 	db	0
  6650   00F257  00                 	db	0
  6651   00F258  00                 	db	0
  6652   00F259  00                 	db	0
  6653   00F25A  00                 	db	0
  6654   00F25B  00                 	db	0
  6655   00F25C  00                 	db	0
  6656   00F25D  00                 	db	0
  6657   00F25E  00                 	db	0
  6658   00F25F  00                 	db	0
  6659   00F260  00                 	db	0
  6660   00F261  00                 	db	0
  6661   00F262  00                 	db	0
  6662   00F263  00                 	db	0
  6663   00F264  00                 	db	0
  6664   00F265  00                 	db	0
  6665   00F266  00                 	db	0
  6666   00F267  00                 	db	0
  6667   00F268  00                 	db	0
  6668   00F269  00                 	db	0
  6669   00F26A  00                 	db	0
  6670   00F26B  00                 	db	0
  6671   00F26C  00                 	db	0
  6672   00F26D  00                 	db	0
  6673   00F26E  00                 	db	0
  6674   00F26F  00                 	db	0
  6675   00F270  00                 	db	0
  6676   00F271  00                 	db	0
  6677   00F272  00                 	db	0
  6678   00F273  00                 	db	0
  6679   00F274  00                 	db	0
  6680   00F275  00                 	db	0
  6681   00F276  00                 	db	0
  6682   00F277  00                 	db	0
  6683   00F278  00                 	db	0
  6684   00F279  00                 	db	0
  6685   00F27A  00                 	db	0
  6686   00F27B  00                 	db	0
  6687   00F27C  00                 	db	0
  6688   00F27D  00                 	db	0
  6689   00F27E  00                 	db	0
  6690   00F27F  00                 	db	0
  6691   00F280  00                 	db	0
  6692   00F281  00                 	db	0
  6693   00F282  00                 	db	0
  6694   00F283  00                 	db	0
  6695   00F284  00                 	db	0
  6696   00F285  00                 	db	0
  6697   00F286  00                 	db	0
  6698   00F287  00                 	db	0
  6699   00F288  00                 	db	0
  6700   00F289  00                 	db	0
  6701   00F28A  00                 	db	0
  6702   00F28B  00                 	db	0
  6703   00F28C  00                 	db	0
  6704   00F28D  00                 	db	0
  6705   00F28E  00                 	db	0
  6706   00F28F  00                 	db	0
  6707   00F290  00                 	db	0
  6708   00F291  00                 	db	0
  6709   00F292  00                 	db	0
  6710   00F293  00                 	db	0
  6711   00F294  00                 	db	0
  6712   00F295  00                 	db	0
  6713   00F296  00                 	db	0
  6714   00F297  00                 	db	0
  6715   00F298  00                 	db	0
  6716   00F299  00                 	db	0
  6717   00F29A  00                 	db	0
  6718   00F29B  00                 	db	0
  6719   00F29C  00                 	db	0
  6720   00F29D  00                 	db	0
  6721   00F29E  00                 	db	0
  6722   00F29F  00                 	db	0
  6723   00F2A0  00                 	db	0
  6724   00F2A1  00                 	db	0
  6725   00F2A2  00                 	db	0
  6726   00F2A3  00                 	db	0
  6727   00F2A4  00                 	db	0
  6728   00F2A5  00                 	db	0
  6729   00F2A6  00                 	db	0
  6730   00F2A7  00                 	db	0
  6731   00F2A8  00                 	db	0
  6732   00F2A9  00                 	db	0
  6733   00F2AA  00                 	db	0
  6734   00F2AB  00                 	db	0
  6735   00F2AC  00                 	db	0
  6736   00F2AD  00                 	db	0
  6737   00F2AE  00                 	db	0
  6738   00F2AF  00                 	db	0
  6739   00F2B0  00                 	db	0
  6740   00F2B1  00                 	db	0
  6741   00F2B2  00                 	db	0
  6742   00F2B3  00                 	db	0
  6743   00F2B4  00                 	db	0
  6744   00F2B5  00                 	db	0
  6745   00F2B6  00                 	db	0
  6746   00F2B7  00                 	db	0
  6747   00F2B8  00                 	db	0
  6748   00F2B9  00                 	db	0
  6749   00F2BA  00                 	db	0
  6750   00F2BB  00                 	db	0
  6751   00F2BC  00                 	db	0
  6752   00F2BD  00                 	db	0
  6753   00F2BE  00                 	db	0
  6754   00F2BF  00                 	db	0
  6755   00F2C0  00                 	db	0
  6756   00F2C1  00                 	db	0
  6757   00F2C2  00                 	db	0
  6758   00F2C3  00                 	db	0
  6759   00F2C4  00                 	db	0
  6760   00F2C5  00                 	db	0
  6761   00F2C6  00                 	db	0
  6762   00F2C7  00                 	db	0
  6763   00F2C8  00                 	db	0
  6764   00F2C9  00                 	db	0
  6765   00F2CA  00                 	db	0
  6766   00F2CB  00                 	db	0
  6767   00F2CC  00                 	db	0
  6768   00F2CD  00                 	db	0
  6769   00F2CE  00                 	db	0
  6770   00F2CF  00                 	db	0
  6771   00F2D0  00                 	db	0
  6772   00F2D1  00                 	db	0
  6773   00F2D2  00                 	db	0
  6774   00F2D3  00                 	db	0
  6775   00F2D4  00                 	db	0
  6776   00F2D5  00                 	db	0
  6777   00F2D6  00                 	db	0
  6778   00F2D7  00                 	db	0
  6779   00F2D8  00                 	db	0
  6780   00F2D9  00                 	db	0
  6781   00F2DA  00                 	db	0
  6782   00F2DB  00                 	db	0
  6783   00F2DC  00                 	db	0
  6784   00F2DD  00                 	db	0
  6785   00F2DE  00                 	db	0
  6786   00F2DF  00                 	db	0
  6787   00F2E0  00                 	db	0
  6788   00F2E1  00                 	db	0
  6789   00F2E2  00                 	db	0
  6790   00F2E3  00                 	db	0
  6791   00F2E4  00                 	db	0
  6792   00F2E5  00                 	db	0
  6793   00F2E6  00                 	db	0
  6794   00F2E7  00                 	db	0
  6795   00F2E8  00                 	db	0
  6796   00F2E9  00                 	db	0
  6797   00F2EA  00                 	db	0
  6798   00F2EB  00                 	db	0
  6799   00F2EC  00                 	db	0
  6800   00F2ED  00                 	db	0
  6801   00F2EE  00                 	db	0
  6802   00F2EF  00                 	db	0
  6803   00F2F0  00                 	db	0
  6804   00F2F1  00                 	db	0
  6805   00F2F2  00                 	db	0
  6806   00F2F3  00                 	db	0
  6807   00F2F4  00                 	db	0
  6808   00F2F5  00                 	db	0
  6809   00F2F6  00                 	db	0
  6810   00F2F7  00                 	db	0
  6811   00F2F8  00                 	db	0
  6812   00F2F9  00                 	db	0
  6813   00F2FA  00                 	db	0
  6814   00F2FB  00                 	db	0
  6815   00F2FC  00                 	db	0
  6816   00F2FD  00                 	db	0
  6817   00F2FE  00                 	db	0
  6818   00F2FF  00                 	db	0
  6819   00F300  00                 	db	0
  6820   00F301  00                 	db	0
  6821   00F302  00                 	db	0
  6822   00F303  00                 	db	0
  6823   00F304  00                 	db	0
  6824   00F305  00                 	db	0
  6825   00F306  00                 	db	0
  6826   00F307  00                 	db	0
  6827   00F308  00                 	db	0
  6828   00F309  00                 	db	0
  6829   00F30A  00                 	db	0
  6830   00F30B  00                 	db	0
  6831   00F30C  00                 	db	0
  6832   00F30D  00                 	db	0
  6833   00F30E  00                 	db	0
  6834   00F30F  00                 	db	0
  6835   00F310  00                 	db	0
  6836   00F311  00                 	db	0
  6837   00F312  00                 	db	0
  6838   00F313  00                 	db	0
  6839   00F314  00                 	db	0
  6840   00F315  00                 	db	0
  6841   00F316  00                 	db	0
  6842   00F317  00                 	db	0
  6843   00F318  00                 	db	0
  6844   00F319  00                 	db	0
  6845   00F31A  00                 	db	0
  6846   00F31B  00                 	db	0
  6847   00F31C  00                 	db	0
  6848   00F31D  00                 	db	0
  6849   00F31E  00                 	db	0
  6850   00F31F  00                 	db	0
  6851   00F320  00                 	db	0
  6852   00F321  00                 	db	0
  6853   00F322  00                 	db	0
  6854   00F323  00                 	db	0
  6855   00F324  00                 	db	0
  6856   00F325  00                 	db	0
  6857   00F326  00                 	db	0
  6858   00F327  00                 	db	0
  6859   00F328  00                 	db	0
  6860   00F329  00                 	db	0
  6861   00F32A  00                 	db	0
  6862   00F32B  00                 	db	0
  6863   00F32C  00                 	db	0
  6864   00F32D  00                 	db	0
  6865   00F32E  00                 	db	0
  6866   00F32F  00                 	db	0
  6867   00F330  00                 	db	0
  6868   00F331  00                 	db	0
  6869   00F332  00                 	db	0
  6870   00F333  00                 	db	0
  6871   00F334  00                 	db	0
  6872   00F335  00                 	db	0
  6873   00F336  00                 	db	0
  6874   00F337  00                 	db	0
  6875   00F338  00                 	db	0
  6876   00F339  00                 	db	0
  6877   00F33A  00                 	db	0
  6878   00F33B  00                 	db	0
  6879   00F33C  00                 	db	0
  6880   00F33D  00                 	db	0
  6881   00F33E  00                 	db	0
  6882   00F33F  00                 	db	0
  6883   00F340  00                 	db	0
  6884   00F341  00                 	db	0
  6885   00F342  00                 	db	0
  6886   00F343  00                 	db	0
  6887   00F344  00                 	db	0
  6888   00F345  00                 	db	0
  6889   00F346  00                 	db	0
  6890   00F347  00                 	db	0
  6891   00F348  00                 	db	0
  6892   00F349  00                 	db	0
  6893   00F34A  00                 	db	0
  6894   00F34B  00                 	db	0
  6895   00F34C  00                 	db	0
  6896   00F34D  00                 	db	0
  6897   00F34E  00                 	db	0
  6898   00F34F  00                 	db	0
  6899   00F350  00                 	db	0
  6900   00F351  00                 	db	0
  6901   00F352  00                 	db	0
  6902   00F353  00                 	db	0
  6903   00F354  00                 	db	0
  6904   00F355  00                 	db	0
  6905   00F356  00                 	db	0
  6906   00F357  00                 	db	0
  6907   00F358  00                 	db	0
  6908   00F359  00                 	db	0
  6909   00F35A  00                 	db	0
  6910   00F35B  00                 	db	0
  6911   00F35C  00                 	db	0
  6912   00F35D  00                 	db	0
  6913   00F35E  00                 	db	0
  6914   00F35F  00                 	db	0
  6915   00F360  00                 	db	0
  6916   00F361  00                 	db	0
  6917   00F362  00                 	db	0
  6918   00F363  00                 	db	0
  6919   00F364  00                 	db	0
  6920   00F365  00                 	db	0
  6921   00F366  00                 	db	0
  6922   00F367  00                 	db	0
  6923   00F368  00                 	db	0
  6924   00F369  00                 	db	0
  6925   00F36A  00                 	db	0
  6926   00F36B  00                 	db	0
  6927   00F36C  00                 	db	0
  6928   00F36D  00                 	db	0
  6929   00F36E  00                 	db	0
  6930   00F36F  00                 	db	0
  6931   00F370  00                 	db	0
  6932   00F371  00                 	db	0
  6933   00F372  00                 	db	0
  6934   00F373  00                 	db	0
  6935   00F374  00                 	db	0
  6936   00F375  00                 	db	0
  6937   00F376  00                 	db	0
  6938   00F377  00                 	db	0
  6939   00F378  00                 	db	0
  6940   00F379  00                 	db	0
  6941   00F37A  00                 	db	0
  6942   00F37B  00                 	db	0
  6943   00F37C  00                 	db	0
  6944   00F37D  00                 	db	0
  6945   00F37E  00                 	db	0
  6946   00F37F  00                 	db	0
  6947   00F380  00                 	db	0
  6948   00F381  00                 	db	0
  6949   00F382  00                 	db	0
  6950   00F383  00                 	db	0
  6951   00F384  00                 	db	0
  6952   00F385  00                 	db	0
  6953   00F386  00                 	db	0
  6954   00F387  00                 	db	0
  6955   00F388  00                 	db	0
  6956   00F389  00                 	db	0
  6957   00F38A  00                 	db	0
  6958   00F38B  00                 	db	0
  6959   00F38C  00                 	db	0
  6960   00F38D  00                 	db	0
  6961   00F38E  00                 	db	0
  6962   00F38F  00                 	db	0
  6963   00F390  00                 	db	0
  6964   00F391  00                 	db	0
  6965   00F392  00                 	db	0
  6966   00F393  00                 	db	0
  6967   00F394  00                 	db	0
  6968   00F395  00                 	db	0
  6969   00F396  00                 	db	0
  6970   00F397  00                 	db	0
  6971   00F398  00                 	db	0
  6972   00F399  00                 	db	0
  6973   00F39A  00                 	db	0
  6974   00F39B  00                 	db	0
  6975   00F39C  00                 	db	0
  6976   00F39D  00                 	db	0
  6977   00F39E  00                 	db	0
  6978   00F39F  00                 	db	0
  6979   00F3A0  00                 	db	0
  6980   00F3A1  00                 	db	0
  6981   00F3A2  00                 	db	0
  6982   00F3A3  00                 	db	0
  6983   00F3A4  00                 	db	0
  6984   00F3A5  00                 	db	0
  6985   00F3A6  00                 	db	0
  6986   00F3A7  00                 	db	0
  6987   00F3A8  00                 	db	0
  6988   00F3A9  00                 	db	0
  6989   00F3AA  00                 	db	0
  6990   00F3AB  00                 	db	0
  6991   00F3AC  00                 	db	0
  6992   00F3AD  00                 	db	0
  6993   00F3AE  00                 	db	0
  6994   00F3AF  00                 	db	0
  6995   00F3B0  00                 	db	0
  6996   00F3B1  00                 	db	0
  6997   00F3B2  00                 	db	0
  6998   00F3B3  00                 	db	0
  6999   00F3B4  00                 	db	0
  7000   00F3B5  00                 	db	0
  7001   00F3B6  00                 	db	0
  7002   00F3B7  00                 	db	0
  7003   00F3B8  00                 	db	0
  7004   00F3B9  00                 	db	0
  7005   00F3BA  00                 	db	0
  7006   00F3BB  00                 	db	0
  7007   00F3BC  00                 	db	0
  7008   00F3BD  00                 	db	0
  7009   00F3BE  00                 	db	0
  7010   00F3BF  00                 	db	0
  7011   00F3C0  00                 	db	0
  7012   00F3C1  00                 	db	0
  7013   00F3C2  00                 	db	0
  7014   00F3C3  00                 	db	0
  7015   00F3C4  00                 	db	0
  7016   00F3C5  00                 	db	0
  7017   00F3C6  00                 	db	0
  7018   00F3C7  00                 	db	0
  7019   00F3C8  00                 	db	0
  7020   00F3C9  00                 	db	0
  7021   00F3CA  00                 	db	0
  7022   00F3CB  00                 	db	0
  7023   00F3CC  00                 	db	0
  7024   00F3CD  00                 	db	0
  7025   00F3CE  00                 	db	0
  7026   00F3CF  00                 	db	0
  7027   00F3D0  00                 	db	0
  7028   00F3D1  00                 	db	0
  7029   00F3D2  00                 	db	0
  7030   00F3D3  00                 	db	0
  7031   00F3D4  00                 	db	0
  7032   00F3D5  00                 	db	0
  7033   00F3D6  00                 	db	0
  7034   00F3D7  00                 	db	0
  7035   00F3D8  00                 	db	0
  7036   00F3D9  00                 	db	0
  7037   00F3DA  00                 	db	0
  7038   00F3DB  00                 	db	0
  7039   00F3DC  00                 	db	0
  7040   00F3DD  00                 	db	0
  7041   00F3DE  00                 	db	0
  7042   00F3DF  00                 	db	0
  7043   00F3E0  00                 	db	0
  7044   00F3E1  00                 	db	0
  7045   00F3E2  00                 	db	0
  7046   00F3E3  00                 	db	0
  7047   00F3E4  00                 	db	0
  7048   00F3E5  00                 	db	0
  7049   00F3E6  00                 	db	0
  7050   00F3E7  00                 	db	0
  7051   00F3E8  00                 	db	0
  7052   00F3E9  00                 	db	0
  7053   00F3EA  00                 	db	0
  7054   00F3EB  00                 	db	0
  7055   00F3EC  00                 	db	0
  7056   00F3ED  00                 	db	0
  7057   00F3EE  00                 	db	0
  7058   00F3EF  00                 	db	0
  7059   00F3F0  00                 	db	0
  7060   00F3F1  00                 	db	0
  7061   00F3F2  00                 	db	0
  7062   00F3F3  00                 	db	0
  7063   00F3F4  00                 	db	0
  7064   00F3F5  00                 	db	0
  7065   00F3F6  00                 	db	0
  7066   00F3F7  00                 	db	0
  7067   00F3F8  00                 	db	0
  7068   00F3F9  00                 	db	0
  7069   00F3FA  00                 	db	0
  7070   00F3FB  00                 	db	0
  7071   00F3FC  00                 	db	0
  7072   00F3FD  00                 	db	0
  7073   00F3FE  00                 	db	0
  7074   00F3FF  00                 	db	0
  7075   00F400  00                 	db	0
  7076   00F401  00                 	db	0
  7077   00F402  00                 	db	0
  7078   00F403  00                 	db	0
  7079   00F404  00                 	db	0
  7080   00F405  00                 	db	0
  7081   00F406  00                 	db	0
  7082   00F407  00                 	db	0
  7083   00F408  00                 	db	0
  7084   00F409  00                 	db	0
  7085   00F40A  00                 	db	0
  7086   00F40B  00                 	db	0
  7087   00F40C  00                 	db	0
  7088   00F40D  00                 	db	0
  7089   00F40E  00                 	db	0
  7090   00F40F  00                 	db	0
  7091   00F410  00                 	db	0
  7092   00F411  00                 	db	0
  7093   00F412  00                 	db	0
  7094   00F413  00                 	db	0
  7095   00F414  00                 	db	0
  7096   00F415  00                 	db	0
  7097   00F416  00                 	db	0
  7098   00F417  00                 	db	0
  7099   00F418  00                 	db	0
  7100   00F419  00                 	db	0
  7101   00F41A  00                 	db	0
  7102   00F41B  00                 	db	0
  7103   00F41C  00                 	db	0
  7104   00F41D  00                 	db	0
  7105   00F41E  00                 	db	0
  7106   00F41F  00                 	db	0
  7107   00F420  00                 	db	0
  7108   00F421  00                 	db	0
  7109   00F422  00                 	db	0
  7110   00F423  00                 	db	0
  7111   00F424  00                 	db	0
  7112   00F425  00                 	db	0
  7113   00F426  00                 	db	0
  7114   00F427  00                 	db	0
  7115   00F428  00                 	db	0
  7116   00F429  00                 	db	0
  7117   00F42A  00                 	db	0
  7118   00F42B  00                 	db	0
  7119   00F42C  00                 	db	0
  7120   00F42D  00                 	db	0
  7121   00F42E  00                 	db	0
  7122   00F42F  00                 	db	0
  7123   00F430  00                 	db	0
  7124   00F431  00                 	db	0
  7125   00F432  00                 	db	0
  7126   00F433  00                 	db	0
  7127   00F434  00                 	db	0
  7128   00F435  00                 	db	0
  7129   00F436  00                 	db	0
  7130   00F437  00                 	db	0
  7131   00F438  00                 	db	0
  7132   00F439  00                 	db	0
  7133   00F43A  00                 	db	0
  7134   00F43B  00                 	db	0
  7135   00F43C  00                 	db	0
  7136   00F43D  00                 	db	0
  7137   00F43E  00                 	db	0
  7138   00F43F  00                 	db	0
  7139   00F440  00                 	db	0
  7140   00F441  00                 	db	0
  7141   00F442  00                 	db	0
  7142   00F443  00                 	db	0
  7143   00F444  00                 	db	0
  7144   00F445  00                 	db	0
  7145   00F446  00                 	db	0
  7146   00F447  00                 	db	0
  7147   00F448  00                 	db	0
  7148   00F449  00                 	db	0
  7149   00F44A  00                 	db	0
  7150   00F44B  00                 	db	0
  7151   00F44C  00                 	db	0
  7152   00F44D  00                 	db	0
  7153   00F44E  00                 	db	0
  7154   00F44F  00                 	db	0
  7155   00F450  00                 	db	0
  7156   00F451  00                 	db	0
  7157   00F452  00                 	db	0
  7158   00F453  00                 	db	0
  7159   00F454  00                 	db	0
  7160   00F455  00                 	db	0
  7161   00F456  00                 	db	0
  7162   00F457  00                 	db	0
  7163   00F458  00                 	db	0
  7164   00F459  00                 	db	0
  7165   00F45A  00                 	db	0
  7166   00F45B  00                 	db	0
  7167   00F45C  00                 	db	0
  7168   00F45D  00                 	db	0
  7169   00F45E  00                 	db	0
  7170   00F45F  00                 	db	0
  7171   00F460  00                 	db	0
  7172   00F461  00                 	db	0
  7173   00F462  00                 	db	0
  7174   00F463  00                 	db	0
  7175   00F464  00                 	db	0
  7176   00F465  00                 	db	0
  7177   00F466  00                 	db	0
  7178   00F467  00                 	db	0
  7179   00F468  00                 	db	0
  7180   00F469  00                 	db	0
  7181   00F46A  00                 	db	0
  7182   00F46B  00                 	db	0
  7183   00F46C  00                 	db	0
  7184   00F46D  00                 	db	0
  7185   00F46E  00                 	db	0
  7186   00F46F  00                 	db	0
  7187   00F470  00                 	db	0
  7188   00F471  00                 	db	0
  7189   00F472  00                 	db	0
  7190   00F473  00                 	db	0
  7191   00F474  00                 	db	0
  7192   00F475  00                 	db	0
  7193   00F476  00                 	db	0
  7194   00F477  00                 	db	0
  7195   00F478  00                 	db	0
  7196   00F479  00                 	db	0
  7197   00F47A  00                 	db	0
  7198   00F47B  00                 	db	0
  7199   00F47C  00                 	db	0
  7200   00F47D  00                 	db	0
  7201   00F47E  00                 	db	0
  7202   00F47F  00                 	db	0
  7203   00F480  00                 	db	0
  7204   00F481  00                 	db	0
  7205   00F482  00                 	db	0
  7206   00F483  00                 	db	0
  7207   00F484  00                 	db	0
  7208   00F485  00                 	db	0
  7209   00F486  00                 	db	0
  7210   00F487  00                 	db	0
  7211   00F488  00                 	db	0
  7212   00F489  00                 	db	0
  7213   00F48A  00                 	db	0
  7214   00F48B  00                 	db	0
  7215   00F48C  00                 	db	0
  7216   00F48D  00                 	db	0
  7217   00F48E  00                 	db	0
  7218   00F48F  00                 	db	0
  7219   00F490  00                 	db	0
  7220   00F491  00                 	db	0
  7221   00F492  00                 	db	0
  7222   00F493  00                 	db	0
  7223   00F494  00                 	db	0
  7224   00F495  00                 	db	0
  7225   00F496  00                 	db	0
  7226   00F497  00                 	db	0
  7227   00F498  00                 	db	0
  7228   00F499  00                 	db	0
  7229   00F49A  00                 	db	0
  7230   00F49B  00                 	db	0
  7231   00F49C  00                 	db	0
  7232   00F49D  00                 	db	0
  7233   00F49E  00                 	db	0
  7234   00F49F  00                 	db	0
  7235   00F4A0  00                 	db	0
  7236   00F4A1  00                 	db	0
  7237   00F4A2  00                 	db	0
  7238   00F4A3  00                 	db	0
  7239   00F4A4  00                 	db	0
  7240   00F4A5  00                 	db	0
  7241   00F4A6  00                 	db	0
  7242   00F4A7  00                 	db	0
  7243   00F4A8  00                 	db	0
  7244   00F4A9  00                 	db	0
  7245   00F4AA  00                 	db	0
  7246   00F4AB  00                 	db	0
  7247   00F4AC  00                 	db	0
  7248   00F4AD  00                 	db	0
  7249   00F4AE  00                 	db	0
  7250   00F4AF  00                 	db	0
  7251   00F4B0  00                 	db	0
  7252   00F4B1  00                 	db	0
  7253   00F4B2  00                 	db	0
  7254   00F4B3  00                 	db	0
  7255   00F4B4  00                 	db	0
  7256   00F4B5  00                 	db	0
  7257   00F4B6  00                 	db	0
  7258   00F4B7  00                 	db	0
  7259   00F4B8  00                 	db	0
  7260   00F4B9  00                 	db	0
  7261   00F4BA  00                 	db	0
  7262   00F4BB  00                 	db	0
  7263   00F4BC  00                 	db	0
  7264   00F4BD  00                 	db	0
  7265   00F4BE  00                 	db	0
  7266   00F4BF  00                 	db	0
  7267   00F4C0  00                 	db	0
  7268   00F4C1  00                 	db	0
  7269   00F4C2  00                 	db	0
  7270   00F4C3  00                 	db	0
  7271   00F4C4  00                 	db	0
  7272   00F4C5  00                 	db	0
  7273   00F4C6  00                 	db	0
  7274   00F4C7  00                 	db	0
  7275   00F4C8  00                 	db	0
  7276   00F4C9  00                 	db	0
  7277   00F4CA  00                 	db	0
  7278   00F4CB  00                 	db	0
  7279   00F4CC  00                 	db	0
  7280   00F4CD  00                 	db	0
  7281   00F4CE  00                 	db	0
  7282   00F4CF  00                 	db	0
  7283   00F4D0  00                 	db	0
  7284   00F4D1  00                 	db	0
  7285   00F4D2  00                 	db	0
  7286   00F4D3  00                 	db	0
  7287   00F4D4  00                 	db	0
  7288   00F4D5  00                 	db	0
  7289   00F4D6  00                 	db	0
  7290   00F4D7  00                 	db	0
  7291   00F4D8                     __end_of_bios:
  7292                           	callstack 0
  7293   00F4D8                     _rom:
  7294                           	callstack 0
  7295   00F4D8  00                 	db	0
  7296   00F4D9  00                 	db	0
  7297   00F4DA  00                 	db	0
  7298   00F4DB  F3                 	db	243
  7299   00F4DC  C3                 	db	195
  7300   00F4DD  87                 	db	135
  7301   00F4DE  00                 	db	0
  7302   00F4DF  FF                 	db	255
  7303   00F4E0  FF                 	db	255
  7304   00F4E1  FF                 	db	255
  7305   00F4E2  FF                 	db	255
  7306   00F4E3  FF                 	db	255
  7307   00F4E4  FF                 	db	255
  7308   00F4E5  FF                 	db	255
  7309   00F4E6  FF                 	db	255
  7310   00F4E7  FF                 	db	255
  7311   00F4E8  FF                 	db	255
  7312   00F4E9  FF                 	db	255
  7313   00F4EA  FF                 	db	255
  7314   00F4EB  FF                 	db	255
  7315   00F4EC  FF                 	db	255
  7316   00F4ED  FF                 	db	255
  7317   00F4EE  FF                 	db	255
  7318   00F4EF  FF                 	db	255
  7319   00F4F0  FF                 	db	255
  7320   00F4F1  FF                 	db	255
  7321   00F4F2  FF                 	db	255
  7322   00F4F3  FF                 	db	255
  7323   00F4F4  FF                 	db	255
  7324   00F4F5  FF                 	db	255
  7325   00F4F6  FF                 	db	255
  7326   00F4F7  FF                 	db	255
  7327   00F4F8  FF                 	db	255
  7328   00F4F9  FF                 	db	255
  7329   00F4FA  FF                 	db	255
  7330   00F4FB  FF                 	db	255
  7331   00F4FC  FF                 	db	255
  7332   00F4FD  FF                 	db	255
  7333   00F4FE  FF                 	db	255
  7334   00F4FF  FF                 	db	255
  7335   00F500  FF                 	db	255
  7336   00F501  FF                 	db	255
  7337   00F502  FF                 	db	255
  7338   00F503  FF                 	db	255
  7339   00F504  FF                 	db	255
  7340   00F505  FF                 	db	255
  7341   00F506  FF                 	db	255
  7342   00F507  FF                 	db	255
  7343   00F508  FF                 	db	255
  7344   00F509  FF                 	db	255
  7345   00F50A  FF                 	db	255
  7346   00F50B  FF                 	db	255
  7347   00F50C  FF                 	db	255
  7348   00F50D  FF                 	db	255
  7349   00F50E  FF                 	db	255
  7350   00F50F  FF                 	db	255
  7351   00F510  FF                 	db	255
  7352   00F511  FF                 	db	255
  7353   00F512  FF                 	db	255
  7354   00F513  FF                 	db	255
  7355   00F514  FF                 	db	255
  7356   00F515  FF                 	db	255
  7357   00F516  FF                 	db	255
  7358   00F517  FF                 	db	255
  7359   00F518  FF                 	db	255
  7360   00F519  FF                 	db	255
  7361   00F51A  FF                 	db	255
  7362   00F51B  FF                 	db	255
  7363   00F51C  FF                 	db	255
  7364   00F51D  FF                 	db	255
  7365   00F51E  FF                 	db	255
  7366   00F51F  FF                 	db	255
  7367   00F520  FF                 	db	255
  7368   00F521  FF                 	db	255
  7369   00F522  FF                 	db	255
  7370   00F523  FF                 	db	255
  7371   00F524  FF                 	db	255
  7372   00F525  FF                 	db	255
  7373   00F526  FF                 	db	255
  7374   00F527  FF                 	db	255
  7375   00F528  FF                 	db	255
  7376   00F529  FF                 	db	255
  7377   00F52A  FF                 	db	255
  7378   00F52B  FF                 	db	255
  7379   00F52C  FF                 	db	255
  7380   00F52D  FF                 	db	255
  7381   00F52E  FF                 	db	255
  7382   00F52F  FF                 	db	255
  7383   00F530  FF                 	db	255
  7384   00F531  FF                 	db	255
  7385   00F532  FF                 	db	255
  7386   00F533  FF                 	db	255
  7387   00F534  FF                 	db	255
  7388   00F535  FF                 	db	255
  7389   00F536  FF                 	db	255
  7390   00F537  FF                 	db	255
  7391   00F538  FF                 	db	255
  7392   00F539  FF                 	db	255
  7393   00F53A  FF                 	db	255
  7394   00F53B  FF                 	db	255
  7395   00F53C  FF                 	db	255
  7396   00F53D  FF                 	db	255
  7397   00F53E  FF                 	db	255
  7398   00F53F  FF                 	db	255
  7399   00F540  FF                 	db	255
  7400   00F541  FF                 	db	255
  7401   00F542  FF                 	db	255
  7402   00F543  FF                 	db	255
  7403   00F544  FF                 	db	255
  7404   00F545  FF                 	db	255
  7405   00F546  FF                 	db	255
  7406   00F547  FF                 	db	255
  7407   00F548  FF                 	db	255
  7408   00F549  FF                 	db	255
  7409   00F54A  FF                 	db	255
  7410   00F54B  FF                 	db	255
  7411   00F54C  FF                 	db	255
  7412   00F54D  FF                 	db	255
  7413   00F54E  FF                 	db	255
  7414   00F54F  FF                 	db	255
  7415   00F550  FF                 	db	255
  7416   00F551  FF                 	db	255
  7417   00F552  FF                 	db	255
  7418   00F553  FF                 	db	255
  7419   00F554  FF                 	db	255
  7420   00F555  FF                 	db	255
  7421   00F556  FF                 	db	255
  7422   00F557  FF                 	db	255
  7423   00F558  0D                 	db	13
  7424   00F559  0A                 	db	10
  7425   00F55A  49                 	db	73
  7426   00F55B  50                 	db	80
  7427   00F55C  4C                 	db	76
  7428   00F55D  3A                 	db	58
  7429   00F55E  00                 	db	0
  7430   00F55F  F3                 	db	243
  7431   00F560  31                 	db	49
  7432   00F561  80                 	db	128
  7433   00F562  00                 	db	0
  7434   00F563  3E                 	db	62
  7435   00F564  7F                 	db	127
  7436   00F565  3C                 	db	60
  7437   00F566  EA                 	db	234
  7438   00F567  C3                 	db	195
  7439   00F568  00                 	db	0
  7440   00F569  01                 	db	1
  7441   00F56A  FF                 	db	255
  7442   00F56B  FF                 	db	255
  7443   00F56C  C5                 	db	197
  7444   00F56D  F1                 	db	241
  7445   00F56E  F5                 	db	245
  7446   00F56F  D1                 	db	209
  7447   00F570  7B                 	db	123
  7448   00F571  E6                 	db	230
  7449   00F572  22                 	db	34
  7450   00F573  CA                 	db	202
  7451   00F574  82                 	db	130
  7452   00F575  02                 	db	2
  7453   00F576  7B                 	db	123
  7454   00F577  E6                 	db	230
  7455   00F578  2A                 	db	42
  7456   00F579  FE                 	db	254
  7457   00F57A  02                 	db	2
  7458   00F57B  CA                 	db	202
  7459   00F57C  98                 	db	152
  7460   00F57D  01                 	db	1
  7461   00F57E  7B                 	db	123
  7462   00F57F  E6                 	db	230
  7463   00F580  0A                 	db	10
  7464   00F581  FE                 	db	254
  7465   00F582  0A                 	db	10
  7466   00F583  CA                 	db	202
  7467   00F584  E5                 	db	229
  7468   00F585  01                 	db	1
  7469   00F586  7B                 	db	123
  7470   00F587  E6                 	db	230
  7471   00F588  2A                 	db	42
  7472   00F589  FE                 	db	254
  7473   00F58A  22                 	db	34
  7474   00F58B  C2                 	db	194
  7475   00F58C  22                 	db	34
  7476   00F58D  03                 	db	3
  7477   00F58E  01                 	db	1
  7478   00F58F  00                 	db	0
  7479   00F590  00                 	db	0
  7480   00F591  C5                 	db	197
  7481   00F592  F1                 	db	241
  7482   00F593  F5                 	db	245
  7483   00F594  D1                 	db	209
  7484   00F595  7B                 	db	123
  7485   00F596  E6                 	db	230
  7486   00F597  2A                 	db	42
  7487   00F598  CA                 	db	202
  7488   00F599  33                 	db	51
  7489   00F59A  02                 	db	2
  7490   00F59B  01                 	db	1
  7491   00F59C  FF                 	db	255
  7492   00F59D  00                 	db	0
  7493   00F59E  ED                 	db	237
  7494   00F59F  4C                 	db	76
  7495   00F5A0  78                 	db	120
  7496   00F5A1  B1                 	db	177
  7497   00F5A2  C2                 	db	194
  7498   00F5A3  D3                 	db	211
  7499   00F5A4  02                 	db	2
  7500   00F5A5  3E                 	db	62
  7501   00F5A6  C0                 	db	192
  7502   00F5A7  ED                 	db	237
  7503   00F5A8  39                 	db	57
  7504   00F5A9  3F                 	db	63
  7505   00F5AA  3E                 	db	62
  7506   00F5AB  00                 	db	0
  7507   00F5AC  ED                 	db	237
  7508   00F5AD  39                 	db	57
  7509   00F5AE  F2                 	db	242
  7510   00F5AF  3E                 	db	62
  7511   00F5B0  00                 	db	0
  7512   00F5B1  ED                 	db	237
  7513   00F5B2  39                 	db	57
  7514   00F5B3  F6                 	db	246
  7515   00F5B4  3E                 	db	62
  7516   00F5B5  7F                 	db	127
  7517   00F5B6  ED                 	db	237
  7518   00F5B7  39                 	db	57
  7519   00F5B8  FE                 	db	254
  7520   00F5B9  ED                 	db	237
  7521   00F5BA  38                 	db	56
  7522   00F5BB  FE                 	db	254
  7523   00F5BC  E6                 	db	230
  7524   00F5BD  80                 	db	128
  7525   00F5BE  20                 	db	32
  7526   00F5BF  75                 	db	117
  7527   00F5C0  3E                 	db	62
  7528   00F5C1  E0                 	db	224
  7529   00F5C2  ED                 	db	237
  7530   00F5C3  39                 	db	57
  7531   00F5C4  FE                 	db	254
  7532   00F5C5  AF                 	db	175
  7533   00F5C6  ED                 	db	237
  7534   00F5C7  39                 	db	57
  7535   00F5C8  D2                 	db	210
  7536   00F5C9  ED                 	db	237
  7537   00F5CA  38                 	db	56
  7538   00F5CB  D2                 	db	210
  7539   00F5CC  E6                 	db	230
  7540   00F5CD  40                 	db	64
  7541   00F5CE  20                 	db	32
  7542   00F5CF  65                 	db	101
  7543   00F5D0  26                 	db	38
  7544   00F5D1  00                 	db	0
  7545   00F5D2  3A                 	db	58
  7546   00F5D3  41                 	db	65
  7547   00F5D4  01                 	db	1
  7548   00F5D5  84                 	db	132
  7549   00F5D6  32                 	db	50
  7550   00F5D7  41                 	db	65
  7551   00F5D8  01                 	db	1
  7552   00F5D9  7C                 	db	124
  7553   00F5DA  E6                 	db	230
  7554   00F5DB  03                 	db	3
  7555   00F5DC  07                 	db	7
  7556   00F5DD  07                 	db	7
  7557   00F5DE  67                 	db	103
  7558   00F5DF  2E                 	db	46
  7559   00F5E0  01                 	db	1
  7560   00F5E1  3A                 	db	58
  7561   00F5E2  4B                 	db	75
  7562   00F5E3  01                 	db	1
  7563   00F5E4  85                 	db	133
  7564   00F5E5  32                 	db	50
  7565   00F5E6  4B                 	db	75
  7566   00F5E7  01                 	db	1
  7567   00F5E8  7D                 	db	125
  7568   00F5E9  E6                 	db	230
  7569   00F5EA  03                 	db	3
  7570   00F5EB  84                 	db	132
  7571   00F5EC  07                 	db	7
  7572   00F5ED  07                 	db	7
  7573   00F5EE  07                 	db	7
  7574   00F5EF  07                 	db	7
  7575   00F5F0  ED                 	db	237
  7576   00F5F1  39                 	db	57
  7577   00F5F2  F2                 	db	242
  7578   00F5F3  3E                 	db	62
  7579   00F5F4  80                 	db	128
  7580   00F5F5  ED                 	db	237
  7581   00F5F6  39                 	db	57
  7582   00F5F7  DF                 	db	223
  7583   00F5F8  3E                 	db	62
  7584   00F5F9  FF                 	db	255
  7585   00F5FA  ED                 	db	237
  7586   00F5FB  39                 	db	57
  7587   00F5FC  DE                 	db	222
  7588   00F5FD  21                 	db	33
  7589   00F5FE  2B                 	db	43
  7590   00F5FF  01                 	db	1
  7591   00F600  C3                 	db	195
  7592   00F601  22                 	db	34
  7593   00F602  03                 	db	3
  7594   00F603  5A                 	db	90
  7595   00F604  38                 	db	56
  7596   00F605  53                 	db	83
  7597   00F606  31                 	db	49
  7598   00F607  38                 	db	56
  7599   00F608  30                 	db	48
  7600   00F609  20                 	db	32
  7601   00F60A  72                 	db	114
  7602   00F60B  75                 	db	117
  7603   00F60C  6E                 	db	110
  7604   00F60D  6E                 	db	110
  7605   00F60E  69                 	db	105
  7606   00F60F  6E                 	db	110
  7607   00F610  67                 	db	103
  7608   00F611  20                 	db	32
  7609   00F612  6D                 	db	109
  7610   00F613  65                 	db	101
  7611   00F614  6D                 	db	109
  7612   00F615  6F                 	db	111
  7613   00F616  72                 	db	114
  7614   00F617  79                 	db	121
  7615   00F618  20                 	db	32
  7616   00F619  30                 	db	48
  7617   00F61A  77                 	db	119
  7618   00F61B  61                 	db	97
  7619   00F61C  69                 	db	105
  7620   00F61D  74                 	db	116
  7621   00F61E  20                 	db	32
  7622   00F61F  49                 	db	73
  7623   00F620  2F                 	db	47
  7624   00F621  4F                 	db	79
  7625   00F622  20                 	db	32
  7626   00F623  31                 	db	49
  7627   00F624  77                 	db	119
  7628   00F625  61                 	db	97
  7629   00F626  69                 	db	105
  7630   00F627  74                 	db	116
  7631   00F628  20                 	db	32
  7632   00F629  32                 	db	50
  7633   00F62A  78                 	db	120
  7634   00F62B  20                 	db	32
  7635   00F62C  63                 	db	99
  7636   00F62D  6C                 	db	108
  7637   00F62E  6F                 	db	111
  7638   00F62F  63                 	db	99
  7639   00F630  6B                 	db	107
  7640   00F631  0D                 	db	13
  7641   00F632  0A                 	db	10
  7642   00F633  0A                 	db	10
  7643   00F634  00                 	db	0
  7644   00F635  21                 	db	33
  7645   00F636  63                 	db	99
  7646   00F637  01                 	db	1
  7647   00F638  C3                 	db	195
  7648   00F639  22                 	db	34
  7649   00F63A  03                 	db	3
  7650   00F63B  48                 	db	72
  7651   00F63C  44                 	db	68
  7652   00F63D  36                 	db	54
  7653   00F63E  34                 	db	52
  7654   00F63F  31                 	db	49
  7655   00F640  38                 	db	56
  7656   00F641  30                 	db	48
  7657   00F642  20                 	db	32
  7658   00F643  72                 	db	114
  7659   00F644  75                 	db	117
  7660   00F645  6E                 	db	110
  7661   00F646  6E                 	db	110
  7662   00F647  69                 	db	105
  7663   00F648  6E                 	db	110
  7664   00F649  67                 	db	103
  7665   00F64A  20                 	db	32
  7666   00F64B  6D                 	db	109
  7667   00F64C  65                 	db	101
  7668   00F64D  6D                 	db	109
  7669   00F64E  6F                 	db	111
  7670   00F64F  72                 	db	114
  7671   00F650  79                 	db	121
  7672   00F651  20                 	db	32
  7673   00F652  30                 	db	48
  7674   00F653  77                 	db	119
  7675   00F654  61                 	db	97
  7676   00F655  69                 	db	105
  7677   00F656  74                 	db	116
  7678   00F657  20                 	db	32
  7679   00F658  49                 	db	73
  7680   00F659  2F                 	db	47
  7681   00F65A  4F                 	db	79
  7682   00F65B  20                 	db	32
  7683   00F65C  31                 	db	49
  7684   00F65D  77                 	db	119
  7685   00F65E  61                 	db	97
  7686   00F65F  69                 	db	105
  7687   00F660  74                 	db	116
  7688   00F661  20                 	db	32
  7689   00F662  30                 	db	48
  7690   00F663  2E                 	db	46
  7691   00F664  35                 	db	53
  7692   00F665  78                 	db	120
  7693   00F666  20                 	db	32
  7694   00F667  63                 	db	99
  7695   00F668  6C                 	db	108
  7696   00F669  6F                 	db	111
  7697   00F66A  63                 	db	99
  7698   00F66B  6B                 	db	107
  7699   00F66C  0D                 	db	13
  7700   00F66D  0A                 	db	10
  7701   00F66E  0A                 	db	10
  7702   00F66F  00                 	db	0
  7703   00F670  21                 	db	33
  7704   00F671  9E                 	db	158
  7705   00F672  01                 	db	1
  7706   00F673  C3                 	db	195
  7707   00F674  22                 	db	34
  7708   00F675  03                 	db	3
  7709   00F676  69                 	db	105
  7710   00F677  38                 	db	56
  7711   00F678  30                 	db	48
  7712   00F679  38                 	db	56
  7713   00F67A  30                 	db	48
  7714   00F67B  20                 	db	32
  7715   00F67C  72                 	db	114
  7716   00F67D  75                 	db	117
  7717   00F67E  6E                 	db	110
  7718   00F67F  6E                 	db	110
  7719   00F680  69                 	db	105
  7720   00F681  6E                 	db	110
  7721   00F682  67                 	db	103
  7722   00F683  20                 	db	32
  7723   00F684  28                 	db	40
  7724   00F685  66                 	db	102
  7725   00F686  6C                 	db	108
  7726   00F687  61                 	db	97
  7727   00F688  67                 	db	103
  7728   00F689  20                 	db	32
  7729   00F68A  62                 	db	98
  7730   00F68B  69                 	db	105
  7731   00F68C  74                 	db	116
  7732   00F68D  32                 	db	50
  7733   00F68E  20                 	db	32
  7734   00F68F  69                 	db	105
  7735   00F690  73                 	db	115
  7736   00F691  20                 	db	32
  7737   00F692  50                 	db	80
  7738   00F693  61                 	db	97
  7739   00F694  72                 	db	114
  7740   00F695  69                 	db	105
  7741   00F696  74                 	db	116
  7742   00F697  79                 	db	121
  7743   00F698  20                 	db	32
  7744   00F699  61                 	db	97
  7745   00F69A  66                 	db	102
  7746   00F69B  74                 	db	116
  7747   00F69C  65                 	db	101
  7748   00F69D  72                 	db	114
  7749   00F69E  20                 	db	32
  7750   00F69F  61                 	db	97
  7751   00F6A0  72                 	db	114
  7752   00F6A1  69                 	db	105
  7753   00F6A2  74                 	db	116
  7754   00F6A3  68                 	db	104
  7755   00F6A4  6D                 	db	109
  7756   00F6A5  61                 	db	97
  7757   00F6A6  74                 	db	116
  7758   00F6A7  69                 	db	105
  7759   00F6A8  63                 	db	99
  7760   00F6A9  2C                 	db	44
  7761   00F6AA  20                 	db	32
  7762   00F6AB  62                 	db	98
  7763   00F6AC  69                 	db	105
  7764   00F6AD  74                 	db	116
  7765   00F6AE  35                 	db	53
  7766   00F6AF  33                 	db	51
  7767   00F6B0  31                 	db	49
  7768   00F6B1  20                 	db	32
  7769   00F6B2  69                 	db	105
  7770   00F6B3  73                 	db	115
  7771   00F6B4  20                 	db	32
  7772   00F6B5  30                 	db	48
  7773   00F6B6  30                 	db	48
  7774   00F6B7  31                 	db	49
  7775   00F6B8  29                 	db	41
  7776   00F6B9  0D                 	db	13
  7777   00F6BA  0A                 	db	10
  7778   00F6BB  0A                 	db	10
  7779   00F6BC  00                 	db	0
  7780   00F6BD  21                 	db	33
  7781   00F6BE  EB                 	db	235
  7782   00F6BF  01                 	db	1
  7783   00F6C0  C3                 	db	195
  7784   00F6C1  22                 	db	34
  7785   00F6C2  03                 	db	3
  7786   00F6C3  75                 	db	117
  7787   00F6C4  50                 	db	80
  7788   00F6C5  44                 	db	68
  7789   00F6C6  38                 	db	56
  7790   00F6C7  30                 	db	48
  7791   00F6C8  38                 	db	56
  7792   00F6C9  30                 	db	48
  7793   00F6CA  41                 	db	65
  7794   00F6CB  20                 	db	32
  7795   00F6CC  72                 	db	114
  7796   00F6CD  75                 	db	117
  7797   00F6CE  6E                 	db	110
  7798   00F6CF  6E                 	db	110
  7799   00F6D0  69                 	db	105
  7800   00F6D1  6E                 	db	110
  7801   00F6D2  67                 	db	103
  7802   00F6D3  20                 	db	32
  7803   00F6D4  28                 	db	40
  7804   00F6D5  66                 	db	102
  7805   00F6D6  6C                 	db	108
  7806   00F6D7  61                 	db	97
  7807   00F6D8  67                 	db	103
  7808   00F6D9  20                 	db	32
  7809   00F6DA  62                 	db	98
  7810   00F6DB  69                 	db	105
  7811   00F6DC  74                 	db	116
  7812   00F6DD  32                 	db	50
  7813   00F6DE  20                 	db	32
  7814   00F6DF  69                 	db	105
  7815   00F6E0  73                 	db	115
  7816   00F6E1  20                 	db	32
  7817   00F6E2  50                 	db	80
  7818   00F6E3  61                 	db	97
  7819   00F6E4  72                 	db	114
  7820   00F6E5  69                 	db	105
  7821   00F6E6  74                 	db	116
  7822   00F6E7  79                 	db	121
  7823   00F6E8  20                 	db	32
  7824   00F6E9  61                 	db	97
  7825   00F6EA  66                 	db	102
  7826   00F6EB  74                 	db	116
  7827   00F6EC  65                 	db	101
  7828   00F6ED  72                 	db	114
  7829   00F6EE  20                 	db	32
  7830   00F6EF  61                 	db	97
  7831   00F6F0  72                 	db	114
  7832   00F6F1  69                 	db	105
  7833   00F6F2  74                 	db	116
  7834   00F6F3  68                 	db	104
  7835   00F6F4  6D                 	db	109
  7836   00F6F5  61                 	db	97
  7837   00F6F6  74                 	db	116
  7838   00F6F7  69                 	db	105
  7839   00F6F8  63                 	db	99
  7840   00F6F9  2C                 	db	44
  7841   00F6FA  20                 	db	32
  7842   00F6FB  62                 	db	98
  7843   00F6FC  69                 	db	105
  7844   00F6FD  74                 	db	116
  7845   00F6FE  33                 	db	51
  7846   00F6FF  31                 	db	49
  7847   00F700  20                 	db	32
  7848   00F701  69                 	db	105
  7849   00F702  73                 	db	115
  7850   00F703  20                 	db	32
  7851   00F704  31                 	db	49
  7852   00F705  31                 	db	49
  7853   00F706  29                 	db	41
  7854   00F707  0D                 	db	13
  7855   00F708  0A                 	db	10
  7856   00F709  0A                 	db	10
  7857   00F70A  00                 	db	0
  7858   00F70B  21                 	db	33
  7859   00F70C  39                 	db	57
  7860   00F70D  02                 	db	2
  7861   00F70E  C3                 	db	195
  7862   00F70F  22                 	db	34
  7863   00F710  03                 	db	3
  7864   00F711  69                 	db	105
  7865   00F712  38                 	db	56
  7866   00F713  30                 	db	48
  7867   00F714  38                 	db	56
  7868   00F715  35                 	db	53
  7869   00F716  20                 	db	32
  7870   00F717  72                 	db	114
  7871   00F718  75                 	db	117
  7872   00F719  6E                 	db	110
  7873   00F71A  6E                 	db	110
  7874   00F71B  69                 	db	105
  7875   00F71C  6E                 	db	110
  7876   00F71D  67                 	db	103
  7877   00F71E  20                 	db	32
  7878   00F71F  28                 	db	40
  7879   00F720  66                 	db	102
  7880   00F721  6C                 	db	108
  7881   00F722  61                 	db	97
  7882   00F723  67                 	db	103
  7883   00F724  20                 	db	32
  7884   00F725  62                 	db	98
  7885   00F726  69                 	db	105
  7886   00F727  74                 	db	116
  7887   00F728  32                 	db	50
  7888   00F729  20                 	db	32
  7889   00F72A  69                 	db	105
  7890   00F72B  73                 	db	115
  7891   00F72C  20                 	db	32
  7892   00F72D  50                 	db	80
  7893   00F72E  61                 	db	97
  7894   00F72F  72                 	db	114
  7895   00F730  69                 	db	105
  7896   00F731  74                 	db	116
  7897   00F732  79                 	db	121
  7898   00F733  20                 	db	32
  7899   00F734  61                 	db	97
  7900   00F735  66                 	db	102
  7901   00F736  74                 	db	116
  7902   00F737  65                 	db	101
  7903   00F738  72                 	db	114
  7904   00F739  20                 	db	32
  7905   00F73A  61                 	db	97
  7906   00F73B  72                 	db	114
  7907   00F73C  69                 	db	105
  7908   00F73D  74                 	db	116
  7909   00F73E  68                 	db	104
  7910   00F73F  6D                 	db	109
  7911   00F740  61                 	db	97
  7912   00F741  74                 	db	116
  7913   00F742  69                 	db	105
  7914   00F743  63                 	db	99
  7915   00F744  2C                 	db	44
  7916   00F745  20                 	db	32
  7917   00F746  62                 	db	98
  7918   00F747  69                 	db	105
  7919   00F748  74                 	db	116
  7920   00F749  35                 	db	53
  7921   00F74A  2C                 	db	44
  7922   00F74B  31                 	db	49
  7923   00F74C  20                 	db	32
  7924   00F74D  77                 	db	119
  7925   00F74E  72                 	db	114
  7926   00F74F  69                 	db	105
  7927   00F750  74                 	db	116
  7928   00F751  61                 	db	97
  7929   00F752  62                 	db	98
  7930   00F753  6C                 	db	108
  7931   00F754  65                 	db	101
  7932   00F755  29                 	db	41
  7933   00F756  0D                 	db	13
  7934   00F757  0A                 	db	10
  7935   00F758  0A                 	db	10
  7936   00F759  00                 	db	0
  7937   00F75A  21                 	db	33
  7938   00F75B  88                 	db	136
  7939   00F75C  02                 	db	2
  7940   00F75D  C3                 	db	195
  7941   00F75E  22                 	db	34
  7942   00F75F  03                 	db	3
  7943   00F760  4D                 	db	77
  7944   00F761  59                 	db	89
  7945   00F762  43                 	db	67
  7946   00F763  50                 	db	80
  7947   00F764  55                 	db	85
  7948   00F765  38                 	db	56
  7949   00F766  30                 	db	48
  7950   00F767  20                 	db	32
  7951   00F768  72                 	db	114
  7952   00F769  75                 	db	117
  7953   00F76A  6E                 	db	110
  7954   00F76B  6E                 	db	110
  7955   00F76C  69                 	db	105
  7956   00F76D  6E                 	db	110
  7957   00F76E  67                 	db	103
  7958   00F76F  20                 	db	32
  7959   00F770  28                 	db	40
  7960   00F771  66                 	db	102
  7961   00F772  6C                 	db	108
  7962   00F773  61                 	db	97
  7963   00F774  67                 	db	103
  7964   00F775  20                 	db	32
  7965   00F776  62                 	db	98
  7966   00F777  69                 	db	105
  7967   00F778  74                 	db	116
  7968   00F779  32                 	db	50
  7969   00F77A  20                 	db	32
  7970   00F77B  69                 	db	105
  7971   00F77C  73                 	db	115
  7972   00F77D  20                 	db	32
  7973   00F77E  50                 	db	80
  7974   00F77F  61                 	db	97
  7975   00F780  72                 	db	114
  7976   00F781  69                 	db	105
  7977   00F782  74                 	db	116
  7978   00F783  79                 	db	121
  7979   00F784  20                 	db	32
  7980   00F785  61                 	db	97
  7981   00F786  66                 	db	102
  7982   00F787  74                 	db	116
  7983   00F788  65                 	db	101
  7984   00F789  72                 	db	114
  7985   00F78A  20                 	db	32
  7986   00F78B  61                 	db	97
  7987   00F78C  72                 	db	114
  7988   00F78D  69                 	db	105
  7989   00F78E  74                 	db	116
  7990   00F78F  68                 	db	104
  7991   00F790  6D                 	db	109
  7992   00F791  61                 	db	97
  7993   00F792  74                 	db	116
  7994   00F793  69                 	db	105
  7995   00F794  63                 	db	99
  7996   00F795  2C                 	db	44
  7997   00F796  20                 	db	32
  7998   00F797  62                 	db	98
  7999   00F798  69                 	db	105
  8000   00F799  74                 	db	116
  8001   00F79A  31                 	db	49
  8002   00F79B  2C                 	db	44
  8003   00F79C  35                 	db	53
  8004   00F79D  20                 	db	32
  8005   00F79E  61                 	db	97
  8006   00F79F  6C                 	db	108
  8007   00F7A0  77                 	db	119
  8008   00F7A1  61                 	db	97
  8009   00F7A2  79                 	db	121
  8010   00F7A3  73                 	db	115
  8011   00F7A4  20                 	db	32
  8012   00F7A5  30                 	db	48
  8013   00F7A6  29                 	db	41
  8014   00F7A7  0D                 	db	13
  8015   00F7A8  0A                 	db	10
  8016   00F7A9  0A                 	db	10
  8017   00F7AA  00                 	db	0
  8018   00F7AB  21                 	db	33
  8019   00F7AC  D9                 	db	217
  8020   00F7AD  02                 	db	2
  8021   00F7AE  C3                 	db	195
  8022   00F7AF  22                 	db	34
  8023   00F7B0  03                 	db	3
  8024   00F7B1  5A                 	db	90
  8025   00F7B2  38                 	db	56
  8026   00F7B3  30                 	db	48
  8027   00F7B4  20                 	db	32
  8028   00F7B5  72                 	db	114
  8029   00F7B6  75                 	db	117
  8030   00F7B7  6E                 	db	110
  8031   00F7B8  6E                 	db	110
  8032   00F7B9  69                 	db	105
  8033   00F7BA  6E                 	db	110
  8034   00F7BB  67                 	db	103
  8035   00F7BC  20                 	db	32
  8036   00F7BD  28                 	db	40
  8037   00F7BE  66                 	db	102
  8038   00F7BF  6C                 	db	108
  8039   00F7C0  61                 	db	97
  8040   00F7C1  67                 	db	103
  8041   00F7C2  20                 	db	32
  8042   00F7C3  62                 	db	98
  8043   00F7C4  69                 	db	105
  8044   00F7C5  74                 	db	116
  8045   00F7C6  32                 	db	50
  8046   00F7C7  20                 	db	32
  8047   00F7C8  69                 	db	105
  8048   00F7C9  73                 	db	115
  8049   00F7CA  20                 	db	32
  8050   00F7CB  4F                 	db	79
  8051   00F7CC  76                 	db	118
  8052   00F7CD  65                 	db	101
  8053   00F7CE  72                 	db	114
  8054   00F7CF  66                 	db	102
  8055   00F7D0  6C                 	db	108
  8056   00F7D1  6F                 	db	111
  8057   00F7D2  77                 	db	119
  8058   00F7D3  20                 	db	32
  8059   00F7D4  61                 	db	97
  8060   00F7D5  66                 	db	102
  8061   00F7D6  74                 	db	116
  8062   00F7D7  65                 	db	101
  8063   00F7D8  72                 	db	114
  8064   00F7D9  20                 	db	32
  8065   00F7DA  61                 	db	97
  8066   00F7DB  72                 	db	114
  8067   00F7DC  69                 	db	105
  8068   00F7DD  74                 	db	116
  8069   00F7DE  68                 	db	104
  8070   00F7DF  6D                 	db	109
  8071   00F7E0  61                 	db	97
  8072   00F7E1  74                 	db	116
  8073   00F7E2  69                 	db	105
  8074   00F7E3  63                 	db	99
  8075   00F7E4  2C                 	db	44
  8076   00F7E5  20                 	db	32
  8077   00F7E6  6E                 	db	110
  8078   00F7E7  6F                 	db	111
  8079   00F7E8  20                 	db	32
  8080   00F7E9  4D                 	db	77
  8081   00F7EA  4C                 	db	76
  8082   00F7EB  54                 	db	84
  8083   00F7EC  20                 	db	32
  8084   00F7ED  66                 	db	102
  8085   00F7EE  75                 	db	117
  8086   00F7EF  6E                 	db	110
  8087   00F7F0  63                 	db	99
  8088   00F7F1  74                 	db	116
  8089   00F7F2  69                 	db	105
  8090   00F7F3  6F                 	db	111
  8091   00F7F4  6E                 	db	110
  8092   00F7F5  29                 	db	41
  8093   00F7F6  0D                 	db	13
  8094   00F7F7  0A                 	db	10
  8095   00F7F8  0A                 	db	10
  8096   00F7F9  00                 	db	0
  8097   00F7FA  EB                 	db	235
  8098   00F7FB  21                 	db	33
  8099   00F7FC  80                 	db	128
  8100   00F7FD  00                 	db	0
  8101   00F7FE  CD                 	db	205
  8102   00F7FF  34                 	db	52
  8103   00F800  03                 	db	3
  8104   00F801  EB                 	db	235
  8105   00F802  CD                 	db	205
  8106   00F803  34                 	db	52
  8107   00F804  03                 	db	3
  8108   00F805  DB                 	db	219
  8109   00F806  47                 	db	71
  8110   00F807  DB                 	db	219
  8111   00F808  46                 	db	70
  8112   00F809  C3                 	db	195
  8113   00F80A  00                 	db	0
  8114   00F80B  FA                 	db	250
  8115   00F80C  7E                 	db	126
  8116   00F80D  B7                 	db	183
  8117   00F80E  C8                 	db	200
  8118   00F80F  4F                 	db	79
  8119   00F810  CD                 	db	205
  8120   00F811  3F                 	db	63
  8121   00F812  03                 	db	3
  8122   00F813  23                 	db	35
  8123   00F814  C3                 	db	195
  8124   00F815  34                 	db	52
  8125   00F816  03                 	db	3
  8126   00F817  DB                 	db	219
  8127   00F818  01                 	db	1
  8128   00F819  E6                 	db	230
  8129   00F81A  01                 	db	1
  8130   00F81B  CA                 	db	202
  8131   00F81C  3F                 	db	63
  8132   00F81D  03                 	db	3
  8133   00F81E  79                 	db	121
  8134   00F81F  D3                 	db	211
  8135   00F820  00                 	db	0
  8136   00F821  C9                 	db	201
  8137   00F822                     __end_of_rom:
  8138                           	callstack 0
  8139   000000                     _PORTB	set	1231
  8140   000000                     _CLCSELECT	set	213
  8141   000000                     _LATF	set	1219
  8142   000000                     _LATB	set	1215
  8143   000000                     _LATD	set	1217
  8144   000000                     _TRISF	set	1227
  8145   000000                     _TRISD	set	1225
  8146   000000                     _TRISE1	set	9809
  8147   000000                     _LATE1	set	9745
  8148   000000                     _TRISC5	set	9797
  8149   000000                     _TRISA5	set	9781
  8150   000000                     _LATC5	set	9733
  8151   000000                     _SPI1CON1bits	set	133
  8152   000000                     _SPI1CON0bits	set	132
  8153   000000                     _G3POL	set	1722
  8154   000000                     _U3TXEN	set	5773
  8155   000000                     _IVTLOCKbits	set	1113
  8156   000000                     _WPUC5	set	8333
  8157   000000                     _WPUA5	set	8205
  8158   000000                     _WPUA1	set	8201
  8159   000000                     _WPUA0	set	8200
  8160   000000                     _WPUA7	set	8207
  8161   000000                     _WPUA2	set	8202
  8162   000000                     _WPUC3	set	8331
  8163   000000                     _NCO1EN	set	8759
  8164   000000                     _ANSELE2	set	8450
  8165   000000                     _ANSELE1	set	8449
  8166   000000                     _LATC4	set	9732
  8167   000000                     _TRISC4	set	9796
  8168   000000                     _TRISC2	set	9794
  8169   000000                     _TRISC0	set	9792
  8170   000000                     _TRISC1	set	9793
  8171   000000                     _TRISA1	set	9777
  8172   000000                     _TRISA0	set	9776
  8173   000000                     _TRISA6	set	9782
  8174   000000                     _LATA6	set	9718
  8175   000000                     _TRISA7	set	9783
  8176   000000                     _TRISA2	set	9778
  8177   000000                     _TRISC3	set	9795
  8178   000000                     _TRISC6	set	9798
  8179   000000                     _TRISA4	set	9780
  8180   000000                     _LATA4	set	9716
  8181   000000                     _TRISE2	set	9810
  8182   000000                     _LATE2	set	9746
  8183   000000                     _TRISE0	set	9808
  8184   000000                     _LATE0	set	9744
  8185   000000                     _TRISA3	set	9779
  8186   000000                     _TRISC7	set	9799
  8187   000000                     _LATC7	set	9735
  8188   000000                     _U3RXIF	set	9656
  8189   000000                     _SPI1RXB	set	128
  8190   000000                     _SPI1TXB	set	129
  8191   000000                     _SPI1TCNTL	set	130
  8192   000000                     _SPI1TCNTH	set	131
  8193   000000                     _SPI1CON0	set	132
  8194   000000                     _OSCFRQ	set	177
  8195   000000                     _U3RXB	set	711
  8196   000000                     _U3TXB	set	713
  8197   000000                     _U3TXIF	set	9657
  8198   000000                     _TRISB	set	1223
  8199   000000                     _LATA5	set	9717
  8200   000000                     _RC6	set	9862
  8201   000000                     _U3BRG	set	724
  8202   000000                     _ANSELA	set	1024
  8203   000000                     _U3RXEN	set	5772
  8204   000000                     _PORTF	set	1235
  8205   000000                     _RA0	set	9840
  8206   000000                     _GIE	set	9911
  8207   000000                     _CLCDATA	set	212
  8208   000000                     _CLCnCON	set	214
  8209   000000                     _CLCnPOL	set	215
  8210   000000                     _CLCnSEL0	set	216
  8211   000000                     _RA3PPS	set	516
  8212   000000                     _ANSELB	set	1032
  8213   000000                     _WPUA3	set	8203
  8214   000000                     _WPUB	set	1033
  8215   000000                     _ANSELC	set	1040
  8216   000000                     _SLRCONCbits	set	1043
  8217   000000                     _ANSELD	set	1048
  8218   000000                     _WPUC6	set	8334
  8219   000000                     _WPUD	set	1049
  8220   000000                     _ANSELE0	set	8448
  8221   000000                     _ANSELF	set	1064
  8222   000000                     _ODCE1	set	8465
  8223   000000                     _NCO1INC	set	1091
  8224   000000                     _WPUF	set	1065
  8225   000000                     _NCO1OUT	set	8757
  8226   000000                     _RA6PPS	set	519
  8227   000000                     _U3RXPPS	set	630
  8228   000000                     _RA4PPS	set	517
  8229   000000                     _IVTLOCK	set	1113
  8230   000000                     _U3ON	set	5783
  8231   000000                     _RC0PPS	set	529
  8232   000000                     _CLCIN0PPS	set	609
  8233   000000                     _IVTBASE	set	1117
  8234   000000                     _CLC1IE	set	9461
  8235   000000                     _CLC1IF	set	9589
  8236   000000                     _SPI1SCKPPS	set	618
  8237   000000                     _CLCIN7PPS	set	616
  8238   000000                     _CLCIN6PPS	set	615
  8239   000000                     _CLCIN5PPS	set	614
  8240   000000                     _CLCIN4PPS	set	613
  8241   000000                     _CLCIN3PPS	set	612
  8242   000000                     _CLCIN2PPS	set	611
  8243   000000                     _CLCIN1PPS	set	610
  8244   000000                     _CLCnGLS3	set	223
  8245   000000                     _CLCnGLS2	set	222
  8246   000000                     _CLCnGLS1	set	221
  8247   000000                     _CLCnGLS0	set	220
  8248   000000                     _CLCnSEL3	set	219
  8249   000000                     _CLCnSEL2	set	218
  8250   000000                     _CLCnSEL1	set	217
  8251   000000                     _SPI1RXIF	set	9608
  8252   000000                     _RC1PPS	set	530
  8253   000000                     _SPI1CON2bits	set	134
  8254   000000                     _SPI1TWIDTH	set	136
  8255   000000                     _SPI1CON1	set	133
  8256   000000                     _SPI1SDIPPS	set	619
  8257   000000                     _SPI1BAUD	set	137
  8258   000000                     _SPI1INTE	set	139
  8259   000000                     _SPI1CLK	set	140
  8260   000000                     _BSR	set	1248
  8261   00F822  53                 	db	83	;'S'
  8262   00F823  44                 	db	68	;'D'
  8263   00F824  20                 	db	32
  8264   00F825  43                 	db	67	;'C'
  8265   00F826  61                 	db	97	;'a'
  8266   00F827  72                 	db	114	;'r'
  8267   00F828  64                 	db	100	;'d'
  8268   00F829  3A                 	db	58	;':'
  8269   00F82A  20                 	db	32
  8270   00F82B  72                 	db	114	;'r'
  8271   00F82C  65                 	db	101	;'e'
  8272   00F82D  61                 	db	97	;'a'
  8273   00F82E  64                 	db	100	;'d'
  8274   00F82F  35                 	db	53	;'5'
  8275   00F830  31                 	db	49	;'1'
  8276   00F831  32                 	db	50	;'2'
  8277   00F832  3A                 	db	58	;':'
  8278   00F833  20                 	db	32
  8279   00F834  43                 	db	67	;'C'
  8280   00F835  52                 	db	82	;'R'
  8281   00F836  43                 	db	67	;'C'
  8282   00F837  20                 	db	32
  8283   00F838  65                 	db	101	;'e'
  8284   00F839  72                 	db	114	;'r'
  8285   00F83A  72                 	db	114	;'r'
  8286   00F83B  6F                 	db	111	;'o'
  8287   00F83C  72                 	db	114	;'r'
  8288   00F83D  20                 	db	32
  8289   00F83E  28                 	db	40
  8290   00F83F  25                 	db	37
  8291   00F840  30                 	db	48	;'0'
  8292   00F841  34                 	db	52	;'4'
  8293   00F842  78                 	db	120	;'x'
  8294   00F843  20                 	db	32
  8295   00F844  21                 	db	33
  8296   00F845  3D                 	db	61	;'='
  8297   00F846  20                 	db	32
  8298   00F847  25                 	db	37
  8299   00F848  30                 	db	48	;'0'
  8300   00F849  34                 	db	52	;'4'
  8301   00F84A  78                 	db	120	;'x'
  8302   00F84B  2C                 	db	44
  8303   00F84C  20                 	db	32
  8304   00F84D  72                 	db	114	;'r'
  8305   00F84E  65                 	db	101	;'e'
  8306   00F84F  74                 	db	116	;'t'
  8307   00F850  72                 	db	114	;'r'
  8308   00F851  79                 	db	121	;'y'
  8309   00F852  3D                 	db	61	;'='
  8310   00F853  25                 	db	37
  8311   00F854  64                 	db	100	;'d'
  8312   00F855  29                 	db	41
  8313   00F856  0A                 	db	10
  8314   00F857  0D                 	db	13
  8315   00F858  00                 	db	0
  8316   00F859                     STR_44:
  8317   00F859  49                 	db	73	;'I'
  8318   00F85A  6D                 	db	109	;'m'
  8319   00F85B  61                 	db	97	;'a'
  8320   00F85C  67                 	db	103	;'g'
  8321   00F85D  65                 	db	101	;'e'
  8322   00F85E  20                 	db	32
  8323   00F85F  66                 	db	102	;'f'
  8324   00F860  69                 	db	105	;'i'
  8325   00F861  6C                 	db	108	;'l'
  8326   00F862  65                 	db	101	;'e'
  8327   00F863  20                 	db	32
  8328   00F864  25                 	db	37
  8329   00F865  73                 	db	115	;'s'
  8330   00F866  2F                 	db	47
  8331   00F867  44                 	db	68	;'D'
  8332   00F868  52                 	db	82	;'R'
  8333   00F869  49                 	db	73	;'I'
  8334   00F86A  56                 	db	86	;'V'
  8335   00F86B  45                 	db	69	;'E'
  8336   00F86C  25                 	db	37
  8337   00F86D  63                 	db	99	;'c'
  8338   00F86E  2E                 	db	46
  8339   00F86F  44                 	db	68	;'D'
  8340   00F870  53                 	db	83	;'S'
  8341   00F871  4B                 	db	75	;'K'
  8342   00F872  20                 	db	32
  8343   00F873  69                 	db	105	;'i'
  8344   00F874  73                 	db	115	;'s'
  8345   00F875  20                 	db	32
  8346   00F876  61                 	db	97	;'a'
  8347   00F877  73                 	db	115	;'s'
  8348   00F878  73                 	db	115	;'s'
  8349   00F879  69                 	db	105	;'i'
  8350   00F87A  67                 	db	103	;'g'
  8351   00F87B  6E                 	db	110	;'n'
  8352   00F87C  65                 	db	101	;'e'
  8353   00F87D  64                 	db	100	;'d'
  8354   00F87E  20                 	db	32
  8355   00F87F  74                 	db	116	;'t'
  8356   00F880  6F                 	db	111	;'o'
  8357   00F881  20                 	db	32
  8358   00F882  64                 	db	100	;'d'
  8359   00F883  72                 	db	114	;'r'
  8360   00F884  69                 	db	105	;'i'
  8361   00F885  76                 	db	118	;'v'
  8362   00F886  65                 	db	101	;'e'
  8363   00F887  20                 	db	32
  8364   00F888  25                 	db	37
  8365   00F889  63                 	db	99	;'c'
  8366   00F88A  0A                 	db	10
  8367   00F88B  0D                 	db	13
  8368   00F88C  00                 	db	0
  8369   00F88D  53                 	db	83	;'S'
  8370   00F88E  44                 	db	68	;'D'
  8371   00F88F  20                 	db	32
  8372   00F890  43                 	db	67	;'C'
  8373   00F891  61                 	db	97	;'a'
  8374   00F892  72                 	db	114	;'r'
  8375   00F893  64                 	db	100	;'d'
  8376   00F894  3A                 	db	58	;':'
  8377   00F895  20                 	db	32
  8378   00F896  20                 	db	32
  8379   00F897  72                 	db	114	;'r'
  8380   00F898  65                 	db	101	;'e'
  8381   00F899  61                 	db	97	;'a'
  8382   00F89A  64                 	db	100	;'d'
  8383   00F89B  35                 	db	53	;'5'
  8384   00F89C  31                 	db	49	;'1'
  8385   00F89D  32                 	db	50	;'2'
  8386   00F89E  3A                 	db	58	;':'
  8387   00F89F  20                 	db	32
  8388   00F8A0  61                 	db	97	;'a'
  8389   00F8A1  64                 	db	100	;'d'
  8390   00F8A2  64                 	db	100	;'d'
  8391   00F8A3  72                 	db	114	;'r'
  8392   00F8A4  3D                 	db	61	;'='
  8393   00F8A5  25                 	db	37
  8394   00F8A6  38                 	db	56	;'8'
  8395   00F8A7  6C                 	db	108	;'l'
  8396   00F8A8  64                 	db	100	;'d'
  8397   00F8A9  2C                 	db	44
  8398   00F8AA  20                 	db	32
  8399   00F8AB  6F                 	db	111	;'o'
  8400   00F8AC  66                 	db	102	;'f'
  8401   00F8AD  66                 	db	102	;'f'
  8402   00F8AE  73                 	db	115	;'s'
  8403   00F8AF  3D                 	db	61	;'='
  8404   00F8B0  25                 	db	37
  8405   00F8B1  64                 	db	100	;'d'
  8406   00F8B2  2C                 	db	44
  8407   00F8B3  20                 	db	32
  8408   00F8B4  63                 	db	99	;'c'
  8409   00F8B5  6F                 	db	111	;'o'
  8410   00F8B6  75                 	db	117	;'u'
  8411   00F8B7  6E                 	db	110	;'n'
  8412   00F8B8  74                 	db	116	;'t'
  8413   00F8B9  3D                 	db	61	;'='
  8414   00F8BA  25                 	db	37
  8415   00F8BB  64                 	db	100	;'d'
  8416   00F8BC  0A                 	db	10
  8417   00F8BD  0D                 	db	13
  8418   00F8BE  00                 	db	0
  8419   00F8BF  53                 	db	83	;'S'
  8420   00F8C0  44                 	db	68	;'D'
  8421   00F8C1  20                 	db	32
  8422   00F8C2  43                 	db	67	;'C'
  8423   00F8C3  61                 	db	97	;'a'
  8424   00F8C4  72                 	db	114	;'r'
  8425   00F8C5  64                 	db	100	;'d'
  8426   00F8C6  3A                 	db	58	;':'
  8427   00F8C7  20                 	db	32
  8428   00F8C8  77                 	db	119	;'w'
  8429   00F8C9  72                 	db	114	;'r'
  8430   00F8CA  69                 	db	105	;'i'
  8431   00F8CB  74                 	db	116	;'t'
  8432   00F8CC  65                 	db	101	;'e'
  8433   00F8CD  35                 	db	53	;'5'
  8434   00F8CE  31                 	db	49	;'1'
  8435   00F8CF  32                 	db	50	;'2'
  8436   00F8D0  3A                 	db	58	;':'
  8437   00F8D1  20                 	db	32
  8438   00F8D2  61                 	db	97	;'a'
  8439   00F8D3  64                 	db	100	;'d'
  8440   00F8D4  64                 	db	100	;'d'
  8441   00F8D5  72                 	db	114	;'r'
  8442   00F8D6  3D                 	db	61	;'='
  8443   00F8D7  25                 	db	37
  8444   00F8D8  38                 	db	56	;'8'
  8445   00F8D9  6C                 	db	108	;'l'
  8446   00F8DA  64                 	db	100	;'d'
  8447   00F8DB  2C                 	db	44
  8448   00F8DC  20                 	db	32
  8449   00F8DD  6F                 	db	111	;'o'
  8450   00F8DE  66                 	db	102	;'f'
  8451   00F8DF  66                 	db	102	;'f'
  8452   00F8E0  73                 	db	115	;'s'
  8453   00F8E1  3D                 	db	61	;'='
  8454   00F8E2  25                 	db	37
  8455   00F8E3  64                 	db	100	;'d'
  8456   00F8E4  2C                 	db	44
  8457   00F8E5  20                 	db	32
  8458   00F8E6  63                 	db	99	;'c'
  8459   00F8E7  6F                 	db	111	;'o'
  8460   00F8E8  75                 	db	117	;'u'
  8461   00F8E9  6E                 	db	110	;'n'
  8462   00F8EA  74                 	db	116	;'t'
  8463   00F8EB  3D                 	db	61	;'='
  8464   00F8EC  25                 	db	37
  8465   00F8ED  64                 	db	100	;'d'
  8466   00F8EE  0A                 	db	10
  8467   00F8EF  0D                 	db	13
  8468   00F8F0  00                 	db	0
  8469   00F8F1  53                 	db	83	;'S'
  8470   00F8F2  44                 	db	68	;'D'
  8471   00F8F3  20                 	db	32
  8472   00F8F4  43                 	db	67	;'C'
  8473   00F8F5  61                 	db	97	;'a'
  8474   00F8F6  72                 	db	114	;'r'
  8475   00F8F7  64                 	db	100	;'d'
  8476   00F8F8  3A                 	db	58	;':'
  8477   00F8F9  20                 	db	32
  8478   00F8FA  77                 	db	119	;'w'
  8479   00F8FB  72                 	db	114	;'r'
  8480   00F8FC  69                 	db	105	;'i'
  8481   00F8FD  74                 	db	116	;'t'
  8482   00F8FE  65                 	db	101	;'e'
  8483   00F8FF  35                 	db	53	;'5'
  8484   00F900  31                 	db	49	;'1'
  8485   00F901  32                 	db	50	;'2'
  8486   00F902  3A                 	db	58	;':'
  8487   00F903  20                 	db	32
  8488   00F904  66                 	db	102	;'f'
  8489   00F905  61                 	db	97	;'a'
  8490   00F906  69                 	db	105	;'i'
  8491   00F907  6C                 	db	108	;'l'
  8492   00F908  65                 	db	101	;'e'
  8493   00F909  64                 	db	100	;'d'
  8494   00F90A  20                 	db	32
  8495   00F90B  74                 	db	116	;'t'
  8496   00F90C  6F                 	db	111	;'o'
  8497   00F90D  20                 	db	32
  8498   00F90E  67                 	db	103	;'g'
  8499   00F90F  65                 	db	101	;'e'
  8500   00F910  74                 	db	116	;'t'
  8501   00F911  20                 	db	32
  8502   00F912  74                 	db	116	;'t'
  8503   00F913  6F                 	db	111	;'o'
  8504   00F914  6B                 	db	107	;'k'
  8505   00F915  65                 	db	101	;'e'
  8506   00F916  6E                 	db	110	;'n'
  8507   00F917  2C                 	db	44
  8508   00F918  20                 	db	32
  8509   00F919  74                 	db	116	;'t'
  8510   00F91A  69                 	db	105	;'i'
  8511   00F91B  6D                 	db	109	;'m'
  8512   00F91C  65                 	db	101	;'e'
  8513   00F91D  6F                 	db	111	;'o'
  8514   00F91E  75                 	db	117	;'u'
  8515   00F91F  74                 	db	116	;'t'
  8516   00F920  0A                 	db	10
  8517   00F921  0D                 	db	13
  8518   00F922  00                 	db	0
  8519   00F923  64                 	db	100	;'d'
  8520   00F924  69                 	db	105	;'i'
  8521   00F925  73                 	db	115	;'s'
  8522   00F926  6B                 	db	107	;'k'
  8523   00F927  5F                 	db	95	;'_'
  8524   00F928  69                 	db	105	;'i'
  8525   00F929  6F                 	db	111	;'o'
  8526   00F92A  63                 	db	99	;'c'
  8527   00F92B  74                 	db	116	;'t'
  8528   00F92C  6C                 	db	108	;'l'
  8529   00F92D  3A                 	db	58	;':'
  8530   00F92E  20                 	db	32
  8531   00F92F  70                 	db	112	;'p'
  8532   00F930  64                 	db	100	;'d'
  8533   00F931  72                 	db	114	;'r'
  8534   00F932  76                 	db	118	;'v'
  8535   00F933  3D                 	db	61	;'='
  8536   00F934  25                 	db	37
  8537   00F935  64                 	db	100	;'d'
  8538   00F936  2C                 	db	44
  8539   00F937  20                 	db	32
  8540   00F938  63                 	db	99	;'c'
  8541   00F939  6D                 	db	109	;'m'
  8542   00F93A  64                 	db	100	;'d'
  8543   00F93B  3D                 	db	61	;'='
  8544   00F93C  25                 	db	37
  8545   00F93D  64                 	db	100	;'d'
  8546   00F93E  2C                 	db	44
  8547   00F93F  20                 	db	32
  8548   00F940  62                 	db	98	;'b'
  8549   00F941  75                 	db	117	;'u'
  8550   00F942  66                 	db	102	;'f'
  8551   00F943  66                 	db	102	;'f'
  8552   00F944  3D                 	db	61	;'='
  8553   00F945  30                 	db	48	;'0'
  8554   00F946  78                 	db	120	;'x'
  8555   00F947  25                 	db	37
  8556   00F948  6C                 	db	108	;'l'
  8557   00F949  78                 	db	120	;'x'
  8558   00F94A  3A                 	db	58	;':'
  8559   00F94B  20                 	db	32
  8560   00F94C  72                 	db	114	;'r'
  8561   00F94D  65                 	db	101	;'e'
  8562   00F94E  73                 	db	115	;'s'
  8563   00F94F  3D                 	db	61	;'='
  8564   00F950  25                 	db	37
  8565   00F951  64                 	db	100	;'d'
  8566   00F952  0A                 	db	10
  8567   00F953  0D                 	db	13
  8568   00F954  00                 	db	0
  8569   00F955  53                 	db	83	;'S'
  8570   00F956  44                 	db	68	;'D'
  8571   00F957  20                 	db	32
  8572   00F958  43                 	db	67	;'C'
  8573   00F959  61                 	db	97	;'a'
  8574   00F95A  72                 	db	114	;'r'
  8575   00F95B  64                 	db	100	;'d'
  8576   00F95C  3A                 	db	58	;':'
  8577   00F95D  20                 	db	32
  8578   00F95E  77                 	db	119	;'w'
  8579   00F95F  72                 	db	114	;'r'
  8580   00F960  69                 	db	105	;'i'
  8581   00F961  74                 	db	116	;'t'
  8582   00F962  65                 	db	101	;'e'
  8583   00F963  35                 	db	53	;'5'
  8584   00F964  31                 	db	49	;'1'
  8585   00F965  32                 	db	50	;'2'
  8586   00F966  3A                 	db	58	;':'
  8587   00F967  20                 	db	32
  8588   00F968  74                 	db	116	;'t'
  8589   00F969  69                 	db	105	;'i'
  8590   00F96A  6D                 	db	109	;'m'
  8591   00F96B  65                 	db	101	;'e'
  8592   00F96C  6F                 	db	111	;'o'
  8593   00F96D  75                 	db	117	;'u'
  8594   00F96E  74                 	db	116	;'t'
  8595   00F96F  2C                 	db	44
  8596   00F970  20                 	db	32
  8597   00F971  72                 	db	114	;'r'
  8598   00F972  65                 	db	101	;'e'
  8599   00F973  73                 	db	115	;'s'
  8600   00F974  70                 	db	112	;'p'
  8601   00F975  6F                 	db	111	;'o'
  8602   00F976  6E                 	db	110	;'n'
  8603   00F977  73                 	db	115	;'s'
  8604   00F978  65                 	db	101	;'e'
  8605   00F979  20                 	db	32
  8606   00F97A  69                 	db	105	;'i'
  8607   00F97B  73                 	db	115	;'s'
  8608   00F97C  20                 	db	32
  8609   00F97D  25                 	db	37
  8610   00F97E  30                 	db	48	;'0'
  8611   00F97F  32                 	db	50	;'2'
  8612   00F980  78                 	db	120	;'x'
  8613   00F981  0A                 	db	10
  8614   00F982  0D                 	db	13
  8615   00F983  00                 	db	0
  8616   00F984  53                 	db	83	;'S'
  8617   00F985  44                 	db	68	;'D'
  8618   00F986  20                 	db	32
  8619   00F987  43                 	db	67	;'C'
  8620   00F988  61                 	db	97	;'a'
  8621   00F989  72                 	db	114	;'r'
  8622   00F98A  64                 	db	100	;'d'
  8623   00F98B  3A                 	db	58	;':'
  8624   00F98C  20                 	db	32
  8625   00F98D  43                 	db	67	;'C'
  8626   00F98E  4D                 	db	77	;'M'
  8627   00F98F  44                 	db	68	;'D'
  8628   00F990  35                 	db	53	;'5'
  8629   00F991  38                 	db	56	;'8'
  8630   00F992  2C                 	db	44
  8631   00F993  20                 	db	32
  8632   00F994  52                 	db	82	;'R'
  8633   00F995  33                 	db	51	;'3'
  8634   00F996  3D                 	db	61	;'='
  8635   00F997  25                 	db	37
  8636   00F998  30                 	db	48	;'0'
  8637   00F999  32                 	db	50	;'2'
  8638   00F99A  78                 	db	120	;'x'
  8639   00F99B  20                 	db	32
  8640   00F99C  25                 	db	37
  8641   00F99D  30                 	db	48	;'0'
  8642   00F99E  32                 	db	50	;'2'
  8643   00F99F  78                 	db	120	;'x'
  8644   00F9A0  20                 	db	32
  8645   00F9A1  25                 	db	37
  8646   00F9A2  30                 	db	48	;'0'
  8647   00F9A3  32                 	db	50	;'2'
  8648   00F9A4  78                 	db	120	;'x'
  8649   00F9A5  20                 	db	32
  8650   00F9A6  25                 	db	37
  8651   00F9A7  30                 	db	48	;'0'
  8652   00F9A8  32                 	db	50	;'2'
  8653   00F9A9  78                 	db	120	;'x'
  8654   00F9AA  20                 	db	32
  8655   00F9AB  25                 	db	37
  8656   00F9AC  30                 	db	48	;'0'
  8657   00F9AD  32                 	db	50	;'2'
  8658   00F9AE  78                 	db	120	;'x'
  8659   00F9AF  0A                 	db	10
  8660   00F9B0  0D                 	db	13
  8661   00F9B1  00                 	db	0
  8662   00F9B2                     STR_59:
  8663   00F9B2  25                 	db	37
  8664   00F9B3  73                 	db	115	;'s'
  8665   00F9B4  3A                 	db	58	;':'
  8666   00F9B5  20                 	db	32
  8667   00F9B6  45                 	db	69	;'E'
  8668   00F9B7  52                 	db	82	;'R'
  8669   00F9B8  52                 	db	82	;'R'
  8670   00F9B9  4F                 	db	79	;'O'
  8671   00F9BA  52                 	db	82	;'R'
  8672   00F9BB  3A                 	db	58	;':'
  8673   00F9BC  20                 	db	32
  8674   00F9BD  63                 	db	99	;'c'
  8675   00F9BE  6C                 	db	108	;'l'
  8676   00F9BF  6F                 	db	111	;'o'
  8677   00F9C0  63                 	db	99	;'c'
  8678   00F9C1  6B                 	db	107	;'k'
  8679   00F9C2  20                 	db	32
  8680   00F9C3  73                 	db	115	;'s'
  8681   00F9C4  70                 	db	112	;'p'
  8682   00F9C5  65                 	db	101	;'e'
  8683   00F9C6  65                 	db	101	;'e'
  8684   00F9C7  64                 	db	100	;'d'
  8685   00F9C8  20                 	db	32
  8686   00F9C9  25                 	db	37
  8687   00F9CA  64                 	db	100	;'d'
  8688   00F9CB  20                 	db	32
  8689   00F9CC  69                 	db	105	;'i'
  8690   00F9CD  73                 	db	115	;'s'
  8691   00F9CE  20                 	db	32
  8692   00F9CF  6E                 	db	110	;'n'
  8693   00F9D0  6F                 	db	111	;'o'
  8694   00F9D1  74                 	db	116	;'t'
  8695   00F9D2  20                 	db	32
  8696   00F9D3  73                 	db	115	;'s'
  8697   00F9D4  75                 	db	117	;'u'
  8698   00F9D5  70                 	db	112	;'p'
  8699   00F9D6  70                 	db	112	;'p'
  8700   00F9D7  6F                 	db	111	;'o'
  8701   00F9D8  72                 	db	114	;'r'
  8702   00F9D9  74                 	db	116	;'t'
  8703   00F9DA  65                 	db	101	;'e'
  8704   00F9DB  64                 	db	100	;'d'
  8705   00F9DC  0A                 	db	10
  8706   00F9DD  0D                 	db	13
  8707   00F9DE  00                 	db	0
  8708   00F9DF  53                 	db	83	;'S'
  8709   00F9E0  44                 	db	68	;'D'
  8710   00F9E1  20                 	db	32
  8711   00F9E2  43                 	db	67	;'C'
  8712   00F9E3  61                 	db	97	;'a'
  8713   00F9E4  72                 	db	114	;'r'
  8714   00F9E5  64                 	db	100	;'d'
  8715   00F9E6  3A                 	db	58	;':'
  8716   00F9E7  20                 	db	32
  8717   00F9E8  43                 	db	67	;'C'
  8718   00F9E9  4D                 	db	77	;'M'
  8719   00F9EA  44                 	db	68	;'D'
  8720   00F9EB  38                 	db	56	;'8'
  8721   00F9EC  2C                 	db	44
  8722   00F9ED  20                 	db	32
  8723   00F9EE  52                 	db	82	;'R'
  8724   00F9EF  37                 	db	55	;'7'
  8725   00F9F0  3D                 	db	61	;'='
  8726   00F9F1  25                 	db	37
  8727   00F9F2  30                 	db	48	;'0'
  8728   00F9F3  32                 	db	50	;'2'
  8729   00F9F4  78                 	db	120	;'x'
  8730   00F9F5  20                 	db	32
  8731   00F9F6  25                 	db	37
  8732   00F9F7  30                 	db	48	;'0'
  8733   00F9F8  32                 	db	50	;'2'
  8734   00F9F9  78                 	db	120	;'x'
  8735   00F9FA  20                 	db	32
  8736   00F9FB  25                 	db	37
  8737   00F9FC  30                 	db	48	;'0'
  8738   00F9FD  32                 	db	50	;'2'
  8739   00F9FE  78                 	db	120	;'x'
  8740   00F9FF  20                 	db	32
  8741   00FA00  25                 	db	37
  8742   00FA01  30                 	db	48	;'0'
  8743   00FA02  32                 	db	50	;'2'
  8744   00FA03  78                 	db	120	;'x'
  8745   00FA04  20                 	db	32
  8746   00FA05  25                 	db	37
  8747   00FA06  30                 	db	48	;'0'
  8748   00FA07  32                 	db	50	;'2'
  8749   00FA08  78                 	db	120	;'x'
  8750   00FA09  0A                 	db	10
  8751   00FA0A  0D                 	db	13
  8752   00FA0B  00                 	db	0
  8753   00FA0C                     STR_17:
  8754   00FA0C  64                 	db	100	;'d'
  8755   00FA0D  69                 	db	105	;'i'
  8756   00FA0E  73                 	db	115	;'s'
  8757   00FA0F  6B                 	db	107	;'k'
  8758   00FA10  5F                 	db	95	;'_'
  8759   00FA11  69                 	db	105	;'i'
  8760   00FA12  6F                 	db	111	;'o'
  8761   00FA13  63                 	db	99	;'c'
  8762   00FA14  74                 	db	116	;'t'
  8763   00FA15  6C                 	db	108	;'l'
  8764   00FA16  3A                 	db	58	;':'
  8765   00FA17  20                 	db	32
  8766   00FA18  70                 	db	112	;'p'
  8767   00FA19  64                 	db	100	;'d'
  8768   00FA1A  72                 	db	114	;'r'
  8769   00FA1B  76                 	db	118	;'v'
  8770   00FA1C  3D                 	db	61	;'='
  8771   00FA1D  25                 	db	37
  8772   00FA1E  64                 	db	100	;'d'
  8773   00FA1F  2C                 	db	44
  8774   00FA20  20                 	db	32
  8775   00FA21  63                 	db	99	;'c'
  8776   00FA22  6D                 	db	109	;'m'
  8777   00FA23  64                 	db	100	;'d'
  8778   00FA24  3D                 	db	61	;'='
  8779   00FA25  25                 	db	37
  8780   00FA26  64                 	db	100	;'d'
  8781   00FA27  3A                 	db	58	;':'
  8782   00FA28  20                 	db	32
  8783   00FA29  4E                 	db	78	;'N'
  8784   00FA2A  6F                 	db	111	;'o'
  8785   00FA2B  74                 	db	116	;'t'
  8786   00FA2C  20                 	db	32
  8787   00FA2D  68                 	db	104	;'h'
  8788   00FA2E  61                 	db	97	;'a'
  8789   00FA2F  6E                 	db	110	;'n'
  8790   00FA30  64                 	db	100	;'d'
  8791   00FA31  6C                 	db	108	;'l'
  8792   00FA32  65                 	db	101	;'e'
  8793   00FA33  64                 	db	100	;'d'
  8794   00FA34  2E                 	db	46
  8795   00FA35  0A                 	db	10
  8796   00FA36  0D                 	db	13
  8797   00FA37  00                 	db	0
  8798   00FA38  64                 	db	100	;'d'
  8799   00FA39  69                 	db	105	;'i'
  8800   00FA3A  73                 	db	115	;'s'
  8801   00FA3B  6B                 	db	107	;'k'
  8802   00FA3C  5F                 	db	95	;'_'
  8803   00FA3D  72                 	db	114	;'r'
  8804   00FA3E  65                 	db	101	;'e'
  8805   00FA3F  61                 	db	97	;'a'
  8806   00FA40  64                 	db	100	;'d'
  8807   00FA41  3A                 	db	58	;':'
  8808   00FA42  20                 	db	32
  8809   00FA43  20                 	db	32
  8810   00FA44  70                 	db	112	;'p'
  8811   00FA45  64                 	db	100	;'d'
  8812   00FA46  72                 	db	114	;'r'
  8813   00FA47  76                 	db	118	;'v'
  8814   00FA48  3D                 	db	61	;'='
  8815   00FA49  25                 	db	37
  8816   00FA4A  64                 	db	100	;'d'
  8817   00FA4B  2C                 	db	44
  8818   00FA4C  20                 	db	32
  8819   00FA4D  73                 	db	115	;'s'
  8820   00FA4E  65                 	db	101	;'e'
  8821   00FA4F  63                 	db	99	;'c'
  8822   00FA50  74                 	db	116	;'t'
  8823   00FA51  6F                 	db	111	;'o'
  8824   00FA52  72                 	db	114	;'r'
  8825   00FA53  3D                 	db	61	;'='
  8826   00FA54  25                 	db	37
  8827   00FA55  6C                 	db	108	;'l'
  8828   00FA56  64                 	db	100	;'d'
  8829   00FA57  2C                 	db	44
  8830   00FA58  20                 	db	32
  8831   00FA59  63                 	db	99	;'c'
  8832   00FA5A  6F                 	db	111	;'o'
  8833   00FA5B  75                 	db	117	;'u'
  8834   00FA5C  6E                 	db	110	;'n'
  8835   00FA5D  74                 	db	116	;'t'
  8836   00FA5E  3D                 	db	61	;'='
  8837   00FA5F  25                 	db	37
  8838   00FA60  64                 	db	100	;'d'
  8839   00FA61  0A                 	db	10
  8840   00FA62  0D                 	db	13
  8841   00FA63  00                 	db	0
  8842   00FA64  64                 	db	100	;'d'
  8843   00FA65  69                 	db	105	;'i'
  8844   00FA66  73                 	db	115	;'s'
  8845   00FA67  6B                 	db	107	;'k'
  8846   00FA68  5F                 	db	95	;'_'
  8847   00FA69  77                 	db	119	;'w'
  8848   00FA6A  72                 	db	114	;'r'
  8849   00FA6B  69                 	db	105	;'i'
  8850   00FA6C  74                 	db	116	;'t'
  8851   00FA6D  65                 	db	101	;'e'
  8852   00FA6E  3A                 	db	58	;':'
  8853   00FA6F  20                 	db	32
  8854   00FA70  70                 	db	112	;'p'
  8855   00FA71  64                 	db	100	;'d'
  8856   00FA72  72                 	db	114	;'r'
  8857   00FA73  76                 	db	118	;'v'
  8858   00FA74  3D                 	db	61	;'='
  8859   00FA75  25                 	db	37
  8860   00FA76  64                 	db	100	;'d'
  8861   00FA77  2C                 	db	44
  8862   00FA78  20                 	db	32
  8863   00FA79  73                 	db	115	;'s'
  8864   00FA7A  65                 	db	101	;'e'
  8865   00FA7B  63                 	db	99	;'c'
  8866   00FA7C  74                 	db	116	;'t'
  8867   00FA7D  6F                 	db	111	;'o'
  8868   00FA7E  72                 	db	114	;'r'
  8869   00FA7F  3D                 	db	61	;'='
  8870   00FA80  25                 	db	37
  8871   00FA81  6C                 	db	108	;'l'
  8872   00FA82  64                 	db	100	;'d'
  8873   00FA83  2C                 	db	44
  8874   00FA84  20                 	db	32
  8875   00FA85  63                 	db	99	;'c'
  8876   00FA86  6F                 	db	111	;'o'
  8877   00FA87  75                 	db	117	;'u'
  8878   00FA88  6E                 	db	110	;'n'
  8879   00FA89  74                 	db	116	;'t'
  8880   00FA8A  3D                 	db	61	;'='
  8881   00FA8B  25                 	db	37
  8882   00FA8C  64                 	db	100	;'d'
  8883   00FA8D  0A                 	db	10
  8884   00FA8E  0D                 	db	13
  8885   00FA8F  00                 	db	0
  8886   00FA90  53                 	db	83	;'S'
  8887   00FA91  44                 	db	68	;'D'
  8888   00FA92  20                 	db	32
  8889   00FA93  43                 	db	67	;'C'
  8890   00FA94  61                 	db	97	;'a'
  8891   00FA95  72                 	db	114	;'r'
  8892   00FA96  64                 	db	100	;'d'
  8893   00FA97  3A                 	db	58	;':'
  8894   00FA98  20                 	db	32
  8895   00FA99  43                 	db	67	;'C'
  8896   00FA9A  43                 	db	67	;'C'
  8897   00FA9B  53                 	db	83	;'S'
  8898   00FA9C  20                 	db	32
  8899   00FA9D  28                 	db	40
  8900   00FA9E  43                 	db	67	;'C'
  8901   00FA9F  61                 	db	97	;'a'
  8902   00FAA0  72                 	db	114	;'r'
  8903   00FAA1  64                 	db	100	;'d'
  8904   00FAA2  20                 	db	32
  8905   00FAA3  43                 	db	67	;'C'
  8906   00FAA4  61                 	db	97	;'a'
  8907   00FAA5  70                 	db	112	;'p'
  8908   00FAA6  61                 	db	97	;'a'
  8909   00FAA7  63                 	db	99	;'c'
  8910   00FAA8  69                 	db	105	;'i'
  8911   00FAA9  74                 	db	116	;'t'
  8912   00FAAA  79                 	db	121	;'y'
  8913   00FAAB  20                 	db	32
  8914   00FAAC  53                 	db	83	;'S'
  8915   00FAAD  74                 	db	116	;'t'
  8916   00FAAE  61                 	db	97	;'a'
  8917   00FAAF  74                 	db	116	;'t'
  8918   00FAB0  75                 	db	117	;'u'
  8919   00FAB1  73                 	db	115	;'s'
  8920   00FAB2  29                 	db	41
  8921   00FAB3  20                 	db	32
  8922   00FAB4  69                 	db	105	;'i'
  8923   00FAB5  73                 	db	115	;'s'
  8924   00FAB6  20                 	db	32
  8925   00FAB7  30                 	db	48	;'0'
  8926   00FAB8  0A                 	db	10
  8927   00FAB9  0D                 	db	13
  8928   00FABA  00                 	db	0
  8929   00FABB  53                 	db	83	;'S'
  8930   00FABC  44                 	db	68	;'D'
  8931   00FABD  20                 	db	32
  8932   00FABE  43                 	db	67	;'C'
  8933   00FABF  61                 	db	97	;'a'
  8934   00FAC0  72                 	db	114	;'r'
  8935   00FAC1  64                 	db	100	;'d'
  8936   00FAC2  3A                 	db	58	;':'
  8937   00FAC3  20                 	db	32
  8938   00FAC4  77                 	db	119	;'w'
  8939   00FAC5  72                 	db	114	;'r'
  8940   00FAC6  69                 	db	105	;'i'
  8941   00FAC7  74                 	db	116	;'t'
  8942   00FAC8  65                 	db	101	;'e'
  8943   00FAC9  35                 	db	53	;'5'
  8944   00FACA  31                 	db	49	;'1'
  8945   00FACB  32                 	db	50	;'2'
  8946   00FACC  3A                 	db	58	;':'
  8947   00FACD  20                 	db	32
  8948   00FACE  43                 	db	67	;'C'
  8949   00FACF  52                 	db	82	;'R'
  8950   00FAD0  43                 	db	67	;'C'
  8951   00FAD1  20                 	db	32
  8952   00FAD2  65                 	db	101	;'e'
  8953   00FAD3  72                 	db	114	;'r'
  8954   00FAD4  72                 	db	114	;'r'
  8955   00FAD5  6F                 	db	111	;'o'
  8956   00FAD6  72                 	db	114	;'r'
  8957   00FAD7  20                 	db	32
  8958   00FAD8  28                 	db	40
  8959   00FAD9  72                 	db	114	;'r'
  8960   00FADA  65                 	db	101	;'e'
  8961   00FADB  74                 	db	116	;'t'
  8962   00FADC  72                 	db	114	;'r'
  8963   00FADD  79                 	db	121	;'y'
  8964   00FADE  3D                 	db	61	;'='
  8965   00FADF  25                 	db	37
  8966   00FAE0  64                 	db	100	;'d'
  8967   00FAE1  29                 	db	41
  8968   00FAE2  0A                 	db	10
  8969   00FAE3  0D                 	db	13
  8970   00FAE4  00                 	db	0
  8971   00FAE5  53                 	db	83	;'S'
  8972   00FAE6  44                 	db	68	;'D'
  8973   00FAE7  20                 	db	32
  8974   00FAE8  43                 	db	67	;'C'
  8975   00FAE9  61                 	db	97	;'a'
  8976   00FAEA  72                 	db	114	;'r'
  8977   00FAEB  64                 	db	100	;'d'
  8978   00FAEC  3A                 	db	58	;':'
  8979   00FAED  20                 	db	32
  8980   00FAEE  43                 	db	67	;'C'
  8981   00FAEF  61                 	db	97	;'a'
  8982   00FAF0  72                 	db	114	;'r'
  8983   00FAF1  64                 	db	100	;'d'
  8984   00FAF2  20                 	db	32
  8985   00FAF3  70                 	db	112	;'p'
  8986   00FAF4  6F                 	db	111	;'o'
  8987   00FAF5  77                 	db	119	;'w'
  8988   00FAF6  65                 	db	101	;'e'
  8989   00FAF7  72                 	db	114	;'r'
  8990   00FAF8  20                 	db	32
  8991   00FAF9  75                 	db	117	;'u'
  8992   00FAFA  70                 	db	112	;'p'
  8993   00FAFB  20                 	db	32
  8994   00FAFC  73                 	db	115	;'s'
  8995   00FAFD  74                 	db	116	;'t'
  8996   00FAFE  61                 	db	97	;'a'
  8997   00FAFF  74                 	db	116	;'t'
  8998   00FB00  75                 	db	117	;'u'
  8999   00FB01  73                 	db	115	;'s'
  9000   00FB02  20                 	db	32
  9001   00FB03  62                 	db	98	;'b'
  9002   00FB04  69                 	db	105	;'i'
  9003   00FB05  73                 	db	115	;'s'
  9004   00FB06  20                 	db	32
  9005   00FB07  69                 	db	105	;'i'
  9006   00FB08  73                 	db	115	;'s'
  9007   00FB09  20                 	db	32
  9008   00FB0A  30                 	db	48	;'0'
  9009   00FB0B  0A                 	db	10
  9010   00FB0C  0D                 	db	13
  9011   00FB0D  00                 	db	0
  9012   00FB0E                     STR_86:
  9013   00FB0E  55                 	db	85	;'U'
  9014   00FB0F  73                 	db	115	;'s'
  9015   00FB10  65                 	db	101	;'e'
  9016   00FB11  20                 	db	32
  9017   00FB12  4E                 	db	78	;'N'
  9018   00FB13  43                 	db	67	;'C'
  9019   00FB14  4F                 	db	79	;'O'
  9020   00FB15  31                 	db	49	;'1'
  9021   00FB16  2D                 	db	45
  9022   00FB17  3E                 	db	62	;'>'
  9023   00FB18  52                 	db	82	;'R'
  9024   00FB19  41                 	db	65	;'A'
  9025   00FB1A  33                 	db	51	;'3'
  9026   00FB1B  20                 	db	32
  9027   00FB1C  25                 	db	37
  9028   00FB1D  2E                 	db	46
  9029   00FB1E  32                 	db	50	;'2'
  9030   00FB1F  66                 	db	102	;'f'
  9031   00FB20  20                 	db	32
  9032   00FB21  4D                 	db	77	;'M'
  9033   00FB22  48                 	db	72	;'H'
  9034   00FB23  7A                 	db	122	;'z'
  9035   00FB24  20                 	db	32
  9036   00FB25  66                 	db	102	;'f'
  9037   00FB26  6F                 	db	111	;'o'
  9038   00FB27  72                 	db	114	;'r'
  9039   00FB28  20                 	db	32
  9040   00FB29  38                 	db	56	;'8'
  9041   00FB2A  30                 	db	48	;'0'
  9042   00FB2B  38                 	db	56	;'8'
  9043   00FB2C  35                 	db	53	;'5'
  9044   00FB2D  20                 	db	32
  9045   00FB2E  63                 	db	99	;'c'
  9046   00FB2F  6C                 	db	108	;'l'
  9047   00FB30  6F                 	db	111	;'o'
  9048   00FB31  63                 	db	99	;'c'
  9049   00FB32  6B                 	db	107	;'k'
  9050   00FB33  0A                 	db	10
  9051   00FB34  0D                 	db	13
  9052   00FB35  00                 	db	0
  9053   00FB36  72                 	db	114	;'r'
  9054   00FB37  65                 	db	101	;'e'
  9055   00FB38  61                 	db	97	;'a'
  9056   00FB39  64                 	db	100	;'d'
  9057   00FB3A  20                 	db	32
  9058   00FB3B  4D                 	db	77	;'M'
  9059   00FB3C  42                 	db	66	;'B'
  9060   00FB3D  52                 	db	82	;'R'
  9061   00FB3E  20                 	db	32
  9062   00FB3F  70                 	db	112	;'p'
  9063   00FB40  61                 	db	97	;'a'
  9064   00FB41  72                 	db	114	;'r'
  9065   00FB42  74                 	db	116	;'t'
  9066   00FB43  69                 	db	105	;'i'
  9067   00FB44  74                 	db	116	;'t'
  9068   00FB45  69                 	db	105	;'i'
  9069   00FB46  6F                 	db	111	;'o'
  9070   00FB47  6E                 	db	110	;'n'
  9071   00FB48  20                 	db	32
  9072   00FB49  74                 	db	116	;'t'
  9073   00FB4A  61                 	db	97	;'a'
  9074   00FB4B  62                 	db	98	;'b'
  9075   00FB4C  6C                 	db	108	;'l'
  9076   00FB4D  65                 	db	101	;'e'
  9077   00FB4E  20                 	db	32
  9078   00FB4F  61                 	db	97	;'a'
  9079   00FB50  74                 	db	116	;'t'
  9080   00FB51  20                 	db	32
  9081   00FB52  73                 	db	115	;'s'
  9082   00FB53  65                 	db	101	;'e'
  9083   00FB54  63                 	db	99	;'c'
  9084   00FB55  74                 	db	116	;'t'
  9085   00FB56  6F                 	db	111	;'o'
  9086   00FB57  72                 	db	114	;'r'
  9087   00FB58  20                 	db	32
  9088   00FB59  30                 	db	48	;'0'
  9089   00FB5A  0A                 	db	10
  9090   00FB5B  0D                 	db	13
  9091   00FB5C  00                 	db	0
  9092   00FB5D  53                 	db	83	;'S'
  9093   00FB5E  44                 	db	68	;'D'
  9094   00FB5F  20                 	db	32
  9095   00FB60  43                 	db	67	;'C'
  9096   00FB61  61                 	db	97	;'a'
  9097   00FB62  72                 	db	114	;'r'
  9098   00FB63  64                 	db	100	;'d'
  9099   00FB64  3A                 	db	58	;':'
  9100   00FB65  20                 	db	32
  9101   00FB66  53                 	db	83	;'S'
  9102   00FB67  44                 	db	68	;'D'
  9103   00FB68  48                 	db	72	;'H'
  9104   00FB69  43                 	db	67	;'C'
  9105   00FB6A  20                 	db	32
  9106   00FB6B  6F                 	db	111	;'o'
  9107   00FB6C  72                 	db	114	;'r'
  9108   00FB6D  20                 	db	32
  9109   00FB6E  53                 	db	83	;'S'
  9110   00FB6F  44                 	db	68	;'D'
  9111   00FB70  58                 	db	88	;'X'
  9112   00FB71  43                 	db	67	;'C'
  9113   00FB72  20                 	db	32
  9114   00FB73  63                 	db	99	;'c'
  9115   00FB74  61                 	db	97	;'a'
  9116   00FB75  72                 	db	114	;'r'
  9117   00FB76  64                 	db	100	;'d'
  9118   00FB77  20                 	db	32
  9119   00FB78  64                 	db	100	;'d'
  9120   00FB79  65                 	db	101	;'e'
  9121   00FB7A  74                 	db	116	;'t'
  9122   00FB7B  65                 	db	101	;'e'
  9123   00FB7C  63                 	db	99	;'c'
  9124   00FB7D  74                 	db	116	;'t'
  9125   00FB7E  65                 	db	101	;'e'
  9126   00FB7F  64                 	db	100	;'d'
  9127   00FB80  0A                 	db	10
  9128   00FB81  0D                 	db	13
  9129   00FB82  00                 	db	0
  9130   00FB83                     STR_57:
  9131   00FB83  25                 	db	37
  9132   00FB84  73                 	db	115	;'s'
  9133   00FB85  3A                 	db	58	;':'
  9134   00FB86  20                 	db	32
  9135   00FB87  45                 	db	69	;'E'
  9136   00FB88  52                 	db	82	;'R'
  9137   00FB89  52                 	db	82	;'R'
  9138   00FB8A  4F                 	db	79	;'O'
  9139   00FB8B  52                 	db	82	;'R'
  9140   00FB8C  3A                 	db	58	;':'
  9141   00FB8D  20                 	db	32
  9142   00FB8E  6D                 	db	109	;'m'
  9143   00FB8F  6F                 	db	111	;'o'
  9144   00FB90  64                 	db	100	;'d'
  9145   00FB91  65                 	db	101	;'e'
  9146   00FB92  20                 	db	32
  9147   00FB93  25                 	db	37
  9148   00FB94  64                 	db	100	;'d'
  9149   00FB95  20                 	db	32
  9150   00FB96  69                 	db	105	;'i'
  9151   00FB97  73                 	db	115	;'s'
  9152   00FB98  20                 	db	32
  9153   00FB99  6E                 	db	110	;'n'
  9154   00FB9A  6F                 	db	111	;'o'
  9155   00FB9B  74                 	db	116	;'t'
  9156   00FB9C  20                 	db	32
  9157   00FB9D  73                 	db	115	;'s'
  9158   00FB9E  75                 	db	117	;'u'
  9159   00FB9F  70                 	db	112	;'p'
  9160   00FBA0  70                 	db	112	;'p'
  9161   00FBA1  6F                 	db	111	;'o'
  9162   00FBA2  72                 	db	114	;'r'
  9163   00FBA3  74                 	db	116	;'t'
  9164   00FBA4  65                 	db	101	;'e'
  9165   00FBA5  64                 	db	100	;'d'
  9166   00FBA6  0A                 	db	10
  9167   00FBA7  0D                 	db	13
  9168   00FBA8  00                 	db	0
  9169   00FBA9                     STR_90:
  9170   00FBA9  57                 	db	87	;'W'
  9171   00FBAA  41                 	db	65	;'A'
  9172   00FBAB  52                 	db	82	;'R'
  9173   00FBAC  4E                 	db	78	;'N'
  9174   00FBAD  49                 	db	73	;'I'
  9175   00FBAE  4E                 	db	78	;'N'
  9176   00FBAF  47                 	db	71	;'G'
  9177   00FBB0  3A                 	db	58	;':'
  9178   00FBB1  20                 	db	32
  9179   00FBB2  75                 	db	117	;'u'
  9180   00FBB3  6E                 	db	110	;'n'
  9181   00FBB4  6B                 	db	107	;'k'
  9182   00FBB5  6E                 	db	110	;'n'
  9183   00FBB6  6F                 	db	111	;'o'
  9184   00FBB7  77                 	db	119	;'w'
  9185   00FBB8  6E                 	db	110	;'n'
  9186   00FBB9  20                 	db	32
  9187   00FBBA  49                 	db	73	;'I'
  9188   00FBBB  2F                 	db	47
  9189   00FBBC  4F                 	db	79	;'O'
  9190   00FBBD  20                 	db	32
  9191   00FBBE  72                 	db	114	;'r'
  9192   00FBBF  65                 	db	101	;'e'
  9193   00FBC0  61                 	db	97	;'a'
  9194   00FBC1  64                 	db	100	;'d'
  9195   00FBC2  20                 	db	32
  9196   00FBC3  28                 	db	40
  9197   00FBC4  25                 	db	37
  9198   00FBC5  30                 	db	48	;'0'
  9199   00FBC6  32                 	db	50	;'2'
  9200   00FBC7  58                 	db	88	;'X'
  9201   00FBC8  48                 	db	72	;'H'
  9202   00FBC9  29                 	db	41
  9203   00FBCA  0A                 	db	10
  9204   00FBCB  0D                 	db	13
  9205   00FBCC  00                 	db	0
  9206   00FBCD  53                 	db	83	;'S'
  9207   00FBCE  44                 	db	68	;'D'
  9208   00FBCF  20                 	db	32
  9209   00FBD0  43                 	db	67	;'C'
  9210   00FBD1  61                 	db	97	;'a'
  9211   00FBD2  72                 	db	114	;'r'
  9212   00FBD3  64                 	db	100	;'d'
  9213   00FBD4  3A                 	db	58	;':'
  9214   00FBD5  20                 	db	32
  9215   00FBD6  69                 	db	105	;'i'
  9216   00FBD7  6E                 	db	110	;'n'
  9217   00FBD8  69                 	db	105	;'i'
  9218   00FBD9  74                 	db	116	;'t'
  9219   00FBDA  69                 	db	105	;'i'
  9220   00FBDB  61                 	db	97	;'a'
  9221   00FBDC  6C                 	db	108	;'l'
  9222   00FBDD  69                 	db	105	;'i'
  9223   00FBDE  7A                 	db	122	;'z'
  9224   00FBDF  65                 	db	101	;'e'
  9225   00FBE0  20                 	db	32
  9226   00FBE1  2E                 	db	46
  9227   00FBE2  2E                 	db	46
  9228   00FBE3  2E                 	db	46
  9229   00FBE4  20                 	db	32
  9230   00FBE5  73                 	db	115	;'s'
  9231   00FBE6  75                 	db	117	;'u'
  9232   00FBE7  63                 	db	99	;'c'
  9233   00FBE8  63                 	db	99	;'c'
  9234   00FBE9  65                 	db	101	;'e'
  9235   00FBEA  65                 	db	101	;'e'
  9236   00FBEB  64                 	db	100	;'d'
  9237   00FBEC  65                 	db	101	;'e'
  9238   00FBED  64                 	db	100	;'d'
  9239   00FBEE  0A                 	db	10
  9240   00FBEF  0D                 	db	13
  9241   00FBF0  00                 	db	0
  9242   00FBF1  53                 	db	83	;'S'
  9243   00FBF2  44                 	db	68	;'D'
  9244   00FBF3  20                 	db	32
  9245   00FBF4  43                 	db	67	;'C'
  9246   00FBF5  61                 	db	97	;'a'
  9247   00FBF6  72                 	db	114	;'r'
  9248   00FBF7  64                 	db	100	;'d'
  9249   00FBF8  3A                 	db	58	;':'
  9250   00FBF9  20                 	db	32
  9251   00FBFA  75                 	db	117	;'u'
  9252   00FBFB  6E                 	db	110	;'n'
  9253   00FBFC  65                 	db	101	;'e'
  9254   00FBFD  78                 	db	120	;'x'
  9255   00FBFE  70                 	db	112	;'p'
  9256   00FBFF  65                 	db	101	;'e'
  9257   00FC00  63                 	db	99	;'c'
  9258   00FC01  74                 	db	116	;'t'
  9259   00FC02  65                 	db	101	;'e'
  9260   00FC03  64                 	db	100	;'d'
  9261   00FC04  20                 	db	32
  9262   00FC05  72                 	db	114	;'r'
  9263   00FC06  65                 	db	101	;'e'
  9264   00FC07  73                 	db	115	;'s'
  9265   00FC08  70                 	db	112	;'p'
  9266   00FC09  6F                 	db	111	;'o'
  9267   00FC0A  6E                 	db	110	;'n'
  9268   00FC0B  73                 	db	115	;'s'
  9269   00FC0C  65                 	db	101	;'e'
  9270   00FC0D  20                 	db	32
  9271   00FC0E  25                 	db	37
  9272   00FC0F  30                 	db	48	;'0'
  9273   00FC10  32                 	db	50	;'2'
  9274   00FC11  78                 	db	120	;'x'
  9275   00FC12  0A                 	db	10
  9276   00FC13  0D                 	db	13
  9277   00FC14  00                 	db	0
  9278   00FC15  53                 	db	83	;'S'
  9279   00FC16  44                 	db	68	;'D'
  9280   00FC17  20                 	db	32
  9281   00FC18  43                 	db	67	;'C'
  9282   00FC19  61                 	db	97	;'a'
  9283   00FC1A  72                 	db	114	;'r'
  9284   00FC1B  64                 	db	100	;'d'
  9285   00FC1C  3A                 	db	58	;':'
  9286   00FC1D  20                 	db	32
  9287   00FC1E  41                 	db	65	;'A'
  9288   00FC1F  43                 	db	67	;'C'
  9289   00FC20  4D                 	db	77	;'M'
  9290   00FC21  44                 	db	68	;'D'
  9291   00FC22  34                 	db	52	;'4'
  9292   00FC23  31                 	db	49	;'1'
  9293   00FC24  20                 	db	32
  9294   00FC25  72                 	db	114	;'r'
  9295   00FC26  65                 	db	101	;'e'
  9296   00FC27  73                 	db	115	;'s'
  9297   00FC28  70                 	db	112	;'p'
  9298   00FC29  6F                 	db	111	;'o'
  9299   00FC2A  6E                 	db	110	;'n'
  9300   00FC2B  73                 	db	115	;'s'
  9301   00FC2C  65                 	db	101	;'e'
  9302   00FC2D  20                 	db	32
  9303   00FC2E  69                 	db	105	;'i'
  9304   00FC2F  73                 	db	115	;'s'
  9305   00FC30  20                 	db	32
  9306   00FC31  25                 	db	37
  9307   00FC32  30                 	db	48	;'0'
  9308   00FC33  32                 	db	50	;'2'
  9309   00FC34  78                 	db	120	;'x'
  9310   00FC35  0A                 	db	10
  9311   00FC36  0D                 	db	13
  9312   00FC37  00                 	db	0
  9313   00FC38  53                 	db	83	;'S'
  9314   00FC39  44                 	db	68	;'D'
  9315   00FC3A  20                 	db	32
  9316   00FC3B  43                 	db	67	;'C'
  9317   00FC3C  61                 	db	97	;'a'
  9318   00FC3D  72                 	db	114	;'r'
  9319   00FC3E  64                 	db	100	;'d'
  9320   00FC3F  3A                 	db	58	;':'
  9321   00FC40  20                 	db	32
  9322   00FC41  77                 	db	119	;'w'
  9323   00FC42  72                 	db	114	;'r'
  9324   00FC43  69                 	db	105	;'i'
  9325   00FC44  74                 	db	116	;'t'
  9326   00FC45  65                 	db	101	;'e'
  9327   00FC46  35                 	db	53	;'5'
  9328   00FC47  31                 	db	49	;'1'
  9329   00FC48  32                 	db	50	;'2'
  9330   00FC49  3A                 	db	58	;':'
  9331   00FC4A  20                 	db	32
  9332   00FC4B  74                 	db	116	;'t'
  9333   00FC4C  6F                 	db	111	;'o'
  9334   00FC4D  6B                 	db	107	;'k'
  9335   00FC4E  65                 	db	101	;'e'
  9336   00FC4F  6E                 	db	110	;'n'
  9337   00FC50  20                 	db	32
  9338   00FC51  69                 	db	105	;'i'
  9339   00FC52  73                 	db	115	;'s'
  9340   00FC53  20                 	db	32
  9341   00FC54  25                 	db	37
  9342   00FC55  30                 	db	48	;'0'
  9343   00FC56  32                 	db	50	;'2'
  9344   00FC57  78                 	db	120	;'x'
  9345   00FC58  0A                 	db	10
  9346   00FC59  0D                 	db	13
  9347   00FC5A  00                 	db	0
  9348   00FC5B  53                 	db	83	;'S'
  9349   00FC5C  44                 	db	68	;'D'
  9350   00FC5D  20                 	db	32
  9351   00FC5E  43                 	db	67	;'C'
  9352   00FC5F  61                 	db	97	;'a'
  9353   00FC60  72                 	db	114	;'r'
  9354   00FC61  64                 	db	100	;'d'
  9355   00FC62  3A                 	db	58	;':'
  9356   00FC63  20                 	db	32
  9357   00FC64  43                 	db	67	;'C'
  9358   00FC65  4D                 	db	77	;'M'
  9359   00FC66  44                 	db	68	;'D'
  9360   00FC67  35                 	db	53	;'5'
  9361   00FC68  39                 	db	57	;'9'
  9362   00FC69  20                 	db	32
  9363   00FC6A  72                 	db	114	;'r'
  9364   00FC6B  65                 	db	101	;'e'
  9365   00FC6C  73                 	db	115	;'s'
  9366   00FC6D  70                 	db	112	;'p'
  9367   00FC6E  6F                 	db	111	;'o'
  9368   00FC6F  6E                 	db	110	;'n'
  9369   00FC70  73                 	db	115	;'s'
  9370   00FC71  65                 	db	101	;'e'
  9371   00FC72  20                 	db	32
  9372   00FC73  69                 	db	105	;'i'
  9373   00FC74  73                 	db	115	;'s'
  9374   00FC75  20                 	db	32
  9375   00FC76  25                 	db	37
  9376   00FC77  30                 	db	48	;'0'
  9377   00FC78  32                 	db	50	;'2'
  9378   00FC79  78                 	db	120	;'x'
  9379   00FC7A  0A                 	db	10
  9380   00FC7B  0D                 	db	13
  9381   00FC7C  00                 	db	0
  9382   00FC7D                     STR_47:
  9383   00FC7D  4D                 	db	77	;'M'
  9384   00FC7E  65                 	db	101	;'e'
  9385   00FC7F  6D                 	db	109	;'m'
  9386   00FC80  6F                 	db	111	;'o'
  9387   00FC81  72                 	db	114	;'r'
  9388   00FC82  79                 	db	121	;'y'
  9389   00FC83  20                 	db	32
  9390   00FC84  30                 	db	48	;'0'
  9391   00FC85  30                 	db	48	;'0'
  9392   00FC86  30                 	db	48	;'0'
  9393   00FC87  30                 	db	48	;'0'
  9394   00FC88  30                 	db	48	;'0'
  9395   00FC89  30                 	db	48	;'0'
  9396   00FC8A  20                 	db	32
  9397   00FC8B  2D                 	db	45
  9398   00FC8C  20                 	db	32
  9399   00FC8D  25                 	db	37
  9400   00FC8E  30                 	db	48	;'0'
  9401   00FC8F  36                 	db	54	;'6'
  9402   00FC90  6C                 	db	108	;'l'
  9403   00FC91  58                 	db	88	;'X'
  9404   00FC92  48                 	db	72	;'H'
  9405   00FC93  20                 	db	32
  9406   00FC94  25                 	db	37
  9407   00FC95  64                 	db	100	;'d'
  9408   00FC96  20                 	db	32
  9409   00FC97  4B                 	db	75	;'K'
  9410   00FC98  42                 	db	66	;'B'
  9411   00FC99  20                 	db	32
  9412   00FC9A  4F                 	db	79	;'O'
  9413   00FC9B  4B                 	db	75	;'K'
  9414   00FC9C  0D                 	db	13
  9415   00FC9D  0A                 	db	10
  9416   00FC9E  00                 	db	0
  9417   00FC9F  70                 	db	112	;'p'
  9418   00FCA0  61                 	db	97	;'a'
  9419   00FCA1  72                 	db	114	;'r'
  9420   00FCA2  74                 	db	116	;'t'
  9421   00FCA3  69                 	db	105	;'i'
  9422   00FCA4  74                 	db	116	;'t'
  9423   00FCA5  69                 	db	105	;'i'
  9424   00FCA6  6F                 	db	111	;'o'
  9425   00FCA7  6E                 	db	110	;'n'
  9426   00FCA8  20                 	db	32
  9427   00FCA9  73                 	db	115	;'s'
  9428   00FCAA  74                 	db	116	;'t'
  9429   00FCAB  61                 	db	97	;'a'
  9430   00FCAC  72                 	db	114	;'r'
  9431   00FCAD  74                 	db	116	;'t'
  9432   00FCAE  73                 	db	115	;'s'
  9433   00FCAF  20                 	db	32
  9434   00FCB0  61                 	db	97	;'a'
  9435   00FCB1  74                 	db	116	;'t'
  9436   00FCB2  20                 	db	32
  9437   00FCB3  73                 	db	115	;'s'
  9438   00FCB4  65                 	db	101	;'e'
  9439   00FCB5  63                 	db	99	;'c'
  9440   00FCB6  74                 	db	116	;'t'
  9441   00FCB7  6F                 	db	111	;'o'
  9442   00FCB8  72                 	db	114	;'r'
  9443   00FCB9  20                 	db	32
  9444   00FCBA  25                 	db	37
  9445   00FCBB  6C                 	db	108	;'l'
  9446   00FCBC  64                 	db	100	;'d'
  9447   00FCBD  0A                 	db	10
  9448   00FCBE  0D                 	db	13
  9449   00FCBF  00                 	db	0
  9450   00FCC0                     STR_55:
  9451   00FCC0  66                 	db	102	;'f'
  9452   00FCC1  5F                 	db	95	;'_'
  9453   00FCC2  77                 	db	119	;'w'
  9454   00FCC3  72                 	db	114	;'r'
  9455   00FCC4  69                 	db	105	;'i'
  9456   00FCC5  74                 	db	116	;'t'
  9457   00FCC6  65                 	db	101	;'e'
  9458   00FCC7  28                 	db	40
  9459   00FCC8  29                 	db	41
  9460   00FCC9  3A                 	db	58	;':'
  9461   00FCCA  20                 	db	32
  9462   00FCCB  45                 	db	69	;'E'
  9463   00FCCC  52                 	db	82	;'R'
  9464   00FCCD  52                 	db	82	;'R'
  9465   00FCCE  4F                 	db	79	;'O'
  9466   00FCCF  52                 	db	82	;'R'
  9467   00FCD0  20                 	db	32
  9468   00FCD1  72                 	db	114	;'r'
  9469   00FCD2  65                 	db	101	;'e'
  9470   00FCD3  73                 	db	115	;'s'
  9471   00FCD4  3D                 	db	61	;'='
  9472   00FCD5  25                 	db	37
  9473   00FCD6  64                 	db	100	;'d'
  9474   00FCD7  2C                 	db	44
  9475   00FCD8  20                 	db	32
  9476   00FCD9  6E                 	db	110	;'n'
  9477   00FCDA  3D                 	db	61	;'='
  9478   00FCDB  25                 	db	37
  9479   00FCDC  64                 	db	100	;'d'
  9480   00FCDD  0A                 	db	10
  9481   00FCDE  0D                 	db	13
  9482   00FCDF  00                 	db	0
  9483   00FCE0                     STR_54:
  9484   00FCE0  66                 	db	102	;'f'
  9485   00FCE1  5F                 	db	95	;'_'
  9486   00FCE2  72                 	db	114	;'r'
  9487   00FCE3  65                 	db	101	;'e'
  9488   00FCE4  61                 	db	97	;'a'
  9489   00FCE5  64                 	db	100	;'d'
  9490   00FCE6  28                 	db	40
  9491   00FCE7  29                 	db	41
  9492   00FCE8  3A                 	db	58	;':'
  9493   00FCE9  20                 	db	32
  9494   00FCEA  45                 	db	69	;'E'
  9495   00FCEB  52                 	db	82	;'R'
  9496   00FCEC  52                 	db	82	;'R'
  9497   00FCED  4F                 	db	79	;'O'
  9498   00FCEE  52                 	db	82	;'R'
  9499   00FCEF  20                 	db	32
  9500   00FCF0  72                 	db	114	;'r'
  9501   00FCF1  65                 	db	101	;'e'
  9502   00FCF2  73                 	db	115	;'s'
  9503   00FCF3  3D                 	db	61	;'='
  9504   00FCF4  25                 	db	37
  9505   00FCF5  64                 	db	100	;'d'
  9506   00FCF6  2C                 	db	44
  9507   00FCF7  20                 	db	32
  9508   00FCF8  6E                 	db	110	;'n'
  9509   00FCF9  3D                 	db	61	;'='
  9510   00FCFA  25                 	db	37
  9511   00FCFB  64                 	db	100	;'d'
  9512   00FCFC  0A                 	db	10
  9513   00FCFD  0D                 	db	13
  9514   00FCFE  00                 	db	0
  9515   00FCFF                     STR_85:
  9516   00FCFF  42                 	db	66	;'B'
  9517   00FD00  6F                 	db	111	;'o'
  9518   00FD01  61                 	db	97	;'a'
  9519   00FD02  72                 	db	114	;'r'
  9520   00FD03  64                 	db	100	;'d'
  9521   00FD04  3A                 	db	58	;':'
  9522   00FD05  20                 	db	32
  9523   00FD06  53                 	db	83	;'S'
  9524   00FD07  42                 	db	66	;'B'
  9525   00FD08  43                 	db	67	;'C'
  9526   00FD09  38                 	db	56	;'8'
  9527   00FD0A  30                 	db	48	;'0'
  9528   00FD0B  38                 	db	56	;'8'
  9529   00FD0C  30                 	db	48	;'0'
  9530   00FD0D  20                 	db	32
  9531   00FD0E  2B                 	db	43
  9532   00FD0F  20                 	db	32
  9533   00FD10  45                 	db	69	;'E'
  9534   00FD11  4D                 	db	77	;'M'
  9535   00FD12  55                 	db	85	;'U'
  9536   00FD13  5A                 	db	90	;'Z'
  9537   00FD14  38                 	db	56	;'8'
  9538   00FD15  30                 	db	48	;'0'
  9539   00FD16  2D                 	db	45
  9540   00FD17  35                 	db	53	;'5'
  9541   00FD18  37                 	db	55	;'7'
  9542   00FD19  51                 	db	81	;'Q'
  9543   00FD1A  0A                 	db	10
  9544   00FD1B  0D                 	db	13
  9545   00FD1C  00                 	db	0
  9546   00FD1D  66                 	db	102	;'f'
  9547   00FD1E  61                 	db	97	;'a'
  9548   00FD1F  69                 	db	105	;'i'
  9549   00FD20  6C                 	db	108	;'l'
  9550   00FD21  65                 	db	101	;'e'
  9551   00FD22  64                 	db	100	;'d'
  9552   00FD23  20                 	db	32
  9553   00FD24  74                 	db	116	;'t'
  9554   00FD25  6F                 	db	111	;'o'
  9555   00FD26  20                 	db	32
  9556   00FD27  77                 	db	119	;'w'
  9557   00FD28  72                 	db	114	;'r'
  9558   00FD29  69                 	db	105	;'i'
  9559   00FD2A  74                 	db	116	;'t'
  9560   00FD2B  65                 	db	101	;'e'
  9561   00FD2C  20                 	db	32
  9562   00FD2D  73                 	db	115	;'s'
  9563   00FD2E  65                 	db	101	;'e'
  9564   00FD2F  63                 	db	99	;'c'
  9565   00FD30  74                 	db	116	;'t'
  9566   00FD31  6F                 	db	111	;'o'
  9567   00FD32  72                 	db	114	;'r'
  9568   00FD33  20                 	db	32
  9569   00FD34  25                 	db	37
  9570   00FD35  6C                 	db	108	;'l'
  9571   00FD36  64                 	db	100	;'d'
  9572   00FD37  0A                 	db	10
  9573   00FD38  0D                 	db	13
  9574   00FD39  00                 	db	0
  9575   00FD3A  0A                 	db	10
  9576   00FD3B  0D                 	db	13
  9577   00FD3C  53                 	db	83	;'S'
  9578   00FD3D  44                 	db	68	;'D'
  9579   00FD3E  20                 	db	32
  9580   00FD3F  43                 	db	67	;'C'
  9581   00FD40  61                 	db	97	;'a'
  9582   00FD41  72                 	db	114	;'r'
  9583   00FD42  64                 	db	100	;'d'
  9584   00FD43  3A                 	db	58	;':'
  9585   00FD44  20                 	db	32
  9586   00FD45  69                 	db	105	;'i'
  9587   00FD46  6E                 	db	110	;'n'
  9588   00FD47  69                 	db	105	;'i'
  9589   00FD48  74                 	db	116	;'t'
  9590   00FD49  69                 	db	105	;'i'
  9591   00FD4A  61                 	db	97	;'a'
  9592   00FD4B  6C                 	db	108	;'l'
  9593   00FD4C  69                 	db	105	;'i'
  9594   00FD4D  7A                 	db	122	;'z'
  9595   00FD4E  65                 	db	101	;'e'
  9596   00FD4F  20                 	db	32
  9597   00FD50  2E                 	db	46
  9598   00FD51  2E                 	db	46
  9599   00FD52  2E                 	db	46
  9600   00FD53  0A                 	db	10
  9601   00FD54  0D                 	db	13
  9602   00FD55  00                 	db	0
  9603   00FD56  66                 	db	102	;'f'
  9604   00FD57  61                 	db	97	;'a'
  9605   00FD58  69                 	db	105	;'i'
  9606   00FD59  6C                 	db	108	;'l'
  9607   00FD5A  65                 	db	101	;'e'
  9608   00FD5B  64                 	db	100	;'d'
  9609   00FD5C  20                 	db	32
  9610   00FD5D  74                 	db	116	;'t'
  9611   00FD5E  6F                 	db	111	;'o'
  9612   00FD5F  20                 	db	32
  9613   00FD60  72                 	db	114	;'r'
  9614   00FD61  65                 	db	101	;'e'
  9615   00FD62  61                 	db	97	;'a'
  9616   00FD63  64                 	db	100	;'d'
  9617   00FD64  20                 	db	32
  9618   00FD65  73                 	db	115	;'s'
  9619   00FD66  65                 	db	101	;'e'
  9620   00FD67  63                 	db	99	;'c'
  9621   00FD68  74                 	db	116	;'t'
  9622   00FD69  6F                 	db	111	;'o'
  9623   00FD6A  72                 	db	114	;'r'
  9624   00FD6B  20                 	db	32
  9625   00FD6C  25                 	db	37
  9626   00FD6D  6C                 	db	108	;'l'
  9627   00FD6E  64                 	db	100	;'d'
  9628   00FD6F  0A                 	db	10
  9629   00FD70  0D                 	db	13
  9630   00FD71  00                 	db	0
  9631   00FD72                     STR_89:
  9632   00FD72  46                 	db	70	;'F'
  9633   00FD73  61                 	db	97	;'a'
  9634   00FD74  69                 	db	105	;'i'
  9635   00FD75  6C                 	db	108	;'l'
  9636   00FD76  65                 	db	101	;'e'
  9637   00FD77  64                 	db	100	;'d'
  9638   00FD78  20                 	db	32
  9639   00FD79  74                 	db	116	;'t'
  9640   00FD7A  6F                 	db	111	;'o'
  9641   00FD7B  20                 	db	32
  9642   00FD7C  6D                 	db	109	;'m'
  9643   00FD7D  6F                 	db	111	;'o'
  9644   00FD7E  75                 	db	117	;'u'
  9645   00FD7F  6E                 	db	110	;'n'
  9646   00FD80  74                 	db	116	;'t'
  9647   00FD81  20                 	db	32
  9648   00FD82  53                 	db	83	;'S'
  9649   00FD83  44                 	db	68	;'D'
  9650   00FD84  20                 	db	32
  9651   00FD85  43                 	db	67	;'C'
  9652   00FD86  61                 	db	97	;'a'
  9653   00FD87  72                 	db	114	;'r'
  9654   00FD88  64                 	db	100	;'d'
  9655   00FD89  2E                 	db	46
  9656   00FD8A  0A                 	db	10
  9657   00FD8B  0D                 	db	13
  9658   00FD8C  00                 	db	0
  9659   00FD8D  53                 	db	83	;'S'
  9660   00FD8E  44                 	db	68	;'D'
  9661   00FD8F  20                 	db	32
  9662   00FD90  43                 	db	67	;'C'
  9663   00FD91  61                 	db	97	;'a'
  9664   00FD92  72                 	db	114	;'r'
  9665   00FD93  64                 	db	100	;'d'
  9666   00FD94  3A                 	db	58	;':'
  9667   00FD95  20                 	db	32
  9668   00FD96  41                 	db	65	;'A'
  9669   00FD97  43                 	db	67	;'C'
  9670   00FD98  4D                 	db	77	;'M'
  9671   00FD99  44                 	db	68	;'D'
  9672   00FD9A  34                 	db	52	;'4'
  9673   00FD9B  31                 	db	49	;'1'
  9674   00FD9C  2C                 	db	44
  9675   00FD9D  20                 	db	32
  9676   00FD9E  52                 	db	82	;'R'
  9677   00FD9F  31                 	db	49	;'1'
  9678   00FDA0  3D                 	db	61	;'='
  9679   00FDA1  25                 	db	37
  9680   00FDA2  30                 	db	48	;'0'
  9681   00FDA3  32                 	db	50	;'2'
  9682   00FDA4  78                 	db	120	;'x'
  9683   00FDA5  0A                 	db	10
  9684   00FDA6  0D                 	db	13
  9685   00FDA7  00                 	db	0
  9686   00FDA8                     STR_32:
  9687   00FDA8  46                 	db	70	;'F'
  9688   00FDA9  61                 	db	97	;'a'
  9689   00FDAA  69                 	db	105	;'i'
  9690   00FDAB  6C                 	db	108	;'l'
  9691   00FDAC  65                 	db	101	;'e'
  9692   00FDAD  64                 	db	100	;'d'
  9693   00FDAE  20                 	db	32
  9694   00FDAF  74                 	db	116	;'t'
  9695   00FDB0  6F                 	db	111	;'o'
  9696   00FDB1  20                 	db	32
  9697   00FDB2  6F                 	db	111	;'o'
  9698   00FDB3  70                 	db	112	;'p'
  9699   00FDB4  65                 	db	101	;'e'
  9700   00FDB5  6E                 	db	110	;'n'
  9701   00FDB6  20                 	db	32
  9702   00FDB7  53                 	db	83	;'S'
  9703   00FDB8  44                 	db	68	;'D'
  9704   00FDB9  20                 	db	32
  9705   00FDBA  43                 	db	67	;'C'
  9706   00FDBB  61                 	db	97	;'a'
  9707   00FDBC  72                 	db	114	;'r'
  9708   00FDBD  64                 	db	100	;'d'
  9709   00FDBE  2E                 	db	46
  9710   00FDBF  2E                 	db	46
  9711   00FDC0  0A                 	db	10
  9712   00FDC1  0D                 	db	13
  9713   00FDC2  00                 	db	0
  9714   00FDC3  66                 	db	102	;'f'
  9715   00FDC4  61                 	db	97	;'a'
  9716   00FDC5  69                 	db	105	;'i'
  9717   00FDC6  6C                 	db	108	;'l'
  9718   00FDC7  65                 	db	101	;'e'
  9719   00FDC8  64                 	db	100	;'d'
  9720   00FDC9  20                 	db	32
  9721   00FDCA  74                 	db	116	;'t'
  9722   00FDCB  6F                 	db	111	;'o'
  9723   00FDCC  20                 	db	32
  9724   00FDCD  72                 	db	114	;'r'
  9725   00FDCE  65                 	db	101	;'e'
  9726   00FDCF  61                 	db	97	;'a'
  9727   00FDD0  64                 	db	100	;'d'
  9728   00FDD1  20                 	db	32
  9729   00FDD2  73                 	db	115	;'s'
  9730   00FDD3  65                 	db	101	;'e'
  9731   00FDD4  63                 	db	99	;'c'
  9732   00FDD5  74                 	db	116	;'t'
  9733   00FDD6  6F                 	db	111	;'o'
  9734   00FDD7  72                 	db	114	;'r'
  9735   00FDD8  20                 	db	32
  9736   00FDD9  30                 	db	48	;'0'
  9737   00FDDA  0A                 	db	10
  9738   00FDDB  0D                 	db	13
  9739   00FDDC  00                 	db	0
  9740   00FDDD  53                 	db	83	;'S'
  9741   00FDDE  44                 	db	68	;'D'
  9742   00FDDF  20                 	db	32
  9743   00FDE0  43                 	db	67	;'C'
  9744   00FDE1  61                 	db	97	;'a'
  9745   00FDE2  72                 	db	114	;'r'
  9746   00FDE3  64                 	db	100	;'d'
  9747   00FDE4  3A                 	db	58	;':'
  9748   00FDE5  20                 	db	32
  9749   00FDE6  6E                 	db	110	;'n'
  9750   00FDE7  6F                 	db	111	;'o'
  9751   00FDE8  74                 	db	116	;'t'
  9752   00FDE9  20                 	db	32
  9753   00FDEA  73                 	db	115	;'s'
  9754   00FDEB  75                 	db	117	;'u'
  9755   00FDEC  70                 	db	112	;'p'
  9756   00FDED  6F                 	db	111	;'o'
  9757   00FDEE  70                 	db	112	;'p'
  9758   00FDEF  72                 	db	114	;'r'
  9759   00FDF0  74                 	db	116	;'t'
  9760   00FDF1  65                 	db	101	;'e'
  9761   00FDF2  64                 	db	100	;'d'
  9762   00FDF3  0A                 	db	10
  9763   00FDF4  0D                 	db	13
  9764   00FDF5  00                 	db	0
  9765   00FDF6  53                 	db	83	;'S'
  9766   00FDF7  44                 	db	68	;'D'
  9767   00FDF8  20                 	db	32
  9768   00FDF9  43                 	db	67	;'C'
  9769   00FDFA  61                 	db	97	;'a'
  9770   00FDFB  72                 	db	114	;'r'
  9771   00FDFC  64                 	db	100	;'d'
  9772   00FDFD  3A                 	db	58	;':'
  9773   00FDFE  20                 	db	32
  9774   00FDFF  43                 	db	67	;'C'
  9775   00FE00  4D                 	db	77	;'M'
  9776   00FE01  44                 	db	68	;'D'
  9777   00FE02  30                 	db	48	;'0'
  9778   00FE03  2C                 	db	44
  9779   00FE04  20                 	db	32
  9780   00FE05  52                 	db	82	;'R'
  9781   00FE06  31                 	db	49	;'1'
  9782   00FE07  3D                 	db	61	;'='
  9783   00FE08  25                 	db	37
  9784   00FE09  30                 	db	48	;'0'
  9785   00FE0A  32                 	db	50	;'2'
  9786   00FE0B  78                 	db	120	;'x'
  9787   00FE0C  0A                 	db	10
  9788   00FE0D  0D                 	db	13
  9789   00FE0E  00                 	db	0
  9790   00FE0F                     STR_50:
  9791   00FE0F  20                 	db	32
  9792   00FE10  20                 	db	32
  9793   00FE11  20                 	db	32
  9794   00FE12  20                 	db	32
  9795   00FE13  20                 	db	32
  9796   00FE14  20                 	db	32
  9797   00FE15  20                 	db	32
  9798   00FE16  20                 	db	32
  9799   00FE17  20                 	db	32
  9800   00FE18  20                 	db	32
  9801   00FE19  20                 	db	32
  9802   00FE1A  20                 	db	32
  9803   00FE1B  20                 	db	32
  9804   00FE1C  20                 	db	32
  9805   00FE1D  20                 	db	32
  9806   00FE1E  20                 	db	32
  9807   00FE1F  20                 	db	32
  9808   00FE20  20                 	db	32
  9809   00FE21  20                 	db	32
  9810   00FE22  20                 	db	32
  9811   00FE23  20                 	db	32
  9812   00FE24  20                 	db	32
  9813   00FE25  20                 	db	32
  9814   00FE26  0D                 	db	13
  9815   00FE27  00                 	db	0
  9816   00FE28                     STR_49:
  9817   00FE28  77                 	db	119	;'w'
  9818   00FE29  61                 	db	97	;'a'
  9819   00FE2A  69                 	db	105	;'i'
  9820   00FE2B  74                 	db	116	;'t'
  9821   00FE2C  20                 	db	32
  9822   00FE2D  66                 	db	102	;'f'
  9823   00FE2E  6F                 	db	111	;'o'
  9824   00FE2F  72                 	db	114	;'r'
  9825   00FE30  20                 	db	32
  9826   00FE31  70                 	db	112	;'p'
  9827   00FE32  72                 	db	114	;'r'
  9828   00FE33  6F                 	db	111	;'o'
  9829   00FE34  67                 	db	103	;'g'
  9830   00FE35  72                 	db	114	;'r'
  9831   00FE36  61                 	db	97	;'a'
  9832   00FE37  6D                 	db	109	;'m'
  9833   00FE38  6D                 	db	109	;'m'
  9834   00FE39  65                 	db	101	;'e'
  9835   00FE3A  72                 	db	114	;'r'
  9836   00FE3B  20                 	db	32
  9837   00FE3C  2E                 	db	46
  9838   00FE3D  2E                 	db	46
  9839   00FE3E  2E                 	db	46
  9840   00FE3F  0D                 	db	13
  9841   00FE40  00                 	db	0
  9842   00FE41  64                 	db	100	;'d'
  9843   00FE42  69                 	db	105	;'i'
  9844   00FE43  73                 	db	115	;'s'
  9845   00FE44  6B                 	db	107	;'k'
  9846   00FE45  5F                 	db	95	;'_'
  9847   00FE46  69                 	db	105	;'i'
  9848   00FE47  6E                 	db	110	;'n'
  9849   00FE48  69                 	db	105	;'i'
  9850   00FE49  74                 	db	116	;'t'
  9851   00FE4A  69                 	db	105	;'i'
  9852   00FE4B  61                 	db	97	;'a'
  9853   00FE4C  6C                 	db	108	;'l'
  9854   00FE4D  69                 	db	105	;'i'
  9855   00FE4E  7A                 	db	122	;'z'
  9856   00FE4F  65                 	db	101	;'e'
  9857   00FE50  28                 	db	40
  9858   00FE51  25                 	db	37
  9859   00FE52  64                 	db	100	;'d'
  9860   00FE53  29                 	db	41
  9861   00FE54  2E                 	db	46
  9862   00FE55  2E                 	db	46
  9863   00FE56  2E                 	db	46
  9864   00FE57  0A                 	db	10
  9865   00FE58  0D                 	db	13
  9866   00FE59  00                 	db	0
  9867   00FE5A                     STR_46:
  9868   00FE5A  4D                 	db	77	;'M'
  9869   00FE5B  65                 	db	101	;'e'
  9870   00FE5C  6D                 	db	109	;'m'
  9871   00FE5D  6F                 	db	111	;'o'
  9872   00FE5E  72                 	db	114	;'r'
  9873   00FE5F  79                 	db	121	;'y'
  9874   00FE60  20                 	db	32
  9875   00FE61  30                 	db	48	;'0'
  9876   00FE62  30                 	db	48	;'0'
  9877   00FE63  30                 	db	48	;'0'
  9878   00FE64  30                 	db	48	;'0'
  9879   00FE65  30                 	db	48	;'0'
  9880   00FE66  30                 	db	48	;'0'
  9881   00FE67  20                 	db	32
  9882   00FE68  2D                 	db	45
  9883   00FE69  20                 	db	32
  9884   00FE6A  25                 	db	37
  9885   00FE6B  30                 	db	48	;'0'
  9886   00FE6C  36                 	db	54	;'6'
  9887   00FE6D  6C                 	db	108	;'l'
  9888   00FE6E  58                 	db	88	;'X'
  9889   00FE6F  48                 	db	72	;'H'
  9890   00FE70  0D                 	db	13
  9891   00FE71  00                 	db	0
  9892   00FE72  25                 	db	37
  9893   00FE73  73                 	db	115	;'s'
  9894   00FE74  25                 	db	37
  9895   00FE75  35                 	db	53	;'5'
  9896   00FE76  33                 	db	51	;'3'
  9897   00FE77  73                 	db	115	;'s'
  9898   00FE78  20                 	db	32
  9899   00FE79  43                 	db	67	;'C'
  9900   00FE7A  48                 	db	72	;'H'
  9901   00FE7B  45                 	db	69	;'E'
  9902   00FE7C  43                 	db	67	;'C'
  9903   00FE7D  4B                 	db	75	;'K'
  9904   00FE7E  53                 	db	83	;'S'
  9905   00FE7F  55                 	db	85	;'U'
  9906   00FE80  4D                 	db	77	;'M'
  9907   00FE81  3A                 	db	58	;':'
  9908   00FE82  20                 	db	32
  9909   00FE83  25                 	db	37
  9910   00FE84  30                 	db	48	;'0'
  9911   00FE85  32                 	db	50	;'2'
  9912   00FE86  78                 	db	120	;'x'
  9913   00FE87  0A                 	db	10
  9914   00FE88  0D                 	db	13
  9915   00FE89  00                 	db	0
  9916   00FE8A                     STR_2:
  9917   00FE8A  70                 	db	112	;'p'
  9918   00FE8B  68                 	db	104	;'h'
  9919   00FE8C  79                 	db	121	;'y'
  9920   00FE8D  73                 	db	115	;'s'
  9921   00FE8E  69                 	db	105	;'i'
  9922   00FE8F  63                 	db	99	;'c'
  9923   00FE90  61                 	db	97	;'a'
  9924   00FE91  6C                 	db	108	;'l'
  9925   00FE92  20                 	db	32
  9926   00FE93  64                 	db	100	;'d'
  9927   00FE94  72                 	db	114	;'r'
  9928   00FE95  69                 	db	105	;'i'
  9929   00FE96  76                 	db	118	;'v'
  9930   00FE97  65                 	db	101	;'e'
  9931   00FE98  72                 	db	114	;'r'
  9932   00FE99  20                 	db	32
  9933   00FE9A  21                 	db	33
  9934   00FE9B  3D                 	db	61	;'='
  9935   00FE9C  20                 	db	32
  9936   00FE9D  30                 	db	48	;'0'
  9937   00FE9E  0A                 	db	10
  9938   00FE9F  0D                 	db	13
  9939   00FEA0  00                 	db	0
  9940   00FEA1                     STR_53:
  9941   00FEA1  66                 	db	102	;'f'
  9942   00FEA2  5F                 	db	95	;'_'
  9943   00FEA3  6C                 	db	108	;'l'
  9944   00FEA4  73                 	db	115	;'s'
  9945   00FEA5  65                 	db	101	;'e'
  9946   00FEA6  65                 	db	101	;'e'
  9947   00FEA7  6B                 	db	107	;'k'
  9948   00FEA8  28                 	db	40
  9949   00FEA9  29                 	db	41
  9950   00FEAA  3A                 	db	58	;':'
  9951   00FEAB  20                 	db	32
  9952   00FEAC  45                 	db	69	;'E'
  9953   00FEAD  52                 	db	82	;'R'
  9954   00FEAE  52                 	db	82	;'R'
  9955   00FEAF  4F                 	db	79	;'O'
  9956   00FEB0  52                 	db	82	;'R'
  9957   00FEB1  20                 	db	32
  9958   00FEB2  25                 	db	37
  9959   00FEB3  64                 	db	100	;'d'
  9960   00FEB4  0A                 	db	10
  9961   00FEB5  0D                 	db	13
  9962   00FEB6  00                 	db	0
  9963   00FEB7                     STR_56:
  9964   00FEB7  66                 	db	102	;'f'
  9965   00FEB8  5F                 	db	95	;'_'
  9966   00FEB9  73                 	db	115	;'s'
  9967   00FEBA  79                 	db	121	;'y'
  9968   00FEBB  6E                 	db	110	;'n'
  9969   00FEBC  63                 	db	99	;'c'
  9970   00FEBD  28                 	db	40
  9971   00FEBE  29                 	db	41
  9972   00FEBF  3A                 	db	58	;':'
  9973   00FEC0  20                 	db	32
  9974   00FEC1  45                 	db	69	;'E'
  9975   00FEC2  52                 	db	82	;'R'
  9976   00FEC3  52                 	db	82	;'R'
  9977   00FEC4  4F                 	db	79	;'O'
  9978   00FEC5  52                 	db	82	;'R'
  9979   00FEC6  20                 	db	32
  9980   00FEC7  25                 	db	37
  9981   00FEC8  64                 	db	100	;'d'
  9982   00FEC9  0A                 	db	10
  9983   00FECA  0D                 	db	13
  9984   00FECB  00                 	db	0
  9985   00FECC  6E                 	db	110	;'n'
  9986   00FECD  6F                 	db	111	;'o'
  9987   00FECE  20                 	db	32
  9988   00FECF  46                 	db	70	;'F'
  9989   00FED0  41                 	db	65	;'A'
  9990   00FED1  54                 	db	84	;'T'
  9991   00FED2  33                 	db	51	;'3'
  9992   00FED3  32                 	db	50	;'2'
  9993   00FED4  20                 	db	32
  9994   00FED5  70                 	db	112	;'p'
  9995   00FED6  61                 	db	97	;'a'
  9996   00FED7  72                 	db	114	;'r'
  9997   00FED8  74                 	db	116	;'t'
  9998   00FED9  69                 	db	105	;'i'
  9999   00FEDA  74                 	db	116	;'t'
 10000   00FEDB  69                 	db	105	;'i'
 10001   00FEDC  6F                 	db	111	;'o'
 10002   00FEDD  6E                 	db	110	;'n'
 10003   00FEDE  0A                 	db	10
 10004   00FEDF  0D                 	db	13
 10005   00FEE0  00                 	db	0
 10006   00FEE1  53                 	db	83	;'S'
 10007   00FEE2  44                 	db	68	;'D'
 10008   00FEE3  20                 	db	32
 10009   00FEE4  43                 	db	67	;'C'
 10010   00FEE5  61                 	db	97	;'a'
 10011   00FEE6  72                 	db	114	;'r'
 10012   00FEE7  64                 	db	100	;'d'
 10013   00FEE8  3A                 	db	58	;':'
 10014   00FEE9  20                 	db	32
 10015   00FEEA  74                 	db	116	;'t'
 10016   00FEEB  69                 	db	105	;'i'
 10017   00FEEC  6D                 	db	109	;'m'
 10018   00FEED  65                 	db	101	;'e'
 10019   00FEEE  6F                 	db	111	;'o'
 10020   00FEEF  75                 	db	117	;'u'
 10021   00FEF0  74                 	db	116	;'t'
 10022   00FEF1  0A                 	db	10
 10023   00FEF2  0D                 	db	13
 10024   00FEF3  00                 	db	0
 10025   00FEF4  6E                 	db	110	;'n'
 10026   00FEF5  6F                 	db	111	;'o'
 10027   00FEF6  20                 	db	32
 10028   00FEF7  4D                 	db	77	;'M'
 10029   00FEF8  42                 	db	66	;'B'
 10030   00FEF9  52                 	db	82	;'R'
 10031   00FEFA  20                 	db	32
 10032   00FEFB  73                 	db	115	;'s'
 10033   00FEFC  69                 	db	105	;'i'
 10034   00FEFD  67                 	db	103	;'g'
 10035   00FEFE  6E                 	db	110	;'n'
 10036   00FEFF  61                 	db	97	;'a'
 10037   00FF00  74                 	db	116	;'t'
 10038   00FF01  75                 	db	117	;'u'
 10039   00FF02  72                 	db	114	;'r'
 10040   00FF03  65                 	db	101	;'e'
 10041   00FF04  0A                 	db	10
 10042   00FF05  0D                 	db	13
 10043   00FF06  00                 	db	0
 10044   00FF07  53                 	db	83	;'S'
 10045   00FF08  44                 	db	68	;'D'
 10046   00FF09  20                 	db	32
 10047   00FF0A  43                 	db	67	;'C'
 10048   00FF0B  61                 	db	97	;'a'
 10049   00FF0C  72                 	db	114	;'r'
 10050   00FF0D  64                 	db	100	;'d'
 10051   00FF0E  3A                 	db	58	;':'
 10052   00FF0F  20                 	db	32
 10053   00FF10  72                 	db	114	;'r'
 10054   00FF11  65                 	db	101	;'e'
 10055   00FF12  61                 	db	97	;'a'
 10056   00FF13  64                 	db	100	;'d'
 10057   00FF14  79                 	db	121	;'y'
 10058   00FF15  2E                 	db	46
 10059   00FF16  0A                 	db	10
 10060   00FF17  0D                 	db	13
 10061   00FF18  00                 	db	0
 10062   00FF19                     STR_41:
 10063   00FF19  25                 	db	37
 10064   00FF1A  73                 	db	115	;'s'
 10065   00FF1B  20                 	db	32
 10066   00FF1C  69                 	db	105	;'i'
 10067   00FF1D  73                 	db	115	;'s'
 10068   00FF1E  20                 	db	32
 10069   00FF1F  73                 	db	115	;'s'
 10070   00FF20  65                 	db	101	;'e'
 10071   00FF21  6C                 	db	108	;'l'
 10072   00FF22  65                 	db	101	;'e'
 10073   00FF23  63                 	db	99	;'c'
 10074   00FF24  74                 	db	116	;'t'
 10075   00FF25  65                 	db	101	;'e'
 10076   00FF26  64                 	db	100	;'d'
 10077   00FF27  2E                 	db	46
 10078   00FF28  0A                 	db	10
 10079   00FF29  0D                 	db	13
 10080   00FF2A  00                 	db	0
 10081   00FF2B                     STR_52:
 10082   00FF2B  73                 	db	115	;'s'
 10083   00FF2C  65                 	db	101	;'e'
 10084   00FF2D  6C                 	db	108	;'l'
 10085   00FF2E  65                 	db	101	;'e'
 10086   00FF2F  63                 	db	99	;'c'
 10087   00FF30  74                 	db	116	;'t'
 10088   00FF31  20                 	db	32
 10089   00FF32  45                 	db	69	;'E'
 10090   00FF33  52                 	db	82	;'R'
 10091   00FF34  52                 	db	82	;'R'
 10092   00FF35  4F                 	db	79	;'O'
 10093   00FF36  52                 	db	82	;'R'
 10094   00FF37  20                 	db	32
 10095   00FF38  25                 	db	37
 10096   00FF39  64                 	db	100	;'d'
 10097   00FF3A  0A                 	db	10
 10098   00FF3B  0D                 	db	13
 10099   00FF3C  00                 	db	0
 10100   00FF3D  6E                 	db	110	;'n'
 10101   00FF3E  6F                 	db	111	;'o'
 10102   00FF3F  20                 	db	32
 10103   00FF40  76                 	db	118	;'v'
 10104   00FF41  61                 	db	97	;'a'
 10105   00FF42  6C                 	db	108	;'l'
 10106   00FF43  69                 	db	105	;'i'
 10107   00FF44  64                 	db	100	;'d'
 10108   00FF45  20                 	db	32
 10109   00FF46  76                 	db	118	;'v'
 10110   00FF47  6F                 	db	111	;'o'
 10111   00FF48  6C                 	db	108	;'l'
 10112   00FF49  75                 	db	117	;'u'
 10113   00FF4A  6D                 	db	109	;'m'
 10114   00FF4B  65                 	db	101	;'e'
 10115   00FF4C  0A                 	db	10
 10116   00FF4D  0D                 	db	13
 10117   00FF4E  00                 	db	0
 10118   00FF4F                     STR_58:
 10119   00FF4F  53                 	db	83	;'S'
 10120   00FF50  50                 	db	80	;'P'
 10121   00FF51  49                 	db	73	;'I'
 10122   00FF52  5F                 	db	95	;'_'
 10123   00FF53  53                 	db	83	;'S'
 10124   00FF54  44                 	db	68	;'D'
 10125   00FF55  5F                 	db	95	;'_'
 10126   00FF56  63                 	db	99	;'c'
 10127   00FF57  6F                 	db	111	;'o'
 10128   00FF58  6E                 	db	110	;'n'
 10129   00FF59  66                 	db	102	;'f'
 10130   00FF5A  69                 	db	105	;'i'
 10131   00FF5B  67                 	db	103	;'g'
 10132   00FF5C  75                 	db	117	;'u'
 10133   00FF5D  72                 	db	114	;'r'
 10134   00FF5E  65                 	db	101	;'e'
 10135   00FF5F  00                 	db	0
 10136   00FF60                     STR_45:
 10137   00FF60  4E                 	db	78	;'N'
 10138   00FF61  6F                 	db	111	;'o'
 10139   00FF62  20                 	db	32
 10140   00FF63  62                 	db	98	;'b'
 10141   00FF64  6F                 	db	111	;'o'
 10142   00FF65  6F                 	db	111	;'o'
 10143   00FF66  74                 	db	116	;'t'
 10144   00FF67  20                 	db	32
 10145   00FF68  64                 	db	100	;'d'
 10146   00FF69  69                 	db	105	;'i'
 10147   00FF6A  73                 	db	115	;'s'
 10148   00FF6B  6B                 	db	107	;'k'
 10149   00FF6C  2E                 	db	46
 10150   00FF6D  0A                 	db	10
 10151   00FF6E  0D                 	db	13
 10152   00FF6F  00                 	db	0
 10153   00FF70                     STR_43:
 10154   00FF70  25                 	db	37
 10155   00FF71  73                 	db	115	;'s'
 10156   00FF72  2F                 	db	47
 10157   00FF73  44                 	db	68	;'D'
 10158   00FF74  52                 	db	82	;'R'
 10159   00FF75  49                 	db	73	;'I'
 10160   00FF76  56                 	db	86	;'V'
 10161   00FF77  45                 	db	69	;'E'
 10162   00FF78  25                 	db	37
 10163   00FF79  63                 	db	99	;'c'
 10164   00FF7A  2E                 	db	46
 10165   00FF7B  44                 	db	68	;'D'
 10166   00FF7C  53                 	db	83	;'S'
 10167   00FF7D  4B                 	db	75	;'K'
 10168   00FF7E  00                 	db	0
 10169   00FF7F                     STR_27:
 10170   00FF7F  2A                 	db	42
 10171   00FF80  2B                 	db	43
 10172   00FF81  2C                 	db	44
 10173   00FF82  3A                 	db	58	;':'
 10174   00FF83  3B                 	db	59	;';'
 10175   00FF84  3C                 	db	60	;'<'
 10176   00FF85  3D                 	db	61	;'='
 10177   00FF86  3E                 	db	62	;'>'
 10178   00FF87  5B                 	db	91	;'['
 10179   00FF88  5D                 	db	93	;']'
 10180   00FF89  7C                 	db	124
 10181   00FF8A  22                 	db	34
 10182   00FF8B  3F                 	db	63	;'?'
 10183   00FF8C  7F                 	db	127
 10184   00FF8D  00                 	db	0
 10185   00FF8E                     STR_51:
 10186   00FF8E  4E                 	db	78	;'N'
 10187   00FF8F  6F                 	db	111	;'o'
 10188   00FF90  20                 	db	32
 10189   00FF91  53                 	db	83	;'S'
 10190   00FF92  44                 	db	68	;'D'
 10191   00FF93  20                 	db	32
 10192   00FF94  43                 	db	67	;'C'
 10193   00FF95  61                 	db	97	;'a'
 10194   00FF96  72                 	db	114	;'r'
 10195   00FF97  64                 	db	100	;'d'
 10196   00FF98  3F                 	db	63	;'?'
 10197   00FF99  0A                 	db	10
 10198   00FF9A  0D                 	db	13
 10199   00FF9B  00                 	db	0
 10200   00FF9C                     STR_35:
 10201   00FF9C  25                 	db	37
 10202   00FF9D  64                 	db	100	;'d'
 10203   00FF9E  3A                 	db	58	;':'
 10204   00FF9F  20                 	db	32
 10205   00FFA0  25                 	db	37
 10206   00FFA1  73                 	db	115	;'s'
 10207   00FFA2  0A                 	db	10
 10208   00FFA3  0D                 	db	13
 10209   00FFA4  00                 	db	0
 10210   00FFA5                     STR_37:
 10211   00FFA5  53                 	db	83	;'S'
 10212   00FFA6  65                 	db	101	;'e'
 10213   00FFA7  6C                 	db	108	;'l'
 10214   00FFA8  65                 	db	101	;'e'
 10215   00FFA9  63                 	db	99	;'c'
 10216   00FFAA  74                 	db	116	;'t'
 10217   00FFAB  3A                 	db	58	;':'
 10218   00FFAC  20                 	db	32
 10219   00FFAD  00                 	db	0
 10220   00FFAE                     STR_33:
 10221   00FFAE  43                 	db	67	;'C'
 10222   00FFAF  50                 	db	80	;'P'
 10223   00FFB0  4D                 	db	77	;'M'
 10224   00FFB1  44                 	db	68	;'D'
 10225   00FFB2  49                 	db	73	;'I'
 10226   00FFB3  53                 	db	83	;'S'
 10227   00FFB4  4B                 	db	75	;'K'
 10228   00FFB5  53                 	db	83	;'S'
 10229   00FFB6  00                 	db	0
 10230   00FFB7                     STR_29:
 10231   00FFB7  46                 	db	70	;'F'
 10232   00FFB8  41                 	db	65	;'A'
 10233   00FFB9  54                 	db	84	;'T'
 10234   00FFBA  33                 	db	51	;'3'
 10235   00FFBB  32                 	db	50	;'2'
 10236   00FFBC  20                 	db	32
 10237   00FFBD  20                 	db	32
 10238   00FFBE  20                 	db	32
 10239   00FFBF  00                 	db	0
 10240   00FFC0                     STR_22:
 10241   00FFC0  25                 	db	37
 10242   00FFC1  73                 	db	115	;'s'
 10243   00FFC2  25                 	db	37
 10244   00FFC3  30                 	db	48	;'0'
 10245   00FFC4  36                 	db	54	;'6'
 10246   00FFC5  6C                 	db	108	;'l'
 10247   00FFC6  78                 	db	120	;'x'
 10248   00FFC7  3A                 	db	58	;':'
 10249   00FFC8  00                 	db	0
 10250   00FFC9                     STR_34:
 10251   00FFC9  43                 	db	67	;'C'
 10252   00FFCA  50                 	db	80	;'P'
 10253   00FFCB  4D                 	db	77	;'M'
 10254   00FFCC  44                 	db	68	;'D'
 10255   00FFCD  49                 	db	73	;'I'
 10256   00FFCE  53                 	db	83	;'S'
 10257   00FFCF  7E                 	db	126
 10258   00FFD0  00                 	db	0
 10259   00FFD1                     STR_19:
 10260   00FFD1  25                 	db	37
 10261   00FFD2  73                 	db	115	;'s'
 10262   00FFD3  25                 	db	37
 10263   00FFD4  30                 	db	48	;'0'
 10264   00FFD5  34                 	db	52	;'4'
 10265   00FFD6  78                 	db	120	;'x'
 10266   00FFD7  3A                 	db	58	;':'
 10267   00FFD8  00                 	db	0
 10268   00FFD9                     STR_97:
 10269   00FFD9  28                 	db	40
 10270   00FFDA  6E                 	db	110	;'n'
 10271   00FFDB  75                 	db	117	;'u'
 10272   00FFDC  6C                 	db	108	;'l'
 10273   00FFDD  6C                 	db	108	;'l'
 10274   00FFDE  29                 	db	41
 10275   00FFDF  00                 	db	0
 10276   00FFE0                     STR_20:
 10277   00FFE0  20                 	db	32
 10278   00FFE1  25                 	db	37
 10279   00FFE2  30                 	db	48	;'0'
 10280   00FFE3  32                 	db	50	;'2'
 10281   00FFE4  78                 	db	120	;'x'
 10282   00FFE5  00                 	db	0
 10283   00FFE6                     STR_13:
 10284   00FFE6  66                 	db	102	;'f'
 10285   00FFE7  61                 	db	97	;'a'
 10286   00FFE8  74                 	db	116	;'t'
 10287   00FFE9  3A                 	db	58	;':'
 10288   00FFEA  20                 	db	32
 10289   00FFEB  00                 	db	0
 10290   00FFEC                     STR_77:
 10291   00FFEC  53                 	db	83	;'S'
 10292   00FFED  44                 	db	68	;'D'
 10293   00FFEE  3A                 	db	58	;':'
 10294   00FFEF  20                 	db	32
 10295   00FFF0  00                 	db	0
 10296   00FFF1                     STR_88:
 10297   00FFF1  30                 	db	48	;'0'
 10298   00FFF2  3A                 	db	58	;':'
 10299   00FFF3  2F                 	db	47
 10300   00FFF4  2F                 	db	47
 10301   00FFF5  00                 	db	0
 10302   00FFF6                     STR_91:
 10303   00FFF6  69                 	db	105	;'i'
 10304   00FFF7  6E                 	db	110	;'n'
 10305   00FFF8  66                 	db	102	;'f'
 10306   00FFF9  00                 	db	0
 10307   00FFFA                     STR_94:
 10308   00FFFA  6E                 	db	110	;'n'
 10309   00FFFB  61                 	db	97	;'a'
 10310   00FFFC  6E                 	db	110	;'n'
 10311   00FFFD  00                 	db	0
 10312   00FFFE  00                 	db	0	; dummy byte at the end
 10313   000000                     
 10314                           ; #config settings
 10315                           
 10316                           	psect	cinit
 10317   019508                     __pcinit:
 10318                           	callstack 0
 10319   019508                     start_initialization:
 10320                           	callstack 0
 10321   019508                     __initialization:
 10322                           	callstack 0
 10323                           
 10324                           ; Initialize objects allocated to BANK8 (64 bytes)
 10325                           ; load TBLPTR registers with __pidataBANK8
 10326   019508  0E22               	movlw	low __pidataBANK8
 10327   01950A  6EF6               	movwf	tblptrl,c
 10328   01950C  0E9C               	movlw	high __pidataBANK8
 10329   01950E  6EF7               	movwf	tblptrh,c
 10330   019510  0E01               	movlw	low (__pidataBANK8 shr (0+16))
 10331   019512  6EF8               	movwf	tblptru,c
 10332   019514  EE02  F080         	lfsr	0,__pdataBANK8
 10333   019518  EE10 F040          	lfsr	1,64
 10334   01951C                     copy_data0:
 10335   01951C  0009               	tblrd		*+
 10336   01951E  C4F5 F4EE          	movff	tablat,postinc0
 10337   019522  50E5               	movf	postdec1,w,c
 10338   019524  50E1               	movf	fsr1l,w,c
 10339   019526  E1FA               	bnz	copy_data0
 10340                           
 10341                           ; Initialize objects allocated to BANK7 (7 bytes)
 10342                           ; load TBLPTR registers with __pidataBANK7
 10343   019528  0EF0               	movlw	low __pidataBANK7
 10344   01952A  6EF6               	movwf	tblptrl,c
 10345   01952C  0E9F               	movlw	high __pidataBANK7
 10346   01952E  6EF7               	movwf	tblptrh,c
 10347   019530  0E01               	movlw	low (__pidataBANK7 shr (0+16))
 10348   019532  6EF8               	movwf	tblptru,c
 10349   019534  EE01  F3D5         	lfsr	0,__pdataBANK7
 10350   019538  EE10 F007          	lfsr	1,7
 10351   01953C                     copy_data1:
 10352   01953C  0009               	tblrd		*+
 10353   01953E  C4F5 F4EE          	movff	tablat,postinc0
 10354   019542  50E5               	movf	postdec1,w,c
 10355   019544  50E1               	movf	fsr1l,w,c
 10356   019546  E1FA               	bnz	copy_data1
 10357                           
 10358                           ; Clear objects allocated to BIGRAM (4348 bytes)
 10359   019548  EE02  F0C0         	lfsr	0,__pbssBIGRAM
 10360   01954C  EE14 F0FC          	lfsr	1,4348
 10361   019550                     clear_0:
 10362   019550  6AEE               	clrf	postinc0,c
 10363   019552  50E5               	movf	postdec1,w,c
 10364   019554  50E1               	movf	fsr1l,w,c
 10365   019556  E1FC               	bnz	clear_0
 10366   019558  50E2               	movf	fsr1h,w,c
 10367   01955A  E1FA               	bnz	clear_0
 10368                           
 10369                           ; Clear objects allocated to BANK8 (128 bytes)
 10370   01955C  EE02  F000         	lfsr	0,__pbssBANK8
 10371   019560  0E80               	movlw	128
 10372   019562                     clear_1:
 10373   019562  6AEE               	clrf	postinc0,c
 10374   019564  06E8               	decf	wreg,f,c
 10375   019566  E1FD               	bnz	clear_1
 10376                           
 10377                           ; Clear objects allocated to BANK7 (191 bytes)
 10378   019568  EE01  F300         	lfsr	0,__pbssBANK7
 10379   01956C  0EBF               	movlw	191
 10380   01956E                     clear_2:
 10381   01956E  6AEE               	clrf	postinc0,c
 10382   019570  06E8               	decf	wreg,f,c
 10383   019572  E1FD               	bnz	clear_2
 10384   019574                     end_of_initialization:
 10385                           	callstack 0
 10386   019574                     __end_of__initialization:
 10387                           	callstack 0
 10388   019574  0100               	movlb	0
 10389   019576  EFF7  F0AC         	goto	_main	;jump to C main() function
 10390                           
 10391                           	psect	bssBANK7
 10392   000700                     __pbssBANK7:
 10393                           	callstack 0
 10394   000700                     _debug:
 10395                           	callstack 0
 10396   000700                     	ds	6
 10397   000706                     _ctx_:
 10398                           	callstack 0
 10399   000706                     	ds	5
 10400   00070B                     floorf@F521:
 10401                           	callstack 0
 10402   00070B                     	ds	4
 10403   00070F                     ___fpclassifyf@F465:
 10404                           	callstack 0
 10405   00070F                     	ds	4
 10406   000713                     _width:
 10407                           	callstack 0
 10408   000713                     	ds	2
 10409   000715                     _prec:
 10410                           	callstack 0
 10411   000715                     	ds	2
 10412   000717                     	ds	2
 10413   000719                     disk_io_handle@disk_datap:
 10414                           	callstack 0
 10415   000719                     	ds	2
 10416   00071B                     disk_io_handle@disk_sector:
 10417                           	callstack 0
 10418   00071B                     	ds	2
 10419   00071D                     SD_init@retry:
 10420                           	callstack 0
 10421   00071D                     	ds	2
 10422   00071F                     _num_files:
 10423                           	callstack 0
 10424   00071F                     	ds	2
 10425   000721                     _Fsid:
 10426                           	callstack 0
 10427   000721                     	ds	2
 10428   000723                     _FatFs:
 10429                           	callstack 0
 10430   000723                     	ds	2
 10431   000725                     	ds	2
 10432   000727                     _flags:
 10433                           	callstack 0
 10434   000727                     	ds	1
 10435   000728                     disk_io_handle@disk_dmah:
 10436                           	callstack 0
 10437   000728                     	ds	1
 10438   000729                     disk_io_handle@disk_dmal:
 10439                           	callstack 0
 10440   000729                     	ds	1
 10441   00072A                     disk_io_handle@disk_track:
 10442                           	callstack 0
 10443   00072A                     	ds	1
 10444   00072B                     disk_io_handle@disk_drive:
 10445                           	callstack 0
 10446   00072B                     	ds	1
 10447   00072C                     _io_addr:
 10448                           	callstack 0
 10449   00072C                     	ds	1
 10450   00072D                     _dbuf:
 10451                           	callstack 0
 10452   00072D                     	ds	80
 10453   00077D                     _fsdir:
 10454                           	callstack 0
 10455   00077D                     	ds	40
 10456   0007A5                     _fileinfo:
 10457                           	callstack 0
 10458   0007A5                     	ds	22
 10459   0007BB                     _pic18f47q43_spi_ctx:
 10460                           	callstack 0
 10461   0007BB                     	ds	4
 10462                           
 10463                           	psect	dataBANK7
 10464   0007D5                     __pdataBANK7:
 10465                           	callstack 0
 10466   0007D5                     _start_lba:
 10467                           	callstack 0
 10468   0007D5                     	ds	4
 10469   0007D9                     _SPI_SD_ctx:
 10470                           	callstack 0
 10471   0007D9                     	ds	2
 10472   0007DB                     _disk_stat:
 10473                           	callstack 0
 10474   0007DB                     	ds	1
 10475                           
 10476                           	psect	bssBANK8
 10477   000800                     __pbssBANK8:
 10478                           	callstack 0
 10479   000800                     _disk_buf:
 10480                           	callstack 0
 10481   000800                     	ds	128
 10482                           
 10483                           	psect	dataBANK8
 10484   000880                     __pdataBANK8:
 10485                           	callstack 0
 10486   000880                     _drives:
 10487                           	callstack 0
 10488   000880                     	ds	64
 10489                           
 10490                           	psect	bssBIGRAM
 10491   0008C0                     __pbssBIGRAM:
 10492                           	callstack 0
 10493   0008C0                     _files:
 10494                           	callstack 0
 10495   0008C0                     	ds	3276
 10496   00158C                     _fs:
 10497                           	callstack 0
 10498   00158C                     	ds	560
 10499   0017BC                     _tmp_buf:
 10500                           	callstack 0
 10501   0017BC                     	ds	512
 10502                           
 10503                           	psect	cstackBANK7
 10504   0007BF                     __pcstackBANK7:
 10505                           	callstack 0
 10506   0007BF                     ?_menu_select:
 10507                           	callstack 0
 10508                           
 10509                           ; 2 bytes @ 0x0
 10510   0007BF                     	ds	2
 10511   0007C1                     ??_menu_select:
 10512                           
 10513                           ; 1 bytes @ 0x2
 10514   0007C1                     	ds	4
 10515   0007C5                     _menu_select$3971:
 10516                           	callstack 0
 10517                           
 10518                           ; 2 bytes @ 0x6
 10519   0007C5                     	ds	2
 10520   0007C7                     menu_select@buf:
 10521                           	callstack 0
 10522                           
 10523                           ; 2 bytes @ 0x8
 10524   0007C7                     	ds	2
 10525   0007C9                     menu_select@drive:
 10526                           	callstack 0
 10527                           
 10528                           ; 2 bytes @ 0xA
 10529   0007C9                     	ds	2
 10530   0007CB                     menu_select@drive_letter:
 10531                           	callstack 0
 10532                           
 10533                           ; 1 bytes @ 0xC
 10534   0007CB                     	ds	1
 10535   0007CC                     menu_select@selection:
 10536                           	callstack 0
 10537                           
 10538                           ; 2 bytes @ 0xD
 10539   0007CC                     	ds	2
 10540   0007CE                     menu_select@i:
 10541                           	callstack 0
 10542                           
 10543                           ; 2 bytes @ 0xF
 10544   0007CE                     	ds	2
 10545   0007D0                     menu_select@c:
 10546                           	callstack 0
 10547                           
 10548                           ; 1 bytes @ 0x11
 10549   0007D0                     	ds	1
 10550   0007D1                     _main$3972:
 10551                           	callstack 0
 10552                           
 10553                           ; 4 bytes @ 0x12
 10554   0007D1                     	ds	4
 10555                           
 10556                           	psect	cstackBANK6
 10557   000600                     __pcstackBANK6:
 10558                           	callstack 0
 10559   000600                     move_window@fs:
 10560                           	callstack 0
 10561   000600                     sync_fs@fs:
 10562                           	callstack 0
 10563   000600                     dir_clear@fs:
 10564                           	callstack 0
 10565   000600                     disk_initialize@buf:
 10566                           	callstack 0
 10567                           
 10568                           ; 128 bytes @ 0x0
 10569   000600                     	ds	2
 10570   000602                     ??_sync_fs:
 10571   000602                     move_window@sect:
 10572                           	callstack 0
 10573   000602                     dir_clear@clst:
 10574                           	callstack 0
 10575                           
 10576                           ; 4 bytes @ 0x2
 10577   000602                     	ds	4
 10578   000606                     
 10579                           ; 1 bytes @ 0x6
 10580   000606                     	ds	2
 10581   000608                     dir_clear@ibuf:
 10582                           	callstack 0
 10583                           
 10584                           ; 2 bytes @ 0x8
 10585   000608                     	ds	2
 10586   00060A                     ?_check_fs:
 10587                           	callstack 0
 10588   00060A                     ?_get_fat:
 10589                           	callstack 0
 10590   00060A                     get_fat@obj:
 10591                           	callstack 0
 10592   00060A                     put_fat@fs:
 10593                           	callstack 0
 10594   00060A                     check_fs@fs:
 10595                           	callstack 0
 10596   00060A                     f_sync@fp:
 10597                           	callstack 0
 10598   00060A                     dir_clear@sect:
 10599                           	callstack 0
 10600                           
 10601                           ; 4 bytes @ 0xA
 10602   00060A                     	ds	2
 10603   00060C                     get_fat@clst:
 10604                           	callstack 0
 10605   00060C                     put_fat@clst:
 10606                           	callstack 0
 10607   00060C                     check_fs@sect:
 10608                           	callstack 0
 10609   00060C                     f_sync@tm:
 10610                           	callstack 0
 10611                           
 10612                           ; 4 bytes @ 0xC
 10613   00060C                     	ds	2
 10614   00060E                     dir_clear@szb:
 10615                           	callstack 0
 10616                           
 10617                           ; 2 bytes @ 0xE
 10618   00060E                     	ds	2
 10619   000610                     ??_get_fat:
 10620   000610                     ??_check_fs:
 10621   000610                     f_sync@res:
 10622                           	callstack 0
 10623   000610                     dir_clear@n:
 10624                           	callstack 0
 10625   000610                     put_fat@val:
 10626                           	callstack 0
 10627                           
 10628                           ; 4 bytes @ 0x10
 10629   000610                     	ds	1
 10630   000611                     f_sync@dir:
 10631                           	callstack 0
 10632                           
 10633                           ; 2 bytes @ 0x11
 10634   000611                     	ds	2
 10635   000613                     check_fs@sign:
 10636                           	callstack 0
 10637   000613                     f_sync@fs:
 10638                           	callstack 0
 10639                           
 10640                           ; 2 bytes @ 0x13
 10641   000613                     	ds	1
 10642   000614                     ??_put_fat:
 10643                           
 10644                           ; 1 bytes @ 0x14
 10645   000614                     	ds	1
 10646   000615                     check_fs@w:
 10647                           	callstack 0
 10648                           
 10649                           ; 2 bytes @ 0x15
 10650   000615                     	ds	2
 10651   000617                     check_fs@b:
 10652                           	callstack 0
 10653                           
 10654                           ; 1 bytes @ 0x17
 10655   000617                     	ds	1
 10656   000618                     ?_find_volume:
 10657                           	callstack 0
 10658   000618                     _get_fat$406:
 10659                           	callstack 0
 10660   000618                     find_volume@fs:
 10661                           	callstack 0
 10662                           
 10663                           ; 2 bytes @ 0x18
 10664   000618                     	ds	2
 10665   00061A                     find_volume@part:
 10666                           	callstack 0
 10667   00061A                     get_fat@val:
 10668                           	callstack 0
 10669                           
 10670                           ; 4 bytes @ 0x1A
 10671   00061A                     	ds	2
 10672   00061C                     ??_find_volume:
 10673                           
 10674                           ; 1 bytes @ 0x1C
 10675   00061C                     	ds	2
 10676   00061E                     get_fat@wc:
 10677                           	callstack 0
 10678                           
 10679                           ; 2 bytes @ 0x1E
 10680   00061E                     	ds	2
 10681   000620                     get_fat@bc:
 10682                           	callstack 0
 10683                           
 10684                           ; 2 bytes @ 0x20
 10685   000620                     	ds	2
 10686   000622                     get_fat@fs:
 10687                           	callstack 0
 10688   000622                     _put_fat$435:
 10689                           	callstack 0
 10690   000622                     find_volume@mbr_pt:
 10691                           	callstack 0
 10692                           
 10693                           ; 16 bytes @ 0x22
 10694   000622                     	ds	2
 10695   000624                     _put_fat$436:
 10696                           	callstack 0
 10697   000624                     dir_sdi@dp:
 10698                           	callstack 0
 10699   000624                     f_read@fp:
 10700                           	callstack 0
 10701                           
 10702                           ; 2 bytes @ 0x24
 10703   000624                     	ds	2
 10704   000626                     put_fat@p:
 10705                           	callstack 0
 10706   000626                     f_read@buff:
 10707                           	callstack 0
 10708   000626                     dir_sdi@ofs:
 10709                           	callstack 0
 10710                           
 10711                           ; 4 bytes @ 0x26
 10712   000626                     	ds	2
 10713   000628                     put_fat@bc:
 10714                           	callstack 0
 10715   000628                     f_read@btr:
 10716                           	callstack 0
 10717                           
 10718                           ; 2 bytes @ 0x28
 10719   000628                     	ds	2
 10720   00062A                     ??_dir_sdi:
 10721   00062A                     put_fat@res:
 10722                           	callstack 0
 10723   00062A                     f_read@br:
 10724                           	callstack 0
 10725                           
 10726                           ; 2 bytes @ 0x2A
 10727   00062A                     	ds	1
 10728   00062B                     ?_create_chain:
 10729                           	callstack 0
 10730   00062B                     remove_chain@obj:
 10731                           	callstack 0
 10732   00062B                     create_chain@obj:
 10733                           	callstack 0
 10734                           
 10735                           ; 2 bytes @ 0x2B
 10736   00062B                     	ds	1
 10737   00062C                     ??_f_read:
 10738                           
 10739                           ; 1 bytes @ 0x2C
 10740   00062C                     	ds	1
 10741   00062D                     remove_chain@clst:
 10742                           	callstack 0
 10743   00062D                     create_chain@clst:
 10744                           	callstack 0
 10745                           
 10746                           ; 4 bytes @ 0x2D
 10747   00062D                     	ds	4
 10748   000631                     ??_create_chain:
 10749   000631                     remove_chain@pclst:
 10750                           	callstack 0
 10751                           
 10752                           ; 4 bytes @ 0x31
 10753   000631                     	ds	1
 10754   000632                     find_volume@fmt:
 10755                           	callstack 0
 10756                           
 10757                           ; 2 bytes @ 0x32
 10758   000632                     	ds	2
 10759   000634                     find_volume@i:
 10760                           	callstack 0
 10761   000634                     dir_sdi@csz:
 10762                           	callstack 0
 10763                           
 10764                           ; 4 bytes @ 0x34
 10765   000634                     	ds	1
 10766   000635                     ??_remove_chain:
 10767                           
 10768                           ; 1 bytes @ 0x35
 10769   000635                     	ds	3
 10770   000638                     dir_sdi@clst:
 10771                           	callstack 0
 10772   000638                     f_read@remain:
 10773                           	callstack 0
 10774                           
 10775                           ; 4 bytes @ 0x38
 10776   000638                     	ds	1
 10777   000639                     create_chain@res:
 10778                           	callstack 0
 10779                           
 10780                           ; 1 bytes @ 0x39
 10781   000639                     	ds	1
 10782   00063A                     create_chain@scl:
 10783                           	callstack 0
 10784                           
 10785                           ; 4 bytes @ 0x3A
 10786   00063A                     	ds	2
 10787   00063C                     f_read@res:
 10788                           	callstack 0
 10789   00063C                     dir_sdi@fs:
 10790                           	callstack 0
 10791                           
 10792                           ; 2 bytes @ 0x3C
 10793   00063C                     	ds	1
 10794   00063D                     remove_chain@nxt:
 10795                           	callstack 0
 10796   00063D                     f_read@clst:
 10797                           	callstack 0
 10798                           
 10799                           ; 4 bytes @ 0x3D
 10800   00063D                     	ds	1
 10801   00063E                     create_chain@ncl:
 10802                           	callstack 0
 10803                           
 10804                           ; 4 bytes @ 0x3E
 10805   00063E                     	ds	3
 10806   000641                     remove_chain@res:
 10807                           	callstack 0
 10808   000641                     f_read@rbuff:
 10809                           	callstack 0
 10810                           
 10811                           ; 2 bytes @ 0x41
 10812   000641                     	ds	1
 10813   000642                     remove_chain@fs:
 10814                           	callstack 0
 10815   000642                     create_chain@fs:
 10816                           	callstack 0
 10817                           
 10818                           ; 2 bytes @ 0x42
 10819   000642                     	ds	1
 10820   000643                     f_read@csect:
 10821                           	callstack 0
 10822                           
 10823                           ; 2 bytes @ 0x43
 10824   000643                     	ds	1
 10825   000644                     create_chain@cs:
 10826                           	callstack 0
 10827                           
 10828                           ; 4 bytes @ 0x44
 10829   000644                     	ds	1
 10830   000645                     f_read@cc:
 10831                           	callstack 0
 10832                           
 10833                           ; 2 bytes @ 0x45
 10834   000645                     	ds	2
 10835   000647                     f_read@rcnt:
 10836                           	callstack 0
 10837                           
 10838                           ; 2 bytes @ 0x47
 10839   000647                     	ds	1
 10840   000648                     dir_next@dp:
 10841                           	callstack 0
 10842   000648                     f_write@fp:
 10843                           	callstack 0
 10844   000648                     f_lseek@fp:
 10845                           	callstack 0
 10846                           
 10847                           ; 2 bytes @ 0x48
 10848   000648                     	ds	1
 10849   000649                     f_read@sect:
 10850                           	callstack 0
 10851                           
 10852                           ; 4 bytes @ 0x49
 10853   000649                     	ds	1
 10854   00064A                     dir_next@stretch:
 10855                           	callstack 0
 10856   00064A                     f_write@buff:
 10857                           	callstack 0
 10858   00064A                     f_lseek@ofs:
 10859                           	callstack 0
 10860                           
 10861                           ; 4 bytes @ 0x4A
 10862   00064A                     	ds	2
 10863   00064C                     ??_dir_next:
 10864   00064C                     f_write@btw:
 10865                           	callstack 0
 10866                           
 10867                           ; 2 bytes @ 0x4C
 10868   00064C                     	ds	1
 10869   00064D                     f_read@fs:
 10870                           	callstack 0
 10871                           
 10872                           ; 2 bytes @ 0x4D
 10873   00064D                     	ds	1
 10874   00064E                     ??_f_lseek:
 10875   00064E                     f_write@bw:
 10876                           	callstack 0
 10877                           
 10878                           ; 2 bytes @ 0x4E
 10879   00064E                     	ds	2
 10880   000650                     ??_f_write:
 10881                           
 10882                           ; 1 bytes @ 0x50
 10883   000650                     	ds	8
 10884   000658                     dir_next@ofs:
 10885                           	callstack 0
 10886                           
 10887                           ; 4 bytes @ 0x58
 10888   000658                     	ds	4
 10889   00065C                     dir_next@fs:
 10890                           	callstack 0
 10891   00065C                     _f_write$1360:
 10892                           	callstack 0
 10893                           
 10894                           ; 4 bytes @ 0x5C
 10895   00065C                     	ds	2
 10896   00065E                     dir_next@clst:
 10897                           	callstack 0
 10898   00065E                     f_lseek@ifptr:
 10899                           	callstack 0
 10900                           
 10901                           ; 4 bytes @ 0x5E
 10902   00065E                     	ds	2
 10903   000660                     f_write@res:
 10904                           	callstack 0
 10905                           
 10906                           ; 1 bytes @ 0x60
 10907   000660                     	ds	1
 10908   000661                     f_write@wbuff:
 10909                           	callstack 0
 10910                           
 10911                           ; 2 bytes @ 0x61
 10912   000661                     	ds	1
 10913   000662                     dir_alloc@dp:
 10914                           	callstack 0
 10915   000662                     dir_read@dp:
 10916                           	callstack 0
 10917   000662                     dir_find@dp:
 10918                           	callstack 0
 10919   000662                     f_lseek@nsect:
 10920                           	callstack 0
 10921                           
 10922                           ; 4 bytes @ 0x62
 10923   000662                     	ds	1
 10924   000663                     f_write@csect:
 10925                           	callstack 0
 10926                           
 10927                           ; 2 bytes @ 0x63
 10928   000663                     	ds	1
 10929   000664                     ??_dir_find:
 10930   000664                     dir_alloc@n_ent:
 10931                           	callstack 0
 10932   000664                     dir_read@vol:
 10933                           	callstack 0
 10934                           
 10935                           ; 2 bytes @ 0x64
 10936   000664                     	ds	1
 10937   000665                     f_write@cc:
 10938                           	callstack 0
 10939                           
 10940                           ; 2 bytes @ 0x65
 10941   000665                     	ds	1
 10942   000666                     ??_dir_alloc:
 10943   000666                     ??_dir_read:
 10944   000666                     f_lseek@res:
 10945                           	callstack 0
 10946   000666                     dir_find@fs:
 10947                           	callstack 0
 10948                           
 10949                           ; 2 bytes @ 0x66
 10950   000666                     	ds	1
 10951   000667                     f_write@clst:
 10952                           	callstack 0
 10953   000667                     f_lseek@bcs:
 10954                           	callstack 0
 10955                           
 10956                           ; 4 bytes @ 0x67
 10957   000667                     	ds	1
 10958   000668                     dir_find@c:
 10959                           	callstack 0
 10960                           
 10961                           ; 1 bytes @ 0x68
 10962   000668                     	ds	1
 10963   000669                     dir_find@res:
 10964                           	callstack 0
 10965   000669                     dir_alloc@fs:
 10966                           	callstack 0
 10967                           
 10968                           ; 2 bytes @ 0x69
 10969   000669                     	ds	1
 10970   00066A                     dir_read@fs:
 10971                           	callstack 0
 10972   00066A                     follow_path@dp:
 10973                           	callstack 0
 10974                           
 10975                           ; 2 bytes @ 0x6A
 10976   00066A                     	ds	1
 10977   00066B                     dir_alloc@n:
 10978                           	callstack 0
 10979   00066B                     f_write@wcnt:
 10980                           	callstack 0
 10981   00066B                     f_lseek@fs:
 10982                           	callstack 0
 10983                           
 10984                           ; 2 bytes @ 0x6B
 10985   00066B                     	ds	1
 10986   00066C                     dir_read@attr:
 10987                           	callstack 0
 10988   00066C                     follow_path@path:
 10989                           	callstack 0
 10990                           
 10991                           ; 2 bytes @ 0x6C
 10992   00066C                     	ds	1
 10993   00066D                     dir_alloc@res:
 10994                           	callstack 0
 10995   00066D                     dir_read@b:
 10996                           	callstack 0
 10997   00066D                     f_write@sect:
 10998                           	callstack 0
 10999   00066D                     f_lseek@clst:
 11000                           	callstack 0
 11001                           
 11002                           ; 4 bytes @ 0x6D
 11003   00066D                     	ds	1
 11004   00066E                     ??_follow_path:
 11005   00066E                     dir_read@res:
 11006                           	callstack 0
 11007   00066E                     dir_register@dp:
 11008                           	callstack 0
 11009                           
 11010                           ; 2 bytes @ 0x6E
 11011   00066E                     	ds	1
 11012   00066F                     f_readdir@dp:
 11013                           	callstack 0
 11014                           
 11015                           ; 2 bytes @ 0x6F
 11016   00066F                     	ds	1
 11017   000670                     dir_register@fs:
 11018                           	callstack 0
 11019                           
 11020                           ; 2 bytes @ 0x70
 11021   000670                     	ds	1
 11022   000671                     f_write@fs:
 11023                           	callstack 0
 11024   000671                     f_readdir@fno:
 11025                           	callstack 0
 11026                           
 11027                           ; 2 bytes @ 0x71
 11028   000671                     	ds	1
 11029   000672                     dir_register@res:
 11030                           	callstack 0
 11031                           
 11032                           ; 1 bytes @ 0x72
 11033   000672                     	ds	1
 11034   000673                     ??_disk_io_handle:
 11035   000673                     f_readdir@fs:
 11036                           	callstack 0
 11037                           
 11038                           ; 2 bytes @ 0x73
 11039   000673                     	ds	1
 11040   000674                     follow_path@fs:
 11041                           	callstack 0
 11042                           
 11043                           ; 2 bytes @ 0x74
 11044   000674                     	ds	1
 11045   000675                     f_readdir@res:
 11046                           	callstack 0
 11047                           
 11048                           ; 1 bytes @ 0x75
 11049   000675                     	ds	1
 11050   000676                     follow_path@ns:
 11051                           	callstack 0
 11052                           
 11053                           ; 1 bytes @ 0x76
 11054   000676                     	ds	1
 11055   000677                     follow_path@res:
 11056                           	callstack 0
 11057   000677                     disk_io_handle@addr:
 11058                           	callstack 0
 11059                           
 11060                           ; 2 bytes @ 0x77
 11061   000677                     	ds	2
 11062   000679                     disk_io_handle@addr_2171:
 11063                           	callstack 0
 11064                           
 11065                           ; 2 bytes @ 0x79
 11066   000679                     	ds	2
 11067   00067B                     disk_io_handle@sector:
 11068                           	callstack 0
 11069                           
 11070                           ; 4 bytes @ 0x7B
 11071   00067B                     	ds	4
 11072   00067F                     disk_io_handle@filep:
 11073                           	callstack 0
 11074                           
 11075                           ; 2 bytes @ 0x7F
 11076   00067F                     	ds	1
 11077   000680                     disk_initialize@pdrv:
 11078                           	callstack 0
 11079                           
 11080                           ; 1 bytes @ 0x80
 11081   000680                     	ds	1
 11082   000681                     disk_io_handle@fres:
 11083                           	callstack 0
 11084   000681                     mount_volume@path:
 11085                           	callstack 0
 11086                           
 11087                           ; 2 bytes @ 0x81
 11088   000681                     	ds	1
 11089   000682                     disk_io_handle@n:
 11090                           	callstack 0
 11091                           
 11092                           ; 2 bytes @ 0x82
 11093   000682                     	ds	1
 11094   000683                     mount_volume@rfs:
 11095                           	callstack 0
 11096                           
 11097                           ; 2 bytes @ 0x83
 11098   000683                     	ds	2
 11099   000685                     mount_volume@mode:
 11100                           	callstack 0
 11101                           
 11102                           ; 1 bytes @ 0x85
 11103   000685                     	ds	1
 11104   000686                     ??_mount_volume:
 11105                           
 11106                           ; 1 bytes @ 0x86
 11107   000686                     	ds	8
 11108   00068E                     mount_volume@szbfat:
 11109                           	callstack 0
 11110                           
 11111                           ; 4 bytes @ 0x8E
 11112   00068E                     	ds	4
 11113   000692                     mount_volume@vol:
 11114                           	callstack 0
 11115                           
 11116                           ; 2 bytes @ 0x92
 11117   000692                     	ds	2
 11118   000694                     mount_volume@sysect:
 11119                           	callstack 0
 11120                           
 11121                           ; 4 bytes @ 0x94
 11122   000694                     	ds	4
 11123   000698                     mount_volume@nrsv:
 11124                           	callstack 0
 11125                           
 11126                           ; 2 bytes @ 0x98
 11127   000698                     	ds	2
 11128   00069A                     mount_volume@tsect:
 11129                           	callstack 0
 11130                           
 11131                           ; 4 bytes @ 0x9A
 11132   00069A                     	ds	4
 11133   00069E                     mount_volume@bsect:
 11134                           	callstack 0
 11135                           
 11136                           ; 4 bytes @ 0x9E
 11137   00069E                     	ds	4
 11138   0006A2                     mount_volume@stat:
 11139                           	callstack 0
 11140                           
 11141                           ; 1 bytes @ 0xA2
 11142   0006A2                     	ds	1
 11143   0006A3                     mount_volume@nclst:
 11144                           	callstack 0
 11145                           
 11146                           ; 4 bytes @ 0xA3
 11147   0006A3                     	ds	4
 11148   0006A7                     mount_volume@fasize:
 11149                           	callstack 0
 11150                           
 11151                           ; 4 bytes @ 0xA7
 11152   0006A7                     	ds	4
 11153   0006AB                     mount_volume@fmt:
 11154                           	callstack 0
 11155                           
 11156                           ; 2 bytes @ 0xAB
 11157   0006AB                     	ds	2
 11158   0006AD                     mount_volume@fs:
 11159                           	callstack 0
 11160                           
 11161                           ; 2 bytes @ 0xAD
 11162   0006AD                     	ds	2
 11163   0006AF                     f_mount@fs:
 11164                           	callstack 0
 11165   0006AF                     f_open@fp:
 11166                           	callstack 0
 11167   0006AF                     f_opendir@dp:
 11168                           	callstack 0
 11169                           
 11170                           ; 2 bytes @ 0xAF
 11171   0006AF                     	ds	2
 11172   0006B1                     f_mount@path:
 11173                           	callstack 0
 11174   0006B1                     f_open@path:
 11175                           	callstack 0
 11176   0006B1                     f_opendir@path:
 11177                           	callstack 0
 11178                           
 11179                           ; 2 bytes @ 0xB1
 11180   0006B1                     	ds	2
 11181   0006B3                     f_mount@opt:
 11182                           	callstack 0
 11183   0006B3                     f_open@mode:
 11184                           	callstack 0
 11185   0006B3                     f_opendir@fs:
 11186                           	callstack 0
 11187                           
 11188                           ; 2 bytes @ 0xB3
 11189   0006B3                     	ds	1
 11190   0006B4                     ??_f_open:
 11191   0006B4                     f_mount@res:
 11192                           	callstack 0
 11193                           
 11194                           ; 1 bytes @ 0xB4
 11195   0006B4                     	ds	1
 11196   0006B5                     f_opendir@res:
 11197                           	callstack 0
 11198   0006B5                     f_mount@rp:
 11199                           	callstack 0
 11200                           
 11201                           ; 2 bytes @ 0xB5
 11202   0006B5                     	ds	2
 11203   0006B7                     f_mount@cfs:
 11204                           	callstack 0
 11205                           
 11206                           ; 2 bytes @ 0xB7
 11207   0006B7                     	ds	2
 11208   0006B9                     f_mount@vol:
 11209                           	callstack 0
 11210                           
 11211                           ; 2 bytes @ 0xB9
 11212   0006B9                     	ds	3
 11213   0006BC                     f_open@bcs:
 11214                           	callstack 0
 11215                           
 11216                           ; 4 bytes @ 0xBC
 11217   0006BC                     	ds	4
 11218   0006C0                     f_open@tm:
 11219                           	callstack 0
 11220                           
 11221                           ; 4 bytes @ 0xC0
 11222   0006C0                     	ds	4
 11223   0006C4                     f_open@cl:
 11224                           	callstack 0
 11225                           
 11226                           ; 4 bytes @ 0xC4
 11227   0006C4                     	ds	4
 11228   0006C8                     f_open@sc:
 11229                           	callstack 0
 11230                           
 11231                           ; 4 bytes @ 0xC8
 11232   0006C8                     	ds	4
 11233   0006CC                     f_open@ofs:
 11234                           	callstack 0
 11235                           
 11236                           ; 4 bytes @ 0xCC
 11237   0006CC                     	ds	4
 11238   0006D0                     f_open@clst:
 11239                           	callstack 0
 11240                           
 11241                           ; 4 bytes @ 0xD0
 11242   0006D0                     	ds	4
 11243   0006D4                     f_open@fs:
 11244                           	callstack 0
 11245                           
 11246                           ; 2 bytes @ 0xD4
 11247   0006D4                     	ds	2
 11248   0006D6                     f_open@res:
 11249                           	callstack 0
 11250                           
 11251                           ; 1 bytes @ 0xD6
 11252   0006D6                     	ds	1
 11253   0006D7                     f_open@dj:
 11254                           	callstack 0
 11255                           
 11256                           ; 40 bytes @ 0xD7
 11257   0006D7                     	ds	40
 11258                           
 11259                           	psect	cstackBANK5
 11260   000560                     __pcstackBANK5:
 11261                           	callstack 0
 11262   000560                     efgtoa@ne:
 11263                           	callstack 0
 11264                           
 11265                           ; 2 bytes @ 0x0
 11266   000560                     	ds	2
 11267   000562                     efgtoa@p:
 11268                           	callstack 0
 11269                           
 11270                           ; 2 bytes @ 0x2
 11271   000562                     	ds	2
 11272   000564                     efgtoa@t:
 11273                           	callstack 0
 11274                           
 11275                           ; 2 bytes @ 0x4
 11276   000564                     	ds	2
 11277   000566                     _efgtoa$3431:
 11278                           	callstack 0
 11279                           
 11280                           ; 2 bytes @ 0x6
 11281   000566                     	ds	2
 11282   000568                     efgtoa@pp:
 11283                           	callstack 0
 11284                           
 11285                           ; 1 bytes @ 0x8
 11286   000568                     	ds	1
 11287   000569                     efgtoa@mode:
 11288                           	callstack 0
 11289                           
 11290                           ; 1 bytes @ 0x9
 11291   000569                     	ds	1
 11292   00056A                     efgtoa@nmode:
 11293                           	callstack 0
 11294                           
 11295                           ; 1 bytes @ 0xA
 11296   00056A                     	ds	1
 11297   00056B                     efgtoa@d:
 11298                           	callstack 0
 11299                           
 11300                           ; 2 bytes @ 0xB
 11301   00056B                     	ds	2
 11302   00056D                     efgtoa@m:
 11303                           	callstack 0
 11304                           
 11305                           ; 2 bytes @ 0xD
 11306   00056D                     	ds	2
 11307   00056F                     efgtoa@e:
 11308                           	callstack 0
 11309                           
 11310                           ; 2 bytes @ 0xF
 11311   00056F                     	ds	2
 11312   000571                     efgtoa@w:
 11313                           	callstack 0
 11314                           
 11315                           ; 2 bytes @ 0x11
 11316   000571                     	ds	2
 11317   000573                     efgtoa@ou:
 11318                           	callstack 0
 11319                           
 11320                           ; 4 bytes @ 0x13
 11321   000573                     	ds	4
 11322   000577                     efgtoa@h:
 11323                           	callstack 0
 11324                           
 11325                           ; 4 bytes @ 0x17
 11326   000577                     	ds	4
 11327   00057B                     efgtoa@l:
 11328                           	callstack 0
 11329                           
 11330                           ; 4 bytes @ 0x1B
 11331   00057B                     	ds	4
 11332   00057F                     efgtoa@i:
 11333                           	callstack 0
 11334                           
 11335                           ; 2 bytes @ 0x1F
 11336   00057F                     	ds	2
 11337   000581                     efgtoa@sign:
 11338                           	callstack 0
 11339                           
 11340                           ; 1 bytes @ 0x21
 11341   000581                     	ds	1
 11342   000582                     efgtoa@g:
 11343                           	callstack 0
 11344                           
 11345                           ; 4 bytes @ 0x22
 11346   000582                     	ds	4
 11347   000586                     efgtoa@n:
 11348                           	callstack 0
 11349                           
 11350                           ; 2 bytes @ 0x26
 11351   000586                     	ds	2
 11352   000588                     efgtoa@u:
 11353                           	callstack 0
 11354                           
 11355                           ; 4 bytes @ 0x28
 11356   000588                     	ds	4
 11357   00058C                     vfpfcnvrt@done:
 11358                           	callstack 0
 11359                           
 11360                           ; 1 bytes @ 0x2C
 11361   00058C                     	ds	1
 11362   00058D                     vfpfcnvrt@convarg:
 11363                           	callstack 0
 11364                           
 11365                           ; 4 bytes @ 0x2D
 11366   00058D                     	ds	4
 11367   000591                     vfpfcnvrt@c:
 11368                           	callstack 0
 11369                           
 11370                           ; 1 bytes @ 0x31
 11371   000591                     	ds	1
 11372   000592                     vfpfcnvrt@cp:
 11373                           	callstack 0
 11374                           
 11375                           ; 2 bytes @ 0x32
 11376   000592                     	ds	2
 11377   000594                     ?_vfprintf:
 11378                           	callstack 0
 11379   000594                     vfprintf@fp:
 11380                           	callstack 0
 11381                           
 11382                           ; 2 bytes @ 0x34
 11383   000594                     	ds	2
 11384   000596                     vfprintf@fmt:
 11385                           	callstack 0
 11386                           
 11387                           ; 2 bytes @ 0x36
 11388   000596                     	ds	2
 11389   000598                     vfprintf@ap:
 11390                           	callstack 0
 11391                           
 11392                           ; 2 bytes @ 0x38
 11393   000598                     	ds	2
 11394   00059A                     ?_printf:
 11395                           	callstack 0
 11396   00059A                     ?_sprintf:
 11397                           	callstack 0
 11398   00059A                     sprintf@s:
 11399                           	callstack 0
 11400   00059A                     printf@fmt:
 11401                           	callstack 0
 11402                           
 11403                           ; 2 bytes @ 0x3A
 11404   00059A                     	ds	2
 11405   00059C                     sprintf@fmt:
 11406                           	callstack 0
 11407                           
 11408                           ; 2 bytes @ 0x3C
 11409   00059C                     	ds	6
 11410   0005A2                     sprintf@ap:
 11411                           	callstack 0
 11412                           
 11413                           ; 2 bytes @ 0x42
 11414   0005A2                     	ds	2
 11415   0005A4                     sprintf@f:
 11416                           	callstack 0
 11417                           
 11418                           ; 12 bytes @ 0x44
 11419   0005A4                     	ds	2
 11420   0005A6                     ??_mem_init:
 11421   0005A6                     ??_wait_for_programmer:
 11422   0005A6                     disk_ioctl@cmd:
 11423                           	callstack 0
 11424   0005A6                     util_hexdump@header:
 11425                           	callstack 0
 11426   0005A6                     util_addrdump@header:
 11427                           	callstack 0
 11428   0005A6                     validate@obj:
 11429                           	callstack 0
 11430   0005A6                     SPI_SD_configure@ctx_:
 11431                           	callstack 0
 11432                           
 11433                           ; 2 bytes @ 0x46
 11434   0005A6                     	ds	1
 11435   0005A7                     disk_ioctl@buff:
 11436                           	callstack 0
 11437                           
 11438                           ; 2 bytes @ 0x47
 11439   0005A7                     	ds	1
 11440   0005A8                     util_hexdump@addr:
 11441                           	callstack 0
 11442   0005A8                     validate@rfs:
 11443                           	callstack 0
 11444   0005A8                     SPI_SD_configure@clock_speed:
 11445                           	callstack 0
 11446   0005A8                     util_addrdump@addr_offs:
 11447                           	callstack 0
 11448                           
 11449                           ; 4 bytes @ 0x48
 11450   0005A8                     	ds	1
 11451   0005A9                     disk_ioctl@pdrv:
 11452                           	callstack 0
 11453                           
 11454                           ; 1 bytes @ 0x49
 11455   0005A9                     	ds	1
 11456   0005AA                     ??_validate:
 11457   0005AA                     disk_ioctl@res:
 11458                           	callstack 0
 11459   0005AA                     SPI_SD_configure@bit_order:
 11460                           	callstack 0
 11461   0005AA                     util_hexdump@size:
 11462                           	callstack 0
 11463   0005AA                     mem_init@i:
 11464                           	callstack 0
 11465                           
 11466                           ; 2 bytes @ 0x4A
 11467   0005AA                     	ds	1
 11468   0005AB                     SPI_SD_configure@data_mode:
 11469                           	callstack 0
 11470                           
 11471                           ; 1 bytes @ 0x4B
 11472   0005AB                     	ds	1
 11473   0005AC                     ??_util_hexdump:
 11474   0005AC                     ??_SPI_SD_configure:
 11475   0005AC                     util_addrdump@addr:
 11476                           	callstack 0
 11477   0005AC                     mem_init@addr:
 11478                           	callstack 0
 11479                           
 11480                           ; 4 bytes @ 0x4C
 11481   0005AC                     	ds	2
 11482   0005AE                     ?_SDCard_init:
 11483                           	callstack 0
 11484   0005AE                     util_addrdump@size:
 11485                           	callstack 0
 11486   0005AE                     _validate$1075:
 11487                           	callstack 0
 11488   0005AE                     SDCard_init@initial_clock_speed:
 11489                           	callstack 0
 11490   0005AE                     util_hexdump@chars:
 11491                           	callstack 0
 11492                           
 11493                           ; 17 bytes @ 0x4E
 11494   0005AE                     	ds	2
 11495   0005B0                     ??_util_addrdump:
 11496   0005B0                     validate@res:
 11497                           	callstack 0
 11498   0005B0                     SDCard_init@clock_speed:
 11499                           	callstack 0
 11500                           
 11501                           ; 2 bytes @ 0x50
 11502   0005B0                     	ds	1
 11503   0005B1                     f_closedir@dp:
 11504                           	callstack 0
 11505                           
 11506                           ; 2 bytes @ 0x51
 11507   0005B1                     	ds	1
 11508   0005B2                     SDCard_init@timeout:
 11509                           	callstack 0
 11510   0005B2                     util_addrdump@chars:
 11511                           	callstack 0
 11512                           
 11513                           ; 17 bytes @ 0x52
 11514   0005B2                     	ds	1
 11515   0005B3                     f_closedir@fs:
 11516                           	callstack 0
 11517                           
 11518                           ; 2 bytes @ 0x53
 11519   0005B3                     	ds	1
 11520   0005B4                     SDCard_init@i:
 11521                           	callstack 0
 11522                           
 11523                           ; 2 bytes @ 0x54
 11524   0005B4                     	ds	1
 11525   0005B5                     f_closedir@res:
 11526                           	callstack 0
 11527                           
 11528                           ; 1 bytes @ 0x55
 11529   0005B5                     	ds	1
 11530   0005B6                     SDCard_init@spi:
 11531                           	callstack 0
 11532                           
 11533                           ; 2 bytes @ 0x56
 11534   0005B6                     	ds	2
 11535   0005B8                     SDCard_init@buf:
 11536                           	callstack 0
 11537                           
 11538                           ; 5 bytes @ 0x58
 11539   0005B8                     	ds	5
 11540   0005BD                     ??_SD_init:
 11541                           
 11542                           ; 1 bytes @ 0x5D
 11543   0005BD                     	ds	2
 11544   0005BF                     util_hexdump@buf:
 11545                           	callstack 0
 11546                           
 11547                           ; 2 bytes @ 0x5F
 11548   0005BF                     	ds	2
 11549   0005C1                     util_hexdump@i:
 11550                           	callstack 0
 11551                           
 11552                           ; 2 bytes @ 0x61
 11553   0005C1                     	ds	2
 11554   0005C3                     util_addrdump@buf:
 11555                           	callstack 0
 11556                           
 11557                           ; 2 bytes @ 0x63
 11558   0005C3                     	ds	2
 11559   0005C5                     util_addrdump@i:
 11560                           	callstack 0
 11561                           
 11562                           ; 2 bytes @ 0x65
 11563   0005C5                     	ds	2
 11564   0005C7                     ?_SDCard_read512:
 11565                           	callstack 0
 11566   0005C7                     ?_SDCard_write512:
 11567                           	callstack 0
 11568   0005C7                     SDCard_read512@addr:
 11569                           	callstack 0
 11570   0005C7                     SDCard_write512@addr:
 11571                           	callstack 0
 11572                           
 11573                           ; 4 bytes @ 0x67
 11574   0005C7                     	ds	4
 11575   0005CB                     SDCard_read512@offs:
 11576                           	callstack 0
 11577   0005CB                     SDCard_write512@offs:
 11578                           	callstack 0
 11579                           
 11580                           ; 2 bytes @ 0x6B
 11581   0005CB                     	ds	2
 11582   0005CD                     SDCard_read512@buf:
 11583                           	callstack 0
 11584   0005CD                     SDCard_write512@buf:
 11585                           	callstack 0
 11586                           
 11587                           ; 2 bytes @ 0x6D
 11588   0005CD                     	ds	2
 11589   0005CF                     SDCard_read512@count:
 11590                           	callstack 0
 11591   0005CF                     SDCard_write512@count:
 11592                           	callstack 0
 11593                           
 11594                           ; 2 bytes @ 0x6F
 11595   0005CF                     	ds	2
 11596   0005D1                     ??_SDCard_read512:
 11597   0005D1                     ??_SDCard_write512:
 11598                           
 11599                           ; 1 bytes @ 0x71
 11600   0005D1                     	ds	4
 11601   0005D5                     SDCard_read512@i:
 11602                           	callstack 0
 11603   0005D5                     SDCard_write512@i:
 11604                           	callstack 0
 11605                           
 11606                           ; 2 bytes @ 0x75
 11607   0005D5                     	ds	2
 11608   0005D7                     SDCard_read512@i_2770:
 11609                           	callstack 0
 11610   0005D7                     SDCard_write512@i_2787:
 11611                           	callstack 0
 11612                           
 11613                           ; 2 bytes @ 0x77
 11614   0005D7                     	ds	2
 11615   0005D9                     SDCard_read512@retry:
 11616                           	callstack 0
 11617   0005D9                     SDCard_write512@retry:
 11618                           	callstack 0
 11619                           
 11620                           ; 2 bytes @ 0x79
 11621   0005D9                     	ds	2
 11622   0005DB                     SDCard_read512@resp_crc:
 11623                           	callstack 0
 11624   0005DB                     SDCard_write512@result:
 11625                           	callstack 0
 11626                           
 11627                           ; 2 bytes @ 0x7B
 11628   0005DB                     	ds	2
 11629   0005DD                     SDCard_read512@result:
 11630                           	callstack 0
 11631   0005DD                     SDCard_write512@spi:
 11632                           	callstack 0
 11633                           
 11634                           ; 2 bytes @ 0x7D
 11635   0005DD                     	ds	2
 11636   0005DF                     SDCard_read512@spi:
 11637                           	callstack 0
 11638   0005DF                     SDCard_write512@crc:
 11639                           	callstack 0
 11640                           
 11641                           ; 2 bytes @ 0x7F
 11642   0005DF                     	ds	2
 11643   0005E1                     SDCard_write512@response:
 11644                           	callstack 0
 11645   0005E1                     SDCard_read512@crc:
 11646                           	callstack 0
 11647                           
 11648                           ; 2 bytes @ 0x81
 11649   0005E1                     	ds	1
 11650   0005E2                     disk_write@buff:
 11651                           	callstack 0
 11652                           
 11653                           ; 2 bytes @ 0x82
 11654   0005E2                     	ds	1
 11655   0005E3                     SDCard_read512@response:
 11656                           	callstack 0
 11657                           
 11658                           ; 1 bytes @ 0x83
 11659   0005E3                     	ds	1
 11660   0005E4                     ??_disk_initialize:
 11661   0005E4                     disk_read@buff:
 11662                           	callstack 0
 11663   0005E4                     disk_write@sector:
 11664                           	callstack 0
 11665                           
 11666                           ; 4 bytes @ 0x84
 11667   0005E4                     	ds	2
 11668   0005E6                     disk_read@sector:
 11669                           	callstack 0
 11670                           
 11671                           ; 4 bytes @ 0x86
 11672   0005E6                     	ds	2
 11673   0005E8                     disk_write@count:
 11674                           	callstack 0
 11675                           
 11676                           ; 2 bytes @ 0x88
 11677   0005E8                     	ds	2
 11678   0005EA                     disk_write@pdrv:
 11679                           	callstack 0
 11680   0005EA                     disk_read@count:
 11681                           	callstack 0
 11682                           
 11683                           ; 2 bytes @ 0x8A
 11684   0005EA                     	ds	1
 11685   0005EB                     disk_write@i:
 11686                           	callstack 0
 11687                           
 11688                           ; 2 bytes @ 0x8B
 11689   0005EB                     	ds	1
 11690   0005EC                     disk_read@pdrv:
 11691                           	callstack 0
 11692                           
 11693                           ; 1 bytes @ 0x8C
 11694   0005EC                     	ds	1
 11695   0005ED                     disk_read@i:
 11696                           	callstack 0
 11697   0005ED                     sync_window@fs:
 11698                           	callstack 0
 11699                           
 11700                           ; 2 bytes @ 0x8D
 11701   0005ED                     	ds	2
 11702   0005EF                     ??_sync_window:
 11703                           
 11704                           ; 1 bytes @ 0x8F
 11705   0005EF                     	ds	16
 11706   0005FF                     move_window@res:
 11707                           	callstack 0
 11708   0005FF                     sync_fs@res:
 11709                           	callstack 0
 11710                           
 11711                           ; 1 bytes @ 0x9F
 11712   0005FF                     	ds	1
 11713                           
 11714                           	psect	cstackCOMRAM
 11715   000501                     __pcstackCOMRAM:
 11716                           	callstack 0
 11717   000501                     ??_emuz80_57q_start_cpu:
 11718   000501                     ?_memcmp:
 11719                           	callstack 0
 11720   000501                     ?_strchr:
 11721                           	callstack 0
 11722   000501                     ?_strncmp:
 11723                           	callstack 0
 11724   000501                     ?_strcmp:
 11725                           	callstack 0
 11726   000501                     ?___SDCard_crc16:
 11727                           	callstack 0
 11728   000501                     ?___fpclassifyf:
 11729                           	callstack 0
 11730   000501                     ?_ld_word:
 11731                           	callstack 0
 11732   000501                     ?_dbc_1st:
 11733                           	callstack 0
 11734   000501                     ?_dbc_2nd:
 11735                           	callstack 0
 11736   000501                     ?_get_ldnumber:
 11737                           	callstack 0
 11738   000501                     ?_getch:
 11739                           	callstack 0
 11740   000501                     ?___wmul:
 11741                           	callstack 0
 11742   000501                     ?___fladd:
 11743                           	callstack 0
 11744   000501                     ?___flmul:
 11745                           	callstack 0
 11746   000501                     ?_labs:
 11747                           	callstack 0
 11748   000501                     ?_get_fattime:
 11749                           	callstack 0
 11750   000501                     ?_ld_dword:
 11751                           	callstack 0
 11752   000501                     ?___lmul:
 11753                           	callstack 0
 11754   000501                     ?___lldiv:
 11755                           	callstack 0
 11756   000501                     ?___aldiv:
 11757                           	callstack 0
 11758   000501                     ?___almod:
 11759                           	callstack 0
 11760   000501                     ?___flneg:
 11761                           	callstack 0
 11762   000501                     ?___fltol:
 11763                           	callstack 0
 11764   000501                     putch@c:
 11765                           	callstack 0
 11766   000501                     ld_word@ptr:
 11767                           	callstack 0
 11768   000501                     ld_dword@ptr:
 11769                           	callstack 0
 11770   000501                     st_word@ptr:
 11771                           	callstack 0
 11772   000501                     st_dword@ptr:
 11773                           	callstack 0
 11774   000501                     get_ldnumber@path:
 11775                           	callstack 0
 11776   000501                     emuz80_57q_get_from_sram@addr:
 11777                           	callstack 0
 11778   000501                     emuz80_57q_write_to_sram@addr:
 11779                           	callstack 0
 11780   000501                     emuz80_57q_read_from_sram@addr:
 11781                           	callstack 0
 11782   000501                     acquire_bus@ctx_:
 11783                           	callstack 0
 11784   000501                     release_bus@ctx_:
 11785                           	callstack 0
 11786   000501                     SPI_SD_begin@ctx_:
 11787                           	callstack 0
 11788   000501                     SPI_SD_send@ctx_:
 11789                           	callstack 0
 11790   000501                     SPI_SD_receive@ctx_:
 11791                           	callstack 0
 11792   000501                     SPI_SD_select@ctx_:
 11793                           	callstack 0
 11794   000501                     SDCard_crc@buf:
 11795                           	callstack 0
 11796   000501                     ___SDCard_crc16@crc:
 11797                           	callstack 0
 11798   000501                     ___wmul@multiplier:
 11799                           	callstack 0
 11800   000501                     memcmp@vl:
 11801                           	callstack 0
 11802   000501                     memcpy@d1:
 11803                           	callstack 0
 11804   000501                     memset@dest:
 11805                           	callstack 0
 11806   000501                     strchr@s:
 11807                           	callstack 0
 11808   000501                     strcmp@l:
 11809                           	callstack 0
 11810   000501                     strcpy@dest:
 11811                           	callstack 0
 11812   000501                     strncmp@l:
 11813                           	callstack 0
 11814   000501                     ___lmul@multiplier:
 11815                           	callstack 0
 11816   000501                     ___lldiv@dividend:
 11817                           	callstack 0
 11818   000501                     ___aldiv@dividend:
 11819                           	callstack 0
 11820   000501                     ___almod@dividend:
 11821                           	callstack 0
 11822   000501                     ___fleq@ff1:
 11823                           	callstack 0
 11824   000501                     ___flneg@f1:
 11825                           	callstack 0
 11826   000501                     ___fltol@f1:
 11827                           	callstack 0
 11828   000501                     ___fladd@b:
 11829                           	callstack 0
 11830   000501                     ___flmul@b:
 11831                           	callstack 0
 11832   000501                     ___fpclassifyf@x:
 11833                           	callstack 0
 11834   000501                     labs@a:
 11835                           	callstack 0
 11836                           
 11837                           ; 4 bytes @ 0x0
 11838   000501                     	ds	1
 11839   000502                     fputc@c:
 11840                           	callstack 0
 11841                           
 11842                           ; 2 bytes @ 0x1
 11843   000502                     	ds	1
 11844   000503                     ??_ld_word:
 11845   000503                     ??_get_ldnumber:
 11846   000503                     dbc_1st@c:
 11847                           	callstack 0
 11848   000503                     dbc_2nd@c:
 11849                           	callstack 0
 11850   000503                     emuz80_57q_get_from_sram@ret_val:
 11851                           	callstack 0
 11852   000503                     st_word@val:
 11853                           	callstack 0
 11854   000503                     emuz80_57q_write_to_sram@buf:
 11855                           	callstack 0
 11856   000503                     emuz80_57q_read_from_sram@buf:
 11857                           	callstack 0
 11858   000503                     acquire_bus@ctx:
 11859                           	callstack 0
 11860   000503                     release_bus@ctx:
 11861                           	callstack 0
 11862   000503                     SPI_SD_begin@ctx:
 11863                           	callstack 0
 11864   000503                     SPI_SD_send@buf:
 11865                           	callstack 0
 11866   000503                     SPI_SD_receive@buf:
 11867                           	callstack 0
 11868   000503                     SPI_SD_select@select:
 11869                           	callstack 0
 11870   000503                     SDCard_crc@count:
 11871                           	callstack 0
 11872   000503                     ___SDCard_crc16@buf:
 11873                           	callstack 0
 11874   000503                     ___wmul@multiplicand:
 11875                           	callstack 0
 11876   000503                     memcmp@vr:
 11877                           	callstack 0
 11878   000503                     memcpy@s1:
 11879                           	callstack 0
 11880   000503                     memset@c:
 11881                           	callstack 0
 11882   000503                     strchr@c:
 11883                           	callstack 0
 11884   000503                     strcmp@r:
 11885                           	callstack 0
 11886   000503                     strcpy@src:
 11887                           	callstack 0
 11888   000503                     strncmp@r:
 11889                           	callstack 0
 11890   000503                     st_dword@val:
 11891                           	callstack 0
 11892                           
 11893                           ; 4 bytes @ 0x2
 11894   000503                     	ds	1
 11895   000504                     emuz80_57q_get_from_sram@ab:
 11896                           	callstack 0
 11897   000504                     fputc@fp:
 11898                           	callstack 0
 11899                           
 11900                           ; 2 bytes @ 0x3
 11901   000504                     	ds	1
 11902   000505                     ??_strcmp:
 11903   000505                     ??___fpclassifyf:
 11904   000505                     ??_labs:
 11905   000505                     ??_ld_dword:
 11906   000505                     ??___fltol:
 11907   000505                     st_clust@fs:
 11908                           	callstack 0
 11909   000505                     get_ldnumber@i:
 11910                           	callstack 0
 11911   000505                     emuz80_57q_write_to_sram@len:
 11912                           	callstack 0
 11913   000505                     emuz80_57q_read_from_sram@len:
 11914                           	callstack 0
 11915   000505                     SPI_SD_begin_transaction@ctx_:
 11916                           	callstack 0
 11917   000505                     SPI_SD_end_transaction@ctx_:
 11918                           	callstack 0
 11919   000505                     SPI_SD_send@count:
 11920                           	callstack 0
 11921   000505                     SPI_SD_receive@count:
 11922                           	callstack 0
 11923   000505                     SDCard_crc@endp:
 11924                           	callstack 0
 11925   000505                     ___SDCard_crc16@count:
 11926                           	callstack 0
 11927   000505                     ___wmul@product:
 11928                           	callstack 0
 11929   000505                     memcmp@n:
 11930                           	callstack 0
 11931   000505                     memcpy@n:
 11932                           	callstack 0
 11933   000505                     memset@n:
 11934                           	callstack 0
 11935   000505                     strcpy@d:
 11936                           	callstack 0
 11937   000505                     strncmp@n:
 11938                           	callstack 0
 11939   000505                     ___lmul@multiplicand:
 11940                           	callstack 0
 11941   000505                     ___lldiv@divisor:
 11942                           	callstack 0
 11943   000505                     ___aldiv@divisor:
 11944                           	callstack 0
 11945   000505                     ___almod@divisor:
 11946                           	callstack 0
 11947   000505                     ___fleq@ff2:
 11948                           	callstack 0
 11949   000505                     ___fladd@a:
 11950                           	callstack 0
 11951   000505                     ___flmul@a:
 11952                           	callstack 0
 11953                           
 11954                           ; 4 bytes @ 0x4
 11955   000505                     	ds	1
 11956   000506                     ??_fputc:
 11957   000506                     ld_word@rv:
 11958                           	callstack 0
 11959                           
 11960                           ; 2 bytes @ 0x5
 11961   000506                     	ds	1
 11962   000507                     ??_memcmp:
 11963   000507                     ??_strncmp:
 11964   000507                     ??_emuz80_57q_write_to_sram:
 11965   000507                     ??___SDCard_crc16:
 11966   000507                     ??_SPI_SD_receive:
 11967   000507                     ?_read_prec_or_width:
 11968                           	callstack 0
 11969   000507                     st_clust@dir:
 11970                           	callstack 0
 11971   000507                     get_ldnumber@tt:
 11972                           	callstack 0
 11973   000507                     emuz80_57q_read_from_sram@i:
 11974                           	callstack 0
 11975   000507                     SPI_SD_send@i:
 11976                           	callstack 0
 11977   000507                     SDCard_crc@i:
 11978                           	callstack 0
 11979   000507                     memcpy@d:
 11980                           	callstack 0
 11981   000507                     memset@p:
 11982                           	callstack 0
 11983   000507                     read_prec_or_width@fmt:
 11984                           	callstack 0
 11985                           
 11986                           ; 2 bytes @ 0x6
 11987   000507                     	ds	1
 11988   000508                     ?_ld_clust:
 11989                           	callstack 0
 11990   000508                     ld_clust@fs:
 11991                           	callstack 0
 11992                           
 11993                           ; 2 bytes @ 0x7
 11994   000508                     	ds	1
 11995   000509                     ??___fladd:
 11996   000509                     ??___flmul:
 11997   000509                     ??___fleq:
 11998   000509                     get_ldnumber@tc:
 11999                           	callstack 0
 12000   000509                     SDCard_crc@crc:
 12001                           	callstack 0
 12002   000509                     ___aldiv@counter:
 12003                           	callstack 0
 12004   000509                     ___almod@counter:
 12005                           	callstack 0
 12006   000509                     ___fltol@sign1:
 12007                           	callstack 0
 12008   000509                     create_name@dp:
 12009                           	callstack 0
 12010   000509                     emuz80_57q_write_to_sram@i:
 12011                           	callstack 0
 12012   000509                     emuz80_57q_read_from_sram@ab:
 12013                           	callstack 0
 12014   000509                     SPI_SD_send@p:
 12015                           	callstack 0
 12016   000509                     SPI_SD_receive@i:
 12017                           	callstack 0
 12018   000509                     memcmp@l:
 12019                           	callstack 0
 12020   000509                     memcpy@s:
 12021                           	callstack 0
 12022   000509                     read_prec_or_width@ap:
 12023                           	callstack 0
 12024   000509                     ___fpclassifyf@e:
 12025                           	callstack 0
 12026   000509                     st_clust@cl:
 12027                           	callstack 0
 12028   000509                     ___lmul@product:
 12029                           	callstack 0
 12030   000509                     ___lldiv@quotient:
 12031                           	callstack 0
 12032                           
 12033                           ; 4 bytes @ 0x8
 12034   000509                     	ds	1
 12035   00050A                     ___aldiv@sign:
 12036                           	callstack 0
 12037   00050A                     ___almod@sign:
 12038                           	callstack 0
 12039   00050A                     ___fltol@exp1:
 12040                           	callstack 0
 12041   00050A                     ld_clust@dir:
 12042                           	callstack 0
 12043   00050A                     get_ldnumber@vol:
 12044                           	callstack 0
 12045   00050A                     SDCard_crc@p:
 12046                           	callstack 0
 12047   00050A                     ___SDCard_crc16@endp:
 12048                           	callstack 0
 12049   00050A                     ld_dword@rv:
 12050                           	callstack 0
 12051                           
 12052                           ; 4 bytes @ 0x9
 12053   00050A                     	ds	1
 12054   00050B                     ??_read_prec_or_width:
 12055   00050B                     ?_abs:
 12056                           	callstack 0
 12057   00050B                     SPI_SD_receive@repeat:
 12058                           	callstack 0
 12059   00050B                     memcpy@tmp:
 12060                           	callstack 0
 12061   00050B                     create_name@path:
 12062                           	callstack 0
 12063   00050B                     emuz80_57q_write_to_sram@ab:
 12064                           	callstack 0
 12065   00050B                     SPI_SD_dummy_clocks@ctx_:
 12066                           	callstack 0
 12067   00050B                     memcmp@r:
 12068                           	callstack 0
 12069   00050B                     ctoa@fp:
 12070                           	callstack 0
 12071   00050B                     stoa@fp:
 12072                           	callstack 0
 12073   00050B                     abs@a:
 12074                           	callstack 0
 12075   00050B                     fputs@s:
 12076                           	callstack 0
 12077   00050B                     ___aldiv@quotient:
 12078                           	callstack 0
 12079   00050B                     ___fpclassifyf@u:
 12080                           	callstack 0
 12081                           
 12082                           ; 4 bytes @ 0xA
 12083   00050B                     	ds	1
 12084   00050C                     ??_ld_clust:
 12085   00050C                     SPI_SD_receive@i_2687:
 12086                           	callstack 0
 12087   00050C                     get_ldnumber@tp:
 12088                           	callstack 0
 12089   00050C                     ___SDCard_crc16@p:
 12090                           	callstack 0
 12091                           
 12092                           ; 2 bytes @ 0xB
 12093   00050C                     	ds	1
 12094   00050D                     ??_abs:
 12095   00050D                     ??_create_name:
 12096   00050D                     ?_clst2sect:
 12097                           	callstack 0
 12098   00050D                     ?___xxtofl:
 12099                           	callstack 0
 12100   00050D                     ___lldiv@counter:
 12101                           	callstack 0
 12102   00050D                     ___fladd@signs:
 12103                           	callstack 0
 12104   00050D                     ___flmul@sign:
 12105                           	callstack 0
 12106   00050D                     ctoa@c:
 12107                           	callstack 0
 12108   00050D                     read_prec_or_width@c:
 12109                           	callstack 0
 12110   00050D                     clst2sect@fs:
 12111                           	callstack 0
 12112   00050D                     SPI_SD_receive@p:
 12113                           	callstack 0
 12114   00050D                     SPI_SD_dummy_clocks@clocks:
 12115                           	callstack 0
 12116   00050D                     stoa@s:
 12117                           	callstack 0
 12118   00050D                     fputs@fp:
 12119                           	callstack 0
 12120   00050D                     ___xxtofl@val:
 12121                           	callstack 0
 12122                           
 12123                           ; 4 bytes @ 0xC
 12124   00050D                     	ds	1
 12125   00050E                     ??_ctoa:
 12126   00050E                     ___fladd@aexp:
 12127                           	callstack 0
 12128   00050E                     ___flmul@aexp:
 12129                           	callstack 0
 12130   00050E                     get_fileinfo@dp:
 12131                           	callstack 0
 12132   00050E                     read_prec_or_width@n:
 12133                           	callstack 0
 12134                           
 12135                           ; 2 bytes @ 0xD
 12136   00050E                     	ds	1
 12137   00050F                     ??_stoa:
 12138   00050F                     ___fladd@bexp:
 12139                           	callstack 0
 12140   00050F                     fputs@c:
 12141                           	callstack 0
 12142   00050F                     SPI_SD_dummy_clocks@i:
 12143                           	callstack 0
 12144   00050F                     SPI_SD_receive_byte@ctx_:
 12145                           	callstack 0
 12146   00050F                     ctoa@l:
 12147                           	callstack 0
 12148   00050F                     clst2sect@clst:
 12149                           	callstack 0
 12150   00050F                     ___flmul@grs:
 12151                           	callstack 0
 12152                           
 12153                           ; 4 bytes @ 0xE
 12154   00050F                     	ds	1
 12155   000510                     ___fladd@grs:
 12156                           	callstack 0
 12157   000510                     get_fileinfo@fno:
 12158                           	callstack 0
 12159   000510                     _create_name$887:
 12160                           	callstack 0
 12161   000510                     fputs@i:
 12162                           	callstack 0
 12163   000510                     ld_clust@cl:
 12164                           	callstack 0
 12165                           
 12166                           ; 4 bytes @ 0xF
 12167   000510                     	ds	1
 12168   000511                     ??___xxtofl:
 12169   000511                     SPI_SD_dummy_clocks@dummy:
 12170                           	callstack 0
 12171   000511                     SPI_SD_receive_byte@dummy:
 12172                           	callstack 0
 12173   000511                     ctoa@w:
 12174                           	callstack 0
 12175   000511                     stoa@p:
 12176                           	callstack 0
 12177                           
 12178                           ; 2 bytes @ 0x10
 12179   000511                     	ds	1
 12180   000512                     ??_get_fileinfo:
 12181   000512                     create_name@d:
 12182                           	callstack 0
 12183   000512                     SDCard_end_transaction@spi:
 12184                           	callstack 0
 12185   000512                     ___SDCard_wait_response@attempts:
 12186                           	callstack 0
 12187   000512                     pad@fp:
 12188                           	callstack 0
 12189                           
 12190                           ; 2 bytes @ 0x11
 12191   000512                     	ds	1
 12192   000513                     ??_clst2sect:
 12193   000513                     ___flmul@bexp:
 12194                           	callstack 0
 12195   000513                     create_name@ni:
 12196                           	callstack 0
 12197   000513                     stoa@w:
 12198                           	callstack 0
 12199                           
 12200                           ; 2 bytes @ 0x12
 12201   000513                     	ds	1
 12202   000514                     ___SDCard_wait_response@spi:
 12203                           	callstack 0
 12204   000514                     pad@buf:
 12205                           	callstack 0
 12206   000514                     ___flmul@prod:
 12207                           	callstack 0
 12208                           
 12209                           ; 4 bytes @ 0x13
 12210   000514                     	ds	1
 12211   000515                     ___xxtofl@sign:
 12212                           	callstack 0
 12213   000515                     create_name@p:
 12214                           	callstack 0
 12215   000515                     stoa@cp:
 12216                           	callstack 0
 12217                           
 12218                           ; 2 bytes @ 0x14
 12219   000515                     	ds	1
 12220   000516                     ___SDCard_wait_response@no_response:
 12221                           	callstack 0
 12222   000516                     ___xxtofl@exp:
 12223                           	callstack 0
 12224   000516                     get_fileinfo@si:
 12225                           	callstack 0
 12226   000516                     pad@p:
 12227                           	callstack 0
 12228                           
 12229                           ; 2 bytes @ 0x15
 12230   000516                     	ds	1
 12231   000517                     ___SDCard_wait_response@response:
 12232                           	callstack 0
 12233   000517                     create_name@si:
 12234                           	callstack 0
 12235   000517                     stoa@l:
 12236                           	callstack 0
 12237   000517                     ___xxtofl@arg:
 12238                           	callstack 0
 12239                           
 12240                           ; 4 bytes @ 0x16
 12241   000517                     	ds	1
 12242   000518                     ??_pad:
 12243   000518                     ?___SDCard_command_r1:
 12244                           	callstack 0
 12245   000518                     get_fileinfo@di:
 12246                           	callstack 0
 12247   000518                     ___flmul@temp:
 12248                           	callstack 0
 12249   000518                     ___SDCard_command_r1@argument:
 12250                           	callstack 0
 12251                           
 12252                           ; 4 bytes @ 0x17
 12253   000518                     	ds	1
 12254   000519                     create_name@sfn:
 12255                           	callstack 0
 12256   000519                     pad@i:
 12257                           	callstack 0
 12258                           
 12259                           ; 2 bytes @ 0x18
 12260   000519                     	ds	1
 12261   00051A                     ?___flsub:
 12262                           	callstack 0
 12263   00051A                     get_fileinfo@c:
 12264                           	callstack 0
 12265   00051A                     ___flge@ff1:
 12266                           	callstack 0
 12267   00051A                     ___flsub@b:
 12268                           	callstack 0
 12269                           
 12270                           ; 4 bytes @ 0x19
 12271   00051A                     	ds	1
 12272   00051B                     ?___fldiv:
 12273                           	callstack 0
 12274   00051B                     create_name@i:
 12275                           	callstack 0
 12276   00051B                     dtoa@fp:
 12277                           	callstack 0
 12278   00051B                     xtoa@fp:
 12279                           	callstack 0
 12280   00051B                     ___fldiv@b:
 12281                           	callstack 0
 12282                           
 12283                           ; 4 bytes @ 0x1A
 12284   00051B                     	ds	1
 12285   00051C                     ___SDCard_command_r1@r1:
 12286                           	callstack 0
 12287                           
 12288                           ; 2 bytes @ 0x1B
 12289   00051C                     	ds	1
 12290   00051D                     create_name@c:
 12291                           	callstack 0
 12292   00051D                     dtoa@d:
 12293                           	callstack 0
 12294   00051D                     xtoa@d:
 12295                           	callstack 0
 12296                           
 12297                           ; 4 bytes @ 0x1C
 12298   00051D                     	ds	1
 12299   00051E                     ___SDCard_command_r1@command:
 12300                           	callstack 0
 12301   00051E                     ___flge@ff2:
 12302                           	callstack 0
 12303   00051E                     ___flsub@a:
 12304                           	callstack 0
 12305                           
 12306                           ; 4 bytes @ 0x1D
 12307   00051E                     	ds	1
 12308   00051F                     ___fldiv@a:
 12309                           	callstack 0
 12310   00051F                     ___SDCard_command_r1@buf:
 12311                           	callstack 0
 12312                           
 12313                           ; 6 bytes @ 0x1E
 12314   00051F                     	ds	2
 12315   000521                     xtoa@x:
 12316                           	callstack 0
 12317   000521                     _dtoa$3400:
 12318                           	callstack 0
 12319                           
 12320                           ; 2 bytes @ 0x20
 12321   000521                     	ds	1
 12322   000522                     ??___flge:
 12323   000522                     ??_xtoa:
 12324                           
 12325                           ; 1 bytes @ 0x21
 12326   000522                     	ds	1
 12327   000523                     ??___fldiv:
 12328   000523                     dtoa@p:
 12329                           	callstack 0
 12330                           
 12331                           ; 2 bytes @ 0x22
 12332   000523                     	ds	2
 12333   000525                     ___SDCard_command_r1@response:
 12334                           	callstack 0
 12335   000525                     dtoa@w:
 12336                           	callstack 0
 12337                           
 12338                           ; 2 bytes @ 0x24
 12339   000525                     	ds	1
 12340   000526                     ___SDCard_command_r1@spi:
 12341                           	callstack 0
 12342   000526                     _xtoa$3453:
 12343                           	callstack 0
 12344                           
 12345                           ; 2 bytes @ 0x25
 12346   000526                     	ds	1
 12347   000527                     dtoa@s:
 12348                           	callstack 0
 12349   000527                     ___fldiv@rem:
 12350                           	callstack 0
 12351                           
 12352                           ; 4 bytes @ 0x26
 12353   000527                     	ds	1
 12354   000528                     xtoa@a:
 12355                           	callstack 0
 12356   000528                     dtoa@i:
 12357                           	callstack 0
 12358   000528                     SDCard_command@argument:
 12359                           	callstack 0
 12360                           
 12361                           ; 4 bytes @ 0x27
 12362   000528                     	ds	1
 12363   000529                     xtoa@p:
 12364                           	callstack 0
 12365                           
 12366                           ; 2 bytes @ 0x28
 12367   000529                     	ds	2
 12368   00052B                     ___fldiv@sign:
 12369                           	callstack 0
 12370   00052B                     xtoa@w:
 12371                           	callstack 0
 12372                           
 12373                           ; 2 bytes @ 0x2A
 12374   00052B                     	ds	1
 12375   00052C                     SDCard_command@response_buffer:
 12376                           	callstack 0
 12377   00052C                     ___fldiv@new_exp:
 12378                           	callstack 0
 12379                           
 12380                           ; 2 bytes @ 0x2B
 12381   00052C                     	ds	1
 12382   00052D                     xtoa@c:
 12383                           	callstack 0
 12384                           
 12385                           ; 1 bytes @ 0x2C
 12386   00052D                     	ds	1
 12387   00052E                     SDCard_command@length:
 12388                           	callstack 0
 12389   00052E                     xtoa@i:
 12390                           	callstack 0
 12391   00052E                     ___fldiv@grs:
 12392                           	callstack 0
 12393                           
 12394                           ; 4 bytes @ 0x2D
 12395   00052E                     	ds	2
 12396   000530                     SDCard_command@spi:
 12397                           	callstack 0
 12398                           
 12399                           ; 2 bytes @ 0x2F
 12400   000530                     	ds	2
 12401   000532                     SDCard_command@command:
 12402                           	callstack 0
 12403   000532                     ___fldiv@bexp:
 12404                           	callstack 0
 12405                           
 12406                           ; 1 bytes @ 0x31
 12407   000532                     	ds	1
 12408   000533                     ___fldiv@aexp:
 12409                           	callstack 0
 12410   000533                     SDCard_command@result:
 12411                           	callstack 0
 12412                           
 12413                           ; 2 bytes @ 0x32
 12414   000533                     	ds	1
 12415   000534                     ?_floorf:
 12416                           	callstack 0
 12417   000534                     floorf@x:
 12418                           	callstack 0
 12419                           
 12420                           ; 4 bytes @ 0x33
 12421   000534                     	ds	1
 12422   000535                     SDCard_command@responsep:
 12423                           	callstack 0
 12424                           
 12425                           ; 2 bytes @ 0x34
 12426   000535                     	ds	3
 12427   000538                     ??_floorf:
 12428                           
 12429                           ; 1 bytes @ 0x37
 12430   000538                     	ds	6
 12431   00053E                     floorf@m:
 12432                           	callstack 0
 12433                           
 12434                           ; 4 bytes @ 0x3D
 12435   00053E                     	ds	4
 12436   000542                     floorf@e:
 12437                           	callstack 0
 12438                           
 12439                           ; 2 bytes @ 0x41
 12440   000542                     	ds	2
 12441   000544                     floorf@u:
 12442                           	callstack 0
 12443                           
 12444                           ; 4 bytes @ 0x43
 12445   000544                     	ds	4
 12446   000548                     efgtoa@fp:
 12447                           	callstack 0
 12448                           
 12449                           ; 2 bytes @ 0x47
 12450   000548                     	ds	2
 12451   00054A                     efgtoa@f:
 12452                           	callstack 0
 12453                           
 12454                           ; 4 bytes @ 0x49
 12455   00054A                     	ds	4
 12456   00054E                     efgtoa@c:
 12457                           	callstack 0
 12458                           
 12459                           ; 1 bytes @ 0x4D
 12460   00054E                     	ds	1
 12461   00054F                     ??_efgtoa:
 12462                           
 12463                           ; 1 bytes @ 0x4E
 12464   00054F                     	ds	2
 12465   000551                     vfpfcnvrt@fp:
 12466                           	callstack 0
 12467                           
 12468                           ; 2 bytes @ 0x50
 12469   000551                     	ds	2
 12470   000553                     vfpfcnvrt@fmt:
 12471                           	callstack 0
 12472                           
 12473                           ; 2 bytes @ 0x52
 12474   000553                     	ds	2
 12475   000555                     vfpfcnvrt@ap:
 12476                           	callstack 0
 12477                           
 12478                           ; 2 bytes @ 0x54
 12479   000555                     	ds	2
 12480   000557                     ??_vfpfcnvrt:
 12481                           
 12482                           ; 1 bytes @ 0x56
 12483   000557                     	ds	4
 12484   00055B                     vfprintf@cfmt:
 12485                           	callstack 0
 12486                           
 12487                           ; 2 bytes @ 0x5A
 12488   00055B                     	ds	2
 12489   00055D                     printf@ap:
 12490                           	callstack 0
 12491                           
 12492                           ; 2 bytes @ 0x5C
 12493   00055D                     	ds	2
 12494   00055F                     ??_SDCard_init:
 12495   00055F                     disk_status@pdrv:
 12496                           	callstack 0
 12497   00055F                     sync_window@res:
 12498                           	callstack 0
 12499                           
 12500                           ; 1 bytes @ 0x5E
 12501   00055F                     	ds	1
 12502   000560                     
 12503                           ; 1 bytes @ 0x5F
 12504 ;;
 12505 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 12506 ;;
 12507 ;; *************** function _main *****************
 12508 ;; Defined at:
 12509 ;;		line 439 in file "src/boards/SBC8080-57Q.c"
 12510 ;; Parameters:    Size  Location     Type
 12511 ;;		None
 12512 ;; Auto vars:     Size  Location     Type
 12513 ;;		None
 12514 ;; Return value:  Size  Location     Type
 12515 ;;                  1    wreg      void 
 12516 ;; Registers used:
 12517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12518 ;; Tracked objects:
 12519 ;;		On entry : 0/0
 12520 ;;		On exit  : 3F/0
 12521 ;;		Unchanged: 0/0
 12522 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12524 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12526 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12527 ;;Total ram usage:        4 bytes
 12528 ;; Hardware stack levels required when called: 20
 12529 ;; This function calls:
 12530 ;;		_SD_init
 12531 ;;		___fldiv
 12532 ;;		___lmul
 12533 ;;		___xxtofl
 12534 ;;		_disk_io_handle
 12535 ;;		_emuz80_57q_enter_bus_master
 12536 ;;		_emuz80_57q_exit_bus_master
 12537 ;;		_emuz80_57q_start_cpu
 12538 ;;		_emuz80_57q_sys_init
 12539 ;;		_emuz80_57q_write_to_sram
 12540 ;;		_f_mount
 12541 ;;		_mem_init
 12542 ;;		_menu_select
 12543 ;;		_printf
 12544 ;;		_wait_for_programmer
 12545 ;; This function is called by:
 12546 ;;		Startup code after reset
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550                           ;# 
 12551                           
 12552                           	psect	text0
 12553   0159EE                     __ptext0:
 12554                           	callstack 0
 12555   0159EE                     _main:
 12556                           	callstack 107
 12557                           
 12558                           ;src/boards/SBC8080-57Q.c: 441:  emuz80_57q_sys_init();
 12559                           
 12560                           ;incstack = 0
 12561   0159EE  EC8D  F0C5         	call	_emuz80_57q_sys_init	;wreg free
 12562                           
 12563                           ; BSR set to: 4
 12564                           ;src/boards/SBC8080-57Q.c: 442:  wait_for_programmer();
 12565   0159F2  ECCF  F0CD         	call	_wait_for_programmer	;wreg free
 12566                           
 12567                           ; BSR set to: 5
 12568                           ;src/boards/SBC8080-57Q.c: 443:  printf("Board: SBC8080 + EMUZ80-57Q\n\r");
 12569   0159F6  0EFF               	movlw	low STR_85
 12570   0159F8  6F9A               	movwf	printf@fmt& (0+255),b
 12571   0159FA  0EFC               	movlw	high STR_85
 12572   0159FC  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12573   0159FE  EC4F  F0CF         	call	_printf	;wreg free
 12574                           
 12575                           ; BSR set to: 5
 12576                           ;src/boards/SBC8080-57Q.c: 444:  mem_init();
 12577   015A02  EC62  F0B6         	call	_mem_init	;wreg free
 12578                           
 12579                           ; BSR set to: 5
 12580                           ;src/boards/SBC8080-57Q.c: 446:  if(NCO1EN) {
 12581   015A06  0104               	movlb	4	; () banked
 12582   015A08  AF46               	btfss	70,7,b	;volatile
 12583   015A0A  D04A               	goto	l12941
 12584                           
 12585                           ; BSR set to: 4
 12586                           ;src/boards/SBC8080-57Q.c: 447:   printf("Use NCO1->RA3 %.2f MHz for 8085 clock\n\r", ((
      +                          uint32_t)NCO1INC * 61 / 2) / 1000000.0);
 12587   015A0C  5143               	movf	67,w,b	;volatile
 12588   015A0E  6E01               	movwf	___lmul@multiplier^(0+1280),c
 12589   015A10  5144               	movf	68,w,b	;volatile
 12590   015A12  6E02               	movwf	(___lmul@multiplier+1)^(0+1280),c
 12591   015A14  5145               	movf	69,w,b	;volatile
 12592   015A16  6E03               	movwf	(___lmul@multiplier+2)^(0+1280),c
 12593   015A18  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 12594   015A1A  0E3D               	movlw	61
 12595   015A1C  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 12596   015A1E  0E00               	movlw	0
 12597   015A20  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 12598   015A22  0E00               	movlw	0
 12599   015A24  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 12600   015A26  0E00               	movlw	0
 12601   015A28  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 12602   015A2A  EC2F  F0CC         	call	___lmul	;wreg free
 12603   015A2E  90D8               	bcf	status,0,c
 12604   015A30  3204               	rrcf	(?___lmul+3)^(0+1280),f,c
 12605   015A32  3203               	rrcf	(?___lmul+2)^(0+1280),f,c
 12606   015A34  3202               	rrcf	(?___lmul+1)^(0+1280),f,c
 12607   015A36  3201               	rrcf	?___lmul^(0+1280),f,c
 12608   015A38  C501  F50D         	movff	?___lmul,___xxtofl@val
 12609   015A3C  C502  F50E         	movff	?___lmul+1,___xxtofl@val+1
 12610   015A40  C503  F50F         	movff	?___lmul+2,___xxtofl@val+2
 12611   015A44  C504  F510         	movff	?___lmul+3,___xxtofl@val+3
 12612   015A48  0E00               	movlw	0
 12613   015A4A  ECFD  F0B9         	call	___xxtofl
 12614   015A4E  C50D  F51B         	movff	?___xxtofl,___fldiv@b
 12615   015A52  C50E  F51C         	movff	?___xxtofl+1,___fldiv@b+1
 12616   015A56  C50F  F51D         	movff	?___xxtofl+2,___fldiv@b+2
 12617   015A5A  C510  F51E         	movff	?___xxtofl+3,___fldiv@b+3
 12618   015A5E  0E00               	movlw	0
 12619   015A60  6E1F               	movwf	___fldiv@a^(0+1280),c
 12620   015A62  0E24               	movlw	36
 12621   015A64  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 12622   015A66  0E74               	movlw	116
 12623   015A68  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 12624   015A6A  0E49               	movlw	73
 12625   015A6C  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 12626   015A6E  EC61  F0A9         	call	___fldiv	;wreg free
 12627   015A72  C51B  F7D1         	movff	?___fldiv,_main$3972
 12628   015A76  C51C  F7D2         	movff	?___fldiv+1,_main$3972+1
 12629   015A7A  C51D  F7D3         	movff	?___fldiv+2,_main$3972+2
 12630   015A7E  C51E  F7D4         	movff	?___fldiv+3,_main$3972+3
 12631                           
 12632                           ;src/boards/SBC8080-57Q.c: 447:   printf("Use NCO1->RA3 %.2f MHz for 8085 clock\n\r", ((
      +                          uint32_t)NCO1INC * 61 / 2) / 1000000.0);
 12633   015A82  0E0E               	movlw	low STR_86
 12634   015A84  0105               	movlb	5	; () banked
 12635   015A86  6F9A               	movwf	printf@fmt& (0+255),b
 12636   015A88  0EFB               	movlw	high STR_86
 12637   015A8A  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12638   015A8C  C7D1  F59C         	movff	_main$3972,?_printf+2
 12639   015A90  C7D2  F59D         	movff	_main$3972+1,?_printf+3
 12640   015A94  C7D3  F59E         	movff	_main$3972+2,?_printf+4
 12641   015A98  C7D4  F59F         	movff	_main$3972+3,?_printf+5
 12642   015A9C  EC4F  F0CF         	call	_printf	;wreg free
 12643   015AA0                     l12941:
 12644                           
 12645                           ;src/boards/SBC8080-57Q.c: 449:  printf("\n\r");
 12646   015AA0  0ECA               	movlw	low (STR_90+33)
 12647   015AA2  0105               	movlb	5	; () banked
 12648   015AA4  6F9A               	movwf	printf@fmt& (0+255),b
 12649   015AA6  0EFB               	movlw	high (STR_90+33)
 12650   015AA8  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12651   015AAA  EC4F  F0CF         	call	_printf	;wreg free
 12652                           
 12653                           ; BSR set to: 5
 12654                           ;src/boards/SBC8080-57Q.c: 451:  SD_init();
 12655   015AAE  ECBD  F0CA         	call	_SD_init	;wreg free
 12656                           
 12657                           ; BSR set to: 5
 12658                           ;src/boards/SBC8080-57Q.c: 453:  if (f_mount(&fs, "0://", 1) != FR_OK) {
 12659   015AB2  0E8C               	movlw	low _fs
 12660   015AB4  0106               	movlb	6	; () banked
 12661   015AB6  6FAF               	movwf	f_mount@fs& (0+255),b
 12662   015AB8  0E15               	movlw	high _fs
 12663   015ABA  6FB0               	movwf	(f_mount@fs+1)& (0+255),b
 12664   015ABC  0EF1               	movlw	low STR_88
 12665   015ABE  6FB1               	movwf	f_mount@path& (0+255),b
 12666   015AC0  0EFF               	movlw	high STR_88
 12667   015AC2  6FB2               	movwf	(f_mount@path+1)& (0+255),b
 12668   015AC4  0E01               	movlw	1
 12669   015AC6  6FB3               	movwf	f_mount@opt& (0+255),b
 12670   015AC8  ECC2  F0C1         	call	_f_mount	;wreg free
 12671   015ACC  0900               	iorlw	0
 12672   015ACE  B4D8               	btfsc	status,2,c
 12673   015AD0  D008               	goto	l12949
 12674                           
 12675                           ; BSR set to: 6
 12676                           ;src/boards/SBC8080-57Q.c: 454:   printf("Failed to mount SD Card.\n\r");
 12677   015AD2  0E72               	movlw	low STR_89
 12678   015AD4  0105               	movlb	5	; () banked
 12679   015AD6  6F9A               	movwf	printf@fmt& (0+255),b
 12680   015AD8  0EFD               	movlw	high STR_89
 12681   015ADA  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12682   015ADC  EC4F  F0CF         	call	_printf	;wreg free
 12683   015AE0                     l1690:
 12684   015AE0  D7FF               	goto	l1690
 12685   015AE2                     l12949:
 12686                           
 12687                           ; BSR set to: 6
 12688                           ;src/boards/SBC8080-57Q.c: 458:  if (menu_select() < 0)
 12689   015AE2  ECD6  F09C         	call	_menu_select	;wreg free
 12690   015AE6  BFC0               	btfsc	(?_menu_select+1)& (0+255),7,b
 12691   015AE8                     u16510:
 12692                           
 12693                           ;src/boards/SBC8080-57Q.c: 459:   while (1);
 12694   015AE8  D7FF               	goto	u16510
 12695                           
 12696                           ; BSR set to: 7
 12697                           ;src/boards/SBC8080-57Q.c: 462:  emuz80_57q_write_to_sram(0x00000,(uint8_t*)rom, sizeof(
      +                          rom));
 12698   015AEA  0E00               	movlw	0
 12699   015AEC  6E02               	movwf	(emuz80_57q_write_to_sram@addr+1)^(0+1280),c
 12700   015AEE  0E00               	movlw	0
 12701   015AF0  6E01               	movwf	emuz80_57q_write_to_sram@addr^(0+1280),c
 12702   015AF2  0ED8               	movlw	low _rom
 12703   015AF4  6E03               	movwf	emuz80_57q_write_to_sram@buf^(0+1280),c
 12704   015AF6  0EF4               	movlw	high _rom
 12705   015AF8  6E04               	movwf	(emuz80_57q_write_to_sram@buf+1)^(0+1280),c
 12706   015AFA  0E03               	movlw	3
 12707   015AFC  6E06               	movwf	(emuz80_57q_write_to_sram@len+1)^(0+1280),c
 12708   015AFE  0E4A               	movlw	74
 12709   015B00  6E05               	movwf	emuz80_57q_write_to_sram@len^(0+1280),c
 12710   015B02  EC49  F0CA         	call	_emuz80_57q_write_to_sram	;wreg free
 12711                           
 12712                           ;src/boards/SBC8080-57Q.c: 463:  emuz80_57q_start_cpu();
 12713   015B06  ECD9  F0BF         	call	_emuz80_57q_start_cpu	;wreg free
 12714                           
 12715                           ;src/boards/SBC8080-57Q.c: 465:  GIE = 0;
 12716   015B0A  9ED6               	bcf	1238,7,c	;volatile
 12717                           
 12718                           ;src/boards/SBC8080-57Q.c: 466:  goto IO_wait_loop;
 12719   015B0C  D008               	goto	l12963
 12720   015B0E                     l12957:
 12721                           
 12722                           ; BSR set to: 7
 12723                           ;src/boards/SBC8080-57Q.c: 469:  TRISF = 0;
 12724   015B0E  0E00               	movlw	0
 12725   015B10  6ECB               	movwf	203,c	;volatile
 12726                           
 12727                           ; BSR set to: 7
 12728                           ;src/boards/SBC8080-57Q.c: 470:  G3POL = 1;
 12729   015B12  0100               	movlb	0	; () banked
 12730   015B14  85D7               	bsf	215,2,b	;volatile
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;src/boards/SBC8080-57Q.c: 471:  G3POL = 0;
 12734   015B16  95D7               	bcf	215,2,b	;volatile
 12735   015B18                     l1699:
 12736   015B18  A0CE               	btfss	1230,0,c	;volatile
 12737   015B1A  D7FE               	goto	l1699
 12738                           
 12739                           ;src/boards/SBC8080-57Q.c: 473:  TRISF = 0xff;
 12740   015B1C  68CB               	setf	203,c	;volatile
 12741   015B1E                     l12963:
 12742                           
 12743                           ;src/boards/SBC8080-57Q.c: 475:  BSR = 0;
 12744   015B1E  0E00               	movlw	0
 12745   015B20  6EE0               	movwf	224,c	;volatile
 12746   015B22                     CLC3_check:
 12747                           
 12748                           ;# 
 12749   015B22  B5D4               	btfsc	212,2,b	;# 
 12750   015B24  D7FE               	bra	CLC3_check	;# 
 12751   015B26  B3D4               	btfsc	212,1,b	;# 
 12752   015B28  D009               	bra	CLC3_exit	;# 
 12753   015B2A  50D3               	movf	1235,w,c	;# 
 12754   015B2C                     CLC2_check:
 12755                           
 12756                           ;# 
 12757   015B2C  B2CE               	btfsc	1230,1,c	;# 
 12758   015B2E  D002               	bra	CLC2_exit	;# 
 12759   015B30  50D3               	movf	1235,w,c	;# 
 12760   015B32  D7FC               	bra	CLC2_check	;# 
 12761   015B34                     CLC2_exit:
 12762                           
 12763                           ;# 
 12764   015B34  0102               	movlb	2	;# 
 12765   015B36  6FC9               	movwf	713,b	;# 
 12766   015B38  0100               	movlb	0	;# 
 12767   015B3A  D7F3               	bra	CLC3_check	;# 
 12768   015B3C                     CLC3_exit:
 12769                           
 12770                           ;src/boards/SBC8080-57Q.c: 499:  io_addr = PORTB;
 12771   015B3C  C4CF F72C          	movff	1231,_io_addr	;volatile
 12772                           
 12773                           ;src/boards/SBC8080-57Q.c: 501:  switch (io_addr) {
 12774   015B40  D045               	goto	l12995
 12775   015B42                     l12967:
 12776                           
 12777                           ; BSR set to: 7
 12778                           ;src/boards/SBC8080-57Q.c: 504:   LATF = U3TXIF + U3RXIF*2;
 12779   015B42  0E00               	movlw	0
 12780   015B44  B0B7               	btfsc	1207,0,c	;volatile
 12781   015B46  0E01               	movlw	1
 12782   015B48  0D02               	mullw	2
 12783   015B4A  50F3               	movf	243,w,c
 12784   015B4C  B2B7               	btfsc	1207,1,c	;volatile
 12785   015B4E  0F01               	addlw	1
 12786   015B50  6EC3               	movwf	195,c	;volatile
 12787                           
 12788                           ;src/boards/SBC8080-57Q.c: 505:   goto IO_wait_loop0;
 12789   015B52  D7DD               	goto	l12957
 12790   015B54                     l1704:
 12791                           
 12792                           ; BSR set to: 7
 12793                           ;src/boards/SBC8080-57Q.c: 508:   LATF = U3RXB;
 12794   015B54  C2C7 F4C3          	movff	711,1219	;volatile
 12795                           
 12796                           ;src/boards/SBC8080-57Q.c: 509:   goto IO_wait_loop0;
 12797   015B58  D7DA               	goto	l12957
 12798   015B5A                     l1705:
 12799                           
 12800                           ; BSR set to: 7
 12801                           ;src/boards/SBC8080-57Q.c: 512:   LATF = disk_stat;
 12802   015B5A  C7DB  F4C3         	movff	_disk_stat,1219	;volatile
 12803                           
 12804                           ;src/boards/SBC8080-57Q.c: 513:   goto IO_wait_loop0;
 12805   015B5E  D7D7               	goto	l12957
 12806   015B60                     l1707:
 12807                           
 12808                           ; BSR set to: 7
 12809                           ;src/boards/SBC8080-57Q.c: 517:   LATE0 = 1;
 12810   015B60  80C2               	bsf	1218,0,c	;volatile
 12811                           
 12812                           ;src/boards/SBC8080-57Q.c: 518:   G3POL = 1;
 12813   015B62  0100               	movlb	0	; () banked
 12814   015B64  85D7               	bsf	215,2,b	;volatile
 12815                           
 12816                           ;src/boards/SBC8080-57Q.c: 519:   G3POL = 0;
 12817   015B66  95D7               	bcf	215,2,b	;volatile
 12818                           
 12819                           ; BSR set to: 0
 12820                           ;src/boards/SBC8080-57Q.c: 520:   emuz80_57q_enter_bus_master();
 12821   015B68  ECCA  F0CF         	call	_emuz80_57q_enter_bus_master	;wreg free
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;src/boards/SBC8080-57Q.c: 521:   disk_io_handle();
 12825   015B6C  ECA3  F0A6         	call	_disk_io_handle	;wreg free
 12826   015B70                     l12973:
 12827                           
 12828                           ;src/boards/SBC8080-57Q.c: 522:   emuz80_57q_exit_bus_master();
 12829   015B70  ECEC  F0CF         	call	_emuz80_57q_exit_bus_master	;wreg free
 12830                           
 12831                           ;src/boards/SBC8080-57Q.c: 523:   LATE0 = 0;
 12832   015B74  90C2               	bcf	1218,0,c	;volatile
 12833                           
 12834                           ;src/boards/SBC8080-57Q.c: 524:   goto IO_wait_loop;
 12835   015B76  D7D3               	goto	l12963
 12836   015B78                     l1708:
 12837                           
 12838                           ; BSR set to: 7
 12839                           ;src/boards/SBC8080-57Q.c: 527:   LATE0 = 1;
 12840   015B78  80C2               	bsf	1218,0,c	;volatile
 12841                           
 12842                           ;src/boards/SBC8080-57Q.c: 528:   G3POL = 1;
 12843   015B7A  0100               	movlb	0	; () banked
 12844   015B7C  85D7               	bsf	215,2,b	;volatile
 12845                           
 12846                           ;src/boards/SBC8080-57Q.c: 529:   G3POL = 0;
 12847   015B7E  95D7               	bcf	215,2,b	;volatile
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;src/boards/SBC8080-57Q.c: 530:   emuz80_57q_enter_bus_master();
 12851   015B80  ECCA  F0CF         	call	_emuz80_57q_enter_bus_master	;wreg free
 12852                           
 12853                           ; BSR set to: 0
 12854                           ;src/boards/SBC8080-57Q.c: 531:   emuz80_57q_write_to_sram(0xe400, (uint8_t*)bdosccp, 0x
      +                          1600);
 12855   015B84  0EE4               	movlw	228
 12856   015B86  6E02               	movwf	(emuz80_57q_write_to_sram@addr+1)^(0+1280),c
 12857   015B88  0E00               	movlw	0
 12858   015B8A  6E01               	movwf	emuz80_57q_write_to_sram@addr^(0+1280),c
 12859   015B8C  0E6F               	movlw	low _bdosccp
 12860   015B8E  6E03               	movwf	emuz80_57q_write_to_sram@buf^(0+1280),c
 12861   015B90  0ED9               	movlw	high _bdosccp
 12862   015B92  6E04               	movwf	(emuz80_57q_write_to_sram@buf+1)^(0+1280),c
 12863   015B94  0E16               	movlw	22
 12864   015B96  6E06               	movwf	(emuz80_57q_write_to_sram@len+1)^(0+1280),c
 12865   015B98  0E00               	movlw	0
 12866   015B9A  6E05               	movwf	emuz80_57q_write_to_sram@len^(0+1280),c
 12867   015B9C  EC49  F0CA         	call	_emuz80_57q_write_to_sram	;wreg free
 12868   015BA0  D7E7               	goto	l12973
 12869   015BA2                     l1709:
 12870                           
 12871                           ; BSR set to: 7
 12872                           ;src/boards/SBC8080-57Q.c: 537:   LATE0 = 1;
 12873   015BA2  80C2               	bsf	1218,0,c	;volatile
 12874                           
 12875                           ;src/boards/SBC8080-57Q.c: 538:   G3POL = 1;
 12876   015BA4  0100               	movlb	0	; () banked
 12877   015BA6  85D7               	bsf	215,2,b	;volatile
 12878                           
 12879                           ;src/boards/SBC8080-57Q.c: 539:   G3POL = 0;
 12880   015BA8  95D7               	bcf	215,2,b	;volatile
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;src/boards/SBC8080-57Q.c: 540:   emuz80_57q_enter_bus_master();
 12884   015BAA  ECCA  F0CF         	call	_emuz80_57q_enter_bus_master	;wreg free
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;src/boards/SBC8080-57Q.c: 541:   emuz80_57q_write_to_sram(0xfa00, (uint8_t*)bios, sizeo
      +                          f(bios));
 12888   015BAE  0EFA               	movlw	250
 12889   015BB0  6E02               	movwf	(emuz80_57q_write_to_sram@addr+1)^(0+1280),c
 12890   015BB2  0E00               	movlw	0
 12891   015BB4  6E01               	movwf	emuz80_57q_write_to_sram@addr^(0+1280),c
 12892   015BB6  0EA2               	movlw	low _bios
 12893   015BB8  6E03               	movwf	emuz80_57q_write_to_sram@buf^(0+1280),c
 12894   015BBA  0EEF               	movlw	high _bios
 12895   015BBC  6E04               	movwf	(emuz80_57q_write_to_sram@buf+1)^(0+1280),c
 12896   015BBE  0E05               	movlw	5
 12897   015BC0  6E06               	movwf	(emuz80_57q_write_to_sram@len+1)^(0+1280),c
 12898   015BC2  0E36               	movlw	54
 12899   015BC4  6E05               	movwf	emuz80_57q_write_to_sram@len^(0+1280),c
 12900   015BC6  EC49  F0CA         	call	_emuz80_57q_write_to_sram	;wreg free
 12901   015BCA  D7D2               	goto	l12973
 12902   015BCC                     l12995:
 12903   015BCC  0107               	movlb	7	; () banked
 12904   015BCE  512C               	movf	_io_addr& (0+255),w,b
 12905                           
 12906                           ; Switch size 1, requested type "simple"
 12907                           ; Number of cases is 7, Range of values is 0 to 83
 12908                           ; switch strategies available:
 12909                           ; Name         Instructions Cycles
 12910                           ; simple_byte           22    12 (average)
 12911                           ;	Chosen strategy is simple_byte
 12912   015BD0  0A00               	xorlw	0	; case 0
 12913   015BD2  B4D8               	btfsc	status,2,c
 12914   015BD4  D7BF               	goto	l1704
 12915   015BD6  0A01               	xorlw	1	; case 1
 12916   015BD8  B4D8               	btfsc	status,2,c
 12917   015BDA  D7B3               	goto	l12967
 12918   015BDC  0A47               	xorlw	71	; case 70
 12919   015BDE  B4D8               	btfsc	status,2,c
 12920   015BE0  D7CB               	goto	l1708
 12921   015BE2  0A01               	xorlw	1	; case 71
 12922   015BE4  B4D8               	btfsc	status,2,c
 12923   015BE6  D7DD               	goto	l1709
 12924   015BE8  0A09               	xorlw	9	; case 78
 12925   015BEA  B4D8               	btfsc	status,2,c
 12926   015BEC  D7B6               	goto	l1705
 12927   015BEE  0A1C               	xorlw	28	; case 82
 12928   015BF0  B4D8               	btfsc	status,2,c
 12929   015BF2  D7B6               	goto	l1707
 12930   015BF4  0A01               	xorlw	1	; case 83
 12931   015BF6  B4D8               	btfsc	status,2,c
 12932   015BF8  D7B3               	goto	l1707
 12933                           
 12934                           ; BSR set to: 7
 12935                           ;src/boards/SBC8080-57Q.c: 547:  printf("WARNING: unknown I/O read (%02XH)\n\r", io_addr
      +                          );
 12936   015BFA  0EA9               	movlw	low STR_90
 12937   015BFC  0105               	movlb	5	; () banked
 12938   015BFE  6F9A               	movwf	printf@fmt& (0+255),b
 12939   015C00  0EFB               	movlw	high STR_90
 12940   015C02  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 12941   015C04  C72C  F59C         	movff	_io_addr,?_printf+2
 12942   015C08  6B9D               	clrf	(?_printf+3)& (0+255),b
 12943   015C0A  EC4F  F0CF         	call	_printf	;wreg free
 12944                           
 12945                           ; BSR set to: 5
 12946                           ;src/boards/SBC8080-57Q.c: 548:  G3POL = 1;
 12947   015C0E  0100               	movlb	0	; () banked
 12948   015C10  85D7               	bsf	215,2,b	;volatile
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;src/boards/SBC8080-57Q.c: 549:  G3POL = 0;
 12952   015C12  95D7               	bcf	215,2,b	;volatile
 12953                           
 12954                           ;src/boards/SBC8080-57Q.c: 550:  goto IO_wait_loop;
 12955   015C14  D784               	goto	l12963
 12956   015C16                     __end_of_main:
 12957                           	callstack 0
 12958                           
 12959 ;; *************** function _wait_for_programmer *****************
 12960 ;; Defined at:
 12961 ;;		line 239 in file "src/io.c"
 12962 ;; Parameters:    Size  Location     Type
 12963 ;;		None
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;		None
 12966 ;; Return value:  Size  Location     Type
 12967 ;;                  1    wreg      void 
 12968 ;; Registers used:
 12969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12970 ;; Tracked objects:
 12971 ;;		On entry : 3F/4
 12972 ;;		On exit  : 3F/5
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12977 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12979 ;;Total ram usage:        2 bytes
 12980 ;; Hardware stack levels used: 1
 12981 ;; Hardware stack levels required when called: 8
 12982 ;; This function calls:
 12983 ;;		_printf
 12984 ;; This function is called by:
 12985 ;;		_main
 12986 ;; This function uses a non-reentrant model
 12987 ;;
 12988                           
 12989                           	psect	text1
 12990   019B9E                     __ptext1:
 12991                           	callstack 0
 12992   019B9E                     _wait_for_programmer:
 12993                           	callstack 118
 12994                           
 12995                           ; BSR set to: 4
 12996                           ;src/io.c: 245:  printf("\n\r");
 12997                           
 12998                           ; BSR set to: 0
 12999                           ;incstack = 0
 13000   019B9E  0ECA               	movlw	low (STR_90+33)
 13001   019BA0  0105               	movlb	5	; () banked
 13002   019BA2  6F9A               	movwf	printf@fmt& (0+255),b
 13003   019BA4  0EFB               	movlw	high (STR_90+33)
 13004   019BA6  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13005   019BA8  EC4F  F0CF         	call	_printf	;wreg free
 13006                           
 13007                           ;src/io.c: 246:  printf("wait for programmer ...\r");
 13008   019BAC  0E28               	movlw	low STR_49
 13009   019BAE  6F9A               	movwf	printf@fmt& (0+255),b
 13010   019BB0  0EFE               	movlw	high STR_49
 13011   019BB2  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13012   019BB4  EC4F  F0CF         	call	_printf	;wreg free
 13013                           
 13014                           ; BSR set to: 5
 13015                           ;src/io.c: 247:  _delay((unsigned long)((200)*(64000000UL/4000.0)));
 13016   019BB8  0E11               	movlw	17
 13017   019BBA  0105               	movlb	5	; () banked
 13018   019BBC  6FA7               	movwf	(??_wait_for_programmer+1)& (0+255),b
 13019   019BBE  0E3C               	movlw	60
 13020   019BC0  6FA6               	movwf	??_wait_for_programmer& (0+255),b
 13021   019BC2  0ECB               	movlw	203
 13022   019BC4                     u16537:
 13023   019BC4  2EE8               	decfsz	wreg,f,c
 13024   019BC6  D7FE               	bra	u16537
 13025   019BC8  2FA6               	decfsz	??_wait_for_programmer& (0+255),f,b
 13026   019BCA  D7FC               	bra	u16537
 13027   019BCC  2FA7               	decfsz	(??_wait_for_programmer+1)& (0+255),f,b
 13028   019BCE  D7FA               	bra	u16537
 13029                           
 13030                           ;src/io.c: 248:  printf("                       \r");
 13031   019BD0  0E0F               	movlw	low STR_50
 13032   019BD2  0105               	movlb	5	; () banked
 13033   019BD4  6F9A               	movwf	printf@fmt& (0+255),b
 13034   019BD6  0EFE               	movlw	high STR_50
 13035   019BD8  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13036   019BDA  EC4F  F0CF         	call	_printf	;wreg free
 13037                           
 13038                           ; BSR set to: 5
 13039   019BDE  0012               	return		;funcret
 13040   019BE0                     __end_of_wait_for_programmer:
 13041                           	callstack 0
 13042                           
 13043 ;; *************** function _menu_select *****************
 13044 ;; Defined at:
 13045 ;;		line 134 in file "src/io.c"
 13046 ;; Parameters:    Size  Location     Type
 13047 ;;		None
 13048 ;; Auto vars:     Size  Location     Type
 13049 ;;  buf             2    8[BANK7 ] const PTR unsigned char 
 13050 ;;		 -> tmp_buf(512), 
 13051 ;;  drive_letter    1   12[BANK7 ] unsigned char 
 13052 ;;  c               1   17[BANK7 ] unsigned char 
 13053 ;;  i               2   15[BANK7 ] int 
 13054 ;;  selection       2   13[BANK7 ] int 
 13055 ;;  drive           2   10[BANK7 ] unsigned int 
 13056 ;; Return value:  Size  Location     Type
 13057 ;;                  2    0[BANK7 ] int 
 13058 ;; Registers used:
 13059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13060 ;; Tracked objects:
 13061 ;;		On entry : 3F/6
 13062 ;;		On exit  : 3F/7
 13063 ;;		Unchanged: 0/0
 13064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13065 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13066 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13067 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13068 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13069 ;;Total ram usage:       18 bytes
 13070 ;; Hardware stack levels used: 1
 13071 ;; Hardware stack levels required when called: 19
 13072 ;; This function calls:
 13073 ;;		___wmul
 13074 ;;		_f_closedir
 13075 ;;		_f_open
 13076 ;;		_f_opendir
 13077 ;;		_f_readdir
 13078 ;;		_getch
 13079 ;;		_printf
 13080 ;;		_sprintf
 13081 ;;		_strcmp
 13082 ;;		_strcpy
 13083 ;;		_strncmp
 13084 ;; This function is called by:
 13085 ;;		_main
 13086 ;; This function uses a non-reentrant model
 13087 ;;
 13088                           
 13089                           	psect	text2
 13090   0139AC                     __ptext2:
 13091                           	callstack 0
 13092   0139AC                     _menu_select:
 13093                           	callstack 107
 13094                           
 13095                           ; BSR set to: 6
 13096                           ;src/io.c: 136:     int i;;src/io.c: 137:     unsigned int drive;;src/io.c: 141:     if 
      +                          (f_opendir(&fsdir, "/") != FR_OK) {
 13097                           
 13098                           ; BSR set to: 5
 13099                           ;incstack = 0
 13100   0139AC  0E7D               	movlw	low _fsdir
 13101   0139AE  6FAF               	movwf	f_opendir@dp& (0+255),b
 13102   0139B0  0E07               	movlw	high _fsdir
 13103   0139B2  6FB0               	movwf	(f_opendir@dp+1)& (0+255),b
 13104   0139B4  0EF4               	movlw	low (STR_88+3)
 13105   0139B6  6FB1               	movwf	f_opendir@path& (0+255),b
 13106   0139B8  0EFF               	movlw	high (STR_88+3)
 13107   0139BA  6FB2               	movwf	(f_opendir@path+1)& (0+255),b
 13108   0139BC  EC9F  F0BD         	call	_f_opendir	;wreg free
 13109   0139C0  0900               	iorlw	0
 13110   0139C2  B4D8               	btfsc	status,2,c
 13111   0139C4  D00D               	goto	l12429
 13112                           
 13113                           ; BSR set to: 6
 13114                           ;src/io.c: 142:         printf("Failed to open SD Card..\n\r");
 13115   0139C6  0EA8               	movlw	low STR_32
 13116   0139C8  0105               	movlb	5	; () banked
 13117   0139CA  6F9A               	movwf	printf@fmt& (0+255),b
 13118   0139CC  0EFD               	movlw	high STR_32
 13119   0139CE  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13120   0139D0  EC4F  F0CF         	call	_printf	;wreg free
 13121                           
 13122                           ; BSR set to: 5
 13123                           ;src/io.c: 143:         return -3;
 13124   0139D4  0EFF               	movlw	255
 13125   0139D6  0107               	movlb	7	; () banked
 13126   0139D8  6FC0               	movwf	(?_menu_select+1)& (0+255),b
 13127   0139DA  0EFD               	movlw	253
 13128   0139DC  6FBF               	movwf	?_menu_select& (0+255),b
 13129   0139DE  0012               	return	
 13130   0139E0                     l12429:
 13131                           
 13132                           ; BSR set to: 6
 13133                           ;src/io.c: 146:     i = 0;
 13134   0139E0  0E00               	movlw	0
 13135   0139E2  0107               	movlb	7	; () banked
 13136   0139E4  6FCF               	movwf	(menu_select@i+1)& (0+255),b
 13137   0139E6  0E00               	movlw	0
 13138   0139E8  6FCE               	movwf	menu_select@i& (0+255),b
 13139                           
 13140                           ; BSR set to: 7
 13141                           ;src/io.c: 147:     int selection = -1;
 13142   0139EA  69CC               	setf	menu_select@selection& (0+255),b
 13143   0139EC  69CD               	setf	(menu_select@selection+1)& (0+255),b
 13144                           
 13145                           ; BSR set to: 7
 13146                           ;src/io.c: 148:     f_readdir((&fsdir), 0);
 13147   0139EE  0E7D               	movlw	low _fsdir
 13148   0139F0  0106               	movlb	6	; () banked
 13149   0139F2  6F6F               	movwf	f_readdir@dp& (0+255),b
 13150   0139F4  0E07               	movlw	high _fsdir
 13151   0139F6  6F70               	movwf	(f_readdir@dp+1)& (0+255),b
 13152   0139F8  0E00               	movlw	0
 13153   0139FA  6F71               	movwf	f_readdir@fno& (0+255),b
 13154   0139FC  0E00               	movlw	0
 13155   0139FE  6F72               	movwf	(f_readdir@fno+1)& (0+255),b
 13156   013A00  EC3E  F0C6         	call	_f_readdir	;wreg free
 13157                           
 13158                           ;src/io.c: 149:     while (f_readdir(&fsdir, &fileinfo) == FR_OK && fileinfo.fname[0] !=
      +                           0) {
 13159   013A04  D048               	goto	l12447
 13160   013A06                     l12435:
 13161                           
 13162                           ; BSR set to: 7
 13163                           ;src/io.c: 150:         if (strncmp(fileinfo.fname, "CPMDISKS", 8) == 0 ||
 13164   013A06  0EAE               	movlw	low (_fileinfo+9)
 13165   013A08  6E01               	movwf	strncmp@l^(0+1280),c
 13166   013A0A  0E07               	movlw	high (_fileinfo+9)
 13167   013A0C  6E02               	movwf	(strncmp@l+1)^(0+1280),c
 13168   013A0E  0EAE               	movlw	low STR_33
 13169   013A10  6E03               	movwf	strncmp@r^(0+1280),c
 13170   013A12  0EFF               	movlw	high STR_33
 13171   013A14  6E04               	movwf	(strncmp@r+1)^(0+1280),c
 13172   013A16  0E00               	movlw	0
 13173   013A18  6E06               	movwf	(strncmp@n+1)^(0+1280),c
 13174   013A1A  0E08               	movlw	8
 13175   013A1C  6E05               	movwf	strncmp@n^(0+1280),c
 13176   013A1E  ECE5  F0C7         	call	_strncmp	;wreg free
 13177   013A22  5001               	movf	?_strncmp^(0+1280),w,c
 13178   013A24  1002               	iorwf	(?_strncmp+1)^(0+1280),w,c
 13179   013A26  B4D8               	btfsc	status,2,c
 13180   013A28  D012               	goto	u15940
 13181   013A2A  0EAE               	movlw	low (_fileinfo+9)
 13182   013A2C  6E01               	movwf	strncmp@l^(0+1280),c
 13183   013A2E  0E07               	movlw	high (_fileinfo+9)
 13184   013A30  6E02               	movwf	(strncmp@l+1)^(0+1280),c
 13185   013A32  0EC9               	movlw	low STR_34
 13186   013A34  6E03               	movwf	strncmp@r^(0+1280),c
 13187   013A36  0EFF               	movlw	high STR_34
 13188   013A38  6E04               	movwf	(strncmp@r+1)^(0+1280),c
 13189   013A3A  0E00               	movlw	0
 13190   013A3C  6E06               	movwf	(strncmp@n+1)^(0+1280),c
 13191   013A3E  0E07               	movlw	7
 13192   013A40  6E05               	movwf	strncmp@n^(0+1280),c
 13193   013A42  ECE5  F0C7         	call	_strncmp	;wreg free
 13194   013A46  5001               	movf	?_strncmp^(0+1280),w,c
 13195   013A48  1002               	iorwf	(?_strncmp+1)^(0+1280),w,c
 13196   013A4A  A4D8               	btfss	status,2,c
 13197   013A4C  D024               	goto	l12447
 13198   013A4E                     u15940:
 13199                           
 13200                           ;src/io.c: 151:             strncmp(fileinfo.fname, "CPMDIS~", 7) == 0) {;src/io.c: 152:
      +                                       printf("%d: %s\n\r", i, fileinfo.fname);
 13201   013A4E  0E9C               	movlw	low STR_35
 13202   013A50  0105               	movlb	5	; () banked
 13203   013A52  6F9A               	movwf	printf@fmt& (0+255),b
 13204   013A54  0EFF               	movlw	high STR_35
 13205   013A56  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13206   013A58  C7CE  F59C         	movff	menu_select@i,?_printf+2
 13207   013A5C  C7CF  F59D         	movff	menu_select@i+1,?_printf+3
 13208   013A60  0EAE               	movlw	low (_fileinfo+9)
 13209   013A62  6F9E               	movwf	(?_printf+4)& (0+255),b
 13210   013A64  0E07               	movlw	high (_fileinfo+9)
 13211   013A66  6F9F               	movwf	(?_printf+5)& (0+255),b
 13212   013A68  EC4F  F0CF         	call	_printf	;wreg free
 13213                           
 13214                           ; BSR set to: 5
 13215                           ;src/io.c: 153:             if (strcmp(fileinfo.fname, "CPMDISKS") == 0)
 13216   013A6C  0EAE               	movlw	low (_fileinfo+9)
 13217   013A6E  6E01               	movwf	strcmp@l^(0+1280),c
 13218   013A70  0E07               	movlw	high (_fileinfo+9)
 13219   013A72  6E02               	movwf	(strcmp@l+1)^(0+1280),c
 13220   013A74  0EAE               	movlw	low STR_33
 13221   013A76  6E03               	movwf	strcmp@r^(0+1280),c
 13222   013A78  0EFF               	movlw	high STR_33
 13223   013A7A  6E04               	movwf	(strcmp@r+1)^(0+1280),c
 13224   013A7C  ECCD  F0CB         	call	_strcmp	;wreg free
 13225   013A80  5001               	movf	?_strcmp^(0+1280),w,c
 13226   013A82  1002               	iorwf	(?_strcmp+1)^(0+1280),w,c
 13227   013A84  A4D8               	btfss	status,2,c
 13228   013A86  D004               	goto	l12445
 13229                           
 13230                           ; BSR set to: 5
 13231                           ;src/io.c: 154:                 selection = i;
 13232   013A88  C7CE  F7CC         	movff	menu_select@i,menu_select@selection
 13233   013A8C  C7CF  F7CD         	movff	menu_select@i+1,menu_select@selection+1
 13234   013A90                     l12445:
 13235                           
 13236                           ; BSR set to: 5
 13237                           ;src/io.c: 155:             i++;
 13238   013A90  0107               	movlb	7	; () banked
 13239   013A92  4BCE               	infsnz	menu_select@i& (0+255),f,b
 13240   013A94  2BCF               	incf	(menu_select@i+1)& (0+255),f,b
 13241   013A96                     l12447:
 13242                           
 13243                           ;src/io.c: 149:     while (f_readdir(&fsdir, &fileinfo) == FR_OK && fileinfo.fname[0] !=
      +                           0) {
 13244   013A96  0E7D               	movlw	low _fsdir
 13245   013A98  0106               	movlb	6	; () banked
 13246   013A9A  6F6F               	movwf	f_readdir@dp& (0+255),b
 13247   013A9C  0E07               	movlw	high _fsdir
 13248   013A9E  6F70               	movwf	(f_readdir@dp+1)& (0+255),b
 13249   013AA0  0EA5               	movlw	low _fileinfo
 13250   013AA2  6F71               	movwf	f_readdir@fno& (0+255),b
 13251   013AA4  0E07               	movlw	high _fileinfo
 13252   013AA6  6F72               	movwf	(f_readdir@fno+1)& (0+255),b
 13253   013AA8  EC3E  F0C6         	call	_f_readdir	;wreg free
 13254   013AAC  0900               	iorlw	0
 13255   013AAE  A4D8               	btfss	status,2,c
 13256   013AB0  D004               	goto	u15970
 13257                           
 13258                           ; BSR set to: 6
 13259   013AB2  0107               	movlb	7	; () banked
 13260   013AB4  51AE               	movf	(_fileinfo+9)& (0+255),w,b
 13261   013AB6  A4D8               	btfss	status,2,c
 13262   013AB8  D7A6               	goto	l12435
 13263   013ABA                     u15970:
 13264                           
 13265                           ;src/io.c: 159:     if (1 < i) {
 13266   013ABA  0107               	movlb	7	; () banked
 13267   013ABC  BFCF               	btfsc	(menu_select@i+1)& (0+255),7,b
 13268   013ABE  D09D               	goto	l12495
 13269   013AC0  51CF               	movf	(menu_select@i+1)& (0+255),w,b
 13270   013AC2  E104               	bnz	u15980
 13271   013AC4  0E02               	movlw	2
 13272   013AC6  5DCE               	subwf	menu_select@i& (0+255),w,b
 13273   013AC8  A0D8               	btfss	status,0,c
 13274   013ACA  D097               	goto	l12495
 13275   013ACC                     u15980:
 13276                           
 13277                           ; BSR set to: 7
 13278                           ;src/io.c: 160:         printf("Select: ");
 13279   013ACC  0EA5               	movlw	low STR_37
 13280   013ACE  0105               	movlb	5	; () banked
 13281   013AD0  6F9A               	movwf	printf@fmt& (0+255),b
 13282   013AD2  0EFF               	movlw	high STR_37
 13283   013AD4  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13284   013AD6  EC4F  F0CF         	call	_printf	;wreg free
 13285   013ADA                     l12455:
 13286                           
 13287                           ;src/io.c: 162:    uint8_t c = (uint8_t)getch();
 13288   013ADA  ECE6  F0CF         	call	_getch	;wreg free
 13289   013ADE  5001               	movf	?_getch^(0+1280),w,c
 13290   013AE0  0107               	movlb	7	; () banked
 13291   013AE2  6FD0               	movwf	menu_select@c& (0+255),b
 13292                           
 13293                           ; BSR set to: 7
 13294                           ;src/io.c: 163:    if ('0' <= c && c <= '9' && c - '0' < i) {
 13295   013AE4  0E2F               	movlw	47
 13296   013AE6  65D0               	cpfsgt	menu_select@c& (0+255),b
 13297   013AE8  D016               	goto	l12465
 13298                           
 13299                           ; BSR set to: 7
 13300   013AEA  0E3A               	movlw	58
 13301   013AEC  61D0               	cpfslt	menu_select@c& (0+255),b
 13302   013AEE  D013               	goto	l12465
 13303                           
 13304                           ; BSR set to: 7
 13305   013AF0  0ED0               	movlw	208
 13306   013AF2  25D0               	addwf	menu_select@c& (0+255),w,b
 13307   013AF4  6FC1               	movwf	??_menu_select& (0+255),b
 13308   013AF6  6BC2               	clrf	(??_menu_select+1)& (0+255),b
 13309   013AF8  0EFF               	movlw	255
 13310   013AFA  23C2               	addwfc	(??_menu_select+1)& (0+255),f,b
 13311   013AFC  51CE               	movf	menu_select@i& (0+255),w,b
 13312   013AFE  5DC1               	subwf	??_menu_select& (0+255),w,b
 13313   013B00  51CF               	movf	(menu_select@i+1)& (0+255),w,b
 13314   013B02  59C2               	subwfb	(??_menu_select+1)& (0+255),w,b
 13315   013B04  B0D8               	btfsc	status,0,c
 13316   013B06  D007               	goto	l12465
 13317                           
 13318                           ; BSR set to: 7
 13319                           ;src/io.c: 164:     selection = c - '0';
 13320   013B08  0ED0               	movlw	208
 13321   013B0A  25D0               	addwf	menu_select@c& (0+255),w,b
 13322   013B0C  6FCC               	movwf	menu_select@selection& (0+255),b
 13323   013B0E  6BCD               	clrf	(menu_select@selection+1)& (0+255),b
 13324   013B10  0EFF               	movlw	255
 13325   013B12  23CD               	addwfc	(menu_select@selection+1)& (0+255),f,b
 13326                           
 13327                           ;src/io.c: 165:     break;
 13328   013B14  D00A               	goto	u16040
 13329   013B16                     l12465:
 13330                           
 13331                           ; BSR set to: 7
 13332                           ;src/io.c: 167:    if ((c == 0x0d || c == 0x0a) && 0 <= selection)
 13333   013B16  0E0D               	movlw	13
 13334   013B18  19D0               	xorwf	menu_select@c& (0+255),w,b
 13335   013B1A  B4D8               	btfsc	status,2,c
 13336   013B1C  D004               	goto	u16030
 13337                           
 13338                           ; BSR set to: 7
 13339   013B1E  0E0A               	movlw	10
 13340   013B20  19D0               	xorwf	menu_select@c& (0+255),w,b
 13341   013B22  A4D8               	btfss	status,2,c
 13342   013B24  D7DA               	goto	l12455
 13343   013B26                     u16030:
 13344                           
 13345                           ; BSR set to: 7
 13346   013B26  BFCD               	btfsc	(menu_select@selection+1)& (0+255),7,b
 13347   013B28  D7D8               	goto	l12455
 13348   013B2A                     u16040:
 13349                           
 13350                           ; BSR set to: 7
 13351                           ;src/io.c: 170:   printf("%d\n\r", selection);
 13352   013B2A  0EC7               	movlw	low (STR_56+16)
 13353   013B2C  0105               	movlb	5	; () banked
 13354   013B2E  6F9A               	movwf	printf@fmt& (0+255),b
 13355   013B30  0EFE               	movlw	high (STR_56+16)
 13356   013B32  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13357   013B34  C7CC  F59C         	movff	menu_select@selection,?_printf+2
 13358   013B38  C7CD  F59D         	movff	menu_select@selection+1,?_printf+3
 13359   013B3C  EC4F  F0CF         	call	_printf	;wreg free
 13360                           
 13361                           ; BSR set to: 5
 13362                           ;src/io.c: 171:   f_readdir((&fsdir), 0);
 13363   013B40  0E7D               	movlw	low _fsdir
 13364   013B42  0106               	movlb	6	; () banked
 13365   013B44  6F6F               	movwf	f_readdir@dp& (0+255),b
 13366   013B46  0E07               	movlw	high _fsdir
 13367   013B48  6F70               	movwf	(f_readdir@dp+1)& (0+255),b
 13368   013B4A  0E00               	movlw	0
 13369   013B4C  6F71               	movwf	f_readdir@fno& (0+255),b
 13370   013B4E  0E00               	movlw	0
 13371   013B50  6F72               	movwf	(f_readdir@fno+1)& (0+255),b
 13372   013B52  EC3E  F0C6         	call	_f_readdir	;wreg free
 13373                           
 13374                           ; BSR set to: 6
 13375                           ;src/io.c: 172:   i = 0;
 13376   013B56  0E00               	movlw	0
 13377   013B58  0107               	movlb	7	; () banked
 13378   013B5A  6FCF               	movwf	(menu_select@i+1)& (0+255),b
 13379   013B5C  0E00               	movlw	0
 13380   013B5E  6FCE               	movwf	menu_select@i& (0+255),b
 13381                           
 13382                           ;src/io.c: 173:   while (f_readdir(&fsdir, &fileinfo) == FR_OK && fileinfo.fname[0] != 0
      +                          ) {
 13383   013B60  D02E               	goto	l12489
 13384   013B62                     l12479:
 13385                           
 13386                           ; BSR set to: 7
 13387                           ;src/io.c: 174:    if (strncmp(fileinfo.fname, "CPMDISKS", 8) == 0 ||
 13388   013B62  0EAE               	movlw	low (_fileinfo+9)
 13389   013B64  6E01               	movwf	strncmp@l^(0+1280),c
 13390   013B66  0E07               	movlw	high (_fileinfo+9)
 13391   013B68  6E02               	movwf	(strncmp@l+1)^(0+1280),c
 13392   013B6A  0EAE               	movlw	low STR_33
 13393   013B6C  6E03               	movwf	strncmp@r^(0+1280),c
 13394   013B6E  0EFF               	movlw	high STR_33
 13395   013B70  6E04               	movwf	(strncmp@r+1)^(0+1280),c
 13396   013B72  0E00               	movlw	0
 13397   013B74  6E06               	movwf	(strncmp@n+1)^(0+1280),c
 13398   013B76  0E08               	movlw	8
 13399   013B78  6E05               	movwf	strncmp@n^(0+1280),c
 13400   013B7A  ECE5  F0C7         	call	_strncmp	;wreg free
 13401   013B7E  5001               	movf	?_strncmp^(0+1280),w,c
 13402   013B80  1002               	iorwf	(?_strncmp+1)^(0+1280),w,c
 13403   013B82  B4D8               	btfsc	status,2,c
 13404   013B84  D012               	goto	u16060
 13405   013B86  0EAE               	movlw	low (_fileinfo+9)
 13406   013B88  6E01               	movwf	strncmp@l^(0+1280),c
 13407   013B8A  0E07               	movlw	high (_fileinfo+9)
 13408   013B8C  6E02               	movwf	(strncmp@l+1)^(0+1280),c
 13409   013B8E  0EC9               	movlw	low STR_34
 13410   013B90  6E03               	movwf	strncmp@r^(0+1280),c
 13411   013B92  0EFF               	movlw	high STR_34
 13412   013B94  6E04               	movwf	(strncmp@r+1)^(0+1280),c
 13413   013B96  0E00               	movlw	0
 13414   013B98  6E06               	movwf	(strncmp@n+1)^(0+1280),c
 13415   013B9A  0E07               	movlw	7
 13416   013B9C  6E05               	movwf	strncmp@n^(0+1280),c
 13417   013B9E  ECE5  F0C7         	call	_strncmp	;wreg free
 13418   013BA2  5001               	movf	?_strncmp^(0+1280),w,c
 13419   013BA4  1002               	iorwf	(?_strncmp+1)^(0+1280),w,c
 13420   013BA6  A4D8               	btfss	status,2,c
 13421   013BA8  D00A               	goto	l12489
 13422   013BAA                     u16060:
 13423                           
 13424                           ;src/io.c: 175:     strncmp(fileinfo.fname, "CPMDIS~", 7) == 0) {;src/io.c: 176:     if 
      +                          (selection == i)
 13425   013BAA  0107               	movlb	7	; () banked
 13426   013BAC  51CE               	movf	menu_select@i& (0+255),w,b
 13427   013BAE  19CC               	xorwf	menu_select@selection& (0+255),w,b
 13428   013BB0  E104               	bnz	l12487
 13429   013BB2  51CF               	movf	(menu_select@i+1)& (0+255),w,b
 13430   013BB4  19CD               	xorwf	(menu_select@selection+1)& (0+255),w,b
 13431   013BB6  B4D8               	btfsc	status,2,c
 13432   013BB8  D014               	goto	u16090
 13433   013BBA                     l12487:
 13434                           
 13435                           ; BSR set to: 7
 13436                           ;src/io.c: 178:     i++;
 13437   013BBA  4BCE               	infsnz	menu_select@i& (0+255),f,b
 13438   013BBC  2BCF               	incf	(menu_select@i+1)& (0+255),f,b
 13439   013BBE                     l12489:
 13440                           
 13441                           ;src/io.c: 173:   while (f_readdir(&fsdir, &fileinfo) == FR_OK && fileinfo.fname[0] != 0
      +                          ) {
 13442   013BBE  0E7D               	movlw	low _fsdir
 13443   013BC0  0106               	movlb	6	; () banked
 13444   013BC2  6F6F               	movwf	f_readdir@dp& (0+255),b
 13445   013BC4  0E07               	movlw	high _fsdir
 13446   013BC6  6F70               	movwf	(f_readdir@dp+1)& (0+255),b
 13447   013BC8  0EA5               	movlw	low _fileinfo
 13448   013BCA  6F71               	movwf	f_readdir@fno& (0+255),b
 13449   013BCC  0E07               	movlw	high _fileinfo
 13450   013BCE  6F72               	movwf	(f_readdir@fno+1)& (0+255),b
 13451   013BD0  EC3E  F0C6         	call	_f_readdir	;wreg free
 13452   013BD4  0900               	iorlw	0
 13453   013BD6  A4D8               	btfss	status,2,c
 13454   013BD8  D004               	goto	u16090
 13455                           
 13456                           ; BSR set to: 6
 13457   013BDA  0107               	movlb	7	; () banked
 13458   013BDC  51AE               	movf	(_fileinfo+9)& (0+255),w,b
 13459   013BDE  A4D8               	btfss	status,2,c
 13460   013BE0  D7C0               	goto	l12479
 13461   013BE2                     u16090:
 13462                           
 13463                           ;src/io.c: 181:   printf("%s is selected.\n\r", fileinfo.fname);
 13464   013BE2  0E19               	movlw	low STR_41
 13465   013BE4  0105               	movlb	5	; () banked
 13466   013BE6  6F9A               	movwf	printf@fmt& (0+255),b
 13467   013BE8  0EFF               	movlw	high STR_41
 13468   013BEA  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13469   013BEC  0EAE               	movlw	low (_fileinfo+9)
 13470   013BEE  6F9C               	movwf	(?_printf+2)& (0+255),b
 13471   013BF0  0E07               	movlw	high (_fileinfo+9)
 13472   013BF2  6F9D               	movwf	(?_printf+3)& (0+255),b
 13473   013BF4  EC4F  F0CF         	call	_printf	;wreg free
 13474                           
 13475                           ;src/io.c: 182:  } else {
 13476   013BF8  D00A               	goto	l12497
 13477   013BFA                     l12495:
 13478                           
 13479                           ; BSR set to: 7
 13480                           ;src/io.c: 183:   strcpy(fileinfo.fname, "CPMDISKS");
 13481   013BFA  0EAE               	movlw	low (_fileinfo+9)
 13482   013BFC  6E01               	movwf	strcpy@dest^(0+1280),c
 13483   013BFE  0E07               	movlw	high (_fileinfo+9)
 13484   013C00  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 13485   013C02  0EAE               	movlw	low STR_33
 13486   013C04  6E03               	movwf	strcpy@src^(0+1280),c
 13487   013C06  0EFF               	movlw	high STR_33
 13488   013C08  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 13489   013C0A  EC85  F0CE         	call	_strcpy	;wreg free
 13490   013C0E                     l12497:
 13491                           
 13492                           ;src/io.c: 185:  f_closedir(&fsdir);
 13493   013C0E  0E7D               	movlw	low _fsdir
 13494   013C10  0105               	movlb	5	; () banked
 13495   013C12  6FB1               	movwf	f_closedir@dp& (0+255),b
 13496   013C14  0E07               	movlw	high _fsdir
 13497   013C16  6FB2               	movwf	(f_closedir@dp+1)& (0+255),b
 13498   013C18  ECFD  F0CE         	call	_f_closedir	;wreg free
 13499                           
 13500                           ; BSR set to: 5
 13501                           ;src/io.c: 189:  for (drive = 0; drive < num_drives && num_files < 6; drive++) {
 13502   013C1C  0E00               	movlw	0
 13503   013C1E  0107               	movlb	7	; () banked
 13504   013C20  6FCA               	movwf	(menu_select@drive+1)& (0+255),b
 13505   013C22  0E00               	movlw	0
 13506   013C24  6FC9               	movwf	menu_select@drive& (0+255),b
 13507   013C26  D079               	goto	l12517
 13508   013C28                     l12501:
 13509                           
 13510                           ; BSR set to: 7
 13511                           ;src/io.c: 190:   char drive_letter = (char)('A' + drive);
 13512   013C28  51C9               	movf	menu_select@drive& (0+255),w,b
 13513   013C2A  0F41               	addlw	65
 13514   013C2C  6FCB               	movwf	menu_select@drive_letter& (0+255),b
 13515                           
 13516                           ;src/io.c: 191:   char * const buf = (char *)tmp_buf[0];
 13517   013C2E  0EBC               	movlw	low _tmp_buf
 13518   013C30  6FC7               	movwf	menu_select@buf& (0+255),b
 13519   013C32  0E17               	movlw	high _tmp_buf
 13520   013C34  6FC8               	movwf	(menu_select@buf+1)& (0+255),b
 13521                           
 13522                           ; BSR set to: 7
 13523                           ;src/io.c: 192:   sprintf(buf, "%s/DRIVE%c.DSK", fileinfo.fname, drive_letter);
 13524   013C36  C7C7  F59A         	movff	menu_select@buf,sprintf@s
 13525   013C3A  C7C8  F59B         	movff	menu_select@buf+1,sprintf@s+1
 13526   013C3E  0E70               	movlw	low STR_43
 13527   013C40  0105               	movlb	5	; () banked
 13528   013C42  6F9C               	movwf	sprintf@fmt& (0+255),b
 13529   013C44  0EFF               	movlw	high STR_43
 13530   013C46  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
 13531   013C48  0EAE               	movlw	low (_fileinfo+9)
 13532   013C4A  6F9E               	movwf	(?_sprintf+4)& (0+255),b
 13533   013C4C  0E07               	movlw	high (_fileinfo+9)
 13534   013C4E  6F9F               	movwf	(?_sprintf+5)& (0+255),b
 13535   013C50  C7CB  F5A0         	movff	menu_select@drive_letter,?_sprintf+6
 13536   013C54  6BA1               	clrf	(?_sprintf+7)& (0+255),b
 13537   013C56  ECD4  F0CC         	call	_sprintf	;wreg free
 13538                           
 13539                           ; BSR set to: 5
 13540                           ;src/io.c: 193:   if (f_open(&files[num_files], buf, 0x01|0x02) == FR_OK) {
 13541   013C5A  C71F  F501         	movff	_num_files,___wmul@multiplier
 13542   013C5E  C720  F502         	movff	_num_files+1,___wmul@multiplier+1
 13543   013C62  0E02               	movlw	2
 13544   013C64  6E04               	movwf	(___wmul@multiplicand+1)^(0+1280),c
 13545   013C66  0E22               	movlw	34
 13546   013C68  6E03               	movwf	___wmul@multiplicand^(0+1280),c
 13547   013C6A  EC62  F0CF         	call	___wmul	;wreg free
 13548   013C6E  0EC0               	movlw	low _files
 13549   013C70  2401               	addwf	?___wmul^(0+1280),w,c
 13550   013C72  0107               	movlb	7	; () banked
 13551   013C74  6FC5               	movwf	_menu_select$3971& (0+255),b
 13552   013C76  0E08               	movlw	high _files
 13553   013C78  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
 13554   013C7A  6FC6               	movwf	(_menu_select$3971+1)& (0+255),b
 13555                           
 13556                           ; BSR set to: 7
 13557                           ;src/io.c: 193:   if (f_open(&files[num_files], buf, 0x01|0x02) == FR_OK) {
 13558   013C7C  C7C5  F6AF         	movff	_menu_select$3971,f_open@fp
 13559   013C80  C7C6  F6B0         	movff	_menu_select$3971+1,f_open@fp+1
 13560   013C84  C7C7  F6B1         	movff	menu_select@buf,f_open@path
 13561   013C88  C7C8  F6B2         	movff	menu_select@buf+1,f_open@path+1
 13562   013C8C  0E03               	movlw	3
 13563   013C8E  0106               	movlb	6	; () banked
 13564   013C90  6FB3               	movwf	f_open@mode& (0+255),b
 13565   013C92  ECA4  F08F         	call	_f_open	;wreg free
 13566   013C96  0900               	iorlw	0
 13567   013C98  A4D8               	btfss	status,2,c
 13568   013C9A  D03C               	goto	l12515
 13569                           
 13570                           ; BSR set to: 6
 13571                           ;src/io.c: 194:    printf("Image file %s/DRIVE%c.DSK is assigned to drive %c\n\r",
 13572   013C9C  0E59               	movlw	low STR_44
 13573   013C9E  0105               	movlb	5	; () banked
 13574   013CA0  6F9A               	movwf	printf@fmt& (0+255),b
 13575   013CA2  0EF8               	movlw	high STR_44
 13576   013CA4  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13577   013CA6  0EAE               	movlw	low (_fileinfo+9)
 13578   013CA8  6F9C               	movwf	(?_printf+2)& (0+255),b
 13579   013CAA  0E07               	movlw	high (_fileinfo+9)
 13580   013CAC  6F9D               	movwf	(?_printf+3)& (0+255),b
 13581   013CAE  C7CB  F59E         	movff	menu_select@drive_letter,?_printf+4
 13582   013CB2  6B9F               	clrf	(?_printf+5)& (0+255),b
 13583   013CB4  C7CB  F5A0         	movff	menu_select@drive_letter,?_printf+6
 13584   013CB8  6BA1               	clrf	(?_printf+7)& (0+255),b
 13585   013CBA  EC4F  F0CF         	call	_printf	;wreg free
 13586                           
 13587                           ; BSR set to: 5
 13588                           ;src/io.c: 196:    drives[drive].filep = &files[num_files];
 13589   013CBE  C71F  F501         	movff	_num_files,___wmul@multiplier
 13590   013CC2  C720  F502         	movff	_num_files+1,___wmul@multiplier+1
 13591   013CC6  0E02               	movlw	2
 13592   013CC8  6E04               	movwf	(___wmul@multiplicand+1)^(0+1280),c
 13593   013CCA  0E22               	movlw	34
 13594   013CCC  6E03               	movwf	___wmul@multiplicand^(0+1280),c
 13595   013CCE  EC62  F0CF         	call	___wmul	;wreg free
 13596   013CD2  0EC0               	movlw	low _files
 13597   013CD4  2401               	addwf	?___wmul^(0+1280),w,c
 13598   013CD6  0107               	movlb	7	; () banked
 13599   013CD8  6FC1               	movwf	??_menu_select& (0+255),b
 13600   013CDA  0E08               	movlw	high _files
 13601   013CDC  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
 13602   013CDE  6FC2               	movwf	(??_menu_select+1)& (0+255),b
 13603   013CE0  0E80               	movlw	low _drives
 13604   013CE2  6FC3               	movwf	(??_menu_select+2)& (0+255),b
 13605   013CE4  0E08               	movlw	high _drives
 13606   013CE6  6FC4               	movwf	(??_menu_select+3)& (0+255),b
 13607   013CE8  0E02               	movlw	2
 13608   013CEA  27C3               	addwf	(??_menu_select+2)& (0+255),f,b
 13609   013CEC  0E00               	movlw	0
 13610   013CEE  23C4               	addwfc	(??_menu_select+3)& (0+255),f,b
 13611   013CF0  90D8               	bcf	status,0,c
 13612   013CF2  35C9               	rlcf	menu_select@drive& (0+255),w,b
 13613   013CF4  6ED9               	movwf	fsr2l,c
 13614   013CF6  35CA               	rlcf	(menu_select@drive+1)& (0+255),w,b
 13615   013CF8  6EDA               	movwf	fsr2h,c
 13616   013CFA  90D8               	bcf	status,0,c
 13617   013CFC  36D9               	rlcf	fsr2l,f,c
 13618   013CFE  36DA               	rlcf	fsr2h,f,c
 13619   013D00  51C3               	movf	(??_menu_select+2)& (0+255),w,b
 13620   013D02  26D9               	addwf	fsr2l,f,c
 13621   013D04  51C4               	movf	(??_menu_select+3)& (0+255),w,b
 13622   013D06  22DA               	addwfc	fsr2h,f,c
 13623   013D08  C7C1  F4DE         	movff	??_menu_select,postinc2
 13624   013D0C  C7C2  F4DD         	movff	??_menu_select+1,postdec2
 13625                           
 13626                           ; BSR set to: 7
 13627                           ;src/io.c: 197:    num_files++;
 13628   013D10  4B1F               	infsnz	_num_files& (0+255),f,b
 13629   013D12  2B20               	incf	(_num_files+1)& (0+255),f,b
 13630   013D14                     l12515:
 13631                           
 13632                           ;src/io.c: 199:  }
 13633   013D14  0107               	movlb	7	; () banked
 13634   013D16  4BC9               	infsnz	menu_select@drive& (0+255),f,b
 13635   013D18  2BCA               	incf	(menu_select@drive+1)& (0+255),f,b
 13636   013D1A                     l12517:
 13637                           
 13638                           ; BSR set to: 7
 13639   013D1A  51CA               	movf	(menu_select@drive+1)& (0+255),w,b
 13640   013D1C  E10C               	bnz	l12521
 13641   013D1E  0E10               	movlw	16
 13642   013D20  5DC9               	subwf	menu_select@drive& (0+255),w,b
 13643   013D22  B0D8               	btfsc	status,0,c
 13644   013D24  D008               	goto	u16120
 13645                           
 13646                           ; BSR set to: 7
 13647   013D26  BF20               	btfsc	(_num_files+1)& (0+255),7,b
 13648   013D28  D77F               	goto	l12501
 13649   013D2A  5120               	movf	(_num_files+1)& (0+255),w,b
 13650   013D2C  E104               	bnz	u16120
 13651   013D2E  0E06               	movlw	6
 13652   013D30  5D1F               	subwf	_num_files& (0+255),w,b
 13653   013D32  A0D8               	btfss	status,0,c
 13654   013D34  D779               	goto	l12501
 13655   013D36                     u16120:
 13656   013D36                     l12521:
 13657                           
 13658                           ; BSR set to: 7
 13659                           ;src/io.c: 200:  if (drives[0].filep == ((void*)0)) {
 13660   013D36  0108               	movlb	8	; () banked
 13661   013D38  5182               	movf	(_drives+2)& (0+255),w,b
 13662   013D3A  1183               	iorwf	(_drives+3)& (0+255),w,b
 13663   013D3C  A4D8               	btfss	status,2,c
 13664   013D3E  D00D               	goto	l12529
 13665                           
 13666                           ; BSR set to: 8
 13667                           ;src/io.c: 201:   printf("No boot disk.\n\r");
 13668   013D40  0E60               	movlw	low STR_45
 13669   013D42  0105               	movlb	5	; () banked
 13670   013D44  6F9A               	movwf	printf@fmt& (0+255),b
 13671   013D46  0EFF               	movlw	high STR_45
 13672   013D48  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 13673   013D4A  EC4F  F0CF         	call	_printf	;wreg free
 13674                           
 13675                           ; BSR set to: 5
 13676                           ;src/io.c: 202:   return -4;
 13677   013D4E  0EFF               	movlw	255
 13678   013D50  0107               	movlb	7	; () banked
 13679   013D52  6FC0               	movwf	(?_menu_select+1)& (0+255),b
 13680   013D54  0EFC               	movlw	252
 13681   013D56  6FBF               	movwf	?_menu_select& (0+255),b
 13682   013D58  0012               	return	
 13683   013D5A                     l12529:
 13684                           
 13685                           ; BSR set to: 8
 13686                           ;src/io.c: 204: return 0;
 13687   013D5A  0E00               	movlw	0
 13688   013D5C  0107               	movlb	7	; () banked
 13689   013D5E  6FC0               	movwf	(?_menu_select+1)& (0+255),b
 13690   013D60  0E00               	movlw	0
 13691   013D62  6FBF               	movwf	?_menu_select& (0+255),b
 13692                           
 13693                           ; BSR set to: 7
 13694   013D64  0012               	return		;funcret
 13695   013D66                     __end_of_menu_select:
 13696                           	callstack 0
 13697                           
 13698 ;; *************** function _strncmp *****************
 13699 ;; Defined at:
 13700 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 13701 ;; Parameters:    Size  Location     Type
 13702 ;;  l               2    0[COMRAM] PTR const unsigned char 
 13703 ;;		 -> fileinfo$fname(13), fileinfo(22), 
 13704 ;;  r               2    2[COMRAM] PTR const unsigned char 
 13705 ;;		 -> STR_40(8), STR_39(9), STR_34(8), STR_33(9), 
 13706 ;;  n               2    4[COMRAM] unsigned int 
 13707 ;; Auto vars:     Size  Location     Type
 13708 ;;		None
 13709 ;; Return value:  Size  Location     Type
 13710 ;;                  2    0[COMRAM] int 
 13711 ;; Registers used:
 13712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13713 ;; Tracked objects:
 13714 ;;		On entry : 0/7
 13715 ;;		On exit  : 0/0
 13716 ;;		Unchanged: 0/0
 13717 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13718 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13721 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13722 ;;Total ram usage:        7 bytes
 13723 ;; Hardware stack levels used: 1
 13724 ;; This function calls:
 13725 ;;		Nothing
 13726 ;; This function is called by:
 13727 ;;		_menu_select
 13728 ;; This function uses a non-reentrant model
 13729 ;;
 13730                           
 13731                           	psect	text3
 13732   018FCA                     __ptext3:
 13733                           	callstack 0
 13734   018FCA                     _strncmp:
 13735                           	callstack 125
 13736                           
 13737                           ; BSR set to: 7
 13738                           ;incstack = 0
 13739   018FCA  0605               	decf	strncmp@n^(0+1280),f,c
 13740   018FCC  A0D8               	btfss	status,0,c
 13741   018FCE  0606               	decf	(strncmp@n+1)^(0+1280),f,c
 13742   018FD0  2805               	incf	strncmp@n^(0+1280),w,c
 13743   018FD2  E10F               	bnz	l12189
 13744   018FD4  2806               	incf	(strncmp@n+1)^(0+1280),w,c
 13745   018FD6  A4D8               	btfss	status,2,c
 13746   018FD8  D00C               	goto	l12189
 13747   018FDA  0E00               	movlw	0
 13748   018FDC  6E02               	movwf	(?_strncmp+1)^(0+1280),c
 13749   018FDE  0E00               	movlw	0
 13750   018FE0  6E01               	movwf	?_strncmp^(0+1280),c
 13751   018FE2  0012               	return	
 13752   018FE4                     l12187:
 13753   018FE4  4A01               	infsnz	strncmp@l^(0+1280),f,c
 13754   018FE6  2A02               	incf	(strncmp@l+1)^(0+1280),f,c
 13755   018FE8  4A03               	infsnz	strncmp@r^(0+1280),f,c
 13756   018FEA  2A04               	incf	(strncmp@r+1)^(0+1280),f,c
 13757   018FEC  0605               	decf	strncmp@n^(0+1280),f,c
 13758   018FEE  A0D8               	btfss	status,0,c
 13759   018FF0  0606               	decf	(strncmp@n+1)^(0+1280),f,c
 13760   018FF2                     l12189:
 13761   018FF2  C501  F4D9         	movff	strncmp@l,fsr2l
 13762   018FF6  C502  F4DA         	movff	strncmp@l+1,fsr2h
 13763   018FFA  50DF               	movf	indf2,w,c
 13764   018FFC  B4D8               	btfsc	status,2,c
 13765   018FFE  D020               	goto	u15690
 13766   019000  C503  F4F6         	movff	strncmp@r,tblptrl
 13767   019004  C504  F4F7         	movff	strncmp@r+1,tblptrh
 13768   019008                     	if	0	;tblptru may be non-zero
 13769   019008                     	endif
 13770   019008                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13771   019008  0E00               	movlw	low (__mediumconst shr (0+16))
 13772   01900A  6EF8               	movwf	tblptru,c
 13773   01900C                     	endif
 13774   01900C  0008               	tblrd		*
 13775   01900E  50F5               	movf	tablat,w,c
 13776   019010  0900               	iorlw	0
 13777   019012  B4D8               	btfsc	status,2,c
 13778   019014  D015               	goto	u15690
 13779   019016  5005               	movf	strncmp@n^(0+1280),w,c
 13780   019018  1006               	iorwf	(strncmp@n+1)^(0+1280),w,c
 13781   01901A  B4D8               	btfsc	status,2,c
 13782   01901C  D011               	goto	u15690
 13783   01901E  C501  F4D9         	movff	strncmp@l,fsr2l
 13784   019022  C502  F4DA         	movff	strncmp@l+1,fsr2h
 13785   019026  50DF               	movf	indf2,w,c
 13786   019028  6E07               	movwf	??_strncmp^(0+1280),c
 13787   01902A  C503  F4F6         	movff	strncmp@r,tblptrl
 13788   01902E  C504  F4F7         	movff	strncmp@r+1,tblptrh
 13789   019032                     	if	0	;tblptru may be non-zero
 13790   019032                     	endif
 13791   019032                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13792   019032  0E00               	movlw	low (__mediumconst shr (0+16))
 13793   019034  6EF8               	movwf	tblptru,c
 13794   019036                     	endif
 13795   019036  0008               	tblrd		*
 13796   019038  50F5               	movf	tablat,w,c
 13797   01903A  1807               	xorwf	??_strncmp^(0+1280),w,c
 13798   01903C  B4D8               	btfsc	status,2,c
 13799   01903E  D7D2               	goto	l12187
 13800   019040                     u15690:
 13801   019040  C501  F4D9         	movff	strncmp@l,fsr2l
 13802   019044  C502  F4DA         	movff	strncmp@l+1,fsr2h
 13803   019048  50DF               	movf	indf2,w,c
 13804   01904A  6E07               	movwf	??_strncmp^(0+1280),c
 13805   01904C  C503  F4F6         	movff	strncmp@r,tblptrl
 13806   019050  C504  F4F7         	movff	strncmp@r+1,tblptrh
 13807   019054                     	if	0	;tblptru may be non-zero
 13808   019054                     	endif
 13809   019054                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13810   019054  0E00               	movlw	low (__mediumconst shr (0+16))
 13811   019056  6EF8               	movwf	tblptru,c
 13812   019058                     	endif
 13813   019058  0008               	tblrd		*
 13814   01905A  50F5               	movf	tablat,w,c
 13815   01905C  5C07               	subwf	??_strncmp^(0+1280),w,c
 13816   01905E  6E01               	movwf	?_strncmp^(0+1280),c
 13817   019060  6A02               	clrf	(?_strncmp+1)^(0+1280),c
 13818   019062  A0D8               	btfss	status,0,c
 13819   019064  0602               	decf	(?_strncmp+1)^(0+1280),f,c
 13820   019066  0012               	return		;funcret
 13821   019068                     __end_of_strncmp:
 13822                           	callstack 0
 13823                           
 13824 ;; *************** function _strcmp *****************
 13825 ;; Defined at:
 13826 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
 13827 ;; Parameters:    Size  Location     Type
 13828 ;;  l               2    0[COMRAM] PTR const unsigned char 
 13829 ;;		 -> fileinfo$fname(13), fileinfo(22), 
 13830 ;;  r               2    2[COMRAM] PTR const unsigned char 
 13831 ;;		 -> STR_36(9), 
 13832 ;; Auto vars:     Size  Location     Type
 13833 ;;		None
 13834 ;; Return value:  Size  Location     Type
 13835 ;;                  2    0[COMRAM] int 
 13836 ;; Registers used:
 13837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13838 ;; Tracked objects:
 13839 ;;		On entry : 3F/5
 13840 ;;		On exit  : 3F/5
 13841 ;;		Unchanged: 3E/0
 13842 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13845 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13846 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13847 ;;Total ram usage:        5 bytes
 13848 ;; Hardware stack levels used: 1
 13849 ;; This function calls:
 13850 ;;		Nothing
 13851 ;; This function is called by:
 13852 ;;		_menu_select
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           	psect	text4
 13857   01979A                     __ptext4:
 13858                           	callstack 0
 13859   01979A                     _strcmp:
 13860                           	callstack 125
 13861                           
 13862                           ; BSR set to: 5
 13863                           
 13864                           ;incstack = 0
 13865   01979A  D004               	goto	l12205
 13866   01979C                     l12203:
 13867                           
 13868                           ; BSR set to: 5
 13869   01979C  4A01               	infsnz	strcmp@l^(0+1280),f,c
 13870   01979E  2A02               	incf	(strcmp@l+1)^(0+1280),f,c
 13871   0197A0  4A03               	infsnz	strcmp@r^(0+1280),f,c
 13872   0197A2  2A04               	incf	(strcmp@r+1)^(0+1280),f,c
 13873   0197A4                     l12205:
 13874                           
 13875                           ; BSR set to: 5
 13876   0197A4  C501  F4D9         	movff	strcmp@l,fsr2l
 13877   0197A8  C502  F4DA         	movff	strcmp@l+1,fsr2h
 13878   0197AC  50DF               	movf	indf2,w,c
 13879   0197AE  6E05               	movwf	??_strcmp^(0+1280),c
 13880   0197B0  C503  F4F6         	movff	strcmp@r,tblptrl
 13881   0197B4  C504  F4F7         	movff	strcmp@r+1,tblptrh
 13882   0197B8                     	if	0	;tblptru may be non-zero
 13883   0197B8                     	endif
 13884   0197B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13885   0197B8  0E00               	movlw	low (__mediumconst shr (0+16))
 13886   0197BA  6EF8               	movwf	tblptru,c
 13887   0197BC                     	endif
 13888   0197BC  0008               	tblrd		*
 13889   0197BE  50F5               	movf	tablat,w,c
 13890   0197C0  1805               	xorwf	??_strcmp^(0+1280),w,c
 13891   0197C2  A4D8               	btfss	status,2,c
 13892   0197C4  D007               	goto	u15710
 13893                           
 13894                           ; BSR set to: 5
 13895   0197C6  C501  F4D9         	movff	strcmp@l,fsr2l
 13896   0197CA  C502  F4DA         	movff	strcmp@l+1,fsr2h
 13897   0197CE  50DF               	movf	indf2,w,c
 13898   0197D0  A4D8               	btfss	status,2,c
 13899   0197D2  D7E4               	goto	l12203
 13900   0197D4                     u15710:
 13901                           
 13902                           ; BSR set to: 5
 13903   0197D4  C501  F4D9         	movff	strcmp@l,fsr2l
 13904   0197D8  C502  F4DA         	movff	strcmp@l+1,fsr2h
 13905   0197DC  50DF               	movf	indf2,w,c
 13906   0197DE  6E05               	movwf	??_strcmp^(0+1280),c
 13907   0197E0  C503  F4F6         	movff	strcmp@r,tblptrl
 13908   0197E4  C504  F4F7         	movff	strcmp@r+1,tblptrh
 13909   0197E8                     	if	0	;tblptru may be non-zero
 13910   0197E8                     	endif
 13911   0197E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13912   0197E8  0E00               	movlw	low (__mediumconst shr (0+16))
 13913   0197EA  6EF8               	movwf	tblptru,c
 13914   0197EC                     	endif
 13915   0197EC  0008               	tblrd		*
 13916   0197EE  50F5               	movf	tablat,w,c
 13917   0197F0  5C05               	subwf	??_strcmp^(0+1280),w,c
 13918   0197F2  6E01               	movwf	?_strcmp^(0+1280),c
 13919   0197F4  6A02               	clrf	(?_strcmp+1)^(0+1280),c
 13920   0197F6  A0D8               	btfss	status,0,c
 13921   0197F8  0602               	decf	(?_strcmp+1)^(0+1280),f,c
 13922                           
 13923                           ; BSR set to: 5
 13924   0197FA  0012               	return		;funcret
 13925   0197FC                     __end_of_strcmp:
 13926                           	callstack 0
 13927                           
 13928 ;; *************** function _sprintf *****************
 13929 ;; Defined at:
 13930 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;  s               2   58[BANK5 ] PTR unsigned char 
 13933 ;;		 -> tmp_buf(512), 
 13934 ;;  fmt             2   60[BANK5 ] PTR const unsigned char 
 13935 ;;		 -> STR_43(15), 
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;  f              12   68[BANK5 ] struct _IO_FILE
 13938 ;;  ap              2   66[BANK5 ] PTR void [1]
 13939 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13940 ;;  ret             2    0        int 
 13941 ;; Return value:  Size  Location     Type
 13942 ;;                  2   58[BANK5 ] int 
 13943 ;; Registers used:
 13944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13945 ;; Tracked objects:
 13946 ;;		On entry : 3F/5
 13947 ;;		On exit  : 3F/5
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13950 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13951 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13953 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13954 ;;Total ram usage:       22 bytes
 13955 ;; Hardware stack levels used: 1
 13956 ;; Hardware stack levels required when called: 7
 13957 ;; This function calls:
 13958 ;;		_vfprintf
 13959 ;; This function is called by:
 13960 ;;		_menu_select
 13961 ;; This function uses a non-reentrant model
 13962 ;;
 13963                           
 13964                           	psect	text5
 13965   0199A8                     __ptext5:
 13966                           	callstack 0
 13967   0199A8                     _sprintf:
 13968                           	callstack 118
 13969                           
 13970                           ; BSR set to: 5
 13971                           
 13972                           ; BSR set to: 5
 13973                           ;incstack = 0
 13974   0199A8  0E9E               	movlw	low (?_sprintf+4)
 13975   0199AA  6FA2               	movwf	sprintf@ap& (0+255),b
 13976   0199AC  0E05               	movlw	high (?_sprintf+4)
 13977   0199AE  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
 13978   0199B0  C59A  F5A4         	movff	sprintf@s,sprintf@f
 13979   0199B4  C59B  F5A5         	movff	sprintf@s+1,sprintf@f+1
 13980                           
 13981                           ; BSR set to: 5
 13982   0199B8  0E00               	movlw	0
 13983   0199BA  6FA8               	movwf	(sprintf@f+4)& (0+255),b
 13984   0199BC  0E00               	movlw	0
 13985   0199BE  6FA7               	movwf	(sprintf@f+3)& (0+255),b
 13986                           
 13987                           ; BSR set to: 5
 13988   0199C0  0E00               	movlw	0
 13989   0199C2  6FAF               	movwf	(sprintf@f+11)& (0+255),b
 13990   0199C4  0E00               	movlw	0
 13991   0199C6  6FAE               	movwf	(sprintf@f+10)& (0+255),b
 13992                           
 13993                           ; BSR set to: 5
 13994   0199C8  0EA4               	movlw	low sprintf@f
 13995   0199CA  6F94               	movwf	vfprintf@fp& (0+255),b
 13996   0199CC  0E05               	movlw	high sprintf@f
 13997   0199CE  6F95               	movwf	(vfprintf@fp+1)& (0+255),b
 13998   0199D0  C59C  F596         	movff	sprintf@fmt,vfprintf@fmt
 13999   0199D4  C59D  F597         	movff	sprintf@fmt+1,vfprintf@fmt+1
 14000   0199D8  0EA2               	movlw	low sprintf@ap
 14001   0199DA  6F98               	movwf	vfprintf@ap& (0+255),b
 14002   0199DC  0E05               	movlw	high sprintf@ap
 14003   0199DE  6F99               	movwf	(vfprintf@ap+1)& (0+255),b
 14004   0199E0  EC44  F0CD         	call	_vfprintf	;wreg free
 14005                           
 14006                           ; BSR set to: 5
 14007   0199E4  51A7               	movf	(sprintf@f+3)& (0+255),w,b
 14008   0199E6  259A               	addwf	sprintf@s& (0+255),w,b
 14009   0199E8  6ED9               	movwf	fsr2l,c
 14010   0199EA  51A8               	movf	(sprintf@f+4)& (0+255),w,b
 14011   0199EC  219B               	addwfc	(sprintf@s+1)& (0+255),w,b
 14012   0199EE  6EDA               	movwf	fsr2h,c
 14013   0199F0  6ADF               	clrf	indf2,c
 14014                           
 14015                           ; BSR set to: 5
 14016   0199F2  0012               	return		;funcret
 14017   0199F4                     __end_of_sprintf:
 14018                           	callstack 0
 14019                           
 14020 ;; *************** function _getch *****************
 14021 ;; Defined at:
 14022 ;;		line 129 in file "src/io.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;		None
 14025 ;; Auto vars:     Size  Location     Type
 14026 ;;		None
 14027 ;; Return value:  Size  Location     Type
 14028 ;;                  2    0[COMRAM] int 
 14029 ;; Registers used:
 14030 ;;		None
 14031 ;; Tracked objects:
 14032 ;;		On entry : 3C/5
 14033 ;;		On exit  : 3C/4
 14034 ;;		Unchanged: 3C/0
 14035 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14040 ;;Total ram usage:        2 bytes
 14041 ;; Hardware stack levels used: 1
 14042 ;; This function calls:
 14043 ;;		Nothing
 14044 ;; This function is called by:
 14045 ;;		_menu_select
 14046 ;; This function uses a non-reentrant model
 14047 ;;
 14048                           
 14049                           	psect	text6
 14050   019FCC                     __ptext6:
 14051                           	callstack 0
 14052   019FCC                     _getch:
 14053                           	callstack 125
 14054                           
 14055                           ;src/io.c: 130:  while(!U3RXIF);
 14056                           
 14057                           ; BSR set to: 5
 14058                           ;incstack = 0
 14059   019FCC  A0B7               	btfss	1207,0,c	;volatile
 14060   019FCE  D7FE               	goto	__ptext6
 14061                           
 14062                           ;src/io.c: 131:  return U3RXB;
 14063   019FD0  C2C7 F501          	movff	711,?_getch	;volatile
 14064   019FD4  6A02               	clrf	(?_getch+1)^(0+1280),c
 14065   019FD6  0012               	return		;funcret
 14066   019FD8                     __end_of_getch:
 14067                           	callstack 0
 14068                           
 14069 ;; *************** function _f_readdir *****************
 14070 ;; Defined at:
 14071 ;;		line 4693 in file "fatfs/ff.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;  dp              2  111[BANK6 ] PTR struct .
 14074 ;;		 -> fsdir(40), 
 14075 ;;  fno             2  113[BANK6 ] PTR struct .
 14076 ;;		 -> fileinfo(22), NULL(0), 
 14077 ;; Auto vars:     Size  Location     Type
 14078 ;;  fs              2  115[BANK6 ] PTR struct .
 14079 ;;		 -> fs(560), NULL(0), 
 14080 ;;  res             1  117[BANK6 ] enum E275
 14081 ;; Return value:  Size  Location     Type
 14082 ;;                  1    wreg      enum E275
 14083 ;; Registers used:
 14084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14085 ;; Tracked objects:
 14086 ;;		On entry : 3F/6
 14087 ;;		On exit  : 3F/6
 14088 ;;		Unchanged: 0/0
 14089 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14090 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14091 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14093 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14094 ;;Total ram usage:        7 bytes
 14095 ;; Hardware stack levels used: 1
 14096 ;; Hardware stack levels required when called: 17
 14097 ;; This function calls:
 14098 ;;		_dir_next
 14099 ;;		_dir_read
 14100 ;;		_dir_sdi
 14101 ;;		_get_fileinfo
 14102 ;;		_validate
 14103 ;; This function is called by:
 14104 ;;		_menu_select
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           	psect	text7
 14109   018C7C                     __ptext7:
 14110                           	callstack 0
 14111   018C7C                     _f_readdir:
 14112                           	callstack 108
 14113                           
 14114                           ; BSR set to: 6
 14115                           ;fatfs/ff.c: 4694:  DIR* dp,;fatfs/ff.c: 4695:  FILINFO* fno;fatfs/ff.c: 4697: {;fatfs/f
      +                          f.c: 4698:  FRESULT res;;fatfs/ff.c: 4699:  FATFS *fs;;fatfs/ff.c: 4703:  res = validate
      +                          (&dp->obj, &fs);
 14116                           
 14117                           ;incstack = 0
 14118   018C7C  C66F  F5A6         	movff	f_readdir@dp,validate@obj
 14119   018C80  C670  F5A7         	movff	f_readdir@dp+1,validate@obj+1
 14120   018C84  0E73               	movlw	low f_readdir@fs
 14121   018C86  0105               	movlb	5	; () banked
 14122   018C88  6FA8               	movwf	validate@rfs& (0+255),b
 14123   018C8A  0E06               	movlw	high f_readdir@fs
 14124   018C8C  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 14125   018C8E  EC59  F0C3         	call	_validate	;wreg free
 14126   018C92  0106               	movlb	6	; () banked
 14127   018C94  6F75               	movwf	f_readdir@res& (0+255),b
 14128                           
 14129                           ; BSR set to: 6
 14130                           ;fatfs/ff.c: 4704:  if (res == FR_OK) {
 14131   018C96  5175               	movf	f_readdir@res& (0+255),w,b
 14132   018C98  A4D8               	btfss	status,2,c
 14133   018C9A  D044               	goto	l771
 14134                           
 14135                           ; BSR set to: 6
 14136                           ;fatfs/ff.c: 4705:   if (!fno) {
 14137   018C9C  5171               	movf	f_readdir@fno& (0+255),w,b
 14138   018C9E  1172               	iorwf	(f_readdir@fno+1)& (0+255),w,b
 14139   018CA0  A4D8               	btfss	status,2,c
 14140   018CA2  D00F               	goto	l12163
 14141                           
 14142                           ; BSR set to: 6
 14143                           ;fatfs/ff.c: 4706:    res = dir_sdi(dp, 0);
 14144   018CA4  C66F  F624         	movff	f_readdir@dp,dir_sdi@dp
 14145   018CA8  C670  F625         	movff	f_readdir@dp+1,dir_sdi@dp+1
 14146   018CAC  0E00               	movlw	0
 14147   018CAE  6F26               	movwf	dir_sdi@ofs& (0+255),b
 14148   018CB0  0E00               	movlw	0
 14149   018CB2  6F27               	movwf	(dir_sdi@ofs+1)& (0+255),b
 14150   018CB4  0E00               	movlw	0
 14151   018CB6  6F28               	movwf	(dir_sdi@ofs+2)& (0+255),b
 14152   018CB8  0E00               	movlw	0
 14153   018CBA  6F29               	movwf	(dir_sdi@ofs+3)& (0+255),b
 14154   018CBC  EC31  F0A5         	call	_dir_sdi	;wreg free
 14155   018CC0  D030               	goto	L1
 14156   018CC2                     l12163:
 14157                           
 14158                           ; BSR set to: 6
 14159                           ;fatfs/ff.c: 4709:    res = dir_read(dp, 0);
 14160   018CC2  C66F  F662         	movff	f_readdir@dp,dir_read@dp
 14161   018CC6  C670  F663         	movff	f_readdir@dp+1,dir_read@dp+1
 14162   018CCA  0E00               	movlw	0
 14163   018CCC  6F65               	movwf	(dir_read@vol+1)& (0+255),b
 14164   018CCE  0E00               	movlw	0
 14165   018CD0  6F64               	movwf	dir_read@vol& (0+255),b
 14166   018CD2  EC71  F0BC         	call	_dir_read	;wreg free
 14167   018CD6  6F75               	movwf	f_readdir@res& (0+255),b
 14168                           
 14169                           ; BSR set to: 6
 14170                           ;fatfs/ff.c: 4710:    if (res == FR_NO_FILE) res = FR_OK;
 14171   018CD8  0E04               	movlw	4
 14172   018CDA  1975               	xorwf	f_readdir@res& (0+255),w,b
 14173   018CDC  A4D8               	btfss	status,2,c
 14174   018CDE  D002               	goto	l774
 14175                           
 14176                           ; BSR set to: 6
 14177   018CE0  0E00               	movlw	0
 14178   018CE2  6F75               	movwf	f_readdir@res& (0+255),b
 14179   018CE4                     l774:
 14180                           
 14181                           ; BSR set to: 6
 14182                           ;fatfs/ff.c: 4711:    if (res == FR_OK) {
 14183   018CE4  5175               	movf	f_readdir@res& (0+255),w,b
 14184   018CE6  A4D8               	btfss	status,2,c
 14185   018CE8  D01D               	goto	l771
 14186                           
 14187                           ; BSR set to: 6
 14188                           ;fatfs/ff.c: 4712:     get_fileinfo(dp, fno);
 14189   018CEA  C66F  F50E         	movff	f_readdir@dp,get_fileinfo@dp
 14190   018CEE  C670  F50F         	movff	f_readdir@dp+1,get_fileinfo@dp+1
 14191   018CF2  C671  F510         	movff	f_readdir@fno,get_fileinfo@fno
 14192   018CF6  C672  F511         	movff	f_readdir@fno+1,get_fileinfo@fno+1
 14193   018CFA  EC02  F0B3         	call	_get_fileinfo	;wreg free
 14194                           
 14195                           ;fatfs/ff.c: 4713:     res = dir_next(dp, 0);
 14196   018CFE  C66F  F648         	movff	f_readdir@dp,dir_next@dp
 14197   018D02  C670  F649         	movff	f_readdir@dp+1,dir_next@dp+1
 14198   018D06  0E00               	movlw	0
 14199   018D08  0106               	movlb	6	; () banked
 14200   018D0A  6F4B               	movwf	(dir_next@stretch+1)& (0+255),b
 14201   018D0C  0E00               	movlw	0
 14202   018D0E  6F4A               	movwf	dir_next@stretch& (0+255),b
 14203   018D10  ECB3  F09E         	call	_dir_next	;wreg free
 14204   018D14  0106               	movlb	6	; () banked
 14205   018D16  6F75               	movwf	f_readdir@res& (0+255),b
 14206                           
 14207                           ; BSR set to: 6
 14208                           ;fatfs/ff.c: 4714:     if (res == FR_NO_FILE) res = FR_OK;
 14209   018D18  0E04               	movlw	4
 14210   018D1A  1975               	xorwf	f_readdir@res& (0+255),w,b
 14211   018D1C  A4D8               	btfss	status,2,c
 14212   018D1E  D002               	goto	l771
 14213                           
 14214                           ; BSR set to: 6
 14215   018D20  0E00               	movlw	0
 14216   018D22                     L1:
 14217   018D22  6F75               	movwf	f_readdir@res& (0+255),b
 14218   018D24                     l771:
 14219                           
 14220                           ; BSR set to: 6
 14221                           ;fatfs/ff.c: 4719:  return res;
 14222   018D24  5175               	movf	f_readdir@res& (0+255),w,b
 14223                           
 14224                           ; BSR set to: 6
 14225   018D26  0012               	return		;funcret
 14226   018D28                     __end_of_f_readdir:
 14227                           	callstack 0
 14228                           
 14229 ;; *************** function _get_fileinfo *****************
 14230 ;; Defined at:
 14231 ;;		line 2617 in file "fatfs/ff.c"
 14232 ;; Parameters:    Size  Location     Type
 14233 ;;  dp              2   13[COMRAM] PTR struct .
 14234 ;;		 -> fsdir(40), f_stat@dj(40), 
 14235 ;;  fno             2   15[COMRAM] PTR struct .
 14236 ;;		 -> fileinfo(22), NULL(0), 
 14237 ;; Auto vars:     Size  Location     Type
 14238 ;;  di              2   23[COMRAM] unsigned int 
 14239 ;;  si              2   21[COMRAM] unsigned int 
 14240 ;;  c               1   25[COMRAM] unsigned char 
 14241 ;; Return value:  Size  Location     Type
 14242 ;;                  1    wreg      void 
 14243 ;; Registers used:
 14244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14245 ;; Tracked objects:
 14246 ;;		On entry : 3F/6
 14247 ;;		On exit  : 0/0
 14248 ;;		Unchanged: 0/0
 14249 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14251 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14252 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14253 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14254 ;;Total ram usage:       13 bytes
 14255 ;; Hardware stack levels used: 1
 14256 ;; Hardware stack levels required when called: 1
 14257 ;; This function calls:
 14258 ;;		_ld_dword
 14259 ;;		_ld_word
 14260 ;; This function is called by:
 14261 ;;		_f_readdir
 14262 ;; This function uses a non-reentrant model
 14263 ;;
 14264                           
 14265                           	psect	text8
 14266   016604                     __ptext8:
 14267                           	callstack 0
 14268   016604                     _get_fileinfo:
 14269                           	callstack 123
 14270                           
 14271                           ; BSR set to: 6
 14272                           ;fatfs/ff.c: 2618:  DIR* dp,;fatfs/ff.c: 2619:  FILINFO* fno;fatfs/ff.c: 2621: {;fatfs/f
      +                          f.c: 2622:  UINT si, di;;fatfs/ff.c: 2629:  TCHAR c;;fatfs/ff.c: 2633:  fno->fname[0] = 
      +                          0;
 14273                           
 14274                           ; BSR set to: 6
 14275                           ;incstack = 0
 14276   016604  EE20 F009          	lfsr	2,9
 14277   016608  5010               	movf	get_fileinfo@fno^(0+1280),w,c
 14278   01660A  26D9               	addwf	fsr2l,f,c
 14279   01660C  5011               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 14280   01660E  22DA               	addwfc	fsr2h,f,c
 14281   016610  6ADF               	clrf	indf2,c
 14282                           
 14283                           ;fatfs/ff.c: 2634:  if (dp->sect == 0) return;
 14284   016612  EE20 F016          	lfsr	2,22
 14285   016616  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14286   016618  26D9               	addwf	fsr2l,f,c
 14287   01661A  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14288   01661C  22DA               	addwfc	fsr2h,f,c
 14289   01661E  50DE               	movf	postinc2,w,c
 14290   016620  10DE               	iorwf	postinc2,w,c
 14291   016622  10DE               	iorwf	postinc2,w,c
 14292   016624  10DE               	iorwf	postinc2,w,c
 14293   016626  B4D8               	btfsc	status,2,c
 14294   016628  0012               	return	
 14295                           
 14296                           ; BSR set to: 6
 14297                           ;fatfs/ff.c: 2733:  si = di = 0;
 14298   01662A  0E00               	movlw	0
 14299   01662C  6E19               	movwf	(get_fileinfo@di+1)^(0+1280),c
 14300   01662E  0E00               	movlw	0
 14301   016630  6E18               	movwf	get_fileinfo@di^(0+1280),c
 14302   016632  C518  F516         	movff	get_fileinfo@di,get_fileinfo@si
 14303   016636  C519  F517         	movff	get_fileinfo@di+1,get_fileinfo@si+1
 14304                           
 14305                           ;fatfs/ff.c: 2734:  while (si < 11) {
 14306   01663A  D043               	goto	l11055
 14307   01663C                     l11035:
 14308                           
 14309                           ; BSR set to: 6
 14310                           ;fatfs/ff.c: 2735:   c = (TCHAR)dp->dir[si++];
 14311   01663C  EE20 F01A          	lfsr	2,26
 14312   016640  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14313   016642  26D9               	addwf	fsr2l,f,c
 14314   016644  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14315   016646  22DA               	addwfc	fsr2h,f,c
 14316   016648  C4DE F512          	movff	postinc2,??_get_fileinfo
 14317   01664C  C4DD F513          	movff	postdec2,??_get_fileinfo+1
 14318   016650  5016               	movf	get_fileinfo@si^(0+1280),w,c
 14319   016652  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14320   016654  6ED9               	movwf	fsr2l,c
 14321   016656  5017               	movf	(get_fileinfo@si+1)^(0+1280),w,c
 14322   016658  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14323   01665A  6EDA               	movwf	fsr2h,c
 14324   01665C  50DF               	movf	indf2,w,c
 14325   01665E  6E1A               	movwf	get_fileinfo@c^(0+1280),c
 14326                           
 14327                           ; BSR set to: 6
 14328   016660  4A16               	infsnz	get_fileinfo@si^(0+1280),f,c
 14329   016662  2A17               	incf	(get_fileinfo@si+1)^(0+1280),f,c
 14330                           
 14331                           ; BSR set to: 6
 14332                           ;fatfs/ff.c: 2736:   if (c == ' ') continue;
 14333   016664  0E20               	movlw	32
 14334   016666  181A               	xorwf	get_fileinfo@c^(0+1280),w,c
 14335   016668  B4D8               	btfsc	status,2,c
 14336   01666A  D02B               	goto	l11055
 14337                           
 14338                           ; BSR set to: 6
 14339                           ;fatfs/ff.c: 2737:   if (c == 0x05) c = 0xE5;
 14340   01666C  0E05               	movlw	5
 14341   01666E  181A               	xorwf	get_fileinfo@c^(0+1280),w,c
 14342   016670  A4D8               	btfss	status,2,c
 14343   016672  D002               	goto	l11047
 14344                           
 14345                           ; BSR set to: 6
 14346   016674  0EE5               	movlw	229
 14347   016676  6E1A               	movwf	get_fileinfo@c^(0+1280),c
 14348   016678                     l11047:
 14349                           
 14350                           ; BSR set to: 6
 14351                           ;fatfs/ff.c: 2738:   if (si == 9) fno->fname[di++] = '.';
 14352   016678  0E09               	movlw	9
 14353   01667A  1816               	xorwf	get_fileinfo@si^(0+1280),w,c
 14354   01667C  1017               	iorwf	(get_fileinfo@si+1)^(0+1280),w,c
 14355   01667E  A4D8               	btfss	status,2,c
 14356   016680  D010               	goto	l11053
 14357                           
 14358                           ; BSR set to: 6
 14359   016682  5018               	movf	get_fileinfo@di^(0+1280),w,c
 14360   016684  2410               	addwf	get_fileinfo@fno^(0+1280),w,c
 14361   016686  6E12               	movwf	??_get_fileinfo^(0+1280),c
 14362   016688  5019               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 14363   01668A  2011               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 14364   01668C  6E13               	movwf	(??_get_fileinfo+1)^(0+1280),c
 14365   01668E  0E09               	movlw	9
 14366   016690  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14367   016692  6ED9               	movwf	fsr2l,c
 14368   016694  0E00               	movlw	0
 14369   016696  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14370   016698  6EDA               	movwf	fsr2h,c
 14371   01669A  0E2E               	movlw	46
 14372   01669C  6EDF               	movwf	indf2,c
 14373                           
 14374                           ; BSR set to: 6
 14375   01669E  4A18               	infsnz	get_fileinfo@di^(0+1280),f,c
 14376   0166A0  2A19               	incf	(get_fileinfo@di+1)^(0+1280),f,c
 14377   0166A2                     l11053:
 14378                           
 14379                           ; BSR set to: 6
 14380                           ;fatfs/ff.c: 2739:   fno->fname[di++] = c;
 14381   0166A2  5018               	movf	get_fileinfo@di^(0+1280),w,c
 14382   0166A4  2410               	addwf	get_fileinfo@fno^(0+1280),w,c
 14383   0166A6  6E12               	movwf	??_get_fileinfo^(0+1280),c
 14384   0166A8  5019               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 14385   0166AA  2011               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 14386   0166AC  6E13               	movwf	(??_get_fileinfo+1)^(0+1280),c
 14387   0166AE  0E09               	movlw	9
 14388   0166B0  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14389   0166B2  6ED9               	movwf	fsr2l,c
 14390   0166B4  0E00               	movlw	0
 14391   0166B6  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14392   0166B8  6EDA               	movwf	fsr2h,c
 14393   0166BA  C51A  F4DF         	movff	get_fileinfo@c,indf2
 14394   0166BE  4A18               	infsnz	get_fileinfo@di^(0+1280),f,c
 14395   0166C0  2A19               	incf	(get_fileinfo@di+1)^(0+1280),f,c
 14396   0166C2                     l11055:
 14397                           
 14398                           ; BSR set to: 6
 14399                           ;fatfs/ff.c: 2734:  while (si < 11) {
 14400   0166C2  5017               	movf	(get_fileinfo@si+1)^(0+1280),w,c
 14401   0166C4  E104               	bnz	u13680
 14402   0166C6  0E0B               	movlw	11
 14403   0166C8  5C16               	subwf	get_fileinfo@si^(0+1280),w,c
 14404   0166CA  A0D8               	btfss	status,0,c
 14405   0166CC  D7B7               	goto	l11035
 14406   0166CE                     u13680:
 14407                           
 14408                           ; BSR set to: 6
 14409                           ;fatfs/ff.c: 2741:  fno->fname[di] = 0;
 14410   0166CE  5018               	movf	get_fileinfo@di^(0+1280),w,c
 14411   0166D0  2410               	addwf	get_fileinfo@fno^(0+1280),w,c
 14412   0166D2  6E12               	movwf	??_get_fileinfo^(0+1280),c
 14413   0166D4  5019               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 14414   0166D6  2011               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 14415   0166D8  6E13               	movwf	(??_get_fileinfo+1)^(0+1280),c
 14416   0166DA  0E09               	movlw	9
 14417   0166DC  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14418   0166DE  6ED9               	movwf	fsr2l,c
 14419   0166E0  0E00               	movlw	0
 14420   0166E2  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14421   0166E4  6EDA               	movwf	fsr2h,c
 14422   0166E6  6ADF               	clrf	indf2,c
 14423                           
 14424                           ; BSR set to: 6
 14425                           ;fatfs/ff.c: 2744:  fno->fattrib = dp->dir[11] & 0x3F;
 14426   0166E8  EE20 F008          	lfsr	2,8
 14427   0166EC  5010               	movf	get_fileinfo@fno^(0+1280),w,c
 14428   0166EE  26D9               	addwf	fsr2l,f,c
 14429   0166F0  5011               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 14430   0166F2  22DA               	addwfc	fsr2h,f,c
 14431   0166F4  EE10 F01A          	lfsr	1,26
 14432   0166F8  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14433   0166FA  26E1               	addwf	fsr1l,f,c
 14434   0166FC  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14435   0166FE  22E2               	addwfc	fsr1h,f,c
 14436   016700  EE00 F00B          	lfsr	0,11
 14437   016704  50E6               	movf	postinc1,w,c
 14438   016706  26E9               	addwf	fsr0l,f,c
 14439   016708  50E5               	movf	postdec1,w,c
 14440   01670A  22EA               	addwfc	fsr0h,f,c
 14441   01670C  50EF               	movf	indf0,w,c
 14442   01670E  0B3F               	andlw	63
 14443   016710  6EDF               	movwf	indf2,c
 14444                           
 14445                           ; BSR set to: 6
 14446                           ;fatfs/ff.c: 2745:  fno->fsize = ld_dword(dp->dir + 28);
 14447   016712  EE20 F01A          	lfsr	2,26
 14448   016716  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14449   016718  26D9               	addwf	fsr2l,f,c
 14450   01671A  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14451   01671C  22DA               	addwfc	fsr2h,f,c
 14452   01671E  C4DE F512          	movff	postinc2,??_get_fileinfo
 14453   016722  C4DD F513          	movff	postdec2,??_get_fileinfo+1
 14454   016726  0E1C               	movlw	28
 14455   016728  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14456   01672A  6E01               	movwf	ld_dword@ptr^(0+1280),c
 14457   01672C  0E00               	movlw	0
 14458   01672E  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14459   016730  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 14460   016732  ECD5  F0C4         	call	_ld_dword	;wreg free
 14461   016736  C510  F4D9         	movff	get_fileinfo@fno,fsr2l
 14462   01673A  C511  F4DA         	movff	get_fileinfo@fno+1,fsr2h
 14463   01673E  C501  F4DE         	movff	?_ld_dword,postinc2
 14464   016742  C502  F4DE         	movff	?_ld_dword+1,postinc2
 14465   016746  C503  F4DE         	movff	?_ld_dword+2,postinc2
 14466   01674A  C504  F4DE         	movff	?_ld_dword+3,postinc2
 14467                           
 14468                           ; BSR set to: 6
 14469                           ;fatfs/ff.c: 2746:  fno->ftime = ld_word(dp->dir + 22 + 0);
 14470   01674E  EE20 F01A          	lfsr	2,26
 14471   016752  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14472   016754  26D9               	addwf	fsr2l,f,c
 14473   016756  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14474   016758  22DA               	addwfc	fsr2h,f,c
 14475   01675A  C4DE F512          	movff	postinc2,??_get_fileinfo
 14476   01675E  C4DD F513          	movff	postdec2,??_get_fileinfo+1
 14477   016762  0E16               	movlw	22
 14478   016764  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14479   016766  6E01               	movwf	ld_word@ptr^(0+1280),c
 14480   016768  0E00               	movlw	0
 14481   01676A  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14482   01676C  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 14483   01676E  EC31  F0CE         	call	_ld_word	;wreg free
 14484   016772  EE20 F006          	lfsr	2,6
 14485   016776  5010               	movf	get_fileinfo@fno^(0+1280),w,c
 14486   016778  26D9               	addwf	fsr2l,f,c
 14487   01677A  5011               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 14488   01677C  22DA               	addwfc	fsr2h,f,c
 14489   01677E  C501  F4DE         	movff	?_ld_word,postinc2
 14490   016782  C502  F4DD         	movff	?_ld_word+1,postdec2
 14491                           
 14492                           ;fatfs/ff.c: 2747:  fno->fdate = ld_word(dp->dir + 22 + 2);
 14493   016786  EE20 F01A          	lfsr	2,26
 14494   01678A  500E               	movf	get_fileinfo@dp^(0+1280),w,c
 14495   01678C  26D9               	addwf	fsr2l,f,c
 14496   01678E  500F               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 14497   016790  22DA               	addwfc	fsr2h,f,c
 14498   016792  C4DE F512          	movff	postinc2,??_get_fileinfo
 14499   016796  C4DD F513          	movff	postdec2,??_get_fileinfo+1
 14500   01679A  0E18               	movlw	24
 14501   01679C  2412               	addwf	??_get_fileinfo^(0+1280),w,c
 14502   01679E  6E01               	movwf	ld_word@ptr^(0+1280),c
 14503   0167A0  0E00               	movlw	0
 14504   0167A2  2013               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 14505   0167A4  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 14506   0167A6  EC31  F0CE         	call	_ld_word	;wreg free
 14507   0167AA  EE20 F004          	lfsr	2,4
 14508   0167AE  5010               	movf	get_fileinfo@fno^(0+1280),w,c
 14509   0167B0  26D9               	addwf	fsr2l,f,c
 14510   0167B2  5011               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 14511   0167B4  22DA               	addwfc	fsr2h,f,c
 14512   0167B6  C501  F4DE         	movff	?_ld_word,postinc2
 14513   0167BA  C502  F4DD         	movff	?_ld_word+1,postdec2
 14514   0167BE  0012               	return		;funcret
 14515   0167C0                     __end_of_get_fileinfo:
 14516                           	callstack 0
 14517                           
 14518 ;; *************** function _dir_read *****************
 14519 ;; Defined at:
 14520 ;;		line 2306 in file "fatfs/ff.c"
 14521 ;; Parameters:    Size  Location     Type
 14522 ;;  dp              2   98[BANK6 ] PTR struct .
 14523 ;;		 -> fsdir(40), f_unlink@sdj(40), 
 14524 ;;  vol             2  100[BANK6 ] int 
 14525 ;; Auto vars:     Size  Location     Type
 14526 ;;  fs              2  106[BANK6 ] PTR struct .
 14527 ;;		 -> fs(560), NULL(0), 
 14528 ;;  res             1  110[BANK6 ] enum E275
 14529 ;;  b               1  109[BANK6 ] unsigned char 
 14530 ;;  attr            1  108[BANK6 ] unsigned char 
 14531 ;; Return value:  Size  Location     Type
 14532 ;;                  1    wreg      enum E275
 14533 ;; Registers used:
 14534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14535 ;; Tracked objects:
 14536 ;;		On entry : 3F/6
 14537 ;;		On exit  : 3F/6
 14538 ;;		Unchanged: 0/0
 14539 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14540 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14541 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14542 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14543 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14544 ;;Total ram usage:       13 bytes
 14545 ;; Hardware stack levels used: 1
 14546 ;; Hardware stack levels required when called: 16
 14547 ;; This function calls:
 14548 ;;		_dir_next
 14549 ;;		_move_window
 14550 ;; This function is called by:
 14551 ;;		_f_readdir
 14552 ;; This function uses a non-reentrant model
 14553 ;;
 14554                           
 14555                           	psect	text9
 14556   0178E2                     __ptext9:
 14557                           	callstack 0
 14558   0178E2                     _dir_read:
 14559                           	callstack 108
 14560                           
 14561                           ; BSR set to: 6
 14562                           ;fatfs/ff.c: 2307:  DIR* dp,;fatfs/ff.c: 2308:  int vol;fatfs/ff.c: 2310: {;fatfs/ff.c: 
      +                          2311:  FRESULT res = FR_NO_FILE;
 14563                           
 14564                           ;incstack = 0
 14565   0178E2  0E04               	movlw	4
 14566   0178E4  6F6E               	movwf	dir_read@res& (0+255),b
 14567                           
 14568                           ; BSR set to: 6
 14569                           ;fatfs/ff.c: 2312:  FATFS *fs = dp->obj.fs;
 14570   0178E6  C662  F4D9         	movff	dir_read@dp,fsr2l
 14571   0178EA  C663  F4DA         	movff	dir_read@dp+1,fsr2h
 14572   0178EE  C4DE F66A          	movff	postinc2,dir_read@fs
 14573   0178F2  C4DD F66B          	movff	postdec2,dir_read@fs+1
 14574                           
 14575                           ;fatfs/ff.c: 2313:  BYTE attr, b;;fatfs/ff.c: 2318:  while (dp->sect) {
 14576   0178F6  D072               	goto	l11001
 14577   0178F8                     l10971:
 14578                           
 14579                           ; BSR set to: 6
 14580                           ;fatfs/ff.c: 2319:   res = move_window(fs, dp->sect);
 14581   0178F8  C66A  F600         	movff	dir_read@fs,move_window@fs
 14582   0178FC  C66B  F601         	movff	dir_read@fs+1,move_window@fs+1
 14583   017900  EE20 F016          	lfsr	2,22
 14584   017904  5162               	movf	dir_read@dp& (0+255),w,b
 14585   017906  26D9               	addwf	fsr2l,f,c
 14586   017908  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14587   01790A  22DA               	addwfc	fsr2h,f,c
 14588   01790C  C4DE F602          	movff	postinc2,move_window@sect
 14589   017910  C4DE F603          	movff	postinc2,move_window@sect+1
 14590   017914  C4DE F604          	movff	postinc2,move_window@sect+2
 14591   017918  C4DE F605          	movff	postinc2,move_window@sect+3
 14592   01791C  EC1A  F0C4         	call	_move_window	;wreg free
 14593   017920  0106               	movlb	6	; () banked
 14594   017922  6F6E               	movwf	dir_read@res& (0+255),b
 14595                           
 14596                           ; BSR set to: 6
 14597                           ;fatfs/ff.c: 2320:   if (res != FR_OK) break;
 14598   017924  516E               	movf	dir_read@res& (0+255),w,b
 14599   017926  A4D8               	btfss	status,2,c
 14600   017928  D065               	goto	u13600
 14601                           
 14602                           ; BSR set to: 6
 14603                           ;fatfs/ff.c: 2321:   b = dp->dir[0];
 14604   01792A  EE20 F01A          	lfsr	2,26
 14605   01792E  5162               	movf	dir_read@dp& (0+255),w,b
 14606   017930  26D9               	addwf	fsr2l,f,c
 14607   017932  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14608   017934  22DA               	addwfc	fsr2h,f,c
 14609   017936  C4DE F666          	movff	postinc2,??_dir_read
 14610   01793A  C4DD F667          	movff	postdec2,??_dir_read+1
 14611   01793E  C666  F4D9         	movff	??_dir_read,fsr2l
 14612   017942  C667  F4DA         	movff	??_dir_read+1,fsr2h
 14613   017946  50DF               	movf	indf2,w,c
 14614   017948  6F6D               	movwf	dir_read@b& (0+255),b
 14615                           
 14616                           ; BSR set to: 6
 14617                           ;fatfs/ff.c: 2322:   if (b == 0) {
 14618   01794A  516D               	movf	dir_read@b& (0+255),w,b
 14619   01794C  A4D8               	btfss	status,2,c
 14620   01794E  D003               	goto	l10983
 14621                           
 14622                           ; BSR set to: 6
 14623                           ;fatfs/ff.c: 2323:    res = FR_NO_FILE; break;
 14624   017950  0E04               	movlw	4
 14625   017952  6F6E               	movwf	dir_read@res& (0+255),b
 14626   017954  D04F               	goto	u13600
 14627   017956                     l10983:
 14628                           
 14629                           ; BSR set to: 6
 14630                           ;fatfs/ff.c: 2341:   {;fatfs/ff.c: 2342:    dp->obj.attr = attr = dp->dir[11] & 0x3F;
 14631   017956  EE20 F01A          	lfsr	2,26
 14632   01795A  5162               	movf	dir_read@dp& (0+255),w,b
 14633   01795C  26D9               	addwf	fsr2l,f,c
 14634   01795E  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14635   017960  22DA               	addwfc	fsr2h,f,c
 14636   017962  EE10 F00B          	lfsr	1,11
 14637   017966  50DE               	movf	postinc2,w,c
 14638   017968  26E1               	addwf	fsr1l,f,c
 14639   01796A  50DD               	movf	postdec2,w,c
 14640   01796C  22E2               	addwfc	fsr1h,f,c
 14641   01796E  50E7               	movf	indf1,w,c
 14642   017970  0B3F               	andlw	63
 14643   017972  6F6C               	movwf	dir_read@attr& (0+255),b
 14644   017974  EE20 F004          	lfsr	2,4
 14645   017978  5162               	movf	dir_read@dp& (0+255),w,b
 14646   01797A  26D9               	addwf	fsr2l,f,c
 14647   01797C  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14648   01797E  22DA               	addwfc	fsr2h,f,c
 14649   017980  C66C  F4DF         	movff	dir_read@attr,indf2
 14650                           
 14651                           ; BSR set to: 6
 14652                           ;fatfs/ff.c: 2363:    if (b != 0xE5 && b != '.' && attr != 0x0F && (int)((attr & ~0x20) 
      +                          == 0x08) == vol) {
 14653   017984  0EE5               	movlw	229
 14654   017986  196D               	xorwf	dir_read@b& (0+255),w,b
 14655   017988  B4D8               	btfsc	status,2,c
 14656   01798A  D019               	goto	l10995
 14657                           
 14658                           ; BSR set to: 6
 14659   01798C  0E2E               	movlw	46
 14660   01798E  196D               	xorwf	dir_read@b& (0+255),w,b
 14661   017990  B4D8               	btfsc	status,2,c
 14662   017992  D015               	goto	l10995
 14663                           
 14664                           ; BSR set to: 6
 14665   017994  0E0F               	movlw	15
 14666   017996  196C               	xorwf	dir_read@attr& (0+255),w,b
 14667   017998  B4D8               	btfsc	status,2,c
 14668   01799A  D011               	goto	l10995
 14669                           
 14670                           ; BSR set to: 6
 14671   01799C  516C               	movf	dir_read@attr& (0+255),w,b
 14672   01799E  0BDF               	andlw	223
 14673   0179A0  0A08               	xorlw	8
 14674   0179A2  A4D8               	btfss	status,2,c
 14675   0179A4  D002               	goto	u13560
 14676   0179A6  0E01               	movlw	1
 14677   0179A8  D001               	goto	u13570
 14678   0179AA                     u13560:
 14679   0179AA  0E00               	movlw	0
 14680   0179AC                     u13570:
 14681   0179AC  6F66               	movwf	??_dir_read& (0+255),b
 14682   0179AE  6B67               	clrf	(??_dir_read+1)& (0+255),b
 14683   0179B0  5164               	movf	dir_read@vol& (0+255),w,b
 14684   0179B2  1966               	xorwf	??_dir_read& (0+255),w,b
 14685   0179B4  E104               	bnz	l10995
 14686   0179B6  5165               	movf	(dir_read@vol+1)& (0+255),w,b
 14687   0179B8  1967               	xorwf	(??_dir_read+1)& (0+255),w,b
 14688   0179BA  B4D8               	btfsc	status,2,c
 14689   0179BC  D01B               	goto	u13600
 14690   0179BE                     l10995:
 14691                           
 14692                           ; BSR set to: 6
 14693                           ;fatfs/ff.c: 2367:   };fatfs/ff.c: 2368:   res = dir_next(dp, 0);
 14694   0179BE  C662  F648         	movff	dir_read@dp,dir_next@dp
 14695   0179C2  C663  F649         	movff	dir_read@dp+1,dir_next@dp+1
 14696   0179C6  0E00               	movlw	0
 14697   0179C8  6F4B               	movwf	(dir_next@stretch+1)& (0+255),b
 14698   0179CA  0E00               	movlw	0
 14699   0179CC  6F4A               	movwf	dir_next@stretch& (0+255),b
 14700   0179CE  ECB3  F09E         	call	_dir_next	;wreg free
 14701   0179D2  0106               	movlb	6	; () banked
 14702   0179D4  6F6E               	movwf	dir_read@res& (0+255),b
 14703                           
 14704                           ; BSR set to: 6
 14705                           ;fatfs/ff.c: 2369:   if (res != FR_OK) break;
 14706   0179D6  516E               	movf	dir_read@res& (0+255),w,b
 14707   0179D8  A4D8               	btfss	status,2,c
 14708   0179DA  D00C               	goto	u13600
 14709   0179DC                     l11001:
 14710                           
 14711                           ; BSR set to: 6
 14712                           ;fatfs/ff.c: 2318:  while (dp->sect) {
 14713   0179DC  EE20 F016          	lfsr	2,22
 14714   0179E0  5162               	movf	dir_read@dp& (0+255),w,b
 14715   0179E2  26D9               	addwf	fsr2l,f,c
 14716   0179E4  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14717   0179E6  22DA               	addwfc	fsr2h,f,c
 14718   0179E8  50DE               	movf	postinc2,w,c
 14719   0179EA  10DE               	iorwf	postinc2,w,c
 14720   0179EC  10DE               	iorwf	postinc2,w,c
 14721   0179EE  10DE               	iorwf	postinc2,w,c
 14722   0179F0  A4D8               	btfss	status,2,c
 14723   0179F2  D782               	goto	l10971
 14724   0179F4                     u13600:
 14725                           
 14726                           ; BSR set to: 6
 14727                           ;fatfs/ff.c: 2372:  if (res != FR_OK) dp->sect = 0;
 14728   0179F4  516E               	movf	dir_read@res& (0+255),w,b
 14729   0179F6  B4D8               	btfsc	status,2,c
 14730   0179F8  D00A               	goto	l11007
 14731                           
 14732                           ; BSR set to: 6
 14733   0179FA  EE20 F016          	lfsr	2,22
 14734   0179FE  5162               	movf	dir_read@dp& (0+255),w,b
 14735   017A00  26D9               	addwf	fsr2l,f,c
 14736   017A02  5163               	movf	(dir_read@dp+1)& (0+255),w,b
 14737   017A04  22DA               	addwfc	fsr2h,f,c
 14738   017A06  6ADE               	clrf	postinc2,c
 14739   017A08  6ADE               	clrf	postinc2,c
 14740   017A0A  6ADE               	clrf	postinc2,c
 14741   017A0C  6ADD               	clrf	postdec2,c
 14742   017A0E                     l11007:
 14743                           
 14744                           ; BSR set to: 6
 14745                           ;fatfs/ff.c: 2373:  return res;
 14746   017A0E  516E               	movf	dir_read@res& (0+255),w,b
 14747                           
 14748                           ; BSR set to: 6
 14749   017A10  0012               	return		;funcret
 14750   017A12                     __end_of_dir_read:
 14751                           	callstack 0
 14752                           
 14753 ;; *************** function _f_opendir *****************
 14754 ;; Defined at:
 14755 ;;		line 4597 in file "fatfs/ff.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;  dp              2  175[BANK6 ] PTR struct .
 14758 ;;		 -> fsdir(40), 
 14759 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 14760 ;;		 -> STR_88(5), tmp_buf(512), STR_31(2), 
 14761 ;; Auto vars:     Size  Location     Type
 14762 ;;  fs              2  179[BANK6 ] PTR struct .
 14763 ;;		 -> fs(560), NULL(0), 
 14764 ;;  res             1  181[BANK6 ] enum E275
 14765 ;; Return value:  Size  Location     Type
 14766 ;;                  1    wreg      enum E275
 14767 ;; Registers used:
 14768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14769 ;; Tracked objects:
 14770 ;;		On entry : 3F/6
 14771 ;;		On exit  : 3F/6
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14774 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14775 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14777 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14778 ;;Total ram usage:        7 bytes
 14779 ;; Hardware stack levels used: 1
 14780 ;; Hardware stack levels required when called: 18
 14781 ;; This function calls:
 14782 ;;		_dir_sdi
 14783 ;;		_follow_path
 14784 ;;		_ld_clust
 14785 ;;		_mount_volume
 14786 ;; This function is called by:
 14787 ;;		_menu_select
 14788 ;; This function uses a non-reentrant model
 14789 ;;
 14790                           
 14791                           	psect	text10
 14792   017B3E                     __ptext10:
 14793                           	callstack 0
 14794   017B3E                     _f_opendir:
 14795                           	callstack 107
 14796                           
 14797                           ; BSR set to: 6
 14798                           ;fatfs/ff.c: 4598:  DIR* dp,;fatfs/ff.c: 4599:  const TCHAR* path;fatfs/ff.c: 4601: {;fa
      +                          tfs/ff.c: 4602:  FRESULT res;;fatfs/ff.c: 4603:  FATFS *fs;;fatfs/ff.c: 4607:  if (!dp) 
      +                          return FR_INVALID_OBJECT;
 14799                           
 14800                           ; BSR set to: 6
 14801                           ;incstack = 0
 14802   017B3E  51AF               	movf	f_opendir@dp& (0+255),w,b
 14803   017B40  11B0               	iorwf	(f_opendir@dp+1)& (0+255),w,b
 14804   017B42  A4D8               	btfss	status,2,c
 14805   017B44  D002               	goto	l12115
 14806                           
 14807                           ; BSR set to: 6
 14808   017B46  0E09               	movlw	9
 14809   017B48  0012               	return	
 14810   017B4A                     l12115:
 14811                           
 14812                           ; BSR set to: 6
 14813                           ;fatfs/ff.c: 4610:  res = mount_volume(&path, &fs, 0);
 14814   017B4A  0EB1               	movlw	low f_opendir@path
 14815   017B4C  6F81               	movwf	mount_volume@path& (0+255),b
 14816   017B4E  0E06               	movlw	high f_opendir@path
 14817   017B50  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 14818   017B52  0EB3               	movlw	low f_opendir@fs
 14819   017B54  6F83               	movwf	mount_volume@rfs& (0+255),b
 14820   017B56  0E06               	movlw	high f_opendir@fs
 14821   017B58  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 14822   017B5A  0E00               	movlw	0
 14823   017B5C  6F85               	movwf	mount_volume@mode& (0+255),b
 14824   017B5E  EC70  F084         	call	_mount_volume	;wreg free
 14825   017B62  0106               	movlb	6	; () banked
 14826   017B64  6FB5               	movwf	f_opendir@res& (0+255),b
 14827                           
 14828                           ; BSR set to: 6
 14829                           ;fatfs/ff.c: 4611:  if (res == FR_OK) {
 14830   017B66  51B5               	movf	f_opendir@res& (0+255),w,b
 14831   017B68  A4D8               	btfss	status,2,c
 14832   017B6A  D070               	goto	l757
 14833                           
 14834                           ; BSR set to: 6
 14835                           ;fatfs/ff.c: 4612:   dp->obj.fs = fs;
 14836   017B6C  C6AF  F4D9         	movff	f_opendir@dp,fsr2l
 14837   017B70  C6B0  F4DA         	movff	f_opendir@dp+1,fsr2h
 14838   017B74  C6B3  F4DE         	movff	f_opendir@fs,postinc2
 14839   017B78  C6B4  F4DD         	movff	f_opendir@fs+1,postdec2
 14840                           
 14841                           ; BSR set to: 6
 14842                           ;fatfs/ff.c: 4614:   res = follow_path(dp, path);
 14843   017B7C  C6AF  F66A         	movff	f_opendir@dp,follow_path@dp
 14844   017B80  C6B0  F66B         	movff	f_opendir@dp+1,follow_path@dp+1
 14845   017B84  C6B1  F66C         	movff	f_opendir@path,follow_path@path
 14846   017B88  C6B2  F66D         	movff	f_opendir@path+1,follow_path@path+1
 14847   017B8C  EC8F  F0B5         	call	_follow_path	;wreg free
 14848   017B90  6FB5               	movwf	f_opendir@res& (0+255),b
 14849                           
 14850                           ; BSR set to: 6
 14851                           ;fatfs/ff.c: 4615:   if (res == FR_OK) {
 14852   017B92  51B5               	movf	f_opendir@res& (0+255),w,b
 14853   017B94  A4D8               	btfss	status,2,c
 14854   017B96  D054               	goto	l12137
 14855                           
 14856                           ; BSR set to: 6
 14857                           ;fatfs/ff.c: 4616:    if (!(dp->fn[11] & 0x80)) {
 14858   017B98  EE20 F027          	lfsr	2,39
 14859   017B9C  51AF               	movf	f_opendir@dp& (0+255),w,b
 14860   017B9E  26D9               	addwf	fsr2l,f,c
 14861   017BA0  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 14862   017BA2  22DA               	addwfc	fsr2h,f,c
 14863   017BA4  BEDF               	btfsc	indf2,7,c
 14864   017BA6  D02A               	goto	l759
 14865                           
 14866                           ; BSR set to: 6
 14867                           ;fatfs/ff.c: 4617:     if (dp->obj.attr & 0x10) {
 14868   017BA8  EE20 F004          	lfsr	2,4
 14869   017BAC  51AF               	movf	f_opendir@dp& (0+255),w,b
 14870   017BAE  26D9               	addwf	fsr2l,f,c
 14871   017BB0  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 14872   017BB2  22DA               	addwfc	fsr2h,f,c
 14873   017BB4  A8DF               	btfss	indf2,4,c
 14874   017BB6  D020               	goto	l12131
 14875                           
 14876                           ; BSR set to: 6
 14877                           ;fatfs/ff.c: 4626:      {;fatfs/ff.c: 4627:       dp->obj.sclust = ld_clust(fs, dp->dir)
      +                          ;
 14878   017BB8  C6B3  F508         	movff	f_opendir@fs,ld_clust@fs
 14879   017BBC  C6B4  F509         	movff	f_opendir@fs+1,ld_clust@fs+1
 14880   017BC0  EE20 F01A          	lfsr	2,26
 14881   017BC4  51AF               	movf	f_opendir@dp& (0+255),w,b
 14882   017BC6  26D9               	addwf	fsr2l,f,c
 14883   017BC8  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 14884   017BCA  22DA               	addwfc	fsr2h,f,c
 14885   017BCC  C4DE F50A          	movff	postinc2,ld_clust@dir
 14886   017BD0  C4DD F50B          	movff	postdec2,ld_clust@dir+1
 14887   017BD4  EC0E  F0CA         	call	_ld_clust	;wreg free
 14888   017BD8  0106               	movlb	6	; () banked
 14889   017BDA  EE20 F006          	lfsr	2,6
 14890   017BDE  51AF               	movf	f_opendir@dp& (0+255),w,b
 14891   017BE0  26D9               	addwf	fsr2l,f,c
 14892   017BE2  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 14893   017BE4  22DA               	addwfc	fsr2h,f,c
 14894   017BE6  C508  F4DE         	movff	?_ld_clust,postinc2
 14895   017BEA  C509  F4DE         	movff	?_ld_clust+1,postinc2
 14896   017BEE  C50A  F4DE         	movff	?_ld_clust+2,postinc2
 14897   017BF2  C50B  F4DE         	movff	?_ld_clust+3,postinc2
 14898                           
 14899                           ;fatfs/ff.c: 4628:      };fatfs/ff.c: 4629:     } else {
 14900   017BF6  D002               	goto	l759
 14901   017BF8                     l12131:
 14902                           
 14903                           ; BSR set to: 6
 14904                           ;fatfs/ff.c: 4630:      res = FR_NO_PATH;
 14905   017BF8  0E05               	movlw	5
 14906   017BFA  6FB5               	movwf	f_opendir@res& (0+255),b
 14907   017BFC                     l759:
 14908                           
 14909                           ; BSR set to: 6
 14910                           ;fatfs/ff.c: 4633:    if (res == FR_OK) {
 14911   017BFC  51B5               	movf	f_opendir@res& (0+255),w,b
 14912   017BFE  A4D8               	btfss	status,2,c
 14913   017C00  D01F               	goto	l12137
 14914                           
 14915                           ; BSR set to: 6
 14916                           ;fatfs/ff.c: 4634:     dp->obj.id = fs->id;
 14917   017C02  EE20 F006          	lfsr	2,6
 14918   017C06  51B3               	movf	f_opendir@fs& (0+255),w,b
 14919   017C08  26D9               	addwf	fsr2l,f,c
 14920   017C0A  51B4               	movf	(f_opendir@fs+1)& (0+255),w,b
 14921   017C0C  22DA               	addwfc	fsr2h,f,c
 14922   017C0E  EE10 F002          	lfsr	1,2
 14923   017C12  51AF               	movf	f_opendir@dp& (0+255),w,b
 14924   017C14  26E1               	addwf	fsr1l,f,c
 14925   017C16  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 14926   017C18  22E2               	addwfc	fsr1h,f,c
 14927   017C1A  C4DE F4E6          	movff	postinc2,postinc1
 14928   017C1E  C4DD F4E5          	movff	postdec2,postdec1
 14929                           
 14930                           ; BSR set to: 6
 14931                           ;fatfs/ff.c: 4635:     res = dir_sdi(dp, 0);
 14932   017C22  C6AF  F624         	movff	f_opendir@dp,dir_sdi@dp
 14933   017C26  C6B0  F625         	movff	f_opendir@dp+1,dir_sdi@dp+1
 14934   017C2A  0E00               	movlw	0
 14935   017C2C  6F26               	movwf	dir_sdi@ofs& (0+255),b
 14936   017C2E  0E00               	movlw	0
 14937   017C30  6F27               	movwf	(dir_sdi@ofs+1)& (0+255),b
 14938   017C32  0E00               	movlw	0
 14939   017C34  6F28               	movwf	(dir_sdi@ofs+2)& (0+255),b
 14940   017C36  0E00               	movlw	0
 14941   017C38  6F29               	movwf	(dir_sdi@ofs+3)& (0+255),b
 14942   017C3A  EC31  F0A5         	call	_dir_sdi	;wreg free
 14943   017C3E  6FB5               	movwf	f_opendir@res& (0+255),b
 14944   017C40                     l12137:
 14945                           
 14946                           ; BSR set to: 6
 14947                           ;fatfs/ff.c: 4649:   if (res == FR_NO_FILE) res = FR_NO_PATH;
 14948   017C40  0E04               	movlw	4
 14949   017C42  19B5               	xorwf	f_opendir@res& (0+255),w,b
 14950   017C44  A4D8               	btfss	status,2,c
 14951   017C46  D002               	goto	l757
 14952                           
 14953                           ; BSR set to: 6
 14954   017C48  0E05               	movlw	5
 14955   017C4A  6FB5               	movwf	f_opendir@res& (0+255),b
 14956   017C4C                     l757:
 14957                           
 14958                           ; BSR set to: 6
 14959                           ;fatfs/ff.c: 4651:  if (res != FR_OK) dp->obj.fs = 0;
 14960   017C4C  51B5               	movf	f_opendir@res& (0+255),w,b
 14961   017C4E  B4D8               	btfsc	status,2,c
 14962   017C50  D006               	goto	l12143
 14963                           
 14964                           ; BSR set to: 6
 14965   017C52  C6AF  F4D9         	movff	f_opendir@dp,fsr2l
 14966   017C56  C6B0  F4DA         	movff	f_opendir@dp+1,fsr2h
 14967   017C5A  6ADE               	clrf	postinc2,c
 14968   017C5C  6ADD               	clrf	postdec2,c
 14969   017C5E                     l12143:
 14970                           
 14971                           ; BSR set to: 6
 14972                           ;fatfs/ff.c: 4653:  return res;
 14973   017C5E  51B5               	movf	f_opendir@res& (0+255),w,b
 14974                           
 14975                           ; BSR set to: 6
 14976   017C60  0012               	return		;funcret
 14977   017C62                     __end_of_f_opendir:
 14978                           	callstack 0
 14979                           
 14980 ;; *************** function _f_open *****************
 14981 ;; Defined at:
 14982 ;;		line 3717 in file "fatfs/ff.c"
 14983 ;; Parameters:    Size  Location     Type
 14984 ;;  fp              2  175[BANK6 ] PTR struct .
 14985 ;;		 -> files(3276), 
 14986 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 14987 ;;		 -> STR_88(5), tmp_buf(512), STR_31(2), 
 14988 ;;  mode            1  179[BANK6 ] unsigned char 
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;  dj             40  215[BANK6 ] struct .
 14991 ;;  clst            4  208[BANK6 ] unsigned long 
 14992 ;;  ofs             4  204[BANK6 ] unsigned long 
 14993 ;;  sc              4  200[BANK6 ] unsigned long 
 14994 ;;  cl              4  196[BANK6 ] unsigned long 
 14995 ;;  tm              4  192[BANK6 ] unsigned long 
 14996 ;;  bcs             4  188[BANK6 ] unsigned long 
 14997 ;;  fs              2  212[BANK6 ] PTR struct .
 14998 ;;		 -> fs(560), NULL(0), 
 14999 ;;  res             1  214[BANK6 ] enum E275
 15000 ;; Return value:  Size  Location     Type
 15001 ;;                  1    wreg      enum E275
 15002 ;; Registers used:
 15003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15004 ;; Tracked objects:
 15005 ;;		On entry : 3F/6
 15006 ;;		On exit  : 3F/6
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15009 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15010 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15011 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15012 ;;      Totals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15013 ;;Total ram usage:       80 bytes
 15014 ;; Hardware stack levels used: 1
 15015 ;; Hardware stack levels required when called: 18
 15016 ;; This function calls:
 15017 ;;		_clst2sect
 15018 ;;		_dir_register
 15019 ;;		_disk_read
 15020 ;;		_follow_path
 15021 ;;		_get_fat
 15022 ;;		_get_fattime
 15023 ;;		_ld_clust
 15024 ;;		_ld_dword
 15025 ;;		_memset
 15026 ;;		_mount_volume
 15027 ;;		_move_window
 15028 ;;		_remove_chain
 15029 ;;		_st_clust
 15030 ;;		_st_dword
 15031 ;; This function is called by:
 15032 ;;		_menu_select
 15033 ;; This function uses a non-reentrant model
 15034 ;;
 15035                           
 15036                           	psect	text11
 15037   011F48                     __ptext11:
 15038                           	callstack 0
 15039   011F48                     _f_open:
 15040                           	callstack 107
 15041                           
 15042                           ; BSR set to: 6
 15043                           ;fatfs/ff.c: 3718:  FIL* fp,;fatfs/ff.c: 3719:  const TCHAR* path,;fatfs/ff.c: 3720:  BY
      +                          TE mode;fatfs/ff.c: 3722: {;fatfs/ff.c: 3723:  FRESULT res;;fatfs/ff.c: 3724:  DIR dj;;f
      +                          atfs/ff.c: 3725:  FATFS *fs;;fatfs/ff.c: 3727:  DWORD cl, bcs, clst, tm;;fatfs/ff.c: 372
      +                          8:  LBA_t sc;;fatfs/ff.c: 3729:  FSIZE_t ofs;;fatfs/ff.c: 3734:  if (!fp) return FR_INVA
      +                          LID_OBJECT;
 15044                           
 15045                           ; BSR set to: 6
 15046                           ;incstack = 0
 15047   011F48  51AF               	movf	f_open@fp& (0+255),w,b
 15048   011F4A  11B0               	iorwf	(f_open@fp+1)& (0+255),w,b
 15049   011F4C  A4D8               	btfss	status,2,c
 15050   011F4E  D002               	goto	l11463
 15051                           
 15052                           ; BSR set to: 6
 15053   011F50  0E09               	movlw	9
 15054   011F52  0012               	return	
 15055   011F54                     l11463:
 15056                           
 15057                           ; BSR set to: 6
 15058                           
 15059                           ; BSR set to: 6
 15060   011F54  0E3F               	movlw	63
 15061   011F56  17B3               	andwf	f_open@mode& (0+255),f,b
 15062                           
 15063                           ; BSR set to: 6
 15064                           ;fatfs/ff.c: 3738:  res = mount_volume(&path, &fs, mode);
 15065   011F58  0EB1               	movlw	low f_open@path
 15066   011F5A  6F81               	movwf	mount_volume@path& (0+255),b
 15067   011F5C  0E06               	movlw	high f_open@path
 15068   011F5E  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 15069   011F60  0ED4               	movlw	low f_open@fs
 15070   011F62  6F83               	movwf	mount_volume@rfs& (0+255),b
 15071   011F64  0E06               	movlw	high f_open@fs
 15072   011F66  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 15073   011F68  C6B3  F685         	movff	f_open@mode,mount_volume@mode
 15074   011F6C  EC70  F084         	call	_mount_volume	;wreg free
 15075   011F70  0106               	movlb	6	; () banked
 15076   011F72  6FD6               	movwf	f_open@res& (0+255),b
 15077                           
 15078                           ; BSR set to: 6
 15079                           ;fatfs/ff.c: 3739:  if (res == FR_OK) {
 15080   011F74  51D6               	movf	f_open@res& (0+255),w,b
 15081   011F76  A4D8               	btfss	status,2,c
 15082   011F78  D2EA               	goto	l632
 15083                           
 15084                           ; BSR set to: 6
 15085                           ;fatfs/ff.c: 3740:   dj.obj.fs = fs;
 15086   011F7A  C6D4  F6D7         	movff	f_open@fs,f_open@dj
 15087   011F7E  C6D5  F6D8         	movff	f_open@fs+1,f_open@dj+1
 15088                           
 15089                           ; BSR set to: 6
 15090                           ;fatfs/ff.c: 3742:   res = follow_path(&dj, path);
 15091   011F82  0ED7               	movlw	low f_open@dj
 15092   011F84  6F6A               	movwf	follow_path@dp& (0+255),b
 15093   011F86  0E06               	movlw	high f_open@dj
 15094   011F88  6F6B               	movwf	(follow_path@dp+1)& (0+255),b
 15095   011F8A  C6B1  F66C         	movff	f_open@path,follow_path@path
 15096   011F8E  C6B2  F66D         	movff	f_open@path+1,follow_path@path+1
 15097   011F92  EC8F  F0B5         	call	_follow_path	;wreg free
 15098   011F96  6FD6               	movwf	f_open@res& (0+255),b
 15099                           
 15100                           ; BSR set to: 6
 15101                           ;fatfs/ff.c: 3744:   if (res == FR_OK) {
 15102   011F98  51D6               	movf	f_open@res& (0+255),w,b
 15103   011F9A  B4D8               	btfsc	status,2,c
 15104                           
 15105                           ; BSR set to: 6
 15106                           ;fatfs/ff.c: 3745:    if (dj.fn[11] & 0x80) {
 15107   011F9C  AFFE               	btfss	(f_open@dj+39)& (0+255),7,b
 15108   011F9E  D002               	goto	l11483
 15109                           
 15110                           ; BSR set to: 6
 15111                           ;fatfs/ff.c: 3746:     res = FR_INVALID_NAME;
 15112   011FA0  0E06               	movlw	6
 15113   011FA2  6FD6               	movwf	f_open@res& (0+255),b
 15114   011FA4                     l11483:
 15115                           
 15116                           ; BSR set to: 6
 15117                           ;fatfs/ff.c: 3755:   if (mode & (0x08 | 0x10 | 0x04)) {
 15118   011FA4  C6B3  F6B4         	movff	f_open@mode,??_f_open
 15119   011FA8  0E1C               	movlw	28
 15120   011FAA  17B4               	andwf	??_f_open& (0+255),f,b
 15121   011FAC  B4D8               	btfsc	status,2,c
 15122   011FAE  D0E9               	goto	l11529
 15123                           
 15124                           ; BSR set to: 6
 15125                           ;fatfs/ff.c: 3756:    if (res != FR_OK) {
 15126   011FB0  51D6               	movf	f_open@res& (0+255),w,b
 15127   011FB2  B4D8               	btfsc	status,2,c
 15128   011FB4  D00D               	goto	l11493
 15129                           
 15130                           ; BSR set to: 6
 15131                           ;fatfs/ff.c: 3757:     if (res == FR_NO_FILE) {
 15132   011FB6  0E04               	movlw	4
 15133   011FB8  19D6               	xorwf	f_open@res& (0+255),w,b
 15134   011FBA  A4D8               	btfss	status,2,c
 15135   011FBC  D007               	goto	l11491
 15136                           
 15137                           ; BSR set to: 6
 15138                           ;fatfs/ff.c: 3761:      res = dir_register(&dj);
 15139   011FBE  0ED7               	movlw	low f_open@dj
 15140   011FC0  6F6E               	movwf	dir_register@dp& (0+255),b
 15141   011FC2  0E06               	movlw	high f_open@dj
 15142   011FC4  6F6F               	movwf	(dir_register@dp+1)& (0+255),b
 15143   011FC6  ECF5  F0C2         	call	_dir_register	;wreg free
 15144   011FCA  6FD6               	movwf	f_open@res& (0+255),b
 15145   011FCC                     l11491:
 15146                           
 15147                           ; BSR set to: 6
 15148                           ;fatfs/ff.c: 3764:     mode |= 0x08;
 15149   011FCC  87B3               	bsf	f_open@mode& (0+255),3,b
 15150                           
 15151                           ;fatfs/ff.c: 3765:    }
 15152   011FCE  D00C               	goto	l617
 15153   011FD0                     l11493:
 15154                           
 15155                           ; BSR set to: 6
 15156                           ;fatfs/ff.c: 3767:     if (dj.obj.attr & (0x01 | 0x10)) {
 15157   011FD0  C6DB  F6B4         	movff	f_open@dj+4,??_f_open
 15158   011FD4  0E11               	movlw	17
 15159   011FD6  17B4               	andwf	??_f_open& (0+255),f,b
 15160   011FD8  B4D8               	btfsc	status,2,c
 15161   011FDA  D002               	goto	l618
 15162                           
 15163                           ; BSR set to: 6
 15164                           ;fatfs/ff.c: 3768:      res = FR_DENIED;
 15165   011FDC  0E07               	movlw	7
 15166   011FDE  D003               	goto	L2
 15167   011FE0                     l618:
 15168                           
 15169                           ; BSR set to: 6
 15170                           ;fatfs/ff.c: 3770:      if (mode & 0x04) res = FR_EXIST;
 15171   011FE0  A5B3               	btfss	f_open@mode& (0+255),2,b
 15172   011FE2  D002               	goto	l617
 15173                           
 15174                           ; BSR set to: 6
 15175   011FE4  0E08               	movlw	8
 15176   011FE6                     L2:
 15177   011FE6  6FD6               	movwf	f_open@res& (0+255),b
 15178   011FE8                     l617:
 15179                           
 15180                           ; BSR set to: 6
 15181                           ;fatfs/ff.c: 3773:    if (res == FR_OK && (mode & 0x08)) {
 15182   011FE8  51D6               	movf	f_open@res& (0+255),w,b
 15183   011FEA  B4D8               	btfsc	status,2,c
 15184                           
 15185                           ; BSR set to: 6
 15186   011FEC  A7B3               	btfss	f_open@mode& (0+255),3,b
 15187   011FEE  D0D5               	goto	l624
 15188                           
 15189                           ; BSR set to: 6
 15190                           ;fatfs/ff.c: 3792:     {;fatfs/ff.c: 3794:      tm = get_fattime();
 15191   011FF0  ECD5  F0CF         	call	_get_fattime	;wreg free
 15192   011FF4  C501  F6C0         	movff	?_get_fattime,f_open@tm
 15193   011FF8  C502  F6C1         	movff	?_get_fattime+1,f_open@tm+1
 15194   011FFC  C503  F6C2         	movff	?_get_fattime+2,f_open@tm+2
 15195   012000  C504  F6C3         	movff	?_get_fattime+3,f_open@tm+3
 15196                           
 15197                           ; BSR set to: 6
 15198                           ;fatfs/ff.c: 3795:      st_dword(dj.dir + 14, tm);
 15199   012004  0E0E               	movlw	14
 15200   012006  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 15201   012008  6E01               	movwf	st_dword@ptr^(0+1280),c
 15202   01200A  0E00               	movlw	0
 15203   01200C  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 15204   01200E  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 15205   012010  C6C0  F503         	movff	f_open@tm,st_dword@val
 15206   012014  C6C1  F504         	movff	f_open@tm+1,st_dword@val+1
 15207   012018  C6C2  F505         	movff	f_open@tm+2,st_dword@val+2
 15208   01201C  C6C3  F506         	movff	f_open@tm+3,st_dword@val+3
 15209   012020  EC64  F0CB         	call	_st_dword	;wreg free
 15210                           
 15211                           ; BSR set to: 6
 15212                           ;fatfs/ff.c: 3796:      st_dword(dj.dir + 22, tm);
 15213   012024  0E16               	movlw	22
 15214   012026  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 15215   012028  6E01               	movwf	st_dword@ptr^(0+1280),c
 15216   01202A  0E00               	movlw	0
 15217   01202C  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 15218   01202E  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 15219   012030  C6C0  F503         	movff	f_open@tm,st_dword@val
 15220   012034  C6C1  F504         	movff	f_open@tm+1,st_dword@val+1
 15221   012038  C6C2  F505         	movff	f_open@tm+2,st_dword@val+2
 15222   01203C  C6C3  F506         	movff	f_open@tm+3,st_dword@val+3
 15223   012040  EC64  F0CB         	call	_st_dword	;wreg free
 15224                           
 15225                           ; BSR set to: 6
 15226                           ;fatfs/ff.c: 3797:      cl = ld_clust(fs, dj.dir);
 15227   012044  C6D4  F508         	movff	f_open@fs,ld_clust@fs
 15228   012048  C6D5  F509         	movff	f_open@fs+1,ld_clust@fs+1
 15229   01204C  C6F1  F50A         	movff	f_open@dj+26,ld_clust@dir
 15230   012050  C6F2  F50B         	movff	f_open@dj+27,ld_clust@dir+1
 15231   012054  EC0E  F0CA         	call	_ld_clust	;wreg free
 15232   012058  C508  F6C4         	movff	?_ld_clust,f_open@cl
 15233   01205C  C509  F6C5         	movff	?_ld_clust+1,f_open@cl+1
 15234   012060  C50A  F6C6         	movff	?_ld_clust+2,f_open@cl+2
 15235   012064  C50B  F6C7         	movff	?_ld_clust+3,f_open@cl+3
 15236                           
 15237                           ;fatfs/ff.c: 3798:      dj.dir[11] = 0x20;
 15238   012068  0106               	movlb	6	; () banked
 15239   01206A  EE20 F00B          	lfsr	2,11
 15240   01206E  51F1               	movf	(f_open@dj+26)& (0+255),w,b
 15241   012070  26D9               	addwf	fsr2l,f,c
 15242   012072  51F2               	movf	(f_open@dj+27)& (0+255),w,b
 15243   012074  22DA               	addwfc	fsr2h,f,c
 15244   012076  0E20               	movlw	32
 15245   012078  6EDF               	movwf	indf2,c
 15246                           
 15247                           ; BSR set to: 6
 15248                           ;fatfs/ff.c: 3799:      st_clust(fs, dj.dir, 0);
 15249   01207A  C6D4  F505         	movff	f_open@fs,st_clust@fs
 15250   01207E  C6D5  F506         	movff	f_open@fs+1,st_clust@fs+1
 15251   012082  C6F1  F507         	movff	f_open@dj+26,st_clust@dir
 15252   012086  C6F2  F508         	movff	f_open@dj+27,st_clust@dir+1
 15253   01208A  0E00               	movlw	0
 15254   01208C  6E09               	movwf	st_clust@cl^(0+1280),c
 15255   01208E  0E00               	movlw	0
 15256   012090  6E0A               	movwf	(st_clust@cl+1)^(0+1280),c
 15257   012092  0E00               	movlw	0
 15258   012094  6E0B               	movwf	(st_clust@cl+2)^(0+1280),c
 15259   012096  0E00               	movlw	0
 15260   012098  6E0C               	movwf	(st_clust@cl+3)^(0+1280),c
 15261   01209A  ECF0  F0CD         	call	_st_clust	;wreg free
 15262                           
 15263                           ;fatfs/ff.c: 3800:      st_dword(dj.dir + 28, 0);
 15264   01209E  0E1C               	movlw	28
 15265   0120A0  0106               	movlb	6	; () banked
 15266   0120A2  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 15267   0120A4  6E01               	movwf	st_dword@ptr^(0+1280),c
 15268   0120A6  0E00               	movlw	0
 15269   0120A8  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 15270   0120AA  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 15271   0120AC  0E00               	movlw	0
 15272   0120AE  6E03               	movwf	st_dword@val^(0+1280),c
 15273   0120B0  0E00               	movlw	0
 15274   0120B2  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 15275   0120B4  0E00               	movlw	0
 15276   0120B6  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 15277   0120B8  0E00               	movlw	0
 15278   0120BA  6E06               	movwf	(st_dword@val+3)^(0+1280),c
 15279   0120BC  EC64  F0CB         	call	_st_dword	;wreg free
 15280                           
 15281                           ; BSR set to: 6
 15282                           ;fatfs/ff.c: 3801:      fs->wflag = 1;
 15283   0120C0  EE20 F004          	lfsr	2,4
 15284   0120C4  51D4               	movf	f_open@fs& (0+255),w,b
 15285   0120C6  26D9               	addwf	fsr2l,f,c
 15286   0120C8  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15287   0120CA  22DA               	addwfc	fsr2h,f,c
 15288   0120CC  0E01               	movlw	1
 15289   0120CE  6EDF               	movwf	indf2,c
 15290                           
 15291                           ; BSR set to: 6
 15292                           ;fatfs/ff.c: 3802:      if (cl != 0) {
 15293   0120D0  51C4               	movf	f_open@cl& (0+255),w,b
 15294   0120D2  11C5               	iorwf	(f_open@cl+1)& (0+255),w,b
 15295   0120D4  11C6               	iorwf	(f_open@cl+2)& (0+255),w,b
 15296   0120D6  11C7               	iorwf	(f_open@cl+3)& (0+255),w,b
 15297   0120D8  B4D8               	btfsc	status,2,c
 15298   0120DA  D05F               	goto	l624
 15299                           
 15300                           ; BSR set to: 6
 15301                           ;fatfs/ff.c: 3803:       sc = fs->winsect;
 15302   0120DC  EE20 F02C          	lfsr	2,44
 15303   0120E0  51D4               	movf	f_open@fs& (0+255),w,b
 15304   0120E2  26D9               	addwf	fsr2l,f,c
 15305   0120E4  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15306   0120E6  22DA               	addwfc	fsr2h,f,c
 15307   0120E8  C4DE F6C8          	movff	postinc2,f_open@sc
 15308   0120EC  C4DE F6C9          	movff	postinc2,f_open@sc+1
 15309   0120F0  C4DE F6CA          	movff	postinc2,f_open@sc+2
 15310   0120F4  C4DE F6CB          	movff	postinc2,f_open@sc+3
 15311                           
 15312                           ; BSR set to: 6
 15313                           ;fatfs/ff.c: 3804:       res = remove_chain(&dj.obj, cl, 0);
 15314   0120F8  0ED7               	movlw	low f_open@dj
 15315   0120FA  6F2B               	movwf	remove_chain@obj& (0+255),b
 15316   0120FC  0E06               	movlw	high f_open@dj
 15317   0120FE  6F2C               	movwf	(remove_chain@obj+1)& (0+255),b
 15318   012100  C6C4  F62D         	movff	f_open@cl,remove_chain@clst
 15319   012104  C6C5  F62E         	movff	f_open@cl+1,remove_chain@clst+1
 15320   012108  C6C6  F62F         	movff	f_open@cl+2,remove_chain@clst+2
 15321   01210C  C6C7  F630         	movff	f_open@cl+3,remove_chain@clst+3
 15322   012110  0E00               	movlw	0
 15323   012112  6F31               	movwf	remove_chain@pclst& (0+255),b
 15324   012114  0E00               	movlw	0
 15325   012116  6F32               	movwf	(remove_chain@pclst+1)& (0+255),b
 15326   012118  0E00               	movlw	0
 15327   01211A  6F33               	movwf	(remove_chain@pclst+2)& (0+255),b
 15328   01211C  0E00               	movlw	0
 15329   01211E  6F34               	movwf	(remove_chain@pclst+3)& (0+255),b
 15330   012120  ECE0  F0B3         	call	_remove_chain	;wreg free
 15331   012124  6FD6               	movwf	f_open@res& (0+255),b
 15332                           
 15333                           ; BSR set to: 6
 15334                           ;fatfs/ff.c: 3805:       if (res == FR_OK) {
 15335   012126  51D6               	movf	f_open@res& (0+255),w,b
 15336   012128  A4D8               	btfss	status,2,c
 15337   01212A  D037               	goto	l624
 15338                           
 15339                           ; BSR set to: 6
 15340                           ;fatfs/ff.c: 3806:        res = move_window(fs, sc);
 15341   01212C  C6D4  F600         	movff	f_open@fs,move_window@fs
 15342   012130  C6D5  F601         	movff	f_open@fs+1,move_window@fs+1
 15343   012134  C6C8  F602         	movff	f_open@sc,move_window@sect
 15344   012138  C6C9  F603         	movff	f_open@sc+1,move_window@sect+1
 15345   01213C  C6CA  F604         	movff	f_open@sc+2,move_window@sect+2
 15346   012140  C6CB  F605         	movff	f_open@sc+3,move_window@sect+3
 15347   012144  EC1A  F0C4         	call	_move_window	;wreg free
 15348   012148  0106               	movlb	6	; () banked
 15349   01214A  6FD6               	movwf	f_open@res& (0+255),b
 15350                           
 15351                           ; BSR set to: 6
 15352                           ;fatfs/ff.c: 3807:        fs->last_clst = cl - 1;
 15353   01214C  0EFF               	movlw	255
 15354   01214E  25C4               	addwf	f_open@cl& (0+255),w,b
 15355   012150  6FB4               	movwf	??_f_open& (0+255),b
 15356   012152  0EFF               	movlw	255
 15357   012154  21C5               	addwfc	(f_open@cl+1)& (0+255),w,b
 15358   012156  6FB5               	movwf	(??_f_open+1)& (0+255),b
 15359   012158  0EFF               	movlw	255
 15360   01215A  21C6               	addwfc	(f_open@cl+2)& (0+255),w,b
 15361   01215C  6FB6               	movwf	(??_f_open+2)& (0+255),b
 15362   01215E  0EFF               	movlw	255
 15363   012160  21C7               	addwfc	(f_open@cl+3)& (0+255),w,b
 15364   012162  6FB7               	movwf	(??_f_open+3)& (0+255),b
 15365   012164  EE20 F00C          	lfsr	2,12
 15366   012168  51D4               	movf	f_open@fs& (0+255),w,b
 15367   01216A  26D9               	addwf	fsr2l,f,c
 15368   01216C  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15369   01216E  22DA               	addwfc	fsr2h,f,c
 15370   012170  C6B4  F4DE         	movff	??_f_open,postinc2
 15371   012174  C6B5  F4DE         	movff	??_f_open+1,postinc2
 15372   012178  C6B6  F4DE         	movff	??_f_open+2,postinc2
 15373   01217C  C6B7  F4DE         	movff	??_f_open+3,postinc2
 15374   012180  D00C               	goto	l624
 15375   012182                     l11529:
 15376                           
 15377                           ; BSR set to: 6
 15378                           ;fatfs/ff.c: 3814:    if (res == FR_OK) {
 15379   012182  51D6               	movf	f_open@res& (0+255),w,b
 15380   012184  A4D8               	btfss	status,2,c
 15381   012186  D009               	goto	l624
 15382                           
 15383                           ; BSR set to: 6
 15384                           ;fatfs/ff.c: 3815:     if (dj.obj.attr & 0x10) {
 15385   012188  A9DB               	btfss	(f_open@dj+4)& (0+255),4,b
 15386   01218A  D002               	goto	l626
 15387                           
 15388                           ; BSR set to: 6
 15389                           ;fatfs/ff.c: 3816:      res = FR_NO_FILE;
 15390   01218C  0E04               	movlw	4
 15391   01218E  D004               	goto	L3
 15392   012190                     l626:
 15393                           
 15394                           ; BSR set to: 6
 15395                           ;fatfs/ff.c: 3818:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
 15396   012190  B3B3               	btfsc	f_open@mode& (0+255),1,b
 15397                           
 15398                           ; BSR set to: 6
 15399   012192  A1DB               	btfss	(f_open@dj+4)& (0+255),0,b
 15400   012194  D002               	goto	l624
 15401                           
 15402                           ; BSR set to: 6
 15403                           ;fatfs/ff.c: 3819:       res = FR_DENIED;
 15404   012196  0E07               	movlw	7
 15405   012198                     L3:
 15406   012198  6FD6               	movwf	f_open@res& (0+255),b
 15407   01219A                     l624:
 15408                           
 15409                           ; BSR set to: 6
 15410                           ;fatfs/ff.c: 3824:   if (res == FR_OK) {
 15411   01219A  51D6               	movf	f_open@res& (0+255),w,b
 15412   01219C  A4D8               	btfss	status,2,c
 15413   01219E  D020               	goto	l11547
 15414                           
 15415                           ; BSR set to: 6
 15416                           ;fatfs/ff.c: 3825:    if (mode & 0x08) mode |= 0x40;
 15417   0121A0  B7B3               	btfsc	f_open@mode& (0+255),3,b
 15418                           
 15419                           ; BSR set to: 6
 15420   0121A2  8DB3               	bsf	f_open@mode& (0+255),6,b
 15421                           
 15422                           ; BSR set to: 6
 15423                           ;fatfs/ff.c: 3826:    fp->dir_sect = fs->winsect;
 15424   0121A4  EE20 F02C          	lfsr	2,44
 15425   0121A8  51D4               	movf	f_open@fs& (0+255),w,b
 15426   0121AA  26D9               	addwf	fsr2l,f,c
 15427   0121AC  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15428   0121AE  22DA               	addwfc	fsr2h,f,c
 15429   0121B0  EE10 F01C          	lfsr	1,28
 15430   0121B4  51AF               	movf	f_open@fp& (0+255),w,b
 15431   0121B6  26E1               	addwf	fsr1l,f,c
 15432   0121B8  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15433   0121BA  22E2               	addwfc	fsr1h,f,c
 15434   0121BC  C4DE F4E6          	movff	postinc2,postinc1
 15435   0121C0  C4DE F4E6          	movff	postinc2,postinc1
 15436   0121C4  C4DE F4E6          	movff	postinc2,postinc1
 15437   0121C8  C4DE F4E6          	movff	postinc2,postinc1
 15438                           
 15439                           ; BSR set to: 6
 15440                           ;fatfs/ff.c: 3827:    fp->dir_ptr = dj.dir;
 15441   0121CC  EE20 F020          	lfsr	2,32
 15442   0121D0  51AF               	movf	f_open@fp& (0+255),w,b
 15443   0121D2  26D9               	addwf	fsr2l,f,c
 15444   0121D4  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15445   0121D6  22DA               	addwfc	fsr2h,f,c
 15446   0121D8  C6F1  F4DE         	movff	f_open@dj+26,postinc2
 15447   0121DC  C6F2  F4DD         	movff	f_open@dj+27,postdec2
 15448   0121E0                     l11547:
 15449                           
 15450                           ; BSR set to: 6
 15451                           ;fatfs/ff.c: 3845:   if (res == FR_OK) {
 15452   0121E0  51D6               	movf	f_open@res& (0+255),w,b
 15453   0121E2  A4D8               	btfss	status,2,c
 15454   0121E4  D1B4               	goto	l632
 15455                           
 15456                           ; BSR set to: 6
 15457                           ;fatfs/ff.c: 3854:    {;fatfs/ff.c: 3855:     fp->obj.sclust = ld_clust(fs, dj.dir);
 15458   0121E6  C6D4  F508         	movff	f_open@fs,ld_clust@fs
 15459   0121EA  C6D5  F509         	movff	f_open@fs+1,ld_clust@fs+1
 15460   0121EE  C6F1  F50A         	movff	f_open@dj+26,ld_clust@dir
 15461   0121F2  C6F2  F50B         	movff	f_open@dj+27,ld_clust@dir+1
 15462   0121F6  EC0E  F0CA         	call	_ld_clust	;wreg free
 15463   0121FA  0106               	movlb	6	; () banked
 15464   0121FC  EE20 F006          	lfsr	2,6
 15465   012200  51AF               	movf	f_open@fp& (0+255),w,b
 15466   012202  26D9               	addwf	fsr2l,f,c
 15467   012204  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15468   012206  22DA               	addwfc	fsr2h,f,c
 15469   012208  C508  F4DE         	movff	?_ld_clust,postinc2
 15470   01220C  C509  F4DE         	movff	?_ld_clust+1,postinc2
 15471   012210  C50A  F4DE         	movff	?_ld_clust+2,postinc2
 15472   012214  C50B  F4DE         	movff	?_ld_clust+3,postinc2
 15473                           
 15474                           ;fatfs/ff.c: 3856:     fp->obj.objsize = ld_dword(dj.dir + 28);
 15475   012218  0E1C               	movlw	28
 15476   01221A  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 15477   01221C  6E01               	movwf	ld_dword@ptr^(0+1280),c
 15478   01221E  0E00               	movlw	0
 15479   012220  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 15480   012222  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 15481   012224  ECD5  F0C4         	call	_ld_dword	;wreg free
 15482   012228  EE20 F00A          	lfsr	2,10
 15483   01222C  51AF               	movf	f_open@fp& (0+255),w,b
 15484   01222E  26D9               	addwf	fsr2l,f,c
 15485   012230  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15486   012232  22DA               	addwfc	fsr2h,f,c
 15487   012234  C501  F4DE         	movff	?_ld_dword,postinc2
 15488   012238  C502  F4DE         	movff	?_ld_dword+1,postinc2
 15489   01223C  C503  F4DE         	movff	?_ld_dword+2,postinc2
 15490   012240  C504  F4DE         	movff	?_ld_dword+3,postinc2
 15491                           
 15492                           ; BSR set to: 6
 15493                           ;fatfs/ff.c: 3857:    };fatfs/ff.c: 3861:    fp->obj.fs = fs;
 15494   012244  C6AF  F4D9         	movff	f_open@fp,fsr2l
 15495   012248  C6B0  F4DA         	movff	f_open@fp+1,fsr2h
 15496   01224C  C6D4  F4DE         	movff	f_open@fs,postinc2
 15497   012250  C6D5  F4DD         	movff	f_open@fs+1,postdec2
 15498                           
 15499                           ; BSR set to: 6
 15500                           ;fatfs/ff.c: 3862:    fp->obj.id = fs->id;
 15501   012254  EE20 F006          	lfsr	2,6
 15502   012258  51D4               	movf	f_open@fs& (0+255),w,b
 15503   01225A  26D9               	addwf	fsr2l,f,c
 15504   01225C  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15505   01225E  22DA               	addwfc	fsr2h,f,c
 15506   012260  EE10 F002          	lfsr	1,2
 15507   012264  51AF               	movf	f_open@fp& (0+255),w,b
 15508   012266  26E1               	addwf	fsr1l,f,c
 15509   012268  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15510   01226A  22E2               	addwfc	fsr1h,f,c
 15511   01226C  C4DE F4E6          	movff	postinc2,postinc1
 15512   012270  C4DD F4E5          	movff	postdec2,postdec1
 15513                           
 15514                           ; BSR set to: 6
 15515                           ;fatfs/ff.c: 3863:    fp->flag = mode;
 15516   012274  EE20 F00E          	lfsr	2,14
 15517   012278  51AF               	movf	f_open@fp& (0+255),w,b
 15518   01227A  26D9               	addwf	fsr2l,f,c
 15519   01227C  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15520   01227E  22DA               	addwfc	fsr2h,f,c
 15521   012280  C6B3  F4DF         	movff	f_open@mode,indf2
 15522                           
 15523                           ; BSR set to: 6
 15524                           ;fatfs/ff.c: 3864:    fp->err = 0;
 15525   012284  EE20 F00F          	lfsr	2,15
 15526   012288  51AF               	movf	f_open@fp& (0+255),w,b
 15527   01228A  26D9               	addwf	fsr2l,f,c
 15528   01228C  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15529   01228E  22DA               	addwfc	fsr2h,f,c
 15530   012290  6ADF               	clrf	indf2,c
 15531                           
 15532                           ; BSR set to: 6
 15533                           ;fatfs/ff.c: 3865:    fp->sect = 0;
 15534   012292  EE20 F018          	lfsr	2,24
 15535   012296  51AF               	movf	f_open@fp& (0+255),w,b
 15536   012298  26D9               	addwf	fsr2l,f,c
 15537   01229A  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15538   01229C  22DA               	addwfc	fsr2h,f,c
 15539   01229E  6ADE               	clrf	postinc2,c
 15540   0122A0  6ADE               	clrf	postinc2,c
 15541   0122A2  6ADE               	clrf	postinc2,c
 15542   0122A4  6ADD               	clrf	postdec2,c
 15543                           
 15544                           ; BSR set to: 6
 15545                           ;fatfs/ff.c: 3866:    fp->fptr = 0;
 15546   0122A6  EE20 F010          	lfsr	2,16
 15547   0122AA  51AF               	movf	f_open@fp& (0+255),w,b
 15548   0122AC  26D9               	addwf	fsr2l,f,c
 15549   0122AE  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15550   0122B0  22DA               	addwfc	fsr2h,f,c
 15551   0122B2  6ADE               	clrf	postinc2,c
 15552   0122B4  6ADE               	clrf	postinc2,c
 15553   0122B6  6ADE               	clrf	postinc2,c
 15554   0122B8  6ADD               	clrf	postdec2,c
 15555                           
 15556                           ; BSR set to: 6
 15557                           ;fatfs/ff.c: 3869:    memset(fp->buf, 0, sizeof fp->buf);
 15558   0122BA  0E22               	movlw	34
 15559   0122BC  25AF               	addwf	f_open@fp& (0+255),w,b
 15560   0122BE  6E01               	movwf	memset@dest^(0+1280),c
 15561   0122C0  0E00               	movlw	0
 15562   0122C2  21B0               	addwfc	(f_open@fp+1)& (0+255),w,b
 15563   0122C4  6E02               	movwf	(memset@dest+1)^(0+1280),c
 15564   0122C6  0E00               	movlw	0
 15565   0122C8  6E04               	movwf	(memset@c+1)^(0+1280),c
 15566   0122CA  0E00               	movlw	0
 15567   0122CC  6E03               	movwf	memset@c^(0+1280),c
 15568   0122CE  0E02               	movlw	2
 15569   0122D0  6E06               	movwf	(memset@n+1)^(0+1280),c
 15570   0122D2  0E00               	movlw	0
 15571   0122D4  6E05               	movwf	memset@n^(0+1280),c
 15572   0122D6  ECE7  F0CE         	call	_memset	;wreg free
 15573                           
 15574                           ; BSR set to: 6
 15575                           ;fatfs/ff.c: 3871:    if ((mode & 0x20) && fp->obj.objsize > 0) {
 15576   0122DA  ABB3               	btfss	f_open@mode& (0+255),5,b
 15577   0122DC  D138               	goto	l632
 15578                           
 15579                           ; BSR set to: 6
 15580   0122DE  EE20 F00A          	lfsr	2,10
 15581   0122E2  51AF               	movf	f_open@fp& (0+255),w,b
 15582   0122E4  26D9               	addwf	fsr2l,f,c
 15583   0122E6  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15584   0122E8  22DA               	addwfc	fsr2h,f,c
 15585   0122EA  50DE               	movf	postinc2,w,c
 15586   0122EC  10DE               	iorwf	postinc2,w,c
 15587   0122EE  10DE               	iorwf	postinc2,w,c
 15588   0122F0  10DE               	iorwf	postinc2,w,c
 15589   0122F2  B4D8               	btfsc	status,2,c
 15590   0122F4  D12C               	goto	l632
 15591                           
 15592                           ; BSR set to: 6
 15593                           ;fatfs/ff.c: 3872:     fp->fptr = fp->obj.objsize;
 15594   0122F6  EE20 F00A          	lfsr	2,10
 15595   0122FA  51AF               	movf	f_open@fp& (0+255),w,b
 15596   0122FC  26D9               	addwf	fsr2l,f,c
 15597   0122FE  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15598   012300  22DA               	addwfc	fsr2h,f,c
 15599   012302  EE10 F010          	lfsr	1,16
 15600   012306  51AF               	movf	f_open@fp& (0+255),w,b
 15601   012308  26E1               	addwf	fsr1l,f,c
 15602   01230A  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15603   01230C  22E2               	addwfc	fsr1h,f,c
 15604   01230E  C4DE F4E6          	movff	postinc2,postinc1
 15605   012312  C4DE F4E6          	movff	postinc2,postinc1
 15606   012316  C4DE F4E6          	movff	postinc2,postinc1
 15607   01231A  C4DE F4E6          	movff	postinc2,postinc1
 15608                           
 15609                           ; BSR set to: 6
 15610                           ;fatfs/ff.c: 3873:     bcs = (DWORD)fs->csize * ((UINT)512);
 15611   01231E  EE20 F00A          	lfsr	2,10
 15612   012322  51D4               	movf	f_open@fs& (0+255),w,b
 15613   012324  26D9               	addwf	fsr2l,f,c
 15614   012326  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15615   012328  22DA               	addwfc	fsr2h,f,c
 15616   01232A  C4DE F6B4          	movff	postinc2,??_f_open
 15617   01232E  C4DD F6B5          	movff	postdec2,??_f_open+1
 15618   012332  51B4               	movf	??_f_open& (0+255),w,b
 15619   012334  6FB6               	movwf	(??_f_open+2)& (0+255),b
 15620   012336  51B5               	movf	(??_f_open+1)& (0+255),w,b
 15621   012338  6FB7               	movwf	(??_f_open+3)& (0+255),b
 15622   01233A  6BB8               	clrf	(??_f_open+4)& (0+255),b
 15623   01233C  6BB9               	clrf	(??_f_open+5)& (0+255),b
 15624   01233E  0E09               	movlw	9
 15625   012340                     u14535:
 15626   012340  90D8               	bcf	status,0,c
 15627   012342  37B6               	rlcf	(??_f_open+2)& (0+255),f,b
 15628   012344  37B7               	rlcf	(??_f_open+3)& (0+255),f,b
 15629   012346  37B8               	rlcf	(??_f_open+4)& (0+255),f,b
 15630   012348  37B9               	rlcf	(??_f_open+5)& (0+255),f,b
 15631   01234A  2EE8               	decfsz	wreg,f,c
 15632   01234C  D7F9               	goto	u14535
 15633   01234E  C6B6  F6BC         	movff	??_f_open+2,f_open@bcs
 15634   012352  C6B7  F6BD         	movff	??_f_open+3,f_open@bcs+1
 15635   012356  C6B8  F6BE         	movff	??_f_open+4,f_open@bcs+2
 15636   01235A  C6B9  F6BF         	movff	??_f_open+5,f_open@bcs+3
 15637                           
 15638                           ; BSR set to: 6
 15639                           ;fatfs/ff.c: 3874:     clst = fp->obj.sclust;
 15640   01235E  EE20 F006          	lfsr	2,6
 15641   012362  51AF               	movf	f_open@fp& (0+255),w,b
 15642   012364  26D9               	addwf	fsr2l,f,c
 15643   012366  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15644   012368  22DA               	addwfc	fsr2h,f,c
 15645   01236A  C4DE F6D0          	movff	postinc2,f_open@clst
 15646   01236E  C4DE F6D1          	movff	postinc2,f_open@clst+1
 15647   012372  C4DE F6D2          	movff	postinc2,f_open@clst+2
 15648   012376  C4DE F6D3          	movff	postinc2,f_open@clst+3
 15649                           
 15650                           ; BSR set to: 6
 15651                           ;fatfs/ff.c: 3875:     for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs
      +                          ) {
 15652   01237A  EE20 F00A          	lfsr	2,10
 15653   01237E  51AF               	movf	f_open@fp& (0+255),w,b
 15654   012380  26D9               	addwf	fsr2l,f,c
 15655   012382  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15656   012384  22DA               	addwfc	fsr2h,f,c
 15657   012386  C4DE F6CC          	movff	postinc2,f_open@ofs
 15658   01238A  C4DE F6CD          	movff	postinc2,f_open@ofs+1
 15659   01238E  C4DE F6CE          	movff	postinc2,f_open@ofs+2
 15660   012392  C4DE F6CF          	movff	postinc2,f_open@ofs+3
 15661   012396  D034               	goto	l11589
 15662   012398                     l11577:
 15663                           
 15664                           ; BSR set to: 6
 15665                           ;fatfs/ff.c: 3876:      clst = get_fat(&fp->obj, clst);
 15666   012398  C6AF  F60A         	movff	f_open@fp,get_fat@obj
 15667   01239C  C6B0  F60B         	movff	f_open@fp+1,get_fat@obj+1
 15668   0123A0  C6D0  F60C         	movff	f_open@clst,get_fat@clst
 15669   0123A4  C6D1  F60D         	movff	f_open@clst+1,get_fat@clst+1
 15670   0123A8  C6D2  F60E         	movff	f_open@clst+2,get_fat@clst+2
 15671   0123AC  C6D3  F60F         	movff	f_open@clst+3,get_fat@clst+3
 15672   0123B0  EC66  F0A0         	call	_get_fat	;wreg free
 15673   0123B4  C60A  F6D0         	movff	?_get_fat,f_open@clst
 15674   0123B8  C60B  F6D1         	movff	?_get_fat+1,f_open@clst+1
 15675   0123BC  C60C  F6D2         	movff	?_get_fat+2,f_open@clst+2
 15676   0123C0  C60D  F6D3         	movff	?_get_fat+3,f_open@clst+3
 15677                           
 15678                           ;fatfs/ff.c: 3877:      if (clst <= 1) res = FR_INT_ERR;
 15679   0123C4  0106               	movlb	6	; () banked
 15680   0123C6  51D3               	movf	(f_open@clst+3)& (0+255),w,b
 15681   0123C8  11D2               	iorwf	(f_open@clst+2)& (0+255),w,b
 15682   0123CA  11D1               	iorwf	(f_open@clst+1)& (0+255),w,b
 15683   0123CC  E106               	bnz	l11583
 15684   0123CE  0E02               	movlw	2
 15685   0123D0  5DD0               	subwf	f_open@clst& (0+255),w,b
 15686   0123D2  B0D8               	btfsc	status,0,c
 15687   0123D4  D002               	goto	l11583
 15688                           
 15689                           ; BSR set to: 6
 15690   0123D6  0E02               	movlw	2
 15691   0123D8  6FD6               	movwf	f_open@res& (0+255),b
 15692   0123DA                     l11583:
 15693                           
 15694                           ; BSR set to: 6
 15695                           ;fatfs/ff.c: 3878:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 15696   0123DA  29D0               	incf	f_open@clst& (0+255),w,b
 15697   0123DC  E109               	bnz	l11587
 15698   0123DE  29D1               	incf	(f_open@clst+1)& (0+255),w,b
 15699   0123E0  E107               	bnz	l11587
 15700   0123E2  29D2               	incf	(f_open@clst+2)& (0+255),w,b
 15701   0123E4  E105               	bnz	l11587
 15702   0123E6  29D3               	incf	(f_open@clst+3)& (0+255),w,b
 15703   0123E8  A4D8               	btfss	status,2,c
 15704   0123EA  D002               	goto	l11587
 15705                           
 15706                           ; BSR set to: 6
 15707   0123EC  0E01               	movlw	1
 15708   0123EE  6FD6               	movwf	f_open@res& (0+255),b
 15709   0123F0                     l11587:
 15710                           
 15711                           ; BSR set to: 6
 15712                           ;fatfs/ff.c: 3879:     }
 15713   0123F0  51BC               	movf	f_open@bcs& (0+255),w,b
 15714   0123F2  5FCC               	subwf	f_open@ofs& (0+255),f,b
 15715   0123F4  51BD               	movf	(f_open@bcs+1)& (0+255),w,b
 15716   0123F6  5BCD               	subwfb	(f_open@ofs+1)& (0+255),f,b
 15717   0123F8  51BE               	movf	(f_open@bcs+2)& (0+255),w,b
 15718   0123FA  5BCE               	subwfb	(f_open@ofs+2)& (0+255),f,b
 15719   0123FC  51BF               	movf	(f_open@bcs+3)& (0+255),w,b
 15720   0123FE  5BCF               	subwfb	(f_open@ofs+3)& (0+255),f,b
 15721   012400                     l11589:
 15722                           
 15723                           ; BSR set to: 6
 15724   012400  51D6               	movf	f_open@res& (0+255),w,b
 15725   012402  A4D8               	btfss	status,2,c
 15726   012404  D00A               	goto	u14570
 15727                           
 15728                           ; BSR set to: 6
 15729   012406  51CC               	movf	f_open@ofs& (0+255),w,b
 15730   012408  5DBC               	subwf	f_open@bcs& (0+255),w,b
 15731   01240A  51CD               	movf	(f_open@ofs+1)& (0+255),w,b
 15732   01240C  59BD               	subwfb	(f_open@bcs+1)& (0+255),w,b
 15733   01240E  51CE               	movf	(f_open@ofs+2)& (0+255),w,b
 15734   012410  59BE               	subwfb	(f_open@bcs+2)& (0+255),w,b
 15735   012412  51CF               	movf	(f_open@ofs+3)& (0+255),w,b
 15736   012414  59BF               	subwfb	(f_open@bcs+3)& (0+255),w,b
 15737   012416  A0D8               	btfss	status,0,c
 15738   012418  D7BF               	goto	l11577
 15739   01241A                     u14570:
 15740                           
 15741                           ; BSR set to: 6
 15742                           ;fatfs/ff.c: 3880:     fp->clust = clst;
 15743   01241A  EE20 F014          	lfsr	2,20
 15744   01241E  51AF               	movf	f_open@fp& (0+255),w,b
 15745   012420  26D9               	addwf	fsr2l,f,c
 15746   012422  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15747   012424  22DA               	addwfc	fsr2h,f,c
 15748   012426  C6D0  F4DE         	movff	f_open@clst,postinc2
 15749   01242A  C6D1  F4DE         	movff	f_open@clst+1,postinc2
 15750   01242E  C6D2  F4DE         	movff	f_open@clst+2,postinc2
 15751   012432  C6D3  F4DE         	movff	f_open@clst+3,postinc2
 15752                           
 15753                           ; BSR set to: 6
 15754                           ;fatfs/ff.c: 3881:     if (res == FR_OK && ofs % ((UINT)512)) {
 15755   012436  51D6               	movf	f_open@res& (0+255),w,b
 15756   012438  A4D8               	btfss	status,2,c
 15757   01243A  D089               	goto	l632
 15758                           
 15759                           ; BSR set to: 6
 15760   01243C  0EFF               	movlw	255
 15761   01243E  15CC               	andwf	f_open@ofs& (0+255),w,b
 15762   012440  6FB4               	movwf	??_f_open& (0+255),b
 15763   012442  0E01               	movlw	1
 15764   012444  15CD               	andwf	(f_open@ofs+1)& (0+255),w,b
 15765   012446  6FB5               	movwf	(??_f_open+1)& (0+255),b
 15766   012448  0E00               	movlw	0
 15767   01244A  15CE               	andwf	(f_open@ofs+2)& (0+255),w,b
 15768   01244C  6FB6               	movwf	(??_f_open+2)& (0+255),b
 15769   01244E  0E00               	movlw	0
 15770   012450  15CF               	andwf	(f_open@ofs+3)& (0+255),w,b
 15771   012452  6FB7               	movwf	(??_f_open+3)& (0+255),b
 15772   012454  51B4               	movf	??_f_open& (0+255),w,b
 15773   012456  11B5               	iorwf	(??_f_open+1)& (0+255),w,b
 15774   012458  11B6               	iorwf	(??_f_open+2)& (0+255),w,b
 15775   01245A  11B7               	iorwf	(??_f_open+3)& (0+255),w,b
 15776   01245C  B4D8               	btfsc	status,2,c
 15777   01245E  D077               	goto	l632
 15778                           
 15779                           ; BSR set to: 6
 15780                           ;fatfs/ff.c: 3882:      sc = clst2sect(fs, clst);
 15781   012460  C6D4  F50D         	movff	f_open@fs,clst2sect@fs
 15782   012464  C6D5  F50E         	movff	f_open@fs+1,clst2sect@fs+1
 15783   012468  C6D0  F50F         	movff	f_open@clst,clst2sect@clst
 15784   01246C  C6D1  F510         	movff	f_open@clst+1,clst2sect@clst+1
 15785   012470  C6D2  F511         	movff	f_open@clst+2,clst2sect@clst+2
 15786   012474  C6D3  F512         	movff	f_open@clst+3,clst2sect@clst+3
 15787   012478  ECBA  F0C3         	call	_clst2sect	;wreg free
 15788   01247C  C50D  F6C8         	movff	?_clst2sect,f_open@sc
 15789   012480  C50E  F6C9         	movff	?_clst2sect+1,f_open@sc+1
 15790   012484  C50F  F6CA         	movff	?_clst2sect+2,f_open@sc+2
 15791   012488  C510  F6CB         	movff	?_clst2sect+3,f_open@sc+3
 15792                           
 15793                           ;fatfs/ff.c: 3883:      if (sc == 0) {
 15794   01248C  0106               	movlb	6	; () banked
 15795   01248E  51C8               	movf	f_open@sc& (0+255),w,b
 15796   012490  11C9               	iorwf	(f_open@sc+1)& (0+255),w,b
 15797   012492  11CA               	iorwf	(f_open@sc+2)& (0+255),w,b
 15798   012494  11CB               	iorwf	(f_open@sc+3)& (0+255),w,b
 15799   012496  A4D8               	btfss	status,2,c
 15800   012498  D002               	goto	l11605
 15801                           
 15802                           ; BSR set to: 6
 15803                           ;fatfs/ff.c: 3884:       res = FR_INT_ERR;
 15804   01249A  0E02               	movlw	2
 15805   01249C  D057               	goto	L4
 15806   01249E                     l11605:
 15807                           
 15808                           ; BSR set to: 6
 15809                           ;fatfs/ff.c: 3886:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
 15810   01249E  C6CC  F6B4         	movff	f_open@ofs,??_f_open
 15811   0124A2  C6CD  F6B5         	movff	f_open@ofs+1,??_f_open+1
 15812   0124A6  C6CE  F6B6         	movff	f_open@ofs+2,??_f_open+2
 15813   0124AA  C6CF  F6B7         	movff	f_open@ofs+3,??_f_open+3
 15814   0124AE  0E0A               	movlw	10
 15815   0124B0  D005               	goto	u14610
 15816   0124B2                     u14615:
 15817   0124B2  90D8               	bcf	status,0,c
 15818   0124B4  33B7               	rrcf	(??_f_open+3)& (0+255),f,b
 15819   0124B6  33B6               	rrcf	(??_f_open+2)& (0+255),f,b
 15820   0124B8  33B5               	rrcf	(??_f_open+1)& (0+255),f,b
 15821   0124BA  33B4               	rrcf	??_f_open& (0+255),f,b
 15822   0124BC                     u14610:
 15823   0124BC  2EE8               	decfsz	wreg,f,c
 15824   0124BE  D7F9               	goto	u14615
 15825   0124C0  51C8               	movf	f_open@sc& (0+255),w,b
 15826   0124C2  25B4               	addwf	??_f_open& (0+255),w,b
 15827   0124C4  6FB8               	movwf	(??_f_open+4)& (0+255),b
 15828   0124C6  51C9               	movf	(f_open@sc+1)& (0+255),w,b
 15829   0124C8  21B5               	addwfc	(??_f_open+1)& (0+255),w,b
 15830   0124CA  6FB9               	movwf	(??_f_open+5)& (0+255),b
 15831   0124CC  51CA               	movf	(f_open@sc+2)& (0+255),w,b
 15832   0124CE  21B6               	addwfc	(??_f_open+2)& (0+255),w,b
 15833   0124D0  6FBA               	movwf	(??_f_open+6)& (0+255),b
 15834   0124D2  51CB               	movf	(f_open@sc+3)& (0+255),w,b
 15835   0124D4  21B7               	addwfc	(??_f_open+3)& (0+255),w,b
 15836   0124D6  6FBB               	movwf	(??_f_open+7)& (0+255),b
 15837   0124D8  EE20 F018          	lfsr	2,24
 15838   0124DC  51AF               	movf	f_open@fp& (0+255),w,b
 15839   0124DE  26D9               	addwf	fsr2l,f,c
 15840   0124E0  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15841   0124E2  22DA               	addwfc	fsr2h,f,c
 15842   0124E4  C6B8  F4DE         	movff	??_f_open+4,postinc2
 15843   0124E8  C6B9  F4DE         	movff	??_f_open+5,postinc2
 15844   0124EC  C6BA  F4DE         	movff	??_f_open+6,postinc2
 15845   0124F0  C6BB  F4DE         	movff	??_f_open+7,postinc2
 15846                           
 15847                           ; BSR set to: 6
 15848                           ;fatfs/ff.c: 3888:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res = 
      +                          FR_DISK_ERR;
 15849   0124F4  0E22               	movlw	34
 15850   0124F6  25AF               	addwf	f_open@fp& (0+255),w,b
 15851   0124F8  0105               	movlb	5	; () banked
 15852   0124FA  6FE4               	movwf	disk_read@buff& (0+255),b
 15853   0124FC  0E00               	movlw	0
 15854   0124FE  0106               	movlb	6	; () banked
 15855   012500  21B0               	addwfc	(f_open@fp+1)& (0+255),w,b
 15856   012502  0105               	movlb	5	; () banked
 15857   012504  6FE5               	movwf	(disk_read@buff+1)& (0+255),b
 15858   012506  0106               	movlb	6	; () banked
 15859   012508  EE20 F018          	lfsr	2,24
 15860   01250C  51AF               	movf	f_open@fp& (0+255),w,b
 15861   01250E  26D9               	addwf	fsr2l,f,c
 15862   012510  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 15863   012512  22DA               	addwfc	fsr2h,f,c
 15864   012514  C4DE F5E6          	movff	postinc2,disk_read@sector
 15865   012518  C4DE F5E7          	movff	postinc2,disk_read@sector+1
 15866   01251C  C4DE F5E8          	movff	postinc2,disk_read@sector+2
 15867   012520  C4DE F5E9          	movff	postinc2,disk_read@sector+3
 15868   012524  0E00               	movlw	0
 15869   012526  0105               	movlb	5	; () banked
 15870   012528  6FEB               	movwf	(disk_read@count+1)& (0+255),b
 15871   01252A  0E01               	movlw	1
 15872   01252C  6FEA               	movwf	disk_read@count& (0+255),b
 15873   01252E  0106               	movlb	6	; () banked
 15874   012530  EE20 F001          	lfsr	2,1
 15875   012534  51D4               	movf	f_open@fs& (0+255),w,b
 15876   012536  26D9               	addwf	fsr2l,f,c
 15877   012538  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 15878   01253A  22DA               	addwfc	fsr2h,f,c
 15879   01253C  50DF               	movf	indf2,w,c
 15880   01253E  EC50  F0C9         	call	_disk_read
 15881   012542  0900               	iorlw	0
 15882   012544  B4D8               	btfsc	status,2,c
 15883   012546  D003               	goto	l632
 15884                           
 15885                           ; BSR set to: 5
 15886   012548  0E01               	movlw	1
 15887   01254A  0106               	movlb	6	; () banked
 15888   01254C                     L4:
 15889   01254C  6FD6               	movwf	f_open@res& (0+255),b
 15890   01254E                     l632:
 15891                           
 15892                           ;fatfs/ff.c: 3902:  if (res != FR_OK) fp->obj.fs = 0;
 15893                           
 15894                           ; BSR set to: 5
 15895                           ;fatfs/ff.c: 3900:  }
 15896   01254E  0106               	movlb	6	; () banked
 15897   012550  51D6               	movf	f_open@res& (0+255),w,b
 15898   012552  B4D8               	btfsc	status,2,c
 15899   012554  D006               	goto	l11613
 15900                           
 15901                           ; BSR set to: 6
 15902   012556  C6AF  F4D9         	movff	f_open@fp,fsr2l
 15903   01255A  C6B0  F4DA         	movff	f_open@fp+1,fsr2h
 15904   01255E  6ADE               	clrf	postinc2,c
 15905   012560  6ADD               	clrf	postdec2,c
 15906   012562                     l11613:
 15907                           
 15908                           ; BSR set to: 6
 15909                           ;fatfs/ff.c: 3904:  return res;
 15910   012562  51D6               	movf	f_open@res& (0+255),w,b
 15911                           
 15912                           ; BSR set to: 6
 15913   012564  0012               	return		;funcret
 15914   012566                     __end_of_f_open:
 15915                           	callstack 0
 15916                           
 15917 ;; *************** function _remove_chain *****************
 15918 ;; Defined at:
 15919 ;;		line 1429 in file "fatfs/ff.c"
 15920 ;; Parameters:    Size  Location     Type
 15921 ;;  obj             2   43[BANK6 ] PTR struct .
 15922 ;;		 -> f_mkdir@sobj(14), f_unlink@dj(40), f_open@dj(40), 
 15923 ;;  clst            4   45[BANK6 ] unsigned long 
 15924 ;;  pclst           4   49[BANK6 ] unsigned long 
 15925 ;; Auto vars:     Size  Location     Type
 15926 ;;  nxt             4   61[BANK6 ] unsigned long 
 15927 ;;  fs              2   66[BANK6 ] PTR struct .
 15928 ;;		 -> fs(560), NULL(0), 
 15929 ;;  res             1   65[BANK6 ] enum E275
 15930 ;; Return value:  Size  Location     Type
 15931 ;;                  1    wreg      enum E275
 15932 ;; Registers used:
 15933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15934 ;; Tracked objects:
 15935 ;;		On entry : 3F/6
 15936 ;;		On exit  : 3F/6
 15937 ;;		Unchanged: 0/0
 15938 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15939 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15940 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15941 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15942 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15943 ;;Total ram usage:       25 bytes
 15944 ;; Hardware stack levels used: 1
 15945 ;; Hardware stack levels required when called: 14
 15946 ;; This function calls:
 15947 ;;		_get_fat
 15948 ;;		_put_fat
 15949 ;; This function is called by:
 15950 ;;		_f_open
 15951 ;; This function uses a non-reentrant model
 15952 ;;
 15953                           
 15954                           	psect	text12
 15955   0167C0                     __ptext12:
 15956                           	callstack 0
 15957   0167C0                     _remove_chain:
 15958                           	callstack 110
 15959                           
 15960                           ; BSR set to: 6
 15961                           ;fatfs/ff.c: 1436:  DWORD nxt;;fatfs/ff.c: 1437:  FATFS *fs = obj->fs;
 15962                           
 15963                           ; BSR set to: 6
 15964                           
 15965                           ; BSR set to: 6
 15966                           ;incstack = 0
 15967   0167C0  C62B  F4D9         	movff	remove_chain@obj,fsr2l
 15968   0167C4  C62C  F4DA         	movff	remove_chain@obj+1,fsr2h
 15969   0167C8  C4DE F642          	movff	postinc2,remove_chain@fs
 15970   0167CC  C4DD F643          	movff	postdec2,remove_chain@fs+1
 15971                           
 15972                           ; BSR set to: 6
 15973                           ;fatfs/ff.c: 1445:  if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
 15974   0167D0  5130               	movf	(remove_chain@clst+3)& (0+255),w,b
 15975   0167D2  112F               	iorwf	(remove_chain@clst+2)& (0+255),w,b
 15976   0167D4  112E               	iorwf	(remove_chain@clst+1)& (0+255),w,b
 15977   0167D6  E104               	bnz	u13400
 15978   0167D8  0E02               	movlw	2
 15979   0167DA  5D2D               	subwf	remove_chain@clst& (0+255),w,b
 15980   0167DC  A0D8               	btfss	status,0,c
 15981   0167DE  D010               	goto	u13410
 15982   0167E0                     u13400:
 15983                           
 15984                           ; BSR set to: 6
 15985   0167E0  EE20 F014          	lfsr	2,20
 15986   0167E4  5142               	movf	remove_chain@fs& (0+255),w,b
 15987   0167E6  26D9               	addwf	fsr2l,f,c
 15988   0167E8  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 15989   0167EA  22DA               	addwfc	fsr2h,f,c
 15990   0167EC  50DE               	movf	postinc2,w,c
 15991   0167EE  5D2D               	subwf	remove_chain@clst& (0+255),w,b
 15992   0167F0  50DE               	movf	postinc2,w,c
 15993   0167F2  592E               	subwfb	(remove_chain@clst+1)& (0+255),w,b
 15994   0167F4  50DE               	movf	postinc2,w,c
 15995   0167F6  592F               	subwfb	(remove_chain@clst+2)& (0+255),w,b
 15996   0167F8  50DE               	movf	postinc2,w,c
 15997   0167FA  5930               	subwfb	(remove_chain@clst+3)& (0+255),w,b
 15998   0167FC  A0D8               	btfss	status,0,c
 15999   0167FE  D002               	goto	l10907
 16000   016800                     u13410:
 16001                           
 16002                           ; BSR set to: 6
 16003   016800  0E02               	movlw	2
 16004   016802  0012               	return	
 16005   016804                     l10907:
 16006                           
 16007                           ; BSR set to: 6
 16008                           ;fatfs/ff.c: 1448:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj->stat != 2)) {
 16009   016804  5131               	movf	remove_chain@pclst& (0+255),w,b
 16010   016806  1132               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
 16011   016808  1133               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
 16012   01680A  1134               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
 16013   01680C  B4D8               	btfsc	status,2,c
 16014   01680E  D01C               	goto	l10923
 16015                           
 16016                           ; BSR set to: 6
 16017                           ;fatfs/ff.c: 1449:   res = put_fat(fs, pclst, 0xFFFFFFFF);
 16018   016810  C642  F60A         	movff	remove_chain@fs,put_fat@fs
 16019   016814  C643  F60B         	movff	remove_chain@fs+1,put_fat@fs+1
 16020   016818  C631  F60C         	movff	remove_chain@pclst,put_fat@clst
 16021   01681C  C632  F60D         	movff	remove_chain@pclst+1,put_fat@clst+1
 16022   016820  C633  F60E         	movff	remove_chain@pclst+2,put_fat@clst+2
 16023   016824  C634  F60F         	movff	remove_chain@pclst+3,put_fat@clst+3
 16024   016828  0EFF               	movlw	255
 16025   01682A  6F10               	movwf	put_fat@val& (0+255),b
 16026   01682C  0EFF               	movlw	255
 16027   01682E  6F11               	movwf	(put_fat@val+1)& (0+255),b
 16028   016830  0EFF               	movlw	255
 16029   016832  6F12               	movwf	(put_fat@val+2)& (0+255),b
 16030   016834  0EFF               	movlw	255
 16031   016836  6F13               	movwf	(put_fat@val+3)& (0+255),b
 16032   016838  ECD6  F09A         	call	_put_fat	;wreg free
 16033   01683C  6F41               	movwf	remove_chain@res& (0+255),b
 16034                           
 16035                           ; BSR set to: 6
 16036                           ;fatfs/ff.c: 1450:   if (res != FR_OK) return res;
 16037   01683E  5141               	movf	remove_chain@res& (0+255),w,b
 16038   016840  B4D8               	btfsc	status,2,c
 16039   016842  D002               	goto	l10923
 16040   016844                     u13430:
 16041                           
 16042                           ; BSR set to: 6
 16043   016844  5141               	movf	remove_chain@res& (0+255),w,b
 16044   016846  0012               	return	
 16045   016848                     l10923:
 16046                           
 16047                           ; BSR set to: 6
 16048                           ;fatfs/ff.c: 1455:   nxt = get_fat(obj, clst);
 16049   016848  C62B  F60A         	movff	remove_chain@obj,get_fat@obj
 16050   01684C  C62C  F60B         	movff	remove_chain@obj+1,get_fat@obj+1
 16051   016850  C62D  F60C         	movff	remove_chain@clst,get_fat@clst
 16052   016854  C62E  F60D         	movff	remove_chain@clst+1,get_fat@clst+1
 16053   016858  C62F  F60E         	movff	remove_chain@clst+2,get_fat@clst+2
 16054   01685C  C630  F60F         	movff	remove_chain@clst+3,get_fat@clst+3
 16055   016860  EC66  F0A0         	call	_get_fat	;wreg free
 16056   016864  C60A  F63D         	movff	?_get_fat,remove_chain@nxt
 16057   016868  C60B  F63E         	movff	?_get_fat+1,remove_chain@nxt+1
 16058   01686C  C60C  F63F         	movff	?_get_fat+2,remove_chain@nxt+2
 16059   016870  C60D  F640         	movff	?_get_fat+3,remove_chain@nxt+3
 16060                           
 16061                           ;fatfs/ff.c: 1456:   if (nxt == 0) break;
 16062   016874  0106               	movlb	6	; () banked
 16063   016876  513D               	movf	remove_chain@nxt& (0+255),w,b
 16064   016878  113E               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 16065   01687A  113F               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
 16066   01687C  1140               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
 16067   01687E  B4D8               	btfsc	status,2,c
 16068   016880  D078               	goto	u13490
 16069                           
 16070                           ; BSR set to: 6
 16071                           ;fatfs/ff.c: 1457:   if (nxt == 1) return FR_INT_ERR;
 16072   016882  053D               	decf	remove_chain@nxt& (0+255),w,b
 16073   016884  113E               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 16074   016886  113F               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
 16075   016888  1140               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
 16076   01688A  B4D8               	btfsc	status,2,c
 16077   01688C  D7B9               	goto	u13410
 16078                           
 16079                           ; BSR set to: 6
 16080                           ;fatfs/ff.c: 1458:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
 16081   01688E  293D               	incf	remove_chain@nxt& (0+255),w,b
 16082   016890  E109               	bnz	l10943
 16083   016892  293E               	incf	(remove_chain@nxt+1)& (0+255),w,b
 16084   016894  E107               	bnz	l10943
 16085   016896  293F               	incf	(remove_chain@nxt+2)& (0+255),w,b
 16086   016898  E105               	bnz	l10943
 16087   01689A  2940               	incf	(remove_chain@nxt+3)& (0+255),w,b
 16088   01689C  A4D8               	btfss	status,2,c
 16089   01689E  D002               	goto	l10943
 16090                           
 16091                           ; BSR set to: 6
 16092   0168A0  0E01               	movlw	1
 16093   0168A2  0012               	return	
 16094   0168A4                     l10943:
 16095                           
 16096                           ; BSR set to: 6
 16097                           ;fatfs/ff.c: 1460:    res = put_fat(fs, clst, 0);
 16098   0168A4  C642  F60A         	movff	remove_chain@fs,put_fat@fs
 16099   0168A8  C643  F60B         	movff	remove_chain@fs+1,put_fat@fs+1
 16100   0168AC  C62D  F60C         	movff	remove_chain@clst,put_fat@clst
 16101   0168B0  C62E  F60D         	movff	remove_chain@clst+1,put_fat@clst+1
 16102   0168B4  C62F  F60E         	movff	remove_chain@clst+2,put_fat@clst+2
 16103   0168B8  C630  F60F         	movff	remove_chain@clst+3,put_fat@clst+3
 16104   0168BC  0E00               	movlw	0
 16105   0168BE  6F10               	movwf	put_fat@val& (0+255),b
 16106   0168C0  0E00               	movlw	0
 16107   0168C2  6F11               	movwf	(put_fat@val+1)& (0+255),b
 16108   0168C4  0E00               	movlw	0
 16109   0168C6  6F12               	movwf	(put_fat@val+2)& (0+255),b
 16110   0168C8  0E00               	movlw	0
 16111   0168CA  6F13               	movwf	(put_fat@val+3)& (0+255),b
 16112   0168CC  ECD6  F09A         	call	_put_fat	;wreg free
 16113   0168D0  6F41               	movwf	remove_chain@res& (0+255),b
 16114                           
 16115                           ; BSR set to: 6
 16116                           ;fatfs/ff.c: 1461:    if (res != FR_OK) return res;
 16117   0168D2  5141               	movf	remove_chain@res& (0+255),w,b
 16118   0168D4  A4D8               	btfss	status,2,c
 16119   0168D6  D7B6               	goto	u13430
 16120                           
 16121                           ; BSR set to: 6
 16122                           ;fatfs/ff.c: 1463:   if (fs->free_clst < fs->n_fatent - 2) {
 16123   0168D8  EE20 F014          	lfsr	2,20
 16124   0168DC  5142               	movf	remove_chain@fs& (0+255),w,b
 16125   0168DE  26D9               	addwf	fsr2l,f,c
 16126   0168E0  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 16127   0168E2  22DA               	addwfc	fsr2h,f,c
 16128   0168E4  0EFE               	movlw	254
 16129   0168E6  24DE               	addwf	postinc2,w,c
 16130   0168E8  6F35               	movwf	??_remove_chain& (0+255),b
 16131   0168EA  0EFF               	movlw	255
 16132   0168EC  20DE               	addwfc	postinc2,w,c
 16133   0168EE  6F36               	movwf	(??_remove_chain+1)& (0+255),b
 16134   0168F0  0EFF               	movlw	255
 16135   0168F2  20DE               	addwfc	postinc2,w,c
 16136   0168F4  6F37               	movwf	(??_remove_chain+2)& (0+255),b
 16137   0168F6  0EFF               	movlw	255
 16138   0168F8  20DE               	addwfc	postinc2,w,c
 16139   0168FA  6F38               	movwf	(??_remove_chain+3)& (0+255),b
 16140   0168FC  EE20 F010          	lfsr	2,16
 16141   016900  5142               	movf	remove_chain@fs& (0+255),w,b
 16142   016902  26D9               	addwf	fsr2l,f,c
 16143   016904  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 16144   016906  22DA               	addwfc	fsr2h,f,c
 16145   016908  5135               	movf	??_remove_chain& (0+255),w,b
 16146   01690A  5CDE               	subwf	postinc2,w,c
 16147   01690C  5136               	movf	(??_remove_chain+1)& (0+255),w,b
 16148   01690E  58DE               	subwfb	postinc2,w,c
 16149   016910  5137               	movf	(??_remove_chain+2)& (0+255),w,b
 16150   016912  58DE               	subwfb	postinc2,w,c
 16151   016914  5138               	movf	(??_remove_chain+3)& (0+255),w,b
 16152   016916  58DE               	subwfb	postinc2,w,c
 16153   016918  B0D8               	btfsc	status,0,c
 16154   01691A  D013               	goto	l10955
 16155                           
 16156                           ; BSR set to: 6
 16157                           ;fatfs/ff.c: 1464:    fs->free_clst++;
 16158   01691C  EE20 F010          	lfsr	2,16
 16159   016920  5142               	movf	remove_chain@fs& (0+255),w,b
 16160   016922  26D9               	addwf	fsr2l,f,c
 16161   016924  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 16162   016926  22DA               	addwfc	fsr2h,f,c
 16163   016928  2ADE               	incf	postinc2,f,c
 16164   01692A  0E00               	movlw	0
 16165   01692C  22DE               	addwfc	postinc2,f,c
 16166   01692E  22DE               	addwfc	postinc2,f,c
 16167   016930  22DE               	addwfc	postinc2,f,c
 16168                           
 16169                           ;fatfs/ff.c: 1465:    fs->fsi_flag |= 1;
 16170   016932  EE20 F005          	lfsr	2,5
 16171   016936  5142               	movf	remove_chain@fs& (0+255),w,b
 16172   016938  26D9               	addwf	fsr2l,f,c
 16173   01693A  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 16174   01693C  22DA               	addwfc	fsr2h,f,c
 16175   01693E  0E00               	movlw	0
 16176   016940  80DB               	bsf	plusw2,0,c
 16177   016942                     l10955:
 16178                           
 16179                           ; BSR set to: 6
 16180                           ;fatfs/ff.c: 1485:   clst = nxt;
 16181   016942  C63D  F62D         	movff	remove_chain@nxt,remove_chain@clst
 16182   016946  C63E  F62E         	movff	remove_chain@nxt+1,remove_chain@clst+1
 16183   01694A  C63F  F62F         	movff	remove_chain@nxt+2,remove_chain@clst+2
 16184   01694E  C640  F630         	movff	remove_chain@nxt+3,remove_chain@clst+3
 16185                           
 16186                           ;fatfs/ff.c: 1486:  } while (clst < fs->n_fatent);
 16187   016952  EE20 F014          	lfsr	2,20
 16188   016956  5142               	movf	remove_chain@fs& (0+255),w,b
 16189   016958  26D9               	addwf	fsr2l,f,c
 16190   01695A  5143               	movf	(remove_chain@fs+1)& (0+255),w,b
 16191   01695C  22DA               	addwfc	fsr2h,f,c
 16192   01695E  50DE               	movf	postinc2,w,c
 16193   016960  5D2D               	subwf	remove_chain@clst& (0+255),w,b
 16194   016962  50DE               	movf	postinc2,w,c
 16195   016964  592E               	subwfb	(remove_chain@clst+1)& (0+255),w,b
 16196   016966  50DE               	movf	postinc2,w,c
 16197   016968  592F               	subwfb	(remove_chain@clst+2)& (0+255),w,b
 16198   01696A  50DE               	movf	postinc2,w,c
 16199   01696C  5930               	subwfb	(remove_chain@clst+3)& (0+255),w,b
 16200   01696E  A0D8               	btfss	status,0,c
 16201   016970  D76B               	goto	l10923
 16202   016972                     u13490:
 16203                           
 16204                           ; BSR set to: 6
 16205                           ;fatfs/ff.c: 1514:  return FR_OK;
 16206   016972  0E00               	movlw	0
 16207                           
 16208                           ; BSR set to: 6
 16209   016974  0012               	return		;funcret
 16210   016976                     __end_of_remove_chain:
 16211                           	callstack 0
 16212                           
 16213 ;; *************** function _follow_path *****************
 16214 ;; Defined at:
 16215 ;;		line 3051 in file "fatfs/ff.c"
 16216 ;; Parameters:    Size  Location     Type
 16217 ;;  dp              2  106[BANK6 ] PTR struct .
 16218 ;;		 -> fsdir(40), f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), 
 16219 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_open@dj(40), 
 16220 ;;  path            2  108[BANK6 ] PTR const unsigned char 
 16221 ;;		 -> STR_88(5), tmp_buf(512), STR_31(2), 
 16222 ;; Auto vars:     Size  Location     Type
 16223 ;;  fs              2  116[BANK6 ] PTR struct .
 16224 ;;		 -> fs(560), NULL(0), 
 16225 ;;  res             1  119[BANK6 ] enum E275
 16226 ;;  ns              1  118[BANK6 ] unsigned char 
 16227 ;; Return value:  Size  Location     Type
 16228 ;;                  1    wreg      enum E275
 16229 ;; Registers used:
 16230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16231 ;; Tracked objects:
 16232 ;;		On entry : 3F/6
 16233 ;;		On exit  : 3F/6
 16234 ;;		Unchanged: 0/0
 16235 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16236 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16237 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16238 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16239 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16240 ;;Total ram usage:       14 bytes
 16241 ;; Hardware stack levels used: 1
 16242 ;; Hardware stack levels required when called: 17
 16243 ;; This function calls:
 16244 ;;		_create_name
 16245 ;;		_dir_find
 16246 ;;		_dir_sdi
 16247 ;;		_ld_clust
 16248 ;; This function is called by:
 16249 ;;		_f_open
 16250 ;;		_f_opendir
 16251 ;; This function uses a non-reentrant model
 16252 ;;
 16253                           
 16254                           	psect	text13
 16255   016B1E                     __ptext13:
 16256                           	callstack 0
 16257   016B1E                     _follow_path:
 16258                           	callstack 107
 16259                           
 16260                           ; BSR set to: 6
 16261                           ;fatfs/ff.c: 3052:  DIR* dp,;fatfs/ff.c: 3053:  const TCHAR* path;fatfs/ff.c: 3055: {;fa
      +                          tfs/ff.c: 3056:  FRESULT res;;fatfs/ff.c: 3057:  BYTE ns;;fatfs/ff.c: 3058:  FATFS *fs =
      +                           dp->obj.fs;
 16262                           
 16263                           ; BSR set to: 6
 16264                           ;incstack = 0
 16265   016B1E  C66A  F4D9         	movff	follow_path@dp,fsr2l
 16266   016B22  C66B  F4DA         	movff	follow_path@dp+1,fsr2h
 16267   016B26  C4DE F674          	movff	postinc2,follow_path@fs
 16268   016B2A  C4DD F675          	movff	postdec2,follow_path@fs+1
 16269                           
 16270                           ;fatfs/ff.c: 3066:  {;fatfs/ff.c: 3067:   while (((*path) == '/' || (*path) == '\\')) pa
      +                          th++;
 16271   016B2E  D003               	goto	l11071
 16272   016B30                     l11069:
 16273   016B30  0106               	movlb	6	; () banked
 16274   016B32  4B6C               	infsnz	follow_path@path& (0+255),f,b
 16275   016B34  2B6D               	incf	(follow_path@path+1)& (0+255),f,b
 16276   016B36                     l11071:
 16277                           
 16278                           ; BSR set to: 6
 16279   016B36  C66C  F4F6         	movff	follow_path@path,tblptrl
 16280   016B3A  C66D  F4F7         	movff	follow_path@path+1,tblptrh
 16281   016B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 16282   016B40  6EF8               	movwf	tblptru,c
 16283   016B42  0E24               	movlw	(high __ramtop+-1)
 16284   016B44  64F7               	cpfsgt	tblptrh,c
 16285   016B46  D003               	bra	u13697
 16286   016B48  0008               	tblrd		*
 16287   016B4A  50F5               	movf	tablat,w,c
 16288   016B4C  D005               	bra	u13690
 16289   016B4E                     u13697:
 16290   016B4E  C4F6 F4E9          	movff	tblptrl,fsr0l
 16291   016B52  C4F7 F4EA          	movff	tblptrh,fsr0h
 16292   016B56  50EF               	movf	indf0,w,c
 16293   016B58                     u13690:
 16294   016B58  0A2F               	xorlw	47
 16295   016B5A  B4D8               	btfsc	status,2,c
 16296   016B5C  D7E9               	goto	l11069
 16297   016B5E  C66C  F4F6         	movff	follow_path@path,tblptrl
 16298   016B62  C66D  F4F7         	movff	follow_path@path+1,tblptrh
 16299   016B66  0E00               	movlw	low (__mediumconst shr (0+16))
 16300   016B68  6EF8               	movwf	tblptru,c
 16301   016B6A  0E24               	movlw	(high __ramtop+-1)
 16302   016B6C  64F7               	cpfsgt	tblptrh,c
 16303   016B6E  D003               	bra	u13717
 16304   016B70  0008               	tblrd		*
 16305   016B72  50F5               	movf	tablat,w,c
 16306   016B74  D005               	bra	u13710
 16307   016B76                     u13717:
 16308   016B76  C4F6 F4E9          	movff	tblptrl,fsr0l
 16309   016B7A  C4F7 F4EA          	movff	tblptrh,fsr0h
 16310   016B7E  50EF               	movf	indf0,w,c
 16311   016B80                     u13710:
 16312   016B80  0A5C               	xorlw	92
 16313   016B82  B4D8               	btfsc	status,2,c
 16314   016B84  D7D5               	goto	l11069
 16315                           
 16316                           ;fatfs/ff.c: 3068:   dp->obj.sclust = 0;
 16317   016B86  0106               	movlb	6	; () banked
 16318   016B88  EE20 F006          	lfsr	2,6
 16319   016B8C  516A               	movf	follow_path@dp& (0+255),w,b
 16320   016B8E  26D9               	addwf	fsr2l,f,c
 16321   016B90  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16322   016B92  22DA               	addwfc	fsr2h,f,c
 16323   016B94  6ADE               	clrf	postinc2,c
 16324   016B96  6ADE               	clrf	postinc2,c
 16325   016B98  6ADE               	clrf	postinc2,c
 16326   016B9A  6ADD               	clrf	postdec2,c
 16327                           
 16328                           ; BSR set to: 6
 16329                           ;fatfs/ff.c: 3069:  };fatfs/ff.c: 3087:  if ((UINT)*path < ' ') {
 16330   016B9C  C66C  F4F6         	movff	follow_path@path,tblptrl
 16331   016BA0  C66D  F4F7         	movff	follow_path@path+1,tblptrh
 16332   016BA4  0E00               	movlw	low (__mediumconst shr (0+16))
 16333   016BA6  6EF8               	movwf	tblptru,c
 16334   016BA8  0E24               	movlw	(high __ramtop+-1)
 16335   016BAA  64F7               	cpfsgt	tblptrh,c
 16336   016BAC  D003               	bra	u13737
 16337   016BAE  0008               	tblrd		*
 16338   016BB0  50F5               	movf	tablat,w,c
 16339   016BB2  D005               	bra	u13730
 16340   016BB4                     u13737:
 16341   016BB4  C4F6 F4E9          	movff	tblptrl,fsr0l
 16342   016BB8  C4F7 F4EA          	movff	tblptrh,fsr0h
 16343   016BBC  50EF               	movf	indf0,w,c
 16344   016BBE                     u13730:
 16345   016BBE  0106               	movlb	6	; () banked
 16346   016BC0  6F6E               	movwf	??_follow_path& (0+255),b
 16347   016BC2  0E20               	movlw	32
 16348   016BC4  616E               	cpfslt	??_follow_path& (0+255),b
 16349   016BC6  D017               	goto	l11083
 16350                           
 16351                           ; BSR set to: 6
 16352                           ;fatfs/ff.c: 3088:   dp->fn[11] = 0x80;
 16353   016BC8  EE20 F027          	lfsr	2,39
 16354   016BCC  516A               	movf	follow_path@dp& (0+255),w,b
 16355   016BCE  26D9               	addwf	fsr2l,f,c
 16356   016BD0  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16357   016BD2  22DA               	addwfc	fsr2h,f,c
 16358   016BD4  0E80               	movlw	128
 16359   016BD6  6EDF               	movwf	indf2,c
 16360                           
 16361                           ; BSR set to: 6
 16362                           ;fatfs/ff.c: 3089:   res = dir_sdi(dp, 0);
 16363   016BD8  C66A  F624         	movff	follow_path@dp,dir_sdi@dp
 16364   016BDC  C66B  F625         	movff	follow_path@dp+1,dir_sdi@dp+1
 16365   016BE0  0E00               	movlw	0
 16366   016BE2  6F26               	movwf	dir_sdi@ofs& (0+255),b
 16367   016BE4  0E00               	movlw	0
 16368   016BE6  6F27               	movwf	(dir_sdi@ofs+1)& (0+255),b
 16369   016BE8  0E00               	movlw	0
 16370   016BEA  6F28               	movwf	(dir_sdi@ofs+2)& (0+255),b
 16371   016BEC  0E00               	movlw	0
 16372   016BEE  6F29               	movwf	(dir_sdi@ofs+3)& (0+255),b
 16373   016BF0  EC31  F0A5         	call	_dir_sdi	;wreg free
 16374   016BF4  D027               	goto	L5
 16375   016BF6                     l11083:
 16376                           
 16377                           ; BSR set to: 6
 16378                           ;fatfs/ff.c: 3093:    res = create_name(dp, &path);
 16379   016BF6  C66A  F509         	movff	follow_path@dp,create_name@dp
 16380   016BFA  C66B  F50A         	movff	follow_path@dp+1,create_name@dp+1
 16381   016BFE  0E6C               	movlw	low follow_path@path
 16382   016C00  6E0B               	movwf	create_name@path^(0+1280),c
 16383   016C02  0E06               	movlw	high follow_path@path
 16384   016C04  6E0C               	movwf	(create_name@path+1)^(0+1280),c
 16385   016C06  EC07  F0A8         	call	_create_name	;wreg free
 16386   016C0A  0106               	movlb	6	; () banked
 16387   016C0C  6F77               	movwf	follow_path@res& (0+255),b
 16388                           
 16389                           ; BSR set to: 6
 16390                           ;fatfs/ff.c: 3094:    if (res != FR_OK) break;
 16391   016C0E  5177               	movf	follow_path@res& (0+255),w,b
 16392   016C10  A4D8               	btfss	status,2,c
 16393   016C12  D056               	goto	l11119
 16394                           
 16395                           ; BSR set to: 6
 16396                           ;fatfs/ff.c: 3095:    res = dir_find(dp);
 16397   016C14  C66A  F662         	movff	follow_path@dp,dir_find@dp
 16398   016C18  C66B  F663         	movff	follow_path@dp+1,dir_find@dp+1
 16399   016C1C  EC3D  F0BB         	call	_dir_find	;wreg free
 16400   016C20  6F77               	movwf	follow_path@res& (0+255),b
 16401                           
 16402                           ; BSR set to: 6
 16403                           ;fatfs/ff.c: 3096:    ns = dp->fn[11];
 16404   016C22  EE20 F027          	lfsr	2,39
 16405   016C26  516A               	movf	follow_path@dp& (0+255),w,b
 16406   016C28  26D9               	addwf	fsr2l,f,c
 16407   016C2A  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16408   016C2C  22DA               	addwfc	fsr2h,f,c
 16409   016C2E  50DF               	movf	indf2,w,c
 16410   016C30  6F76               	movwf	follow_path@ns& (0+255),b
 16411                           
 16412                           ; BSR set to: 6
 16413                           ;fatfs/ff.c: 3097:    if (res != FR_OK) {
 16414   016C32  5177               	movf	follow_path@res& (0+255),w,b
 16415   016C34  B4D8               	btfsc	status,2,c
 16416   016C36  D008               	goto	l487
 16417                           
 16418                           ; BSR set to: 6
 16419                           ;fatfs/ff.c: 3098:     if (res == FR_NO_FILE) {
 16420   016C38  0E04               	movlw	4
 16421   016C3A  1977               	xorwf	follow_path@res& (0+255),w,b
 16422   016C3C  B4D8               	btfsc	status,2,c
 16423                           
 16424                           ; BSR set to: 6
 16425                           ;fatfs/ff.c: 3104:       if (!(ns & 0x04)) res = FR_NO_PATH;
 16426   016C3E  B576               	btfsc	follow_path@ns& (0+255),2,b
 16427   016C40  D03F               	goto	l11119
 16428   016C42                     u13780:
 16429                           
 16430                           ; BSR set to: 6
 16431   016C42  0E05               	movlw	5
 16432   016C44                     L5:
 16433   016C44  6F77               	movwf	follow_path@res& (0+255),b
 16434   016C46  D03C               	goto	l11119
 16435   016C48                     l487:
 16436                           
 16437                           ; BSR set to: 6
 16438                           ;fatfs/ff.c: 3109:    if (ns & 0x04) break;
 16439   016C48  B576               	btfsc	follow_path@ns& (0+255),2,b
 16440   016C4A  D03A               	goto	l11119
 16441                           
 16442                           ; BSR set to: 6
 16443                           ;fatfs/ff.c: 3111:    if (!(dp->obj.attr & 0x10)) {
 16444   016C4C  EE20 F004          	lfsr	2,4
 16445   016C50  516A               	movf	follow_path@dp& (0+255),w,b
 16446   016C52  26D9               	addwf	fsr2l,f,c
 16447   016C54  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16448   016C56  22DA               	addwfc	fsr2h,f,c
 16449   016C58  A8DF               	btfss	indf2,4,c
 16450   016C5A  D7F3               	goto	u13780
 16451                           
 16452                           ; BSR set to: 6
 16453                           ;fatfs/ff.c: 3122:    {;fatfs/ff.c: 3123:     dp->obj.sclust = ld_clust(fs, fs->win + dp
      +                          ->dptr % ((UINT)512));
 16454   016C5C  C674  F508         	movff	follow_path@fs,ld_clust@fs
 16455   016C60  C675  F509         	movff	follow_path@fs+1,ld_clust@fs+1
 16456   016C64  EE20 F00E          	lfsr	2,14
 16457   016C68  516A               	movf	follow_path@dp& (0+255),w,b
 16458   016C6A  26D9               	addwf	fsr2l,f,c
 16459   016C6C  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16460   016C6E  22DA               	addwfc	fsr2h,f,c
 16461   016C70  C4DE F66E          	movff	postinc2,??_follow_path
 16462   016C74  C4DD F66F          	movff	postdec2,??_follow_path+1
 16463   016C78  0EFF               	movlw	255
 16464   016C7A  156E               	andwf	??_follow_path& (0+255),w,b
 16465   016C7C  6F70               	movwf	(??_follow_path+2)& (0+255),b
 16466   016C7E  0E01               	movlw	1
 16467   016C80  156F               	andwf	(??_follow_path+1)& (0+255),w,b
 16468   016C82  6F71               	movwf	(??_follow_path+3)& (0+255),b
 16469   016C84  5170               	movf	(??_follow_path+2)& (0+255),w,b
 16470   016C86  2574               	addwf	follow_path@fs& (0+255),w,b
 16471   016C88  6F72               	movwf	(??_follow_path+4)& (0+255),b
 16472   016C8A  5171               	movf	(??_follow_path+3)& (0+255),w,b
 16473   016C8C  2175               	addwfc	(follow_path@fs+1)& (0+255),w,b
 16474   016C8E  6F73               	movwf	(??_follow_path+5)& (0+255),b
 16475   016C90  0E30               	movlw	48
 16476   016C92  2572               	addwf	(??_follow_path+4)& (0+255),w,b
 16477   016C94  6E0A               	movwf	ld_clust@dir^(0+1280),c
 16478   016C96  0E00               	movlw	0
 16479   016C98  2173               	addwfc	(??_follow_path+5)& (0+255),w,b
 16480   016C9A  6E0B               	movwf	(ld_clust@dir+1)^(0+1280),c
 16481   016C9C  EC0E  F0CA         	call	_ld_clust	;wreg free
 16482   016CA0  0106               	movlb	6	; () banked
 16483   016CA2  EE20 F006          	lfsr	2,6
 16484   016CA6  516A               	movf	follow_path@dp& (0+255),w,b
 16485   016CA8  26D9               	addwf	fsr2l,f,c
 16486   016CAA  516B               	movf	(follow_path@dp+1)& (0+255),w,b
 16487   016CAC  22DA               	addwfc	fsr2h,f,c
 16488   016CAE  C508  F4DE         	movff	?_ld_clust,postinc2
 16489   016CB2  C509  F4DE         	movff	?_ld_clust+1,postinc2
 16490   016CB6  C50A  F4DE         	movff	?_ld_clust+2,postinc2
 16491   016CBA  C50B  F4DE         	movff	?_ld_clust+3,postinc2
 16492   016CBE  D79B               	goto	l11083
 16493   016CC0                     l11119:
 16494                           
 16495                           ; BSR set to: 6
 16496                           ;fatfs/ff.c: 3128:  return res;
 16497   016CC0  5177               	movf	follow_path@res& (0+255),w,b
 16498                           
 16499                           ; BSR set to: 6
 16500   016CC2  0012               	return		;funcret
 16501   016CC4                     __end_of_follow_path:
 16502                           	callstack 0
 16503                           
 16504 ;; *************** function _ld_clust *****************
 16505 ;; Defined at:
 16506 ;;		line 1848 in file "fatfs/ff.c"
 16507 ;; Parameters:    Size  Location     Type
 16508 ;;  fs              2    7[COMRAM] PTR struct .
 16509 ;;		 -> fs(560), NULL(0), 
 16510 ;;  dir             2    9[COMRAM] PTR const unsigned char 
 16511 ;;		 -> fs$win(512), fs(560), NULL(0), 
 16512 ;; Auto vars:     Size  Location     Type
 16513 ;;  cl              4   15[COMRAM] unsigned long 
 16514 ;; Return value:  Size  Location     Type
 16515 ;;                  4    7[COMRAM] unsigned long 
 16516 ;; Registers used:
 16517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16518 ;; Tracked objects:
 16519 ;;		On entry : 3F/6
 16520 ;;		On exit  : 0/0
 16521 ;;		Unchanged: 0/0
 16522 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16524 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16526 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16527 ;;Total ram usage:       12 bytes
 16528 ;; Hardware stack levels used: 1
 16529 ;; Hardware stack levels required when called: 1
 16530 ;; This function calls:
 16531 ;;		_ld_word
 16532 ;; This function is called by:
 16533 ;;		_follow_path
 16534 ;;		_f_open
 16535 ;;		_f_opendir
 16536 ;; This function uses a non-reentrant model
 16537 ;;
 16538                           
 16539                           	psect	text14
 16540   01941C                     __ptext14:
 16541                           	callstack 0
 16542   01941C                     _ld_clust:
 16543                           	callstack 123
 16544                           
 16545                           ; BSR set to: 6
 16546                           ;fatfs/ff.c: 1849:  FATFS* fs,;fatfs/ff.c: 1850:  const BYTE* dir;fatfs/ff.c: 1852: {;fa
      +                          tfs/ff.c: 1853:  DWORD cl;;fatfs/ff.c: 1855:  cl = ld_word(dir + 26);
 16547                           
 16548                           ; BSR set to: 6
 16549                           ;incstack = 0
 16550   01941C  0E1A               	movlw	26
 16551   01941E  240A               	addwf	ld_clust@dir^(0+1280),w,c
 16552   019420  6E01               	movwf	ld_word@ptr^(0+1280),c
 16553   019422  0E00               	movlw	0
 16554   019424  200B               	addwfc	(ld_clust@dir+1)^(0+1280),w,c
 16555   019426  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 16556   019428  EC31  F0CE         	call	_ld_word	;wreg free
 16557   01942C  C501  F510         	movff	?_ld_word,ld_clust@cl
 16558   019430  C502  F511         	movff	?_ld_word+1,ld_clust@cl+1
 16559   019434  6A12               	clrf	(ld_clust@cl+2)^(0+1280),c
 16560   019436  6A13               	clrf	(ld_clust@cl+3)^(0+1280),c
 16561                           
 16562                           ;fatfs/ff.c: 1856:  if (fs->fs_type == 3) {
 16563   019438  C508  F4D9         	movff	ld_clust@fs,fsr2l
 16564   01943C  C509  F4DA         	movff	ld_clust@fs+1,fsr2h
 16565   019440  0E03               	movlw	3
 16566   019442  18DE               	xorwf	postinc2,w,c
 16567   019444  A4D8               	btfss	status,2,c
 16568   019446  D01C               	goto	l10611
 16569                           
 16570                           ;fatfs/ff.c: 1857:   cl |= (DWORD)ld_word(dir + 20) << 16;
 16571   019448  0E14               	movlw	20
 16572   01944A  240A               	addwf	ld_clust@dir^(0+1280),w,c
 16573   01944C  6E01               	movwf	ld_word@ptr^(0+1280),c
 16574   01944E  0E00               	movlw	0
 16575   019450  200B               	addwfc	(ld_clust@dir+1)^(0+1280),w,c
 16576   019452  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 16577   019454  EC31  F0CE         	call	_ld_word	;wreg free
 16578   019458  5001               	movf	?_ld_word^(0+1280),w,c
 16579   01945A  6E0C               	movwf	??_ld_clust^(0+1280),c
 16580   01945C  5002               	movf	(?_ld_word+1)^(0+1280),w,c
 16581   01945E  6E0D               	movwf	(??_ld_clust+1)^(0+1280),c
 16582   019460  6A0E               	clrf	(??_ld_clust+2)^(0+1280),c
 16583   019462  6A0F               	clrf	(??_ld_clust+3)^(0+1280),c
 16584   019464  C50D  F50F         	movff	??_ld_clust+1,??_ld_clust+3
 16585   019468  C50C  F50E         	movff	??_ld_clust,??_ld_clust+2
 16586   01946C  6A0D               	clrf	(??_ld_clust+1)^(0+1280),c
 16587   01946E  6A0C               	clrf	??_ld_clust^(0+1280),c
 16588   019470  500C               	movf	??_ld_clust^(0+1280),w,c
 16589   019472  1210               	iorwf	ld_clust@cl^(0+1280),f,c
 16590   019474  500D               	movf	(??_ld_clust+1)^(0+1280),w,c
 16591   019476  1211               	iorwf	(ld_clust@cl+1)^(0+1280),f,c
 16592   019478  500E               	movf	(??_ld_clust+2)^(0+1280),w,c
 16593   01947A  1212               	iorwf	(ld_clust@cl+2)^(0+1280),f,c
 16594   01947C  500F               	movf	(??_ld_clust+3)^(0+1280),w,c
 16595   01947E  1213               	iorwf	(ld_clust@cl+3)^(0+1280),f,c
 16596   019480                     l10611:
 16597                           
 16598                           ;fatfs/ff.c: 1860:  return cl;
 16599   019480  C510  F508         	movff	ld_clust@cl,?_ld_clust
 16600   019484  C511  F509         	movff	ld_clust@cl+1,?_ld_clust+1
 16601   019488  C512  F50A         	movff	ld_clust@cl+2,?_ld_clust+2
 16602   01948C  C513  F50B         	movff	ld_clust@cl+3,?_ld_clust+3
 16603   019490  0012               	return		;funcret
 16604   019492                     __end_of_ld_clust:
 16605                           	callstack 0
 16606                           
 16607 ;; *************** function _dir_find *****************
 16608 ;; Defined at:
 16609 ;;		line 2384 in file "fatfs/ff.c"
 16610 ;; Parameters:    Size  Location     Type
 16611 ;;  dp              2   98[BANK6 ] PTR struct .
 16612 ;;		 -> fsdir(40), f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), 
 16613 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_open@dj(40), 
 16614 ;; Auto vars:     Size  Location     Type
 16615 ;;  fs              2  102[BANK6 ] PTR struct .
 16616 ;;		 -> fs(560), NULL(0), 
 16617 ;;  res             1  105[BANK6 ] enum E275
 16618 ;;  c               1  104[BANK6 ] unsigned char 
 16619 ;; Return value:  Size  Location     Type
 16620 ;;                  1    wreg      enum E275
 16621 ;; Registers used:
 16622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16623 ;; Tracked objects:
 16624 ;;		On entry : 3F/6
 16625 ;;		On exit  : 3F/6
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16628 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16629 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16630 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16631 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16632 ;;Total ram usage:        8 bytes
 16633 ;; Hardware stack levels used: 1
 16634 ;; Hardware stack levels required when called: 16
 16635 ;; This function calls:
 16636 ;;		_dir_next
 16637 ;;		_dir_sdi
 16638 ;;		_memcmp
 16639 ;;		_move_window
 16640 ;; This function is called by:
 16641 ;;		_follow_path
 16642 ;; This function uses a non-reentrant model
 16643 ;;
 16644                           
 16645                           	psect	text15
 16646   01767A                     __ptext15:
 16647                           	callstack 0
 16648   01767A                     _dir_find:
 16649                           	callstack 107
 16650                           
 16651                           ; BSR set to: 6
 16652                           ;fatfs/ff.c: 2385:  DIR* dp;fatfs/ff.c: 2387: {;fatfs/ff.c: 2388:  FRESULT res;;fatfs/ff
      +                          .c: 2389:  FATFS *fs = dp->obj.fs;
 16653                           
 16654                           ;incstack = 0
 16655   01767A  C662  F4D9         	movff	dir_find@dp,fsr2l
 16656   01767E  C663  F4DA         	movff	dir_find@dp+1,fsr2h
 16657   017682  C4DE F666          	movff	postinc2,dir_find@fs
 16658   017686  C4DD F667          	movff	postdec2,dir_find@fs+1
 16659                           
 16660                           ; BSR set to: 6
 16661                           ;fatfs/ff.c: 2390:  BYTE c;;fatfs/ff.c: 2395:  res = dir_sdi(dp, 0);
 16662   01768A  C662  F624         	movff	dir_find@dp,dir_sdi@dp
 16663   01768E  C663  F625         	movff	dir_find@dp+1,dir_sdi@dp+1
 16664   017692  0E00               	movlw	0
 16665   017694  6F26               	movwf	dir_sdi@ofs& (0+255),b
 16666   017696  0E00               	movlw	0
 16667   017698  6F27               	movwf	(dir_sdi@ofs+1)& (0+255),b
 16668   01769A  0E00               	movlw	0
 16669   01769C  6F28               	movwf	(dir_sdi@ofs+2)& (0+255),b
 16670   01769E  0E00               	movlw	0
 16671   0176A0  6F29               	movwf	(dir_sdi@ofs+3)& (0+255),b
 16672   0176A2  EC31  F0A5         	call	_dir_sdi	;wreg free
 16673   0176A6  6F69               	movwf	dir_find@res& (0+255),b
 16674                           
 16675                           ; BSR set to: 6
 16676                           ;fatfs/ff.c: 2396:  if (res != FR_OK) return res;
 16677   0176A8  5169               	movf	dir_find@res& (0+255),w,b
 16678   0176AA  B4D8               	btfsc	status,2,c
 16679   0176AC  D003               	goto	l10625
 16680   0176AE                     u12820:
 16681   0176AE  0106               	movlb	6	; () banked
 16682   0176B0  5169               	movf	dir_find@res& (0+255),w,b
 16683   0176B2  0012               	return	
 16684   0176B4                     l10625:
 16685                           
 16686                           ; BSR set to: 6
 16687                           ;fatfs/ff.c: 2422:   res = move_window(fs, dp->sect);
 16688   0176B4  C666  F600         	movff	dir_find@fs,move_window@fs
 16689   0176B8  C667  F601         	movff	dir_find@fs+1,move_window@fs+1
 16690   0176BC  EE20 F016          	lfsr	2,22
 16691   0176C0  5162               	movf	dir_find@dp& (0+255),w,b
 16692   0176C2  26D9               	addwf	fsr2l,f,c
 16693   0176C4  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16694   0176C6  22DA               	addwfc	fsr2h,f,c
 16695   0176C8  C4DE F602          	movff	postinc2,move_window@sect
 16696   0176CC  C4DE F603          	movff	postinc2,move_window@sect+1
 16697   0176D0  C4DE F604          	movff	postinc2,move_window@sect+2
 16698   0176D4  C4DE F605          	movff	postinc2,move_window@sect+3
 16699   0176D8  EC1A  F0C4         	call	_move_window	;wreg free
 16700   0176DC  0106               	movlb	6	; () banked
 16701   0176DE  6F69               	movwf	dir_find@res& (0+255),b
 16702                           
 16703                           ; BSR set to: 6
 16704                           ;fatfs/ff.c: 2423:   if (res != FR_OK) break;
 16705   0176E0  5169               	movf	dir_find@res& (0+255),w,b
 16706   0176E2  A4D8               	btfss	status,2,c
 16707   0176E4  D7E4               	goto	u12820
 16708                           
 16709                           ; BSR set to: 6
 16710                           ;fatfs/ff.c: 2424:   c = dp->dir[0];
 16711   0176E6  EE20 F01A          	lfsr	2,26
 16712   0176EA  5162               	movf	dir_find@dp& (0+255),w,b
 16713   0176EC  26D9               	addwf	fsr2l,f,c
 16714   0176EE  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16715   0176F0  22DA               	addwfc	fsr2h,f,c
 16716   0176F2  C4DE F664          	movff	postinc2,??_dir_find
 16717   0176F6  C4DD F665          	movff	postdec2,??_dir_find+1
 16718   0176FA  C664  F4D9         	movff	??_dir_find,fsr2l
 16719   0176FE  C665  F4DA         	movff	??_dir_find+1,fsr2h
 16720   017702  50DF               	movf	indf2,w,c
 16721   017704  6F68               	movwf	dir_find@c& (0+255),b
 16722                           
 16723                           ; BSR set to: 6
 16724                           ;fatfs/ff.c: 2425:   if (c == 0) { res = FR_NO_FILE; break; }
 16725   017706  5168               	movf	dir_find@c& (0+255),w,b
 16726   017708  A4D8               	btfss	status,2,c
 16727   01770A  D003               	goto	l10637
 16728                           
 16729                           ; BSR set to: 6
 16730   01770C  0E04               	movlw	4
 16731   01770E  6F69               	movwf	dir_find@res& (0+255),b
 16732   017710  D7CE               	goto	u12820
 16733   017712                     l10637:
 16734                           
 16735                           ; BSR set to: 6
 16736                           ;fatfs/ff.c: 2448:   dp->obj.attr = dp->dir[11] & 0x3F;
 16737   017712  EE20 F004          	lfsr	2,4
 16738   017716  5162               	movf	dir_find@dp& (0+255),w,b
 16739   017718  26D9               	addwf	fsr2l,f,c
 16740   01771A  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16741   01771C  22DA               	addwfc	fsr2h,f,c
 16742   01771E  EE10 F01A          	lfsr	1,26
 16743   017722  5162               	movf	dir_find@dp& (0+255),w,b
 16744   017724  26E1               	addwf	fsr1l,f,c
 16745   017726  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16746   017728  22E2               	addwfc	fsr1h,f,c
 16747   01772A  EE00 F00B          	lfsr	0,11
 16748   01772E  50E6               	movf	postinc1,w,c
 16749   017730  26E9               	addwf	fsr0l,f,c
 16750   017732  50E5               	movf	postdec1,w,c
 16751   017734  22EA               	addwfc	fsr0h,f,c
 16752   017736  50EF               	movf	indf0,w,c
 16753   017738  0B3F               	andlw	63
 16754   01773A  6EDF               	movwf	indf2,c
 16755                           
 16756                           ; BSR set to: 6
 16757                           ;fatfs/ff.c: 2449:   if (!(dp->dir[11] & 0x08) && !memcmp(dp->dir, dp->fn, 11)) break;
 16758   01773C  EE20 F01A          	lfsr	2,26
 16759   017740  5162               	movf	dir_find@dp& (0+255),w,b
 16760   017742  26D9               	addwf	fsr2l,f,c
 16761   017744  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16762   017746  22DA               	addwfc	fsr2h,f,c
 16763   017748  EE10 F00B          	lfsr	1,11
 16764   01774C  50DE               	movf	postinc2,w,c
 16765   01774E  26E1               	addwf	fsr1l,f,c
 16766   017750  50DD               	movf	postdec2,w,c
 16767   017752  22E2               	addwfc	fsr1h,f,c
 16768   017754  B6E7               	btfsc	indf1,3,c
 16769   017756  D01A               	goto	l10645
 16770                           
 16771                           ; BSR set to: 6
 16772   017758  EE20 F01A          	lfsr	2,26
 16773   01775C  5162               	movf	dir_find@dp& (0+255),w,b
 16774   01775E  26D9               	addwf	fsr2l,f,c
 16775   017760  5163               	movf	(dir_find@dp+1)& (0+255),w,b
 16776   017762  22DA               	addwfc	fsr2h,f,c
 16777   017764  C4DE F501          	movff	postinc2,memcmp@vl
 16778   017768  C4DD F502          	movff	postdec2,memcmp@vl+1
 16779   01776C  0E1C               	movlw	28
 16780   01776E  2562               	addwf	dir_find@dp& (0+255),w,b
 16781   017770  6E03               	movwf	memcmp@vr^(0+1280),c
 16782   017772  0E00               	movlw	0
 16783   017774  2163               	addwfc	(dir_find@dp+1)& (0+255),w,b
 16784   017776  6E04               	movwf	(memcmp@vr+1)^(0+1280),c
 16785   017778  0E00               	movlw	0
 16786   01777A  6E06               	movwf	(memcmp@n+1)^(0+1280),c
 16787   01777C  0E0B               	movlw	11
 16788   01777E  6E05               	movwf	memcmp@n^(0+1280),c
 16789   017780  EC94  F0C6         	call	_memcmp	;wreg free
 16790   017784  5001               	movf	?_memcmp^(0+1280),w,c
 16791   017786  1002               	iorwf	(?_memcmp+1)^(0+1280),w,c
 16792   017788  B4D8               	btfsc	status,2,c
 16793   01778A  D791               	goto	u12820
 16794   01778C                     l10645:
 16795                           
 16796                           ;fatfs/ff.c: 2451:   res = dir_next(dp, 0);
 16797   01778C  C662  F648         	movff	dir_find@dp,dir_next@dp
 16798   017790  C663  F649         	movff	dir_find@dp+1,dir_next@dp+1
 16799   017794  0E00               	movlw	0
 16800   017796  0106               	movlb	6	; () banked
 16801   017798  6F4B               	movwf	(dir_next@stretch+1)& (0+255),b
 16802   01779A  0E00               	movlw	0
 16803   01779C  6F4A               	movwf	dir_next@stretch& (0+255),b
 16804   01779E  ECB3  F09E         	call	_dir_next	;wreg free
 16805   0177A2  0106               	movlb	6	; () banked
 16806   0177A4  6F69               	movwf	dir_find@res& (0+255),b
 16807                           
 16808                           ; BSR set to: 6
 16809                           ;fatfs/ff.c: 2452:  } while (res == FR_OK);
 16810   0177A6  5169               	movf	dir_find@res& (0+255),w,b
 16811   0177A8  A4D8               	btfss	status,2,c
 16812   0177AA  D781               	goto	u12820
 16813   0177AC  D783               	goto	l10625
 16814   0177AE                     __end_of_dir_find:
 16815                           	callstack 0
 16816                           
 16817 ;; *************** function _create_name *****************
 16818 ;; Defined at:
 16819 ;;		line 2847 in file "fatfs/ff.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;  dp              2    8[COMRAM] PTR struct .
 16822 ;;		 -> fsdir(40), f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), 
 16823 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_open@dj(40), 
 16824 ;;  path            2   10[COMRAM] PTR PTR const unsigned c
 16825 ;;		 -> follow_path@path(2), 
 16826 ;; Auto vars:     Size  Location     Type
 16827 ;;  i               2   26[COMRAM] unsigned int 
 16828 ;;  sfn             2   24[COMRAM] PTR unsigned char 
 16829 ;;		 -> djn$fn(12), fsdir$fn(12), fsdir(40), f_rename@djn(40), 
 16830 ;;		 -> djo$fn(12), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
 16831 ;;		 -> f_stat@dj(40), dj$fn(12), f_open@dj(40), 
 16832 ;;  si              2   22[COMRAM] unsigned int 
 16833 ;;  p               2   20[COMRAM] PTR const unsigned char 
 16834 ;;		 -> STR_88(5), tmp_buf(512), STR_31(2), 
 16835 ;;  ni              2   18[COMRAM] unsigned int 
 16836 ;;  c               1   28[COMRAM] unsigned char 
 16837 ;;  d               1   17[COMRAM] unsigned char 
 16838 ;; Return value:  Size  Location     Type
 16839 ;;                  1    wreg      enum E275
 16840 ;; Registers used:
 16841 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16842 ;; Tracked objects:
 16843 ;;		On entry : 3F/6
 16844 ;;		On exit  : 0/0
 16845 ;;		Unchanged: 0/0
 16846 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16848 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16849 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16850 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16851 ;;Total ram usage:       21 bytes
 16852 ;; Hardware stack levels used: 1
 16853 ;; Hardware stack levels required when called: 1
 16854 ;; This function calls:
 16855 ;;		_dbc_1st
 16856 ;;		_dbc_2nd
 16857 ;;		_memset
 16858 ;;		_strchr
 16859 ;; This function is called by:
 16860 ;;		_follow_path
 16861 ;; This function uses a non-reentrant model
 16862 ;;
 16863                           
 16864                           	psect	text16
 16865   01500E                     __ptext16:
 16866                           	callstack 0
 16867   01500E                     _create_name:
 16868                           	callstack 122
 16869                           
 16870                           ; BSR set to: 6
 16871                           ;fatfs/ff.c: 2848:  DIR* dp,;fatfs/ff.c: 2849:  const TCHAR** path;fatfs/ff.c: 2851: {;f
      +                          atfs/ff.c: 2980:  BYTE c, d;;fatfs/ff.c: 2981:  BYTE *sfn;;fatfs/ff.c: 2982:  UINT ni, s
      +                          i, i;;fatfs/ff.c: 2983:  const char *p;;fatfs/ff.c: 2986:  p = *path; sfn = dp->fn;
 16872                           
 16873                           ; BSR set to: 6
 16874                           ;incstack = 0
 16875   01500E  C50B  F4D9         	movff	create_name@path,fsr2l
 16876   015012  C50C  F4DA         	movff	create_name@path+1,fsr2h
 16877   015016  C4DE F515          	movff	postinc2,create_name@p
 16878   01501A  C4DD F516          	movff	postdec2,create_name@p+1
 16879                           
 16880                           ; BSR set to: 6
 16881   01501E  0E1C               	movlw	28
 16882   015020  2409               	addwf	create_name@dp^(0+1280),w,c
 16883   015022  6E19               	movwf	create_name@sfn^(0+1280),c
 16884   015024  0E00               	movlw	0
 16885   015026  200A               	addwfc	(create_name@dp+1)^(0+1280),w,c
 16886   015028  6E1A               	movwf	(create_name@sfn+1)^(0+1280),c
 16887                           
 16888                           ; BSR set to: 6
 16889                           ;fatfs/ff.c: 2987:  memset(sfn, ' ', 11);
 16890   01502A  C519  F501         	movff	create_name@sfn,memset@dest
 16891   01502E  C51A  F502         	movff	create_name@sfn+1,memset@dest+1
 16892   015032  0E00               	movlw	0
 16893   015034  6E04               	movwf	(memset@c+1)^(0+1280),c
 16894   015036  0E20               	movlw	32
 16895   015038  6E03               	movwf	memset@c^(0+1280),c
 16896   01503A  0E00               	movlw	0
 16897   01503C  6E06               	movwf	(memset@n+1)^(0+1280),c
 16898   01503E  0E0B               	movlw	11
 16899   015040  6E05               	movwf	memset@n^(0+1280),c
 16900   015042  ECE7  F0CE         	call	_memset	;wreg free
 16901                           
 16902                           ; BSR set to: 6
 16903                           ;fatfs/ff.c: 2988:  si = i = 0; ni = 8;
 16904   015046  0E00               	movlw	0
 16905   015048  6E1C               	movwf	(create_name@i+1)^(0+1280),c
 16906   01504A  0E00               	movlw	0
 16907   01504C  6E1B               	movwf	create_name@i^(0+1280),c
 16908   01504E  C51B  F517         	movff	create_name@i,create_name@si
 16909   015052  C51C  F518         	movff	create_name@i+1,create_name@si+1
 16910                           
 16911                           ; BSR set to: 6
 16912   015056  0E00               	movlw	0
 16913   015058  6E14               	movwf	(create_name@ni+1)^(0+1280),c
 16914   01505A  0E08               	movlw	8
 16915   01505C  6E13               	movwf	create_name@ni^(0+1280),c
 16916   01505E                     l10663:
 16917                           
 16918                           ;fatfs/ff.c: 3003:   c = (BYTE)p[si++];
 16919   01505E  5017               	movf	create_name@si^(0+1280),w,c
 16920   015060  2415               	addwf	create_name@p^(0+1280),w,c
 16921   015062  6E0D               	movwf	??_create_name^(0+1280),c
 16922   015064  5018               	movf	(create_name@si+1)^(0+1280),w,c
 16923   015066  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 16924   015068  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 16925   01506A  C50D  F4F6         	movff	??_create_name,tblptrl
 16926   01506E  C50E  F4F7         	movff	??_create_name+1,tblptrh
 16927   015072  0E00               	movlw	low (__mediumconst shr (0+16))
 16928   015074  6EF8               	movwf	tblptru,c
 16929   015076  0E24               	movlw	(high __ramtop+-1)
 16930   015078  64F7               	cpfsgt	tblptrh,c
 16931   01507A  D003               	bra	u12887
 16932   01507C  0008               	tblrd		*
 16933   01507E  50F5               	movf	tablat,w,c
 16934   015080  D005               	bra	u12880
 16935   015082                     u12887:
 16936   015082  C4F6 F4E9          	movff	tblptrl,fsr0l
 16937   015086  C4F7 F4EA          	movff	tblptrh,fsr0h
 16938   01508A  50EF               	movf	indf0,w,c
 16939   01508C                     u12880:
 16940   01508C  6E1D               	movwf	create_name@c^(0+1280),c
 16941   01508E  4A17               	infsnz	create_name@si^(0+1280),f,c
 16942   015090  2A18               	incf	(create_name@si+1)^(0+1280),f,c
 16943                           
 16944                           ;fatfs/ff.c: 3004:   if (c <= ' ') break;
 16945   015092  0E21               	movlw	33
 16946   015094  601D               	cpfslt	create_name@c^(0+1280),c
 16947   015096  D001               	goto	l10671
 16948   015098  D0C4               	goto	l10731
 16949   01509A                     l10671:
 16950                           
 16951                           ;fatfs/ff.c: 3005:   if (((c) == '/' || (c) == '\\')) {
 16952   01509A  0E2F               	movlw	47
 16953   01509C  181D               	xorwf	create_name@c^(0+1280),w,c
 16954   01509E  B4D8               	btfsc	status,2,c
 16955   0150A0  D007               	goto	l10677
 16956   0150A2  0E5C               	movlw	92
 16957   0150A4  181D               	xorwf	create_name@c^(0+1280),w,c
 16958   0150A6  B4D8               	btfsc	status,2,c
 16959   0150A8  D003               	goto	l10677
 16960   0150AA  D037               	goto	l10681
 16961   0150AC                     l10675:
 16962   0150AC  4A17               	infsnz	create_name@si^(0+1280),f,c
 16963   0150AE  2A18               	incf	(create_name@si+1)^(0+1280),f,c
 16964   0150B0                     l10677:
 16965   0150B0  5017               	movf	create_name@si^(0+1280),w,c
 16966   0150B2  2415               	addwf	create_name@p^(0+1280),w,c
 16967   0150B4  6E0D               	movwf	??_create_name^(0+1280),c
 16968   0150B6  5018               	movf	(create_name@si+1)^(0+1280),w,c
 16969   0150B8  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 16970   0150BA  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 16971   0150BC  C50D  F4F6         	movff	??_create_name,tblptrl
 16972   0150C0  C50E  F4F7         	movff	??_create_name+1,tblptrh
 16973   0150C4  0E00               	movlw	low (__mediumconst shr (0+16))
 16974   0150C6  6EF8               	movwf	tblptru,c
 16975   0150C8  0E24               	movlw	(high __ramtop+-1)
 16976   0150CA  64F7               	cpfsgt	tblptrh,c
 16977   0150CC  D003               	bra	u12927
 16978   0150CE  0008               	tblrd		*
 16979   0150D0  50F5               	movf	tablat,w,c
 16980   0150D2  D005               	bra	u12920
 16981   0150D4                     u12927:
 16982   0150D4  C4F6 F4E9          	movff	tblptrl,fsr0l
 16983   0150D8  C4F7 F4EA          	movff	tblptrh,fsr0h
 16984   0150DC  50EF               	movf	indf0,w,c
 16985   0150DE                     u12920:
 16986   0150DE  0A2F               	xorlw	47
 16987   0150E0  B4D8               	btfsc	status,2,c
 16988   0150E2  D7E4               	goto	l10675
 16989   0150E4  5017               	movf	create_name@si^(0+1280),w,c
 16990   0150E6  2415               	addwf	create_name@p^(0+1280),w,c
 16991   0150E8  6E0D               	movwf	??_create_name^(0+1280),c
 16992   0150EA  5018               	movf	(create_name@si+1)^(0+1280),w,c
 16993   0150EC  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 16994   0150EE  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 16995   0150F0  C50D  F4F6         	movff	??_create_name,tblptrl
 16996   0150F4  C50E  F4F7         	movff	??_create_name+1,tblptrh
 16997   0150F8  0E00               	movlw	low (__mediumconst shr (0+16))
 16998   0150FA  6EF8               	movwf	tblptru,c
 16999   0150FC  0E24               	movlw	(high __ramtop+-1)
 17000   0150FE  64F7               	cpfsgt	tblptrh,c
 17001   015100  D003               	bra	u12947
 17002   015102  0008               	tblrd		*
 17003   015104  50F5               	movf	tablat,w,c
 17004   015106  D005               	bra	u12940
 17005   015108                     u12947:
 17006   015108  C4F6 F4E9          	movff	tblptrl,fsr0l
 17007   01510C  C4F7 F4EA          	movff	tblptrh,fsr0h
 17008   015110  50EF               	movf	indf0,w,c
 17009   015112                     u12940:
 17010   015112  0A5C               	xorlw	92
 17011   015114  A4D8               	btfss	status,2,c
 17012   015116  D085               	goto	l10731
 17013   015118  D7C9               	goto	l10675
 17014   01511A                     l10681:
 17015                           
 17016                           ;fatfs/ff.c: 3009:   if (c == '.' || i >= ni) {
 17017   01511A  0E2E               	movlw	46
 17018   01511C  181D               	xorwf	create_name@c^(0+1280),w,c
 17019   01511E  B4D8               	btfsc	status,2,c
 17020   015120  D006               	goto	u12970
 17021   015122  5013               	movf	create_name@ni^(0+1280),w,c
 17022   015124  5C1B               	subwf	create_name@i^(0+1280),w,c
 17023   015126  5014               	movf	(create_name@ni+1)^(0+1280),w,c
 17024   015128  581C               	subwfb	(create_name@i+1)^(0+1280),w,c
 17025   01512A  A0D8               	btfss	status,0,c
 17026   01512C  D013               	goto	l10695
 17027   01512E                     u12970:
 17028                           
 17029                           ;fatfs/ff.c: 3010:    if (ni == 11 || c != '.') return FR_INVALID_NAME;
 17030   01512E  0E0B               	movlw	11
 17031   015130  1813               	xorwf	create_name@ni^(0+1280),w,c
 17032   015132  1014               	iorwf	(create_name@ni+1)^(0+1280),w,c
 17033   015134  B4D8               	btfsc	status,2,c
 17034   015136  D004               	goto	u12990
 17035   015138  0E2E               	movlw	46
 17036   01513A  181D               	xorwf	create_name@c^(0+1280),w,c
 17037   01513C  B4D8               	btfsc	status,2,c
 17038   01513E  D002               	goto	l10693
 17039   015140                     u12990:
 17040   015140  0E06               	movlw	6
 17041   015142  0012               	return	
 17042   015144                     l10693:
 17043                           
 17044                           ;fatfs/ff.c: 3011:    i = 8; ni = 11;
 17045   015144  0E00               	movlw	0
 17046   015146  6E1C               	movwf	(create_name@i+1)^(0+1280),c
 17047   015148  0E08               	movlw	8
 17048   01514A  6E1B               	movwf	create_name@i^(0+1280),c
 17049   01514C  0E00               	movlw	0
 17050   01514E  6E14               	movwf	(create_name@ni+1)^(0+1280),c
 17051   015150  0E0B               	movlw	11
 17052   015152  D784               	goto	L6
 17053   015154                     l10695:
 17054                           
 17055                           ;fatfs/ff.c: 3023:   if (dbc_1st(c)) {
 17056   015154  501D               	movf	create_name@c^(0+1280),w,c
 17057   015156  EC2D  F0CB         	call	_dbc_1st
 17058   01515A  5001               	movf	?_dbc_1st^(0+1280),w,c
 17059   01515C  1002               	iorwf	(?_dbc_1st+1)^(0+1280),w,c
 17060   01515E  B4D8               	btfsc	status,2,c
 17061   015160  D040               	goto	l10715
 17062                           
 17063                           ;fatfs/ff.c: 3024:    d = (BYTE)p[si++];
 17064   015162  5017               	movf	create_name@si^(0+1280),w,c
 17065   015164  2415               	addwf	create_name@p^(0+1280),w,c
 17066   015166  6E0D               	movwf	??_create_name^(0+1280),c
 17067   015168  5018               	movf	(create_name@si+1)^(0+1280),w,c
 17068   01516A  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 17069   01516C  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 17070   01516E  C50D  F4F6         	movff	??_create_name,tblptrl
 17071   015172  C50E  F4F7         	movff	??_create_name+1,tblptrh
 17072   015176  0E00               	movlw	low (__mediumconst shr (0+16))
 17073   015178  6EF8               	movwf	tblptru,c
 17074   01517A  0E24               	movlw	(high __ramtop+-1)
 17075   01517C  64F7               	cpfsgt	tblptrh,c
 17076   01517E  D003               	bra	u13017
 17077   015180  0008               	tblrd		*
 17078   015182  50F5               	movf	tablat,w,c
 17079   015184  D005               	bra	u13010
 17080   015186                     u13017:
 17081   015186  C4F6 F4E9          	movff	tblptrl,fsr0l
 17082   01518A  C4F7 F4EA          	movff	tblptrh,fsr0h
 17083   01518E  50EF               	movf	indf0,w,c
 17084   015190                     u13010:
 17085   015190  6E12               	movwf	create_name@d^(0+1280),c
 17086   015192  4A17               	infsnz	create_name@si^(0+1280),f,c
 17087   015194  2A18               	incf	(create_name@si+1)^(0+1280),f,c
 17088                           
 17089                           ;fatfs/ff.c: 3025:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVALID_NAME;
 17090   015196  5012               	movf	create_name@d^(0+1280),w,c
 17091   015198  EC34  F0C8         	call	_dbc_2nd
 17092   01519C  5001               	movf	?_dbc_2nd^(0+1280),w,c
 17093   01519E  1002               	iorwf	(?_dbc_2nd+1)^(0+1280),w,c
 17094   0151A0  B4D8               	btfsc	status,2,c
 17095   0151A2  D7CE               	goto	u12990
 17096   0151A4  0EFF               	movlw	255
 17097   0151A6  2413               	addwf	create_name@ni^(0+1280),w,c
 17098   0151A8  6E0D               	movwf	??_create_name^(0+1280),c
 17099   0151AA  0EFF               	movlw	255
 17100   0151AC  2014               	addwfc	(create_name@ni+1)^(0+1280),w,c
 17101   0151AE  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 17102   0151B0  500D               	movf	??_create_name^(0+1280),w,c
 17103   0151B2  5C1B               	subwf	create_name@i^(0+1280),w,c
 17104   0151B4  500E               	movf	(??_create_name+1)^(0+1280),w,c
 17105   0151B6  581C               	subwfb	(create_name@i+1)^(0+1280),w,c
 17106   0151B8  B0D8               	btfsc	status,0,c
 17107   0151BA  D7C2               	goto	u12990
 17108                           
 17109                           ;fatfs/ff.c: 3026:    sfn[i++] = c;
 17110   0151BC  501B               	movf	create_name@i^(0+1280),w,c
 17111   0151BE  2419               	addwf	create_name@sfn^(0+1280),w,c
 17112   0151C0  6ED9               	movwf	fsr2l,c
 17113   0151C2  501C               	movf	(create_name@i+1)^(0+1280),w,c
 17114   0151C4  201A               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 17115   0151C6  6EDA               	movwf	fsr2h,c
 17116   0151C8  C51D  F4DF         	movff	create_name@c,indf2
 17117   0151CC  4A1B               	infsnz	create_name@i^(0+1280),f,c
 17118   0151CE  2A1C               	incf	(create_name@i+1)^(0+1280),f,c
 17119                           
 17120                           ;fatfs/ff.c: 3027:    sfn[i++] = d;
 17121   0151D0  501B               	movf	create_name@i^(0+1280),w,c
 17122   0151D2  2419               	addwf	create_name@sfn^(0+1280),w,c
 17123   0151D4  6ED9               	movwf	fsr2l,c
 17124   0151D6  501C               	movf	(create_name@i+1)^(0+1280),w,c
 17125   0151D8  201A               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 17126   0151DA  6EDA               	movwf	fsr2h,c
 17127   0151DC  C512  F4DF         	movff	create_name@d,indf2
 17128   0151E0  D01D               	goto	l10729
 17129   0151E2                     l10715:
 17130                           
 17131                           ;fatfs/ff.c: 3029:    if (strchr("*+,:;<=>[]|\"\?\x7F", (int)c)) return FR_INVALID_NAME;
 17132   0151E2  0E7F               	movlw	low STR_27
 17133   0151E4  6E01               	movwf	strchr@s^(0+1280),c
 17134   0151E6  0EFF               	movlw	high STR_27
 17135   0151E8  6E02               	movwf	(strchr@s+1)^(0+1280),c
 17136   0151EA  C51D  F503         	movff	create_name@c,strchr@c
 17137   0151EE  6A04               	clrf	(strchr@c+1)^(0+1280),c
 17138   0151F0  EC8B  F0CD         	call	_strchr	;wreg free
 17139   0151F4  5001               	movf	?_strchr^(0+1280),w,c
 17140   0151F6  1002               	iorwf	(?_strchr+1)^(0+1280),w,c
 17141   0151F8  A4D8               	btfss	status,2,c
 17142   0151FA  D7A2               	goto	u12990
 17143                           
 17144                           ;fatfs/ff.c: 3030:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
 17145   0151FC  0E60               	movlw	96
 17146   0151FE  641D               	cpfsgt	create_name@c^(0+1280),c
 17147   015200  D005               	goto	l10727
 17148   015202  0E7B               	movlw	123
 17149   015204  601D               	cpfslt	create_name@c^(0+1280),c
 17150   015206  D002               	goto	l10727
 17151   015208  0E20               	movlw	32
 17152   01520A  5E1D               	subwf	create_name@c^(0+1280),f,c
 17153   01520C                     l10727:
 17154                           
 17155                           ;fatfs/ff.c: 3031:    sfn[i++] = c;
 17156   01520C  501B               	movf	create_name@i^(0+1280),w,c
 17157   01520E  2419               	addwf	create_name@sfn^(0+1280),w,c
 17158   015210  6ED9               	movwf	fsr2l,c
 17159   015212  501C               	movf	(create_name@i+1)^(0+1280),w,c
 17160   015214  201A               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 17161   015216  6EDA               	movwf	fsr2h,c
 17162   015218  C51D  F4DF         	movff	create_name@c,indf2
 17163   01521C                     l10729:
 17164   01521C  4A1B               	infsnz	create_name@i^(0+1280),f,c
 17165   01521E  2A1C               	incf	(create_name@i+1)^(0+1280),f,c
 17166   015220  D71E               	goto	l10663
 17167   015222                     l10731:
 17168                           
 17169                           ;fatfs/ff.c: 3034:  *path = &p[si];
 17170   015222  5017               	movf	create_name@si^(0+1280),w,c
 17171   015224  2415               	addwf	create_name@p^(0+1280),w,c
 17172   015226  6E0D               	movwf	??_create_name^(0+1280),c
 17173   015228  5018               	movf	(create_name@si+1)^(0+1280),w,c
 17174   01522A  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 17175   01522C  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 17176   01522E  C50B  F4D9         	movff	create_name@path,fsr2l
 17177   015232  C50C  F4DA         	movff	create_name@path+1,fsr2h
 17178   015236  C50D  F4DE         	movff	??_create_name,postinc2
 17179   01523A  C50E  F4DD         	movff	??_create_name+1,postdec2
 17180                           
 17181                           ;fatfs/ff.c: 3035:  if (i == 0) return FR_INVALID_NAME;
 17182   01523E  501B               	movf	create_name@i^(0+1280),w,c
 17183   015240  101C               	iorwf	(create_name@i+1)^(0+1280),w,c
 17184   015242  B4D8               	btfsc	status,2,c
 17185   015244  D77D               	goto	u12990
 17186                           
 17187                           ;fatfs/ff.c: 3037:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
 17188   015246  C519  F4D9         	movff	create_name@sfn,fsr2l
 17189   01524A  C51A  F4DA         	movff	create_name@sfn+1,fsr2h
 17190   01524E  0EE5               	movlw	229
 17191   015250  18DE               	xorwf	postinc2,w,c
 17192   015252  A4D8               	btfss	status,2,c
 17193   015254  D006               	goto	l10743
 17194   015256  C519  F4D9         	movff	create_name@sfn,fsr2l
 17195   01525A  C51A  F4DA         	movff	create_name@sfn+1,fsr2h
 17196   01525E  0E05               	movlw	5
 17197   015260  6EDF               	movwf	indf2,c
 17198   015262                     l10743:
 17199                           
 17200                           ;fatfs/ff.c: 3038:  sfn[11] = (c <= ' ' || p[si] <= ' ') ? 0x04 : 0;
 17201   015262  0E20               	movlw	32
 17202   015264  641D               	cpfsgt	create_name@c^(0+1280),c
 17203   015266  D01F               	goto	l10749
 17204   015268  5017               	movf	create_name@si^(0+1280),w,c
 17205   01526A  2415               	addwf	create_name@p^(0+1280),w,c
 17206   01526C  6E0D               	movwf	??_create_name^(0+1280),c
 17207   01526E  5018               	movf	(create_name@si+1)^(0+1280),w,c
 17208   015270  2016               	addwfc	(create_name@p+1)^(0+1280),w,c
 17209   015272  6E0E               	movwf	(??_create_name+1)^(0+1280),c
 17210   015274  C50D  F4F6         	movff	??_create_name,tblptrl
 17211   015278  C50E  F4F7         	movff	??_create_name+1,tblptrh
 17212   01527C  0E00               	movlw	low (__mediumconst shr (0+16))
 17213   01527E  6EF8               	movwf	tblptru,c
 17214   015280  0E24               	movlw	(high __ramtop+-1)
 17215   015282  64F7               	cpfsgt	tblptrh,c
 17216   015284  D003               	bra	u13107
 17217   015286  0008               	tblrd		*
 17218   015288  50F5               	movf	tablat,w,c
 17219   01528A  D005               	bra	u13100
 17220   01528C                     u13107:
 17221   01528C  C4F6 F4E9          	movff	tblptrl,fsr0l
 17222   015290  C4F7 F4EA          	movff	tblptrh,fsr0h
 17223   015294  50EF               	movf	indf0,w,c
 17224   015296                     u13100:
 17225   015296  6E0F               	movwf	(??_create_name+2)^(0+1280),c
 17226   015298  0E20               	movlw	32
 17227   01529A  640F               	cpfsgt	(??_create_name+2)^(0+1280),c
 17228   01529C  D004               	goto	l10749
 17229   01529E  0E00               	movlw	0
 17230   0152A0  6E11               	movwf	(_create_name$887+1)^(0+1280),c
 17231   0152A2  0E00               	movlw	0
 17232   0152A4  D003               	goto	L7
 17233   0152A6                     l10749:
 17234   0152A6  0E00               	movlw	0
 17235   0152A8  6E11               	movwf	(_create_name$887+1)^(0+1280),c
 17236   0152AA  0E04               	movlw	4
 17237   0152AC                     L7:
 17238   0152AC  6E10               	movwf	_create_name$887^(0+1280),c
 17239   0152AE  EE20 F00B          	lfsr	2,11
 17240   0152B2  5019               	movf	create_name@sfn^(0+1280),w,c
 17241   0152B4  26D9               	addwf	fsr2l,f,c
 17242   0152B6  501A               	movf	(create_name@sfn+1)^(0+1280),w,c
 17243   0152B8  22DA               	addwfc	fsr2h,f,c
 17244   0152BA  C510  F4DF         	movff	_create_name$887,indf2
 17245                           
 17246                           ;fatfs/ff.c: 3040:  return FR_OK;
 17247   0152BE  0E00               	movlw	0
 17248   0152C0  0012               	return		;funcret
 17249   0152C2                     __end_of_create_name:
 17250                           	callstack 0
 17251                           
 17252 ;; *************** function _strchr *****************
 17253 ;; Defined at:
 17254 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 17255 ;; Parameters:    Size  Location     Type
 17256 ;;  s               2    0[COMRAM] PTR const unsigned char 
 17257 ;;		 -> STR_28(15), 
 17258 ;;  c               2    2[COMRAM] int 
 17259 ;; Auto vars:     Size  Location     Type
 17260 ;;		None
 17261 ;; Return value:  Size  Location     Type
 17262 ;;                  2    0[COMRAM] PTR unsigned char 
 17263 ;; Registers used:
 17264 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17265 ;; Tracked objects:
 17266 ;;		On entry : 0/6
 17267 ;;		On exit  : 0/0
 17268 ;;		Unchanged: 0/0
 17269 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17274 ;;Total ram usage:        4 bytes
 17275 ;; Hardware stack levels used: 1
 17276 ;; This function calls:
 17277 ;;		Nothing
 17278 ;; This function is called by:
 17279 ;;		_create_name
 17280 ;; This function uses a non-reentrant model
 17281 ;;
 17282                           
 17283                           	psect	text17
 17284   019B16                     __ptext17:
 17285                           	callstack 0
 17286   019B16                     _strchr:
 17287                           	callstack 122
 17288                           
 17289                           ;incstack = 0
 17290   019B16  C501  F4F6         	movff	strchr@s,tblptrl
 17291   019B1A  C502  F4F7         	movff	strchr@s+1,tblptrh
 17292   019B1E                     	if	0	;tblptru may be non-zero
 17293   019B1E                     	endif
 17294   019B1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17295   019B1E  0E00               	movlw	low (__mediumconst shr (0+16))
 17296   019B20  6EF8               	movwf	tblptru,c
 17297   019B22                     	endif
 17298   019B22  0008               	tblrd		*
 17299   019B24  50F5               	movf	tablat,w,c
 17300   019B26  1803               	xorwf	strchr@c^(0+1280),w,c
 17301   019B28  A4D8               	btfss	status,2,c
 17302   019B2A  D005               	goto	l10399
 17303   019B2C  C501  F501         	movff	strchr@s,?_strchr
 17304   019B30  C502  F502         	movff	strchr@s+1,?_strchr+1
 17305   019B34  0012               	return	
 17306   019B36                     l10399:
 17307   019B36  C501  F4F6         	movff	strchr@s,tblptrl
 17308   019B3A  C502  F4F7         	movff	strchr@s+1,tblptrh
 17309   019B3E  4A01               	infsnz	strchr@s^(0+1280),f,c
 17310   019B40  2A02               	incf	(strchr@s+1)^(0+1280),f,c
 17311   019B42                     	if	0	;tblptru may be non-zero
 17312   019B42                     	endif
 17313   019B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17314   019B42  0E00               	movlw	low (__mediumconst shr (0+16))
 17315   019B44  6EF8               	movwf	tblptru,c
 17316   019B46                     	endif
 17317   019B46  0008               	tblrd		*
 17318   019B48  50F5               	movf	tablat,w,c
 17319   019B4A  0900               	iorlw	0
 17320   019B4C  A4D8               	btfss	status,2,c
 17321   019B4E  D7E3               	goto	__ptext17
 17322   019B50  0E00               	movlw	0
 17323   019B52  6E01               	movwf	?_strchr^(0+1280),c
 17324   019B54  0E00               	movlw	0
 17325   019B56  6E02               	movwf	(?_strchr+1)^(0+1280),c
 17326   019B58  0012               	return		;funcret
 17327   019B5A                     __end_of_strchr:
 17328                           	callstack 0
 17329                           
 17330 ;; *************** function _dbc_2nd *****************
 17331 ;; Defined at:
 17332 ;;		line 712 in file "fatfs/ff.c"
 17333 ;; Parameters:    Size  Location     Type
 17334 ;;  c               1    wreg     unsigned char 
 17335 ;; Auto vars:     Size  Location     Type
 17336 ;;  c               1    2[COMRAM] unsigned char 
 17337 ;; Return value:  Size  Location     Type
 17338 ;;                  2    0[COMRAM] int 
 17339 ;; Registers used:
 17340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17341 ;; Tracked objects:
 17342 ;;		On entry : 0/6
 17343 ;;		On exit  : 0/0
 17344 ;;		Unchanged: 0/0
 17345 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17349 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17350 ;;Total ram usage:        3 bytes
 17351 ;; Hardware stack levels used: 1
 17352 ;; This function calls:
 17353 ;;		Nothing
 17354 ;; This function is called by:
 17355 ;;		_create_name
 17356 ;; This function uses a non-reentrant model
 17357 ;;
 17358                           
 17359                           	psect	text18
 17360   019068                     __ptext18:
 17361                           	callstack 0
 17362   019068                     _dbc_2nd:
 17363                           	callstack 122
 17364                           
 17365                           ;incstack = 0
 17366                           ;dbc_2nd@c stored from wreg
 17367   019068  6E03               	movwf	dbc_2nd@c^(0+1280),c
 17368                           
 17369                           ;fatfs/ff.c: 712: static int dbc_2nd (BYTE c);fatfs/ff.c: 713: {;fatfs/ff.c: 721:  if (c
      +                           >= DbcTbl[4]) {
 17370   01906A  0E67               	movlw	low (_DbcTbl+4)
 17371   01906C  6EF6               	movwf	tblptrl,c
 17372   01906E  0ED9               	movlw	high (_DbcTbl+4)
 17373   019070  6EF7               	movwf	tblptrh,c
 17374   019072                     	if	0	;tblptru may be non-zero
 17375   019072                     	endif
 17376   019072                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17377   019072  0E00               	movlw	low (__mediumconst shr (0+16))
 17378   019074  6EF8               	movwf	tblptru,c
 17379   019076                     	endif
 17380   019076  0009               	tblrd		*+
 17381   019078  50F5               	movf	tablat,w,c
 17382   01907A  5C03               	subwf	dbc_2nd@c^(0+1280),w,c
 17383   01907C  A0D8               	btfss	status,0,c
 17384   01907E  D03C               	goto	l10223
 17385                           
 17386                           ;fatfs/ff.c: 722:   if (c <= DbcTbl[5]) return 1;
 17387   019080  0E68               	movlw	low (_DbcTbl+5)
 17388   019082  6EF6               	movwf	tblptrl,c
 17389   019084  0ED9               	movlw	high (_DbcTbl+5)
 17390   019086  6EF7               	movwf	tblptrh,c
 17391   019088                     	if	0	;tblptru may be non-zero
 17392   019088                     	endif
 17393   019088                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17394   019088  0E00               	movlw	low (__mediumconst shr (0+16))
 17395   01908A  6EF8               	movwf	tblptru,c
 17396   01908C                     	endif
 17397   01908C  5003               	movf	dbc_2nd@c^(0+1280),w,c
 17398   01908E  0009               	tblrd		*+
 17399   019090  5CF5               	subwf	tablat,w,c
 17400   019092  A0D8               	btfss	status,0,c
 17401   019094  D005               	goto	l10207
 17402   019096                     u12070:
 17403   019096  0E00               	movlw	0
 17404   019098  6E02               	movwf	(?_dbc_2nd+1)^(0+1280),c
 17405   01909A  0E01               	movlw	1
 17406   01909C  6E01               	movwf	?_dbc_2nd^(0+1280),c
 17407   01909E  0012               	return	
 17408   0190A0                     l10207:
 17409                           
 17410                           ;fatfs/ff.c: 723:   if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 17411   0190A0  0E69               	movlw	low (_DbcTbl+6)
 17412   0190A2  6EF6               	movwf	tblptrl,c
 17413   0190A4  0ED9               	movlw	high (_DbcTbl+6)
 17414   0190A6  6EF7               	movwf	tblptrh,c
 17415   0190A8                     	if	0	;tblptru may be non-zero
 17416   0190A8                     	endif
 17417   0190A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17418   0190A8  0E00               	movlw	low (__mediumconst shr (0+16))
 17419   0190AA  6EF8               	movwf	tblptru,c
 17420   0190AC                     	endif
 17421   0190AC  0009               	tblrd		*+
 17422   0190AE  50F5               	movf	tablat,w,c
 17423   0190B0  5C03               	subwf	dbc_2nd@c^(0+1280),w,c
 17424   0190B2  A0D8               	btfss	status,0,c
 17425   0190B4  D00B               	goto	l10215
 17426   0190B6  0E6A               	movlw	low (_DbcTbl+7)
 17427   0190B8  6EF6               	movwf	tblptrl,c
 17428   0190BA  0ED9               	movlw	high (_DbcTbl+7)
 17429   0190BC  6EF7               	movwf	tblptrh,c
 17430   0190BE                     	if	0	;tblptru may be non-zero
 17431   0190BE                     	endif
 17432   0190BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17433   0190BE  0E00               	movlw	low (__mediumconst shr (0+16))
 17434   0190C0  6EF8               	movwf	tblptru,c
 17435   0190C2                     	endif
 17436   0190C2  5003               	movf	dbc_2nd@c^(0+1280),w,c
 17437   0190C4  0009               	tblrd		*+
 17438   0190C6  5CF5               	subwf	tablat,w,c
 17439   0190C8  B0D8               	btfsc	status,0,c
 17440   0190CA  D7E5               	goto	u12070
 17441   0190CC                     l10215:
 17442                           
 17443                           ;fatfs/ff.c: 724:   if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 17444   0190CC  0E6B               	movlw	low (_DbcTbl+8)
 17445   0190CE  6EF6               	movwf	tblptrl,c
 17446   0190D0  0ED9               	movlw	high (_DbcTbl+8)
 17447   0190D2  6EF7               	movwf	tblptrh,c
 17448   0190D4                     	if	0	;tblptru may be non-zero
 17449   0190D4                     	endif
 17450   0190D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17451   0190D4  0E00               	movlw	low (__mediumconst shr (0+16))
 17452   0190D6  6EF8               	movwf	tblptru,c
 17453   0190D8                     	endif
 17454   0190D8  0009               	tblrd		*+
 17455   0190DA  50F5               	movf	tablat,w,c
 17456   0190DC  5C03               	subwf	dbc_2nd@c^(0+1280),w,c
 17457   0190DE  A0D8               	btfss	status,0,c
 17458   0190E0  D00B               	goto	l10223
 17459   0190E2  0E6C               	movlw	low (_DbcTbl+9)
 17460   0190E4  6EF6               	movwf	tblptrl,c
 17461   0190E6  0ED9               	movlw	high (_DbcTbl+9)
 17462   0190E8  6EF7               	movwf	tblptrh,c
 17463   0190EA                     	if	0	;tblptru may be non-zero
 17464   0190EA                     	endif
 17465   0190EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17466   0190EA  0E00               	movlw	low (__mediumconst shr (0+16))
 17467   0190EC  6EF8               	movwf	tblptru,c
 17468   0190EE                     	endif
 17469   0190EE  5003               	movf	dbc_2nd@c^(0+1280),w,c
 17470   0190F0  0009               	tblrd		*+
 17471   0190F2  5CF5               	subwf	tablat,w,c
 17472   0190F4  B0D8               	btfsc	status,0,c
 17473   0190F6  D7CF               	goto	u12070
 17474   0190F8                     l10223:
 17475                           
 17476                           ;fatfs/ff.c: 729:  return 0;
 17477   0190F8  0E00               	movlw	0
 17478   0190FA  6E02               	movwf	(?_dbc_2nd+1)^(0+1280),c
 17479   0190FC  0E00               	movlw	0
 17480   0190FE  6E01               	movwf	?_dbc_2nd^(0+1280),c
 17481   019100  0012               	return		;funcret
 17482   019102                     __end_of_dbc_2nd:
 17483                           	callstack 0
 17484                           
 17485 ;; *************** function _dbc_1st *****************
 17486 ;; Defined at:
 17487 ;;		line 692 in file "fatfs/ff.c"
 17488 ;; Parameters:    Size  Location     Type
 17489 ;;  c               1    wreg     unsigned char 
 17490 ;; Auto vars:     Size  Location     Type
 17491 ;;  c               1    2[COMRAM] unsigned char 
 17492 ;; Return value:  Size  Location     Type
 17493 ;;                  2    0[COMRAM] int 
 17494 ;; Registers used:
 17495 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17496 ;; Tracked objects:
 17497 ;;		On entry : 0/6
 17498 ;;		On exit  : 0/0
 17499 ;;		Unchanged: 0/0
 17500 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17504 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17505 ;;Total ram usage:        3 bytes
 17506 ;; Hardware stack levels used: 1
 17507 ;; This function calls:
 17508 ;;		Nothing
 17509 ;; This function is called by:
 17510 ;;		_create_name
 17511 ;; This function uses a non-reentrant model
 17512 ;;
 17513                           
 17514                           	psect	text19
 17515   01965A                     __ptext19:
 17516                           	callstack 0
 17517   01965A                     _dbc_1st:
 17518                           	callstack 122
 17519                           
 17520                           ;incstack = 0
 17521                           ;dbc_1st@c stored from wreg
 17522   01965A  6E03               	movwf	dbc_1st@c^(0+1280),c
 17523                           
 17524                           ;fatfs/ff.c: 692: static int dbc_1st (BYTE c);fatfs/ff.c: 693: {;fatfs/ff.c: 700:  if (c
      +                           >= DbcTbl[0]) {
 17525   01965C  0E63               	movlw	low _DbcTbl
 17526   01965E  6EF6               	movwf	tblptrl,c
 17527   019660                     	if	1	;There is more than 1 active tblptr byte
 17528   019660  0ED9               	movlw	high _DbcTbl
 17529   019662  6EF7               	movwf	tblptrh,c
 17530   019664                     	endif
 17531   019664                     	if	1	;There are 3 active tblptr bytes
 17532   019664  0E00               	movlw	low (_DbcTbl shr (0+16))
 17533   019666  6EF8               	movwf	tblptru,c
 17534   019668                     	endif
 17535   019668  0009               	tblrd		*+
 17536   01966A  50F5               	movf	tablat,w,c
 17537   01966C  5C03               	subwf	dbc_1st@c^(0+1280),w,c
 17538   01966E  A0D8               	btfss	status,0,c
 17539   019670  D026               	goto	l10195
 17540                           
 17541                           ;fatfs/ff.c: 701:   if (c <= DbcTbl[1]) return 1;
 17542   019672  0E64               	movlw	low (_DbcTbl+1)
 17543   019674  6EF6               	movwf	tblptrl,c
 17544   019676  0ED9               	movlw	high (_DbcTbl+1)
 17545   019678  6EF7               	movwf	tblptrh,c
 17546   01967A                     	if	0	;tblptru may be non-zero
 17547   01967A                     	endif
 17548   01967A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17549   01967A  0E00               	movlw	low (__mediumconst shr (0+16))
 17550   01967C  6EF8               	movwf	tblptru,c
 17551   01967E                     	endif
 17552   01967E  5003               	movf	dbc_1st@c^(0+1280),w,c
 17553   019680  0009               	tblrd		*+
 17554   019682  5CF5               	subwf	tablat,w,c
 17555   019684  A0D8               	btfss	status,0,c
 17556   019686  D005               	goto	l10187
 17557   019688                     u12030:
 17558   019688  0E00               	movlw	0
 17559   01968A  6E02               	movwf	(?_dbc_1st+1)^(0+1280),c
 17560   01968C  0E01               	movlw	1
 17561   01968E  6E01               	movwf	?_dbc_1st^(0+1280),c
 17562   019690  0012               	return	
 17563   019692                     l10187:
 17564                           
 17565                           ;fatfs/ff.c: 702:   if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 17566   019692  0E65               	movlw	low (_DbcTbl+2)
 17567   019694  6EF6               	movwf	tblptrl,c
 17568   019696  0ED9               	movlw	high (_DbcTbl+2)
 17569   019698  6EF7               	movwf	tblptrh,c
 17570   01969A                     	if	0	;tblptru may be non-zero
 17571   01969A                     	endif
 17572   01969A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17573   01969A  0E00               	movlw	low (__mediumconst shr (0+16))
 17574   01969C  6EF8               	movwf	tblptru,c
 17575   01969E                     	endif
 17576   01969E  0009               	tblrd		*+
 17577   0196A0  50F5               	movf	tablat,w,c
 17578   0196A2  5C03               	subwf	dbc_1st@c^(0+1280),w,c
 17579   0196A4  A0D8               	btfss	status,0,c
 17580   0196A6  D00B               	goto	l10195
 17581   0196A8  0E66               	movlw	low (_DbcTbl+3)
 17582   0196AA  6EF6               	movwf	tblptrl,c
 17583   0196AC  0ED9               	movlw	high (_DbcTbl+3)
 17584   0196AE  6EF7               	movwf	tblptrh,c
 17585   0196B0                     	if	0	;tblptru may be non-zero
 17586   0196B0                     	endif
 17587   0196B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17588   0196B0  0E00               	movlw	low (__mediumconst shr (0+16))
 17589   0196B2  6EF8               	movwf	tblptru,c
 17590   0196B4                     	endif
 17591   0196B4  5003               	movf	dbc_1st@c^(0+1280),w,c
 17592   0196B6  0009               	tblrd		*+
 17593   0196B8  5CF5               	subwf	tablat,w,c
 17594   0196BA  B0D8               	btfsc	status,0,c
 17595   0196BC  D7E5               	goto	u12030
 17596   0196BE                     l10195:
 17597                           
 17598                           ;fatfs/ff.c: 707:  return 0;
 17599   0196BE  0E00               	movlw	0
 17600   0196C0  6E02               	movwf	(?_dbc_1st+1)^(0+1280),c
 17601   0196C2  0E00               	movlw	0
 17602   0196C4  6E01               	movwf	?_dbc_1st^(0+1280),c
 17603   0196C6  0012               	return		;funcret
 17604   0196C8                     __end_of_dbc_1st:
 17605                           	callstack 0
 17606                           
 17607 ;; *************** function _dir_register *****************
 17608 ;; Defined at:
 17609 ;;		line 2465 in file "fatfs/ff.c"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;  dp              2  110[BANK6 ] PTR struct .
 17612 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
 17613 ;; Auto vars:     Size  Location     Type
 17614 ;;  fs              2  112[BANK6 ] PTR struct .
 17615 ;;		 -> fs(560), NULL(0), 
 17616 ;;  res             1  114[BANK6 ] enum E275
 17617 ;; Return value:  Size  Location     Type
 17618 ;;                  1    wreg      enum E275
 17619 ;; Registers used:
 17620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17621 ;; Tracked objects:
 17622 ;;		On entry : 3F/6
 17623 ;;		On exit  : 3F/6
 17624 ;;		Unchanged: 0/0
 17625 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17626 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17627 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17629 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17630 ;;Total ram usage:        5 bytes
 17631 ;; Hardware stack levels used: 1
 17632 ;; Hardware stack levels required when called: 17
 17633 ;; This function calls:
 17634 ;;		_dir_alloc
 17635 ;;		_memcpy
 17636 ;;		_memset
 17637 ;;		_move_window
 17638 ;; This function is called by:
 17639 ;;		_f_open
 17640 ;; This function uses a non-reentrant model
 17641 ;;
 17642                           
 17643                           	psect	text20
 17644   0185EA                     __ptext20:
 17645                           	callstack 0
 17646   0185EA                     _dir_register:
 17647                           	callstack 107
 17648                           
 17649                           ; BSR set to: 6
 17650                           ;fatfs/ff.c: 2466:  DIR* dp;fatfs/ff.c: 2468: {;fatfs/ff.c: 2469:  FRESULT res;;fatfs/ff
      +                          .c: 2470:  FATFS *fs = dp->obj.fs;
 17651                           
 17652                           ;incstack = 0
 17653   0185EA  C66E  F4D9         	movff	dir_register@dp,fsr2l
 17654   0185EE  C66F  F4DA         	movff	dir_register@dp+1,fsr2h
 17655   0185F2  C4DE F670          	movff	postinc2,dir_register@fs
 17656   0185F6  C4DD F671          	movff	postdec2,dir_register@fs+1
 17657                           
 17658                           ; BSR set to: 6
 17659                           ;fatfs/ff.c: 2542:  res = dir_alloc(dp, 1);
 17660   0185FA  C66E  F662         	movff	dir_register@dp,dir_alloc@dp
 17661   0185FE  C66F  F663         	movff	dir_register@dp+1,dir_alloc@dp+1
 17662   018602  0E00               	movlw	0
 17663   018604  6F65               	movwf	(dir_alloc@n_ent+1)& (0+255),b
 17664   018606  0E01               	movlw	1
 17665   018608  6F64               	movwf	dir_alloc@n_ent& (0+255),b
 17666   01860A  EC61  F0C0         	call	_dir_alloc	;wreg free
 17667   01860E  6F72               	movwf	dir_register@res& (0+255),b
 17668                           
 17669                           ; BSR set to: 6
 17670                           ;fatfs/ff.c: 2547:  if (res == FR_OK) {
 17671   018610  5172               	movf	dir_register@res& (0+255),w,b
 17672   018612  A4D8               	btfss	status,2,c
 17673   018614  D04C               	goto	l11025
 17674                           
 17675                           ; BSR set to: 6
 17676                           ;fatfs/ff.c: 2548:   res = move_window(fs, dp->sect);
 17677   018616  C670  F600         	movff	dir_register@fs,move_window@fs
 17678   01861A  C671  F601         	movff	dir_register@fs+1,move_window@fs+1
 17679   01861E  EE20 F016          	lfsr	2,22
 17680   018622  516E               	movf	dir_register@dp& (0+255),w,b
 17681   018624  26D9               	addwf	fsr2l,f,c
 17682   018626  516F               	movf	(dir_register@dp+1)& (0+255),w,b
 17683   018628  22DA               	addwfc	fsr2h,f,c
 17684   01862A  C4DE F602          	movff	postinc2,move_window@sect
 17685   01862E  C4DE F603          	movff	postinc2,move_window@sect+1
 17686   018632  C4DE F604          	movff	postinc2,move_window@sect+2
 17687   018636  C4DE F605          	movff	postinc2,move_window@sect+3
 17688   01863A  EC1A  F0C4         	call	_move_window	;wreg free
 17689   01863E  0106               	movlb	6	; () banked
 17690   018640  6F72               	movwf	dir_register@res& (0+255),b
 17691                           
 17692                           ; BSR set to: 6
 17693                           ;fatfs/ff.c: 2549:   if (res == FR_OK) {
 17694   018642  5172               	movf	dir_register@res& (0+255),w,b
 17695   018644  A4D8               	btfss	status,2,c
 17696   018646  D033               	goto	l11025
 17697                           
 17698                           ; BSR set to: 6
 17699                           ;fatfs/ff.c: 2550:    memset(dp->dir, 0, 32);
 17700   018648  EE20 F01A          	lfsr	2,26
 17701   01864C  516E               	movf	dir_register@dp& (0+255),w,b
 17702   01864E  26D9               	addwf	fsr2l,f,c
 17703   018650  516F               	movf	(dir_register@dp+1)& (0+255),w,b
 17704   018652  22DA               	addwfc	fsr2h,f,c
 17705   018654  C4DE F501          	movff	postinc2,memset@dest
 17706   018658  C4DD F502          	movff	postdec2,memset@dest+1
 17707   01865C  0E00               	movlw	0
 17708   01865E  6E04               	movwf	(memset@c+1)^(0+1280),c
 17709   018660  0E00               	movlw	0
 17710   018662  6E03               	movwf	memset@c^(0+1280),c
 17711   018664  0E00               	movlw	0
 17712   018666  6E06               	movwf	(memset@n+1)^(0+1280),c
 17713   018668  0E20               	movlw	32
 17714   01866A  6E05               	movwf	memset@n^(0+1280),c
 17715   01866C  ECE7  F0CE         	call	_memset	;wreg free
 17716                           
 17717                           ;fatfs/ff.c: 2551:    memcpy(dp->dir + 0, dp->fn, 11);
 17718   018670  EE20 F01A          	lfsr	2,26
 17719   018674  516E               	movf	dir_register@dp& (0+255),w,b
 17720   018676  26D9               	addwf	fsr2l,f,c
 17721   018678  516F               	movf	(dir_register@dp+1)& (0+255),w,b
 17722   01867A  22DA               	addwfc	fsr2h,f,c
 17723   01867C  C4DE F501          	movff	postinc2,memcpy@d1
 17724   018680  C4DD F502          	movff	postdec2,memcpy@d1+1
 17725   018684  0E1C               	movlw	28
 17726   018686  256E               	addwf	dir_register@dp& (0+255),w,b
 17727   018688  6E03               	movwf	memcpy@s1^(0+1280),c
 17728   01868A  0E00               	movlw	0
 17729   01868C  216F               	addwfc	(dir_register@dp+1)& (0+255),w,b
 17730   01868E  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
 17731   018690  0E00               	movlw	0
 17732   018692  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 17733   018694  0E0B               	movlw	11
 17734   018696  6E05               	movwf	memcpy@n^(0+1280),c
 17735   018698  ECAD  F0CD         	call	_memcpy	;wreg free
 17736                           
 17737                           ;fatfs/ff.c: 2555:    fs->wflag = 1;
 17738   01869C  0106               	movlb	6	; () banked
 17739   01869E  EE20 F004          	lfsr	2,4
 17740   0186A2  5170               	movf	dir_register@fs& (0+255),w,b
 17741   0186A4  26D9               	addwf	fsr2l,f,c
 17742   0186A6  5171               	movf	(dir_register@fs+1)& (0+255),w,b
 17743   0186A8  22DA               	addwfc	fsr2h,f,c
 17744   0186AA  0E01               	movlw	1
 17745   0186AC  6EDF               	movwf	indf2,c
 17746   0186AE                     l11025:
 17747                           
 17748                           ; BSR set to: 6
 17749                           ;fatfs/ff.c: 2559:  return res;
 17750   0186AE  5172               	movf	dir_register@res& (0+255),w,b
 17751                           
 17752                           ; BSR set to: 6
 17753   0186B0  0012               	return		;funcret
 17754   0186B2                     __end_of_dir_register:
 17755                           	callstack 0
 17756                           
 17757 ;; *************** function _dir_alloc *****************
 17758 ;; Defined at:
 17759 ;;		line 1806 in file "fatfs/ff.c"
 17760 ;; Parameters:    Size  Location     Type
 17761 ;;  dp              2   98[BANK6 ] PTR struct .
 17762 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
 17763 ;;  n_ent           2  100[BANK6 ] unsigned int 
 17764 ;; Auto vars:     Size  Location     Type
 17765 ;;  n               2  107[BANK6 ] unsigned int 
 17766 ;;  fs              2  105[BANK6 ] PTR struct .
 17767 ;;		 -> fs(560), NULL(0), 
 17768 ;;  res             1  109[BANK6 ] enum E275
 17769 ;; Return value:  Size  Location     Type
 17770 ;;                  1    wreg      enum E275
 17771 ;; Registers used:
 17772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17773 ;; Tracked objects:
 17774 ;;		On entry : 3F/6
 17775 ;;		On exit  : 3F/6
 17776 ;;		Unchanged: 0/0
 17777 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17778 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17779 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17780 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17781 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17782 ;;Total ram usage:       12 bytes
 17783 ;; Hardware stack levels used: 1
 17784 ;; Hardware stack levels required when called: 16
 17785 ;; This function calls:
 17786 ;;		_dir_next
 17787 ;;		_dir_sdi
 17788 ;;		_move_window
 17789 ;; This function is called by:
 17790 ;;		_dir_register
 17791 ;; This function uses a non-reentrant model
 17792 ;;
 17793                           
 17794                           	psect	text21
 17795   0180C2                     __ptext21:
 17796                           	callstack 0
 17797   0180C2                     _dir_alloc:
 17798                           	callstack 107
 17799                           
 17800                           ; BSR set to: 6
 17801                           ;fatfs/ff.c: 1807:  DIR* dp,;fatfs/ff.c: 1808:  UINT n_ent;fatfs/ff.c: 1810: {;fatfs/ff.
      +                          c: 1811:  FRESULT res;;fatfs/ff.c: 1812:  UINT n;;fatfs/ff.c: 1813:  FATFS *fs = dp->obj
      +                          .fs;
 17802                           
 17803                           ; BSR set to: 6
 17804                           ;incstack = 0
 17805   0180C2  C662  F4D9         	movff	dir_alloc@dp,fsr2l
 17806   0180C6  C663  F4DA         	movff	dir_alloc@dp+1,fsr2h
 17807   0180CA  C4DE F669          	movff	postinc2,dir_alloc@fs
 17808   0180CE  C4DD F66A          	movff	postdec2,dir_alloc@fs+1
 17809                           
 17810                           ; BSR set to: 6
 17811                           ;fatfs/ff.c: 1816:  res = dir_sdi(dp, 0);
 17812   0180D2  C662  F624         	movff	dir_alloc@dp,dir_sdi@dp
 17813   0180D6  C663  F625         	movff	dir_alloc@dp+1,dir_sdi@dp+1
 17814   0180DA  0E00               	movlw	0
 17815   0180DC  6F26               	movwf	dir_sdi@ofs& (0+255),b
 17816   0180DE  0E00               	movlw	0
 17817   0180E0  6F27               	movwf	(dir_sdi@ofs+1)& (0+255),b
 17818   0180E2  0E00               	movlw	0
 17819   0180E4  6F28               	movwf	(dir_sdi@ofs+2)& (0+255),b
 17820   0180E6  0E00               	movlw	0
 17821   0180E8  6F29               	movwf	(dir_sdi@ofs+3)& (0+255),b
 17822   0180EA  EC31  F0A5         	call	_dir_sdi	;wreg free
 17823   0180EE  6F6D               	movwf	dir_alloc@res& (0+255),b
 17824                           
 17825                           ; BSR set to: 6
 17826                           ;fatfs/ff.c: 1817:  if (res == FR_OK) {
 17827   0180F0  516D               	movf	dir_alloc@res& (0+255),w,b
 17828   0180F2  A4D8               	btfss	status,2,c
 17829   0180F4  D05D               	goto	u12790
 17830                           
 17831                           ; BSR set to: 6
 17832                           ;fatfs/ff.c: 1818:   n = 0;
 17833   0180F6  0E00               	movlw	0
 17834   0180F8  6F6C               	movwf	(dir_alloc@n+1)& (0+255),b
 17835   0180FA  0E00               	movlw	0
 17836   0180FC  6F6B               	movwf	dir_alloc@n& (0+255),b
 17837   0180FE                     l10579:
 17838                           
 17839                           ; BSR set to: 6
 17840                           ;fatfs/ff.c: 1820:    res = move_window(fs, dp->sect);
 17841   0180FE  C669  F600         	movff	dir_alloc@fs,move_window@fs
 17842   018102  C66A  F601         	movff	dir_alloc@fs+1,move_window@fs+1
 17843   018106  EE20 F016          	lfsr	2,22
 17844   01810A  5162               	movf	dir_alloc@dp& (0+255),w,b
 17845   01810C  26D9               	addwf	fsr2l,f,c
 17846   01810E  5163               	movf	(dir_alloc@dp+1)& (0+255),w,b
 17847   018110  22DA               	addwfc	fsr2h,f,c
 17848   018112  C4DE F602          	movff	postinc2,move_window@sect
 17849   018116  C4DE F603          	movff	postinc2,move_window@sect+1
 17850   01811A  C4DE F604          	movff	postinc2,move_window@sect+2
 17851   01811E  C4DE F605          	movff	postinc2,move_window@sect+3
 17852   018122  EC1A  F0C4         	call	_move_window	;wreg free
 17853   018126  0106               	movlb	6	; () banked
 17854   018128  6F6D               	movwf	dir_alloc@res& (0+255),b
 17855                           
 17856                           ; BSR set to: 6
 17857                           ;fatfs/ff.c: 1821:    if (res != FR_OK) break;
 17858   01812A  516D               	movf	dir_alloc@res& (0+255),w,b
 17859   01812C  A4D8               	btfss	status,2,c
 17860   01812E  D040               	goto	u12790
 17861                           
 17862                           ; BSR set to: 6
 17863                           ;fatfs/ff.c: 1825:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
 17864   018130  EE20 F01A          	lfsr	2,26
 17865   018134  5162               	movf	dir_alloc@dp& (0+255),w,b
 17866   018136  26D9               	addwf	fsr2l,f,c
 17867   018138  5163               	movf	(dir_alloc@dp+1)& (0+255),w,b
 17868   01813A  22DA               	addwfc	fsr2h,f,c
 17869   01813C  C4DE F666          	movff	postinc2,??_dir_alloc
 17870   018140  C4DD F667          	movff	postdec2,??_dir_alloc+1
 17871   018144  C666  F4D9         	movff	??_dir_alloc,fsr2l
 17872   018148  C667  F4DA         	movff	??_dir_alloc+1,fsr2h
 17873   01814C  0EE5               	movlw	229
 17874   01814E  18DE               	xorwf	postinc2,w,c
 17875   018150  B4D8               	btfsc	status,2,c
 17876   018152  D011               	goto	u12770
 17877                           
 17878                           ; BSR set to: 6
 17879   018154  EE20 F01A          	lfsr	2,26
 17880   018158  5162               	movf	dir_alloc@dp& (0+255),w,b
 17881   01815A  26D9               	addwf	fsr2l,f,c
 17882   01815C  5163               	movf	(dir_alloc@dp+1)& (0+255),w,b
 17883   01815E  22DA               	addwfc	fsr2h,f,c
 17884   018160  C4DE F666          	movff	postinc2,??_dir_alloc
 17885   018164  C4DD F667          	movff	postdec2,??_dir_alloc+1
 17886   018168  C666  F4D9         	movff	??_dir_alloc,fsr2l
 17887   01816C  C667  F4DA         	movff	??_dir_alloc+1,fsr2h
 17888   018170  50DF               	movf	indf2,w,c
 17889   018172  A4D8               	btfss	status,2,c
 17890   018174  D00A               	goto	l10593
 17891   018176                     u12770:
 17892                           
 17893                           ; BSR set to: 6
 17894                           ;fatfs/ff.c: 1827:     if (++n == n_ent) break;
 17895   018176  4B6B               	infsnz	dir_alloc@n& (0+255),f,b
 17896   018178  2B6C               	incf	(dir_alloc@n+1)& (0+255),f,b
 17897   01817A  5164               	movf	dir_alloc@n_ent& (0+255),w,b
 17898   01817C  196B               	xorwf	dir_alloc@n& (0+255),w,b
 17899   01817E  E109               	bnz	l10595
 17900   018180  5165               	movf	(dir_alloc@n_ent+1)& (0+255),w,b
 17901   018182  196C               	xorwf	(dir_alloc@n+1)& (0+255),w,b
 17902   018184  B4D8               	btfsc	status,2,c
 17903   018186  D014               	goto	u12790
 17904   018188  D004               	goto	l10595
 17905   01818A                     l10593:
 17906                           
 17907                           ; BSR set to: 6
 17908                           ;fatfs/ff.c: 1829:     n = 0;
 17909   01818A  0E00               	movlw	0
 17910   01818C  6F6C               	movwf	(dir_alloc@n+1)& (0+255),b
 17911   01818E  0E00               	movlw	0
 17912   018190  6F6B               	movwf	dir_alloc@n& (0+255),b
 17913   018192                     l10595:
 17914                           
 17915                           ; BSR set to: 6
 17916                           ;fatfs/ff.c: 1831:    res = dir_next(dp, 1);
 17917   018192  C662  F648         	movff	dir_alloc@dp,dir_next@dp
 17918   018196  C663  F649         	movff	dir_alloc@dp+1,dir_next@dp+1
 17919   01819A  0E00               	movlw	0
 17920   01819C  6F4B               	movwf	(dir_next@stretch+1)& (0+255),b
 17921   01819E  0E01               	movlw	1
 17922   0181A0  6F4A               	movwf	dir_next@stretch& (0+255),b
 17923   0181A2  ECB3  F09E         	call	_dir_next	;wreg free
 17924   0181A6  0106               	movlb	6	; () banked
 17925   0181A8  6F6D               	movwf	dir_alloc@res& (0+255),b
 17926                           
 17927                           ; BSR set to: 6
 17928                           ;fatfs/ff.c: 1832:   } while (res == FR_OK);
 17929   0181AA  516D               	movf	dir_alloc@res& (0+255),w,b
 17930   0181AC  B4D8               	btfsc	status,2,c
 17931   0181AE  D7A7               	goto	l10579
 17932   0181B0                     u12790:
 17933                           
 17934                           ; BSR set to: 6
 17935                           ;fatfs/ff.c: 1835:  if (res == FR_NO_FILE) res = FR_DENIED;
 17936   0181B0  0E04               	movlw	4
 17937   0181B2  196D               	xorwf	dir_alloc@res& (0+255),w,b
 17938   0181B4  A4D8               	btfss	status,2,c
 17939   0181B6  D002               	goto	l396
 17940                           
 17941                           ; BSR set to: 6
 17942   0181B8  0E07               	movlw	7
 17943   0181BA  6F6D               	movwf	dir_alloc@res& (0+255),b
 17944   0181BC                     l396:
 17945                           
 17946                           ; BSR set to: 6
 17947                           ;fatfs/ff.c: 1836:  return res;
 17948   0181BC  516D               	movf	dir_alloc@res& (0+255),w,b
 17949                           
 17950                           ; BSR set to: 6
 17951   0181BE  0012               	return		;funcret
 17952   0181C0                     __end_of_dir_alloc:
 17953                           	callstack 0
 17954                           
 17955 ;; *************** function _dir_sdi *****************
 17956 ;; Defined at:
 17957 ;;		line 1697 in file "fatfs/ff.c"
 17958 ;; Parameters:    Size  Location     Type
 17959 ;;  dp              2   36[BANK6 ] PTR struct .
 17960 ;;		 -> fsdir(40), f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), 
 17961 ;;		 -> f_unlink@sdj(40), f_unlink@dj(40), f_stat@dj(40), f_open@dj(40), 
 17962 ;;  ofs             4   38[BANK6 ] unsigned long 
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;  clst            4   56[BANK6 ] unsigned long 
 17965 ;;  csz             4   52[BANK6 ] unsigned long 
 17966 ;;  fs              2   60[BANK6 ] PTR struct .
 17967 ;;		 -> fs(560), NULL(0), 
 17968 ;; Return value:  Size  Location     Type
 17969 ;;                  1    wreg      enum E275
 17970 ;; Registers used:
 17971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17972 ;; Tracked objects:
 17973 ;;		On entry : 3F/6
 17974 ;;		On exit  : 3F/6
 17975 ;;		Unchanged: 0/0
 17976 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17977 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17978 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17979 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17980 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17981 ;;Total ram usage:       26 bytes
 17982 ;; Hardware stack levels used: 1
 17983 ;; Hardware stack levels required when called: 14
 17984 ;; This function calls:
 17985 ;;		_clst2sect
 17986 ;;		_get_fat
 17987 ;; This function is called by:
 17988 ;;		_dir_alloc
 17989 ;;		_dir_find
 17990 ;;		_follow_path
 17991 ;;		_f_opendir
 17992 ;;		_f_readdir
 17993 ;; This function uses a non-reentrant model
 17994 ;;
 17995                           
 17996                           	psect	text22
 17997   014A62                     __ptext22:
 17998                           	callstack 0
 17999   014A62                     _dir_sdi:
 18000                           	callstack 110
 18001                           
 18002                           ; BSR set to: 6
 18003                           ;fatfs/ff.c: 1698:  DIR* dp,;fatfs/ff.c: 1699:  DWORD ofs;fatfs/ff.c: 1701: {;fatfs/ff.c
      +                          : 1702:  DWORD csz, clst;;fatfs/ff.c: 1703:  FATFS *fs = dp->obj.fs;
 18004                           
 18005                           ; BSR set to: 6
 18006                           ;incstack = 0
 18007   014A62  C624  F4D9         	movff	dir_sdi@dp,fsr2l
 18008   014A66  C625  F4DA         	movff	dir_sdi@dp+1,fsr2h
 18009   014A6A  C4DE F63C          	movff	postinc2,dir_sdi@fs
 18010   014A6E  C4DD F63D          	movff	postdec2,dir_sdi@fs+1
 18011                           
 18012                           ; BSR set to: 6
 18013                           
 18014                           ; BSR set to: 6
 18015                           
 18016                           ;fatfs/ff.c: 1706:  if (ofs >= (DWORD)((0 && fs->fs_type == 4) ? 0x10000000 : 0x200000) 
      +                          || ofs % 32) {
 18017   014A72  5129               	movf	(dir_sdi@ofs+3)& (0+255),w,b
 18018   014A74  E10A               	bnz	l10239
 18019   014A76  0E20               	movlw	32
 18020   014A78  5D28               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
 18021   014A7A  B0D8               	btfsc	status,0,c
 18022   014A7C  D006               	goto	u12130
 18023                           
 18024                           ; BSR set to: 6
 18025   014A7E  C626  F62A         	movff	dir_sdi@ofs,??_dir_sdi
 18026   014A82  0E1F               	movlw	31
 18027   014A84  172A               	andwf	??_dir_sdi& (0+255),f,b
 18028   014A86  B4D8               	btfsc	status,2,c
 18029   014A88  D002               	goto	l10243
 18030   014A8A                     u12130:
 18031   014A8A                     l10239:
 18032                           
 18033                           ; BSR set to: 6
 18034                           ;fatfs/ff.c: 1707:   return FR_INT_ERR;
 18035   014A8A  0E02               	movlw	2
 18036   014A8C  0012               	return	
 18037   014A8E                     l10243:
 18038                           
 18039                           ; BSR set to: 6
 18040                           ;fatfs/ff.c: 1709:  dp->dptr = ofs;
 18041   014A8E  EE20 F00E          	lfsr	2,14
 18042   014A92  5124               	movf	dir_sdi@dp& (0+255),w,b
 18043   014A94  26D9               	addwf	fsr2l,f,c
 18044   014A96  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18045   014A98  22DA               	addwfc	fsr2h,f,c
 18046   014A9A  C626  F4DE         	movff	dir_sdi@ofs,postinc2
 18047   014A9E  C627  F4DE         	movff	dir_sdi@ofs+1,postinc2
 18048   014AA2  C628  F4DE         	movff	dir_sdi@ofs+2,postinc2
 18049   014AA6  C629  F4DE         	movff	dir_sdi@ofs+3,postinc2
 18050                           
 18051                           ;fatfs/ff.c: 1710:  clst = dp->obj.sclust;
 18052   014AAA  EE20 F006          	lfsr	2,6
 18053   014AAE  5124               	movf	dir_sdi@dp& (0+255),w,b
 18054   014AB0  26D9               	addwf	fsr2l,f,c
 18055   014AB2  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18056   014AB4  22DA               	addwfc	fsr2h,f,c
 18057   014AB6  C4DE F638          	movff	postinc2,dir_sdi@clst
 18058   014ABA  C4DE F639          	movff	postinc2,dir_sdi@clst+1
 18059   014ABE  C4DE F63A          	movff	postinc2,dir_sdi@clst+2
 18060   014AC2  C4DE F63B          	movff	postinc2,dir_sdi@clst+3
 18061                           
 18062                           ; BSR set to: 6
 18063                           ;fatfs/ff.c: 1711:  if (clst == 0 && fs->fs_type >= 3) {
 18064   014AC6  5138               	movf	dir_sdi@clst& (0+255),w,b
 18065   014AC8  1139               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 18066   014ACA  113A               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 18067   014ACC  113B               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 18068   014ACE  A4D8               	btfss	status,2,c
 18069   014AD0  D015               	goto	l10253
 18070                           
 18071                           ; BSR set to: 6
 18072   014AD2  C63C  F4D9         	movff	dir_sdi@fs,fsr2l
 18073   014AD6  C63D  F4DA         	movff	dir_sdi@fs+1,fsr2h
 18074   014ADA  0E02               	movlw	2
 18075   014ADC  64DF               	cpfsgt	indf2,c
 18076   014ADE  D00E               	goto	l10253
 18077                           
 18078                           ; BSR set to: 6
 18079                           ;fatfs/ff.c: 1712:   clst = (DWORD)fs->dirbase;
 18080   014AE0  EE20 F024          	lfsr	2,36
 18081   014AE4  513C               	movf	dir_sdi@fs& (0+255),w,b
 18082   014AE6  26D9               	addwf	fsr2l,f,c
 18083   014AE8  513D               	movf	(dir_sdi@fs+1)& (0+255),w,b
 18084   014AEA  22DA               	addwfc	fsr2h,f,c
 18085   014AEC  C4DE F638          	movff	postinc2,dir_sdi@clst
 18086   014AF0  C4DE F639          	movff	postinc2,dir_sdi@clst+1
 18087   014AF4  C4DE F63A          	movff	postinc2,dir_sdi@clst+2
 18088   014AF8  C4DE F63B          	movff	postinc2,dir_sdi@clst+3
 18089   014AFC                     l10253:
 18090                           
 18091                           ; BSR set to: 6
 18092                           ;fatfs/ff.c: 1716:  if (clst == 0) {
 18093   014AFC  5138               	movf	dir_sdi@clst& (0+255),w,b
 18094   014AFE  1139               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 18095   014B00  113A               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 18096   014B02  113B               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 18097   014B04  A4D8               	btfss	status,2,c
 18098   014B06  D040               	goto	l10263
 18099                           
 18100                           ; BSR set to: 6
 18101                           ;fatfs/ff.c: 1717:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ERR;
 18102   014B08  EE20 F008          	lfsr	2,8
 18103   014B0C  513C               	movf	dir_sdi@fs& (0+255),w,b
 18104   014B0E  26D9               	addwf	fsr2l,f,c
 18105   014B10  513D               	movf	(dir_sdi@fs+1)& (0+255),w,b
 18106   014B12  22DA               	addwfc	fsr2h,f,c
 18107   014B14  C4DE F62A          	movff	postinc2,??_dir_sdi
 18108   014B18  C4DD F62B          	movff	postdec2,??_dir_sdi+1
 18109   014B1C  512A               	movf	??_dir_sdi& (0+255),w,b
 18110   014B1E  6F2C               	movwf	(??_dir_sdi+2)& (0+255),b
 18111   014B20  512B               	movf	(??_dir_sdi+1)& (0+255),w,b
 18112   014B22  6F2D               	movwf	(??_dir_sdi+3)& (0+255),b
 18113   014B24  6B2E               	clrf	(??_dir_sdi+4)& (0+255),b
 18114   014B26  6B2F               	clrf	(??_dir_sdi+5)& (0+255),b
 18115   014B28  C626  F630         	movff	dir_sdi@ofs,??_dir_sdi+6
 18116   014B2C  C627  F631         	movff	dir_sdi@ofs+1,??_dir_sdi+7
 18117   014B30  C628  F632         	movff	dir_sdi@ofs+2,??_dir_sdi+8
 18118   014B34  C629  F633         	movff	dir_sdi@ofs+3,??_dir_sdi+9
 18119   014B38  0E06               	movlw	6
 18120   014B3A  D005               	goto	u12170
 18121   014B3C                     u12175:
 18122   014B3C  90D8               	bcf	status,0,c
 18123   014B3E  3333               	rrcf	(??_dir_sdi+9)& (0+255),f,b
 18124   014B40  3332               	rrcf	(??_dir_sdi+8)& (0+255),f,b
 18125   014B42  3331               	rrcf	(??_dir_sdi+7)& (0+255),f,b
 18126   014B44  3330               	rrcf	(??_dir_sdi+6)& (0+255),f,b
 18127   014B46                     u12170:
 18128   014B46  2EE8               	decfsz	wreg,f,c
 18129   014B48  D7F9               	goto	u12175
 18130   014B4A  512C               	movf	(??_dir_sdi+2)& (0+255),w,b
 18131   014B4C  5D30               	subwf	(??_dir_sdi+6)& (0+255),w,b
 18132   014B4E  512D               	movf	(??_dir_sdi+3)& (0+255),w,b
 18133   014B50  5931               	subwfb	(??_dir_sdi+7)& (0+255),w,b
 18134   014B52  512E               	movf	(??_dir_sdi+4)& (0+255),w,b
 18135   014B54  5932               	subwfb	(??_dir_sdi+8)& (0+255),w,b
 18136   014B56  512F               	movf	(??_dir_sdi+5)& (0+255),w,b
 18137   014B58  5933               	subwfb	(??_dir_sdi+9)& (0+255),w,b
 18138   014B5A  B0D8               	btfsc	status,0,c
 18139   014B5C  D796               	goto	u12130
 18140                           
 18141                           ; BSR set to: 6
 18142                           ;fatfs/ff.c: 1718:   dp->sect = fs->dirbase;
 18143   014B5E  EE20 F024          	lfsr	2,36
 18144   014B62  513C               	movf	dir_sdi@fs& (0+255),w,b
 18145   014B64  26D9               	addwf	fsr2l,f,c
 18146   014B66  513D               	movf	(dir_sdi@fs+1)& (0+255),w,b
 18147   014B68  22DA               	addwfc	fsr2h,f,c
 18148   014B6A  EE10 F016          	lfsr	1,22
 18149   014B6E  5124               	movf	dir_sdi@dp& (0+255),w,b
 18150   014B70  26E1               	addwf	fsr1l,f,c
 18151   014B72  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18152   014B74  22E2               	addwfc	fsr1h,f,c
 18153   014B76  C4DE F4E6          	movff	postinc2,postinc1
 18154   014B7A  C4DE F4E6          	movff	postinc2,postinc1
 18155   014B7E  C4DE F4E6          	movff	postinc2,postinc1
 18156   014B82  C4DE F4E6          	movff	postinc2,postinc1
 18157                           
 18158                           ;fatfs/ff.c: 1720:  } else {
 18159   014B86  D08A               	goto	l10285
 18160   014B88                     l10263:
 18161                           
 18162                           ; BSR set to: 6
 18163                           ;fatfs/ff.c: 1721:   csz = (DWORD)fs->csize * ((UINT)512);
 18164   014B88  EE20 F00A          	lfsr	2,10
 18165   014B8C  513C               	movf	dir_sdi@fs& (0+255),w,b
 18166   014B8E  26D9               	addwf	fsr2l,f,c
 18167   014B90  513D               	movf	(dir_sdi@fs+1)& (0+255),w,b
 18168   014B92  22DA               	addwfc	fsr2h,f,c
 18169   014B94  C4DE F62A          	movff	postinc2,??_dir_sdi
 18170   014B98  C4DD F62B          	movff	postdec2,??_dir_sdi+1
 18171   014B9C  512A               	movf	??_dir_sdi& (0+255),w,b
 18172   014B9E  6F2C               	movwf	(??_dir_sdi+2)& (0+255),b
 18173   014BA0  512B               	movf	(??_dir_sdi+1)& (0+255),w,b
 18174   014BA2  6F2D               	movwf	(??_dir_sdi+3)& (0+255),b
 18175   014BA4  6B2E               	clrf	(??_dir_sdi+4)& (0+255),b
 18176   014BA6  6B2F               	clrf	(??_dir_sdi+5)& (0+255),b
 18177   014BA8  0E09               	movlw	9
 18178   014BAA                     u12195:
 18179   014BAA  90D8               	bcf	status,0,c
 18180   014BAC  372C               	rlcf	(??_dir_sdi+2)& (0+255),f,b
 18181   014BAE  372D               	rlcf	(??_dir_sdi+3)& (0+255),f,b
 18182   014BB0  372E               	rlcf	(??_dir_sdi+4)& (0+255),f,b
 18183   014BB2  372F               	rlcf	(??_dir_sdi+5)& (0+255),f,b
 18184   014BB4  2EE8               	decfsz	wreg,f,c
 18185   014BB6  D7F9               	goto	u12195
 18186   014BB8  C62C  F634         	movff	??_dir_sdi+2,dir_sdi@csz
 18187   014BBC  C62D  F635         	movff	??_dir_sdi+3,dir_sdi@csz+1
 18188   014BC0  C62E  F636         	movff	??_dir_sdi+4,dir_sdi@csz+2
 18189   014BC4  C62F  F637         	movff	??_dir_sdi+5,dir_sdi@csz+3
 18190                           
 18191                           ;fatfs/ff.c: 1722:   while (ofs >= csz) {
 18192   014BC8  D042               	goto	l352
 18193   014BCA                     l10265:
 18194                           
 18195                           ; BSR set to: 6
 18196                           ;fatfs/ff.c: 1723:    clst = get_fat(&dp->obj, clst);
 18197   014BCA  C624  F60A         	movff	dir_sdi@dp,get_fat@obj
 18198   014BCE  C625  F60B         	movff	dir_sdi@dp+1,get_fat@obj+1
 18199   014BD2  C638  F60C         	movff	dir_sdi@clst,get_fat@clst
 18200   014BD6  C639  F60D         	movff	dir_sdi@clst+1,get_fat@clst+1
 18201   014BDA  C63A  F60E         	movff	dir_sdi@clst+2,get_fat@clst+2
 18202   014BDE  C63B  F60F         	movff	dir_sdi@clst+3,get_fat@clst+3
 18203   014BE2  EC66  F0A0         	call	_get_fat	;wreg free
 18204   014BE6  C60A  F638         	movff	?_get_fat,dir_sdi@clst
 18205   014BEA  C60B  F639         	movff	?_get_fat+1,dir_sdi@clst+1
 18206   014BEE  C60C  F63A         	movff	?_get_fat+2,dir_sdi@clst+2
 18207   014BF2  C60D  F63B         	movff	?_get_fat+3,dir_sdi@clst+3
 18208                           
 18209                           ;fatfs/ff.c: 1724:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 18210   014BF6  0106               	movlb	6	; () banked
 18211   014BF8  2938               	incf	dir_sdi@clst& (0+255),w,b
 18212   014BFA  E109               	bnz	l10273
 18213   014BFC  2939               	incf	(dir_sdi@clst+1)& (0+255),w,b
 18214   014BFE  E107               	bnz	l10273
 18215   014C00  293A               	incf	(dir_sdi@clst+2)& (0+255),w,b
 18216   014C02  E105               	bnz	l10273
 18217   014C04  293B               	incf	(dir_sdi@clst+3)& (0+255),w,b
 18218   014C06  A4D8               	btfss	status,2,c
 18219   014C08  D002               	goto	l10273
 18220                           
 18221                           ; BSR set to: 6
 18222   014C0A  0E01               	movlw	1
 18223   014C0C  0012               	return	
 18224   014C0E                     l10273:
 18225                           
 18226                           ; BSR set to: 6
 18227                           ;fatfs/ff.c: 1725:    if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
 18228   014C0E  513B               	movf	(dir_sdi@clst+3)& (0+255),w,b
 18229   014C10  113A               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 18230   014C12  1139               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 18231   014C14  E104               	bnz	u12210
 18232   014C16  0E02               	movlw	2
 18233   014C18  5D38               	subwf	dir_sdi@clst& (0+255),w,b
 18234   014C1A  A0D8               	btfss	status,0,c
 18235   014C1C  D736               	goto	u12130
 18236   014C1E                     u12210:
 18237                           
 18238                           ; BSR set to: 6
 18239   014C1E  EE20 F014          	lfsr	2,20
 18240   014C22  513C               	movf	dir_sdi@fs& (0+255),w,b
 18241   014C24  26D9               	addwf	fsr2l,f,c
 18242   014C26  513D               	movf	(dir_sdi@fs+1)& (0+255),w,b
 18243   014C28  22DA               	addwfc	fsr2h,f,c
 18244   014C2A  50DE               	movf	postinc2,w,c
 18245   014C2C  5D38               	subwf	dir_sdi@clst& (0+255),w,b
 18246   014C2E  50DE               	movf	postinc2,w,c
 18247   014C30  5939               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
 18248   014C32  50DE               	movf	postinc2,w,c
 18249   014C34  593A               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
 18250   014C36  50DE               	movf	postinc2,w,c
 18251   014C38  593B               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
 18252   014C3A  B0D8               	btfsc	status,0,c
 18253   014C3C  D726               	goto	u12130
 18254                           
 18255                           ; BSR set to: 6
 18256                           ;fatfs/ff.c: 1726:    ofs -= csz;
 18257   014C3E  5134               	movf	dir_sdi@csz& (0+255),w,b
 18258   014C40  5F26               	subwf	dir_sdi@ofs& (0+255),f,b
 18259   014C42  5135               	movf	(dir_sdi@csz+1)& (0+255),w,b
 18260   014C44  5B27               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
 18261   014C46  5136               	movf	(dir_sdi@csz+2)& (0+255),w,b
 18262   014C48  5B28               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
 18263   014C4A  5137               	movf	(dir_sdi@csz+3)& (0+255),w,b
 18264   014C4C  5B29               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
 18265   014C4E                     l352:
 18266                           
 18267                           ; BSR set to: 6
 18268                           ;fatfs/ff.c: 1722:   while (ofs >= csz) {
 18269   014C4E  5134               	movf	dir_sdi@csz& (0+255),w,b
 18270   014C50  5D26               	subwf	dir_sdi@ofs& (0+255),w,b
 18271   014C52  5135               	movf	(dir_sdi@csz+1)& (0+255),w,b
 18272   014C54  5927               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
 18273   014C56  5136               	movf	(dir_sdi@csz+2)& (0+255),w,b
 18274   014C58  5928               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
 18275   014C5A  5137               	movf	(dir_sdi@csz+3)& (0+255),w,b
 18276   014C5C  5929               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
 18277   014C5E  B0D8               	btfsc	status,0,c
 18278   014C60  D7B4               	goto	l10265
 18279                           
 18280                           ; BSR set to: 6
 18281                           ;fatfs/ff.c: 1728:   dp->sect = clst2sect(fs, clst);
 18282   014C62  C63C  F50D         	movff	dir_sdi@fs,clst2sect@fs
 18283   014C66  C63D  F50E         	movff	dir_sdi@fs+1,clst2sect@fs+1
 18284   014C6A  C638  F50F         	movff	dir_sdi@clst,clst2sect@clst
 18285   014C6E  C639  F510         	movff	dir_sdi@clst+1,clst2sect@clst+1
 18286   014C72  C63A  F511         	movff	dir_sdi@clst+2,clst2sect@clst+2
 18287   014C76  C63B  F512         	movff	dir_sdi@clst+3,clst2sect@clst+3
 18288   014C7A  ECBA  F0C3         	call	_clst2sect	;wreg free
 18289   014C7E  0106               	movlb	6	; () banked
 18290   014C80  EE20 F016          	lfsr	2,22
 18291   014C84  5124               	movf	dir_sdi@dp& (0+255),w,b
 18292   014C86  26D9               	addwf	fsr2l,f,c
 18293   014C88  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18294   014C8A  22DA               	addwfc	fsr2h,f,c
 18295   014C8C  C50D  F4DE         	movff	?_clst2sect,postinc2
 18296   014C90  C50E  F4DE         	movff	?_clst2sect+1,postinc2
 18297   014C94  C50F  F4DE         	movff	?_clst2sect+2,postinc2
 18298   014C98  C510  F4DE         	movff	?_clst2sect+3,postinc2
 18299   014C9C                     l10285:
 18300                           
 18301                           ; BSR set to: 6
 18302                           ;fatfs/ff.c: 1730:  dp->clust = clst;
 18303   014C9C  EE20 F012          	lfsr	2,18
 18304   014CA0  5124               	movf	dir_sdi@dp& (0+255),w,b
 18305   014CA2  26D9               	addwf	fsr2l,f,c
 18306   014CA4  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18307   014CA6  22DA               	addwfc	fsr2h,f,c
 18308   014CA8  C638  F4DE         	movff	dir_sdi@clst,postinc2
 18309   014CAC  C639  F4DE         	movff	dir_sdi@clst+1,postinc2
 18310   014CB0  C63A  F4DE         	movff	dir_sdi@clst+2,postinc2
 18311   014CB4  C63B  F4DE         	movff	dir_sdi@clst+3,postinc2
 18312                           
 18313                           ; BSR set to: 6
 18314                           ;fatfs/ff.c: 1731:  if (dp->sect == 0) return FR_INT_ERR;
 18315   014CB8  EE20 F016          	lfsr	2,22
 18316   014CBC  5124               	movf	dir_sdi@dp& (0+255),w,b
 18317   014CBE  26D9               	addwf	fsr2l,f,c
 18318   014CC0  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18319   014CC2  22DA               	addwfc	fsr2h,f,c
 18320   014CC4  50DE               	movf	postinc2,w,c
 18321   014CC6  10DE               	iorwf	postinc2,w,c
 18322   014CC8  10DE               	iorwf	postinc2,w,c
 18323   014CCA  10DE               	iorwf	postinc2,w,c
 18324   014CCC  B4D8               	btfsc	status,2,c
 18325   014CCE  D6DD               	goto	u12130
 18326                           
 18327                           ; BSR set to: 6
 18328                           ;fatfs/ff.c: 1732:  dp->sect += ofs / ((UINT)512);
 18329   014CD0  C626  F62A         	movff	dir_sdi@ofs,??_dir_sdi
 18330   014CD4  C627  F62B         	movff	dir_sdi@ofs+1,??_dir_sdi+1
 18331   014CD8  C628  F62C         	movff	dir_sdi@ofs+2,??_dir_sdi+2
 18332   014CDC  C629  F62D         	movff	dir_sdi@ofs+3,??_dir_sdi+3
 18333   014CE0  0E0A               	movlw	10
 18334   014CE2  D005               	goto	u12250
 18335   014CE4                     u12255:
 18336   014CE4  90D8               	bcf	status,0,c
 18337   014CE6  332D               	rrcf	(??_dir_sdi+3)& (0+255),f,b
 18338   014CE8  332C               	rrcf	(??_dir_sdi+2)& (0+255),f,b
 18339   014CEA  332B               	rrcf	(??_dir_sdi+1)& (0+255),f,b
 18340   014CEC  332A               	rrcf	??_dir_sdi& (0+255),f,b
 18341   014CEE                     u12250:
 18342   014CEE  2EE8               	decfsz	wreg,f,c
 18343   014CF0  D7F9               	goto	u12255
 18344   014CF2  EE20 F016          	lfsr	2,22
 18345   014CF6  5124               	movf	dir_sdi@dp& (0+255),w,b
 18346   014CF8  26D9               	addwf	fsr2l,f,c
 18347   014CFA  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18348   014CFC  22DA               	addwfc	fsr2h,f,c
 18349   014CFE  512A               	movf	??_dir_sdi& (0+255),w,b
 18350   014D00  26DE               	addwf	postinc2,f,c
 18351   014D02  512B               	movf	(??_dir_sdi+1)& (0+255),w,b
 18352   014D04  22DE               	addwfc	postinc2,f,c
 18353   014D06  512C               	movf	(??_dir_sdi+2)& (0+255),w,b
 18354   014D08  22DE               	addwfc	postinc2,f,c
 18355   014D0A  512D               	movf	(??_dir_sdi+3)& (0+255),w,b
 18356   014D0C  22DE               	addwfc	postinc2,f,c
 18357                           
 18358                           ;fatfs/ff.c: 1733:  dp->dir = fs->win + (ofs % ((UINT)512));
 18359   014D0E  0EFF               	movlw	255
 18360   014D10  1526               	andwf	dir_sdi@ofs& (0+255),w,b
 18361   014D12  6F2A               	movwf	??_dir_sdi& (0+255),b
 18362   014D14  0E01               	movlw	1
 18363   014D16  1527               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 18364   014D18  6F2B               	movwf	(??_dir_sdi+1)& (0+255),b
 18365   014D1A  512A               	movf	??_dir_sdi& (0+255),w,b
 18366   014D1C  253C               	addwf	dir_sdi@fs& (0+255),w,b
 18367   014D1E  6F2C               	movwf	(??_dir_sdi+2)& (0+255),b
 18368   014D20  512B               	movf	(??_dir_sdi+1)& (0+255),w,b
 18369   014D22  213D               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
 18370   014D24  6F2D               	movwf	(??_dir_sdi+3)& (0+255),b
 18371   014D26  0E30               	movlw	48
 18372   014D28  272C               	addwf	(??_dir_sdi+2)& (0+255),f,b
 18373   014D2A  0E00               	movlw	0
 18374   014D2C  232D               	addwfc	(??_dir_sdi+3)& (0+255),f,b
 18375   014D2E  EE20 F01A          	lfsr	2,26
 18376   014D32  5124               	movf	dir_sdi@dp& (0+255),w,b
 18377   014D34  26D9               	addwf	fsr2l,f,c
 18378   014D36  5125               	movf	(dir_sdi@dp+1)& (0+255),w,b
 18379   014D38  22DA               	addwfc	fsr2h,f,c
 18380   014D3A  C62C  F4DE         	movff	??_dir_sdi+2,postinc2
 18381   014D3E  C62D  F4DD         	movff	??_dir_sdi+3,postdec2
 18382                           
 18383                           ; BSR set to: 6
 18384                           ;fatfs/ff.c: 1735:  return FR_OK;
 18385   014D42  0E00               	movlw	0
 18386                           
 18387                           ; BSR set to: 6
 18388   014D44  0012               	return		;funcret
 18389   014D46                     __end_of_dir_sdi:
 18390                           	callstack 0
 18391                           
 18392 ;; *************** function _dir_next *****************
 18393 ;; Defined at:
 18394 ;;		line 1745 in file "fatfs/ff.c"
 18395 ;; Parameters:    Size  Location     Type
 18396 ;;  dp              2   72[BANK6 ] PTR struct .
 18397 ;;		 -> fsdir(40), f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), 
 18398 ;;		 -> f_unlink@sdj(40), f_unlink@dj(40), f_stat@dj(40), f_open@dj(40), 
 18399 ;;  stretch         2   74[BANK6 ] int 
 18400 ;; Auto vars:     Size  Location     Type
 18401 ;;  clst            4   94[BANK6 ] unsigned long 
 18402 ;;  ofs             4   88[BANK6 ] unsigned long 
 18403 ;;  fs              2   92[BANK6 ] PTR struct .
 18404 ;;		 -> fs(560), NULL(0), 
 18405 ;; Return value:  Size  Location     Type
 18406 ;;                  1    wreg      enum E275
 18407 ;; Registers used:
 18408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18409 ;; Tracked objects:
 18410 ;;		On entry : 3F/6
 18411 ;;		On exit  : 3C/4
 18412 ;;		Unchanged: 0/0
 18413 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18414 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18415 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18416 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18417 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18418 ;;Total ram usage:       26 bytes
 18419 ;; Hardware stack levels used: 1
 18420 ;; Hardware stack levels required when called: 15
 18421 ;; This function calls:
 18422 ;;		_clst2sect
 18423 ;;		_create_chain
 18424 ;;		_dir_clear
 18425 ;;		_get_fat
 18426 ;; This function is called by:
 18427 ;;		_dir_alloc
 18428 ;;		_dir_read
 18429 ;;		_dir_find
 18430 ;;		_f_readdir
 18431 ;; This function uses a non-reentrant model
 18432 ;;
 18433                           
 18434                           	psect	text23
 18435   013D66                     __ptext23:
 18436                           	callstack 0
 18437   013D66                     _dir_next:
 18438                           	callstack 108
 18439                           
 18440                           ; BSR set to: 6
 18441                           ;fatfs/ff.c: 1746:  DIR* dp,;fatfs/ff.c: 1747:  int stretch;fatfs/ff.c: 1749: {;fatfs/ff
      +                          .c: 1750:  DWORD ofs, clst;;fatfs/ff.c: 1751:  FATFS *fs = dp->obj.fs;
 18442                           
 18443                           ; BSR set to: 6
 18444                           ;incstack = 0
 18445   013D66  C648  F4D9         	movff	dir_next@dp,fsr2l
 18446   013D6A  C649  F4DA         	movff	dir_next@dp+1,fsr2h
 18447   013D6E  C4DE F65C          	movff	postinc2,dir_next@fs
 18448   013D72  C4DD F65D          	movff	postdec2,dir_next@fs+1
 18449                           
 18450                           ; BSR set to: 6
 18451                           ;fatfs/ff.c: 1754:  ofs = dp->dptr + 32;
 18452   013D76  EE20 F00E          	lfsr	2,14
 18453   013D7A  5148               	movf	dir_next@dp& (0+255),w,b
 18454   013D7C  26D9               	addwf	fsr2l,f,c
 18455   013D7E  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18456   013D80  22DA               	addwfc	fsr2h,f,c
 18457   013D82  C4DE F64C          	movff	postinc2,??_dir_next
 18458   013D86  C4DE F64D          	movff	postinc2,??_dir_next+1
 18459   013D8A  C4DE F64E          	movff	postinc2,??_dir_next+2
 18460   013D8E  C4DE F64F          	movff	postinc2,??_dir_next+3
 18461   013D92  0E20               	movlw	32
 18462   013D94  254C               	addwf	??_dir_next& (0+255),w,b
 18463   013D96  6F58               	movwf	dir_next@ofs& (0+255),b
 18464   013D98  0E00               	movlw	0
 18465   013D9A  214D               	addwfc	(??_dir_next+1)& (0+255),w,b
 18466   013D9C  6F59               	movwf	(dir_next@ofs+1)& (0+255),b
 18467   013D9E  0E00               	movlw	0
 18468   013DA0  214E               	addwfc	(??_dir_next+2)& (0+255),w,b
 18469   013DA2  6F5A               	movwf	(dir_next@ofs+2)& (0+255),b
 18470   013DA4  0E00               	movlw	0
 18471   013DA6  214F               	addwfc	(??_dir_next+3)& (0+255),w,b
 18472   013DA8  6F5B               	movwf	(dir_next@ofs+3)& (0+255),b
 18473                           
 18474                           ; BSR set to: 6
 18475                           
 18476                           ; BSR set to: 6
 18477                           
 18478                           ;fatfs/ff.c: 1755:  if (ofs >= (DWORD)((0 && fs->fs_type == 4) ? 0x10000000 : 0x200000))
      +                           dp->sect = 0;
 18479   013DAA  515B               	movf	(dir_next@ofs+3)& (0+255),w,b
 18480   013DAC  E104               	bnz	u12260
 18481   013DAE  0E20               	movlw	32
 18482   013DB0  5D5A               	subwf	(dir_next@ofs+2)& (0+255),w,b
 18483   013DB2  A0D8               	btfss	status,0,c
 18484   013DB4  D00A               	goto	l362
 18485   013DB6                     u12260:
 18486                           
 18487                           ; BSR set to: 6
 18488   013DB6  EE20 F016          	lfsr	2,22
 18489   013DBA  5148               	movf	dir_next@dp& (0+255),w,b
 18490   013DBC  26D9               	addwf	fsr2l,f,c
 18491   013DBE  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18492   013DC0  22DA               	addwfc	fsr2h,f,c
 18493   013DC2  6ADE               	clrf	postinc2,c
 18494   013DC4  6ADE               	clrf	postinc2,c
 18495   013DC6  6ADE               	clrf	postinc2,c
 18496   013DC8  6ADD               	clrf	postdec2,c
 18497   013DCA                     l362:
 18498                           
 18499                           ; BSR set to: 6
 18500                           ;fatfs/ff.c: 1756:  if (dp->sect == 0) return FR_NO_FILE;
 18501   013DCA  EE20 F016          	lfsr	2,22
 18502   013DCE  5148               	movf	dir_next@dp& (0+255),w,b
 18503   013DD0  26D9               	addwf	fsr2l,f,c
 18504   013DD2  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18505   013DD4  22DA               	addwfc	fsr2h,f,c
 18506   013DD6  50DE               	movf	postinc2,w,c
 18507   013DD8  10DE               	iorwf	postinc2,w,c
 18508   013DDA  10DE               	iorwf	postinc2,w,c
 18509   013DDC  10DE               	iorwf	postinc2,w,c
 18510   013DDE  A4D8               	btfss	status,2,c
 18511   013DE0  D002               	goto	l10317
 18512   013DE2                     u12270:
 18513                           
 18514                           ; BSR set to: 6
 18515   013DE2  0E04               	movlw	4
 18516   013DE4  0012               	return	
 18517   013DE6                     l10317:
 18518                           
 18519                           ; BSR set to: 6
 18520                           ;fatfs/ff.c: 1758:  if (ofs % ((UINT)512) == 0) {
 18521   013DE6  0EFF               	movlw	255
 18522   013DE8  1558               	andwf	dir_next@ofs& (0+255),w,b
 18523   013DEA  6F4C               	movwf	??_dir_next& (0+255),b
 18524   013DEC  0E01               	movlw	1
 18525   013DEE  1559               	andwf	(dir_next@ofs+1)& (0+255),w,b
 18526   013DF0  6F4D               	movwf	(??_dir_next+1)& (0+255),b
 18527   013DF2  0E00               	movlw	0
 18528   013DF4  155A               	andwf	(dir_next@ofs+2)& (0+255),w,b
 18529   013DF6  6F4E               	movwf	(??_dir_next+2)& (0+255),b
 18530   013DF8  0E00               	movlw	0
 18531   013DFA  155B               	andwf	(dir_next@ofs+3)& (0+255),w,b
 18532   013DFC  6F4F               	movwf	(??_dir_next+3)& (0+255),b
 18533   013DFE  514C               	movf	??_dir_next& (0+255),w,b
 18534   013E00  114D               	iorwf	(??_dir_next+1)& (0+255),w,b
 18535   013E02  114E               	iorwf	(??_dir_next+2)& (0+255),w,b
 18536   013E04  114F               	iorwf	(??_dir_next+3)& (0+255),w,b
 18537   013E06  A4D8               	btfss	status,2,c
 18538   013E08  D137               	goto	l10385
 18539                           
 18540                           ; BSR set to: 6
 18541                           ;fatfs/ff.c: 1759:   dp->sect++;
 18542   013E0A  EE20 F016          	lfsr	2,22
 18543   013E0E  5148               	movf	dir_next@dp& (0+255),w,b
 18544   013E10  26D9               	addwf	fsr2l,f,c
 18545   013E12  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18546   013E14  22DA               	addwfc	fsr2h,f,c
 18547   013E16  2ADE               	incf	postinc2,f,c
 18548   013E18  0E00               	movlw	0
 18549   013E1A  22DE               	addwfc	postinc2,f,c
 18550   013E1C  22DE               	addwfc	postinc2,f,c
 18551   013E1E  22DE               	addwfc	postinc2,f,c
 18552                           
 18553                           ;fatfs/ff.c: 1761:   if (dp->clust == 0) {
 18554   013E20  EE20 F012          	lfsr	2,18
 18555   013E24  5148               	movf	dir_next@dp& (0+255),w,b
 18556   013E26  26D9               	addwf	fsr2l,f,c
 18557   013E28  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18558   013E2A  22DA               	addwfc	fsr2h,f,c
 18559   013E2C  50DE               	movf	postinc2,w,c
 18560   013E2E  10DE               	iorwf	postinc2,w,c
 18561   013E30  10DE               	iorwf	postinc2,w,c
 18562   013E32  10DE               	iorwf	postinc2,w,c
 18563   013E34  A4D8               	btfss	status,2,c
 18564   013E36  D02C               	goto	l10329
 18565                           
 18566                           ; BSR set to: 6
 18567                           ;fatfs/ff.c: 1762:    if (ofs / 32 >= fs->n_rootdir) {
 18568   013E38  EE20 F008          	lfsr	2,8
 18569   013E3C  515C               	movf	dir_next@fs& (0+255),w,b
 18570   013E3E  26D9               	addwf	fsr2l,f,c
 18571   013E40  515D               	movf	(dir_next@fs+1)& (0+255),w,b
 18572   013E42  22DA               	addwfc	fsr2h,f,c
 18573   013E44  C4DE F64C          	movff	postinc2,??_dir_next
 18574   013E48  C4DD F64D          	movff	postdec2,??_dir_next+1
 18575   013E4C  514C               	movf	??_dir_next& (0+255),w,b
 18576   013E4E  6F4E               	movwf	(??_dir_next+2)& (0+255),b
 18577   013E50  514D               	movf	(??_dir_next+1)& (0+255),w,b
 18578   013E52  6F4F               	movwf	(??_dir_next+3)& (0+255),b
 18579   013E54  6B50               	clrf	(??_dir_next+4)& (0+255),b
 18580   013E56  6B51               	clrf	(??_dir_next+5)& (0+255),b
 18581   013E58  C658  F652         	movff	dir_next@ofs,??_dir_next+6
 18582   013E5C  C659  F653         	movff	dir_next@ofs+1,??_dir_next+7
 18583   013E60  C65A  F654         	movff	dir_next@ofs+2,??_dir_next+8
 18584   013E64  C65B  F655         	movff	dir_next@ofs+3,??_dir_next+9
 18585   013E68  0E06               	movlw	6
 18586   013E6A  D005               	goto	u12300
 18587   013E6C                     u12305:
 18588   013E6C  90D8               	bcf	status,0,c
 18589   013E6E  3355               	rrcf	(??_dir_next+9)& (0+255),f,b
 18590   013E70  3354               	rrcf	(??_dir_next+8)& (0+255),f,b
 18591   013E72  3353               	rrcf	(??_dir_next+7)& (0+255),f,b
 18592   013E74  3352               	rrcf	(??_dir_next+6)& (0+255),f,b
 18593   013E76                     u12300:
 18594   013E76  2EE8               	decfsz	wreg,f,c
 18595   013E78  D7F9               	goto	u12305
 18596   013E7A  514E               	movf	(??_dir_next+2)& (0+255),w,b
 18597   013E7C  5D52               	subwf	(??_dir_next+6)& (0+255),w,b
 18598   013E7E  514F               	movf	(??_dir_next+3)& (0+255),w,b
 18599   013E80  5953               	subwfb	(??_dir_next+7)& (0+255),w,b
 18600   013E82  5150               	movf	(??_dir_next+4)& (0+255),w,b
 18601   013E84  5954               	subwfb	(??_dir_next+8)& (0+255),w,b
 18602   013E86  5151               	movf	(??_dir_next+5)& (0+255),w,b
 18603   013E88  5955               	subwfb	(??_dir_next+9)& (0+255),w,b
 18604   013E8A  A0D8               	btfss	status,0,c
 18605   013E8C  D0F5               	goto	l10385
 18606   013E8E  D079               	goto	u12370
 18607   013E90                     l10329:
 18608                           
 18609                           ; BSR set to: 6
 18610                           ;fatfs/ff.c: 1767:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0) {
 18611   013E90  EE20 F00A          	lfsr	2,10
 18612   013E94  515C               	movf	dir_next@fs& (0+255),w,b
 18613   013E96  26D9               	addwf	fsr2l,f,c
 18614   013E98  515D               	movf	(dir_next@fs+1)& (0+255),w,b
 18615   013E9A  22DA               	addwfc	fsr2h,f,c
 18616   013E9C  C4DE F64C          	movff	postinc2,??_dir_next
 18617   013EA0  C4DD F64D          	movff	postdec2,??_dir_next+1
 18618   013EA4  0EFF               	movlw	255
 18619   013EA6  254C               	addwf	??_dir_next& (0+255),w,b
 18620   013EA8  6F4E               	movwf	(??_dir_next+2)& (0+255),b
 18621   013EAA  0EFF               	movlw	255
 18622   013EAC  214D               	addwfc	(??_dir_next+1)& (0+255),w,b
 18623   013EAE  6F4F               	movwf	(??_dir_next+3)& (0+255),b
 18624   013EB0  C658  F650         	movff	dir_next@ofs,??_dir_next+4
 18625   013EB4  C659  F651         	movff	dir_next@ofs+1,??_dir_next+5
 18626   013EB8  C65A  F652         	movff	dir_next@ofs+2,??_dir_next+6
 18627   013EBC  C65B  F653         	movff	dir_next@ofs+3,??_dir_next+7
 18628   013EC0  0E0A               	movlw	10
 18629   013EC2  D005               	goto	u12320
 18630   013EC4                     u12325:
 18631   013EC4  90D8               	bcf	status,0,c
 18632   013EC6  3353               	rrcf	(??_dir_next+7)& (0+255),f,b
 18633   013EC8  3352               	rrcf	(??_dir_next+6)& (0+255),f,b
 18634   013ECA  3351               	rrcf	(??_dir_next+5)& (0+255),f,b
 18635   013ECC  3350               	rrcf	(??_dir_next+4)& (0+255),f,b
 18636   013ECE                     u12320:
 18637   013ECE  2EE8               	decfsz	wreg,f,c
 18638   013ED0  D7F9               	goto	u12325
 18639   013ED2  514E               	movf	(??_dir_next+2)& (0+255),w,b
 18640   013ED4  1550               	andwf	(??_dir_next+4)& (0+255),w,b
 18641   013ED6  6F54               	movwf	(??_dir_next+8)& (0+255),b
 18642   013ED8  514F               	movf	(??_dir_next+3)& (0+255),w,b
 18643   013EDA  1551               	andwf	(??_dir_next+5)& (0+255),w,b
 18644   013EDC  6F55               	movwf	(??_dir_next+9)& (0+255),b
 18645   013EDE  0E00               	movlw	0
 18646   013EE0  1552               	andwf	(??_dir_next+6)& (0+255),w,b
 18647   013EE2  6F56               	movwf	(??_dir_next+10)& (0+255),b
 18648   013EE4  0E00               	movlw	0
 18649   013EE6  1553               	andwf	(??_dir_next+7)& (0+255),w,b
 18650   013EE8  6F57               	movwf	(??_dir_next+11)& (0+255),b
 18651   013EEA  5154               	movf	(??_dir_next+8)& (0+255),w,b
 18652   013EEC  1155               	iorwf	(??_dir_next+9)& (0+255),w,b
 18653   013EEE  1156               	iorwf	(??_dir_next+10)& (0+255),w,b
 18654   013EF0  1157               	iorwf	(??_dir_next+11)& (0+255),w,b
 18655   013EF2  A4D8               	btfss	status,2,c
 18656   013EF4  D0C1               	goto	l10385
 18657                           
 18658                           ; BSR set to: 6
 18659                           ;fatfs/ff.c: 1768:     clst = get_fat(&dp->obj, dp->clust);
 18660   013EF6  C648  F60A         	movff	dir_next@dp,get_fat@obj
 18661   013EFA  C649  F60B         	movff	dir_next@dp+1,get_fat@obj+1
 18662   013EFE  EE20 F012          	lfsr	2,18
 18663   013F02  5148               	movf	dir_next@dp& (0+255),w,b
 18664   013F04  26D9               	addwf	fsr2l,f,c
 18665   013F06  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18666   013F08  22DA               	addwfc	fsr2h,f,c
 18667   013F0A  C4DE F60C          	movff	postinc2,get_fat@clst
 18668   013F0E  C4DE F60D          	movff	postinc2,get_fat@clst+1
 18669   013F12  C4DE F60E          	movff	postinc2,get_fat@clst+2
 18670   013F16  C4DE F60F          	movff	postinc2,get_fat@clst+3
 18671   013F1A  EC66  F0A0         	call	_get_fat	;wreg free
 18672   013F1E  C60A  F65E         	movff	?_get_fat,dir_next@clst
 18673   013F22  C60B  F65F         	movff	?_get_fat+1,dir_next@clst+1
 18674   013F26  C60C  F660         	movff	?_get_fat+2,dir_next@clst+2
 18675   013F2A  C60D  F661         	movff	?_get_fat+3,dir_next@clst+3
 18676                           
 18677                           ;fatfs/ff.c: 1769:     if (clst <= 1) return FR_INT_ERR;
 18678   013F2E  0106               	movlb	6	; () banked
 18679   013F30  5161               	movf	(dir_next@clst+3)& (0+255),w,b
 18680   013F32  1160               	iorwf	(dir_next@clst+2)& (0+255),w,b
 18681   013F34  115F               	iorwf	(dir_next@clst+1)& (0+255),w,b
 18682   013F36  E106               	bnz	l10339
 18683   013F38  0E02               	movlw	2
 18684   013F3A  5D5E               	subwf	dir_next@clst& (0+255),w,b
 18685   013F3C  B0D8               	btfsc	status,0,c
 18686   013F3E  D002               	goto	l10339
 18687   013F40                     u12340:
 18688                           
 18689                           ; BSR set to: 6
 18690   013F40  0E02               	movlw	2
 18691   013F42  0012               	return	
 18692   013F44                     l10339:
 18693                           
 18694                           ; BSR set to: 6
 18695                           ;fatfs/ff.c: 1770:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 18696   013F44  295E               	incf	dir_next@clst& (0+255),w,b
 18697   013F46  E109               	bnz	l10345
 18698   013F48  295F               	incf	(dir_next@clst+1)& (0+255),w,b
 18699   013F4A  E107               	bnz	l10345
 18700   013F4C  2960               	incf	(dir_next@clst+2)& (0+255),w,b
 18701   013F4E  E105               	bnz	l10345
 18702   013F50  2961               	incf	(dir_next@clst+3)& (0+255),w,b
 18703   013F52  A4D8               	btfss	status,2,c
 18704   013F54  D002               	goto	l10345
 18705   013F56                     u12350:
 18706   013F56  0E01               	movlw	1
 18707   013F58  0012               	return	
 18708   013F5A                     l10345:
 18709                           
 18710                           ; BSR set to: 6
 18711                           ;fatfs/ff.c: 1771:     if (clst >= fs->n_fatent) {
 18712   013F5A  EE20 F014          	lfsr	2,20
 18713   013F5E  515C               	movf	dir_next@fs& (0+255),w,b
 18714   013F60  26D9               	addwf	fsr2l,f,c
 18715   013F62  515D               	movf	(dir_next@fs+1)& (0+255),w,b
 18716   013F64  22DA               	addwfc	fsr2h,f,c
 18717   013F66  50DE               	movf	postinc2,w,c
 18718   013F68  5D5E               	subwf	dir_next@clst& (0+255),w,b
 18719   013F6A  50DE               	movf	postinc2,w,c
 18720   013F6C  595F               	subwfb	(dir_next@clst+1)& (0+255),w,b
 18721   013F6E  50DE               	movf	postinc2,w,c
 18722   013F70  5960               	subwfb	(dir_next@clst+2)& (0+255),w,b
 18723   013F72  50DE               	movf	postinc2,w,c
 18724   013F74  5961               	subwfb	(dir_next@clst+3)& (0+255),w,b
 18725   013F76  A0D8               	btfss	status,0,c
 18726   013F78  D053               	goto	l378
 18727                           
 18728                           ; BSR set to: 6
 18729                           ;fatfs/ff.c: 1773:      if (!stretch) {
 18730   013F7A  514A               	movf	dir_next@stretch& (0+255),w,b
 18731   013F7C  114B               	iorwf	(dir_next@stretch+1)& (0+255),w,b
 18732   013F7E  A4D8               	btfss	status,2,c
 18733   013F80  D00B               	goto	l10355
 18734   013F82                     u12370:
 18735                           
 18736                           ; BSR set to: 6
 18737                           ;fatfs/ff.c: 1774:       dp->sect = 0; return FR_NO_FILE;
 18738   013F82  EE20 F016          	lfsr	2,22
 18739   013F86  5148               	movf	dir_next@dp& (0+255),w,b
 18740   013F88  26D9               	addwf	fsr2l,f,c
 18741   013F8A  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18742   013F8C  22DA               	addwfc	fsr2h,f,c
 18743   013F8E  6ADE               	clrf	postinc2,c
 18744   013F90  6ADE               	clrf	postinc2,c
 18745   013F92  6ADE               	clrf	postinc2,c
 18746   013F94  6ADD               	clrf	postdec2,c
 18747   013F96  D725               	goto	u12270
 18748   013F98                     l10355:
 18749                           
 18750                           ; BSR set to: 6
 18751                           ;fatfs/ff.c: 1776:      clst = create_chain(&dp->obj, dp->clust);
 18752   013F98  C648  F62B         	movff	dir_next@dp,create_chain@obj
 18753   013F9C  C649  F62C         	movff	dir_next@dp+1,create_chain@obj+1
 18754   013FA0  EE20 F012          	lfsr	2,18
 18755   013FA4  5148               	movf	dir_next@dp& (0+255),w,b
 18756   013FA6  26D9               	addwf	fsr2l,f,c
 18757   013FA8  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18758   013FAA  22DA               	addwfc	fsr2h,f,c
 18759   013FAC  C4DE F62D          	movff	postinc2,create_chain@clst
 18760   013FB0  C4DE F62E          	movff	postinc2,create_chain@clst+1
 18761   013FB4  C4DE F62F          	movff	postinc2,create_chain@clst+2
 18762   013FB8  C4DE F630          	movff	postinc2,create_chain@clst+3
 18763   013FBC  EC94  F098         	call	_create_chain	;wreg free
 18764   013FC0  C62B  F65E         	movff	?_create_chain,dir_next@clst
 18765   013FC4  C62C  F65F         	movff	?_create_chain+1,dir_next@clst+1
 18766   013FC8  C62D  F660         	movff	?_create_chain+2,dir_next@clst+2
 18767   013FCC  C62E  F661         	movff	?_create_chain+3,dir_next@clst+3
 18768                           
 18769                           ; BSR set to: 6
 18770                           ;fatfs/ff.c: 1777:      if (clst == 0) return FR_DENIED;
 18771   013FD0  515E               	movf	dir_next@clst& (0+255),w,b
 18772   013FD2  115F               	iorwf	(dir_next@clst+1)& (0+255),w,b
 18773   013FD4  1160               	iorwf	(dir_next@clst+2)& (0+255),w,b
 18774   013FD6  1161               	iorwf	(dir_next@clst+3)& (0+255),w,b
 18775   013FD8  A4D8               	btfss	status,2,c
 18776   013FDA  D002               	goto	l10363
 18777                           
 18778                           ; BSR set to: 6
 18779   013FDC  0E07               	movlw	7
 18780   013FDE  0012               	return	
 18781   013FE0                     l10363:
 18782                           
 18783                           ; BSR set to: 6
 18784                           ;fatfs/ff.c: 1778:      if (clst == 1) return FR_INT_ERR;
 18785   013FE0  055E               	decf	dir_next@clst& (0+255),w,b
 18786   013FE2  115F               	iorwf	(dir_next@clst+1)& (0+255),w,b
 18787   013FE4  1160               	iorwf	(dir_next@clst+2)& (0+255),w,b
 18788   013FE6  1161               	iorwf	(dir_next@clst+3)& (0+255),w,b
 18789   013FE8  B4D8               	btfsc	status,2,c
 18790   013FEA  D7AA               	goto	u12340
 18791                           
 18792                           ; BSR set to: 6
 18793                           ;fatfs/ff.c: 1779:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 18794   013FEC  295E               	incf	dir_next@clst& (0+255),w,b
 18795   013FEE  E107               	bnz	l10375
 18796   013FF0  295F               	incf	(dir_next@clst+1)& (0+255),w,b
 18797   013FF2  E105               	bnz	l10375
 18798   013FF4  2960               	incf	(dir_next@clst+2)& (0+255),w,b
 18799   013FF6  E103               	bnz	l10375
 18800   013FF8  2961               	incf	(dir_next@clst+3)& (0+255),w,b
 18801   013FFA  B4D8               	btfsc	status,2,c
 18802   013FFC  D7AC               	goto	u12350
 18803   013FFE                     l10375:
 18804                           
 18805                           ; BSR set to: 6
 18806                           ;fatfs/ff.c: 1780:      if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;
 18807   013FFE  C65C  F600         	movff	dir_next@fs,dir_clear@fs
 18808   014002  C65D  F601         	movff	dir_next@fs+1,dir_clear@fs+1
 18809   014006  C65E  F602         	movff	dir_next@clst,dir_clear@clst
 18810   01400A  C65F  F603         	movff	dir_next@clst+1,dir_clear@clst+1
 18811   01400E  C660  F604         	movff	dir_next@clst+2,dir_clear@clst+2
 18812   014012  C661  F605         	movff	dir_next@clst+3,dir_clear@clst+3
 18813   014016  ECD7  F0BB         	call	_dir_clear	;wreg free
 18814   01401A  0900               	iorlw	0
 18815   01401C  A4D8               	btfss	status,2,c
 18816   01401E  D79B               	goto	u12350
 18817   014020                     l378:
 18818                           
 18819                           ;fatfs/ff.c: 1787:     dp->clust = clst;
 18820   014020  0106               	movlb	6	; () banked
 18821   014022  EE20 F012          	lfsr	2,18
 18822   014026  5148               	movf	dir_next@dp& (0+255),w,b
 18823   014028  26D9               	addwf	fsr2l,f,c
 18824   01402A  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18825   01402C  22DA               	addwfc	fsr2h,f,c
 18826   01402E  C65E  F4DE         	movff	dir_next@clst,postinc2
 18827   014032  C65F  F4DE         	movff	dir_next@clst+1,postinc2
 18828   014036  C660  F4DE         	movff	dir_next@clst+2,postinc2
 18829   01403A  C661  F4DE         	movff	dir_next@clst+3,postinc2
 18830                           
 18831                           ; BSR set to: 6
 18832                           ;fatfs/ff.c: 1788:     dp->sect = clst2sect(fs, clst);
 18833   01403E  C65C  F50D         	movff	dir_next@fs,clst2sect@fs
 18834   014042  C65D  F50E         	movff	dir_next@fs+1,clst2sect@fs+1
 18835   014046  C65E  F50F         	movff	dir_next@clst,clst2sect@clst
 18836   01404A  C65F  F510         	movff	dir_next@clst+1,clst2sect@clst+1
 18837   01404E  C660  F511         	movff	dir_next@clst+2,clst2sect@clst+2
 18838   014052  C661  F512         	movff	dir_next@clst+3,clst2sect@clst+3
 18839   014056  ECBA  F0C3         	call	_clst2sect	;wreg free
 18840   01405A  0106               	movlb	6	; () banked
 18841   01405C  EE20 F016          	lfsr	2,22
 18842   014060  5148               	movf	dir_next@dp& (0+255),w,b
 18843   014062  26D9               	addwf	fsr2l,f,c
 18844   014064  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18845   014066  22DA               	addwfc	fsr2h,f,c
 18846   014068  C50D  F4DE         	movff	?_clst2sect,postinc2
 18847   01406C  C50E  F4DE         	movff	?_clst2sect+1,postinc2
 18848   014070  C50F  F4DE         	movff	?_clst2sect+2,postinc2
 18849   014074  C510  F4DE         	movff	?_clst2sect+3,postinc2
 18850   014078                     l10385:
 18851                           
 18852                           ; BSR set to: 6
 18853                           ;fatfs/ff.c: 1792:  dp->dptr = ofs;
 18854   014078  EE20 F00E          	lfsr	2,14
 18855   01407C  5148               	movf	dir_next@dp& (0+255),w,b
 18856   01407E  26D9               	addwf	fsr2l,f,c
 18857   014080  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18858   014082  22DA               	addwfc	fsr2h,f,c
 18859   014084  C658  F4DE         	movff	dir_next@ofs,postinc2
 18860   014088  C659  F4DE         	movff	dir_next@ofs+1,postinc2
 18861   01408C  C65A  F4DE         	movff	dir_next@ofs+2,postinc2
 18862   014090  C65B  F4DE         	movff	dir_next@ofs+3,postinc2
 18863                           
 18864                           ; BSR set to: 6
 18865                           ;fatfs/ff.c: 1793:  dp->dir = fs->win + ofs % ((UINT)512);
 18866   014094  0EFF               	movlw	255
 18867   014096  1558               	andwf	dir_next@ofs& (0+255),w,b
 18868   014098  6F4C               	movwf	??_dir_next& (0+255),b
 18869   01409A  0E01               	movlw	1
 18870   01409C  1559               	andwf	(dir_next@ofs+1)& (0+255),w,b
 18871   01409E  6F4D               	movwf	(??_dir_next+1)& (0+255),b
 18872   0140A0  514C               	movf	??_dir_next& (0+255),w,b
 18873   0140A2  255C               	addwf	dir_next@fs& (0+255),w,b
 18874   0140A4  6F4E               	movwf	(??_dir_next+2)& (0+255),b
 18875   0140A6  514D               	movf	(??_dir_next+1)& (0+255),w,b
 18876   0140A8  215D               	addwfc	(dir_next@fs+1)& (0+255),w,b
 18877   0140AA  6F4F               	movwf	(??_dir_next+3)& (0+255),b
 18878   0140AC  0E30               	movlw	48
 18879   0140AE  274E               	addwf	(??_dir_next+2)& (0+255),f,b
 18880   0140B0  0E00               	movlw	0
 18881   0140B2  234F               	addwfc	(??_dir_next+3)& (0+255),f,b
 18882   0140B4  EE20 F01A          	lfsr	2,26
 18883   0140B8  5148               	movf	dir_next@dp& (0+255),w,b
 18884   0140BA  26D9               	addwf	fsr2l,f,c
 18885   0140BC  5149               	movf	(dir_next@dp+1)& (0+255),w,b
 18886   0140BE  22DA               	addwfc	fsr2h,f,c
 18887   0140C0  C64E  F4DE         	movff	??_dir_next+2,postinc2
 18888   0140C4  C64F  F4DD         	movff	??_dir_next+3,postdec2
 18889                           
 18890                           ; BSR set to: 6
 18891                           ;fatfs/ff.c: 1795:  return FR_OK;
 18892   0140C8  0E00               	movlw	0
 18893   0140CA  0012               	return		;funcret
 18894   0140CC                     __end_of_dir_next:
 18895                           	callstack 0
 18896                           
 18897 ;; *************** function _dir_clear *****************
 18898 ;; Defined at:
 18899 ;;		line 1658 in file "fatfs/ff.c"
 18900 ;; Parameters:    Size  Location     Type
 18901 ;;  fs              2    0[BANK6 ] PTR struct .
 18902 ;;		 -> fs(560), NULL(0), 
 18903 ;;  clst            4    2[BANK6 ] unsigned long 
 18904 ;; Auto vars:     Size  Location     Type
 18905 ;;  sect            4   10[BANK6 ] unsigned long 
 18906 ;;  n               2   16[BANK6 ] unsigned int 
 18907 ;;  szb             2   14[BANK6 ] unsigned int 
 18908 ;;  ibuf            2    8[BANK6 ] PTR unsigned char 
 18909 ;;		 -> fs$win(512), fs(560), NULL(0), 
 18910 ;; Return value:  Size  Location     Type
 18911 ;;                  1    wreg      enum E275
 18912 ;; Registers used:
 18913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18914 ;; Tracked objects:
 18915 ;;		On entry : 3F/6
 18916 ;;		On exit  : 3C/4
 18917 ;;		Unchanged: 0/0
 18918 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18919 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18920 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18921 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18922 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18923 ;;Total ram usage:       18 bytes
 18924 ;; Hardware stack levels used: 1
 18925 ;; Hardware stack levels required when called: 12
 18926 ;; This function calls:
 18927 ;;		_clst2sect
 18928 ;;		_disk_write
 18929 ;;		_memset
 18930 ;;		_sync_window
 18931 ;; This function is called by:
 18932 ;;		_dir_next
 18933 ;; This function uses a non-reentrant model
 18934 ;;
 18935                           
 18936                           	psect	text24
 18937   0177AE                     __ptext24:
 18938                           	callstack 0
 18939   0177AE                     _dir_clear:
 18940                           	callstack 110
 18941                           
 18942                           ; BSR set to: 6
 18943                           ;fatfs/ff.c: 1659:  FATFS *fs,;fatfs/ff.c: 1660:  DWORD clst;fatfs/ff.c: 1662: {;fatfs/f
      +                          f.c: 1663:  LBA_t sect;;fatfs/ff.c: 1664:  UINT n, szb;;fatfs/ff.c: 1665:  BYTE *ibuf;;f
      +                          atfs/ff.c: 1668:  if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 18944                           
 18945                           ;incstack = 0
 18946   0177AE  C600  F5ED         	movff	dir_clear@fs,sync_window@fs
 18947   0177B2  C601  F5EE         	movff	dir_clear@fs+1,sync_window@fs+1
 18948   0177B6  ECED  F0B7         	call	_sync_window	;wreg free
 18949   0177BA  0900               	iorlw	0
 18950   0177BC  B4D8               	btfsc	status,2,c
 18951   0177BE  D002               	goto	l10115
 18952                           
 18953                           ; BSR set to: 5
 18954   0177C0  0E01               	movlw	1
 18955   0177C2  0012               	return	
 18956   0177C4                     l10115:
 18957                           
 18958                           ; BSR set to: 5
 18959                           ;fatfs/ff.c: 1669:  sect = clst2sect(fs, clst);
 18960   0177C4  C600  F50D         	movff	dir_clear@fs,clst2sect@fs
 18961   0177C8  C601  F50E         	movff	dir_clear@fs+1,clst2sect@fs+1
 18962   0177CC  C602  F50F         	movff	dir_clear@clst,clst2sect@clst
 18963   0177D0  C603  F510         	movff	dir_clear@clst+1,clst2sect@clst+1
 18964   0177D4  C604  F511         	movff	dir_clear@clst+2,clst2sect@clst+2
 18965   0177D8  C605  F512         	movff	dir_clear@clst+3,clst2sect@clst+3
 18966   0177DC  ECBA  F0C3         	call	_clst2sect	;wreg free
 18967   0177E0  C50D  F60A         	movff	?_clst2sect,dir_clear@sect
 18968   0177E4  C50E  F60B         	movff	?_clst2sect+1,dir_clear@sect+1
 18969   0177E8  C50F  F60C         	movff	?_clst2sect+2,dir_clear@sect+2
 18970   0177EC  C510  F60D         	movff	?_clst2sect+3,dir_clear@sect+3
 18971                           
 18972                           ;fatfs/ff.c: 1670:  fs->winsect = sect;
 18973   0177F0  0106               	movlb	6	; () banked
 18974   0177F2  EE20 F02C          	lfsr	2,44
 18975   0177F6  5100               	movf	dir_clear@fs& (0+255),w,b
 18976   0177F8  26D9               	addwf	fsr2l,f,c
 18977   0177FA  5101               	movf	(dir_clear@fs+1)& (0+255),w,b
 18978   0177FC  22DA               	addwfc	fsr2h,f,c
 18979   0177FE  C60A  F4DE         	movff	dir_clear@sect,postinc2
 18980   017802  C60B  F4DE         	movff	dir_clear@sect+1,postinc2
 18981   017806  C60C  F4DE         	movff	dir_clear@sect+2,postinc2
 18982   01780A  C60D  F4DE         	movff	dir_clear@sect+3,postinc2
 18983                           
 18984                           ; BSR set to: 6
 18985                           ;fatfs/ff.c: 1671:  memset(fs->win, 0, sizeof fs->win);
 18986   01780E  0E30               	movlw	48
 18987   017810  2500               	addwf	dir_clear@fs& (0+255),w,b
 18988   017812  6E01               	movwf	memset@dest^(0+1280),c
 18989   017814  0E00               	movlw	0
 18990   017816  2101               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 18991   017818  6E02               	movwf	(memset@dest+1)^(0+1280),c
 18992   01781A  0E00               	movlw	0
 18993   01781C  6E04               	movwf	(memset@c+1)^(0+1280),c
 18994   01781E  0E00               	movlw	0
 18995   017820  6E03               	movwf	memset@c^(0+1280),c
 18996   017822  0E02               	movlw	2
 18997   017824  6E06               	movwf	(memset@n+1)^(0+1280),c
 18998   017826  0E00               	movlw	0
 18999   017828  6E05               	movwf	memset@n^(0+1280),c
 19000   01782A  ECE7  F0CE         	call	_memset	;wreg free
 19001                           
 19002                           ; BSR set to: 6
 19003                           ;fatfs/ff.c: 1682:  {;fatfs/ff.c: 1683:   ibuf = fs->win; szb = 1;
 19004   01782E  0E30               	movlw	48
 19005   017830  2500               	addwf	dir_clear@fs& (0+255),w,b
 19006   017832  6F08               	movwf	dir_clear@ibuf& (0+255),b
 19007   017834  0E00               	movlw	0
 19008   017836  2101               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 19009   017838  6F09               	movwf	(dir_clear@ibuf+1)& (0+255),b
 19010                           
 19011                           ; BSR set to: 6
 19012   01783A  0E00               	movlw	0
 19013   01783C  6F0F               	movwf	(dir_clear@szb+1)& (0+255),b
 19014   01783E  0E01               	movlw	1
 19015   017840  6F0E               	movwf	dir_clear@szb& (0+255),b
 19016                           
 19017                           ; BSR set to: 6
 19018                           ;fatfs/ff.c: 1684:   for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, s
      +                          zb) == RES_OK; n += szb) ;
 19019   017842  0E00               	movlw	0
 19020   017844  6F11               	movwf	(dir_clear@n+1)& (0+255),b
 19021   017846  0E00               	movlw	0
 19022   017848  6F10               	movwf	dir_clear@n& (0+255),b
 19023   01784A  D005               	goto	l10129
 19024   01784C                     l10127:
 19025                           
 19026                           ; BSR set to: 5
 19027   01784C  0106               	movlb	6	; () banked
 19028   01784E  510E               	movf	dir_clear@szb& (0+255),w,b
 19029   017850  2710               	addwf	dir_clear@n& (0+255),f,b
 19030   017852  510F               	movf	(dir_clear@szb+1)& (0+255),w,b
 19031   017854  2311               	addwfc	(dir_clear@n+1)& (0+255),f,b
 19032   017856                     l10129:
 19033                           
 19034                           ; BSR set to: 6
 19035   017856  EE20 F00A          	lfsr	2,10
 19036   01785A  5100               	movf	dir_clear@fs& (0+255),w,b
 19037   01785C  26D9               	addwf	fsr2l,f,c
 19038   01785E  5101               	movf	(dir_clear@fs+1)& (0+255),w,b
 19039   017860  22DA               	addwfc	fsr2h,f,c
 19040   017862  50DE               	movf	postinc2,w,c
 19041   017864  5D10               	subwf	dir_clear@n& (0+255),w,b
 19042   017866  50DE               	movf	postinc2,w,c
 19043   017868  5911               	subwfb	(dir_clear@n+1)& (0+255),w,b
 19044   01786A  B0D8               	btfsc	status,0,c
 19045   01786C  D028               	goto	u11890
 19046                           
 19047                           ; BSR set to: 6
 19048   01786E  C608  F5E2         	movff	dir_clear@ibuf,disk_write@buff
 19049   017872  C609  F5E3         	movff	dir_clear@ibuf+1,disk_write@buff+1
 19050   017876  5110               	movf	dir_clear@n& (0+255),w,b
 19051   017878  250A               	addwf	dir_clear@sect& (0+255),w,b
 19052   01787A  0105               	movlb	5	; () banked
 19053   01787C  6FE4               	movwf	disk_write@sector& (0+255),b
 19054   01787E  0106               	movlb	6	; () banked
 19055   017880  5111               	movf	(dir_clear@n+1)& (0+255),w,b
 19056   017882  210B               	addwfc	(dir_clear@sect+1)& (0+255),w,b
 19057   017884  0105               	movlb	5	; () banked
 19058   017886  6FE5               	movwf	(disk_write@sector+1)& (0+255),b
 19059   017888  0E00               	movlw	0
 19060   01788A  0106               	movlb	6	; () banked
 19061   01788C  210C               	addwfc	(dir_clear@sect+2)& (0+255),w,b
 19062   01788E  0105               	movlb	5	; () banked
 19063   017890  6FE6               	movwf	(disk_write@sector+2)& (0+255),b
 19064   017892  0E00               	movlw	0
 19065   017894  0106               	movlb	6	; () banked
 19066   017896  210D               	addwfc	(dir_clear@sect+3)& (0+255),w,b
 19067   017898  0105               	movlb	5	; () banked
 19068   01789A  6FE7               	movwf	(disk_write@sector+3)& (0+255),b
 19069   01789C  C60E  F5E8         	movff	dir_clear@szb,disk_write@count
 19070   0178A0  C60F  F5E9         	movff	dir_clear@szb+1,disk_write@count+1
 19071   0178A4  0106               	movlb	6	; () banked
 19072   0178A6  EE20 F001          	lfsr	2,1
 19073   0178AA  5100               	movf	dir_clear@fs& (0+255),w,b
 19074   0178AC  26D9               	addwf	fsr2l,f,c
 19075   0178AE  5101               	movf	(dir_clear@fs+1)& (0+255),w,b
 19076   0178B0  22DA               	addwfc	fsr2h,f,c
 19077   0178B2  50DF               	movf	indf2,w,c
 19078   0178B4  EC0F  F0C9         	call	_disk_write
 19079   0178B8  0900               	iorlw	0
 19080   0178BA  B4D8               	btfsc	status,2,c
 19081   0178BC  D7C7               	goto	l10127
 19082   0178BE                     u11890:
 19083                           
 19084                           ;fatfs/ff.c: 1685:  };fatfs/ff.c: 1686:  return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
 19085   0178BE  0106               	movlb	6	; () banked
 19086   0178C0  EE20 F00A          	lfsr	2,10
 19087   0178C4  5100               	movf	dir_clear@fs& (0+255),w,b
 19088   0178C6  26D9               	addwf	fsr2l,f,c
 19089   0178C8  5101               	movf	(dir_clear@fs+1)& (0+255),w,b
 19090   0178CA  22DA               	addwfc	fsr2h,f,c
 19091   0178CC  5110               	movf	dir_clear@n& (0+255),w,b
 19092   0178CE  18DE               	xorwf	postinc2,w,c
 19093   0178D0  E104               	bnz	u11901
 19094   0178D2  5111               	movf	(dir_clear@n+1)& (0+255),w,b
 19095   0178D4  18DE               	xorwf	postinc2,w,c
 19096   0178D6  B4D8               	btfsc	status,2,c
 19097   0178D8  D002               	goto	u11900
 19098   0178DA                     u11901:
 19099   0178DA  0E01               	movlw	1
 19100   0178DC  0012               	return	
 19101   0178DE                     u11900:
 19102   0178DE  0E00               	movlw	0
 19103   0178E0  0012               	return		;funcret
 19104   0178E2                     __end_of_dir_clear:
 19105                           	callstack 0
 19106                           
 19107 ;; *************** function _f_closedir *****************
 19108 ;; Defined at:
 19109 ;;		line 4663 in file "fatfs/ff.c"
 19110 ;; Parameters:    Size  Location     Type
 19111 ;;  dp              2   81[BANK5 ] PTR struct .
 19112 ;;		 -> fsdir(40), 
 19113 ;; Auto vars:     Size  Location     Type
 19114 ;;  fs              2   83[BANK5 ] PTR struct .
 19115 ;;		 -> fs(560), NULL(0), 
 19116 ;;  res             1   85[BANK5 ] enum E275
 19117 ;; Return value:  Size  Location     Type
 19118 ;;                  1    wreg      enum E275
 19119 ;; Registers used:
 19120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19121 ;; Tracked objects:
 19122 ;;		On entry : 3F/5
 19123 ;;		On exit  : 3F/5
 19124 ;;		Unchanged: 0/0
 19125 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19127 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19129 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19130 ;;Total ram usage:        5 bytes
 19131 ;; Hardware stack levels used: 1
 19132 ;; Hardware stack levels required when called: 10
 19133 ;; This function calls:
 19134 ;;		_validate
 19135 ;; This function is called by:
 19136 ;;		_menu_select
 19137 ;; This function uses a non-reentrant model
 19138 ;;
 19139                           
 19140                           	psect	text25
 19141   019DFA                     __ptext25:
 19142                           	callstack 0
 19143   019DFA                     _f_closedir:
 19144                           	callstack 115
 19145                           
 19146                           ; BSR set to: 5
 19147                           ;fatfs/ff.c: 4664:  DIR *dp;fatfs/ff.c: 4666: {;fatfs/ff.c: 4667:  FRESULT res;;fatfs/ff
      +                          .c: 4668:  FATFS *fs;;fatfs/ff.c: 4671:  res = validate(&dp->obj, &fs);
 19148                           
 19149                           ;incstack = 0
 19150   019DFA  C5B1  F5A6         	movff	f_closedir@dp,validate@obj
 19151   019DFE  C5B2  F5A7         	movff	f_closedir@dp+1,validate@obj+1
 19152   019E02  0EB3               	movlw	low f_closedir@fs
 19153   019E04  6FA8               	movwf	validate@rfs& (0+255),b
 19154   019E06  0E05               	movlw	high f_closedir@fs
 19155   019E08  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 19156   019E0A  EC59  F0C3         	call	_validate	;wreg free
 19157   019E0E  6FB5               	movwf	f_closedir@res& (0+255),b
 19158                           
 19159                           ; BSR set to: 5
 19160                           ;fatfs/ff.c: 4672:  if (res == FR_OK) {
 19161   019E10  51B5               	movf	f_closedir@res& (0+255),w,b
 19162   019E12  A4D8               	btfss	status,2,c
 19163   019E14  0012               	return	
 19164                           
 19165                           ; BSR set to: 5
 19166                           ;fatfs/ff.c: 4677:   dp->obj.fs = 0;
 19167   019E16  C5B1  F4D9         	movff	f_closedir@dp,fsr2l
 19168   019E1A  C5B2  F4DA         	movff	f_closedir@dp+1,fsr2h
 19169   019E1E  6ADE               	clrf	postinc2,c
 19170   019E20  6ADD               	clrf	postdec2,c
 19171                           
 19172                           ; BSR set to: 5
 19173   019E22  0012               	return		;funcret
 19174   019E24                     __end_of_f_closedir:
 19175                           	callstack 0
 19176                           
 19177 ;; *************** function _mem_init *****************
 19178 ;; Defined at:
 19179 ;;		line 207 in file "src/io.c"
 19180 ;; Parameters:    Size  Location     Type
 19181 ;;		None
 19182 ;; Auto vars:     Size  Location     Type
 19183 ;;  addr            4   76[BANK5 ] unsigned long 
 19184 ;;  i               2   74[BANK5 ] unsigned int 
 19185 ;; Return value:  Size  Location     Type
 19186 ;;                  1    wreg      void 
 19187 ;; Registers used:
 19188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19189 ;; Tracked objects:
 19190 ;;		On entry : 3F/5
 19191 ;;		On exit  : 3F/5
 19192 ;;		Unchanged: 0/0
 19193 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19195 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19196 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19197 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19198 ;;Total ram usage:       10 bytes
 19199 ;; Hardware stack levels used: 1
 19200 ;; Hardware stack levels required when called: 8
 19201 ;; This function calls:
 19202 ;;		_emuz80_57q_read_from_sram
 19203 ;;		_emuz80_57q_write_to_sram
 19204 ;;		_memcmp
 19205 ;;		_printf
 19206 ;; This function is called by:
 19207 ;;		_main
 19208 ;; This function uses a non-reentrant model
 19209 ;;
 19210                           
 19211                           	psect	text26
 19212   016CC4                     __ptext26:
 19213                           	callstack 0
 19214   016CC4                     _mem_init:
 19215                           	callstack 118
 19216                           
 19217                           ; BSR set to: 5
 19218                           ;src/io.c: 209:     unsigned int i;;src/io.c: 210:     uint32_t addr;;src/io.c: 213:    
      +                           for (i = 0; i < 256; i += 2) {
 19219                           
 19220                           ; BSR set to: 5
 19221                           ;incstack = 0
 19222   016CC4  0E00               	movlw	0
 19223   016CC6  6FAB               	movwf	(mem_init@i+1)& (0+255),b
 19224   016CC8  0E00               	movlw	0
 19225   016CCA  6FAA               	movwf	mem_init@i& (0+255),b
 19226   016CCC                     l12539:
 19227                           
 19228                           ; BSR set to: 5
 19229                           ;src/io.c: 214:         tmp_buf[0][i + 0] = 0xa5;
 19230   016CCC  0EBC               	movlw	low _tmp_buf
 19231   016CCE  25AA               	addwf	mem_init@i& (0+255),w,b
 19232   016CD0  6ED9               	movwf	fsr2l,c
 19233   016CD2  0E17               	movlw	high _tmp_buf
 19234   016CD4  21AB               	addwfc	(mem_init@i+1)& (0+255),w,b
 19235   016CD6  6EDA               	movwf	fsr2h,c
 19236   016CD8  0EA5               	movlw	165
 19237   016CDA  6EDF               	movwf	indf2,c
 19238                           
 19239                           ;src/io.c: 215:         tmp_buf[0][i + 1] = 0x5a;
 19240   016CDC  0EBD               	movlw	low (_tmp_buf+1)
 19241   016CDE  25AA               	addwf	mem_init@i& (0+255),w,b
 19242   016CE0  6ED9               	movwf	fsr2l,c
 19243   016CE2  0E17               	movlw	high (_tmp_buf+1)
 19244   016CE4  21AB               	addwfc	(mem_init@i+1)& (0+255),w,b
 19245   016CE6  6EDA               	movwf	fsr2h,c
 19246   016CE8  0E5A               	movlw	90
 19247   016CEA  6EDF               	movwf	indf2,c
 19248                           
 19249                           ; BSR set to: 5
 19250                           ;src/io.c: 216:     }
 19251   016CEC  0E02               	movlw	2
 19252   016CEE  27AA               	addwf	mem_init@i& (0+255),f,b
 19253   016CF0  0E00               	movlw	0
 19254   016CF2  23AB               	addwfc	(mem_init@i+1)& (0+255),f,b
 19255                           
 19256                           ; BSR set to: 5
 19257   016CF4  05AB               	decf	(mem_init@i+1)& (0+255),w,b
 19258   016CF6  A0D8               	btfss	status,0,c
 19259   016CF8  D7E9               	goto	l12539
 19260                           
 19261                           ; BSR set to: 5
 19262                           ;src/io.c: 217:     for (addr = 0; addr < 0x00100000; addr += 256 * 16) {
 19263   016CFA  0E00               	movlw	0
 19264   016CFC  6FAC               	movwf	mem_init@addr& (0+255),b
 19265   016CFE  0E00               	movlw	0
 19266   016D00  6FAD               	movwf	(mem_init@addr+1)& (0+255),b
 19267   016D02  0E00               	movlw	0
 19268   016D04  6FAE               	movwf	(mem_init@addr+2)& (0+255),b
 19269   016D06  0E00               	movlw	0
 19270   016D08  6FAF               	movwf	(mem_init@addr+3)& (0+255),b
 19271   016D0A                     l12551:
 19272                           
 19273                           ; BSR set to: 5
 19274                           ;src/io.c: 218:         printf("Memory 000000 - %06lXH\r", addr);
 19275   016D0A  0E5A               	movlw	low STR_46
 19276   016D0C  6F9A               	movwf	printf@fmt& (0+255),b
 19277   016D0E  0EFE               	movlw	high STR_46
 19278   016D10  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 19279   016D12  C5AC  F59C         	movff	mem_init@addr,?_printf+2
 19280   016D16  C5AD  F59D         	movff	mem_init@addr+1,?_printf+3
 19281   016D1A  C5AE  F59E         	movff	mem_init@addr+2,?_printf+4
 19282   016D1E  C5AF  F59F         	movff	mem_init@addr+3,?_printf+5
 19283   016D22  EC4F  F0CF         	call	_printf	;wreg free
 19284                           
 19285                           ; BSR set to: 5
 19286                           ;src/io.c: 219:         tmp_buf[0][0] = (addr >> 0) & 0xff;
 19287   016D26  EE25  F3BC         	lfsr	2,_tmp_buf
 19288   016D2A  C5AC  F4DF         	movff	mem_init@addr,indf2
 19289                           
 19290                           ; BSR set to: 5
 19291                           ;src/io.c: 220:         tmp_buf[0][1] = (addr >> 8) & 0xff;
 19292   016D2E  EE25  F3BD         	lfsr	2,_tmp_buf+1
 19293   016D32  C5AD  F4DF         	movff	mem_init@addr+1,indf2
 19294                           
 19295                           ; BSR set to: 5
 19296                           ;src/io.c: 221:         tmp_buf[0][2] = (addr >> 16) & 0xff;
 19297   016D36  EE25  F3BE         	lfsr	2,_tmp_buf+2
 19298   016D3A  C5AE  F4DF         	movff	mem_init@addr+2,indf2
 19299                           
 19300                           ; BSR set to: 5
 19301                           ;src/io.c: 222:         emuz80_57q_write_to_sram((uint16_t)addr, tmp_buf[0], 256);
 19302   016D3E  C5AC  F501         	movff	mem_init@addr,emuz80_57q_write_to_sram@addr
 19303   016D42  C5AD  F502         	movff	mem_init@addr+1,emuz80_57q_write_to_sram@addr+1
 19304   016D46  0EBC               	movlw	low _tmp_buf
 19305   016D48  6E03               	movwf	emuz80_57q_write_to_sram@buf^(0+1280),c
 19306   016D4A  0E17               	movlw	high _tmp_buf
 19307   016D4C  6E04               	movwf	(emuz80_57q_write_to_sram@buf+1)^(0+1280),c
 19308   016D4E  0E01               	movlw	1
 19309   016D50  6E06               	movwf	(emuz80_57q_write_to_sram@len+1)^(0+1280),c
 19310   016D52  0E00               	movlw	0
 19311   016D54  6E05               	movwf	emuz80_57q_write_to_sram@len^(0+1280),c
 19312   016D56  EC49  F0CA         	call	_emuz80_57q_write_to_sram	;wreg free
 19313                           
 19314                           ;src/io.c: 223:         emuz80_57q_read_from_sram((uint16_t)addr, tmp_buf[1], 256);
 19315   016D5A  C5AC  F501         	movff	mem_init@addr,emuz80_57q_read_from_sram@addr
 19316   016D5E  C5AD  F502         	movff	mem_init@addr+1,emuz80_57q_read_from_sram@addr+1
 19317   016D62  0EBC               	movlw	low (_tmp_buf+256)
 19318   016D64  6E03               	movwf	emuz80_57q_read_from_sram@buf^(0+1280),c
 19319   016D66  0E18               	movlw	high (_tmp_buf+256)
 19320   016D68  6E04               	movwf	(emuz80_57q_read_from_sram@buf+1)^(0+1280),c
 19321   016D6A  0E01               	movlw	1
 19322   016D6C  6E06               	movwf	(emuz80_57q_read_from_sram@len+1)^(0+1280),c
 19323   016D6E  0E00               	movlw	0
 19324   016D70  6E05               	movwf	emuz80_57q_read_from_sram@len^(0+1280),c
 19325   016D72  EC5A  F0CC         	call	_emuz80_57q_read_from_sram	;wreg free
 19326                           
 19327                           ;src/io.c: 224:         if (memcmp(tmp_buf[0], tmp_buf[1], 256) != 0) {
 19328   016D76  0EBC               	movlw	low _tmp_buf
 19329   016D78  6E01               	movwf	memcmp@vl^(0+1280),c
 19330   016D7A  0E17               	movlw	high _tmp_buf
 19331   016D7C  6E02               	movwf	(memcmp@vl+1)^(0+1280),c
 19332   016D7E  0EBC               	movlw	low (_tmp_buf+256)
 19333   016D80  6E03               	movwf	memcmp@vr^(0+1280),c
 19334   016D82  0E18               	movlw	high (_tmp_buf+256)
 19335   016D84  6E04               	movwf	(memcmp@vr+1)^(0+1280),c
 19336   016D86  0E01               	movlw	1
 19337   016D88  6E06               	movwf	(memcmp@n+1)^(0+1280),c
 19338   016D8A  0E00               	movlw	0
 19339   016D8C  6E05               	movwf	memcmp@n^(0+1280),c
 19340   016D8E  EC94  F0C6         	call	_memcmp	;wreg free
 19341   016D92  5001               	movf	?_memcmp^(0+1280),w,c
 19342   016D94  1002               	iorwf	(?_memcmp+1)^(0+1280),w,c
 19343   016D96  A4D8               	btfss	status,2,c
 19344   016D98  D036               	goto	u16180
 19345                           
 19346                           ;src/io.c: 227:         if (addr == 0)
 19347   016D9A  0105               	movlb	5	; () banked
 19348   016D9C  51AC               	movf	mem_init@addr& (0+255),w,b
 19349   016D9E  11AD               	iorwf	(mem_init@addr+1)& (0+255),w,b
 19350   016DA0  11AE               	iorwf	(mem_init@addr+2)& (0+255),w,b
 19351   016DA2  11AF               	iorwf	(mem_init@addr+3)& (0+255),w,b
 19352   016DA4  B4D8               	btfsc	status,2,c
 19353   016DA6  D020               	goto	l12577
 19354                           
 19355                           ; BSR set to: 5
 19356                           ;src/io.c: 229:         emuz80_57q_read_from_sram(0, tmp_buf[1], 256);
 19357   016DA8  0E00               	movlw	0
 19358   016DAA  6E02               	movwf	(emuz80_57q_read_from_sram@addr+1)^(0+1280),c
 19359   016DAC  0E00               	movlw	0
 19360   016DAE  6E01               	movwf	emuz80_57q_read_from_sram@addr^(0+1280),c
 19361   016DB0  0EBC               	movlw	low (_tmp_buf+256)
 19362   016DB2  6E03               	movwf	emuz80_57q_read_from_sram@buf^(0+1280),c
 19363   016DB4  0E18               	movlw	high (_tmp_buf+256)
 19364   016DB6  6E04               	movwf	(emuz80_57q_read_from_sram@buf+1)^(0+1280),c
 19365   016DB8  0E01               	movlw	1
 19366   016DBA  6E06               	movwf	(emuz80_57q_read_from_sram@len+1)^(0+1280),c
 19367   016DBC  0E00               	movlw	0
 19368   016DBE  6E05               	movwf	emuz80_57q_read_from_sram@len^(0+1280),c
 19369   016DC0  EC5A  F0CC         	call	_emuz80_57q_read_from_sram	;wreg free
 19370                           
 19371                           ;src/io.c: 230:         if (memcmp(tmp_buf[0], tmp_buf[1], 256) == 0) {
 19372   016DC4  0EBC               	movlw	low _tmp_buf
 19373   016DC6  6E01               	movwf	memcmp@vl^(0+1280),c
 19374   016DC8  0E17               	movlw	high _tmp_buf
 19375   016DCA  6E02               	movwf	(memcmp@vl+1)^(0+1280),c
 19376   016DCC  0EBC               	movlw	low (_tmp_buf+256)
 19377   016DCE  6E03               	movwf	memcmp@vr^(0+1280),c
 19378   016DD0  0E18               	movlw	high (_tmp_buf+256)
 19379   016DD2  6E04               	movwf	(memcmp@vr+1)^(0+1280),c
 19380   016DD4  0E01               	movlw	1
 19381   016DD6  6E06               	movwf	(memcmp@n+1)^(0+1280),c
 19382   016DD8  0E00               	movlw	0
 19383   016DDA  6E05               	movwf	memcmp@n^(0+1280),c
 19384   016DDC  EC94  F0C6         	call	_memcmp	;wreg free
 19385   016DE0  5001               	movf	?_memcmp^(0+1280),w,c
 19386   016DE2  1002               	iorwf	(?_memcmp+1)^(0+1280),w,c
 19387   016DE4  B4D8               	btfsc	status,2,c
 19388   016DE6  D00F               	goto	u16180
 19389   016DE8                     l12577:
 19390   016DE8  0E00               	movlw	0
 19391   016DEA  0105               	movlb	5	; () banked
 19392   016DEC  27AC               	addwf	mem_init@addr& (0+255),f,b
 19393   016DEE  0E10               	movlw	16
 19394   016DF0  23AD               	addwfc	(mem_init@addr+1)& (0+255),f,b
 19395   016DF2  0E00               	movlw	0
 19396   016DF4  23AE               	addwfc	(mem_init@addr+2)& (0+255),f,b
 19397   016DF6  0E00               	movlw	0
 19398   016DF8  23AF               	addwfc	(mem_init@addr+3)& (0+255),f,b
 19399   016DFA  51AF               	movf	(mem_init@addr+3)& (0+255),w,b
 19400   016DFC  E104               	bnz	u16180
 19401   016DFE  0E10               	movlw	16
 19402   016E00  5DAE               	subwf	(mem_init@addr+2)& (0+255),w,b
 19403   016E02  A0D8               	btfss	status,0,c
 19404   016E04  D782               	goto	l12551
 19405   016E06                     u16180:
 19406                           
 19407                           ;src/io.c: 236:  printf("Memory 000000 - %06lXH %d KB OK\r\n", addr, (int)(addr / 1024))
      +                          ;
 19408   016E06  0E7D               	movlw	low STR_47
 19409   016E08  0105               	movlb	5	; () banked
 19410   016E0A  6F9A               	movwf	printf@fmt& (0+255),b
 19411   016E0C  0EFC               	movlw	high STR_47
 19412   016E0E  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 19413   016E10  C5AC  F59C         	movff	mem_init@addr,?_printf+2
 19414   016E14  C5AD  F59D         	movff	mem_init@addr+1,?_printf+3
 19415   016E18  C5AE  F59E         	movff	mem_init@addr+2,?_printf+4
 19416   016E1C  C5AF  F59F         	movff	mem_init@addr+3,?_printf+5
 19417   016E20  C5AC  F5A6         	movff	mem_init@addr,??_mem_init
 19418   016E24  C5AD  F5A7         	movff	mem_init@addr+1,??_mem_init+1
 19419   016E28  C5AE  F5A8         	movff	mem_init@addr+2,??_mem_init+2
 19420   016E2C  C5AF  F5A9         	movff	mem_init@addr+3,??_mem_init+3
 19421   016E30  0E0B               	movlw	11
 19422   016E32  D005               	goto	u16190
 19423   016E34                     u16195:
 19424   016E34  90D8               	bcf	status,0,c
 19425   016E36  33A9               	rrcf	(??_mem_init+3)& (0+255),f,b
 19426   016E38  33A8               	rrcf	(??_mem_init+2)& (0+255),f,b
 19427   016E3A  33A7               	rrcf	(??_mem_init+1)& (0+255),f,b
 19428   016E3C  33A6               	rrcf	??_mem_init& (0+255),f,b
 19429   016E3E                     u16190:
 19430   016E3E  2EE8               	decfsz	wreg,f,c
 19431   016E40  D7F9               	goto	u16195
 19432   016E42  C5A6  F5A0         	movff	??_mem_init,?_printf+6
 19433   016E46  C5A7  F5A1         	movff	??_mem_init+1,?_printf+7
 19434   016E4A  EC4F  F0CF         	call	_printf	;wreg free
 19435                           
 19436                           ; BSR set to: 5
 19437   016E4E  0012               	return		;funcret
 19438   016E50                     __end_of_mem_init:
 19439                           	callstack 0
 19440                           
 19441 ;; *************** function _f_mount *****************
 19442 ;; Defined at:
 19443 ;;		line 3657 in file "fatfs/ff.c"
 19444 ;; Parameters:    Size  Location     Type
 19445 ;;  fs              2  175[BANK6 ] PTR struct .
 19446 ;;		 -> fs(560), NULL(0), 
 19447 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 19448 ;;		 -> STR_88(5), tmp_buf(512), STR_31(2), 
 19449 ;;  opt             1  179[BANK6 ] unsigned char 
 19450 ;; Auto vars:     Size  Location     Type
 19451 ;;  vol             2  185[BANK6 ] int 
 19452 ;;  cfs             2  183[BANK6 ] PTR struct .
 19453 ;;		 -> fs(560), NULL(0), 
 19454 ;;  rp              2  181[BANK6 ] PTR const unsigned char 
 19455 ;;		 -> STR_88(5), tmp_buf(512), STR_31(2), 
 19456 ;;  res             1  180[BANK6 ] enum E275
 19457 ;; Return value:  Size  Location     Type
 19458 ;;                  1    wreg      enum E275
 19459 ;; Registers used:
 19460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19461 ;; Tracked objects:
 19462 ;;		On entry : 3F/6
 19463 ;;		On exit  : 3F/6
 19464 ;;		Unchanged: 0/0
 19465 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19466 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19467 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19469 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19470 ;;Total ram usage:       12 bytes
 19471 ;; Hardware stack levels used: 1
 19472 ;; Hardware stack levels required when called: 16
 19473 ;; This function calls:
 19474 ;;		_get_ldnumber
 19475 ;;		_mount_volume
 19476 ;; This function is called by:
 19477 ;;		_main
 19478 ;; This function uses a non-reentrant model
 19479 ;;
 19480                           
 19481                           	psect	text27
 19482   018384                     __ptext27:
 19483                           	callstack 0
 19484   018384                     _f_mount:
 19485                           	callstack 110
 19486                           
 19487                           ; BSR set to: 6
 19488                           ;fatfs/ff.c: 3658:  FATFS* fs,;fatfs/ff.c: 3659:  const TCHAR* path,;fatfs/ff.c: 3660:  
      +                          BYTE opt;fatfs/ff.c: 3662: {;fatfs/ff.c: 3663:  FATFS *cfs;;fatfs/ff.c: 3664:  int vol;;
      +                          fatfs/ff.c: 3665:  FRESULT res;;fatfs/ff.c: 3666:  const TCHAR *rp = path;
 19489                           
 19490                           ; BSR set to: 5
 19491                           ;incstack = 0
 19492   018384  C6B1  F6B5         	movff	f_mount@path,f_mount@rp
 19493   018388  C6B2  F6B6         	movff	f_mount@path+1,f_mount@rp+1
 19494                           
 19495                           ; BSR set to: 6
 19496                           ;fatfs/ff.c: 3670:  vol = get_ldnumber(&rp);
 19497   01838C  0EB5               	movlw	low f_mount@rp
 19498   01838E  6E01               	movwf	get_ldnumber@path^(0+1280),c
 19499   018390  0E06               	movlw	high f_mount@rp
 19500   018392  6E02               	movwf	(get_ldnumber@path+1)^(0+1280),c
 19501   018394  EC59  F0B9         	call	_get_ldnumber	;wreg free
 19502   018398  C501  F6B9         	movff	?_get_ldnumber,f_mount@vol
 19503   01839C  C502  F6BA         	movff	?_get_ldnumber+1,f_mount@vol+1
 19504                           
 19505                           ;fatfs/ff.c: 3671:  if (vol < 0) return FR_INVALID_DRIVE;
 19506   0183A0  0106               	movlb	6	; () banked
 19507   0183A2  AFBA               	btfss	(f_mount@vol+1)& (0+255),7,b
 19508   0183A4  D002               	goto	l12395
 19509                           
 19510                           ; BSR set to: 6
 19511   0183A6  0E0B               	movlw	11
 19512   0183A8  0012               	return	
 19513   0183AA                     l12395:
 19514                           
 19515                           ; BSR set to: 6
 19516                           ;fatfs/ff.c: 3672:  cfs = FatFs[vol];
 19517   0183AA  90D8               	bcf	status,0,c
 19518   0183AC  35B9               	rlcf	f_mount@vol& (0+255),w,b
 19519   0183AE  6ED9               	movwf	fsr2l,c
 19520   0183B0  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 19521   0183B2  6EDA               	movwf	fsr2h,c
 19522   0183B4  0E23               	movlw	low _FatFs
 19523   0183B6  26D9               	addwf	fsr2l,f,c
 19524   0183B8  0E07               	movlw	high _FatFs
 19525   0183BA  22DA               	addwfc	fsr2h,f,c
 19526   0183BC  C4DE F6B7          	movff	postinc2,f_mount@cfs
 19527   0183C0  C4DD F6B8          	movff	postdec2,f_mount@cfs+1
 19528                           
 19529                           ; BSR set to: 6
 19530                           ;fatfs/ff.c: 3674:  if (cfs) {
 19531   0183C4  51B7               	movf	f_mount@cfs& (0+255),w,b
 19532   0183C6  11B8               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 19533   0183C8  B4D8               	btfsc	status,2,c
 19534   0183CA  D010               	goto	l600
 19535                           
 19536                           ; BSR set to: 6
 19537                           ;fatfs/ff.c: 3675:   FatFs[vol] = 0;
 19538   0183CC  90D8               	bcf	status,0,c
 19539   0183CE  35B9               	rlcf	f_mount@vol& (0+255),w,b
 19540   0183D0  6ED9               	movwf	fsr2l,c
 19541   0183D2  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 19542   0183D4  6EDA               	movwf	fsr2h,c
 19543   0183D6  0E23               	movlw	low _FatFs
 19544   0183D8  26D9               	addwf	fsr2l,f,c
 19545   0183DA  0E07               	movlw	high _FatFs
 19546   0183DC  22DA               	addwfc	fsr2h,f,c
 19547   0183DE  6ADE               	clrf	postinc2,c
 19548   0183E0  6ADD               	clrf	postdec2,c
 19549                           
 19550                           ; BSR set to: 6
 19551                           ;fatfs/ff.c: 3682:   cfs->fs_type = 0;
 19552   0183E2  C6B7  F4D9         	movff	f_mount@cfs,fsr2l
 19553   0183E6  C6B8  F4DA         	movff	f_mount@cfs+1,fsr2h
 19554   0183EA  6ADF               	clrf	indf2,c
 19555   0183EC                     l600:
 19556                           
 19557                           ; BSR set to: 6
 19558                           ;fatfs/ff.c: 3685:  if (fs) {
 19559   0183EC  51AF               	movf	f_mount@fs& (0+255),w,b
 19560   0183EE  11B0               	iorwf	(f_mount@fs+1)& (0+255),w,b
 19561   0183F0  B4D8               	btfsc	status,2,c
 19562   0183F2  D01A               	goto	l12409
 19563                           
 19564                           ; BSR set to: 6
 19565                           ;fatfs/ff.c: 3686:   fs->pdrv = (BYTE)(vol);
 19566   0183F4  EE20 F001          	lfsr	2,1
 19567   0183F8  51AF               	movf	f_mount@fs& (0+255),w,b
 19568   0183FA  26D9               	addwf	fsr2l,f,c
 19569   0183FC  51B0               	movf	(f_mount@fs+1)& (0+255),w,b
 19570   0183FE  22DA               	addwfc	fsr2h,f,c
 19571   018400  C6B9  F4DF         	movff	f_mount@vol,indf2
 19572                           
 19573                           ; BSR set to: 6
 19574                           ;fatfs/ff.c: 3700:   fs->fs_type = 0;
 19575   018404  C6AF  F4D9         	movff	f_mount@fs,fsr2l
 19576   018408  C6B0  F4DA         	movff	f_mount@fs+1,fsr2h
 19577   01840C  6ADF               	clrf	indf2,c
 19578                           
 19579                           ; BSR set to: 6
 19580                           ;fatfs/ff.c: 3701:   FatFs[vol] = fs;
 19581   01840E  90D8               	bcf	status,0,c
 19582   018410  35B9               	rlcf	f_mount@vol& (0+255),w,b
 19583   018412  6ED9               	movwf	fsr2l,c
 19584   018414  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 19585   018416  6EDA               	movwf	fsr2h,c
 19586   018418  0E23               	movlw	low _FatFs
 19587   01841A  26D9               	addwf	fsr2l,f,c
 19588   01841C  0E07               	movlw	high _FatFs
 19589   01841E  22DA               	addwfc	fsr2h,f,c
 19590   018420  C6AF  F4DE         	movff	f_mount@fs,postinc2
 19591   018424  C6B0  F4DD         	movff	f_mount@fs+1,postdec2
 19592   018428                     l12409:
 19593                           
 19594                           ; BSR set to: 6
 19595                           ;fatfs/ff.c: 3704:  if (opt == 0) return FR_OK;
 19596   018428  51B3               	movf	f_mount@opt& (0+255),w,b
 19597   01842A  A4D8               	btfss	status,2,c
 19598   01842C  D002               	goto	l12415
 19599                           
 19600                           ; BSR set to: 6
 19601   01842E  0E00               	movlw	0
 19602   018430  0012               	return	
 19603   018432                     l12415:
 19604                           
 19605                           ; BSR set to: 6
 19606                           ;fatfs/ff.c: 3706:  res = mount_volume(&path, &fs, 0);
 19607   018432  0EB1               	movlw	low f_mount@path
 19608   018434  6F81               	movwf	mount_volume@path& (0+255),b
 19609   018436  0E06               	movlw	high f_mount@path
 19610   018438  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 19611   01843A  0EAF               	movlw	low f_mount@fs
 19612   01843C  6F83               	movwf	mount_volume@rfs& (0+255),b
 19613   01843E  0E06               	movlw	high f_mount@fs
 19614   018440  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 19615   018442  0E00               	movlw	0
 19616   018444  6F85               	movwf	mount_volume@mode& (0+255),b
 19617   018446  EC70  F084         	call	_mount_volume	;wreg free
 19618   01844A  0106               	movlb	6	; () banked
 19619   01844C  6FB4               	movwf	f_mount@res& (0+255),b
 19620                           
 19621                           ; BSR set to: 6
 19622                           ;fatfs/ff.c: 3707:  return res;
 19623   01844E  51B4               	movf	f_mount@res& (0+255),w,b
 19624                           
 19625                           ; BSR set to: 6
 19626   018450  0012               	return		;funcret
 19627   018452                     __end_of_f_mount:
 19628                           	callstack 0
 19629                           
 19630 ;; *************** function _mount_volume *****************
 19631 ;; Defined at:
 19632 ;;		line 3385 in file "fatfs/ff.c"
 19633 ;; Parameters:    Size  Location     Type
 19634 ;;  path            2  129[BANK6 ] PTR PTR const unsigned c
 19635 ;;		 -> f_rename@path_old(2), f_mkdir@path(2), f_unlink@path(2), f_getfree@path(2), 
 19636 ;;		 -> f_stat@path(2), f_opendir@path(2), f_open@path(2), f_mount@path(2), 
 19637 ;;  rfs             2  131[BANK6 ] PTR PTR struct .
 19638 ;;		 -> f_rename@fs(2), f_mkdir@fs(2), f_unlink@fs(2), f_getfree@fs(2), 
 19639 ;;		 -> f_opendir@fs(2), dj$obj(15), f_open@dj(40), f_open@fs(2), 
 19640 ;;		 -> f_mount@fs(2), 
 19641 ;;  mode            1  133[BANK6 ] unsigned char 
 19642 ;; Auto vars:     Size  Location     Type
 19643 ;;  fasize          4  167[BANK6 ] unsigned long 
 19644 ;;  nclst           4  163[BANK6 ] unsigned long 
 19645 ;;  bsect           4  158[BANK6 ] unsigned long 
 19646 ;;  tsect           4  154[BANK6 ] unsigned long 
 19647 ;;  sysect          4  148[BANK6 ] unsigned long 
 19648 ;;  szbfat          4  142[BANK6 ] unsigned long 
 19649 ;;  fs              2  173[BANK6 ] PTR struct .
 19650 ;;		 -> fs(560), NULL(0), 
 19651 ;;  fmt             2  171[BANK6 ] unsigned int 
 19652 ;;  nrsv            2  152[BANK6 ] unsigned short 
 19653 ;;  vol             2  146[BANK6 ] int 
 19654 ;;  stat            1  162[BANK6 ] unsigned char 
 19655 ;; Return value:  Size  Location     Type
 19656 ;;                  1    wreg      enum E275
 19657 ;; Registers used:
 19658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19659 ;; Tracked objects:
 19660 ;;		On entry : 3F/6
 19661 ;;		On exit  : 0/0
 19662 ;;		Unchanged: 0/0
 19663 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19664 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19665 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19666 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19667 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19668 ;;Total ram usage:       46 bytes
 19669 ;; Hardware stack levels used: 1
 19670 ;; Hardware stack levels required when called: 15
 19671 ;; This function calls:
 19672 ;;		___lldiv
 19673 ;;		___lmul
 19674 ;;		_disk_initialize
 19675 ;;		_disk_status
 19676 ;;		_find_volume
 19677 ;;		_get_ldnumber
 19678 ;;		_ld_dword
 19679 ;;		_ld_word
 19680 ;;		_move_window
 19681 ;; This function is called by:
 19682 ;;		_f_mount
 19683 ;;		_f_open
 19684 ;;		_f_opendir
 19685 ;; This function uses a non-reentrant model
 19686 ;;
 19687                           
 19688                           	psect	text28
 19689   0108E0                     __ptext28:
 19690                           	callstack 0
 19691   0108E0                     _mount_volume:
 19692                           	callstack 109
 19693                           
 19694                           ; BSR set to: 6
 19695                           ;fatfs/ff.c: 3386:  const TCHAR** path,;fatfs/ff.c: 3387:  FATFS** rfs,;fatfs/ff.c: 3388
      +                          :  BYTE mode;fatfs/ff.c: 3390: {;fatfs/ff.c: 3391:  int vol;;fatfs/ff.c: 3392:  FATFS *f
      +                          s;;fatfs/ff.c: 3393:  DSTATUS stat;;fatfs/ff.c: 3394:  LBA_t bsect;;fatfs/ff.c: 3395:  D
      +                          WORD tsect, sysect, fasize, nclst, szbfat;;fatfs/ff.c: 3396:  WORD nrsv;;fatfs/ff.c: 339
      +                          7:  UINT fmt;;fatfs/ff.c: 3401:  *rfs = 0;
 19696                           
 19697                           ; BSR set to: 6
 19698                           ;incstack = 0
 19699   0108E0  C683  F4D9         	movff	mount_volume@rfs,fsr2l
 19700   0108E4  C684  F4DA         	movff	mount_volume@rfs+1,fsr2h
 19701   0108E8  6ADE               	clrf	postinc2,c
 19702   0108EA  6ADD               	clrf	postdec2,c
 19703                           
 19704                           ; BSR set to: 6
 19705                           ;fatfs/ff.c: 3402:  vol = get_ldnumber(path);
 19706   0108EC  C681  F501         	movff	mount_volume@path,get_ldnumber@path
 19707   0108F0  C682  F502         	movff	mount_volume@path+1,get_ldnumber@path+1
 19708   0108F4  EC59  F0B9         	call	_get_ldnumber	;wreg free
 19709   0108F8  C501  F692         	movff	?_get_ldnumber,mount_volume@vol
 19710   0108FC  C502  F693         	movff	?_get_ldnumber+1,mount_volume@vol+1
 19711                           
 19712                           ;fatfs/ff.c: 3403:  if (vol < 0) return FR_INVALID_DRIVE;
 19713   010900  0106               	movlb	6	; () banked
 19714   010902  AF93               	btfss	(mount_volume@vol+1)& (0+255),7,b
 19715   010904  D002               	goto	l11133
 19716                           
 19717                           ; BSR set to: 6
 19718   010906  0E0B               	movlw	11
 19719   010908  0012               	return	
 19720   01090A                     l11133:
 19721                           
 19722                           ; BSR set to: 6
 19723                           ;fatfs/ff.c: 3406:  fs = FatFs[vol];
 19724   01090A  90D8               	bcf	status,0,c
 19725   01090C  3592               	rlcf	mount_volume@vol& (0+255),w,b
 19726   01090E  6ED9               	movwf	fsr2l,c
 19727   010910  3593               	rlcf	(mount_volume@vol+1)& (0+255),w,b
 19728   010912  6EDA               	movwf	fsr2h,c
 19729   010914  0E23               	movlw	low _FatFs
 19730   010916  26D9               	addwf	fsr2l,f,c
 19731   010918  0E07               	movlw	high _FatFs
 19732   01091A  22DA               	addwfc	fsr2h,f,c
 19733   01091C  C4DE F6AD          	movff	postinc2,mount_volume@fs
 19734   010920  C4DD F6AE          	movff	postdec2,mount_volume@fs+1
 19735                           
 19736                           ; BSR set to: 6
 19737                           ;fatfs/ff.c: 3407:  if (!fs) return FR_NOT_ENABLED;
 19738   010924  51AD               	movf	mount_volume@fs& (0+255),w,b
 19739   010926  11AE               	iorwf	(mount_volume@fs+1)& (0+255),w,b
 19740   010928  A4D8               	btfss	status,2,c
 19741   01092A  D002               	goto	l11141
 19742                           
 19743                           ; BSR set to: 6
 19744   01092C  0E0C               	movlw	12
 19745   01092E  0012               	return	
 19746   010930                     l11141:
 19747                           
 19748                           ; BSR set to: 6
 19749                           ;fatfs/ff.c: 3411:  *rfs = fs;
 19750   010930  C683  F4D9         	movff	mount_volume@rfs,fsr2l
 19751   010934  C684  F4DA         	movff	mount_volume@rfs+1,fsr2h
 19752   010938  C6AD  F4DE         	movff	mount_volume@fs,postinc2
 19753   01093C  C6AE  F4DD         	movff	mount_volume@fs+1,postdec2
 19754                           
 19755                           ; BSR set to: 6
 19756                           ;fatfs/ff.c: 3413:  mode &= (BYTE)~0x01;
 19757   010940  9185               	bcf	mount_volume@mode& (0+255),0,b
 19758                           
 19759                           ; BSR set to: 6
 19760                           ;fatfs/ff.c: 3414:  if (fs->fs_type != 0) {
 19761   010942  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 19762   010946  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 19763   01094A  50DF               	movf	indf2,w,c
 19764   01094C  B4D8               	btfsc	status,2,c
 19765   01094E  D015               	goto	l11163
 19766                           
 19767                           ; BSR set to: 6
 19768                           ;fatfs/ff.c: 3415:   stat = disk_status(fs->pdrv);
 19769   010950  EE20 F001          	lfsr	2,1
 19770   010954  51AD               	movf	mount_volume@fs& (0+255),w,b
 19771   010956  26D9               	addwf	fsr2l,f,c
 19772   010958  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19773   01095A  22DA               	addwfc	fsr2h,f,c
 19774   01095C  50DF               	movf	indf2,w,c
 19775   01095E  EC75  F0CF         	call	_disk_status
 19776   010962  0106               	movlb	6	; () banked
 19777   010964  6FA2               	movwf	mount_volume@stat& (0+255),b
 19778                           
 19779                           ; BSR set to: 6
 19780                           ;fatfs/ff.c: 3417:    if (!0 && mode && (stat & 0x04)) {
 19781   010966  B1A2               	btfsc	mount_volume@stat& (0+255),0,b
 19782   010968  D008               	goto	l11163
 19783                           
 19784                           ; BSR set to: 6
 19785   01096A  5185               	movf	mount_volume@mode& (0+255),w,b
 19786   01096C  A4D8               	btfss	status,2,c
 19787                           
 19788                           ; BSR set to: 6
 19789   01096E  A5A2               	btfss	mount_volume@stat& (0+255),2,b
 19790   010970  D002               	goto	l11159
 19791   010972                     u13860:
 19792                           
 19793                           ; BSR set to: 6
 19794                           ;fatfs/ff.c: 3418:     return FR_WRITE_PROTECTED;
 19795   010972  0E0A               	movlw	10
 19796   010974  0012               	return	
 19797   010976                     l11159:
 19798                           
 19799                           ; BSR set to: 6
 19800                           ;fatfs/ff.c: 3420:    return FR_OK;
 19801   010976  0E00               	movlw	0
 19802   010978  0012               	return	
 19803   01097A                     l11163:
 19804                           
 19805                           ; BSR set to: 6
 19806                           ;fatfs/ff.c: 3427:  fs->fs_type = 0;
 19807   01097A  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 19808   01097E  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 19809   010982  6ADF               	clrf	indf2,c
 19810                           
 19811                           ; BSR set to: 6
 19812                           ;fatfs/ff.c: 3428:  stat = disk_initialize(fs->pdrv);
 19813   010984  EE20 F001          	lfsr	2,1
 19814   010988  51AD               	movf	mount_volume@fs& (0+255),w,b
 19815   01098A  26D9               	addwf	fsr2l,f,c
 19816   01098C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19817   01098E  22DA               	addwfc	fsr2h,f,c
 19818   010990  50DF               	movf	indf2,w,c
 19819   010992  EC09  F0BD         	call	_disk_initialize
 19820   010996  0106               	movlb	6	; () banked
 19821   010998  6FA2               	movwf	mount_volume@stat& (0+255),b
 19822                           
 19823                           ; BSR set to: 6
 19824                           ;fatfs/ff.c: 3429:  if (stat & 0x01) {
 19825   01099A  A1A2               	btfss	mount_volume@stat& (0+255),0,b
 19826   01099C  D002               	goto	l11173
 19827                           
 19828                           ; BSR set to: 6
 19829                           ;fatfs/ff.c: 3430:   return FR_NOT_READY;
 19830   01099E  0E03               	movlw	3
 19831   0109A0  0012               	return	
 19832   0109A2                     l11173:
 19833                           
 19834                           ; BSR set to: 6
 19835   0109A2  5185               	movf	mount_volume@mode& (0+255),w,b
 19836   0109A4  B4D8               	btfsc	status,2,c
 19837   0109A6  D002               	goto	l11181
 19838                           
 19839                           ; BSR set to: 6
 19840   0109A8  B5A2               	btfsc	mount_volume@stat& (0+255),2,b
 19841   0109AA  D7E3               	goto	u13860
 19842   0109AC                     l11181:
 19843                           
 19844                           ; BSR set to: 6
 19845                           ;fatfs/ff.c: 3441:  fmt = find_volume(fs, 0);
 19846   0109AC  C6AD  F618         	movff	mount_volume@fs,find_volume@fs
 19847   0109B0  C6AE  F619         	movff	mount_volume@fs+1,find_volume@fs+1
 19848   0109B4  0E00               	movlw	0
 19849   0109B6  6F1B               	movwf	(find_volume@part+1)& (0+255),b
 19850   0109B8  0E00               	movlw	0
 19851   0109BA  6F1A               	movwf	find_volume@part& (0+255),b
 19852   0109BC  EC28  F0B7         	call	_find_volume	;wreg free
 19853   0109C0  C618  F6AB         	movff	?_find_volume,mount_volume@fmt
 19854   0109C4  C619  F6AC         	movff	?_find_volume+1,mount_volume@fmt+1
 19855                           
 19856                           ; BSR set to: 6
 19857                           ;fatfs/ff.c: 3442:  if (fmt == 4) return FR_DISK_ERR;
 19858   0109C8  0E04               	movlw	4
 19859   0109CA  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 19860   0109CC  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 19861   0109CE  A4D8               	btfss	status,2,c
 19862   0109D0  D002               	goto	l11189
 19863                           
 19864                           ; BSR set to: 6
 19865   0109D2  0E01               	movlw	1
 19866   0109D4  0012               	return	
 19867   0109D6                     l11189:
 19868                           
 19869                           ; BSR set to: 6
 19870                           ;fatfs/ff.c: 3443:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 19871   0109D6  51AC               	movf	(mount_volume@fmt+1)& (0+255),w,b
 19872   0109D8  E104               	bnz	u13910
 19873   0109DA  0E02               	movlw	2
 19874   0109DC  5DAB               	subwf	mount_volume@fmt& (0+255),w,b
 19875   0109DE  A0D8               	btfss	status,0,c
 19876   0109E0  D002               	goto	l11195
 19877   0109E2                     u13910:
 19878   0109E2  0E0D               	movlw	13
 19879   0109E4  0012               	return	
 19880   0109E6                     l11195:
 19881                           
 19882                           ; BSR set to: 6
 19883                           ;fatfs/ff.c: 3444:  bsect = fs->winsect;
 19884   0109E6  EE20 F02C          	lfsr	2,44
 19885   0109EA  51AD               	movf	mount_volume@fs& (0+255),w,b
 19886   0109EC  26D9               	addwf	fsr2l,f,c
 19887   0109EE  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19888   0109F0  22DA               	addwfc	fsr2h,f,c
 19889   0109F2  C4DE F69E          	movff	postinc2,mount_volume@bsect
 19890   0109F6  C4DE F69F          	movff	postinc2,mount_volume@bsect+1
 19891   0109FA  C4DE F6A0          	movff	postinc2,mount_volume@bsect+2
 19892   0109FE  C4DE F6A1          	movff	postinc2,mount_volume@bsect+3
 19893                           
 19894                           ; BSR set to: 6
 19895                           ;fatfs/ff.c: 3511:  {;fatfs/ff.c: 3512:   if (ld_word(fs->win + 11) != ((UINT)512)) retu
      +                          rn FR_NO_FILESYSTEM;
 19896   010A02  0E3B               	movlw	59
 19897   010A04  25AD               	addwf	mount_volume@fs& (0+255),w,b
 19898   010A06  6E01               	movwf	ld_word@ptr^(0+1280),c
 19899   010A08  0E00               	movlw	0
 19900   010A0A  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 19901   010A0C  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 19902   010A0E  EC31  F0CE         	call	_ld_word	;wreg free
 19903   010A12  0E02               	movlw	2
 19904   010A14  1802               	xorwf	(?_ld_word+1)^(0+1280),w,c
 19905   010A16  1001               	iorwf	?_ld_word^(0+1280),w,c
 19906   010A18  A4D8               	btfss	status,2,c
 19907   010A1A  D7E3               	goto	u13910
 19908                           
 19909                           ;fatfs/ff.c: 3514:   fasize = ld_word(fs->win + 22);
 19910   010A1C  0E46               	movlw	70
 19911   010A1E  0106               	movlb	6	; () banked
 19912   010A20  25AD               	addwf	mount_volume@fs& (0+255),w,b
 19913   010A22  6E01               	movwf	ld_word@ptr^(0+1280),c
 19914   010A24  0E00               	movlw	0
 19915   010A26  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 19916   010A28  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 19917   010A2A  EC31  F0CE         	call	_ld_word	;wreg free
 19918   010A2E  C501  F6A7         	movff	?_ld_word,mount_volume@fasize
 19919   010A32  C502  F6A8         	movff	?_ld_word+1,mount_volume@fasize+1
 19920   010A36  0106               	movlb	6	; () banked
 19921   010A38  6BA9               	clrf	(mount_volume@fasize+2)& (0+255),b
 19922   010A3A  6BAA               	clrf	(mount_volume@fasize+3)& (0+255),b
 19923                           
 19924                           ; BSR set to: 6
 19925                           ;fatfs/ff.c: 3515:   if (fasize == 0) fasize = ld_dword(fs->win + 36);
 19926   010A3C  51A7               	movf	mount_volume@fasize& (0+255),w,b
 19927   010A3E  11A8               	iorwf	(mount_volume@fasize+1)& (0+255),w,b
 19928   010A40  11A9               	iorwf	(mount_volume@fasize+2)& (0+255),w,b
 19929   010A42  11AA               	iorwf	(mount_volume@fasize+3)& (0+255),w,b
 19930   010A44  A4D8               	btfss	status,2,c
 19931   010A46  D010               	goto	l11209
 19932                           
 19933                           ; BSR set to: 6
 19934   010A48  0E54               	movlw	84
 19935   010A4A  25AD               	addwf	mount_volume@fs& (0+255),w,b
 19936   010A4C  6E01               	movwf	ld_dword@ptr^(0+1280),c
 19937   010A4E  0E00               	movlw	0
 19938   010A50  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 19939   010A52  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 19940   010A54  ECD5  F0C4         	call	_ld_dword	;wreg free
 19941   010A58  C501  F6A7         	movff	?_ld_dword,mount_volume@fasize
 19942   010A5C  C502  F6A8         	movff	?_ld_dword+1,mount_volume@fasize+1
 19943   010A60  C503  F6A9         	movff	?_ld_dword+2,mount_volume@fasize+2
 19944   010A64  C504  F6AA         	movff	?_ld_dword+3,mount_volume@fasize+3
 19945   010A68                     l11209:
 19946                           
 19947                           ; BSR set to: 6
 19948                           ;fatfs/ff.c: 3516:   fs->fsize = fasize;
 19949   010A68  EE20 F018          	lfsr	2,24
 19950   010A6C  51AD               	movf	mount_volume@fs& (0+255),w,b
 19951   010A6E  26D9               	addwf	fsr2l,f,c
 19952   010A70  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19953   010A72  22DA               	addwfc	fsr2h,f,c
 19954   010A74  C6A7  F4DE         	movff	mount_volume@fasize,postinc2
 19955   010A78  C6A8  F4DE         	movff	mount_volume@fasize+1,postinc2
 19956   010A7C  C6A9  F4DE         	movff	mount_volume@fasize+2,postinc2
 19957   010A80  C6AA  F4DE         	movff	mount_volume@fasize+3,postinc2
 19958                           
 19959                           ; BSR set to: 6
 19960                           ;fatfs/ff.c: 3518:   fs->n_fats = fs->win[16];
 19961   010A84  EE20 F040          	lfsr	2,64
 19962   010A88  51AD               	movf	mount_volume@fs& (0+255),w,b
 19963   010A8A  26D9               	addwf	fsr2l,f,c
 19964   010A8C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19965   010A8E  22DA               	addwfc	fsr2h,f,c
 19966   010A90  EE10 F003          	lfsr	1,3
 19967   010A94  51AD               	movf	mount_volume@fs& (0+255),w,b
 19968   010A96  26E1               	addwf	fsr1l,f,c
 19969   010A98  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19970   010A9A  22E2               	addwfc	fsr1h,f,c
 19971   010A9C  C4DF F4E7          	movff	indf2,indf1
 19972                           
 19973                           ; BSR set to: 6
 19974                           ;fatfs/ff.c: 3519:   if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;
 19975   010AA0  EE20 F003          	lfsr	2,3
 19976   010AA4  51AD               	movf	mount_volume@fs& (0+255),w,b
 19977   010AA6  26D9               	addwf	fsr2l,f,c
 19978   010AA8  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19979   010AAA  22DA               	addwfc	fsr2h,f,c
 19980   010AAC  04DE               	decf	postinc2,w,c
 19981   010AAE  B4D8               	btfsc	status,2,c
 19982   010AB0  D00A               	goto	l11221
 19983                           
 19984                           ; BSR set to: 6
 19985   010AB2  EE20 F003          	lfsr	2,3
 19986   010AB6  51AD               	movf	mount_volume@fs& (0+255),w,b
 19987   010AB8  26D9               	addwf	fsr2l,f,c
 19988   010ABA  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 19989   010ABC  22DA               	addwfc	fsr2h,f,c
 19990   010ABE  0E02               	movlw	2
 19991   010AC0  18DE               	xorwf	postinc2,w,c
 19992   010AC2  A4D8               	btfss	status,2,c
 19993   010AC4  D78E               	goto	u13910
 19994   010AC6                     l11221:
 19995                           
 19996                           ; BSR set to: 6
 19997                           ;fatfs/ff.c: 3520:   fasize *= fs->n_fats;
 19998   010AC6  C6A7  F501         	movff	mount_volume@fasize,___lmul@multiplier
 19999   010ACA  C6A8  F502         	movff	mount_volume@fasize+1,___lmul@multiplier+1
 20000   010ACE  C6A9  F503         	movff	mount_volume@fasize+2,___lmul@multiplier+2
 20001   010AD2  C6AA  F504         	movff	mount_volume@fasize+3,___lmul@multiplier+3
 20002   010AD6  EE20 F003          	lfsr	2,3
 20003   010ADA  51AD               	movf	mount_volume@fs& (0+255),w,b
 20004   010ADC  26D9               	addwf	fsr2l,f,c
 20005   010ADE  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20006   010AE0  22DA               	addwfc	fsr2h,f,c
 20007   010AE2  50DF               	movf	indf2,w,c
 20008   010AE4  6F86               	movwf	??_mount_volume& (0+255),b
 20009   010AE6  5186               	movf	??_mount_volume& (0+255),w,b
 20010   010AE8  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 20011   010AEA  6A06               	clrf	(___lmul@multiplicand+1)^(0+1280),c
 20012   010AEC  6A07               	clrf	(___lmul@multiplicand+2)^(0+1280),c
 20013   010AEE  6A08               	clrf	(___lmul@multiplicand+3)^(0+1280),c
 20014   010AF0  EC2F  F0CC         	call	___lmul	;wreg free
 20015   010AF4  C501  F6A7         	movff	?___lmul,mount_volume@fasize
 20016   010AF8  C502  F6A8         	movff	?___lmul+1,mount_volume@fasize+1
 20017   010AFC  C503  F6A9         	movff	?___lmul+2,mount_volume@fasize+2
 20018   010B00  C504  F6AA         	movff	?___lmul+3,mount_volume@fasize+3
 20019                           
 20020                           ;fatfs/ff.c: 3522:   fs->csize = fs->win[13];
 20021   010B04  0106               	movlb	6	; () banked
 20022   010B06  EE20 F03D          	lfsr	2,61
 20023   010B0A  51AD               	movf	mount_volume@fs& (0+255),w,b
 20024   010B0C  26D9               	addwf	fsr2l,f,c
 20025   010B0E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20026   010B10  22DA               	addwfc	fsr2h,f,c
 20027   010B12  50DF               	movf	indf2,w,c
 20028   010B14  6F86               	movwf	??_mount_volume& (0+255),b
 20029   010B16  6B87               	clrf	(??_mount_volume+1)& (0+255),b
 20030   010B18  EE20 F00A          	lfsr	2,10
 20031   010B1C  51AD               	movf	mount_volume@fs& (0+255),w,b
 20032   010B1E  26D9               	addwf	fsr2l,f,c
 20033   010B20  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20034   010B22  22DA               	addwfc	fsr2h,f,c
 20035   010B24  C686  F4DE         	movff	??_mount_volume,postinc2
 20036   010B28  C687  F4DD         	movff	??_mount_volume+1,postdec2
 20037                           
 20038                           ; BSR set to: 6
 20039                           ;fatfs/ff.c: 3523:   if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_F
      +                          ILESYSTEM;
 20040   010B2C  EE20 F00A          	lfsr	2,10
 20041   010B30  51AD               	movf	mount_volume@fs& (0+255),w,b
 20042   010B32  26D9               	addwf	fsr2l,f,c
 20043   010B34  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20044   010B36  22DA               	addwfc	fsr2h,f,c
 20045   010B38  50DE               	movf	postinc2,w,c
 20046   010B3A  10DE               	iorwf	postinc2,w,c
 20047   010B3C  B4D8               	btfsc	status,2,c
 20048   010B3E  D751               	goto	u13910
 20049                           
 20050                           ; BSR set to: 6
 20051   010B40  EE20 F00A          	lfsr	2,10
 20052   010B44  51AD               	movf	mount_volume@fs& (0+255),w,b
 20053   010B46  26D9               	addwf	fsr2l,f,c
 20054   010B48  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20055   010B4A  22DA               	addwfc	fsr2h,f,c
 20056   010B4C  C4DE F686          	movff	postinc2,??_mount_volume
 20057   010B50  C4DD F687          	movff	postdec2,??_mount_volume+1
 20058   010B54  EE20 F00A          	lfsr	2,10
 20059   010B58  51AD               	movf	mount_volume@fs& (0+255),w,b
 20060   010B5A  26D9               	addwf	fsr2l,f,c
 20061   010B5C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20062   010B5E  22DA               	addwfc	fsr2h,f,c
 20063   010B60  C4DE F688          	movff	postinc2,??_mount_volume+2
 20064   010B64  C4DD F689          	movff	postdec2,??_mount_volume+3
 20065   010B68  0EFF               	movlw	255
 20066   010B6A  2588               	addwf	(??_mount_volume+2)& (0+255),w,b
 20067   010B6C  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 20068   010B6E  0EFF               	movlw	255
 20069   010B70  2189               	addwfc	(??_mount_volume+3)& (0+255),w,b
 20070   010B72  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 20071   010B74  5186               	movf	??_mount_volume& (0+255),w,b
 20072   010B76  158A               	andwf	(??_mount_volume+4)& (0+255),w,b
 20073   010B78  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 20074   010B7A  5187               	movf	(??_mount_volume+1)& (0+255),w,b
 20075   010B7C  158B               	andwf	(??_mount_volume+5)& (0+255),w,b
 20076   010B7E  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 20077   010B80  518C               	movf	(??_mount_volume+6)& (0+255),w,b
 20078   010B82  118D               	iorwf	(??_mount_volume+7)& (0+255),w,b
 20079   010B84  A4D8               	btfss	status,2,c
 20080   010B86  D72D               	goto	u13910
 20081                           
 20082                           ; BSR set to: 6
 20083                           ;fatfs/ff.c: 3525:   fs->n_rootdir = ld_word(fs->win + 17);
 20084   010B88  0E41               	movlw	65
 20085   010B8A  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20086   010B8C  6E01               	movwf	ld_word@ptr^(0+1280),c
 20087   010B8E  0E00               	movlw	0
 20088   010B90  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20089   010B92  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20090   010B94  EC31  F0CE         	call	_ld_word	;wreg free
 20091   010B98  0106               	movlb	6	; () banked
 20092   010B9A  EE20 F008          	lfsr	2,8
 20093   010B9E  51AD               	movf	mount_volume@fs& (0+255),w,b
 20094   010BA0  26D9               	addwf	fsr2l,f,c
 20095   010BA2  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20096   010BA4  22DA               	addwfc	fsr2h,f,c
 20097   010BA6  C501  F4DE         	movff	?_ld_word,postinc2
 20098   010BAA  C502  F4DD         	movff	?_ld_word+1,postdec2
 20099                           
 20100                           ; BSR set to: 6
 20101                           ;fatfs/ff.c: 3526:   if (fs->n_rootdir % (((UINT)512) / 32)) return FR_NO_FILESYSTEM;
 20102   010BAE  EE20 F008          	lfsr	2,8
 20103   010BB2  51AD               	movf	mount_volume@fs& (0+255),w,b
 20104   010BB4  26D9               	addwf	fsr2l,f,c
 20105   010BB6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20106   010BB8  22DA               	addwfc	fsr2h,f,c
 20107   010BBA  50DF               	movf	indf2,w,c
 20108   010BBC  6F86               	movwf	??_mount_volume& (0+255),b
 20109   010BBE  0E0F               	movlw	15
 20110   010BC0  1786               	andwf	??_mount_volume& (0+255),f,b
 20111   010BC2  A4D8               	btfss	status,2,c
 20112   010BC4  D70E               	goto	u13910
 20113                           
 20114                           ; BSR set to: 6
 20115                           ;fatfs/ff.c: 3528:   tsect = ld_word(fs->win + 19);
 20116   010BC6  0E43               	movlw	67
 20117   010BC8  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20118   010BCA  6E01               	movwf	ld_word@ptr^(0+1280),c
 20119   010BCC  0E00               	movlw	0
 20120   010BCE  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20121   010BD0  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20122   010BD2  EC31  F0CE         	call	_ld_word	;wreg free
 20123   010BD6  C501  F69A         	movff	?_ld_word,mount_volume@tsect
 20124   010BDA  C502  F69B         	movff	?_ld_word+1,mount_volume@tsect+1
 20125   010BDE  0106               	movlb	6	; () banked
 20126   010BE0  6B9C               	clrf	(mount_volume@tsect+2)& (0+255),b
 20127   010BE2  6B9D               	clrf	(mount_volume@tsect+3)& (0+255),b
 20128                           
 20129                           ; BSR set to: 6
 20130                           ;fatfs/ff.c: 3529:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 20131   010BE4  519A               	movf	mount_volume@tsect& (0+255),w,b
 20132   010BE6  119B               	iorwf	(mount_volume@tsect+1)& (0+255),w,b
 20133   010BE8  119C               	iorwf	(mount_volume@tsect+2)& (0+255),w,b
 20134   010BEA  119D               	iorwf	(mount_volume@tsect+3)& (0+255),w,b
 20135   010BEC  A4D8               	btfss	status,2,c
 20136   010BEE  D010               	goto	l567
 20137                           
 20138                           ; BSR set to: 6
 20139   010BF0  0E50               	movlw	80
 20140   010BF2  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20141   010BF4  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20142   010BF6  0E00               	movlw	0
 20143   010BF8  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20144   010BFA  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20145   010BFC  ECD5  F0C4         	call	_ld_dword	;wreg free
 20146   010C00  C501  F69A         	movff	?_ld_dword,mount_volume@tsect
 20147   010C04  C502  F69B         	movff	?_ld_dword+1,mount_volume@tsect+1
 20148   010C08  C503  F69C         	movff	?_ld_dword+2,mount_volume@tsect+2
 20149   010C0C  C504  F69D         	movff	?_ld_dword+3,mount_volume@tsect+3
 20150   010C10                     l567:
 20151                           
 20152                           ; BSR set to: 6
 20153                           ;fatfs/ff.c: 3531:   nrsv = ld_word(fs->win + 14);
 20154   010C10  0E3E               	movlw	62
 20155   010C12  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20156   010C14  6E01               	movwf	ld_word@ptr^(0+1280),c
 20157   010C16  0E00               	movlw	0
 20158   010C18  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20159   010C1A  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20160   010C1C  EC31  F0CE         	call	_ld_word	;wreg free
 20161   010C20  C501  F698         	movff	?_ld_word,mount_volume@nrsv
 20162   010C24  C502  F699         	movff	?_ld_word+1,mount_volume@nrsv+1
 20163                           
 20164                           ;fatfs/ff.c: 3532:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 20165   010C28  0106               	movlb	6	; () banked
 20166   010C2A  5198               	movf	mount_volume@nrsv& (0+255),w,b
 20167   010C2C  1199               	iorwf	(mount_volume@nrsv+1)& (0+255),w,b
 20168   010C2E  B4D8               	btfsc	status,2,c
 20169   010C30  D6D8               	goto	u13910
 20170                           
 20171                           ; BSR set to: 6
 20172                           ;fatfs/ff.c: 3535:   sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
 20173   010C32  EE20 F008          	lfsr	2,8
 20174   010C36  51AD               	movf	mount_volume@fs& (0+255),w,b
 20175   010C38  26D9               	addwf	fsr2l,f,c
 20176   010C3A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20177   010C3C  22DA               	addwfc	fsr2h,f,c
 20178   010C3E  C4DE F686          	movff	postinc2,??_mount_volume
 20179   010C42  C4DD F687          	movff	postdec2,??_mount_volume+1
 20180   010C46  0E04               	movlw	4
 20181   010C48  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 20182   010C4A                     u14015:
 20183   010C4A  90D8               	bcf	status,0,c
 20184   010C4C  3387               	rrcf	(??_mount_volume+1)& (0+255),f,b
 20185   010C4E  3386               	rrcf	??_mount_volume& (0+255),f,b
 20186   010C50  2F88               	decfsz	(??_mount_volume+2)& (0+255),f,b
 20187   010C52  D7FB               	goto	u14015
 20188   010C54  5198               	movf	mount_volume@nrsv& (0+255),w,b
 20189   010C56  2586               	addwf	??_mount_volume& (0+255),w,b
 20190   010C58  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 20191   010C5A  5199               	movf	(mount_volume@nrsv+1)& (0+255),w,b
 20192   010C5C  2187               	addwfc	(??_mount_volume+1)& (0+255),w,b
 20193   010C5E  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 20194   010C60  6B8B               	clrf	(??_mount_volume+5)& (0+255),b
 20195   010C62  B0D8               	btfsc	status,0,c
 20196   010C64  2B8B               	incf	(??_mount_volume+5)& (0+255),f,b
 20197   010C66  6B8C               	clrf	(??_mount_volume+6)& (0+255),b
 20198   010C68  51A7               	movf	mount_volume@fasize& (0+255),w,b
 20199   010C6A  2589               	addwf	(??_mount_volume+3)& (0+255),w,b
 20200   010C6C  6F94               	movwf	mount_volume@sysect& (0+255),b
 20201   010C6E  51A8               	movf	(mount_volume@fasize+1)& (0+255),w,b
 20202   010C70  218A               	addwfc	(??_mount_volume+4)& (0+255),w,b
 20203   010C72  6F95               	movwf	(mount_volume@sysect+1)& (0+255),b
 20204   010C74  51A9               	movf	(mount_volume@fasize+2)& (0+255),w,b
 20205   010C76  218B               	addwfc	(??_mount_volume+5)& (0+255),w,b
 20206   010C78  6F96               	movwf	(mount_volume@sysect+2)& (0+255),b
 20207   010C7A  51AA               	movf	(mount_volume@fasize+3)& (0+255),w,b
 20208   010C7C  218C               	addwfc	(??_mount_volume+6)& (0+255),w,b
 20209   010C7E  6F97               	movwf	(mount_volume@sysect+3)& (0+255),b
 20210                           
 20211                           ; BSR set to: 6
 20212                           ;fatfs/ff.c: 3536:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 20213   010C80  5194               	movf	mount_volume@sysect& (0+255),w,b
 20214   010C82  5D9A               	subwf	mount_volume@tsect& (0+255),w,b
 20215   010C84  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 20216   010C86  599B               	subwfb	(mount_volume@tsect+1)& (0+255),w,b
 20217   010C88  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 20218   010C8A  599C               	subwfb	(mount_volume@tsect+2)& (0+255),w,b
 20219   010C8C  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 20220   010C8E  599D               	subwfb	(mount_volume@tsect+3)& (0+255),w,b
 20221   010C90  A0D8               	btfss	status,0,c
 20222   010C92  D6A7               	goto	u13910
 20223                           
 20224                           ; BSR set to: 6
 20225                           ;fatfs/ff.c: 3537:   nclst = (tsect - sysect) / fs->csize;
 20226   010C94  5194               	movf	mount_volume@sysect& (0+255),w,b
 20227   010C96  5D9A               	subwf	mount_volume@tsect& (0+255),w,b
 20228   010C98  6E01               	movwf	___lldiv@dividend^(0+1280),c
 20229   010C9A  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 20230   010C9C  599B               	subwfb	(mount_volume@tsect+1)& (0+255),w,b
 20231   010C9E  6E02               	movwf	(___lldiv@dividend+1)^(0+1280),c
 20232   010CA0  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 20233   010CA2  599C               	subwfb	(mount_volume@tsect+2)& (0+255),w,b
 20234   010CA4  6E03               	movwf	(___lldiv@dividend+2)^(0+1280),c
 20235   010CA6  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 20236   010CA8  599D               	subwfb	(mount_volume@tsect+3)& (0+255),w,b
 20237   010CAA  6E04               	movwf	(___lldiv@dividend+3)^(0+1280),c
 20238   010CAC  EE20 F00A          	lfsr	2,10
 20239   010CB0  51AD               	movf	mount_volume@fs& (0+255),w,b
 20240   010CB2  26D9               	addwf	fsr2l,f,c
 20241   010CB4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20242   010CB6  22DA               	addwfc	fsr2h,f,c
 20243   010CB8  C4DE F686          	movff	postinc2,??_mount_volume
 20244   010CBC  C4DD F687          	movff	postdec2,??_mount_volume+1
 20245   010CC0  C686  F505         	movff	??_mount_volume,___lldiv@divisor
 20246   010CC4  C687  F506         	movff	??_mount_volume+1,___lldiv@divisor+1
 20247   010CC8  6A07               	clrf	(___lldiv@divisor+2)^(0+1280),c
 20248   010CCA  6A08               	clrf	(___lldiv@divisor+3)^(0+1280),c
 20249   010CCC  EC91  F0C9         	call	___lldiv	;wreg free
 20250   010CD0  C501  F6A3         	movff	?___lldiv,mount_volume@nclst
 20251   010CD4  C502  F6A4         	movff	?___lldiv+1,mount_volume@nclst+1
 20252   010CD8  C503  F6A5         	movff	?___lldiv+2,mount_volume@nclst+2
 20253   010CDC  C504  F6A6         	movff	?___lldiv+3,mount_volume@nclst+3
 20254                           
 20255                           ; BSR set to: 6
 20256                           ;fatfs/ff.c: 3538:   if (nclst == 0) return FR_NO_FILESYSTEM;
 20257   010CE0  51A3               	movf	mount_volume@nclst& (0+255),w,b
 20258   010CE2  11A4               	iorwf	(mount_volume@nclst+1)& (0+255),w,b
 20259   010CE4  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 20260   010CE6  11A6               	iorwf	(mount_volume@nclst+3)& (0+255),w,b
 20261   010CE8  B4D8               	btfsc	status,2,c
 20262   010CEA  D67B               	goto	u13910
 20263                           
 20264                           ; BSR set to: 6
 20265                           ;fatfs/ff.c: 3539:   fmt = 0;
 20266   010CEC  0E00               	movlw	0
 20267   010CEE  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 20268   010CF0  0E00               	movlw	0
 20269   010CF2  6FAB               	movwf	mount_volume@fmt& (0+255),b
 20270                           
 20271                           ; BSR set to: 6
 20272                           ;fatfs/ff.c: 3540:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 20273   010CF4  0EF6               	movlw	246
 20274   010CF6  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 20275   010CF8  0EFF               	movlw	255
 20276   010CFA  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 20277   010CFC  0EFF               	movlw	255
 20278   010CFE  59A5               	subwfb	(mount_volume@nclst+2)& (0+255),w,b
 20279   010D00  0E0F               	movlw	15
 20280   010D02  59A6               	subwfb	(mount_volume@nclst+3)& (0+255),w,b
 20281   010D04  B0D8               	btfsc	status,0,c
 20282   010D06  D004               	goto	l11275
 20283                           
 20284                           ; BSR set to: 6
 20285   010D08  0E00               	movlw	0
 20286   010D0A  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 20287   010D0C  0E03               	movlw	3
 20288   010D0E  6FAB               	movwf	mount_volume@fmt& (0+255),b
 20289   010D10                     l11275:
 20290                           
 20291                           ; BSR set to: 6
 20292                           ;fatfs/ff.c: 3541:   if (nclst <= 0xFFF5) fmt = 2;
 20293   010D10  51A6               	movf	(mount_volume@nclst+3)& (0+255),w,b
 20294   010D12  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 20295   010D14  E10A               	bnz	l11279
 20296   010D16  0EF6               	movlw	246
 20297   010D18  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 20298   010D1A  0EFF               	movlw	255
 20299   010D1C  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 20300   010D1E  B0D8               	btfsc	status,0,c
 20301   010D20  D004               	goto	l11279
 20302                           
 20303                           ; BSR set to: 6
 20304   010D22  0E00               	movlw	0
 20305   010D24  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 20306   010D26  0E02               	movlw	2
 20307   010D28  6FAB               	movwf	mount_volume@fmt& (0+255),b
 20308   010D2A                     l11279:
 20309                           
 20310                           ; BSR set to: 6
 20311                           ;fatfs/ff.c: 3542:   if (nclst <= 0xFF5) fmt = 1;
 20312   010D2A  51A6               	movf	(mount_volume@nclst+3)& (0+255),w,b
 20313   010D2C  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 20314   010D2E  E10A               	bnz	l11283
 20315   010D30  0EF6               	movlw	246
 20316   010D32  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 20317   010D34  0E0F               	movlw	15
 20318   010D36  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 20319   010D38  B0D8               	btfsc	status,0,c
 20320   010D3A  D004               	goto	l11283
 20321                           
 20322                           ; BSR set to: 6
 20323   010D3C  0E00               	movlw	0
 20324   010D3E  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 20325   010D40  0E01               	movlw	1
 20326   010D42  6FAB               	movwf	mount_volume@fmt& (0+255),b
 20327   010D44                     l11283:
 20328                           
 20329                           ; BSR set to: 6
 20330                           ;fatfs/ff.c: 3543:   if (fmt == 0) return FR_NO_FILESYSTEM;
 20331   010D44  51AB               	movf	mount_volume@fmt& (0+255),w,b
 20332   010D46  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 20333   010D48  B4D8               	btfsc	status,2,c
 20334   010D4A  D64B               	goto	u13910
 20335                           
 20336                           ; BSR set to: 6
 20337                           ;fatfs/ff.c: 3546:   fs->n_fatent = nclst + 2;
 20338   010D4C  0E02               	movlw	2
 20339   010D4E  25A3               	addwf	mount_volume@nclst& (0+255),w,b
 20340   010D50  6F86               	movwf	??_mount_volume& (0+255),b
 20341   010D52  0E00               	movlw	0
 20342   010D54  21A4               	addwfc	(mount_volume@nclst+1)& (0+255),w,b
 20343   010D56  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 20344   010D58  0E00               	movlw	0
 20345   010D5A  21A5               	addwfc	(mount_volume@nclst+2)& (0+255),w,b
 20346   010D5C  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 20347   010D5E  0E00               	movlw	0
 20348   010D60  21A6               	addwfc	(mount_volume@nclst+3)& (0+255),w,b
 20349   010D62  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 20350   010D64  EE20 F014          	lfsr	2,20
 20351   010D68  51AD               	movf	mount_volume@fs& (0+255),w,b
 20352   010D6A  26D9               	addwf	fsr2l,f,c
 20353   010D6C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20354   010D6E  22DA               	addwfc	fsr2h,f,c
 20355   010D70  C686  F4DE         	movff	??_mount_volume,postinc2
 20356   010D74  C687  F4DE         	movff	??_mount_volume+1,postinc2
 20357   010D78  C688  F4DE         	movff	??_mount_volume+2,postinc2
 20358   010D7C  C689  F4DE         	movff	??_mount_volume+3,postinc2
 20359                           
 20360                           ;fatfs/ff.c: 3547:   fs->volbase = bsect;
 20361   010D80  EE20 F01C          	lfsr	2,28
 20362   010D84  51AD               	movf	mount_volume@fs& (0+255),w,b
 20363   010D86  26D9               	addwf	fsr2l,f,c
 20364   010D88  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20365   010D8A  22DA               	addwfc	fsr2h,f,c
 20366   010D8C  C69E  F4DE         	movff	mount_volume@bsect,postinc2
 20367   010D90  C69F  F4DE         	movff	mount_volume@bsect+1,postinc2
 20368   010D94  C6A0  F4DE         	movff	mount_volume@bsect+2,postinc2
 20369   010D98  C6A1  F4DE         	movff	mount_volume@bsect+3,postinc2
 20370                           
 20371                           ;fatfs/ff.c: 3548:   fs->fatbase = bsect + nrsv;
 20372   010D9C  5198               	movf	mount_volume@nrsv& (0+255),w,b
 20373   010D9E  259E               	addwf	mount_volume@bsect& (0+255),w,b
 20374   010DA0  6F86               	movwf	??_mount_volume& (0+255),b
 20375   010DA2  5199               	movf	(mount_volume@nrsv+1)& (0+255),w,b
 20376   010DA4  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 20377   010DA6  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 20378   010DA8  0E00               	movlw	0
 20379   010DAA  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 20380   010DAC  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 20381   010DAE  0E00               	movlw	0
 20382   010DB0  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 20383   010DB2  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 20384   010DB4  EE20 F020          	lfsr	2,32
 20385   010DB8  51AD               	movf	mount_volume@fs& (0+255),w,b
 20386   010DBA  26D9               	addwf	fsr2l,f,c
 20387   010DBC  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20388   010DBE  22DA               	addwfc	fsr2h,f,c
 20389   010DC0  C686  F4DE         	movff	??_mount_volume,postinc2
 20390   010DC4  C687  F4DE         	movff	??_mount_volume+1,postinc2
 20391   010DC8  C688  F4DE         	movff	??_mount_volume+2,postinc2
 20392   010DCC  C689  F4DE         	movff	??_mount_volume+3,postinc2
 20393                           
 20394                           ;fatfs/ff.c: 3549:   fs->database = bsect + sysect;
 20395   010DD0  5194               	movf	mount_volume@sysect& (0+255),w,b
 20396   010DD2  259E               	addwf	mount_volume@bsect& (0+255),w,b
 20397   010DD4  6F86               	movwf	??_mount_volume& (0+255),b
 20398   010DD6  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 20399   010DD8  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 20400   010DDA  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 20401   010DDC  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 20402   010DDE  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 20403   010DE0  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 20404   010DE2  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 20405   010DE4  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 20406   010DE6  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 20407   010DE8  EE20 F028          	lfsr	2,40
 20408   010DEC  51AD               	movf	mount_volume@fs& (0+255),w,b
 20409   010DEE  26D9               	addwf	fsr2l,f,c
 20410   010DF0  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20411   010DF2  22DA               	addwfc	fsr2h,f,c
 20412   010DF4  C686  F4DE         	movff	??_mount_volume,postinc2
 20413   010DF8  C687  F4DE         	movff	??_mount_volume+1,postinc2
 20414   010DFC  C688  F4DE         	movff	??_mount_volume+2,postinc2
 20415   010E00  C689  F4DE         	movff	??_mount_volume+3,postinc2
 20416                           
 20417                           ; BSR set to: 6
 20418                           ;fatfs/ff.c: 3550:   if (fmt == 3) {
 20419   010E04  0E03               	movlw	3
 20420   010E06  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 20421   010E08  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 20422   010E0A  A4D8               	btfss	status,2,c
 20423   010E0C  D04C               	goto	l11309
 20424                           
 20425                           ; BSR set to: 6
 20426                           ;fatfs/ff.c: 3551:    if (ld_word(fs->win + 42) != 0) return FR_NO_FILESYSTEM;
 20427   010E0E  0E5A               	movlw	90
 20428   010E10  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20429   010E12  6E01               	movwf	ld_word@ptr^(0+1280),c
 20430   010E14  0E00               	movlw	0
 20431   010E16  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20432   010E18  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20433   010E1A  EC31  F0CE         	call	_ld_word	;wreg free
 20434   010E1E  5001               	movf	?_ld_word^(0+1280),w,c
 20435   010E20  1002               	iorwf	(?_ld_word+1)^(0+1280),w,c
 20436   010E22  A4D8               	btfss	status,2,c
 20437   010E24  D5DE               	goto	u13910
 20438                           
 20439                           ;fatfs/ff.c: 3552:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;
 20440   010E26  0106               	movlb	6	; () banked
 20441   010E28  EE20 F008          	lfsr	2,8
 20442   010E2C  51AD               	movf	mount_volume@fs& (0+255),w,b
 20443   010E2E  26D9               	addwf	fsr2l,f,c
 20444   010E30  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20445   010E32  22DA               	addwfc	fsr2h,f,c
 20446   010E34  50DE               	movf	postinc2,w,c
 20447   010E36  10DE               	iorwf	postinc2,w,c
 20448   010E38  A4D8               	btfss	status,2,c
 20449   010E3A  D5D3               	goto	u13910
 20450                           
 20451                           ; BSR set to: 6
 20452                           ;fatfs/ff.c: 3553:    fs->dirbase = ld_dword(fs->win + 44);
 20453   010E3C  0E5C               	movlw	92
 20454   010E3E  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20455   010E40  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20456   010E42  0E00               	movlw	0
 20457   010E44  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20458   010E46  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20459   010E48  ECD5  F0C4         	call	_ld_dword	;wreg free
 20460   010E4C  EE20 F024          	lfsr	2,36
 20461   010E50  51AD               	movf	mount_volume@fs& (0+255),w,b
 20462   010E52  26D9               	addwf	fsr2l,f,c
 20463   010E54  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20464   010E56  22DA               	addwfc	fsr2h,f,c
 20465   010E58  C501  F4DE         	movff	?_ld_dword,postinc2
 20466   010E5C  C502  F4DE         	movff	?_ld_dword+1,postinc2
 20467   010E60  C503  F4DE         	movff	?_ld_dword+2,postinc2
 20468   010E64  C504  F4DE         	movff	?_ld_dword+3,postinc2
 20469                           
 20470                           ; BSR set to: 6
 20471                           ;fatfs/ff.c: 3554:    szbfat = fs->n_fatent * 4;
 20472   010E68  EE20 F014          	lfsr	2,20
 20473   010E6C  51AD               	movf	mount_volume@fs& (0+255),w,b
 20474   010E6E  26D9               	addwf	fsr2l,f,c
 20475   010E70  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20476   010E72  22DA               	addwfc	fsr2h,f,c
 20477   010E74  C4DE F686          	movff	postinc2,??_mount_volume
 20478   010E78  C4DE F687          	movff	postinc2,??_mount_volume+1
 20479   010E7C  C4DE F688          	movff	postinc2,??_mount_volume+2
 20480   010E80  C4DE F689          	movff	postinc2,??_mount_volume+3
 20481   010E84  0E02               	movlw	2
 20482   010E86                     u14115:
 20483   010E86  90D8               	bcf	status,0,c
 20484   010E88  3786               	rlcf	??_mount_volume& (0+255),f,b
 20485   010E8A  3787               	rlcf	(??_mount_volume+1)& (0+255),f,b
 20486   010E8C  3788               	rlcf	(??_mount_volume+2)& (0+255),f,b
 20487   010E8E  3789               	rlcf	(??_mount_volume+3)& (0+255),f,b
 20488   010E90  2EE8               	decfsz	wreg,f,c
 20489   010E92  D7F9               	goto	u14115
 20490   010E94  C686  F68E         	movff	??_mount_volume,mount_volume@szbfat
 20491   010E98  C687  F68F         	movff	??_mount_volume+1,mount_volume@szbfat+1
 20492   010E9C  C688  F690         	movff	??_mount_volume+2,mount_volume@szbfat+2
 20493   010EA0  C689  F691         	movff	??_mount_volume+3,mount_volume@szbfat+3
 20494                           
 20495                           ;fatfs/ff.c: 3555:   } else {
 20496   010EA4  D092               	goto	l578
 20497   010EA6                     l11309:
 20498                           
 20499                           ; BSR set to: 6
 20500                           ;fatfs/ff.c: 3556:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTEM;
 20501   010EA6  EE20 F008          	lfsr	2,8
 20502   010EAA  51AD               	movf	mount_volume@fs& (0+255),w,b
 20503   010EAC  26D9               	addwf	fsr2l,f,c
 20504   010EAE  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20505   010EB0  22DA               	addwfc	fsr2h,f,c
 20506   010EB2  50DE               	movf	postinc2,w,c
 20507   010EB4  10DE               	iorwf	postinc2,w,c
 20508   010EB6  B4D8               	btfsc	status,2,c
 20509   010EB8  D594               	goto	u13910
 20510                           
 20511                           ; BSR set to: 6
 20512                           ;fatfs/ff.c: 3557:    fs->dirbase = fs->fatbase + fasize;
 20513   010EBA  EE20 F020          	lfsr	2,32
 20514   010EBE  51AD               	movf	mount_volume@fs& (0+255),w,b
 20515   010EC0  26D9               	addwf	fsr2l,f,c
 20516   010EC2  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20517   010EC4  22DA               	addwfc	fsr2h,f,c
 20518   010EC6  C4DE F686          	movff	postinc2,??_mount_volume
 20519   010ECA  C4DE F687          	movff	postinc2,??_mount_volume+1
 20520   010ECE  C4DE F688          	movff	postinc2,??_mount_volume+2
 20521   010ED2  C4DE F689          	movff	postinc2,??_mount_volume+3
 20522   010ED6  51A7               	movf	mount_volume@fasize& (0+255),w,b
 20523   010ED8  2586               	addwf	??_mount_volume& (0+255),w,b
 20524   010EDA  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 20525   010EDC  51A8               	movf	(mount_volume@fasize+1)& (0+255),w,b
 20526   010EDE  2187               	addwfc	(??_mount_volume+1)& (0+255),w,b
 20527   010EE0  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 20528   010EE2  51A9               	movf	(mount_volume@fasize+2)& (0+255),w,b
 20529   010EE4  2188               	addwfc	(??_mount_volume+2)& (0+255),w,b
 20530   010EE6  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 20531   010EE8  51AA               	movf	(mount_volume@fasize+3)& (0+255),w,b
 20532   010EEA  2189               	addwfc	(??_mount_volume+3)& (0+255),w,b
 20533   010EEC  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 20534   010EEE  EE20 F024          	lfsr	2,36
 20535   010EF2  51AD               	movf	mount_volume@fs& (0+255),w,b
 20536   010EF4  26D9               	addwf	fsr2l,f,c
 20537   010EF6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20538   010EF8  22DA               	addwfc	fsr2h,f,c
 20539   010EFA  C68A  F4DE         	movff	??_mount_volume+4,postinc2
 20540   010EFE  C68B  F4DE         	movff	??_mount_volume+5,postinc2
 20541   010F02  C68C  F4DE         	movff	??_mount_volume+6,postinc2
 20542   010F06  C68D  F4DE         	movff	??_mount_volume+7,postinc2
 20543                           
 20544                           ; BSR set to: 6
 20545                           ;fatfs/ff.c: 3558:    szbfat = (fmt == 2) ?
 20546   010F0A  0E02               	movlw	2
 20547   010F0C  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 20548   010F0E  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 20549   010F10  B4D8               	btfsc	status,2,c
 20550   010F12  D044               	goto	l11321
 20551                           
 20552                           ; BSR set to: 6
 20553   010F14  EE20 F014          	lfsr	2,20
 20554   010F18  51AD               	movf	mount_volume@fs& (0+255),w,b
 20555   010F1A  26D9               	addwf	fsr2l,f,c
 20556   010F1C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20557   010F1E  22DA               	addwfc	fsr2h,f,c
 20558   010F20  C4DE F686          	movff	postinc2,??_mount_volume
 20559   010F24  C4DE F687          	movff	postinc2,??_mount_volume+1
 20560   010F28  C4DE F688          	movff	postinc2,??_mount_volume+2
 20561   010F2C  C4DE F689          	movff	postinc2,??_mount_volume+3
 20562   010F30  0E01               	movlw	1
 20563   010F32  1586               	andwf	??_mount_volume& (0+255),w,b
 20564   010F34  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 20565   010F36  0E00               	movlw	0
 20566   010F38  1587               	andwf	(??_mount_volume+1)& (0+255),w,b
 20567   010F3A  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 20568   010F3C  0E00               	movlw	0
 20569   010F3E  1588               	andwf	(??_mount_volume+2)& (0+255),w,b
 20570   010F40  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 20571   010F42  0E00               	movlw	0
 20572   010F44  1589               	andwf	(??_mount_volume+3)& (0+255),w,b
 20573   010F46  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 20574   010F48  EE20 F014          	lfsr	2,20
 20575   010F4C  51AD               	movf	mount_volume@fs& (0+255),w,b
 20576   010F4E  26D9               	addwf	fsr2l,f,c
 20577   010F50  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20578   010F52  22DA               	addwfc	fsr2h,f,c
 20579   010F54  C4DE F501          	movff	postinc2,___lmul@multiplier
 20580   010F58  C4DE F502          	movff	postinc2,___lmul@multiplier+1
 20581   010F5C  C4DE F503          	movff	postinc2,___lmul@multiplier+2
 20582   010F60  C4DE F504          	movff	postinc2,___lmul@multiplier+3
 20583   010F64  0E03               	movlw	3
 20584   010F66  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 20585   010F68  0E00               	movlw	0
 20586   010F6A  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 20587   010F6C  0E00               	movlw	0
 20588   010F6E  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 20589   010F70  0E00               	movlw	0
 20590   010F72  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 20591   010F74  EC2F  F0CC         	call	___lmul	;wreg free
 20592   010F78  90D8               	bcf	status,0,c
 20593   010F7A  3204               	rrcf	(?___lmul+3)^(0+1280),f,c
 20594   010F7C  3203               	rrcf	(?___lmul+2)^(0+1280),f,c
 20595   010F7E  3202               	rrcf	(?___lmul+1)^(0+1280),f,c
 20596   010F80  3201               	rrcf	?___lmul^(0+1280),f,c
 20597   010F82  0106               	movlb	6	; () banked
 20598   010F84  518A               	movf	(??_mount_volume+4)& (0+255),w,b
 20599   010F86  2401               	addwf	?___lmul^(0+1280),w,c
 20600   010F88  6F8E               	movwf	mount_volume@szbfat& (0+255),b
 20601   010F8A  518B               	movf	(??_mount_volume+5)& (0+255),w,b
 20602   010F8C  2002               	addwfc	(?___lmul+1)^(0+1280),w,c
 20603   010F8E  6F8F               	movwf	(mount_volume@szbfat+1)& (0+255),b
 20604   010F90  518C               	movf	(??_mount_volume+6)& (0+255),w,b
 20605   010F92  2003               	addwfc	(?___lmul+2)^(0+1280),w,c
 20606   010F94  6F90               	movwf	(mount_volume@szbfat+2)& (0+255),b
 20607   010F96  518D               	movf	(??_mount_volume+7)& (0+255),w,b
 20608   010F98  2004               	addwfc	(?___lmul+3)^(0+1280),w,c
 20609   010F9A  D016               	goto	L8
 20610   010F9C                     l11321:
 20611                           
 20612                           ; BSR set to: 6
 20613   010F9C  EE20 F014          	lfsr	2,20
 20614   010FA0  51AD               	movf	mount_volume@fs& (0+255),w,b
 20615   010FA2  26D9               	addwf	fsr2l,f,c
 20616   010FA4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20617   010FA6  22DA               	addwfc	fsr2h,f,c
 20618   010FA8  C4DE F686          	movff	postinc2,??_mount_volume
 20619   010FAC  C4DE F687          	movff	postinc2,??_mount_volume+1
 20620   010FB0  C4DE F688          	movff	postinc2,??_mount_volume+2
 20621   010FB4  C4DE F689          	movff	postinc2,??_mount_volume+3
 20622   010FB8  90D8               	bcf	status,0,c
 20623   010FBA  3586               	rlcf	??_mount_volume& (0+255),w,b
 20624   010FBC  6F8E               	movwf	mount_volume@szbfat& (0+255),b
 20625   010FBE  3587               	rlcf	(??_mount_volume+1)& (0+255),w,b
 20626   010FC0  6F8F               	movwf	(mount_volume@szbfat+1)& (0+255),b
 20627   010FC2  3588               	rlcf	(??_mount_volume+2)& (0+255),w,b
 20628   010FC4  6F90               	movwf	(mount_volume@szbfat+2)& (0+255),b
 20629   010FC6  3589               	rlcf	(??_mount_volume+3)& (0+255),w,b
 20630   010FC8                     L8:
 20631   010FC8  6F91               	movwf	(mount_volume@szbfat+3)& (0+255),b
 20632   010FCA                     l578:
 20633                           
 20634                           ; BSR set to: 6
 20635                           ;fatfs/ff.c: 3561:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512)) return 
      +                          FR_NO_FILESYSTEM;
 20636   010FCA  0EFF               	movlw	255
 20637   010FCC  258E               	addwf	mount_volume@szbfat& (0+255),w,b
 20638   010FCE  6F86               	movwf	??_mount_volume& (0+255),b
 20639   010FD0  0E01               	movlw	1
 20640   010FD2  218F               	addwfc	(mount_volume@szbfat+1)& (0+255),w,b
 20641   010FD4  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 20642   010FD6  0E00               	movlw	0
 20643   010FD8  2190               	addwfc	(mount_volume@szbfat+2)& (0+255),w,b
 20644   010FDA  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 20645   010FDC  0E00               	movlw	0
 20646   010FDE  2191               	addwfc	(mount_volume@szbfat+3)& (0+255),w,b
 20647   010FE0  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 20648   010FE2  0E0A               	movlw	10
 20649   010FE4  D005               	goto	u14140
 20650   010FE6                     u14145:
 20651   010FE6  90D8               	bcf	status,0,c
 20652   010FE8  3389               	rrcf	(??_mount_volume+3)& (0+255),f,b
 20653   010FEA  3388               	rrcf	(??_mount_volume+2)& (0+255),f,b
 20654   010FEC  3387               	rrcf	(??_mount_volume+1)& (0+255),f,b
 20655   010FEE  3386               	rrcf	??_mount_volume& (0+255),f,b
 20656   010FF0                     u14140:
 20657   010FF0  2EE8               	decfsz	wreg,f,c
 20658   010FF2  D7F9               	goto	u14145
 20659   010FF4  EE20 F018          	lfsr	2,24
 20660   010FF8  51AD               	movf	mount_volume@fs& (0+255),w,b
 20661   010FFA  26D9               	addwf	fsr2l,f,c
 20662   010FFC  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20663   010FFE  22DA               	addwfc	fsr2h,f,c
 20664   011000  5186               	movf	??_mount_volume& (0+255),w,b
 20665   011002  5CDE               	subwf	postinc2,w,c
 20666   011004  5187               	movf	(??_mount_volume+1)& (0+255),w,b
 20667   011006  58DE               	subwfb	postinc2,w,c
 20668   011008  5188               	movf	(??_mount_volume+2)& (0+255),w,b
 20669   01100A  58DE               	subwfb	postinc2,w,c
 20670   01100C  5189               	movf	(??_mount_volume+3)& (0+255),w,b
 20671   01100E  58DE               	subwfb	postinc2,w,c
 20672   011010  A0D8               	btfss	status,0,c
 20673   011012  D4E7               	goto	u13910
 20674                           
 20675                           ; BSR set to: 6
 20676                           ;fatfs/ff.c: 3565:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 20677   011014  EE20 F010          	lfsr	2,16
 20678   011018  51AD               	movf	mount_volume@fs& (0+255),w,b
 20679   01101A  26D9               	addwf	fsr2l,f,c
 20680   01101C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20681   01101E  22DA               	addwfc	fsr2h,f,c
 20682   011020  0EFF               	movlw	255
 20683   011022  6EDE               	movwf	postinc2,c
 20684   011024  0EFF               	movlw	255
 20685   011026  6EDE               	movwf	postinc2,c
 20686   011028  0EFF               	movlw	255
 20687   01102A  6EDE               	movwf	postinc2,c
 20688   01102C  0EFF               	movlw	255
 20689   01102E  6EDD               	movwf	postdec2,c
 20690   011030  52DD               	movf	postdec2,f,c
 20691   011032  52DD               	movf	postdec2,f,c
 20692   011034  EE10 F00C          	lfsr	1,12
 20693   011038  51AD               	movf	mount_volume@fs& (0+255),w,b
 20694   01103A  26E1               	addwf	fsr1l,f,c
 20695   01103C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20696   01103E  22E2               	addwfc	fsr1h,f,c
 20697   011040  C4DE F4E6          	movff	postinc2,postinc1
 20698   011044  C4DE F4E6          	movff	postinc2,postinc1
 20699   011048  C4DE F4E6          	movff	postinc2,postinc1
 20700   01104C  C4DE F4E6          	movff	postinc2,postinc1
 20701                           
 20702                           ; BSR set to: 6
 20703                           ;fatfs/ff.c: 3566:   fs->fsi_flag = 0x80;
 20704   011050  EE20 F005          	lfsr	2,5
 20705   011054  51AD               	movf	mount_volume@fs& (0+255),w,b
 20706   011056  26D9               	addwf	fsr2l,f,c
 20707   011058  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20708   01105A  22DA               	addwfc	fsr2h,f,c
 20709   01105C  0E80               	movlw	128
 20710   01105E  6EDF               	movwf	indf2,c
 20711                           
 20712                           ; BSR set to: 6
 20713                           ;fatfs/ff.c: 3568:   if (fmt == 3
 20714   011060  0E03               	movlw	3
 20715   011062  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 20716   011064  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 20717   011066  A4D8               	btfss	status,2,c
 20718   011068  D090               	goto	l11347
 20719                           
 20720                           ; BSR set to: 6
 20721   01106A  0E60               	movlw	96
 20722   01106C  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20723   01106E  6E01               	movwf	ld_word@ptr^(0+1280),c
 20724   011070  0E00               	movlw	0
 20725   011072  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20726   011074  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20727   011076  EC31  F0CE         	call	_ld_word	;wreg free
 20728   01107A  0401               	decf	?_ld_word^(0+1280),w,c
 20729   01107C  1002               	iorwf	(?_ld_word+1)^(0+1280),w,c
 20730   01107E  A4D8               	btfss	status,2,c
 20731   011080  D084               	goto	l11347
 20732   011082  C6AD  F600         	movff	mount_volume@fs,move_window@fs
 20733   011086  C6AE  F601         	movff	mount_volume@fs+1,move_window@fs+1
 20734   01108A  0E01               	movlw	1
 20735   01108C  0106               	movlb	6	; () banked
 20736   01108E  259E               	addwf	mount_volume@bsect& (0+255),w,b
 20737   011090  6F02               	movwf	move_window@sect& (0+255),b
 20738   011092  0E00               	movlw	0
 20739   011094  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 20740   011096  6F03               	movwf	(move_window@sect+1)& (0+255),b
 20741   011098  0E00               	movlw	0
 20742   01109A  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 20743   01109C  6F04               	movwf	(move_window@sect+2)& (0+255),b
 20744   01109E  0E00               	movlw	0
 20745   0110A0  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 20746   0110A2  6F05               	movwf	(move_window@sect+3)& (0+255),b
 20747   0110A4  EC1A  F0C4         	call	_move_window	;wreg free
 20748   0110A8  0900               	iorlw	0
 20749   0110AA  A4D8               	btfss	status,2,c
 20750   0110AC  D06E               	goto	l11347
 20751                           
 20752                           ; BSR set to: 5
 20753                           ;fatfs/ff.c: 3571:   {;fatfs/ff.c: 3572:    fs->fsi_flag = 0;
 20754   0110AE  0106               	movlb	6	; () banked
 20755   0110B0  EE20 F005          	lfsr	2,5
 20756   0110B4  51AD               	movf	mount_volume@fs& (0+255),w,b
 20757   0110B6  26D9               	addwf	fsr2l,f,c
 20758   0110B8  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20759   0110BA  22DA               	addwfc	fsr2h,f,c
 20760   0110BC  6ADF               	clrf	indf2,c
 20761                           
 20762                           ; BSR set to: 6
 20763                           ;fatfs/ff.c: 3573:    if (ld_word(fs->win + 510) == 0xAA55
 20764   0110BE  0E2E               	movlw	46
 20765   0110C0  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20766   0110C2  6E01               	movwf	ld_word@ptr^(0+1280),c
 20767   0110C4  0E02               	movlw	2
 20768   0110C6  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20769   0110C8  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 20770   0110CA  EC31  F0CE         	call	_ld_word	;wreg free
 20771   0110CE  0E55               	movlw	85
 20772   0110D0  1801               	xorwf	?_ld_word^(0+1280),w,c
 20773   0110D2  E15B               	bnz	l11347
 20774   0110D4  0EAA               	movlw	170
 20775   0110D6  1802               	xorwf	(?_ld_word+1)^(0+1280),w,c
 20776   0110D8  A4D8               	btfss	status,2,c
 20777   0110DA  D057               	goto	l11347
 20778   0110DC  0E30               	movlw	48
 20779   0110DE  0106               	movlb	6	; () banked
 20780   0110E0  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20781   0110E2  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20782   0110E4  0E00               	movlw	0
 20783   0110E6  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20784   0110E8  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20785   0110EA  ECD5  F0C4         	call	_ld_dword	;wreg free
 20786   0110EE  0E52               	movlw	82
 20787   0110F0  1801               	xorwf	?_ld_dword^(0+1280),w,c
 20788   0110F2  E14B               	bnz	l11347
 20789   0110F4  0E52               	movlw	82
 20790   0110F6  1802               	xorwf	(?_ld_dword+1)^(0+1280),w,c
 20791   0110F8  E148               	bnz	l11347
 20792   0110FA  0E61               	movlw	97
 20793   0110FC  1803               	xorwf	(?_ld_dword+2)^(0+1280),w,c
 20794   0110FE  E145               	bnz	l11347
 20795   011100  0E41               	movlw	65
 20796   011102  1804               	xorwf	(?_ld_dword+3)^(0+1280),w,c
 20797   011104  A4D8               	btfss	status,2,c
 20798   011106  D041               	goto	l11347
 20799                           
 20800                           ; BSR set to: 6
 20801   011108  0E14               	movlw	20
 20802   01110A  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20803   01110C  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20804   01110E  0E02               	movlw	2
 20805   011110  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20806   011112  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20807   011114  ECD5  F0C4         	call	_ld_dword	;wreg free
 20808   011118  0E72               	movlw	114
 20809   01111A  1801               	xorwf	?_ld_dword^(0+1280),w,c
 20810   01111C  E136               	bnz	l11347
 20811   01111E  0E72               	movlw	114
 20812   011120  1802               	xorwf	(?_ld_dword+1)^(0+1280),w,c
 20813   011122  E133               	bnz	l11347
 20814   011124  0E41               	movlw	65
 20815   011126  1803               	xorwf	(?_ld_dword+2)^(0+1280),w,c
 20816   011128  E130               	bnz	l11347
 20817   01112A  0E61               	movlw	97
 20818   01112C  1804               	xorwf	(?_ld_dword+3)^(0+1280),w,c
 20819   01112E  A4D8               	btfss	status,2,c
 20820   011130  D02C               	goto	l11347
 20821                           
 20822                           ; BSR set to: 6
 20823                           ;fatfs/ff.c: 3576:    {;fatfs/ff.c: 3578:     fs->free_clst = ld_dword(fs->win + 488);
 20824   011132  0E18               	movlw	24
 20825   011134  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20826   011136  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20827   011138  0E02               	movlw	2
 20828   01113A  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20829   01113C  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20830   01113E  ECD5  F0C4         	call	_ld_dword	;wreg free
 20831   011142  EE20 F010          	lfsr	2,16
 20832   011146  51AD               	movf	mount_volume@fs& (0+255),w,b
 20833   011148  26D9               	addwf	fsr2l,f,c
 20834   01114A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20835   01114C  22DA               	addwfc	fsr2h,f,c
 20836   01114E  C501  F4DE         	movff	?_ld_dword,postinc2
 20837   011152  C502  F4DE         	movff	?_ld_dword+1,postinc2
 20838   011156  C503  F4DE         	movff	?_ld_dword+2,postinc2
 20839   01115A  C504  F4DE         	movff	?_ld_dword+3,postinc2
 20840                           
 20841                           ;fatfs/ff.c: 3581:     fs->last_clst = ld_dword(fs->win + 492);
 20842   01115E  0E1C               	movlw	28
 20843   011160  25AD               	addwf	mount_volume@fs& (0+255),w,b
 20844   011162  6E01               	movwf	ld_dword@ptr^(0+1280),c
 20845   011164  0E02               	movlw	2
 20846   011166  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 20847   011168  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20848   01116A  ECD5  F0C4         	call	_ld_dword	;wreg free
 20849   01116E  EE20 F00C          	lfsr	2,12
 20850   011172  51AD               	movf	mount_volume@fs& (0+255),w,b
 20851   011174  26D9               	addwf	fsr2l,f,c
 20852   011176  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20853   011178  22DA               	addwfc	fsr2h,f,c
 20854   01117A  C501  F4DE         	movff	?_ld_dword,postinc2
 20855   01117E  C502  F4DE         	movff	?_ld_dword+1,postinc2
 20856   011182  C503  F4DE         	movff	?_ld_dword+2,postinc2
 20857   011186  C504  F4DE         	movff	?_ld_dword+3,postinc2
 20858   01118A                     l11347:
 20859                           
 20860                           ;fatfs/ff.c: 3587:  };fatfs/ff.c: 3589:  fs->fs_type = (BYTE)fmt;
 20861   01118A  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 20862   01118E  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 20863   011192  C6AB  F4DF         	movff	mount_volume@fmt,indf2
 20864                           
 20865                           ;fatfs/ff.c: 3590:  fs->id = ++Fsid;
 20866   011196  0107               	movlb	7	; () banked
 20867   011198  4B21               	infsnz	_Fsid& (0+255),f,b
 20868   01119A  2B22               	incf	(_Fsid+1)& (0+255),f,b
 20869   01119C  0106               	movlb	6	; () banked
 20870   01119E  EE20 F006          	lfsr	2,6
 20871   0111A2  51AD               	movf	mount_volume@fs& (0+255),w,b
 20872   0111A4  26D9               	addwf	fsr2l,f,c
 20873   0111A6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 20874   0111A8  22DA               	addwfc	fsr2h,f,c
 20875   0111AA  C721  F4DE         	movff	_Fsid,postinc2
 20876   0111AE  C722  F4DD         	movff	_Fsid+1,postdec2
 20877   0111B2  EFBB  F084         	goto	l11159
 20878   0111B6                     __end_of_mount_volume:
 20879                           	callstack 0
 20880                           
 20881 ;; *************** function _get_ldnumber *****************
 20882 ;; Defined at:
 20883 ;;		line 3138 in file "fatfs/ff.c"
 20884 ;; Parameters:    Size  Location     Type
 20885 ;;  path            2    0[COMRAM] PTR PTR const unsigned c
 20886 ;;		 -> f_rename@path_old(2), f_rename@path_new(2), f_mkdir@path(2), f_unlink@path(2), 
 20887 ;;		 -> f_getfree@path(2), f_stat@path(2), f_opendir@path(2), f_open@path(2), 
 20888 ;;		 -> f_mount@path(2), f_mount@rp(2), 
 20889 ;; Auto vars:     Size  Location     Type
 20890 ;;  tp              2   11[COMRAM] PTR const unsigned char 
 20891 ;;		 -> STR_88(5), tmp_buf(512), STR_31(2), 
 20892 ;;  vol             2    9[COMRAM] int 
 20893 ;;  tt              2    6[COMRAM] PTR const unsigned char 
 20894 ;;		 -> STR_88(5), tmp_buf(512), STR_31(2), 
 20895 ;;  i               2    4[COMRAM] int 
 20896 ;;  tc              1    8[COMRAM] unsigned char 
 20897 ;; Return value:  Size  Location     Type
 20898 ;;                  2    0[COMRAM] int 
 20899 ;; Registers used:
 20900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20901 ;; Tracked objects:
 20902 ;;		On entry : 3F/6
 20903 ;;		On exit  : 0/0
 20904 ;;		Unchanged: 0/0
 20905 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20907 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20908 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20909 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20910 ;;Total ram usage:       13 bytes
 20911 ;; Hardware stack levels used: 1
 20912 ;; This function calls:
 20913 ;;		Nothing
 20914 ;; This function is called by:
 20915 ;;		_mount_volume
 20916 ;;		_f_mount
 20917 ;; This function uses a non-reentrant model
 20918 ;;
 20919                           
 20920                           	psect	text29
 20921   0172B2                     __ptext29:
 20922                           	callstack 0
 20923   0172B2                     _get_ldnumber:
 20924                           	callstack 123
 20925                           
 20926                           ; BSR set to: 6
 20927                           ;fatfs/ff.c: 3139:  const TCHAR** path;fatfs/ff.c: 3141: {;fatfs/ff.c: 3142:  const TCHA
      +                          R *tp;;fatfs/ff.c: 3143:  const TCHAR *tt;;fatfs/ff.c: 3144:  TCHAR tc;;fatfs/ff.c: 3145
      +                          :  int i;;fatfs/ff.c: 3146:  int vol = -1;
 20928                           
 20929                           ;incstack = 0
 20930   0172B2  680A               	setf	get_ldnumber@vol^(0+1280),c
 20931   0172B4  680B               	setf	(get_ldnumber@vol+1)^(0+1280),c
 20932                           
 20933                           ; BSR set to: 6
 20934                           ;fatfs/ff.c: 3152:  tt = tp = *path;
 20935   0172B6  C501  F4D9         	movff	get_ldnumber@path,fsr2l
 20936   0172BA  C502  F4DA         	movff	get_ldnumber@path+1,fsr2h
 20937   0172BE  C4DE F50C          	movff	postinc2,get_ldnumber@tp
 20938   0172C2  C4DD F50D          	movff	postdec2,get_ldnumber@tp+1
 20939   0172C6  C50C  F507         	movff	get_ldnumber@tp,get_ldnumber@tt
 20940   0172CA  C50D  F508         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 20941                           
 20942                           ; BSR set to: 6
 20943                           ;fatfs/ff.c: 3153:  if (!tp) return vol;
 20944   0172CE  500C               	movf	get_ldnumber@tp^(0+1280),w,c
 20945   0172D0  100D               	iorwf	(get_ldnumber@tp+1)^(0+1280),w,c
 20946   0172D2  A4D8               	btfss	status,2,c
 20947   0172D4  D003               	goto	l10765
 20948                           
 20949                           ; BSR set to: 6
 20950   0172D6  6801               	setf	?_get_ldnumber^(0+1280),c
 20951   0172D8  6802               	setf	(?_get_ldnumber+1)^(0+1280),c
 20952   0172DA  0012               	return	
 20953   0172DC                     l10765:
 20954                           
 20955                           ;fatfs/ff.c: 3155:   tc = *tt++;
 20956   0172DC  C507  F4F6         	movff	get_ldnumber@tt,tblptrl
 20957   0172E0  C508  F4F7         	movff	get_ldnumber@tt+1,tblptrh
 20958   0172E4  0E00               	movlw	low (__mediumconst shr (0+16))
 20959   0172E6  6EF8               	movwf	tblptru,c
 20960   0172E8  0E24               	movlw	(high __ramtop+-1)
 20961   0172EA  64F7               	cpfsgt	tblptrh,c
 20962   0172EC  D003               	bra	u13137
 20963   0172EE  0008               	tblrd		*
 20964   0172F0  50F5               	movf	tablat,w,c
 20965   0172F2  D005               	bra	u13130
 20966   0172F4                     u13137:
 20967   0172F4  C4F6 F4E9          	movff	tblptrl,fsr0l
 20968   0172F8  C4F7 F4EA          	movff	tblptrh,fsr0h
 20969   0172FC  50EF               	movf	indf0,w,c
 20970   0172FE                     u13130:
 20971   0172FE  6E09               	movwf	get_ldnumber@tc^(0+1280),c
 20972                           
 20973                           ;fatfs/ff.c: 3156:  } while (!((UINT)(tc) < (0 ? ' ' : '!')) && tc != ':');
 20974   017300  4A07               	infsnz	get_ldnumber@tt^(0+1280),f,c
 20975   017302  2A08               	incf	(get_ldnumber@tt+1)^(0+1280),f,c
 20976   017304  0E20               	movlw	32
 20977   017306  6409               	cpfsgt	get_ldnumber@tc^(0+1280),c
 20978   017308  D004               	goto	u13150
 20979   01730A  0E3A               	movlw	58
 20980   01730C  1809               	xorwf	get_ldnumber@tc^(0+1280),w,c
 20981   01730E  A4D8               	btfss	status,2,c
 20982   017310  D7E5               	goto	l10765
 20983   017312                     u13150:
 20984                           
 20985                           ;fatfs/ff.c: 3158:  if (tc == ':') {
 20986   017312  0E3A               	movlw	58
 20987   017314  1809               	xorwf	get_ldnumber@tc^(0+1280),w,c
 20988   017316  A4D8               	btfss	status,2,c
 20989   017318  D06B               	goto	l10799
 20990                           
 20991                           ;fatfs/ff.c: 3159:   i = 1;
 20992   01731A  0E00               	movlw	0
 20993   01731C  6E06               	movwf	(get_ldnumber@i+1)^(0+1280),c
 20994   01731E  0E01               	movlw	1
 20995   017320  6E05               	movwf	get_ldnumber@i^(0+1280),c
 20996                           
 20997                           ;fatfs/ff.c: 3160:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 == tt) {
 20998   017322  C50C  F4F6         	movff	get_ldnumber@tp,tblptrl
 20999   017326  C50D  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 21000   01732A  0E00               	movlw	low (__mediumconst shr (0+16))
 21001   01732C  6EF8               	movwf	tblptru,c
 21002   01732E  0E24               	movlw	(high __ramtop+-1)
 21003   017330  64F7               	cpfsgt	tblptrh,c
 21004   017332  D003               	bra	u13177
 21005   017334  0008               	tblrd		*
 21006   017336  50F5               	movf	tablat,w,c
 21007   017338  D005               	bra	u13170
 21008   01733A                     u13177:
 21009   01733A  C4F6 F4E9          	movff	tblptrl,fsr0l
 21010   01733E  C4F7 F4EA          	movff	tblptrh,fsr0h
 21011   017342  50EF               	movf	indf0,w,c
 21012   017344                     u13170:
 21013   017344  6E03               	movwf	??_get_ldnumber^(0+1280),c
 21014   017346  0E2F               	movlw	47
 21015   017348  6403               	cpfsgt	??_get_ldnumber^(0+1280),c
 21016   01734A  D03A               	goto	l10789
 21017   01734C  C50C  F4F6         	movff	get_ldnumber@tp,tblptrl
 21018   017350  C50D  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 21019   017354  0E00               	movlw	low (__mediumconst shr (0+16))
 21020   017356  6EF8               	movwf	tblptru,c
 21021   017358  0E24               	movlw	(high __ramtop+-1)
 21022   01735A  64F7               	cpfsgt	tblptrh,c
 21023   01735C  D003               	bra	u13197
 21024   01735E  0008               	tblrd		*
 21025   017360  50F5               	movf	tablat,w,c
 21026   017362  D005               	bra	u13190
 21027   017364                     u13197:
 21028   017364  C4F6 F4E9          	movff	tblptrl,fsr0l
 21029   017368  C4F7 F4EA          	movff	tblptrh,fsr0h
 21030   01736C  50EF               	movf	indf0,w,c
 21031   01736E                     u13190:
 21032   01736E  6E03               	movwf	??_get_ldnumber^(0+1280),c
 21033   017370  0E3A               	movlw	58
 21034   017372  6003               	cpfslt	??_get_ldnumber^(0+1280),c
 21035   017374  D025               	goto	l10789
 21036   017376  0E02               	movlw	2
 21037   017378  240C               	addwf	get_ldnumber@tp^(0+1280),w,c
 21038   01737A  6E03               	movwf	??_get_ldnumber^(0+1280),c
 21039   01737C  0E00               	movlw	0
 21040   01737E  200D               	addwfc	(get_ldnumber@tp+1)^(0+1280),w,c
 21041   017380  6E04               	movwf	(??_get_ldnumber+1)^(0+1280),c
 21042   017382  5007               	movf	get_ldnumber@tt^(0+1280),w,c
 21043   017384  1803               	xorwf	??_get_ldnumber^(0+1280),w,c
 21044   017386  E11C               	bnz	l10789
 21045   017388  5008               	movf	(get_ldnumber@tt+1)^(0+1280),w,c
 21046   01738A  1804               	xorwf	(??_get_ldnumber+1)^(0+1280),w,c
 21047   01738C  A4D8               	btfss	status,2,c
 21048   01738E  D018               	goto	l10789
 21049                           
 21050                           ;fatfs/ff.c: 3161:    i = (int)*tp - (int)'0';
 21051   017390  C50C  F4F6         	movff	get_ldnumber@tp,tblptrl
 21052   017394  C50D  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 21053   017398  0E00               	movlw	low (__mediumconst shr (0+16))
 21054   01739A  6EF8               	movwf	tblptru,c
 21055   01739C  0E24               	movlw	(high __ramtop+-1)
 21056   01739E  64F7               	cpfsgt	tblptrh,c
 21057   0173A0  D003               	bra	u13227
 21058   0173A2  0008               	tblrd		*
 21059   0173A4  50F5               	movf	tablat,w,c
 21060   0173A6  D005               	bra	u13220
 21061   0173A8                     u13227:
 21062   0173A8  C4F6 F4E9          	movff	tblptrl,fsr0l
 21063   0173AC  C4F7 F4EA          	movff	tblptrh,fsr0h
 21064   0173B0  50EF               	movf	indf0,w,c
 21065   0173B2                     u13220:
 21066   0173B2  6E03               	movwf	??_get_ldnumber^(0+1280),c
 21067   0173B4  0ED0               	movlw	208
 21068   0173B6  2403               	addwf	??_get_ldnumber^(0+1280),w,c
 21069   0173B8  6E05               	movwf	get_ldnumber@i^(0+1280),c
 21070   0173BA  6A06               	clrf	(get_ldnumber@i+1)^(0+1280),c
 21071   0173BC  0EFF               	movlw	255
 21072   0173BE  2206               	addwfc	(get_ldnumber@i+1)^(0+1280),f,c
 21073   0173C0                     l10789:
 21074                           
 21075                           ;fatfs/ff.c: 3176:   if (i < 1) {
 21076   0173C0  BE06               	btfsc	(get_ldnumber@i+1)^(0+1280),7,c
 21077   0173C2  D005               	goto	u13230
 21078   0173C4  5006               	movf	(get_ldnumber@i+1)^(0+1280),w,c
 21079   0173C6  E10F               	bnz	l10795
 21080   0173C8  0405               	decf	get_ldnumber@i^(0+1280),w,c
 21081   0173CA  B0D8               	btfsc	status,0,c
 21082   0173CC  D00C               	goto	l10795
 21083   0173CE                     u13230:
 21084                           
 21085                           ;fatfs/ff.c: 3177:    vol = i;
 21086   0173CE  C505  F50A         	movff	get_ldnumber@i,get_ldnumber@vol
 21087   0173D2  C506  F50B         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 21088                           
 21089                           ;fatfs/ff.c: 3178:    *path = tt;
 21090   0173D6  C501  F4D9         	movff	get_ldnumber@path,fsr2l
 21091   0173DA  C502  F4DA         	movff	get_ldnumber@path+1,fsr2h
 21092   0173DE  C507  F4DE         	movff	get_ldnumber@tt,postinc2
 21093   0173E2  C508  F4DD         	movff	get_ldnumber@tt+1,postdec2
 21094   0173E6                     l10795:
 21095                           
 21096                           ;fatfs/ff.c: 3180:   return vol;
 21097   0173E6  C50A  F501         	movff	get_ldnumber@vol,?_get_ldnumber
 21098   0173EA  C50B  F502         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 21099   0173EE  0012               	return	
 21100   0173F0                     l10799:
 21101                           
 21102                           ;fatfs/ff.c: 3207:  return vol;
 21103   0173F0  0E00               	movlw	0
 21104   0173F2  6E02               	movwf	(?_get_ldnumber+1)^(0+1280),c
 21105   0173F4  0E00               	movlw	0
 21106   0173F6  6E01               	movwf	?_get_ldnumber^(0+1280),c
 21107   0173F8  0012               	return		;funcret
 21108   0173FA                     __end_of_get_ldnumber:
 21109                           	callstack 0
 21110                           
 21111 ;; *************** function _find_volume *****************
 21112 ;; Defined at:
 21113 ;;		line 3331 in file "fatfs/ff.c"
 21114 ;; Parameters:    Size  Location     Type
 21115 ;;  fs              2   24[BANK6 ] PTR struct .
 21116 ;;		 -> fs(560), NULL(0), 
 21117 ;;  part            2   26[BANK6 ] unsigned int 
 21118 ;; Auto vars:     Size  Location     Type
 21119 ;;  mbr_pt         16   34[BANK6 ] unsigned long [4]
 21120 ;;  i               2   52[BANK6 ] unsigned int 
 21121 ;;  fmt             2   50[BANK6 ] unsigned int 
 21122 ;; Return value:  Size  Location     Type
 21123 ;;                  2   24[BANK6 ] unsigned int 
 21124 ;; Registers used:
 21125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21126 ;; Tracked objects:
 21127 ;;		On entry : 3F/6
 21128 ;;		On exit  : 3F/6
 21129 ;;		Unchanged: 0/0
 21130 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21131 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21132 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21133 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21134 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21135 ;;Total ram usage:       30 bytes
 21136 ;; Hardware stack levels used: 1
 21137 ;; Hardware stack levels required when called: 14
 21138 ;; This function calls:
 21139 ;;		_check_fs
 21140 ;;		_ld_dword
 21141 ;; This function is called by:
 21142 ;;		_mount_volume
 21143 ;; This function uses a non-reentrant model
 21144 ;;
 21145                           
 21146                           	psect	text30
 21147   016E50                     __ptext30:
 21148                           	callstack 0
 21149   016E50                     _find_volume:
 21150                           	callstack 109
 21151                           
 21152                           ; BSR set to: 6
 21153                           ;fatfs/ff.c: 3332:  FATFS* fs,;fatfs/ff.c: 3333:  UINT part;fatfs/ff.c: 3335: {;fatfs/ff
      +                          .c: 3336:  UINT fmt, i;;fatfs/ff.c: 3337:  DWORD mbr_pt[4];;fatfs/ff.c: 3340:  fmt = che
      +                          ck_fs(fs, 0);
 21154                           
 21155                           ;incstack = 0
 21156   016E50  C618  F60A         	movff	find_volume@fs,check_fs@fs
 21157   016E54  C619  F60B         	movff	find_volume@fs+1,check_fs@fs+1
 21158   016E58  0E00               	movlw	0
 21159   016E5A  6F0C               	movwf	check_fs@sect& (0+255),b
 21160   016E5C  0E00               	movlw	0
 21161   016E5E  6F0D               	movwf	(check_fs@sect+1)& (0+255),b
 21162   016E60  0E00               	movlw	0
 21163   016E62  6F0E               	movwf	(check_fs@sect+2)& (0+255),b
 21164   016E64  0E00               	movlw	0
 21165   016E66  6F0F               	movwf	(check_fs@sect+3)& (0+255),b
 21166   016E68  EC0B  F0AE         	call	_check_fs	;wreg free
 21167   016E6C  C60A  F632         	movff	?_check_fs,find_volume@fmt
 21168   016E70  C60B  F633         	movff	?_check_fs+1,find_volume@fmt+1
 21169                           
 21170                           ; BSR set to: 6
 21171                           ;fatfs/ff.c: 3341:  if (fmt != 2 && (fmt >= 3 || part == 0)) return fmt;
 21172   016E74  0E02               	movlw	2
 21173   016E76  1932               	xorwf	find_volume@fmt& (0+255),w,b
 21174   016E78  1133               	iorwf	(find_volume@fmt+1)& (0+255),w,b
 21175   016E7A  B4D8               	btfsc	status,2,c
 21176   016E7C  D00F               	goto	l10819
 21177                           
 21178                           ; BSR set to: 6
 21179   016E7E  5133               	movf	(find_volume@fmt+1)& (0+255),w,b
 21180   016E80  E108               	bnz	l531
 21181   016E82  0E03               	movlw	3
 21182   016E84  5D32               	subwf	find_volume@fmt& (0+255),w,b
 21183   016E86  B0D8               	btfsc	status,0,c
 21184   016E88  D004               	goto	u13260
 21185                           
 21186                           ; BSR set to: 6
 21187   016E8A  511A               	movf	find_volume@part& (0+255),w,b
 21188   016E8C  111B               	iorwf	(find_volume@part+1)& (0+255),w,b
 21189   016E8E  A4D8               	btfss	status,2,c
 21190   016E90  D005               	goto	l10819
 21191   016E92                     u13260:
 21192   016E92                     l531:
 21193                           
 21194                           ; BSR set to: 6
 21195   016E92  C632  F618         	movff	find_volume@fmt,?_find_volume
 21196   016E96  C633  F619         	movff	find_volume@fmt+1,?_find_volume+1
 21197   016E9A  0012               	return	
 21198   016E9C                     l10819:
 21199                           
 21200                           ; BSR set to: 6
 21201                           ;fatfs/ff.c: 3368:  for (i = 0; i < 4; i++) {
 21202   016E9C  0E00               	movlw	0
 21203   016E9E  6F35               	movwf	(find_volume@i+1)& (0+255),b
 21204   016EA0  0E00               	movlw	0
 21205   016EA2  6F34               	movwf	find_volume@i& (0+255),b
 21206   016EA4                     l10825:
 21207                           
 21208                           ; BSR set to: 6
 21209                           ;fatfs/ff.c: 3369:   mbr_pt[i] = ld_dword(fs->win + 446 + i * 16 + 8);
 21210   016EA4  C634  F61C         	movff	find_volume@i,??_find_volume
 21211   016EA8  C635  F61D         	movff	find_volume@i+1,??_find_volume+1
 21212   016EAC  3B1C               	swapf	??_find_volume& (0+255),f,b
 21213   016EAE  3B1D               	swapf	(??_find_volume+1)& (0+255),f,b
 21214   016EB0  0EF0               	movlw	240
 21215   016EB2  171D               	andwf	(??_find_volume+1)& (0+255),f,b
 21216   016EB4  511C               	movf	??_find_volume& (0+255),w,b
 21217   016EB6  0B0F               	andlw	15
 21218   016EB8  131D               	iorwf	(??_find_volume+1)& (0+255),f,b
 21219   016EBA  0EF0               	movlw	240
 21220   016EBC  171C               	andwf	??_find_volume& (0+255),f,b
 21221   016EBE  511C               	movf	??_find_volume& (0+255),w,b
 21222   016EC0  2518               	addwf	find_volume@fs& (0+255),w,b
 21223   016EC2  6F1E               	movwf	(??_find_volume+2)& (0+255),b
 21224   016EC4  511D               	movf	(??_find_volume+1)& (0+255),w,b
 21225   016EC6  2119               	addwfc	(find_volume@fs+1)& (0+255),w,b
 21226   016EC8  6F1F               	movwf	(??_find_volume+3)& (0+255),b
 21227   016ECA  0EF6               	movlw	246
 21228   016ECC  251E               	addwf	(??_find_volume+2)& (0+255),w,b
 21229   016ECE  6E01               	movwf	ld_dword@ptr^(0+1280),c
 21230   016ED0  0E01               	movlw	1
 21231   016ED2  211F               	addwfc	(??_find_volume+3)& (0+255),w,b
 21232   016ED4  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 21233   016ED6  ECD5  F0C4         	call	_ld_dword	;wreg free
 21234   016EDA  0E22               	movlw	low find_volume@mbr_pt
 21235   016EDC  6F20               	movwf	(??_find_volume+4)& (0+255),b
 21236   016EDE  0E06               	movlw	high find_volume@mbr_pt
 21237   016EE0  6F21               	movwf	(??_find_volume+5)& (0+255),b
 21238   016EE2  90D8               	bcf	status,0,c
 21239   016EE4  3534               	rlcf	find_volume@i& (0+255),w,b
 21240   016EE6  6ED9               	movwf	fsr2l,c
 21241   016EE8  3535               	rlcf	(find_volume@i+1)& (0+255),w,b
 21242   016EEA  6EDA               	movwf	fsr2h,c
 21243   016EEC  90D8               	bcf	status,0,c
 21244   016EEE  36D9               	rlcf	fsr2l,f,c
 21245   016EF0  36DA               	rlcf	fsr2h,f,c
 21246   016EF2  5120               	movf	(??_find_volume+4)& (0+255),w,b
 21247   016EF4  26D9               	addwf	fsr2l,f,c
 21248   016EF6  5121               	movf	(??_find_volume+5)& (0+255),w,b
 21249   016EF8  22DA               	addwfc	fsr2h,f,c
 21250   016EFA  C501  F4DE         	movff	?_ld_dword,postinc2
 21251   016EFE  C502  F4DE         	movff	?_ld_dword+1,postinc2
 21252   016F02  C503  F4DE         	movff	?_ld_dword+2,postinc2
 21253   016F06  C504  F4DE         	movff	?_ld_dword+3,postinc2
 21254                           
 21255                           ; BSR set to: 6
 21256                           ;fatfs/ff.c: 3370:  }
 21257   016F0A  4B34               	infsnz	find_volume@i& (0+255),f,b
 21258   016F0C  2B35               	incf	(find_volume@i+1)& (0+255),f,b
 21259                           
 21260                           ; BSR set to: 6
 21261   016F0E  5135               	movf	(find_volume@i+1)& (0+255),w,b
 21262   016F10  E104               	bnz	u13270
 21263   016F12  0E04               	movlw	4
 21264   016F14  5D34               	subwf	find_volume@i& (0+255),w,b
 21265   016F16  A0D8               	btfss	status,0,c
 21266   016F18  D7C5               	goto	l10825
 21267   016F1A                     u13270:
 21268                           
 21269                           ; BSR set to: 6
 21270                           ;fatfs/ff.c: 3371:  i = part ? part - 1 : 0;
 21271   016F1A  511A               	movf	find_volume@part& (0+255),w,b
 21272   016F1C  111B               	iorwf	(find_volume@part+1)& (0+255),w,b
 21273   016F1E  A4D8               	btfss	status,2,c
 21274   016F20  D005               	goto	l10835
 21275                           
 21276                           ; BSR set to: 6
 21277   016F22  0E00               	movlw	0
 21278   016F24  6F35               	movwf	(find_volume@i+1)& (0+255),b
 21279   016F26  0E00               	movlw	0
 21280   016F28  6F34               	movwf	find_volume@i& (0+255),b
 21281   016F2A  D006               	goto	l10837
 21282   016F2C                     l10835:
 21283                           
 21284                           ; BSR set to: 6
 21285   016F2C  0EFF               	movlw	255
 21286   016F2E  251A               	addwf	find_volume@part& (0+255),w,b
 21287   016F30  6F34               	movwf	find_volume@i& (0+255),b
 21288   016F32  0EFF               	movlw	255
 21289   016F34  211B               	addwfc	(find_volume@part+1)& (0+255),w,b
 21290   016F36  6F35               	movwf	(find_volume@i+1)& (0+255),b
 21291   016F38                     l10837:
 21292                           
 21293                           ; BSR set to: 6
 21294                           ;fatfs/ff.c: 3373:   fmt = mbr_pt[i] ? check_fs(fs, mbr_pt[i]) : 3;
 21295   016F38  0E22               	movlw	low find_volume@mbr_pt
 21296   016F3A  6F1C               	movwf	??_find_volume& (0+255),b
 21297   016F3C  0E06               	movlw	high find_volume@mbr_pt
 21298   016F3E  6F1D               	movwf	(??_find_volume+1)& (0+255),b
 21299   016F40  90D8               	bcf	status,0,c
 21300   016F42  3534               	rlcf	find_volume@i& (0+255),w,b
 21301   016F44  6ED9               	movwf	fsr2l,c
 21302   016F46  3535               	rlcf	(find_volume@i+1)& (0+255),w,b
 21303   016F48  6EDA               	movwf	fsr2h,c
 21304   016F4A  90D8               	bcf	status,0,c
 21305   016F4C  36D9               	rlcf	fsr2l,f,c
 21306   016F4E  36DA               	rlcf	fsr2h,f,c
 21307   016F50  511C               	movf	??_find_volume& (0+255),w,b
 21308   016F52  26D9               	addwf	fsr2l,f,c
 21309   016F54  511D               	movf	(??_find_volume+1)& (0+255),w,b
 21310   016F56  22DA               	addwfc	fsr2h,f,c
 21311   016F58  50DE               	movf	postinc2,w,c
 21312   016F5A  10DE               	iorwf	postinc2,w,c
 21313   016F5C  10DE               	iorwf	postinc2,w,c
 21314   016F5E  10DE               	iorwf	postinc2,w,c
 21315   016F60  A4D8               	btfss	status,2,c
 21316   016F62  D005               	goto	l10841
 21317                           
 21318                           ; BSR set to: 6
 21319   016F64  0E00               	movlw	0
 21320   016F66  6F33               	movwf	(find_volume@fmt+1)& (0+255),b
 21321   016F68  0E03               	movlw	3
 21322   016F6A  6F32               	movwf	find_volume@fmt& (0+255),b
 21323   016F6C  D022               	goto	l10843
 21324   016F6E                     l10841:
 21325                           
 21326                           ; BSR set to: 6
 21327   016F6E  C618  F60A         	movff	find_volume@fs,check_fs@fs
 21328   016F72  C619  F60B         	movff	find_volume@fs+1,check_fs@fs+1
 21329   016F76  0E22               	movlw	low find_volume@mbr_pt
 21330   016F78  6F1C               	movwf	??_find_volume& (0+255),b
 21331   016F7A  0E06               	movlw	high find_volume@mbr_pt
 21332   016F7C  6F1D               	movwf	(??_find_volume+1)& (0+255),b
 21333   016F7E  90D8               	bcf	status,0,c
 21334   016F80  3534               	rlcf	find_volume@i& (0+255),w,b
 21335   016F82  6ED9               	movwf	fsr2l,c
 21336   016F84  3535               	rlcf	(find_volume@i+1)& (0+255),w,b
 21337   016F86  6EDA               	movwf	fsr2h,c
 21338   016F88  90D8               	bcf	status,0,c
 21339   016F8A  36D9               	rlcf	fsr2l,f,c
 21340   016F8C  36DA               	rlcf	fsr2h,f,c
 21341   016F8E  511C               	movf	??_find_volume& (0+255),w,b
 21342   016F90  26D9               	addwf	fsr2l,f,c
 21343   016F92  511D               	movf	(??_find_volume+1)& (0+255),w,b
 21344   016F94  22DA               	addwfc	fsr2h,f,c
 21345   016F96  C4DE F60C          	movff	postinc2,check_fs@sect
 21346   016F9A  C4DE F60D          	movff	postinc2,check_fs@sect+1
 21347   016F9E  C4DE F60E          	movff	postinc2,check_fs@sect+2
 21348   016FA2  C4DE F60F          	movff	postinc2,check_fs@sect+3
 21349   016FA6  EC0B  F0AE         	call	_check_fs	;wreg free
 21350   016FAA  C60A  F632         	movff	?_check_fs,find_volume@fmt
 21351   016FAE  C60B  F633         	movff	?_check_fs+1,find_volume@fmt+1
 21352   016FB2                     l10843:
 21353                           
 21354                           ; BSR set to: 6
 21355                           ;fatfs/ff.c: 3374:  } while (part == 0 && fmt >= 2 && ++i < 4);
 21356   016FB2  511A               	movf	find_volume@part& (0+255),w,b
 21357   016FB4  111B               	iorwf	(find_volume@part+1)& (0+255),w,b
 21358   016FB6  A4D8               	btfss	status,2,c
 21359   016FB8  D76C               	goto	u13260
 21360                           
 21361                           ; BSR set to: 6
 21362   016FBA  5133               	movf	(find_volume@fmt+1)& (0+255),w,b
 21363   016FBC  E104               	bnz	u13310
 21364   016FBE  0E02               	movlw	2
 21365   016FC0  5D32               	subwf	find_volume@fmt& (0+255),w,b
 21366   016FC2  A0D8               	btfss	status,0,c
 21367   016FC4  D766               	goto	u13260
 21368   016FC6                     u13310:
 21369                           
 21370                           ; BSR set to: 6
 21371   016FC6  4B34               	infsnz	find_volume@i& (0+255),f,b
 21372   016FC8  2B35               	incf	(find_volume@i+1)& (0+255),f,b
 21373   016FCA  5135               	movf	(find_volume@i+1)& (0+255),w,b
 21374   016FCC  E105               	bnz	u13320
 21375   016FCE  0E04               	movlw	4
 21376   016FD0  5D34               	subwf	find_volume@i& (0+255),w,b
 21377   016FD2  B0D8               	btfsc	status,0,c
 21378   016FD4  D75E               	goto	u13260
 21379   016FD6  D7B0               	goto	l10837
 21380   016FD8                     u13320:
 21381   016FD8  D75C               	goto	u13260
 21382   016FDA                     __end_of_find_volume:
 21383                           	callstack 0
 21384                           
 21385 ;; *************** function _check_fs *****************
 21386 ;; Defined at:
 21387 ;;		line 3291 in file "fatfs/ff.c"
 21388 ;; Parameters:    Size  Location     Type
 21389 ;;  fs              2   10[BANK6 ] PTR struct .
 21390 ;;		 -> fs(560), NULL(0), 
 21391 ;;  sect            4   12[BANK6 ] unsigned long 
 21392 ;; Auto vars:     Size  Location     Type
 21393 ;;  w               2   21[BANK6 ] unsigned short 
 21394 ;;  sign            2   19[BANK6 ] unsigned short 
 21395 ;;  b               1   23[BANK6 ] unsigned char 
 21396 ;; Return value:  Size  Location     Type
 21397 ;;                  2   10[BANK6 ] unsigned int 
 21398 ;; Registers used:
 21399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21400 ;; Tracked objects:
 21401 ;;		On entry : 3F/6
 21402 ;;		On exit  : 3F/6
 21403 ;;		Unchanged: 0/0
 21404 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21405 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21406 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21407 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21408 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21409 ;;Total ram usage:       14 bytes
 21410 ;; Hardware stack levels used: 1
 21411 ;; Hardware stack levels required when called: 13
 21412 ;; This function calls:
 21413 ;;		_ld_dword
 21414 ;;		_ld_word
 21415 ;;		_memcmp
 21416 ;;		_move_window
 21417 ;; This function is called by:
 21418 ;;		_find_volume
 21419 ;; This function uses a non-reentrant model
 21420 ;;
 21421                           
 21422                           	psect	text31
 21423   015C16                     __ptext31:
 21424                           	callstack 0
 21425   015C16                     _check_fs:
 21426                           	callstack 109
 21427                           
 21428                           ; BSR set to: 6
 21429                           ;fatfs/ff.c: 3292:  FATFS* fs,;fatfs/ff.c: 3293:  LBA_t sect;fatfs/ff.c: 3295: {;fatfs/f
      +                          f.c: 3296:  WORD w, sign;;fatfs/ff.c: 3297:  BYTE b;;fatfs/ff.c: 3300:  fs->wflag = 0; f
      +                          s->winsect = (LBA_t)0 - 1;
 21430                           
 21431                           ; BSR set to: 6
 21432                           ;incstack = 0
 21433   015C16  EE20 F004          	lfsr	2,4
 21434   015C1A  510A               	movf	check_fs@fs& (0+255),w,b
 21435   015C1C  26D9               	addwf	fsr2l,f,c
 21436   015C1E  510B               	movf	(check_fs@fs+1)& (0+255),w,b
 21437   015C20  22DA               	addwfc	fsr2h,f,c
 21438   015C22  6ADF               	clrf	indf2,c
 21439   015C24  EE20 F02C          	lfsr	2,44
 21440   015C28  510A               	movf	check_fs@fs& (0+255),w,b
 21441   015C2A  26D9               	addwf	fsr2l,f,c
 21442   015C2C  510B               	movf	(check_fs@fs+1)& (0+255),w,b
 21443   015C2E  22DA               	addwfc	fsr2h,f,c
 21444   015C30  0EFF               	movlw	255
 21445   015C32  6EDE               	movwf	postinc2,c
 21446   015C34  0EFF               	movlw	255
 21447   015C36  6EDE               	movwf	postinc2,c
 21448   015C38  0EFF               	movlw	255
 21449   015C3A  6EDE               	movwf	postinc2,c
 21450   015C3C  0EFF               	movlw	255
 21451   015C3E  6EDD               	movwf	postdec2,c
 21452                           
 21453                           ; BSR set to: 6
 21454                           ;fatfs/ff.c: 3301:  if (move_window(fs, sect) != FR_OK) return 4;
 21455   015C40  C60A  F600         	movff	check_fs@fs,move_window@fs
 21456   015C44  C60B  F601         	movff	check_fs@fs+1,move_window@fs+1
 21457   015C48  C60C  F602         	movff	check_fs@sect,move_window@sect
 21458   015C4C  C60D  F603         	movff	check_fs@sect+1,move_window@sect+1
 21459   015C50  C60E  F604         	movff	check_fs@sect+2,move_window@sect+2
 21460   015C54  C60F  F605         	movff	check_fs@sect+3,move_window@sect+3
 21461   015C58  EC1A  F0C4         	call	_move_window	;wreg free
 21462   015C5C  0900               	iorlw	0
 21463   015C5E  B4D8               	btfsc	status,2,c
 21464   015C60  D006               	goto	l10413
 21465                           
 21466                           ; BSR set to: 5
 21467   015C62  0E00               	movlw	0
 21468   015C64  0106               	movlb	6	; () banked
 21469   015C66  6F0B               	movwf	(?_check_fs+1)& (0+255),b
 21470   015C68  0E04               	movlw	4
 21471   015C6A  6F0A               	movwf	?_check_fs& (0+255),b
 21472   015C6C  0012               	return	
 21473   015C6E                     l10413:
 21474                           
 21475                           ; BSR set to: 5
 21476                           ;fatfs/ff.c: 3302:  sign = ld_word(fs->win + 510);
 21477   015C6E  0E2E               	movlw	46
 21478   015C70  0106               	movlb	6	; () banked
 21479   015C72  250A               	addwf	check_fs@fs& (0+255),w,b
 21480   015C74  6E01               	movwf	ld_word@ptr^(0+1280),c
 21481   015C76  0E02               	movlw	2
 21482   015C78  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21483   015C7A  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21484   015C7C  EC31  F0CE         	call	_ld_word	;wreg free
 21485   015C80  C501  F613         	movff	?_ld_word,check_fs@sign
 21486   015C84  C502  F614         	movff	?_ld_word+1,check_fs@sign+1
 21487                           
 21488                           ;fatfs/ff.c: 3306:  b = fs->win[0];
 21489   015C88  0106               	movlb	6	; () banked
 21490   015C8A  EE20 F030          	lfsr	2,48
 21491   015C8E  510A               	movf	check_fs@fs& (0+255),w,b
 21492   015C90  26D9               	addwf	fsr2l,f,c
 21493   015C92  510B               	movf	(check_fs@fs+1)& (0+255),w,b
 21494   015C94  22DA               	addwfc	fsr2h,f,c
 21495   015C96  50DF               	movf	indf2,w,c
 21496   015C98  6F17               	movwf	check_fs@b& (0+255),b
 21497                           
 21498                           ; BSR set to: 6
 21499                           ;fatfs/ff.c: 3307:  if (b == 0xEB || b == 0xE9 || b == 0xE8) {
 21500   015C9A  0EEB               	movlw	235
 21501   015C9C  1917               	xorwf	check_fs@b& (0+255),w,b
 21502   015C9E  B4D8               	btfsc	status,2,c
 21503   015CA0  D008               	goto	u12470
 21504                           
 21505                           ; BSR set to: 6
 21506   015CA2  0EE9               	movlw	233
 21507   015CA4  1917               	xorwf	check_fs@b& (0+255),w,b
 21508   015CA6  B4D8               	btfsc	status,2,c
 21509   015CA8  D004               	goto	u12470
 21510                           
 21511                           ; BSR set to: 6
 21512   015CAA  0EE8               	movlw	232
 21513   015CAC  1917               	xorwf	check_fs@b& (0+255),w,b
 21514   015CAE  A4D8               	btfss	status,2,c
 21515   015CB0  D0AD               	goto	l10461
 21516   015CB2                     u12470:
 21517                           
 21518                           ; BSR set to: 6
 21519                           ;fatfs/ff.c: 3308:   if (sign == 0xAA55 && !memcmp(fs->win + 82, "FAT32   ", 8)) {
 21520   015CB2  0E55               	movlw	85
 21521   015CB4  1913               	xorwf	check_fs@sign& (0+255),w,b
 21522   015CB6  E11E               	bnz	l10431
 21523   015CB8  0EAA               	movlw	170
 21524   015CBA  1914               	xorwf	(check_fs@sign+1)& (0+255),w,b
 21525   015CBC  A4D8               	btfss	status,2,c
 21526   015CBE  D01A               	goto	l10431
 21527                           
 21528                           ; BSR set to: 6
 21529   015CC0  0E82               	movlw	130
 21530   015CC2  250A               	addwf	check_fs@fs& (0+255),w,b
 21531   015CC4  6E01               	movwf	memcmp@vl^(0+1280),c
 21532   015CC6  0E00               	movlw	0
 21533   015CC8  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21534   015CCA  6E02               	movwf	(memcmp@vl+1)^(0+1280),c
 21535   015CCC  0EB7               	movlw	low STR_29
 21536   015CCE  6E03               	movwf	memcmp@vr^(0+1280),c
 21537   015CD0  0EFF               	movlw	high STR_29
 21538   015CD2  6E04               	movwf	(memcmp@vr+1)^(0+1280),c
 21539   015CD4  0E00               	movlw	0
 21540   015CD6  6E06               	movwf	(memcmp@n+1)^(0+1280),c
 21541   015CD8  0E08               	movlw	8
 21542   015CDA  6E05               	movwf	memcmp@n^(0+1280),c
 21543   015CDC  EC94  F0C6         	call	_memcmp	;wreg free
 21544   015CE0  5001               	movf	?_memcmp^(0+1280),w,c
 21545   015CE2  1002               	iorwf	(?_memcmp+1)^(0+1280),w,c
 21546   015CE4  A4D8               	btfss	status,2,c
 21547   015CE6  D006               	goto	l10431
 21548   015CE8                     u12490:
 21549                           
 21550                           ;fatfs/ff.c: 3309:    return 0;
 21551   015CE8  0E00               	movlw	0
 21552   015CEA  0106               	movlb	6	; () banked
 21553   015CEC  6F0B               	movwf	(?_check_fs+1)& (0+255),b
 21554   015CEE  0E00               	movlw	0
 21555   015CF0  6F0A               	movwf	?_check_fs& (0+255),b
 21556   015CF2  0012               	return	
 21557   015CF4                     l10431:
 21558                           
 21559                           ;fatfs/ff.c: 3312:   w = ld_word(fs->win + 11);
 21560   015CF4  0E3B               	movlw	59
 21561   015CF6  0106               	movlb	6	; () banked
 21562   015CF8  250A               	addwf	check_fs@fs& (0+255),w,b
 21563   015CFA  6E01               	movwf	ld_word@ptr^(0+1280),c
 21564   015CFC  0E00               	movlw	0
 21565   015CFE  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21566   015D00  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21567   015D02  EC31  F0CE         	call	_ld_word	;wreg free
 21568   015D06  C501  F615         	movff	?_ld_word,check_fs@w
 21569   015D0A  C502  F616         	movff	?_ld_word+1,check_fs@w+1
 21570                           
 21571                           ;fatfs/ff.c: 3313:   b = fs->win[13];
 21572   015D0E  0106               	movlb	6	; () banked
 21573   015D10  EE20 F03D          	lfsr	2,61
 21574   015D14  510A               	movf	check_fs@fs& (0+255),w,b
 21575   015D16  26D9               	addwf	fsr2l,f,c
 21576   015D18  510B               	movf	(check_fs@fs+1)& (0+255),w,b
 21577   015D1A  22DA               	addwfc	fsr2h,f,c
 21578   015D1C  50DF               	movf	indf2,w,c
 21579   015D1E  6F17               	movwf	check_fs@b& (0+255),b
 21580                           
 21581                           ; BSR set to: 6
 21582                           ;fatfs/ff.c: 3314:   if ((w & (w - 1)) == 0 && w >= 512 && w <= 512
 21583   015D20  0EFF               	movlw	255
 21584   015D22  2515               	addwf	check_fs@w& (0+255),w,b
 21585   015D24  6F10               	movwf	??_check_fs& (0+255),b
 21586   015D26  0EFF               	movlw	255
 21587   015D28  2116               	addwfc	(check_fs@w+1)& (0+255),w,b
 21588   015D2A  6F11               	movwf	(??_check_fs+1)& (0+255),b
 21589   015D2C  5115               	movf	check_fs@w& (0+255),w,b
 21590   015D2E  1710               	andwf	??_check_fs& (0+255),f,b
 21591   015D30  5116               	movf	(check_fs@w+1)& (0+255),w,b
 21592   015D32  1711               	andwf	(??_check_fs+1)& (0+255),f,b
 21593   015D34  5110               	movf	??_check_fs& (0+255),w,b
 21594   015D36  1111               	iorwf	(??_check_fs+1)& (0+255),w,b
 21595   015D38  A4D8               	btfss	status,2,c
 21596   015D3A  D068               	goto	l10461
 21597                           
 21598                           ; BSR set to: 6
 21599   015D3C  0E02               	movlw	2
 21600   015D3E  5D16               	subwf	(check_fs@w+1)& (0+255),w,b
 21601   015D40  A0D8               	btfss	status,0,c
 21602   015D42  D064               	goto	l10461
 21603                           
 21604                           ; BSR set to: 6
 21605   015D44  0515               	decf	check_fs@w& (0+255),w,b
 21606   015D46  0E02               	movlw	2
 21607   015D48  5916               	subwfb	(check_fs@w+1)& (0+255),w,b
 21608   015D4A  B0D8               	btfsc	status,0,c
 21609   015D4C  D05F               	goto	l10461
 21610                           
 21611                           ; BSR set to: 6
 21612   015D4E  5117               	movf	check_fs@b& (0+255),w,b
 21613   015D50  B4D8               	btfsc	status,2,c
 21614   015D52  D05C               	goto	l10461
 21615                           
 21616                           ; BSR set to: 6
 21617   015D54  0517               	decf	check_fs@b& (0+255),w,b
 21618   015D56  1517               	andwf	check_fs@b& (0+255),w,b
 21619   015D58  0900               	iorlw	0
 21620   015D5A  A4D8               	btfss	status,2,c
 21621   015D5C  D057               	goto	l10461
 21622                           
 21623                           ; BSR set to: 6
 21624   015D5E  0E3E               	movlw	62
 21625   015D60  250A               	addwf	check_fs@fs& (0+255),w,b
 21626   015D62  6E01               	movwf	ld_word@ptr^(0+1280),c
 21627   015D64  0E00               	movlw	0
 21628   015D66  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21629   015D68  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21630   015D6A  EC31  F0CE         	call	_ld_word	;wreg free
 21631   015D6E  5001               	movf	?_ld_word^(0+1280),w,c
 21632   015D70  1002               	iorwf	(?_ld_word+1)^(0+1280),w,c
 21633   015D72  B4D8               	btfsc	status,2,c
 21634   015D74  D04B               	goto	l10461
 21635   015D76  0106               	movlb	6	; () banked
 21636   015D78  EE20 F040          	lfsr	2,64
 21637   015D7C  510A               	movf	check_fs@fs& (0+255),w,b
 21638   015D7E  26D9               	addwf	fsr2l,f,c
 21639   015D80  510B               	movf	(check_fs@fs+1)& (0+255),w,b
 21640   015D82  22DA               	addwfc	fsr2h,f,c
 21641   015D84  50DF               	movf	indf2,w,c
 21642   015D86  6F10               	movwf	??_check_fs& (0+255),b
 21643   015D88  0EFF               	movlw	255
 21644   015D8A  2510               	addwf	??_check_fs& (0+255),w,b
 21645   015D8C  6F11               	movwf	(??_check_fs+1)& (0+255),b
 21646   015D8E  6B12               	clrf	(??_check_fs+2)& (0+255),b
 21647   015D90  0EFF               	movlw	255
 21648   015D92  2312               	addwfc	(??_check_fs+2)& (0+255),f,b
 21649   015D94  5112               	movf	(??_check_fs+2)& (0+255),w,b
 21650   015D96  E13A               	bnz	l10461
 21651   015D98  0E02               	movlw	2
 21652   015D9A  5D11               	subwf	(??_check_fs+1)& (0+255),w,b
 21653   015D9C  B0D8               	btfsc	status,0,c
 21654   015D9E  D036               	goto	l10461
 21655                           
 21656                           ; BSR set to: 6
 21657   015DA0  0E41               	movlw	65
 21658   015DA2  250A               	addwf	check_fs@fs& (0+255),w,b
 21659   015DA4  6E01               	movwf	ld_word@ptr^(0+1280),c
 21660   015DA6  0E00               	movlw	0
 21661   015DA8  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21662   015DAA  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21663   015DAC  EC31  F0CE         	call	_ld_word	;wreg free
 21664   015DB0  5001               	movf	?_ld_word^(0+1280),w,c
 21665   015DB2  1002               	iorwf	(?_ld_word+1)^(0+1280),w,c
 21666   015DB4  B4D8               	btfsc	status,2,c
 21667   015DB6  D02A               	goto	l10461
 21668   015DB8  0E43               	movlw	67
 21669   015DBA  0106               	movlb	6	; () banked
 21670   015DBC  250A               	addwf	check_fs@fs& (0+255),w,b
 21671   015DBE  6E01               	movwf	ld_word@ptr^(0+1280),c
 21672   015DC0  0E00               	movlw	0
 21673   015DC2  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21674   015DC4  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21675   015DC6  EC31  F0CE         	call	_ld_word	;wreg free
 21676   015DCA  5002               	movf	(?_ld_word+1)^(0+1280),w,c
 21677   015DCC  E112               	bnz	l10455
 21678   015DCE  0E80               	movlw	128
 21679   015DD0  5C01               	subwf	?_ld_word^(0+1280),w,c
 21680   015DD2  B0D8               	btfsc	status,0,c
 21681   015DD4  D00E               	goto	u12590
 21682   015DD6  0E50               	movlw	80
 21683   015DD8  0106               	movlb	6	; () banked
 21684   015DDA  250A               	addwf	check_fs@fs& (0+255),w,b
 21685   015DDC  6E01               	movwf	ld_dword@ptr^(0+1280),c
 21686   015DDE  0E00               	movlw	0
 21687   015DE0  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21688   015DE2  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 21689   015DE4  ECD5  F0C4         	call	_ld_dword	;wreg free
 21690   015DE8  5004               	movf	(?_ld_dword+3)^(0+1280),w,c
 21691   015DEA  E103               	bnz	u12590
 21692   015DEC  0403               	decf	(?_ld_dword+2)^(0+1280),w,c
 21693   015DEE  A0D8               	btfss	status,0,c
 21694   015DF0  D00D               	goto	l10461
 21695   015DF2                     u12590:
 21696   015DF2                     l10455:
 21697   015DF2  0E46               	movlw	70
 21698   015DF4  0106               	movlb	6	; () banked
 21699   015DF6  250A               	addwf	check_fs@fs& (0+255),w,b
 21700   015DF8  6E01               	movwf	ld_word@ptr^(0+1280),c
 21701   015DFA  0E00               	movlw	0
 21702   015DFC  210B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 21703   015DFE  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 21704   015E00  EC31  F0CE         	call	_ld_word	;wreg free
 21705   015E04  5001               	movf	?_ld_word^(0+1280),w,c
 21706   015E06  1002               	iorwf	(?_ld_word+1)^(0+1280),w,c
 21707   015E08  A4D8               	btfss	status,2,c
 21708   015E0A  D76E               	goto	u12490
 21709   015E0C                     l10461:
 21710                           
 21711                           ;fatfs/ff.c: 3324:  return sign == 0xAA55 ? 2 : 3;
 21712   015E0C  0E55               	movlw	85
 21713   015E0E  0106               	movlb	6	; () banked
 21714   015E10  1913               	xorwf	check_fs@sign& (0+255),w,b
 21715   015E12  E104               	bnz	u12610
 21716   015E14  0EAA               	movlw	170
 21717   015E16  1914               	xorwf	(check_fs@sign+1)& (0+255),w,b
 21718   015E18  B4D8               	btfsc	status,2,c
 21719   015E1A  D005               	goto	l10465
 21720   015E1C                     u12610:
 21721                           
 21722                           ; BSR set to: 6
 21723   015E1C  0E00               	movlw	0
 21724   015E1E  6F0B               	movwf	(?_check_fs+1)& (0+255),b
 21725   015E20  0E03               	movlw	3
 21726   015E22  6F0A               	movwf	?_check_fs& (0+255),b
 21727   015E24  0012               	return	
 21728   015E26                     l10465:
 21729                           
 21730                           ; BSR set to: 6
 21731   015E26  0E00               	movlw	0
 21732   015E28  6F0B               	movwf	(?_check_fs+1)& (0+255),b
 21733   015E2A  0E02               	movlw	2
 21734   015E2C  6F0A               	movwf	?_check_fs& (0+255),b
 21735                           
 21736                           ; BSR set to: 6
 21737   015E2E  0012               	return		;funcret
 21738   015E30                     __end_of_check_fs:
 21739                           	callstack 0
 21740                           
 21741 ;; *************** function _memcmp *****************
 21742 ;; Defined at:
 21743 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcmp.c"
 21744 ;; Parameters:    Size  Location     Type
 21745 ;;  vl              2    0[COMRAM] PTR const void 
 21746 ;;		 -> fs$win(512), fs(560), tmp_buf(512), NULL(0), 
 21747 ;;  vr              2    2[COMRAM] PTR const void 
 21748 ;;		 -> djn$fn(12), fsdir$fn(12), tmp_buf(512), fsdir(40), 
 21749 ;;		 -> f_rename@djn(40), djo$fn(12), f_rename@djo(40), f_mkdir@dj(40), 
 21750 ;;		 -> f_unlink@dj(40), f_stat@dj(40), dj$fn(12), f_open@dj(40), 
 21751 ;;		 -> STR_30(9), 
 21752 ;;  n               2    4[COMRAM] unsigned int 
 21753 ;; Auto vars:     Size  Location     Type
 21754 ;;  r               2   10[COMRAM] PTR const unsigned char 
 21755 ;;		 -> djn$fn(12), fsdir$fn(12), tmp_buf(512), fsdir(40), 
 21756 ;;		 -> f_rename@djn(40), djo$fn(12), f_rename@djo(40), f_mkdir@dj(40), 
 21757 ;;		 -> f_unlink@dj(40), f_stat@dj(40), dj$fn(12), f_open@dj(40), 
 21758 ;;		 -> STR_30(9), 
 21759 ;;  l               2    8[COMRAM] PTR const unsigned char 
 21760 ;;		 -> fs$win(512), fs(560), tmp_buf(512), NULL(0), 
 21761 ;; Return value:  Size  Location     Type
 21762 ;;                  2    0[COMRAM] int 
 21763 ;; Registers used:
 21764 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21765 ;; Tracked objects:
 21766 ;;		On entry : 0/6
 21767 ;;		On exit  : 0/0
 21768 ;;		Unchanged: 0/0
 21769 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21770 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21771 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21773 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21774 ;;Total ram usage:       12 bytes
 21775 ;; Hardware stack levels used: 1
 21776 ;; This function calls:
 21777 ;;		Nothing
 21778 ;; This function is called by:
 21779 ;;		_dir_find
 21780 ;;		_check_fs
 21781 ;;		_mem_init
 21782 ;; This function uses a non-reentrant model
 21783 ;;
 21784                           
 21785                           	psect	text32
 21786   018D28                     __ptext32:
 21787                           	callstack 0
 21788   018D28                     _memcmp:
 21789                           	callstack 121
 21790                           
 21791                           ; BSR set to: 6
 21792                           ;incstack = 0
 21793   018D28  C501  F509         	movff	memcmp@vl,memcmp@l
 21794   018D2C  C502  F50A         	movff	memcmp@vl+1,memcmp@l+1
 21795   018D30  C503  F50B         	movff	memcmp@vr,memcmp@r
 21796   018D34  C504  F50C         	movff	memcmp@vr+1,memcmp@r+1
 21797   018D38  D007               	goto	l10141
 21798   018D3A                     l10139:
 21799   018D3A  0605               	decf	memcmp@n^(0+1280),f,c
 21800   018D3C  A0D8               	btfss	status,0,c
 21801   018D3E  0606               	decf	(memcmp@n+1)^(0+1280),f,c
 21802   018D40  4A09               	infsnz	memcmp@l^(0+1280),f,c
 21803   018D42  2A0A               	incf	(memcmp@l+1)^(0+1280),f,c
 21804   018D44  4A0B               	infsnz	memcmp@r^(0+1280),f,c
 21805   018D46  2A0C               	incf	(memcmp@r+1)^(0+1280),f,c
 21806   018D48                     l10141:
 21807   018D48  5005               	movf	memcmp@n^(0+1280),w,c
 21808   018D4A  1006               	iorwf	(memcmp@n+1)^(0+1280),w,c
 21809   018D4C  B4D8               	btfsc	status,2,c
 21810   018D4E  D01A               	goto	u11940
 21811   018D50  C509  F4D9         	movff	memcmp@l,fsr2l
 21812   018D54  C50A  F4DA         	movff	memcmp@l+1,fsr2h
 21813   018D58  50DF               	movf	indf2,w,c
 21814   018D5A  6E07               	movwf	??_memcmp^(0+1280),c
 21815   018D5C  C50B  F4F6         	movff	memcmp@r,tblptrl
 21816   018D60  C50C  F4F7         	movff	memcmp@r+1,tblptrh
 21817   018D64  0E00               	movlw	low (__mediumconst shr (0+16))
 21818   018D66  6EF8               	movwf	tblptru,c
 21819   018D68  0E24               	movlw	(high __ramtop+-1)
 21820   018D6A  64F7               	cpfsgt	tblptrh,c
 21821   018D6C  D003               	bra	u11937
 21822   018D6E  0008               	tblrd		*
 21823   018D70  50F5               	movf	tablat,w,c
 21824   018D72  D005               	bra	u11930
 21825   018D74                     u11937:
 21826   018D74  C4F6 F4E9          	movff	tblptrl,fsr0l
 21827   018D78  C4F7 F4EA          	movff	tblptrh,fsr0h
 21828   018D7C  50EF               	movf	indf0,w,c
 21829   018D7E                     u11930:
 21830   018D7E  1807               	xorwf	??_memcmp^(0+1280),w,c
 21831   018D80  B4D8               	btfsc	status,2,c
 21832   018D82  D7DB               	goto	l10139
 21833   018D84                     u11940:
 21834   018D84  5005               	movf	memcmp@n^(0+1280),w,c
 21835   018D86  1006               	iorwf	(memcmp@n+1)^(0+1280),w,c
 21836   018D88  A4D8               	btfss	status,2,c
 21837   018D8A  D005               	goto	l10149
 21838   018D8C  0E00               	movlw	0
 21839   018D8E  6E02               	movwf	(?_memcmp+1)^(0+1280),c
 21840   018D90  0E00               	movlw	0
 21841   018D92  6E01               	movwf	?_memcmp^(0+1280),c
 21842   018D94  0012               	return	
 21843   018D96                     l10149:
 21844   018D96  C509  F4D9         	movff	memcmp@l,fsr2l
 21845   018D9A  C50A  F4DA         	movff	memcmp@l+1,fsr2h
 21846   018D9E  50DF               	movf	indf2,w,c
 21847   018DA0  6E07               	movwf	??_memcmp^(0+1280),c
 21848   018DA2  C50B  F4F6         	movff	memcmp@r,tblptrl
 21849   018DA6  C50C  F4F7         	movff	memcmp@r+1,tblptrh
 21850   018DAA  0E00               	movlw	low (__mediumconst shr (0+16))
 21851   018DAC  6EF8               	movwf	tblptru,c
 21852   018DAE  0E24               	movlw	(high __ramtop+-1)
 21853   018DB0  64F7               	cpfsgt	tblptrh,c
 21854   018DB2  D003               	bra	u11967
 21855   018DB4  0008               	tblrd		*
 21856   018DB6  50F5               	movf	tablat,w,c
 21857   018DB8  D005               	bra	u11960
 21858   018DBA                     u11967:
 21859   018DBA  C4F6 F4E9          	movff	tblptrl,fsr0l
 21860   018DBE  C4F7 F4EA          	movff	tblptrh,fsr0h
 21861   018DC2  50EF               	movf	indf0,w,c
 21862   018DC4                     u11960:
 21863   018DC4  6E08               	movwf	(??_memcmp+1)^(0+1280),c
 21864   018DC6  5008               	movf	(??_memcmp+1)^(0+1280),w,c
 21865   018DC8  5C07               	subwf	??_memcmp^(0+1280),w,c
 21866   018DCA  6E01               	movwf	?_memcmp^(0+1280),c
 21867   018DCC  6A02               	clrf	(?_memcmp+1)^(0+1280),c
 21868   018DCE  A0D8               	btfss	status,0,c
 21869   018DD0  0602               	decf	(?_memcmp+1)^(0+1280),f,c
 21870   018DD2  0012               	return		;funcret
 21871   018DD4                     __end_of_memcmp:
 21872                           	callstack 0
 21873                           
 21874 ;; *************** function _disk_initialize *****************
 21875 ;; Defined at:
 21876 ;;		line 53 in file "drivers/diskio.c"
 21877 ;; Parameters:    Size  Location     Type
 21878 ;;  pdrv            1    wreg     unsigned char 
 21879 ;; Auto vars:     Size  Location     Type
 21880 ;;  pdrv            1  128[BANK6 ] unsigned char 
 21881 ;;  buf           128    0[BANK6 ] unsigned char [128]
 21882 ;; Return value:  Size  Location     Type
 21883 ;;                  1    wreg      unsigned char 
 21884 ;; Registers used:
 21885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21886 ;; Tracked objects:
 21887 ;;		On entry : 3F/6
 21888 ;;		On exit  : 3C/4
 21889 ;;		Unchanged: 0/0
 21890 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21892 ;;      Locals:         0       0     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21893 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21894 ;;      Totals:         0       4     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21895 ;;Total ram usage:      133 bytes
 21896 ;; Hardware stack levels used: 1
 21897 ;; Hardware stack levels required when called: 10
 21898 ;; This function calls:
 21899 ;;		_SDCard_read512
 21900 ;;		_printf
 21901 ;;		_util_hexdump
 21902 ;; This function is called by:
 21903 ;;		_mount_volume
 21904 ;; This function uses a non-reentrant model
 21905 ;;
 21906                           
 21907                           	psect	text33
 21908   017A12                     __ptext33:
 21909                           	callstack 0
 21910   017A12                     _disk_initialize:
 21911                           	callstack 113
 21912                           
 21913                           ;incstack = 0
 21914                           ;disk_initialize@pdrv stored from wreg
 21915   017A12  6F80               	movwf	disk_initialize@pdrv& (0+255),b
 21916                           
 21917                           ;drivers/diskio.c: 58:     if (pdrv != 0) {
 21918                           
 21919                           ;drivers/diskio.c: 53: DSTATUS disk_initialize(BYTE pdrv);drivers/diskio.c: 54: {;driver
      +                          s/diskio.c: 55:     uint8_t buf[128];;drivers/diskio.c: 57:     do { if (debug_flags) pr
      +                          intf ("disk_initialize(%d)...\n\r", pdrv); } while(0);
 21920   017A14  0106               	movlb	6	; () banked
 21921   017A16  5180               	movf	disk_initialize@pdrv& (0+255),w,b
 21922   017A18  B4D8               	btfsc	status,2,c
 21923   017A1A  D002               	goto	l29
 21924   017A1C                     u12620:
 21925                           
 21926                           ;drivers/diskio.c: 60:         return 0x02;
 21927   017A1C  0E02               	movlw	2
 21928   017A1E  0012               	return	
 21929   017A20                     l29:
 21930                           
 21931                           ; BSR set to: 6
 21932                           ;drivers/diskio.c: 65:     if (SDCard_read512(0, 384, buf, 128) != 0) {
 21933                           
 21934                           ; BSR set to: 6
 21935   017A20  0E00               	movlw	0
 21936   017A22  0105               	movlb	5	; () banked
 21937   017A24  6FC7               	movwf	SDCard_read512@addr& (0+255),b
 21938   017A26  0E00               	movlw	0
 21939   017A28  6FC8               	movwf	(SDCard_read512@addr+1)& (0+255),b
 21940   017A2A  0E00               	movlw	0
 21941   017A2C  6FC9               	movwf	(SDCard_read512@addr+2)& (0+255),b
 21942   017A2E  0E00               	movlw	0
 21943   017A30  6FCA               	movwf	(SDCard_read512@addr+3)& (0+255),b
 21944   017A32  0E01               	movlw	1
 21945   017A34  6FCC               	movwf	(SDCard_read512@offs+1)& (0+255),b
 21946   017A36  0E80               	movlw	128
 21947   017A38  6FCB               	movwf	SDCard_read512@offs& (0+255),b
 21948   017A3A  0E00               	movlw	low disk_initialize@buf
 21949   017A3C  6FCD               	movwf	SDCard_read512@buf& (0+255),b
 21950   017A3E  0E06               	movlw	high disk_initialize@buf
 21951   017A40  6FCE               	movwf	(SDCard_read512@buf+1)& (0+255),b
 21952   017A42  0E00               	movlw	0
 21953   017A44  6FD0               	movwf	(SDCard_read512@count+1)& (0+255),b
 21954   017A46  0E80               	movlw	128
 21955   017A48  6FCF               	movwf	SDCard_read512@count& (0+255),b
 21956   017A4A  EC18  F0AF         	call	_SDCard_read512	;wreg free
 21957   017A4E  0105               	movlb	5	; () banked
 21958   017A50  51C7               	movf	?_SDCard_read512& (0+255),w,b
 21959   017A52  11C8               	iorwf	(?_SDCard_read512+1)& (0+255),w,b
 21960   017A54  A4D8               	btfss	status,2,c
 21961   017A56  D7E2               	goto	u12620
 21962                           
 21963                           ; BSR set to: 5
 21964                           ;drivers/diskio.c: 72:     if (buf[126] != 0x55 || buf[127] != 0xaa) {
 21965   017A58  0E55               	movlw	85
 21966   017A5A  0106               	movlb	6	; () banked
 21967   017A5C  197E               	xorwf	(disk_initialize@buf+126)& (0+255),w,b
 21968   017A5E  A4D8               	btfss	status,2,c
 21969   017A60  D7DD               	goto	u12620
 21970                           
 21971                           ; BSR set to: 6
 21972   017A62  0EAA               	movlw	170
 21973   017A64  197F               	xorwf	(disk_initialize@buf+127)& (0+255),w,b
 21974   017A66  A4D8               	btfss	status,2,c
 21975   017A68  D7D9               	goto	u12620
 21976                           
 21977                           ; BSR set to: 6
 21978                           ;drivers/diskio.c: 84:     if (buf[66] != 0x01 && buf[66] != 0x04 && buf[66] != 0x06 &&
 21979                           
 21980                           ; BSR set to: 6
 21981   017A6A  0542               	decf	(disk_initialize@buf+66)& (0+255),w,b
 21982   017A6C  B4D8               	btfsc	status,2,c
 21983   017A6E  D014               	goto	l10521
 21984                           
 21985                           ; BSR set to: 6
 21986   017A70  0E04               	movlw	4
 21987   017A72  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 21988   017A74  B4D8               	btfsc	status,2,c
 21989   017A76  D010               	goto	l10521
 21990                           
 21991                           ; BSR set to: 6
 21992   017A78  0E06               	movlw	6
 21993   017A7A  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 21994   017A7C  B4D8               	btfsc	status,2,c
 21995   017A7E  D00C               	goto	l10521
 21996                           
 21997                           ; BSR set to: 6
 21998   017A80  0E0B               	movlw	11
 21999   017A82  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 22000   017A84  B4D8               	btfsc	status,2,c
 22001   017A86  D008               	goto	l10521
 22002                           
 22003                           ; BSR set to: 6
 22004   017A88  0E0C               	movlw	12
 22005   017A8A  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 22006   017A8C  B4D8               	btfsc	status,2,c
 22007   017A8E  D004               	goto	l10521
 22008                           
 22009                           ; BSR set to: 6
 22010   017A90  0E0E               	movlw	14
 22011   017A92  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 22012   017A94  A4D8               	btfss	status,2,c
 22013   017A96  D7C2               	goto	u12620
 22014   017A98                     l10521:
 22015                           
 22016                           ; BSR set to: 6
 22017                           ;drivers/diskio.c: 89:     start_lba = buf[73];
 22018   017A98  5149               	movf	(disk_initialize@buf+73)& (0+255),w,b
 22019   017A9A  0107               	movlb	7	; () banked
 22020   017A9C  6FD5               	movwf	_start_lba& (0+255),b
 22021   017A9E  6BD6               	clrf	(_start_lba+1)& (0+255),b
 22022   017AA0  6BD7               	clrf	(_start_lba+2)& (0+255),b
 22023   017AA2  6BD8               	clrf	(_start_lba+3)& (0+255),b
 22024                           
 22025                           ; BSR set to: 7
 22026                           ;drivers/diskio.c: 90:     start_lba = (start_lba << 8) | buf[72];
 22027   017AA4  0106               	movlb	6	; () banked
 22028   017AA6  5148               	movf	(disk_initialize@buf+72)& (0+255),w,b
 22029   017AA8  C7D5  F5E5         	movff	_start_lba,??_disk_initialize+1
 22030   017AAC  C7D6  F5E6         	movff	_start_lba+1,??_disk_initialize+2
 22031   017AB0  C7D7  F5E7         	movff	_start_lba+2,??_disk_initialize+3
 22032   017AB4  0105               	movlb	5	; () banked
 22033   017AB6  6BE4               	clrf	??_disk_initialize& (0+255),b
 22034   017AB8  11E4               	iorwf	??_disk_initialize& (0+255),w,b
 22035   017ABA  0107               	movlb	7	; () banked
 22036   017ABC  6FD5               	movwf	_start_lba& (0+255),b
 22037   017ABE  0105               	movlb	5	; () banked
 22038   017AC0  51E5               	movf	(??_disk_initialize+1)& (0+255),w,b
 22039   017AC2  0107               	movlb	7	; () banked
 22040   017AC4  6FD6               	movwf	(_start_lba+1)& (0+255),b
 22041   017AC6  0105               	movlb	5	; () banked
 22042   017AC8  51E6               	movf	(??_disk_initialize+2)& (0+255),w,b
 22043   017ACA  0107               	movlb	7	; () banked
 22044   017ACC  6FD7               	movwf	(_start_lba+2)& (0+255),b
 22045   017ACE  0105               	movlb	5	; () banked
 22046   017AD0  51E7               	movf	(??_disk_initialize+3)& (0+255),w,b
 22047   017AD2  0107               	movlb	7	; () banked
 22048   017AD4  6FD8               	movwf	(_start_lba+3)& (0+255),b
 22049                           
 22050                           ; BSR set to: 7
 22051                           ;drivers/diskio.c: 91:     start_lba = (start_lba << 8) | buf[71];
 22052   017AD6  0106               	movlb	6	; () banked
 22053   017AD8  5147               	movf	(disk_initialize@buf+71)& (0+255),w,b
 22054   017ADA  C7D5  F5E5         	movff	_start_lba,??_disk_initialize+1
 22055   017ADE  C7D6  F5E6         	movff	_start_lba+1,??_disk_initialize+2
 22056   017AE2  C7D7  F5E7         	movff	_start_lba+2,??_disk_initialize+3
 22057   017AE6  0105               	movlb	5	; () banked
 22058   017AE8  6BE4               	clrf	??_disk_initialize& (0+255),b
 22059   017AEA  11E4               	iorwf	??_disk_initialize& (0+255),w,b
 22060   017AEC  0107               	movlb	7	; () banked
 22061   017AEE  6FD5               	movwf	_start_lba& (0+255),b
 22062   017AF0  0105               	movlb	5	; () banked
 22063   017AF2  51E5               	movf	(??_disk_initialize+1)& (0+255),w,b
 22064   017AF4  0107               	movlb	7	; () banked
 22065   017AF6  6FD6               	movwf	(_start_lba+1)& (0+255),b
 22066   017AF8  0105               	movlb	5	; () banked
 22067   017AFA  51E6               	movf	(??_disk_initialize+2)& (0+255),w,b
 22068   017AFC  0107               	movlb	7	; () banked
 22069   017AFE  6FD7               	movwf	(_start_lba+2)& (0+255),b
 22070   017B00  0105               	movlb	5	; () banked
 22071   017B02  51E7               	movf	(??_disk_initialize+3)& (0+255),w,b
 22072   017B04  0107               	movlb	7	; () banked
 22073   017B06  6FD8               	movwf	(_start_lba+3)& (0+255),b
 22074                           
 22075                           ; BSR set to: 7
 22076                           ;drivers/diskio.c: 92:     start_lba = (start_lba << 8) | buf[70];
 22077   017B08  0106               	movlb	6	; () banked
 22078   017B0A  5146               	movf	(disk_initialize@buf+70)& (0+255),w,b
 22079   017B0C  C7D5  F5E5         	movff	_start_lba,??_disk_initialize+1
 22080   017B10  C7D6  F5E6         	movff	_start_lba+1,??_disk_initialize+2
 22081   017B14  C7D7  F5E7         	movff	_start_lba+2,??_disk_initialize+3
 22082   017B18  0105               	movlb	5	; () banked
 22083   017B1A  6BE4               	clrf	??_disk_initialize& (0+255),b
 22084   017B1C  11E4               	iorwf	??_disk_initialize& (0+255),w,b
 22085   017B1E  0107               	movlb	7	; () banked
 22086   017B20  6FD5               	movwf	_start_lba& (0+255),b
 22087   017B22  0105               	movlb	5	; () banked
 22088   017B24  51E5               	movf	(??_disk_initialize+1)& (0+255),w,b
 22089   017B26  0107               	movlb	7	; () banked
 22090   017B28  6FD6               	movwf	(_start_lba+1)& (0+255),b
 22091   017B2A  0105               	movlb	5	; () banked
 22092   017B2C  51E6               	movf	(??_disk_initialize+2)& (0+255),w,b
 22093   017B2E  0107               	movlb	7	; () banked
 22094   017B30  6FD7               	movwf	(_start_lba+2)& (0+255),b
 22095   017B32  0105               	movlb	5	; () banked
 22096   017B34  51E7               	movf	(??_disk_initialize+3)& (0+255),w,b
 22097   017B36  0107               	movlb	7	; () banked
 22098   017B38  6FD8               	movwf	(_start_lba+3)& (0+255),b
 22099                           
 22100                           ; BSR set to: 7
 22101                           ;drivers/diskio.c: 95:     return 0;
 22102   017B3A  0E00               	movlw	0
 22103   017B3C  0012               	return		;funcret
 22104   017B3E                     __end_of_disk_initialize:
 22105                           	callstack 0
 22106                           
 22107 ;; *************** function _util_hexdump *****************
 22108 ;; Defined at:
 22109 ;;		line 29 in file "drivers/utils.c"
 22110 ;; Parameters:    Size  Location     Type
 22111 ;;  header          2   70[BANK5 ] PTR const unsigned char 
 22112 ;;		 -> STR_5(1), 
 22113 ;;  addr            2   72[BANK5 ] PTR const void 
 22114 ;;		 -> disk_initialize@buf(128), 
 22115 ;;  size            2   74[BANK5 ] unsigned int 
 22116 ;; Auto vars:     Size  Location     Type
 22117 ;;  i               2   97[BANK5 ] int 
 22118 ;;  chars          17   78[BANK5 ] unsigned char [17]
 22119 ;;  buf             2   95[BANK5 ] PTR const unsigned char 
 22120 ;;		 -> disk_initialize@buf(128), 
 22121 ;; Return value:  Size  Location     Type
 22122 ;;                  1    wreg      void 
 22123 ;; Registers used:
 22124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22125 ;; Tracked objects:
 22126 ;;		On entry : 0/0
 22127 ;;		On exit  : 3F/5
 22128 ;;		Unchanged: 0/0
 22129 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22130 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22131 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22132 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22133 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22134 ;;Total ram usage:       29 bytes
 22135 ;; Hardware stack levels used: 1
 22136 ;; Hardware stack levels required when called: 8
 22137 ;; This function calls:
 22138 ;;		_printf
 22139 ;; This function is called by:
 22140 ;;		_disk_initialize
 22141 ;; This function uses a non-reentrant model
 22142 ;;
 22143                           
 22144                           	psect	text34
 22145   017E9E                     __ptext34:
 22146                           	callstack 0
 22147   017E9E                     _util_hexdump:
 22148                           	callstack 114
 22149                           
 22150                           ;drivers/utils.c: 29: void util_hexdump(const char *header, const void *addr, unsigned i
      +                          nt size);drivers/utils.c: 30: {;drivers/utils.c: 31:     char chars[17];;drivers/utils.c
      +                          : 32:     const uint8_t *buf = addr;
 22151                           
 22152                           ;incstack = 0
 22153   017E9E  C5A8  F5BF         	movff	util_hexdump@addr,util_hexdump@buf
 22154   017EA2  C5A9  F5C0         	movff	util_hexdump@addr+1,util_hexdump@buf+1
 22155                           
 22156                           ;drivers/utils.c: 33:     size = ((size + 15) & ~0xfU);
 22157   017EA6  0E0F               	movlw	15
 22158   017EA8  0105               	movlb	5	; () banked
 22159   017EAA  25AA               	addwf	util_hexdump@size& (0+255),w,b
 22160   017EAC  6FAC               	movwf	??_util_hexdump& (0+255),b
 22161   017EAE  0E00               	movlw	0
 22162   017EB0  21AB               	addwfc	(util_hexdump@size+1)& (0+255),w,b
 22163   017EB2  6FAD               	movwf	(??_util_hexdump+1)& (0+255),b
 22164   017EB4  0EF0               	movlw	240
 22165   017EB6  15AC               	andwf	??_util_hexdump& (0+255),w,b
 22166   017EB8  6FAA               	movwf	util_hexdump@size& (0+255),b
 22167   017EBA  0EFF               	movlw	255
 22168   017EBC  15AD               	andwf	(??_util_hexdump+1)& (0+255),w,b
 22169   017EBE  6FAB               	movwf	(util_hexdump@size+1)& (0+255),b
 22170                           
 22171                           ; BSR set to: 5
 22172                           ;drivers/utils.c: 34:     for (int i = 0; i < size; i++) {
 22173   017EC0  0E00               	movlw	0
 22174   017EC2  6FC2               	movwf	(util_hexdump@i+1)& (0+255),b
 22175   017EC4  0E00               	movlw	0
 22176   017EC6  6FC1               	movwf	util_hexdump@i& (0+255),b
 22177   017EC8  D06D               	goto	l10177
 22178   017ECA                     l10157:
 22179                           
 22180                           ; BSR set to: 5
 22181                           ;drivers/utils.c: 35:         if ((i % 16) == 0)
 22182   017ECA  C5C1  F5AC         	movff	util_hexdump@i,??_util_hexdump
 22183   017ECE  0E0F               	movlw	15
 22184   017ED0  17AC               	andwf	??_util_hexdump& (0+255),f,b
 22185   017ED2  A4D8               	btfss	status,2,c
 22186   017ED4  D00E               	goto	l112
 22187                           
 22188                           ; BSR set to: 5
 22189                           ;drivers/utils.c: 36:             printf("%s%04x:", header, i);
 22190   017ED6  0ED1               	movlw	low STR_19
 22191   017ED8  6F9A               	movwf	printf@fmt& (0+255),b
 22192   017EDA  0EFF               	movlw	high STR_19
 22193   017EDC  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 22194   017EDE  C5A6  F59C         	movff	util_hexdump@header,?_printf+2
 22195   017EE2  C5A7  F59D         	movff	util_hexdump@header+1,?_printf+3
 22196   017EE6  C5C1  F59E         	movff	util_hexdump@i,?_printf+4
 22197   017EEA  C5C2  F59F         	movff	util_hexdump@i+1,?_printf+5
 22198   017EEE  EC4F  F0CF         	call	_printf	;wreg free
 22199   017EF2                     l112:
 22200                           
 22201                           ; BSR set to: 5
 22202                           ;drivers/utils.c: 37:         printf(" %02x", buf[i]);
 22203   017EF2  0EE0               	movlw	low STR_20
 22204   017EF4  6F9A               	movwf	printf@fmt& (0+255),b
 22205   017EF6  0EFF               	movlw	high STR_20
 22206   017EF8  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 22207   017EFA  51C1               	movf	util_hexdump@i& (0+255),w,b
 22208   017EFC  25BF               	addwf	util_hexdump@buf& (0+255),w,b
 22209   017EFE  6ED9               	movwf	fsr2l,c
 22210   017F00  51C2               	movf	(util_hexdump@i+1)& (0+255),w,b
 22211   017F02  21C0               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 22212   017F04  6EDA               	movwf	fsr2h,c
 22213   017F06  50DF               	movf	indf2,w,c
 22214   017F08  6FAC               	movwf	??_util_hexdump& (0+255),b
 22215   017F0A  51AC               	movf	??_util_hexdump& (0+255),w,b
 22216   017F0C  6F9C               	movwf	(?_printf+2)& (0+255),b
 22217   017F0E  6B9D               	clrf	(?_printf+3)& (0+255),b
 22218   017F10  EC4F  F0CF         	call	_printf	;wreg free
 22219                           
 22220                           ; BSR set to: 5
 22221                           ;drivers/utils.c: 38:         if (0x20 <= buf[i] && buf[i] <= 0x7e) {
 22222   017F14  51C1               	movf	util_hexdump@i& (0+255),w,b
 22223   017F16  25BF               	addwf	util_hexdump@buf& (0+255),w,b
 22224   017F18  6ED9               	movwf	fsr2l,c
 22225   017F1A  51C2               	movf	(util_hexdump@i+1)& (0+255),w,b
 22226   017F1C  21C0               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 22227   017F1E  6EDA               	movwf	fsr2h,c
 22228   017F20  0E1F               	movlw	31
 22229   017F22  64DF               	cpfsgt	indf2,c
 22230   017F24  D01E               	goto	l10167
 22231                           
 22232                           ; BSR set to: 5
 22233   017F26  51C1               	movf	util_hexdump@i& (0+255),w,b
 22234   017F28  25BF               	addwf	util_hexdump@buf& (0+255),w,b
 22235   017F2A  6ED9               	movwf	fsr2l,c
 22236   017F2C  51C2               	movf	(util_hexdump@i+1)& (0+255),w,b
 22237   017F2E  21C0               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 22238   017F30  6EDA               	movwf	fsr2h,c
 22239   017F32  0E7F               	movlw	127
 22240   017F34  60DF               	cpfslt	indf2,c
 22241   017F36  D015               	goto	l10167
 22242                           
 22243                           ; BSR set to: 5
 22244                           ;drivers/utils.c: 39:             chars[i % 16] = buf[i];
 22245   017F38  51C1               	movf	util_hexdump@i& (0+255),w,b
 22246   017F3A  25BF               	addwf	util_hexdump@buf& (0+255),w,b
 22247   017F3C  6ED9               	movwf	fsr2l,c
 22248   017F3E  51C2               	movf	(util_hexdump@i+1)& (0+255),w,b
 22249   017F40  21C0               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 22250   017F42  6EDA               	movwf	fsr2h,c
 22251   017F44  0E0F               	movlw	15
 22252   017F46  15C1               	andwf	util_hexdump@i& (0+255),w,b
 22253   017F48  6FAC               	movwf	??_util_hexdump& (0+255),b
 22254   017F4A  0E00               	movlw	0
 22255   017F4C  15C2               	andwf	(util_hexdump@i+1)& (0+255),w,b
 22256   017F4E  6FAD               	movwf	(??_util_hexdump+1)& (0+255),b
 22257   017F50  0EAE               	movlw	low util_hexdump@chars
 22258   017F52  25AC               	addwf	??_util_hexdump& (0+255),w,b
 22259   017F54  6EE1               	movwf	fsr1l,c
 22260   017F56  0E05               	movlw	high util_hexdump@chars
 22261   017F58  21AD               	addwfc	(??_util_hexdump+1)& (0+255),w,b
 22262   017F5A  6EE2               	movwf	fsr1h,c
 22263   017F5C  C4DF F4E7          	movff	indf2,indf1
 22264                           
 22265                           ;drivers/utils.c: 40:         } else {
 22266   017F60  D00E               	goto	l10169
 22267   017F62                     l10167:
 22268                           
 22269                           ; BSR set to: 5
 22270                           ;drivers/utils.c: 41:             chars[i % 16] = '.';
 22271   017F62  0E0F               	movlw	15
 22272   017F64  15C1               	andwf	util_hexdump@i& (0+255),w,b
 22273   017F66  6FAC               	movwf	??_util_hexdump& (0+255),b
 22274   017F68  0E00               	movlw	0
 22275   017F6A  15C2               	andwf	(util_hexdump@i+1)& (0+255),w,b
 22276   017F6C  6FAD               	movwf	(??_util_hexdump+1)& (0+255),b
 22277   017F6E  0EAE               	movlw	low util_hexdump@chars
 22278   017F70  25AC               	addwf	??_util_hexdump& (0+255),w,b
 22279   017F72  6ED9               	movwf	fsr2l,c
 22280   017F74  0E05               	movlw	high util_hexdump@chars
 22281   017F76  21AD               	addwfc	(??_util_hexdump+1)& (0+255),w,b
 22282   017F78  6EDA               	movwf	fsr2h,c
 22283   017F7A  0E2E               	movlw	46
 22284   017F7C  6EDF               	movwf	indf2,c
 22285   017F7E                     l10169:
 22286                           
 22287                           ; BSR set to: 5
 22288                           ;drivers/utils.c: 43:         if ((i % 16) == 15) {
 22289   017F7E  51C1               	movf	util_hexdump@i& (0+255),w,b
 22290   017F80  0B0F               	andlw	15
 22291   017F82  0A0F               	xorlw	15
 22292   017F84  A4D8               	btfss	status,2,c
 22293   017F86  D00C               	goto	l10175
 22294                           
 22295                           ; BSR set to: 5
 22296                           ;drivers/utils.c: 44:             chars[16] = '\0';
 22297   017F88  0E00               	movlw	0
 22298   017F8A  6FBE               	movwf	(util_hexdump@chars+16)& (0+255),b
 22299                           
 22300                           ; BSR set to: 5
 22301                           ;drivers/utils.c: 45:             printf(" %s\n\r", chars);
 22302   017F8C  0E9F               	movlw	low (STR_35+3)
 22303   017F8E  6F9A               	movwf	printf@fmt& (0+255),b
 22304   017F90  0EFF               	movlw	high (STR_35+3)
 22305   017F92  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 22306   017F94  0EAE               	movlw	low util_hexdump@chars
 22307   017F96  6F9C               	movwf	(?_printf+2)& (0+255),b
 22308   017F98  0E05               	movlw	high util_hexdump@chars
 22309   017F9A  6F9D               	movwf	(?_printf+3)& (0+255),b
 22310   017F9C  EC4F  F0CF         	call	_printf	;wreg free
 22311   017FA0                     l10175:
 22312                           
 22313                           ; BSR set to: 5
 22314                           ;drivers/utils.c: 47:     }
 22315   017FA0  4BC1               	infsnz	util_hexdump@i& (0+255),f,b
 22316   017FA2  2BC2               	incf	(util_hexdump@i+1)& (0+255),f,b
 22317   017FA4                     l10177:
 22318                           
 22319                           ; BSR set to: 5
 22320   017FA4  51AA               	movf	util_hexdump@size& (0+255),w,b
 22321   017FA6  5DC1               	subwf	util_hexdump@i& (0+255),w,b
 22322   017FA8  51AB               	movf	(util_hexdump@size+1)& (0+255),w,b
 22323   017FAA  59C2               	subwfb	(util_hexdump@i+1)& (0+255),w,b
 22324   017FAC  B0D8               	btfsc	status,0,c
 22325   017FAE  0012               	return	
 22326   017FB0  D78C               	goto	l10157
 22327   017FB2                     __end_of_util_hexdump:
 22328                           	callstack 0
 22329                           
 22330 ;; *************** function _emuz80_57q_sys_init *****************
 22331 ;; Defined at:
 22332 ;;		line 207 in file "src/boards/SBC8080-57Q.c"
 22333 ;; Parameters:    Size  Location     Type
 22334 ;;		None
 22335 ;; Auto vars:     Size  Location     Type
 22336 ;;		None
 22337 ;; Return value:  Size  Location     Type
 22338 ;;                  1    wreg      void 
 22339 ;; Registers used:
 22340 ;;		wreg, status,2
 22341 ;; Tracked objects:
 22342 ;;		On entry : 0/0
 22343 ;;		On exit  : 3F/4
 22344 ;;		Unchanged: 0/0
 22345 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22350 ;;Total ram usage:        0 bytes
 22351 ;; Hardware stack levels used: 1
 22352 ;; This function calls:
 22353 ;;		Nothing
 22354 ;; This function is called by:
 22355 ;;		_main
 22356 ;; This function uses a non-reentrant model
 22357 ;;
 22358                           
 22359                           	psect	text35
 22360   018B1A                     __ptext35:
 22361                           	callstack 0
 22362   018B1A                     _emuz80_57q_sys_init:
 22363                           	callstack 126
 22364                           
 22365                           ;src/boards/SBC8080-57Q.c: 210:  OSCFRQ = 0x08;
 22366                           
 22367                           ; BSR set to: 5
 22368                           ;incstack = 0
 22369   018B1A  0E08               	movlw	8
 22370   018B1C  0100               	movlb	0	; () banked
 22371   018B1E  6FB1               	movwf	177,b	;volatile
 22372                           
 22373                           ;src/boards/SBC8080-57Q.c: 213:  ANSELA = 0x00;
 22374   018B20  0E00               	movlw	0
 22375   018B22  0104               	movlb	4	; () banked
 22376   018B24  6F00               	movwf	0,b	;volatile
 22377                           
 22378                           ;src/boards/SBC8080-57Q.c: 214:  ANSELB = 0x00;
 22379   018B26  0E00               	movlw	0
 22380   018B28  6F08               	movwf	8,b	;volatile
 22381                           
 22382                           ;src/boards/SBC8080-57Q.c: 215:  ANSELC = 0x00;
 22383   018B2A  0E00               	movlw	0
 22384   018B2C  6F10               	movwf	16,b	;volatile
 22385                           
 22386                           ;src/boards/SBC8080-57Q.c: 216:  ANSELD = 0x00;
 22387   018B2E  0E00               	movlw	0
 22388   018B30  6F18               	movwf	24,b	;volatile
 22389                           
 22390                           ; BSR set to: 4
 22391                           ;src/boards/SBC8080-57Q.c: 217:  ANSELE0 = 0;
 22392   018B32  9120               	bcf	32,0,b	;volatile
 22393                           
 22394                           ; BSR set to: 4
 22395                           ;src/boards/SBC8080-57Q.c: 218:  ANSELE1 = 0;
 22396   018B34  9320               	bcf	32,1,b	;volatile
 22397                           
 22398                           ; BSR set to: 4
 22399                           ;src/boards/SBC8080-57Q.c: 219:  ANSELE2 = 0;
 22400   018B36  9520               	bcf	32,2,b	;volatile
 22401                           
 22402                           ;src/boards/SBC8080-57Q.c: 220:  ANSELF = 0x00;
 22403   018B38  0E00               	movlw	0
 22404   018B3A  6F28               	movwf	40,b	;volatile
 22405                           
 22406                           ; BSR set to: 4
 22407                           ;src/boards/SBC8080-57Q.c: 223:  LATE1 = 0;
 22408   018B3C  92C2               	bcf	1218,1,c	;volatile
 22409                           
 22410                           ; BSR set to: 4
 22411                           ;src/boards/SBC8080-57Q.c: 224:  ODCE1 = 1;
 22412   018B3E  8322               	bsf	34,1,b	;volatile
 22413                           
 22414                           ; BSR set to: 4
 22415                           ;src/boards/SBC8080-57Q.c: 225:  TRISE1 = 0;
 22416   018B40  92CA               	bcf	1226,1,c	;volatile
 22417                           
 22418                           ; BSR set to: 4
 22419                           ;src/boards/SBC8080-57Q.c: 227:  LATC7 = 0;
 22420   018B42  9EC0               	bcf	1216,7,c	;volatile
 22421                           
 22422                           ; BSR set to: 4
 22423                           ;src/boards/SBC8080-57Q.c: 228:  TRISC7 = 0;
 22424   018B44  9EC8               	bcf	1224,7,c	;volatile
 22425                           
 22426                           ;src/boards/SBC8080-57Q.c: 248:  RA3PPS = 0;
 22427   018B46  0E00               	movlw	0
 22428   018B48  0102               	movlb	2	; () banked
 22429   018B4A  6F04               	movwf	4,b	;volatile
 22430                           
 22431                           ; BSR set to: 2
 22432                           ;src/boards/SBC8080-57Q.c: 249:  TRISA3 = 1;
 22433   018B4C  86C6               	bsf	1222,3,c	;volatile
 22434                           
 22435                           ; BSR set to: 2
 22436                           ;src/boards/SBC8080-57Q.c: 250:  WPUA3 = 1;
 22437   018B4E  0104               	movlb	4	; () banked
 22438   018B50  8701               	bsf	1,3,b	;volatile
 22439                           
 22440                           ; BSR set to: 4
 22441                           ;src/boards/SBC8080-57Q.c: 251:  NCO1OUT = 0;
 22442   018B52  9B46               	bcf	70,5,b	;volatile
 22443                           
 22444                           ; BSR set to: 4
 22445                           ;src/boards/SBC8080-57Q.c: 252:  NCO1EN = 0;
 22446   018B54  9F46               	bcf	70,7,b	;volatile
 22447                           
 22448                           ; BSR set to: 4
 22449                           ;src/boards/SBC8080-57Q.c: 255:  LATE0 = 1;
 22450   018B56  80C2               	bsf	1218,0,c	;volatile
 22451                           
 22452                           ; BSR set to: 4
 22453                           ;src/boards/SBC8080-57Q.c: 256:  TRISE0 = 0;
 22454   018B58  90CA               	bcf	1226,0,c	;volatile
 22455                           
 22456                           ; BSR set to: 4
 22457                           ;src/boards/SBC8080-57Q.c: 259:  LATE2 = 0;
 22458   018B5A  94C2               	bcf	1218,2,c	;volatile
 22459                           
 22460                           ; BSR set to: 4
 22461                           ;src/boards/SBC8080-57Q.c: 260:  TRISE2 = 0;
 22462   018B5C  94CA               	bcf	1226,2,c	;volatile
 22463                           
 22464                           ;src/boards/SBC8080-57Q.c: 263:  RA4PPS = 0;
 22465   018B5E  0E00               	movlw	0
 22466   018B60  0102               	movlb	2	; () banked
 22467   018B62  6F05               	movwf	5,b	;volatile
 22468                           
 22469                           ; BSR set to: 2
 22470                           ;src/boards/SBC8080-57Q.c: 264:  LATA4 = 1;
 22471   018B64  88BE               	bsf	1214,4,c	;volatile
 22472                           
 22473                           ; BSR set to: 2
 22474                           ;src/boards/SBC8080-57Q.c: 265:  TRISA4 = 0;
 22475   018B66  98C6               	bcf	1222,4,c	;volatile
 22476                           
 22477                           ; BSR set to: 2
 22478                           ;src/boards/SBC8080-57Q.c: 268:  WPUC6 = 1;
 22479   018B68  0104               	movlb	4	; () banked
 22480   018B6A  8D11               	bsf	17,6,b	;volatile
 22481                           
 22482                           ; BSR set to: 4
 22483                           ;src/boards/SBC8080-57Q.c: 269:  TRISC6 = 1;
 22484   018B6C  8CC8               	bsf	1224,6,c	;volatile
 22485                           
 22486                           ; BSR set to: 4
 22487                           ;src/boards/SBC8080-57Q.c: 271:  LATE1 = 1;
 22488   018B6E  82C2               	bsf	1218,1,c	;volatile
 22489   018B70                     l1367:
 22490   018B70  ACD0               	btfss	1232,6,c	;volatile
 22491   018B72  D7FE               	goto	l1367
 22492                           
 22493                           ;src/boards/SBC8080-57Q.c: 275:  TRISC3 = 1;
 22494   018B74  86C8               	bsf	1224,3,c	;volatile
 22495                           
 22496                           ;src/boards/SBC8080-57Q.c: 276:  WPUC3 = 1;
 22497   018B76  0104               	movlb	4	; () banked
 22498   018B78  8711               	bsf	17,3,b	;volatile
 22499                           
 22500                           ;src/boards/SBC8080-57Q.c: 277:  TRISA2 = 1;
 22501   018B7A  84C6               	bsf	1222,2,c	;volatile
 22502                           
 22503                           ;src/boards/SBC8080-57Q.c: 278:  WPUA2 = 1;
 22504   018B7C  8501               	bsf	1,2,b	;volatile
 22505                           
 22506                           ; BSR set to: 4
 22507                           ;src/boards/SBC8080-57Q.c: 281:  U3BRG = 416;
 22508   018B7E  0E01               	movlw	1
 22509   018B80  0102               	movlb	2	; () banked
 22510   018B82  6FD5               	movwf	213,b	;volatile
 22511   018B84  0EA0               	movlw	160
 22512   018B86  6FD4               	movwf	212,b	;volatile
 22513                           
 22514                           ; BSR set to: 2
 22515                           ;src/boards/SBC8080-57Q.c: 282:  U3RXEN = 1;
 22516   018B88  89D1               	bsf	209,4,b	;volatile
 22517                           
 22518                           ; BSR set to: 2
 22519                           ;src/boards/SBC8080-57Q.c: 283:  U3TXEN = 1;
 22520   018B8A  8BD1               	bsf	209,5,b	;volatile
 22521                           
 22522                           ; BSR set to: 2
 22523                           ;src/boards/SBC8080-57Q.c: 286:  WPUA7 = 1;
 22524   018B8C  0104               	movlb	4	; () banked
 22525   018B8E  8F01               	bsf	1,7,b	;volatile
 22526                           
 22527                           ; BSR set to: 4
 22528                           ;src/boards/SBC8080-57Q.c: 287:  TRISA7 = 1;
 22529   018B90  8EC6               	bsf	1222,7,c	;volatile
 22530                           
 22531                           ;src/boards/SBC8080-57Q.c: 288:  U3RXPPS = 0x07;
 22532   018B92  0E07               	movlw	7
 22533   018B94  0102               	movlb	2	; () banked
 22534   018B96  6F76               	movwf	118,b	;volatile
 22535                           
 22536                           ; BSR set to: 2
 22537                           ;src/boards/SBC8080-57Q.c: 291:  LATA6 = 1;
 22538   018B98  8CBE               	bsf	1214,6,c	;volatile
 22539                           
 22540                           ; BSR set to: 2
 22541                           ;src/boards/SBC8080-57Q.c: 292:  TRISA6 = 0;
 22542   018B9A  9CC6               	bcf	1222,6,c	;volatile
 22543                           
 22544                           ;src/boards/SBC8080-57Q.c: 293:  RA6PPS = 0x26;
 22545   018B9C  0E26               	movlw	38
 22546   018B9E  6F07               	movwf	7,b	;volatile
 22547                           
 22548                           ; BSR set to: 2
 22549                           ;src/boards/SBC8080-57Q.c: 295:  U3ON = 1;
 22550   018BA0  8FD2               	bsf	210,7,b	;volatile
 22551                           
 22552                           ;src/boards/SBC8080-57Q.c: 298:  LATD = 0x00;
 22553   018BA2  0E00               	movlw	0
 22554   018BA4  6EC1               	movwf	193,c	;volatile
 22555                           
 22556                           ;src/boards/SBC8080-57Q.c: 299:  TRISD = 0x00;
 22557   018BA6  0E00               	movlw	0
 22558   018BA8  6EC9               	movwf	201,c	;volatile
 22559                           
 22560                           ;src/boards/SBC8080-57Q.c: 300:  LATB = 0x00;
 22561   018BAA  0E00               	movlw	0
 22562   018BAC  6EBF               	movwf	191,c	;volatile
 22563                           
 22564                           ;src/boards/SBC8080-57Q.c: 301:  TRISB = 0x00;
 22565   018BAE  0E00               	movlw	0
 22566   018BB0  6EC7               	movwf	199,c	;volatile
 22567                           
 22568                           ;src/boards/SBC8080-57Q.c: 304:  LATF = 0x00;
 22569   018BB2  0E00               	movlw	0
 22570   018BB4  6EC3               	movwf	195,c	;volatile
 22571                           
 22572                           ;src/boards/SBC8080-57Q.c: 305:  TRISF = 0x00;
 22573   018BB6  0E00               	movlw	0
 22574   018BB8  6ECB               	movwf	203,c	;volatile
 22575                           
 22576                           ; BSR set to: 2
 22577                           ;src/boards/SBC8080-57Q.c: 308:  LATC5 = 1;
 22578   018BBA  8AC0               	bsf	1216,5,c	;volatile
 22579                           
 22580                           ; BSR set to: 2
 22581                           ;src/boards/SBC8080-57Q.c: 309:  TRISC5 = 0;
 22582   018BBC  9AC8               	bcf	1224,5,c	;volatile
 22583                           
 22584                           ; BSR set to: 2
 22585                           ;src/boards/SBC8080-57Q.c: 312:  LATA5 = 1;
 22586   018BBE  8ABE               	bsf	1214,5,c	;volatile
 22587                           
 22588                           ; BSR set to: 2
 22589                           ;src/boards/SBC8080-57Q.c: 313:  TRISA5 = 0;
 22590   018BC0  9AC6               	bcf	1222,5,c	;volatile
 22591                           
 22592                           ; BSR set to: 2
 22593                           ;src/boards/SBC8080-57Q.c: 315:  LATC7 = 1;
 22594   018BC2  8EC0               	bsf	1216,7,c	;volatile
 22595                           
 22596                           ; BSR set to: 2
 22597                           ;src/boards/SBC8080-57Q.c: 318:  SLRCONCbits.SLRC1 = 0;
 22598   018BC4  0104               	movlb	4	; () banked
 22599   018BC6  9313               	bcf	19,1,b	;volatile
 22600                           
 22601                           ; BSR set to: 4
 22602                           ;src/boards/SBC8080-57Q.c: 319:  SLRCONCbits.SLRC0 = 0;
 22603   018BC8  9113               	bcf	19,0,b	;volatile
 22604                           
 22605                           ; BSR set to: 4
 22606                           ;src/boards/SBC8080-57Q.c: 320:  SLRCONCbits.SLRC2 = 0;
 22607   018BCA  9513               	bcf	19,2,b	;volatile
 22608                           
 22609                           ; BSR set to: 4
 22610   018BCC  0012               	return		;funcret
 22611   018BCE                     __end_of_emuz80_57q_sys_init:
 22612                           	callstack 0
 22613                           
 22614 ;; *************** function _emuz80_57q_start_cpu *****************
 22615 ;; Defined at:
 22616 ;;		line 323 in file "src/boards/SBC8080-57Q.c"
 22617 ;; Parameters:    Size  Location     Type
 22618 ;;		None
 22619 ;; Auto vars:     Size  Location     Type
 22620 ;;		None
 22621 ;; Return value:  Size  Location     Type
 22622 ;;                  1    wreg      void 
 22623 ;; Registers used:
 22624 ;;		wreg, status,2
 22625 ;; Tracked objects:
 22626 ;;		On entry : 0/7
 22627 ;;		On exit  : 0/0
 22628 ;;		Unchanged: 0/0
 22629 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22634 ;;Total ram usage:        1 bytes
 22635 ;; Hardware stack levels used: 1
 22636 ;; This function calls:
 22637 ;;		Nothing
 22638 ;; This function is called by:
 22639 ;;		_main
 22640 ;; This function uses a non-reentrant model
 22641 ;;
 22642                           
 22643                           	psect	text36
 22644   017FB2                     __ptext36:
 22645                           	callstack 0
 22646   017FB2                     _emuz80_57q_start_cpu:
 22647                           	callstack 126
 22648                           
 22649                           ;src/boards/SBC8080-57Q.c: 326:  WPUD = 0xff;
 22650                           
 22651                           ; BSR set to: 4
 22652                           ;incstack = 0
 22653   017FB2  0104               	movlb	4	; () banked
 22654   017FB4  6919               	setf	25,b	;volatile
 22655                           
 22656                           ;src/boards/SBC8080-57Q.c: 327:  TRISD = 0xff;
 22657   017FB6  68C9               	setf	201,c	;volatile
 22658                           
 22659                           ;src/boards/SBC8080-57Q.c: 330:  WPUB = 0xff;
 22660   017FB8  6909               	setf	9,b	;volatile
 22661                           
 22662                           ;src/boards/SBC8080-57Q.c: 331:  TRISB = 0xff;
 22663   017FBA  68C7               	setf	199,c	;volatile
 22664                           
 22665                           ;src/boards/SBC8080-57Q.c: 334:  WPUF = 0xff;
 22666   017FBC  6929               	setf	41,b	;volatile
 22667                           
 22668                           ;src/boards/SBC8080-57Q.c: 335:  TRISF = 0xff;
 22669   017FBE  68CB               	setf	203,c	;volatile
 22670                           
 22671                           ;src/boards/SBC8080-57Q.c: 338:  WPUA0 = 1;
 22672   017FC0  8101               	bsf	1,0,b	;volatile
 22673                           
 22674                           ;src/boards/SBC8080-57Q.c: 339:  TRISA0 = 1;
 22675   017FC2  80C6               	bsf	1222,0,c	;volatile
 22676                           
 22677                           ;src/boards/SBC8080-57Q.c: 342:  WPUA1 = 1;
 22678   017FC4  8301               	bsf	1,1,b	;volatile
 22679                           
 22680                           ;src/boards/SBC8080-57Q.c: 343:  TRISA1 = 1;
 22681   017FC6  82C6               	bsf	1222,1,c	;volatile
 22682                           
 22683                           ;src/boards/SBC8080-57Q.c: 346:  WPUA5 = 1;
 22684   017FC8  8B01               	bsf	1,5,b	;volatile
 22685                           
 22686                           ;src/boards/SBC8080-57Q.c: 347:  TRISA5 = 1;
 22687   017FCA  8AC6               	bsf	1222,5,c	;volatile
 22688                           
 22689                           ;src/boards/SBC8080-57Q.c: 350:  WPUC5 = 1;
 22690   017FCC  8B11               	bsf	17,5,b	;volatile
 22691                           
 22692                           ;src/boards/SBC8080-57Q.c: 351:  TRISC5 = 1;
 22693   017FCE  8AC8               	bsf	1224,5,c	;volatile
 22694                           
 22695                           ; BSR set to: 4
 22696                           ;src/boards/SBC8080-57Q.c: 354:  IVTLOCK = 0x55;
 22697   017FD0  0E55               	movlw	85
 22698   017FD2  6F59               	movwf	89,b	;volatile
 22699                           
 22700                           ;src/boards/SBC8080-57Q.c: 355:  IVTLOCK = 0xAA;
 22701   017FD4  0EAA               	movlw	170
 22702   017FD6  6F59               	movwf	89,b	;volatile
 22703                           
 22704                           ; BSR set to: 4
 22705                           ;src/boards/SBC8080-57Q.c: 356:  IVTLOCKbits.IVTLOCKED = 0x00;
 22706   017FD8  9159               	bcf	89,0,b	;volatile
 22707                           
 22708                           ;src/boards/SBC8080-57Q.c: 359:  IVTBASE = 0x000008;
 22709   017FDA  0E08               	movlw	8
 22710   017FDC  6F5D               	movwf	93,b	;volatile
 22711   017FDE  0E00               	movlw	0
 22712   017FE0  6F5E               	movwf	94,b	;volatile
 22713   017FE2  0E00               	movlw	0
 22714   017FE4  6F5F               	movwf	95,b	;volatile
 22715                           
 22716                           ;src/boards/SBC8080-57Q.c: 362:  IVTLOCK = 0x55;
 22717   017FE6  0E55               	movlw	85
 22718   017FE8  6F59               	movwf	89,b	;volatile
 22719                           
 22720                           ;src/boards/SBC8080-57Q.c: 363:  IVTLOCK = 0xAA;
 22721   017FEA  0EAA               	movlw	170
 22722   017FEC  6F59               	movwf	89,b	;volatile
 22723                           
 22724                           ; BSR set to: 4
 22725                           ;src/boards/SBC8080-57Q.c: 364:  IVTLOCKbits.IVTLOCKED = 0x01;
 22726   017FEE  8159               	bsf	89,0,b	;volatile
 22727                           
 22728                           ;src/boards/SBC8080-57Q.c: 367:  CLCIN0PPS = 0x00;
 22729   017FF0  0E00               	movlw	0
 22730   017FF2  0102               	movlb	2	; () banked
 22731   017FF4  6F61               	movwf	97,b	;volatile
 22732                           
 22733                           ;src/boards/SBC8080-57Q.c: 368:  CLCIN1PPS = 0x01;
 22734   017FF6  0E01               	movlw	1
 22735   017FF8  6F62               	movwf	98,b	;volatile
 22736                           
 22737                           ;src/boards/SBC8080-57Q.c: 369:  CLCIN2PPS = 0x0f;
 22738   017FFA  0E0F               	movlw	15
 22739   017FFC  6F63               	movwf	99,b	;volatile
 22740                           
 22741                           ;src/boards/SBC8080-57Q.c: 370:  CLCIN3PPS = 0x0e;
 22742   017FFE  0E0E               	movlw	14
 22743   018000  6F64               	movwf	100,b	;volatile
 22744                           
 22745                           ;src/boards/SBC8080-57Q.c: 371:  CLCIN4PPS = 0x15;
 22746   018002  0E15               	movlw	21
 22747   018004  6F65               	movwf	101,b	;volatile
 22748                           
 22749                           ;src/boards/SBC8080-57Q.c: 372:  CLCIN5PPS = 0x16;
 22750   018006  0E16               	movlw	22
 22751   018008  6F66               	movwf	102,b	;volatile
 22752                           
 22753                           ;src/boards/SBC8080-57Q.c: 373:  CLCIN6PPS = 0x0d;
 22754   01800A  0E0D               	movlw	13
 22755   01800C  6F67               	movwf	103,b	;volatile
 22756                           
 22757                           ;src/boards/SBC8080-57Q.c: 374:  CLCIN7PPS = 0x08;
 22758   01800E  0E08               	movlw	8
 22759   018010  6F68               	movwf	104,b	;volatile
 22760                           
 22761                           ;src/boards/SBC8080-57Q.c: 377:  CLCnSEL0 = 0;
 22762   018012  0E00               	movlw	0
 22763   018014  0100               	movlb	0	; () banked
 22764   018016  6FD8               	movwf	216,b	;volatile
 22765                           
 22766                           ;src/boards/SBC8080-57Q.c: 378:  CLCnSEL1 = 1;
 22767   018018  0E01               	movlw	1
 22768   01801A  6FD9               	movwf	217,b	;volatile
 22769                           
 22770                           ;src/boards/SBC8080-57Q.c: 379:  CLCnSEL2 = 127;
 22771   01801C  0E7F               	movlw	127
 22772   01801E  6FDA               	movwf	218,b	;volatile
 22773                           
 22774                           ;src/boards/SBC8080-57Q.c: 380:  CLCnSEL3 = 127;
 22775   018020  0E7F               	movlw	127
 22776   018022  6FDB               	movwf	219,b	;volatile
 22777                           
 22778                           ;src/boards/SBC8080-57Q.c: 382:  CLCnGLS0 = 1;
 22779   018024  0E01               	movlw	1
 22780   018026  6FDC               	movwf	220,b	;volatile
 22781                           
 22782                           ;src/boards/SBC8080-57Q.c: 383:  CLCnGLS1 = 0x10;
 22783   018028  0E10               	movlw	16
 22784   01802A  6FDD               	movwf	221,b	;volatile
 22785                           
 22786                           ;src/boards/SBC8080-57Q.c: 384:  CLCnGLS2 = 0;
 22787   01802C  0E00               	movlw	0
 22788   01802E  6FDE               	movwf	222,b	;volatile
 22789                           
 22790                           ;src/boards/SBC8080-57Q.c: 385:  CLCnGLS3 = 0;
 22791   018030  0E00               	movlw	0
 22792   018032  6FDF               	movwf	223,b	;volatile
 22793                           
 22794                           ;src/boards/SBC8080-57Q.c: 387:  CLCnPOL = 0x80;
 22795   018034  0E80               	movlw	128
 22796   018036  6FD7               	movwf	215,b	;volatile
 22797                           
 22798                           ;src/boards/SBC8080-57Q.c: 388:  CLCnCON = 0x84;
 22799   018038  0E84               	movlw	132
 22800   01803A  6FD6               	movwf	214,b	;volatile
 22801                           
 22802                           ;src/boards/SBC8080-57Q.c: 389:  CLCDATA = 0x0;
 22803   01803C  0E00               	movlw	0
 22804   01803E  6FD4               	movwf	212,b	;volatile
 22805                           
 22806                           ; BSR set to: 0
 22807                           ;src/boards/SBC8080-57Q.c: 391:  CLC1IF = 0;
 22808   018040  9AAE               	bcf	1198,5,c	;volatile
 22809                           
 22810                           ; BSR set to: 0
 22811                           ;src/boards/SBC8080-57Q.c: 392:  CLC1IE = 0;
 22812   018042  9A9E               	bcf	1182,5,c	;volatile
 22813                           
 22814                           ; BSR set to: 0
 22815                           ;src/boards/SBC8080-57Q.c: 393:  TRISA4 = 0;
 22816   018044  98C6               	bcf	1222,4,c	;volatile
 22817                           
 22818                           ;src/boards/SBC8080-57Q.c: 394:  RA4PPS = 1;
 22819   018046  0E01               	movlw	1
 22820   018048  0102               	movlb	2	; () banked
 22821   01804A  6F05               	movwf	5,b	;volatile
 22822                           
 22823                           ;src/boards/SBC8080-57Q.c: 396:  CLCSELECT = 1;
 22824   01804C  0E01               	movlw	1
 22825   01804E  0100               	movlb	0	; () banked
 22826   018050  6FD5               	movwf	213,b	;volatile
 22827                           
 22828                           ;src/boards/SBC8080-57Q.c: 398:  CLCnSEL0 = 1;
 22829   018052  0E01               	movlw	1
 22830   018054  6FD8               	movwf	216,b	;volatile
 22831                           
 22832                           ;src/boards/SBC8080-57Q.c: 399:  CLCnSEL1 = 2;
 22833   018056  0E02               	movlw	2
 22834   018058  6FD9               	movwf	217,b	;volatile
 22835                           
 22836                           ;src/boards/SBC8080-57Q.c: 400:  CLCnSEL2 = 3;
 22837   01805A  0E03               	movlw	3
 22838   01805C  6FDA               	movwf	218,b	;volatile
 22839                           
 22840                           ;src/boards/SBC8080-57Q.c: 401:  CLCnSEL3 = 7;
 22841   01805E  0E07               	movlw	7
 22842   018060  6FDB               	movwf	219,b	;volatile
 22843                           
 22844                           ;src/boards/SBC8080-57Q.c: 403:  CLCnGLS0 = 0x01;
 22845   018062  0E01               	movlw	1
 22846   018064  6FDC               	movwf	220,b	;volatile
 22847                           
 22848                           ;src/boards/SBC8080-57Q.c: 404:  CLCnGLS1 = 0x04;
 22849   018066  0E04               	movlw	4
 22850   018068  6FDD               	movwf	221,b	;volatile
 22851                           
 22852                           ;src/boards/SBC8080-57Q.c: 405:  CLCnGLS2 = 0x10;
 22853   01806A  0E10               	movlw	16
 22854   01806C  6FDE               	movwf	222,b	;volatile
 22855                           
 22856                           ;src/boards/SBC8080-57Q.c: 406:  CLCnGLS3 = 0x40;
 22857   01806E  0E40               	movlw	64
 22858   018070  6FDF               	movwf	223,b	;volatile
 22859                           
 22860                           ;src/boards/SBC8080-57Q.c: 408:  CLCnPOL = 0x80;
 22861   018072  0E80               	movlw	128
 22862   018074  6FD7               	movwf	215,b	;volatile
 22863                           
 22864                           ;src/boards/SBC8080-57Q.c: 409:  CLCnCON = 0x82;
 22865   018076  0E82               	movlw	130
 22866   018078  6FD6               	movwf	214,b	;volatile
 22867                           
 22868                           ;src/boards/SBC8080-57Q.c: 411:  CLCSELECT = 2;
 22869   01807A  0E02               	movlw	2
 22870   01807C  6FD5               	movwf	213,b	;volatile
 22871                           
 22872                           ;src/boards/SBC8080-57Q.c: 413:  CLCnSEL0 = 51;
 22873   01807E  0E33               	movlw	51
 22874   018080  6FD8               	movwf	216,b	;volatile
 22875                           
 22876                           ;src/boards/SBC8080-57Q.c: 414:  CLCnSEL1 = 52;
 22877   018082  0E34               	movlw	52
 22878   018084  6FD9               	movwf	217,b	;volatile
 22879                           
 22880                           ;src/boards/SBC8080-57Q.c: 415:  CLCnSEL2 = 127;
 22881   018086  0E7F               	movlw	127
 22882   018088  6FDA               	movwf	218,b	;volatile
 22883                           
 22884                           ;src/boards/SBC8080-57Q.c: 416:  CLCnSEL3 = 127;
 22885   01808A  0E7F               	movlw	127
 22886   01808C  6FDB               	movwf	219,b	;volatile
 22887                           
 22888                           ;src/boards/SBC8080-57Q.c: 418:  CLCnGLS0 = 0x02;
 22889   01808E  0E02               	movlw	2
 22890   018090  6FDC               	movwf	220,b	;volatile
 22891                           
 22892                           ;src/boards/SBC8080-57Q.c: 419:  CLCnGLS1 = 0x08;
 22893   018092  0E08               	movlw	8
 22894   018094  6FDD               	movwf	221,b	;volatile
 22895                           
 22896                           ;src/boards/SBC8080-57Q.c: 420:  CLCnGLS2 = 0x10;
 22897   018096  0E10               	movlw	16
 22898   018098  6FDE               	movwf	222,b	;volatile
 22899                           
 22900                           ;src/boards/SBC8080-57Q.c: 421:  CLCnGLS3 = 0x40;
 22901   01809A  0E40               	movlw	64
 22902   01809C  6FDF               	movwf	223,b	;volatile
 22903                           
 22904                           ;src/boards/SBC8080-57Q.c: 423:  CLCnPOL = 0x00;
 22905   01809E  0E00               	movlw	0
 22906   0180A0  6FD7               	movwf	215,b	;volatile
 22907                           
 22908                           ;src/boards/SBC8080-57Q.c: 424:  CLCnCON = 0x82;
 22909   0180A2  0E82               	movlw	130
 22910   0180A4  6FD6               	movwf	214,b	;volatile
 22911                           
 22912                           ;src/boards/SBC8080-57Q.c: 426:     CLCSELECT = 0;
 22913   0180A6  0E00               	movlw	0
 22914   0180A8  6FD5               	movwf	213,b	;volatile
 22915                           
 22916                           ; BSR set to: 0
 22917                           ;src/boards/SBC8080-57Q.c: 429:  LATE1 = 0;
 22918   0180AA  92C2               	bcf	1218,1,c	;volatile
 22919                           
 22920                           ; BSR set to: 0
 22921                           ;src/boards/SBC8080-57Q.c: 430:  _delay((unsigned long)((1)*(64000000UL/4000.0)));
 22922   0180AC  0E15               	movlw	21
 22923   0180AE  6E01               	movwf	??_emuz80_57q_start_cpu^(0+1280),c
 22924   0180B0  0EC6               	movlw	198
 22925   0180B2                     u16547:
 22926   0180B2  2EE8               	decfsz	wreg,f,c
 22927   0180B4  D7FE               	bra	u16547
 22928   0180B6  2E01               	decfsz	??_emuz80_57q_start_cpu^(0+1280),f,c
 22929   0180B8  D7FC               	bra	u16547
 22930   0180BA  D000               	nop2	
 22931                           
 22932                           ;src/boards/SBC8080-57Q.c: 431:  LATE0 = 0;
 22933   0180BC  90C2               	bcf	1218,0,c	;volatile
 22934                           
 22935                           ;src/boards/SBC8080-57Q.c: 432:  LATE1 = 1;
 22936   0180BE  82C2               	bsf	1218,1,c	;volatile
 22937   0180C0  0012               	return		;funcret
 22938   0180C2                     __end_of_emuz80_57q_start_cpu:
 22939                           	callstack 0
 22940                           
 22941 ;; *************** function _emuz80_57q_exit_bus_master *****************
 22942 ;; Defined at:
 22943 ;;		line 137 in file "src/boards/SBC8080-57Q.c"
 22944 ;; Parameters:    Size  Location     Type
 22945 ;;		None
 22946 ;; Auto vars:     Size  Location     Type
 22947 ;;		None
 22948 ;; Return value:  Size  Location     Type
 22949 ;;                  1    wreg      void 
 22950 ;; Registers used:
 22951 ;;		None
 22952 ;; Tracked objects:
 22953 ;;		On entry : 0/7
 22954 ;;		On exit  : 0/0
 22955 ;;		Unchanged: 0/0
 22956 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22961 ;;Total ram usage:        0 bytes
 22962 ;; Hardware stack levels used: 1
 22963 ;; This function calls:
 22964 ;;		Nothing
 22965 ;; This function is called by:
 22966 ;;		_main
 22967 ;; This function uses a non-reentrant model
 22968 ;;
 22969                           
 22970                           	psect	text37
 22971   019FD8                     __ptext37:
 22972                           	callstack 0
 22973   019FD8                     _emuz80_57q_exit_bus_master:
 22974                           	callstack 126
 22975                           
 22976                           ;src/boards/SBC8080-57Q.c: 140:  TRISB = 0xff;
 22977                           
 22978                           ;incstack = 0
 22979   019FD8  68C7               	setf	199,c	;volatile
 22980                           
 22981                           ;src/boards/SBC8080-57Q.c: 141:  TRISD = 0xff;
 22982   019FDA  68C9               	setf	201,c	;volatile
 22983                           
 22984                           ;src/boards/SBC8080-57Q.c: 142:  TRISF = 0xff;
 22985   019FDC  68CB               	setf	203,c	;volatile
 22986                           
 22987                           ;src/boards/SBC8080-57Q.c: 144:  TRISA5 = 1;
 22988   019FDE  8AC6               	bsf	1222,5,c	;volatile
 22989                           
 22990                           ;src/boards/SBC8080-57Q.c: 145:  TRISC5 = 1;
 22991   019FE0  8AC8               	bsf	1224,5,c	;volatile
 22992   019FE2  0012               	return		;funcret
 22993   019FE4                     __end_of_emuz80_57q_exit_bus_master:
 22994                           	callstack 0
 22995                           
 22996 ;; *************** function _emuz80_57q_enter_bus_master *****************
 22997 ;; Defined at:
 22998 ;;		line 124 in file "src/boards/SBC8080-57Q.c"
 22999 ;; Parameters:    Size  Location     Type
 23000 ;;		None
 23001 ;; Auto vars:     Size  Location     Type
 23002 ;;		None
 23003 ;; Return value:  Size  Location     Type
 23004 ;;                  1    wreg      void 
 23005 ;; Registers used:
 23006 ;;		wreg, status,2
 23007 ;; Tracked objects:
 23008 ;;		On entry : 3F/0
 23009 ;;		On exit  : 3F/0
 23010 ;;		Unchanged: 3F/0
 23011 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23016 ;;Total ram usage:        0 bytes
 23017 ;; Hardware stack levels used: 1
 23018 ;; This function calls:
 23019 ;;		Nothing
 23020 ;; This function is called by:
 23021 ;;		_main
 23022 ;; This function uses a non-reentrant model
 23023 ;;
 23024                           
 23025                           	psect	text38
 23026   019F94                     __ptext38:
 23027                           	callstack 0
 23028   019F94                     _emuz80_57q_enter_bus_master:
 23029                           	callstack 126
 23030                           
 23031                           ; BSR set to: 0
 23032                           
 23033                           ; BSR set to: 0
 23034                           ;src/boards/SBC8080-57Q.c: 126:  while(!RC6) ;
 23035                           
 23036                           ;incstack = 0
 23037   019F94  ACD0               	btfss	1232,6,c	;volatile
 23038   019F96  D7FE               	goto	__ptext38
 23039                           
 23040                           ; BSR set to: 0
 23041                           ;src/boards/SBC8080-57Q.c: 128:  TRISB = 0x00;
 23042   019F98  0E00               	movlw	0
 23043   019F9A  6EC7               	movwf	199,c	;volatile
 23044                           
 23045                           ;src/boards/SBC8080-57Q.c: 129:  TRISD = 0x00;
 23046   019F9C  0E00               	movlw	0
 23047   019F9E  6EC9               	movwf	201,c	;volatile
 23048                           
 23049                           ; BSR set to: 0
 23050                           ;src/boards/SBC8080-57Q.c: 131:  LATA5 = 1;
 23051   019FA0  8ABE               	bsf	1214,5,c	;volatile
 23052                           
 23053                           ; BSR set to: 0
 23054                           ;src/boards/SBC8080-57Q.c: 132:  LATC5 = 1;
 23055   019FA2  8AC0               	bsf	1216,5,c	;volatile
 23056                           
 23057                           ; BSR set to: 0
 23058                           ;src/boards/SBC8080-57Q.c: 133:  TRISA5 = 0;
 23059   019FA4  9AC6               	bcf	1222,5,c	;volatile
 23060                           
 23061                           ; BSR set to: 0
 23062                           ;src/boards/SBC8080-57Q.c: 134:  TRISC5 = 0;
 23063   019FA6  9AC8               	bcf	1224,5,c	;volatile
 23064                           
 23065                           ; BSR set to: 0
 23066   019FA8  0012               	return		;funcret
 23067   019FAA                     __end_of_emuz80_57q_enter_bus_master:
 23068                           	callstack 0
 23069                           
 23070 ;; *************** function _disk_io_handle *****************
 23071 ;; Defined at:
 23072 ;;		line 266 in file "src/io.c"
 23073 ;; Parameters:    Size  Location     Type
 23074 ;;		None
 23075 ;; Auto vars:     Size  Location     Type
 23076 ;;  addr            2  121[BANK6 ] unsigned short 
 23077 ;;  addr            2  119[BANK6 ] unsigned short 
 23078 ;;  sector          4  123[BANK6 ] unsigned long 
 23079 ;;  n               2  130[BANK6 ] unsigned int 
 23080 ;;  filep           2  127[BANK6 ] PTR struct .
 23081 ;;		 -> files(3276), 
 23082 ;;  fres            1  129[BANK6 ] enum E17186
 23083 ;; Return value:  Size  Location     Type
 23084 ;;                  1    wreg      void 
 23085 ;; Registers used:
 23086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23087 ;; Tracked objects:
 23088 ;;		On entry : 3F/0
 23089 ;;		On exit  : 3F/7
 23090 ;;		Unchanged: 0/0
 23091 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23093 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23094 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23095 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23096 ;;Total ram usage:       17 bytes
 23097 ;; Hardware stack levels used: 1
 23098 ;; Hardware stack levels required when called: 16
 23099 ;; This function calls:
 23100 ;;		___wmul
 23101 ;;		_emuz80_57q_get_from_sram
 23102 ;;		_emuz80_57q_read_from_sram
 23103 ;;		_emuz80_57q_write_to_sram
 23104 ;;		_f_lseek
 23105 ;;		_f_read
 23106 ;;		_f_sync
 23107 ;;		_f_write
 23108 ;;		_printf
 23109 ;; This function is called by:
 23110 ;;		_main
 23111 ;; This function uses a non-reentrant model
 23112 ;;
 23113                           
 23114                           	psect	text39
 23115   014D46                     __ptext39:
 23116                           	callstack 0
 23117   014D46                     _disk_io_handle:
 23118                           	callstack 110
 23119                           
 23120                           ; BSR set to: 0
 23121                           ;src/io.c: 276:  disk_drive = emuz80_57q_get_from_sram(0xfb20);
 23122                           
 23123                           ; BSR set to: 0
 23124                           
 23125                           ; BSR set to: 0
 23126                           ;incstack = 0
 23127   014D46  0EFB               	movlw	251
 23128   014D48  6E02               	movwf	(emuz80_57q_get_from_sram@addr+1)^(0+1280),c
 23129   014D4A  0E20               	movlw	32
 23130   014D4C  6E01               	movwf	emuz80_57q_get_from_sram@addr^(0+1280),c
 23131   014D4E  ECBA  F0CF         	call	_emuz80_57q_get_from_sram	;wreg free
 23132   014D52  0107               	movlb	7	; () banked
 23133   014D54  6F2B               	movwf	disk_io_handle@disk_drive& (0+255),b
 23134                           
 23135                           ; BSR set to: 7
 23136                           ;src/io.c: 277:     disk_track = emuz80_57q_get_from_sram(0xfb21);
 23137   014D56  0EFB               	movlw	251
 23138   014D58  6E02               	movwf	(emuz80_57q_get_from_sram@addr+1)^(0+1280),c
 23139   014D5A  0E21               	movlw	33
 23140   014D5C  6E01               	movwf	emuz80_57q_get_from_sram@addr^(0+1280),c
 23141   014D5E  ECBA  F0CF         	call	_emuz80_57q_get_from_sram	;wreg free
 23142   014D62  0107               	movlb	7	; () banked
 23143   014D64  6F2A               	movwf	disk_io_handle@disk_track& (0+255),b
 23144                           
 23145                           ; BSR set to: 7
 23146                           ;src/io.c: 278:  disk_sector = (disk_sector & 0xff00) | emuz80_57q_get_from_sram(0xfb22)
      +                          ;
 23147   014D66  0E00               	movlw	0
 23148   014D68  151B               	andwf	disk_io_handle@disk_sector& (0+255),w,b
 23149   014D6A  0106               	movlb	6	; () banked
 23150   014D6C  6F73               	movwf	??_disk_io_handle& (0+255),b
 23151   014D6E  0EFF               	movlw	255
 23152   014D70  0107               	movlb	7	; () banked
 23153   014D72  151C               	andwf	(disk_io_handle@disk_sector+1)& (0+255),w,b
 23154   014D74  0106               	movlb	6	; () banked
 23155   014D76  6F74               	movwf	(??_disk_io_handle+1)& (0+255),b
 23156   014D78  0EFB               	movlw	251
 23157   014D7A  6E02               	movwf	(emuz80_57q_get_from_sram@addr+1)^(0+1280),c
 23158   014D7C  0E22               	movlw	34
 23159   014D7E  6E01               	movwf	emuz80_57q_get_from_sram@addr^(0+1280),c
 23160   014D80  ECBA  F0CF         	call	_emuz80_57q_get_from_sram	;wreg free
 23161   014D84  0106               	movlb	6	; () banked
 23162   014D86  6F75               	movwf	(??_disk_io_handle+2)& (0+255),b
 23163   014D88  5175               	movf	(??_disk_io_handle+2)& (0+255),w,b
 23164   014D8A  1173               	iorwf	??_disk_io_handle& (0+255),w,b
 23165   014D8C  0107               	movlb	7	; () banked
 23166   014D8E  6F1B               	movwf	disk_io_handle@disk_sector& (0+255),b
 23167   014D90  0106               	movlb	6	; () banked
 23168   014D92  5174               	movf	(??_disk_io_handle+1)& (0+255),w,b
 23169   014D94  0107               	movlb	7	; () banked
 23170   014D96  6F1C               	movwf	(disk_io_handle@disk_sector+1)& (0+255),b
 23171                           
 23172                           ; BSR set to: 7
 23173                           ;src/io.c: 279:  disk_dmal = emuz80_57q_get_from_sram(0xfb23);
 23174   014D98  0EFB               	movlw	251
 23175   014D9A  6E02               	movwf	(emuz80_57q_get_from_sram@addr+1)^(0+1280),c
 23176   014D9C  0E23               	movlw	35
 23177   014D9E  6E01               	movwf	emuz80_57q_get_from_sram@addr^(0+1280),c
 23178   014DA0  ECBA  F0CF         	call	_emuz80_57q_get_from_sram	;wreg free
 23179   014DA4  0107               	movlb	7	; () banked
 23180   014DA6  6F29               	movwf	disk_io_handle@disk_dmal& (0+255),b
 23181                           
 23182                           ; BSR set to: 7
 23183                           ;src/io.c: 280:  disk_dmah = emuz80_57q_get_from_sram(0xfb24);
 23184   014DA8  0EFB               	movlw	251
 23185   014DAA  6E02               	movwf	(emuz80_57q_get_from_sram@addr+1)^(0+1280),c
 23186   014DAC  0E24               	movlw	36
 23187   014DAE  6E01               	movwf	emuz80_57q_get_from_sram@addr^(0+1280),c
 23188   014DB0  ECBA  F0CF         	call	_emuz80_57q_get_from_sram	;wreg free
 23189   014DB4  0107               	movlb	7	; () banked
 23190   014DB6  6F28               	movwf	disk_io_handle@disk_dmah& (0+255),b
 23191                           
 23192                           ; BSR set to: 7
 23193                           ;src/io.c: 282:  if (num_drives <= disk_drive || drives[disk_drive].filep == ((void*)0))
      +                           {
 23194   014DB8  0E10               	movlw	16
 23195   014DBA  612B               	cpfslt	disk_io_handle@disk_drive& (0+255),b
 23196   014DBC  D00C               	goto	u16230
 23197                           
 23198                           ; BSR set to: 7
 23199   014DBE  512B               	movf	disk_io_handle@disk_drive& (0+255),w,b
 23200   014DC0  0D04               	mullw	4
 23201   014DC2  0E82               	movlw	low (_drives+2)
 23202   014DC4  24F3               	addwf	243,w,c
 23203   014DC6  6ED9               	movwf	fsr2l,c
 23204   014DC8  0E08               	movlw	high (_drives+2)
 23205   014DCA  20F4               	addwfc	prodh,w,c
 23206   014DCC  6EDA               	movwf	fsr2h,c
 23207   014DCE  50DE               	movf	postinc2,w,c
 23208   014DD0  10DE               	iorwf	postinc2,w,c
 23209   014DD2  A4D8               	btfss	status,2,c
 23210   014DD4  D00E               	goto	l12621
 23211   014DD6                     u16230:
 23212                           
 23213                           ; BSR set to: 7
 23214                           ;src/io.c: 283:   printf("select ERROR %d\n\r", disk_drive);
 23215   014DD6  0E2B               	movlw	low STR_52
 23216   014DD8  0105               	movlb	5	; () banked
 23217   014DDA  6F9A               	movwf	printf@fmt& (0+255),b
 23218   014DDC  0EFF               	movlw	high STR_52
 23219   014DDE  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 23220   014DE0  C72B  F59C         	movff	disk_io_handle@disk_drive,?_printf+2
 23221   014DE4  6B9D               	clrf	(?_printf+3)& (0+255),b
 23222   014DE6  EC4F  F0CF         	call	_printf	;wreg free
 23223   014DEA                     l12619:
 23224                           
 23225                           ; BSR set to: 5
 23226                           ;src/io.c: 284:   disk_stat = 0x01;
 23227   014DEA  0E01               	movlw	1
 23228   014DEC  0107               	movlb	7	; () banked
 23229   014DEE  6FDB               	movwf	_disk_stat& (0+255),b
 23230                           
 23231                           ;src/io.c: 285:   goto disk_io_done;
 23232   014DF0  0012               	return	
 23233   014DF2                     l12621:
 23234                           
 23235                           ; BSR set to: 7
 23236                           ;src/io.c: 288:  sector = disk_track * drives[disk_drive].sectors + disk_sector - 1;
 23237   014DF2  C72A  F501         	movff	disk_io_handle@disk_track,___wmul@multiplier
 23238   014DF6  6A02               	clrf	(___wmul@multiplier+1)^(0+1280),c
 23239   014DF8  512B               	movf	disk_io_handle@disk_drive& (0+255),w,b
 23240   014DFA  0D04               	mullw	4
 23241   014DFC  0E80               	movlw	low _drives
 23242   014DFE  24F3               	addwf	243,w,c
 23243   014E00  6ED9               	movwf	fsr2l,c
 23244   014E02  0E08               	movlw	high _drives
 23245   014E04  20F4               	addwfc	prodh,w,c
 23246   014E06  6EDA               	movwf	fsr2h,c
 23247   014E08  C4DE F503          	movff	postinc2,___wmul@multiplicand
 23248   014E0C  C4DD F504          	movff	postdec2,___wmul@multiplicand+1
 23249   014E10  EC62  F0CF         	call	___wmul	;wreg free
 23250   014E14  0107               	movlb	7	; () banked
 23251   014E16  511B               	movf	disk_io_handle@disk_sector& (0+255),w,b
 23252   014E18  2601               	addwf	?___wmul^(0+1280),f,c
 23253   014E1A  511C               	movf	(disk_io_handle@disk_sector+1)& (0+255),w,b
 23254   014E1C  2202               	addwfc	(?___wmul+1)^(0+1280),f,c
 23255   014E1E  0EFF               	movlw	255
 23256   014E20  2401               	addwf	?___wmul^(0+1280),w,c
 23257   014E22  0106               	movlb	6	; () banked
 23258   014E24  6F73               	movwf	??_disk_io_handle& (0+255),b
 23259   014E26  0EFF               	movlw	255
 23260   014E28  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
 23261   014E2A  6F74               	movwf	(??_disk_io_handle+1)& (0+255),b
 23262   014E2C  C673  F67B         	movff	??_disk_io_handle,disk_io_handle@sector
 23263   014E30  C674  F67C         	movff	??_disk_io_handle+1,disk_io_handle@sector+1
 23264   014E34  6B7D               	clrf	(disk_io_handle@sector+2)& (0+255),b
 23265   014E36  6B7E               	clrf	(disk_io_handle@sector+3)& (0+255),b
 23266                           
 23267                           ; BSR set to: 6
 23268                           ;src/io.c: 289:  FIL *filep = drives[disk_drive].filep;
 23269   014E38  0107               	movlb	7	; () banked
 23270   014E3A  512B               	movf	disk_io_handle@disk_drive& (0+255),w,b
 23271   014E3C  0D04               	mullw	4
 23272   014E3E  0E82               	movlw	low (_drives+2)
 23273   014E40  24F3               	addwf	243,w,c
 23274   014E42  6ED9               	movwf	fsr2l,c
 23275   014E44  0E08               	movlw	high (_drives+2)
 23276   014E46  20F4               	addwfc	prodh,w,c
 23277   014E48  6EDA               	movwf	fsr2h,c
 23278   014E4A  C4DE F67F          	movff	postinc2,disk_io_handle@filep
 23279   014E4E  C4DD F680          	movff	postdec2,disk_io_handle@filep+1
 23280                           
 23281                           ; BSR set to: 7
 23282                           ;src/io.c: 290:  unsigned int n;;src/io.c: 291:  FRESULT fres;;src/io.c: 292:  if ((fres
      +                           = f_lseek(filep, sector * 128)) != FR_OK) {
 23283   014E52  C67F  F648         	movff	disk_io_handle@filep,f_lseek@fp
 23284   014E56  C680  F649         	movff	disk_io_handle@filep+1,f_lseek@fp+1
 23285   014E5A  C67B  F673         	movff	disk_io_handle@sector,??_disk_io_handle
 23286   014E5E  C67C  F674         	movff	disk_io_handle@sector+1,??_disk_io_handle+1
 23287   014E62  C67D  F675         	movff	disk_io_handle@sector+2,??_disk_io_handle+2
 23288   014E66  C67E  F676         	movff	disk_io_handle@sector+3,??_disk_io_handle+3
 23289   014E6A  0E07               	movlw	7
 23290   014E6C                     u16245:
 23291   014E6C  90D8               	bcf	status,0,c
 23292   014E6E  0106               	movlb	6	; () banked
 23293   014E70  3773               	rlcf	??_disk_io_handle& (0+255),f,b
 23294   014E72  3774               	rlcf	(??_disk_io_handle+1)& (0+255),f,b
 23295   014E74  3775               	rlcf	(??_disk_io_handle+2)& (0+255),f,b
 23296   014E76  3776               	rlcf	(??_disk_io_handle+3)& (0+255),f,b
 23297   014E78  2EE8               	decfsz	wreg,f,c
 23298   014E7A  D7F8               	goto	u16245
 23299   014E7C  C673  F64A         	movff	??_disk_io_handle,f_lseek@ofs
 23300   014E80  C674  F64B         	movff	??_disk_io_handle+1,f_lseek@ofs+1
 23301   014E84  C675  F64C         	movff	??_disk_io_handle+2,f_lseek@ofs+2
 23302   014E88  C676  F64D         	movff	??_disk_io_handle+3,f_lseek@ofs+3
 23303   014E8C  EC57  F08C         	call	_f_lseek	;wreg free
 23304   014E90  6F81               	movwf	disk_io_handle@fres& (0+255),b
 23305   014E92  5181               	movf	disk_io_handle@fres& (0+255),w,b
 23306   014E94  B4D8               	btfsc	status,2,c
 23307   014E96  D00B               	goto	l12631
 23308                           
 23309                           ; BSR set to: 6
 23310                           ;src/io.c: 293:   printf("f_lseek(): ERROR %d\n\r", fres);
 23311   014E98  0EA1               	movlw	low STR_53
 23312   014E9A  0105               	movlb	5	; () banked
 23313   014E9C  6F9A               	movwf	printf@fmt& (0+255),b
 23314   014E9E  0EFE               	movlw	high STR_53
 23315   014EA0  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 23316   014EA2  C681  F59C         	movff	disk_io_handle@fres,?_printf+2
 23317   014EA6  6B9D               	clrf	(?_printf+3)& (0+255),b
 23318   014EA8  EC4F  F0CF         	call	_printf	;wreg free
 23319   014EAC  D79E               	goto	l12619
 23320   014EAE                     l12631:
 23321                           
 23322                           ; BSR set to: 6
 23323                           ;src/io.c: 298:  if (io_addr == 0x40 +18) {
 23324   014EAE  0E52               	movlw	82
 23325   014EB0  0107               	movlb	7	; () banked
 23326   014EB2  192C               	xorwf	_io_addr& (0+255),w,b
 23327   014EB4  A4D8               	btfss	status,2,c
 23328   014EB6  D04B               	goto	l12647
 23329                           
 23330                           ; BSR set to: 7
 23331                           ;src/io.c: 301:   if ((fres = f_read(filep, disk_buf, 128, &n)) != FR_OK || n != 128) {
 23332   014EB8  C67F  F624         	movff	disk_io_handle@filep,f_read@fp
 23333   014EBC  C680  F625         	movff	disk_io_handle@filep+1,f_read@fp+1
 23334   014EC0  0E00               	movlw	low _disk_buf
 23335   014EC2  0106               	movlb	6	; () banked
 23336   014EC4  6F26               	movwf	f_read@buff& (0+255),b
 23337   014EC6  0E08               	movlw	high _disk_buf
 23338   014EC8  6F27               	movwf	(f_read@buff+1)& (0+255),b
 23339   014ECA  0E00               	movlw	0
 23340   014ECC  6F29               	movwf	(f_read@btr+1)& (0+255),b
 23341   014ECE  0E80               	movlw	128
 23342   014ED0  6F28               	movwf	f_read@btr& (0+255),b
 23343   014ED2  0E82               	movlw	low disk_io_handle@n
 23344   014ED4  6F2A               	movwf	f_read@br& (0+255),b
 23345   014ED6  0E06               	movlw	high disk_io_handle@n
 23346   014ED8  6F2B               	movwf	(f_read@br+1)& (0+255),b
 23347   014EDA  ECB3  F092         	call	_f_read	;wreg free
 23348   014EDE  6F81               	movwf	disk_io_handle@fres& (0+255),b
 23349   014EE0  5181               	movf	disk_io_handle@fres& (0+255),w,b
 23350   014EE2  A4D8               	btfss	status,2,c
 23351   014EE4  D005               	goto	u16280
 23352                           
 23353                           ; BSR set to: 6
 23354   014EE6  0E80               	movlw	128
 23355   014EE8  1982               	xorwf	disk_io_handle@n& (0+255),w,b
 23356   014EEA  1183               	iorwf	(disk_io_handle@n+1)& (0+255),w,b
 23357   014EEC  B4D8               	btfsc	status,2,c
 23358   014EEE  D00F               	goto	l12641
 23359   014EF0                     u16280:
 23360                           
 23361                           ; BSR set to: 6
 23362                           ;src/io.c: 302:    printf("f_read(): ERROR res=%d, n=%d\n\r", fres, n);
 23363   014EF0  0EE0               	movlw	low STR_54
 23364   014EF2  0105               	movlb	5	; () banked
 23365   014EF4  6F9A               	movwf	printf@fmt& (0+255),b
 23366   014EF6  0EFC               	movlw	high STR_54
 23367   014EF8  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 23368   014EFA  C681  F59C         	movff	disk_io_handle@fres,?_printf+2
 23369   014EFE  6B9D               	clrf	(?_printf+3)& (0+255),b
 23370   014F00  C682  F59E         	movff	disk_io_handle@n,?_printf+4
 23371   014F04  C683  F59F         	movff	disk_io_handle@n+1,?_printf+5
 23372   014F08  EC4F  F0CF         	call	_printf	;wreg free
 23373   014F0C  D76E               	goto	l12619
 23374   014F0E                     l12641:
 23375                           
 23376                           ; BSR set to: 6
 23377                           ;src/io.c: 307:   disk_stat = 0x00;
 23378   014F0E  0E00               	movlw	0
 23379   014F10  0107               	movlb	7	; () banked
 23380   014F12  6FDB               	movwf	_disk_stat& (0+255),b
 23381                           
 23382                           ;src/io.c: 309:   uint16_t addr = ((uint16_t)disk_dmah << 8) | disk_dmal;
 23383   014F14  5128               	movf	disk_io_handle@disk_dmah& (0+255),w,b
 23384   014F16  0106               	movlb	6	; () banked
 23385   014F18  6F73               	movwf	??_disk_io_handle& (0+255),b
 23386   014F1A  0107               	movlb	7	; () banked
 23387   014F1C  5129               	movf	disk_io_handle@disk_dmal& (0+255),w,b
 23388   014F1E  0106               	movlb	6	; () banked
 23389   014F20  6F77               	movwf	disk_io_handle@addr& (0+255),b
 23390   014F22  C673  F678         	movff	??_disk_io_handle,disk_io_handle@addr+1
 23391                           
 23392                           ; BSR set to: 6
 23393                           ;src/io.c: 310:   emuz80_57q_write_to_sram(addr, (uint8_t*)disk_buf, 128);
 23394   014F26  C677  F501         	movff	disk_io_handle@addr,emuz80_57q_write_to_sram@addr
 23395   014F2A  C678  F502         	movff	disk_io_handle@addr+1,emuz80_57q_write_to_sram@addr+1
 23396   014F2E  0E00               	movlw	low _disk_buf
 23397   014F30  6E03               	movwf	emuz80_57q_write_to_sram@buf^(0+1280),c
 23398   014F32  0E08               	movlw	high _disk_buf
 23399   014F34  6E04               	movwf	(emuz80_57q_write_to_sram@buf+1)^(0+1280),c
 23400   014F36  0E00               	movlw	0
 23401   014F38  6E06               	movwf	(emuz80_57q_write_to_sram@len+1)^(0+1280),c
 23402   014F3A  0E80               	movlw	128
 23403   014F3C  6E05               	movwf	emuz80_57q_write_to_sram@len^(0+1280),c
 23404   014F3E  EC49  F0CA         	call	_emuz80_57q_write_to_sram	;wreg free
 23405   014F42                     l12645:
 23406                           
 23407                           ;src/io.c: 311:   disk_datap = ((void*)0);
 23408   014F42  0E00               	movlw	0
 23409   014F44  0107               	movlb	7	; () banked
 23410   014F46  6F19               	movwf	disk_io_handle@disk_datap& (0+255),b
 23411   014F48  0E00               	movlw	0
 23412   014F4A  6F1A               	movwf	(disk_io_handle@disk_datap+1)& (0+255),b
 23413                           
 23414                           ;src/io.c: 313:  } else
 23415   014F4C  0012               	return	
 23416   014F4E                     l12647:
 23417                           
 23418                           ; BSR set to: 7
 23419                           ;src/io.c: 314:  if (io_addr == 0x40 +19) {
 23420   014F4E  0E53               	movlw	83
 23421   014F50  192C               	xorwf	_io_addr& (0+255),w,b
 23422   014F52  A4D8               	btfss	status,2,c
 23423   014F54  0012               	return	
 23424                           
 23425                           ; BSR set to: 7
 23426                           ;src/io.c: 317:   uint16_t addr = ((uint16_t)disk_dmah << 8) | disk_dmal;
 23427   014F56  5128               	movf	disk_io_handle@disk_dmah& (0+255),w,b
 23428   014F58  0106               	movlb	6	; () banked
 23429   014F5A  6F73               	movwf	??_disk_io_handle& (0+255),b
 23430   014F5C  0107               	movlb	7	; () banked
 23431   014F5E  5129               	movf	disk_io_handle@disk_dmal& (0+255),w,b
 23432   014F60  0106               	movlb	6	; () banked
 23433   014F62  6F79               	movwf	disk_io_handle@addr_2171& (0+255),b
 23434   014F64  C673  F67A         	movff	??_disk_io_handle,disk_io_handle@addr_2171+1
 23435                           
 23436                           ; BSR set to: 6
 23437                           ;src/io.c: 318:   emuz80_57q_read_from_sram(addr, (uint8_t*)disk_buf, 128);
 23438   014F68  C679  F501         	movff	disk_io_handle@addr_2171,emuz80_57q_read_from_sram@addr
 23439   014F6C  C67A  F502         	movff	disk_io_handle@addr_2171+1,emuz80_57q_read_from_sram@addr+1
 23440   014F70  0E00               	movlw	low _disk_buf
 23441   014F72  6E03               	movwf	emuz80_57q_read_from_sram@buf^(0+1280),c
 23442   014F74  0E08               	movlw	high _disk_buf
 23443   014F76  6E04               	movwf	(emuz80_57q_read_from_sram@buf+1)^(0+1280),c
 23444   014F78  0E00               	movlw	0
 23445   014F7A  6E06               	movwf	(emuz80_57q_read_from_sram@len+1)^(0+1280),c
 23446   014F7C  0E80               	movlw	128
 23447   014F7E  6E05               	movwf	emuz80_57q_read_from_sram@len^(0+1280),c
 23448   014F80  EC5A  F0CC         	call	_emuz80_57q_read_from_sram	;wreg free
 23449                           
 23450                           ;src/io.c: 321:   if ((fres = f_write(filep, disk_buf, 128, &n)) != FR_OK || n != 128) {
 23451   014F84  C67F  F648         	movff	disk_io_handle@filep,f_write@fp
 23452   014F88  C680  F649         	movff	disk_io_handle@filep+1,f_write@fp+1
 23453   014F8C  0E00               	movlw	low _disk_buf
 23454   014F8E  0106               	movlb	6	; () banked
 23455   014F90  6F4A               	movwf	f_write@buff& (0+255),b
 23456   014F92  0E08               	movlw	high _disk_buf
 23457   014F94  6F4B               	movwf	(f_write@buff+1)& (0+255),b
 23458   014F96  0E00               	movlw	0
 23459   014F98  6F4D               	movwf	(f_write@btw+1)& (0+255),b
 23460   014F9A  0E80               	movlw	128
 23461   014F9C  6F4C               	movwf	f_write@btw& (0+255),b
 23462   014F9E  0E82               	movlw	low disk_io_handle@n
 23463   014FA0  6F4E               	movwf	f_write@bw& (0+255),b
 23464   014FA2  0E06               	movlw	high disk_io_handle@n
 23465   014FA4  6F4F               	movwf	(f_write@bw+1)& (0+255),b
 23466   014FA6  ECDB  F088         	call	_f_write	;wreg free
 23467   014FAA  6F81               	movwf	disk_io_handle@fres& (0+255),b
 23468   014FAC  5181               	movf	disk_io_handle@fres& (0+255),w,b
 23469   014FAE  A4D8               	btfss	status,2,c
 23470   014FB0  D005               	goto	u16310
 23471                           
 23472                           ; BSR set to: 6
 23473   014FB2  0E80               	movlw	128
 23474   014FB4  1982               	xorwf	disk_io_handle@n& (0+255),w,b
 23475   014FB6  1183               	iorwf	(disk_io_handle@n+1)& (0+255),w,b
 23476   014FB8  B4D8               	btfsc	status,2,c
 23477   014FBA  D00F               	goto	l12661
 23478   014FBC                     u16310:
 23479                           
 23480                           ; BSR set to: 6
 23481                           ;src/io.c: 322:    printf("f_write(): ERROR res=%d, n=%d\n\r", fres, n);
 23482   014FBC  0EC0               	movlw	low STR_55
 23483   014FBE  0105               	movlb	5	; () banked
 23484   014FC0  6F9A               	movwf	printf@fmt& (0+255),b
 23485   014FC2  0EFC               	movlw	high STR_55
 23486   014FC4  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 23487   014FC6  C681  F59C         	movff	disk_io_handle@fres,?_printf+2
 23488   014FCA  6B9D               	clrf	(?_printf+3)& (0+255),b
 23489   014FCC  C682  F59E         	movff	disk_io_handle@n,?_printf+4
 23490   014FD0  C683  F59F         	movff	disk_io_handle@n+1,?_printf+5
 23491   014FD4  EC4F  F0CF         	call	_printf	;wreg free
 23492   014FD8  D708               	goto	l12619
 23493   014FDA                     l12661:
 23494                           
 23495                           ; BSR set to: 6
 23496                           ;src/io.c: 326:   if ((fres = f_sync(filep)) != FR_OK) {
 23497   014FDA  C67F  F60A         	movff	disk_io_handle@filep,f_sync@fp
 23498   014FDE  C680  F60B         	movff	disk_io_handle@filep+1,f_sync@fp+1
 23499   014FE2  EC1A  F0B1         	call	_f_sync	;wreg free
 23500   014FE6  0106               	movlb	6	; () banked
 23501   014FE8  6F81               	movwf	disk_io_handle@fres& (0+255),b
 23502   014FEA  5181               	movf	disk_io_handle@fres& (0+255),w,b
 23503   014FEC  B4D8               	btfsc	status,2,c
 23504   014FEE  D00B               	goto	l12667
 23505                           
 23506                           ; BSR set to: 6
 23507                           ;src/io.c: 327:    printf("f_sync(): ERROR %d\n\r", fres);
 23508   014FF0  0EB7               	movlw	low STR_56
 23509   014FF2  0105               	movlb	5	; () banked
 23510   014FF4  6F9A               	movwf	printf@fmt& (0+255),b
 23511   014FF6  0EFE               	movlw	high STR_56
 23512   014FF8  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 23513   014FFA  C681  F59C         	movff	disk_io_handle@fres,?_printf+2
 23514   014FFE  6B9D               	clrf	(?_printf+3)& (0+255),b
 23515   015000  EC4F  F0CF         	call	_printf	;wreg free
 23516   015004  D6F2               	goto	l12619
 23517   015006                     l12667:
 23518                           
 23519                           ; BSR set to: 6
 23520                           ;src/io.c: 331:   disk_stat = 0x00;
 23521   015006  0E00               	movlw	0
 23522   015008  0107               	movlb	7	; () banked
 23523   01500A  6FDB               	movwf	_disk_stat& (0+255),b
 23524   01500C  D79A               	goto	l12645
 23525   01500E                     __end_of_disk_io_handle:
 23526                           	callstack 0
 23527                           
 23528 ;; *************** function _f_write *****************
 23529 ;; Defined at:
 23530 ;;		line 4014 in file "fatfs/ff.c"
 23531 ;; Parameters:    Size  Location     Type
 23532 ;;  fp              2   72[BANK6 ] PTR struct .
 23533 ;;		 -> files(3276), 
 23534 ;;  buff            2   74[BANK6 ] PTR const void 
 23535 ;;		 -> disk_buf(128), 
 23536 ;;  btw             2   76[BANK6 ] unsigned int 
 23537 ;;  bw              2   78[BANK6 ] PTR unsigned int 
 23538 ;;		 -> disk_io_handle@n(2), 
 23539 ;; Auto vars:     Size  Location     Type
 23540 ;;  sect            4  109[BANK6 ] unsigned long 
 23541 ;;  clst            4  103[BANK6 ] unsigned long 
 23542 ;;  fs              2  113[BANK6 ] PTR struct .
 23543 ;;		 -> fs(560), NULL(0), 
 23544 ;;  wcnt            2  107[BANK6 ] unsigned int 
 23545 ;;  cc              2  101[BANK6 ] unsigned int 
 23546 ;;  csect           2   99[BANK6 ] unsigned int 
 23547 ;;  wbuff           2   97[BANK6 ] PTR const unsigned char 
 23548 ;;		 -> disk_buf(128), 
 23549 ;;  res             1   96[BANK6 ] enum E275
 23550 ;; Return value:  Size  Location     Type
 23551 ;;                  1    wreg      enum E275
 23552 ;; Registers used:
 23553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23554 ;; Tracked objects:
 23555 ;;		On entry : 3F/6
 23556 ;;		On exit  : 3F/6
 23557 ;;		Unchanged: 0/0
 23558 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23559 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23560 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23561 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23562 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23563 ;;Total ram usage:       43 bytes
 23564 ;; Hardware stack levels used: 1
 23565 ;; Hardware stack levels required when called: 15
 23566 ;; This function calls:
 23567 ;;		_clst2sect
 23568 ;;		_create_chain
 23569 ;;		_disk_read
 23570 ;;		_disk_write
 23571 ;;		_memcpy
 23572 ;;		_validate
 23573 ;; This function is called by:
 23574 ;;		_disk_io_handle
 23575 ;; This function uses a non-reentrant model
 23576 ;;
 23577                           
 23578                           	psect	text40
 23579   0111B6                     __ptext40:
 23580                           	callstack 0
 23581   0111B6                     _f_write:
 23582                           	callstack 110
 23583                           
 23584                           ; BSR set to: 6
 23585                           ;fatfs/ff.c: 4015:  FIL* fp,;fatfs/ff.c: 4016:  const void* buff,;fatfs/ff.c: 4017:  UIN
      +                          T btw,;fatfs/ff.c: 4018:  UINT* bw;fatfs/ff.c: 4020: {;fatfs/ff.c: 4021:  FRESULT res;;f
      +                          atfs/ff.c: 4022:  FATFS *fs;;fatfs/ff.c: 4023:  DWORD clst;;fatfs/ff.c: 4024:  LBA_t sec
      +                          t;;fatfs/ff.c: 4025:  UINT wcnt, cc, csect;;fatfs/ff.c: 4026:  const BYTE *wbuff = (cons
      +                          t BYTE*)buff;
 23586                           
 23587                           ; BSR set to: 7
 23588                           ;incstack = 0
 23589   0111B6  C64A  F661         	movff	f_write@buff,f_write@wbuff
 23590   0111BA  C64B  F662         	movff	f_write@buff+1,f_write@wbuff+1
 23591                           
 23592                           ; BSR set to: 6
 23593                           ;fatfs/ff.c: 4029:  *bw = 0;
 23594   0111BE  C64E  F4D9         	movff	f_write@bw,fsr2l
 23595   0111C2  C64F  F4DA         	movff	f_write@bw+1,fsr2h
 23596   0111C6  6ADE               	clrf	postinc2,c
 23597   0111C8  6ADD               	clrf	postdec2,c
 23598                           
 23599                           ; BSR set to: 6
 23600                           ;fatfs/ff.c: 4030:  res = validate(&fp->obj, &fs);
 23601   0111CA  C648  F5A6         	movff	f_write@fp,validate@obj
 23602   0111CE  C649  F5A7         	movff	f_write@fp+1,validate@obj+1
 23603   0111D2  0E71               	movlw	low f_write@fs
 23604   0111D4  0105               	movlb	5	; () banked
 23605   0111D6  6FA8               	movwf	validate@rfs& (0+255),b
 23606   0111D8  0E06               	movlw	high f_write@fs
 23607   0111DA  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 23608   0111DC  EC59  F0C3         	call	_validate	;wreg free
 23609   0111E0  0106               	movlb	6	; () banked
 23610   0111E2  6F60               	movwf	f_write@res& (0+255),b
 23611                           
 23612                           ; BSR set to: 6
 23613                           ;fatfs/ff.c: 4031:  if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res;
 23614   0111E4  5160               	movf	f_write@res& (0+255),w,b
 23615   0111E6  A4D8               	btfss	status,2,c
 23616   0111E8  D00B               	goto	u14900
 23617                           
 23618                           ; BSR set to: 6
 23619   0111EA  EE20 F00F          	lfsr	2,15
 23620   0111EE  5148               	movf	f_write@fp& (0+255),w,b
 23621   0111F0  26D9               	addwf	fsr2l,f,c
 23622   0111F2  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23623   0111F4  22DA               	addwfc	fsr2h,f,c
 23624   0111F6  50DF               	movf	indf2,w,c
 23625   0111F8  6F60               	movwf	f_write@res& (0+255),b
 23626   0111FA  5160               	movf	f_write@res& (0+255),w,b
 23627   0111FC  B4D8               	btfsc	status,2,c
 23628   0111FE  D002               	goto	l11771
 23629   011200                     u14900:
 23630                           
 23631                           ; BSR set to: 6
 23632   011200  5160               	movf	f_write@res& (0+255),w,b
 23633   011202  0012               	return	
 23634   011204                     l11771:
 23635                           
 23636                           ; BSR set to: 6
 23637                           ;fatfs/ff.c: 4032:  if (!(fp->flag & 0x02)) return FR_DENIED;
 23638   011204  EE20 F00E          	lfsr	2,14
 23639   011208  5148               	movf	f_write@fp& (0+255),w,b
 23640   01120A  26D9               	addwf	fsr2l,f,c
 23641   01120C  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23642   01120E  22DA               	addwfc	fsr2h,f,c
 23643   011210  B2DF               	btfsc	indf2,1,c
 23644   011212  D002               	goto	l11779
 23645                           
 23646                           ; BSR set to: 6
 23647   011214  0E07               	movlw	7
 23648   011216  0012               	return	
 23649   011218                     l11779:
 23650                           
 23651                           ; BSR set to: 6
 23652   011218  EE20 F010          	lfsr	2,16
 23653   01121C  5148               	movf	f_write@fp& (0+255),w,b
 23654   01121E  26D9               	addwf	fsr2l,f,c
 23655   011220  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23656   011222  22DA               	addwfc	fsr2h,f,c
 23657   011224  EE10 F010          	lfsr	1,16
 23658   011228  5148               	movf	f_write@fp& (0+255),w,b
 23659   01122A  26E1               	addwf	fsr1l,f,c
 23660   01122C  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23661   01122E  22E2               	addwfc	fsr1h,f,c
 23662   011230  C4E6 F654          	movff	postinc1,??_f_write+4
 23663   011234  C4E6 F655          	movff	postinc1,??_f_write+5
 23664   011238  C4E6 F656          	movff	postinc1,??_f_write+6
 23665   01123C  C4E6 F657          	movff	postinc1,??_f_write+7
 23666   011240  514C               	movf	f_write@btw& (0+255),w,b
 23667   011242  2554               	addwf	(??_f_write+4)& (0+255),w,b
 23668   011244  6F58               	movwf	(??_f_write+8)& (0+255),b
 23669   011246  514D               	movf	(f_write@btw+1)& (0+255),w,b
 23670   011248  2155               	addwfc	(??_f_write+5)& (0+255),w,b
 23671   01124A  6F59               	movwf	(??_f_write+9)& (0+255),b
 23672   01124C  0E00               	movlw	0
 23673   01124E  2156               	addwfc	(??_f_write+6)& (0+255),w,b
 23674   011250  6F5A               	movwf	(??_f_write+10)& (0+255),b
 23675   011252  0E00               	movlw	0
 23676   011254  2157               	addwfc	(??_f_write+7)& (0+255),w,b
 23677   011256  6F5B               	movwf	(??_f_write+11)& (0+255),b
 23678   011258  50DE               	movf	postinc2,w,c
 23679   01125A  5D58               	subwf	(??_f_write+8)& (0+255),w,b
 23680   01125C  50DE               	movf	postinc2,w,c
 23681   01125E  5959               	subwfb	(??_f_write+9)& (0+255),w,b
 23682   011260  50DE               	movf	postinc2,w,c
 23683   011262  595A               	subwfb	(??_f_write+10)& (0+255),w,b
 23684   011264  50DE               	movf	postinc2,w,c
 23685   011266  595B               	subwfb	(??_f_write+11)& (0+255),w,b
 23686   011268  B0D8               	btfsc	status,0,c
 23687   01126A  D00E               	goto	l11783
 23688                           
 23689                           ; BSR set to: 6
 23690                           ;fatfs/ff.c: 4036:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 23691   01126C  EE20 F010          	lfsr	2,16
 23692   011270  5148               	movf	f_write@fp& (0+255),w,b
 23693   011272  26D9               	addwf	fsr2l,f,c
 23694   011274  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23695   011276  22DA               	addwfc	fsr2h,f,c
 23696   011278  C4DE F650          	movff	postinc2,??_f_write
 23697   01127C  C4DD F651          	movff	postdec2,??_f_write+1
 23698   011280  1D50               	comf	??_f_write& (0+255),w,b
 23699   011282  6F4C               	movwf	f_write@btw& (0+255),b
 23700   011284  1D51               	comf	(??_f_write+1)& (0+255),w,b
 23701   011286  6F4D               	movwf	(f_write@btw+1)& (0+255),b
 23702   011288                     l11783:
 23703                           
 23704                           ; BSR set to: 6
 23705                           ;fatfs/ff.c: 4039:  for ( ; btw > 0; btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr +
      +                          = wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize) {
 23706   011288  514C               	movf	f_write@btw& (0+255),w,b
 23707   01128A  114D               	iorwf	(f_write@btw+1)& (0+255),w,b
 23708   01128C  B4D8               	btfsc	status,2,c
 23709   01128E  D305               	goto	l11911
 23710                           
 23711                           ; BSR set to: 6
 23712                           ;fatfs/ff.c: 4040:   if (fp->fptr % ((UINT)512) == 0) {
 23713   011290  EE20 F010          	lfsr	2,16
 23714   011294  5148               	movf	f_write@fp& (0+255),w,b
 23715   011296  26D9               	addwf	fsr2l,f,c
 23716   011298  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23717   01129A  22DA               	addwfc	fsr2h,f,c
 23718   01129C  0EFF               	movlw	255
 23719   01129E  14DE               	andwf	postinc2,w,c
 23720   0112A0  6F50               	movwf	??_f_write& (0+255),b
 23721   0112A2  0E01               	movlw	1
 23722   0112A4  14DE               	andwf	postinc2,w,c
 23723   0112A6  6F51               	movwf	(??_f_write+1)& (0+255),b
 23724   0112A8  0E00               	movlw	0
 23725   0112AA  14DE               	andwf	postinc2,w,c
 23726   0112AC  6F52               	movwf	(??_f_write+2)& (0+255),b
 23727   0112AE  0E00               	movlw	0
 23728   0112B0  14DE               	andwf	postinc2,w,c
 23729   0112B2  6F53               	movwf	(??_f_write+3)& (0+255),b
 23730   0112B4  5150               	movf	??_f_write& (0+255),w,b
 23731   0112B6  1151               	iorwf	(??_f_write+1)& (0+255),w,b
 23732   0112B8  1152               	iorwf	(??_f_write+2)& (0+255),w,b
 23733   0112BA  1153               	iorwf	(??_f_write+3)& (0+255),w,b
 23734   0112BC  A4D8               	btfss	status,2,c
 23735   0112BE  D249               	goto	l684
 23736                           
 23737                           ; BSR set to: 6
 23738                           ;fatfs/ff.c: 4041:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->csize - 1);
 23739   0112C0  EE20 F010          	lfsr	2,16
 23740   0112C4  5148               	movf	f_write@fp& (0+255),w,b
 23741   0112C6  26D9               	addwf	fsr2l,f,c
 23742   0112C8  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23743   0112CA  22DA               	addwfc	fsr2h,f,c
 23744   0112CC  C4DE F650          	movff	postinc2,??_f_write
 23745   0112D0  C4DE F651          	movff	postinc2,??_f_write+1
 23746   0112D4  C4DE F652          	movff	postinc2,??_f_write+2
 23747   0112D8  C4DE F653          	movff	postinc2,??_f_write+3
 23748   0112DC  0E0A               	movlw	10
 23749   0112DE  D005               	goto	u14950
 23750   0112E0                     u14955:
 23751   0112E0  90D8               	bcf	status,0,c
 23752   0112E2  3353               	rrcf	(??_f_write+3)& (0+255),f,b
 23753   0112E4  3352               	rrcf	(??_f_write+2)& (0+255),f,b
 23754   0112E6  3351               	rrcf	(??_f_write+1)& (0+255),f,b
 23755   0112E8  3350               	rrcf	??_f_write& (0+255),f,b
 23756   0112EA                     u14950:
 23757   0112EA  2EE8               	decfsz	wreg,f,c
 23758   0112EC  D7F9               	goto	u14955
 23759   0112EE  EE20 F00A          	lfsr	2,10
 23760   0112F2  5171               	movf	f_write@fs& (0+255),w,b
 23761   0112F4  26D9               	addwf	fsr2l,f,c
 23762   0112F6  5172               	movf	(f_write@fs+1)& (0+255),w,b
 23763   0112F8  22DA               	addwfc	fsr2h,f,c
 23764   0112FA  C4DE F654          	movff	postinc2,??_f_write+4
 23765   0112FE  C4DD F655          	movff	postdec2,??_f_write+5
 23766   011302  0EFF               	movlw	255
 23767   011304  2554               	addwf	(??_f_write+4)& (0+255),w,b
 23768   011306  6F56               	movwf	(??_f_write+6)& (0+255),b
 23769   011308  0EFF               	movlw	255
 23770   01130A  2155               	addwfc	(??_f_write+5)& (0+255),w,b
 23771   01130C  6F57               	movwf	(??_f_write+7)& (0+255),b
 23772   01130E  5150               	movf	??_f_write& (0+255),w,b
 23773   011310  1556               	andwf	(??_f_write+6)& (0+255),w,b
 23774   011312  6F63               	movwf	f_write@csect& (0+255),b
 23775   011314  5151               	movf	(??_f_write+1)& (0+255),w,b
 23776   011316  1557               	andwf	(??_f_write+7)& (0+255),w,b
 23777   011318  6F64               	movwf	(f_write@csect+1)& (0+255),b
 23778                           
 23779                           ; BSR set to: 6
 23780                           ;fatfs/ff.c: 4042:    if (csect == 0) {
 23781   01131A  5163               	movf	f_write@csect& (0+255),w,b
 23782   01131C  1164               	iorwf	(f_write@csect+1)& (0+255),w,b
 23783   01131E  A4D8               	btfss	status,2,c
 23784   011320  D09C               	goto	l685
 23785                           
 23786                           ; BSR set to: 6
 23787                           ;fatfs/ff.c: 4043:     if (fp->fptr == 0) {
 23788   011322  EE20 F010          	lfsr	2,16
 23789   011326  5148               	movf	f_write@fp& (0+255),w,b
 23790   011328  26D9               	addwf	fsr2l,f,c
 23791   01132A  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23792   01132C  22DA               	addwfc	fsr2h,f,c
 23793   01132E  50DE               	movf	postinc2,w,c
 23794   011330  10DE               	iorwf	postinc2,w,c
 23795   011332  10DE               	iorwf	postinc2,w,c
 23796   011334  10DE               	iorwf	postinc2,w,c
 23797   011336  A4D8               	btfss	status,2,c
 23798   011338  D023               	goto	l11801
 23799                           
 23800                           ; BSR set to: 6
 23801                           ;fatfs/ff.c: 4044:      clst = fp->obj.sclust;
 23802   01133A  EE20 F006          	lfsr	2,6
 23803   01133E  5148               	movf	f_write@fp& (0+255),w,b
 23804   011340  26D9               	addwf	fsr2l,f,c
 23805   011342  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23806   011344  22DA               	addwfc	fsr2h,f,c
 23807   011346  C4DE F667          	movff	postinc2,f_write@clst
 23808   01134A  C4DE F668          	movff	postinc2,f_write@clst+1
 23809   01134E  C4DE F669          	movff	postinc2,f_write@clst+2
 23810   011352  C4DE F66A          	movff	postinc2,f_write@clst+3
 23811                           
 23812                           ; BSR set to: 6
 23813                           ;fatfs/ff.c: 4045:      if (clst == 0) {
 23814   011356  5167               	movf	f_write@clst& (0+255),w,b
 23815   011358  1168               	iorwf	(f_write@clst+1)& (0+255),w,b
 23816   01135A  1169               	iorwf	(f_write@clst+2)& (0+255),w,b
 23817   01135C  116A               	iorwf	(f_write@clst+3)& (0+255),w,b
 23818   01135E  A4D8               	btfss	status,2,c
 23819   011360  D02B               	goto	l11803
 23820                           
 23821                           ; BSR set to: 6
 23822                           ;fatfs/ff.c: 4046:       clst = create_chain(&fp->obj, 0);
 23823   011362  C648  F62B         	movff	f_write@fp,create_chain@obj
 23824   011366  C649  F62C         	movff	f_write@fp+1,create_chain@obj+1
 23825   01136A  0E00               	movlw	0
 23826   01136C  6F2D               	movwf	create_chain@clst& (0+255),b
 23827   01136E  0E00               	movlw	0
 23828   011370  6F2E               	movwf	(create_chain@clst+1)& (0+255),b
 23829   011372  0E00               	movlw	0
 23830   011374  6F2F               	movwf	(create_chain@clst+2)& (0+255),b
 23831   011376  0E00               	movlw	0
 23832   011378  6F30               	movwf	(create_chain@clst+3)& (0+255),b
 23833   01137A  EC94  F098         	call	_create_chain	;wreg free
 23834   01137E  D014               	goto	L9
 23835   011380                     l11801:
 23836                           
 23837                           ; BSR set to: 6
 23838                           ;fatfs/ff.c: 4054:      {;fatfs/ff.c: 4055:       clst = create_chain(&fp->obj, fp->clus
      +                          t);
 23839   011380  C648  F62B         	movff	f_write@fp,create_chain@obj
 23840   011384  C649  F62C         	movff	f_write@fp+1,create_chain@obj+1
 23841   011388  EE20 F014          	lfsr	2,20
 23842   01138C  5148               	movf	f_write@fp& (0+255),w,b
 23843   01138E  26D9               	addwf	fsr2l,f,c
 23844   011390  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23845   011392  22DA               	addwfc	fsr2h,f,c
 23846   011394  C4DE F62D          	movff	postinc2,create_chain@clst
 23847   011398  C4DE F62E          	movff	postinc2,create_chain@clst+1
 23848   01139C  C4DE F62F          	movff	postinc2,create_chain@clst+2
 23849   0113A0  C4DE F630          	movff	postinc2,create_chain@clst+3
 23850   0113A4  EC94  F098         	call	_create_chain	;wreg free
 23851   0113A8                     L9:
 23852   0113A8  C62B  F667         	movff	?_create_chain,f_write@clst
 23853   0113AC  C62C  F668         	movff	?_create_chain+1,f_write@clst+1
 23854   0113B0  C62D  F669         	movff	?_create_chain+2,f_write@clst+2
 23855   0113B4  C62E  F66A         	movff	?_create_chain+3,f_write@clst+3
 23856   0113B8                     l11803:
 23857                           
 23858                           ; BSR set to: 6
 23859                           ;fatfs/ff.c: 4058:     if (clst == 0) break;
 23860   0113B8  5167               	movf	f_write@clst& (0+255),w,b
 23861   0113BA  1168               	iorwf	(f_write@clst+1)& (0+255),w,b
 23862   0113BC  1169               	iorwf	(f_write@clst+2)& (0+255),w,b
 23863   0113BE  116A               	iorwf	(f_write@clst+3)& (0+255),w,b
 23864   0113C0  B4D8               	btfsc	status,2,c
 23865   0113C2  D26B               	goto	l11911
 23866                           
 23867                           ; BSR set to: 6
 23868                           ;fatfs/ff.c: 4059:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR;
      +                           };
 23869   0113C4  0567               	decf	f_write@clst& (0+255),w,b
 23870   0113C6  1168               	iorwf	(f_write@clst+1)& (0+255),w,b
 23871   0113C8  1169               	iorwf	(f_write@clst+2)& (0+255),w,b
 23872   0113CA  116A               	iorwf	(f_write@clst+3)& (0+255),w,b
 23873   0113CC  A4D8               	btfss	status,2,c
 23874   0113CE  D00A               	goto	l11815
 23875   0113D0                     u15000:
 23876                           
 23877                           ; BSR set to: 6
 23878   0113D0  EE20 F00F          	lfsr	2,15
 23879   0113D4  5148               	movf	f_write@fp& (0+255),w,b
 23880   0113D6  26D9               	addwf	fsr2l,f,c
 23881   0113D8  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23882   0113DA  22DA               	addwfc	fsr2h,f,c
 23883   0113DC  0E02               	movlw	2
 23884   0113DE  6EDF               	movwf	indf2,c
 23885                           
 23886                           ; BSR set to: 6
 23887   0113E0  0E02               	movlw	2
 23888   0113E2  0012               	return	
 23889   0113E4                     l11815:
 23890                           
 23891                           ; BSR set to: 6
 23892                           ;fatfs/ff.c: 4060:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return F
      +                          R_DISK_ERR; };
 23893   0113E4  2967               	incf	f_write@clst& (0+255),w,b
 23894   0113E6  E111               	bnz	l11823
 23895   0113E8  2968               	incf	(f_write@clst+1)& (0+255),w,b
 23896   0113EA  E10F               	bnz	l11823
 23897   0113EC  2969               	incf	(f_write@clst+2)& (0+255),w,b
 23898   0113EE  E10D               	bnz	l11823
 23899   0113F0  296A               	incf	(f_write@clst+3)& (0+255),w,b
 23900   0113F2  A4D8               	btfss	status,2,c
 23901   0113F4  D00A               	goto	l11823
 23902   0113F6                     u15010:
 23903                           
 23904                           ; BSR set to: 6
 23905   0113F6  EE20 F00F          	lfsr	2,15
 23906   0113FA  5148               	movf	f_write@fp& (0+255),w,b
 23907   0113FC  26D9               	addwf	fsr2l,f,c
 23908   0113FE  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23909   011400  22DA               	addwfc	fsr2h,f,c
 23910   011402  0E01               	movlw	1
 23911   011404  6EDF               	movwf	indf2,c
 23912                           
 23913                           ; BSR set to: 6
 23914   011406  0E01               	movlw	1
 23915   011408  0012               	return	
 23916   01140A                     l11823:
 23917                           
 23918                           ; BSR set to: 6
 23919                           ;fatfs/ff.c: 4061:     fp->clust = clst;
 23920   01140A  EE20 F014          	lfsr	2,20
 23921   01140E  5148               	movf	f_write@fp& (0+255),w,b
 23922   011410  26D9               	addwf	fsr2l,f,c
 23923   011412  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23924   011414  22DA               	addwfc	fsr2h,f,c
 23925   011416  C667  F4DE         	movff	f_write@clst,postinc2
 23926   01141A  C668  F4DE         	movff	f_write@clst+1,postinc2
 23927   01141E  C669  F4DE         	movff	f_write@clst+2,postinc2
 23928   011422  C66A  F4DE         	movff	f_write@clst+3,postinc2
 23929                           
 23930                           ;fatfs/ff.c: 4062:     if (fp->obj.sclust == 0) fp->obj.sclust = clst;
 23931   011426  EE20 F006          	lfsr	2,6
 23932   01142A  5148               	movf	f_write@fp& (0+255),w,b
 23933   01142C  26D9               	addwf	fsr2l,f,c
 23934   01142E  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23935   011430  22DA               	addwfc	fsr2h,f,c
 23936   011432  50DE               	movf	postinc2,w,c
 23937   011434  10DE               	iorwf	postinc2,w,c
 23938   011436  10DE               	iorwf	postinc2,w,c
 23939   011438  10DE               	iorwf	postinc2,w,c
 23940   01143A  A4D8               	btfss	status,2,c
 23941   01143C  D00E               	goto	l685
 23942                           
 23943                           ; BSR set to: 6
 23944   01143E  EE20 F006          	lfsr	2,6
 23945   011442  5148               	movf	f_write@fp& (0+255),w,b
 23946   011444  26D9               	addwf	fsr2l,f,c
 23947   011446  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23948   011448  22DA               	addwfc	fsr2h,f,c
 23949   01144A  C667  F4DE         	movff	f_write@clst,postinc2
 23950   01144E  C668  F4DE         	movff	f_write@clst+1,postinc2
 23951   011452  C669  F4DE         	movff	f_write@clst+2,postinc2
 23952   011456  C66A  F4DE         	movff	f_write@clst+3,postinc2
 23953   01145A                     l685:
 23954                           
 23955                           ; BSR set to: 6
 23956                           ;fatfs/ff.c: 4067:    if (fp->flag & 0x80) {
 23957   01145A  EE20 F00E          	lfsr	2,14
 23958   01145E  5148               	movf	f_write@fp& (0+255),w,b
 23959   011460  26D9               	addwf	fsr2l,f,c
 23960   011462  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23961   011464  22DA               	addwfc	fsr2h,f,c
 23962   011466  AEDF               	btfss	indf2,7,c
 23963   011468  D033               	goto	l11837
 23964                           
 23965                           ; BSR set to: 6
 23966                           ;fatfs/ff.c: 4068:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp->e
      +                          rr = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 23967   01146A  0E22               	movlw	34
 23968   01146C  2548               	addwf	f_write@fp& (0+255),w,b
 23969   01146E  0105               	movlb	5	; () banked
 23970   011470  6FE2               	movwf	disk_write@buff& (0+255),b
 23971   011472  0E00               	movlw	0
 23972   011474  0106               	movlb	6	; () banked
 23973   011476  2149               	addwfc	(f_write@fp+1)& (0+255),w,b
 23974   011478  0105               	movlb	5	; () banked
 23975   01147A  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 23976   01147C  0106               	movlb	6	; () banked
 23977   01147E  EE20 F018          	lfsr	2,24
 23978   011482  5148               	movf	f_write@fp& (0+255),w,b
 23979   011484  26D9               	addwf	fsr2l,f,c
 23980   011486  5149               	movf	(f_write@fp+1)& (0+255),w,b
 23981   011488  22DA               	addwfc	fsr2h,f,c
 23982   01148A  C4DE F5E4          	movff	postinc2,disk_write@sector
 23983   01148E  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 23984   011492  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 23985   011496  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 23986   01149A  0E00               	movlw	0
 23987   01149C  0105               	movlb	5	; () banked
 23988   01149E  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 23989   0114A0  0E01               	movlw	1
 23990   0114A2  6FE8               	movwf	disk_write@count& (0+255),b
 23991   0114A4  0106               	movlb	6	; () banked
 23992   0114A6  EE20 F001          	lfsr	2,1
 23993   0114AA  5171               	movf	f_write@fs& (0+255),w,b
 23994   0114AC  26D9               	addwf	fsr2l,f,c
 23995   0114AE  5172               	movf	(f_write@fs+1)& (0+255),w,b
 23996   0114B0  22DA               	addwfc	fsr2h,f,c
 23997   0114B2  50DF               	movf	indf2,w,c
 23998   0114B4  EC0F  F0C9         	call	_disk_write
 23999   0114B8  0900               	iorlw	0
 24000   0114BA  A4D8               	btfss	status,2,c
 24001   0114BC  D139               	goto	u15150
 24002                           
 24003                           ; BSR set to: 5
 24004                           ;fatfs/ff.c: 4069:     fp->flag &= (BYTE)~0x80;
 24005                           
 24006                           ; BSR set to: 5
 24007   0114BE  0106               	movlb	6	; () banked
 24008   0114C0  EE20 F00E          	lfsr	2,14
 24009   0114C4  5148               	movf	f_write@fp& (0+255),w,b
 24010   0114C6  26D9               	addwf	fsr2l,f,c
 24011   0114C8  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24012   0114CA  22DA               	addwfc	fsr2h,f,c
 24013   0114CC  0E7F               	movlw	127
 24014   0114CE  16DF               	andwf	indf2,f,c
 24015   0114D0                     l11837:
 24016                           
 24017                           ; BSR set to: 6
 24018                           ;fatfs/ff.c: 4072:    sect = clst2sect(fs, fp->clust);
 24019   0114D0  C671  F50D         	movff	f_write@fs,clst2sect@fs
 24020   0114D4  C672  F50E         	movff	f_write@fs+1,clst2sect@fs+1
 24021   0114D8  EE20 F014          	lfsr	2,20
 24022   0114DC  5148               	movf	f_write@fp& (0+255),w,b
 24023   0114DE  26D9               	addwf	fsr2l,f,c
 24024   0114E0  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24025   0114E2  22DA               	addwfc	fsr2h,f,c
 24026   0114E4  C4DE F50F          	movff	postinc2,clst2sect@clst
 24027   0114E8  C4DE F510          	movff	postinc2,clst2sect@clst+1
 24028   0114EC  C4DE F511          	movff	postinc2,clst2sect@clst+2
 24029   0114F0  C4DE F512          	movff	postinc2,clst2sect@clst+3
 24030   0114F4  ECBA  F0C3         	call	_clst2sect	;wreg free
 24031   0114F8  C50D  F66D         	movff	?_clst2sect,f_write@sect
 24032   0114FC  C50E  F66E         	movff	?_clst2sect+1,f_write@sect+1
 24033   011500  C50F  F66F         	movff	?_clst2sect+2,f_write@sect+2
 24034   011504  C510  F670         	movff	?_clst2sect+3,f_write@sect+3
 24035                           
 24036                           ;fatfs/ff.c: 4073:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; 
      +                          };
 24037   011508  0106               	movlb	6	; () banked
 24038   01150A  516D               	movf	f_write@sect& (0+255),w,b
 24039   01150C  116E               	iorwf	(f_write@sect+1)& (0+255),w,b
 24040   01150E  116F               	iorwf	(f_write@sect+2)& (0+255),w,b
 24041   011510  1170               	iorwf	(f_write@sect+3)& (0+255),w,b
 24042   011512  B4D8               	btfsc	status,2,c
 24043   011514  D75D               	goto	u15000
 24044                           
 24045                           ; BSR set to: 6
 24046                           ;fatfs/ff.c: 4074:    sect += csect;
 24047                           
 24048                           ; BSR set to: 6
 24049   011516  5163               	movf	f_write@csect& (0+255),w,b
 24050   011518  276D               	addwf	f_write@sect& (0+255),f,b
 24051   01151A  5164               	movf	(f_write@csect+1)& (0+255),w,b
 24052   01151C  236E               	addwfc	(f_write@sect+1)& (0+255),f,b
 24053   01151E  0E00               	movlw	0
 24054   011520  236F               	addwfc	(f_write@sect+2)& (0+255),f,b
 24055   011522  0E00               	movlw	0
 24056   011524  2370               	addwfc	(f_write@sect+3)& (0+255),f,b
 24057                           
 24058                           ; BSR set to: 6
 24059                           ;fatfs/ff.c: 4075:    cc = btw / ((UINT)512);
 24060   011526  C64C  F650         	movff	f_write@btw,??_f_write
 24061   01152A  C64D  F651         	movff	f_write@btw+1,??_f_write+1
 24062   01152E  0E09               	movlw	9
 24063   011530  6F52               	movwf	(??_f_write+2)& (0+255),b
 24064   011532                     u15065:
 24065   011532  90D8               	bcf	status,0,c
 24066   011534  3351               	rrcf	(??_f_write+1)& (0+255),f,b
 24067   011536  3350               	rrcf	??_f_write& (0+255),f,b
 24068   011538  2F52               	decfsz	(??_f_write+2)& (0+255),f,b
 24069   01153A  D7FB               	goto	u15065
 24070   01153C  C650  F665         	movff	??_f_write,f_write@cc
 24071   011540  C651  F666         	movff	??_f_write+1,f_write@cc+1
 24072                           
 24073                           ; BSR set to: 6
 24074                           ;fatfs/ff.c: 4076:    if (cc > 0) {
 24075   011544  5165               	movf	f_write@cc& (0+255),w,b
 24076   011546  1166               	iorwf	(f_write@cc+1)& (0+255),w,b
 24077   011548  B4D8               	btfsc	status,2,c
 24078   01154A  D0A7               	goto	l11873
 24079                           
 24080                           ; BSR set to: 6
 24081                           ;fatfs/ff.c: 4077:     if (csect + cc > fs->csize) {
 24082   01154C  5165               	movf	f_write@cc& (0+255),w,b
 24083   01154E  2563               	addwf	f_write@csect& (0+255),w,b
 24084   011550  6F50               	movwf	??_f_write& (0+255),b
 24085   011552  5166               	movf	(f_write@cc+1)& (0+255),w,b
 24086   011554  2164               	addwfc	(f_write@csect+1)& (0+255),w,b
 24087   011556  6F51               	movwf	(??_f_write+1)& (0+255),b
 24088   011558  EE20 F00A          	lfsr	2,10
 24089   01155C  5171               	movf	f_write@fs& (0+255),w,b
 24090   01155E  26D9               	addwf	fsr2l,f,c
 24091   011560  5172               	movf	(f_write@fs+1)& (0+255),w,b
 24092   011562  22DA               	addwfc	fsr2h,f,c
 24093   011564  5150               	movf	??_f_write& (0+255),w,b
 24094   011566  5CDE               	subwf	postinc2,w,c
 24095   011568  5151               	movf	(??_f_write+1)& (0+255),w,b
 24096   01156A  58DE               	subwfb	postinc2,w,c
 24097   01156C  B0D8               	btfsc	status,0,c
 24098   01156E  D010               	goto	l11857
 24099                           
 24100                           ; BSR set to: 6
 24101                           ;fatfs/ff.c: 4078:      cc = fs->csize - csect;
 24102   011570  EE20 F00A          	lfsr	2,10
 24103   011574  5171               	movf	f_write@fs& (0+255),w,b
 24104   011576  26D9               	addwf	fsr2l,f,c
 24105   011578  5172               	movf	(f_write@fs+1)& (0+255),w,b
 24106   01157A  22DA               	addwfc	fsr2h,f,c
 24107   01157C  C4DE F650          	movff	postinc2,??_f_write
 24108   011580  C4DD F651          	movff	postdec2,??_f_write+1
 24109   011584  5163               	movf	f_write@csect& (0+255),w,b
 24110   011586  5D50               	subwf	??_f_write& (0+255),w,b
 24111   011588  6F65               	movwf	f_write@cc& (0+255),b
 24112   01158A  5164               	movf	(f_write@csect+1)& (0+255),w,b
 24113   01158C  5951               	subwfb	(??_f_write+1)& (0+255),w,b
 24114   01158E  6F66               	movwf	(f_write@cc+1)& (0+255),b
 24115   011590                     l11857:
 24116                           
 24117                           ; BSR set to: 6
 24118                           ;fatfs/ff.c: 4080:     if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) { fp->err = 
      +                          (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 24119   011590  C661  F5E2         	movff	f_write@wbuff,disk_write@buff
 24120   011594  C662  F5E3         	movff	f_write@wbuff+1,disk_write@buff+1
 24121   011598  C66D  F5E4         	movff	f_write@sect,disk_write@sector
 24122   01159C  C66E  F5E5         	movff	f_write@sect+1,disk_write@sector+1
 24123   0115A0  C66F  F5E6         	movff	f_write@sect+2,disk_write@sector+2
 24124   0115A4  C670  F5E7         	movff	f_write@sect+3,disk_write@sector+3
 24125   0115A8  C665  F5E8         	movff	f_write@cc,disk_write@count
 24126   0115AC  C666  F5E9         	movff	f_write@cc+1,disk_write@count+1
 24127   0115B0  EE20 F001          	lfsr	2,1
 24128   0115B4  5171               	movf	f_write@fs& (0+255),w,b
 24129   0115B6  26D9               	addwf	fsr2l,f,c
 24130   0115B8  5172               	movf	(f_write@fs+1)& (0+255),w,b
 24131   0115BA  22DA               	addwfc	fsr2h,f,c
 24132   0115BC  50DF               	movf	indf2,w,c
 24133   0115BE  EC0F  F0C9         	call	_disk_write
 24134   0115C2  0900               	iorlw	0
 24135   0115C4  A4D8               	btfss	status,2,c
 24136   0115C6  D0B4               	goto	u15150
 24137                           
 24138                           ; BSR set to: 5
 24139                           ;fatfs/ff.c: 4088:     if (fp->sect - sect < cc) {
 24140                           
 24141                           ; BSR set to: 5
 24142   0115C8  0106               	movlb	6	; () banked
 24143   0115CA  5165               	movf	f_write@cc& (0+255),w,b
 24144   0115CC  6F50               	movwf	??_f_write& (0+255),b
 24145   0115CE  5166               	movf	(f_write@cc+1)& (0+255),w,b
 24146   0115D0  6F51               	movwf	(??_f_write+1)& (0+255),b
 24147   0115D2  6B52               	clrf	(??_f_write+2)& (0+255),b
 24148   0115D4  6B53               	clrf	(??_f_write+3)& (0+255),b
 24149   0115D6  EE20 F018          	lfsr	2,24
 24150   0115DA  5148               	movf	f_write@fp& (0+255),w,b
 24151   0115DC  26D9               	addwf	fsr2l,f,c
 24152   0115DE  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24153   0115E0  22DA               	addwfc	fsr2h,f,c
 24154   0115E2  C4DE F654          	movff	postinc2,??_f_write+4
 24155   0115E6  C4DE F655          	movff	postinc2,??_f_write+5
 24156   0115EA  C4DE F656          	movff	postinc2,??_f_write+6
 24157   0115EE  C4DE F657          	movff	postinc2,??_f_write+7
 24158   0115F2  516D               	movf	f_write@sect& (0+255),w,b
 24159   0115F4  5D54               	subwf	(??_f_write+4)& (0+255),w,b
 24160   0115F6  6F58               	movwf	(??_f_write+8)& (0+255),b
 24161   0115F8  516E               	movf	(f_write@sect+1)& (0+255),w,b
 24162   0115FA  5955               	subwfb	(??_f_write+5)& (0+255),w,b
 24163   0115FC  6F59               	movwf	(??_f_write+9)& (0+255),b
 24164   0115FE  516F               	movf	(f_write@sect+2)& (0+255),w,b
 24165   011600  5956               	subwfb	(??_f_write+6)& (0+255),w,b
 24166   011602  6F5A               	movwf	(??_f_write+10)& (0+255),b
 24167   011604  5170               	movf	(f_write@sect+3)& (0+255),w,b
 24168   011606  5957               	subwfb	(??_f_write+7)& (0+255),w,b
 24169   011608  6F5B               	movwf	(??_f_write+11)& (0+255),b
 24170   01160A  5150               	movf	??_f_write& (0+255),w,b
 24171   01160C  5D58               	subwf	(??_f_write+8)& (0+255),w,b
 24172   01160E  5151               	movf	(??_f_write+1)& (0+255),w,b
 24173   011610  5959               	subwfb	(??_f_write+9)& (0+255),w,b
 24174   011612  5152               	movf	(??_f_write+2)& (0+255),w,b
 24175   011614  595A               	subwfb	(??_f_write+10)& (0+255),w,b
 24176   011616  5153               	movf	(??_f_write+3)& (0+255),w,b
 24177   011618  595B               	subwfb	(??_f_write+11)& (0+255),w,b
 24178   01161A  B0D8               	btfsc	status,0,c
 24179   01161C  D02F               	goto	l11871
 24180                           
 24181                           ; BSR set to: 6
 24182                           ;fatfs/ff.c: 4089:      memcpy(fp->buf, wbuff + ((fp->sect - sect) * ((UINT)512)), ((UIN
      +                          T)512));
 24183   01161E  0E22               	movlw	34
 24184   011620  2548               	addwf	f_write@fp& (0+255),w,b
 24185   011622  6E01               	movwf	memcpy@d1^(0+1280),c
 24186   011624  0E00               	movlw	0
 24187   011626  2149               	addwfc	(f_write@fp+1)& (0+255),w,b
 24188   011628  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
 24189   01162A  EE20 F018          	lfsr	2,24
 24190   01162E  5148               	movf	f_write@fp& (0+255),w,b
 24191   011630  26D9               	addwf	fsr2l,f,c
 24192   011632  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24193   011634  22DA               	addwfc	fsr2h,f,c
 24194   011636  C4DE F650          	movff	postinc2,??_f_write
 24195   01163A  C4DD F651          	movff	postdec2,??_f_write+1
 24196   01163E  516D               	movf	f_write@sect& (0+255),w,b
 24197   011640  5F50               	subwf	??_f_write& (0+255),f,b
 24198   011642  516E               	movf	(f_write@sect+1)& (0+255),w,b
 24199   011644  5B51               	subwfb	(??_f_write+1)& (0+255),f,b
 24200   011646  0E09               	movlw	9
 24201   011648                     u15115:
 24202   011648  90D8               	bcf	status,0,c
 24203   01164A  3750               	rlcf	??_f_write& (0+255),f,b
 24204   01164C  3751               	rlcf	(??_f_write+1)& (0+255),f,b
 24205   01164E  2EE8               	decfsz	wreg,f,c
 24206   011650  D7FB               	goto	u15115
 24207   011652  5150               	movf	??_f_write& (0+255),w,b
 24208   011654  2561               	addwf	f_write@wbuff& (0+255),w,b
 24209   011656  6E03               	movwf	memcpy@s1^(0+1280),c
 24210   011658  5151               	movf	(??_f_write+1)& (0+255),w,b
 24211   01165A  2162               	addwfc	(f_write@wbuff+1)& (0+255),w,b
 24212   01165C  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
 24213   01165E  0E02               	movlw	2
 24214   011660  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 24215   011662  0E00               	movlw	0
 24216   011664  6E05               	movwf	memcpy@n^(0+1280),c
 24217   011666  ECAD  F0CD         	call	_memcpy	;wreg free
 24218                           
 24219                           ;fatfs/ff.c: 4090:      fp->flag &= (BYTE)~0x80;
 24220   01166A  0106               	movlb	6	; () banked
 24221   01166C  EE20 F00E          	lfsr	2,14
 24222   011670  5148               	movf	f_write@fp& (0+255),w,b
 24223   011672  26D9               	addwf	fsr2l,f,c
 24224   011674  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24225   011676  22DA               	addwfc	fsr2h,f,c
 24226   011678  0E7F               	movlw	127
 24227   01167A  16DF               	andwf	indf2,f,c
 24228   01167C                     l11871:
 24229                           
 24230                           ; BSR set to: 6
 24231                           ;fatfs/ff.c: 4094:     wcnt = ((UINT)512) * cc;
 24232   01167C  C665  F650         	movff	f_write@cc,??_f_write
 24233   011680  C666  F651         	movff	f_write@cc+1,??_f_write+1
 24234   011684  0E09               	movlw	9
 24235   011686                     u15125:
 24236   011686  90D8               	bcf	status,0,c
 24237   011688  3750               	rlcf	??_f_write& (0+255),f,b
 24238   01168A  3751               	rlcf	(??_f_write+1)& (0+255),f,b
 24239   01168C  2EE8               	decfsz	wreg,f,c
 24240   01168E  D7FB               	goto	u15125
 24241   011690  C650  F66B         	movff	??_f_write,f_write@wcnt
 24242   011694  C651  F66C         	movff	??_f_write+1,f_write@wcnt+1
 24243                           
 24244                           ;fatfs/ff.c: 4095:     continue;
 24245   011698  D0AD               	goto	l11895
 24246   01169A                     l11873:
 24247                           
 24248                           ; BSR set to: 6
 24249                           ;fatfs/ff.c: 4103:    if (fp->sect != sect &&
 24250   01169A  EE20 F018          	lfsr	2,24
 24251   01169E  5148               	movf	f_write@fp& (0+255),w,b
 24252   0116A0  26D9               	addwf	fsr2l,f,c
 24253   0116A2  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24254   0116A4  22DA               	addwfc	fsr2h,f,c
 24255   0116A6  516D               	movf	f_write@sect& (0+255),w,b
 24256   0116A8  18DE               	xorwf	postinc2,w,c
 24257   0116AA  E10A               	bnz	u15130
 24258   0116AC  516E               	movf	(f_write@sect+1)& (0+255),w,b
 24259   0116AE  18DE               	xorwf	postinc2,w,c
 24260   0116B0  E107               	bnz	u15130
 24261   0116B2  516F               	movf	(f_write@sect+2)& (0+255),w,b
 24262   0116B4  18DE               	xorwf	postinc2,w,c
 24263   0116B6  E104               	bnz	u15130
 24264   0116B8  5170               	movf	(f_write@sect+3)& (0+255),w,b
 24265   0116BA  18DE               	xorwf	postinc2,w,c
 24266   0116BC  B4D8               	btfsc	status,2,c
 24267   0116BE  D03A               	goto	l11885
 24268   0116C0                     u15130:
 24269                           
 24270                           ; BSR set to: 6
 24271   0116C0  EE20 F00A          	lfsr	2,10
 24272   0116C4  5148               	movf	f_write@fp& (0+255),w,b
 24273   0116C6  26D9               	addwf	fsr2l,f,c
 24274   0116C8  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24275   0116CA  22DA               	addwfc	fsr2h,f,c
 24276   0116CC  EE10 F010          	lfsr	1,16
 24277   0116D0  5148               	movf	f_write@fp& (0+255),w,b
 24278   0116D2  26E1               	addwf	fsr1l,f,c
 24279   0116D4  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24280   0116D6  22E2               	addwfc	fsr1h,f,c
 24281   0116D8  50DE               	movf	postinc2,w,c
 24282   0116DA  5CE6               	subwf	postinc1,w,c
 24283   0116DC  50DE               	movf	postinc2,w,c
 24284   0116DE  58E6               	subwfb	postinc1,w,c
 24285   0116E0  50DE               	movf	postinc2,w,c
 24286   0116E2  58E6               	subwfb	postinc1,w,c
 24287   0116E4  50DE               	movf	postinc2,w,c
 24288   0116E6  58E6               	subwfb	postinc1,w,c
 24289   0116E8  B0D8               	btfsc	status,0,c
 24290   0116EA  D024               	goto	l11885
 24291                           
 24292                           ; BSR set to: 6
 24293   0116EC  0E22               	movlw	34
 24294   0116EE  2548               	addwf	f_write@fp& (0+255),w,b
 24295   0116F0  0105               	movlb	5	; () banked
 24296   0116F2  6FE4               	movwf	disk_read@buff& (0+255),b
 24297   0116F4  0E00               	movlw	0
 24298   0116F6  0106               	movlb	6	; () banked
 24299   0116F8  2149               	addwfc	(f_write@fp+1)& (0+255),w,b
 24300   0116FA  0105               	movlb	5	; () banked
 24301   0116FC  6FE5               	movwf	(disk_read@buff+1)& (0+255),b
 24302   0116FE  C66D  F5E6         	movff	f_write@sect,disk_read@sector
 24303   011702  C66E  F5E7         	movff	f_write@sect+1,disk_read@sector+1
 24304   011706  C66F  F5E8         	movff	f_write@sect+2,disk_read@sector+2
 24305   01170A  C670  F5E9         	movff	f_write@sect+3,disk_read@sector+3
 24306   01170E  0E00               	movlw	0
 24307   011710  6FEB               	movwf	(disk_read@count+1)& (0+255),b
 24308   011712  0E01               	movlw	1
 24309   011714  6FEA               	movwf	disk_read@count& (0+255),b
 24310   011716  0106               	movlb	6	; () banked
 24311   011718  EE20 F001          	lfsr	2,1
 24312   01171C  5171               	movf	f_write@fs& (0+255),w,b
 24313   01171E  26D9               	addwf	fsr2l,f,c
 24314   011720  5172               	movf	(f_write@fs+1)& (0+255),w,b
 24315   011722  22DA               	addwfc	fsr2h,f,c
 24316   011724  50DF               	movf	indf2,w,c
 24317   011726  EC50  F0C9         	call	_disk_read
 24318   01172A  0900               	iorlw	0
 24319   01172C  B4D8               	btfsc	status,2,c
 24320   01172E  D002               	goto	l11885
 24321   011730                     u15150:
 24322                           
 24323                           ; BSR set to: 5
 24324                           ;fatfs/ff.c: 4105:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {;fatfs/ff.c: 41
      +                          06:      { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 24325   011730  0106               	movlb	6	; () banked
 24326   011732  D661               	goto	u15010
 24327   011734                     l11885:
 24328                           
 24329                           ;fatfs/ff.c: 4109:    fp->sect = sect;
 24330   011734  0106               	movlb	6	; () banked
 24331   011736  EE20 F018          	lfsr	2,24
 24332   01173A  5148               	movf	f_write@fp& (0+255),w,b
 24333   01173C  26D9               	addwf	fsr2l,f,c
 24334   01173E  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24335   011740  22DA               	addwfc	fsr2h,f,c
 24336   011742  C66D  F4DE         	movff	f_write@sect,postinc2
 24337   011746  C66E  F4DE         	movff	f_write@sect+1,postinc2
 24338   01174A  C66F  F4DE         	movff	f_write@sect+2,postinc2
 24339   01174E  C670  F4DE         	movff	f_write@sect+3,postinc2
 24340   011752                     l684:
 24341                           
 24342                           ; BSR set to: 6
 24343                           ;fatfs/ff.c: 4111:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
 24344   011752  EE20 F010          	lfsr	2,16
 24345   011756  5148               	movf	f_write@fp& (0+255),w,b
 24346   011758  26D9               	addwf	fsr2l,f,c
 24347   01175A  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24348   01175C  22DA               	addwfc	fsr2h,f,c
 24349   01175E  C4DE F650          	movff	postinc2,??_f_write
 24350   011762  C4DD F651          	movff	postdec2,??_f_write+1
 24351   011766  0EFF               	movlw	255
 24352   011768  1550               	andwf	??_f_write& (0+255),w,b
 24353   01176A  6F52               	movwf	(??_f_write+2)& (0+255),b
 24354   01176C  0E01               	movlw	1
 24355   01176E  1551               	andwf	(??_f_write+1)& (0+255),w,b
 24356   011770  6F53               	movwf	(??_f_write+3)& (0+255),b
 24357   011772  5152               	movf	(??_f_write+2)& (0+255),w,b
 24358   011774  0800               	sublw	0
 24359   011776  6F6B               	movwf	f_write@wcnt& (0+255),b
 24360   011778  5153               	movf	(??_f_write+3)& (0+255),w,b
 24361   01177A  A0D8               	btfss	status,0,c
 24362   01177C  2AE8               	incf	wreg,f,c
 24363   01177E  0802               	sublw	2
 24364   011780  6F6C               	movwf	(f_write@wcnt+1)& (0+255),b
 24365                           
 24366                           ; BSR set to: 6
 24367                           ;fatfs/ff.c: 4112:   if (wcnt > btw) wcnt = btw;
 24368   011782  516B               	movf	f_write@wcnt& (0+255),w,b
 24369   011784  5D4C               	subwf	f_write@btw& (0+255),w,b
 24370   011786  516C               	movf	(f_write@wcnt+1)& (0+255),w,b
 24371   011788  594D               	subwfb	(f_write@btw+1)& (0+255),w,b
 24372   01178A  B0D8               	btfsc	status,0,c
 24373   01178C  D004               	goto	l11891
 24374                           
 24375                           ; BSR set to: 6
 24376   01178E  C64C  F66B         	movff	f_write@btw,f_write@wcnt
 24377   011792  C64D  F66C         	movff	f_write@btw+1,f_write@wcnt+1
 24378   011796                     l11891:
 24379                           
 24380                           ; BSR set to: 6
 24381                           ;fatfs/ff.c: 4118:   memcpy(fp->buf + fp->fptr % ((UINT)512), wbuff, wcnt);
 24382   011796  EE20 F010          	lfsr	2,16
 24383   01179A  5148               	movf	f_write@fp& (0+255),w,b
 24384   01179C  26D9               	addwf	fsr2l,f,c
 24385   01179E  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24386   0117A0  22DA               	addwfc	fsr2h,f,c
 24387   0117A2  C4DE F650          	movff	postinc2,??_f_write
 24388   0117A6  C4DD F651          	movff	postdec2,??_f_write+1
 24389   0117AA  0EFF               	movlw	255
 24390   0117AC  1550               	andwf	??_f_write& (0+255),w,b
 24391   0117AE  6F52               	movwf	(??_f_write+2)& (0+255),b
 24392   0117B0  0E01               	movlw	1
 24393   0117B2  1551               	andwf	(??_f_write+1)& (0+255),w,b
 24394   0117B4  6F53               	movwf	(??_f_write+3)& (0+255),b
 24395   0117B6  5152               	movf	(??_f_write+2)& (0+255),w,b
 24396   0117B8  2548               	addwf	f_write@fp& (0+255),w,b
 24397   0117BA  6F54               	movwf	(??_f_write+4)& (0+255),b
 24398   0117BC  5153               	movf	(??_f_write+3)& (0+255),w,b
 24399   0117BE  2149               	addwfc	(f_write@fp+1)& (0+255),w,b
 24400   0117C0  6F55               	movwf	(??_f_write+5)& (0+255),b
 24401   0117C2  0E22               	movlw	34
 24402   0117C4  2554               	addwf	(??_f_write+4)& (0+255),w,b
 24403   0117C6  6E01               	movwf	memcpy@d1^(0+1280),c
 24404   0117C8  0E00               	movlw	0
 24405   0117CA  2155               	addwfc	(??_f_write+5)& (0+255),w,b
 24406   0117CC  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
 24407   0117CE  C661  F503         	movff	f_write@wbuff,memcpy@s1
 24408   0117D2  C662  F504         	movff	f_write@wbuff+1,memcpy@s1+1
 24409   0117D6  C66B  F505         	movff	f_write@wcnt,memcpy@n
 24410   0117DA  C66C  F506         	movff	f_write@wcnt+1,memcpy@n+1
 24411   0117DE  ECAD  F0CD         	call	_memcpy	;wreg free
 24412                           
 24413                           ;fatfs/ff.c: 4119:   fp->flag |= 0x80;
 24414   0117E2  0106               	movlb	6	; () banked
 24415   0117E4  EE20 F00E          	lfsr	2,14
 24416   0117E8  5148               	movf	f_write@fp& (0+255),w,b
 24417   0117EA  26D9               	addwf	fsr2l,f,c
 24418   0117EC  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24419   0117EE  22DA               	addwfc	fsr2h,f,c
 24420   0117F0  0E00               	movlw	0
 24421   0117F2  8EDB               	bsf	plusw2,7,c
 24422   0117F4                     l11895:
 24423                           
 24424                           ; BSR set to: 6
 24425   0117F4  516B               	movf	f_write@wcnt& (0+255),w,b
 24426   0117F6  5F4C               	subwf	f_write@btw& (0+255),f,b
 24427   0117F8  516C               	movf	(f_write@wcnt+1)& (0+255),w,b
 24428   0117FA  5B4D               	subwfb	(f_write@btw+1)& (0+255),f,b
 24429                           
 24430                           ; BSR set to: 6
 24431   0117FC  C64E  F4D9         	movff	f_write@bw,fsr2l
 24432   011800  C64F  F4DA         	movff	f_write@bw+1,fsr2h
 24433   011804  516B               	movf	f_write@wcnt& (0+255),w,b
 24434   011806  26DE               	addwf	postinc2,f,c
 24435   011808  516C               	movf	(f_write@wcnt+1)& (0+255),w,b
 24436   01180A  22DD               	addwfc	postdec2,f,c
 24437                           
 24438                           ; BSR set to: 6
 24439   01180C  516B               	movf	f_write@wcnt& (0+255),w,b
 24440   01180E  2761               	addwf	f_write@wbuff& (0+255),f,b
 24441   011810  516C               	movf	(f_write@wcnt+1)& (0+255),w,b
 24442   011812  2362               	addwfc	(f_write@wbuff+1)& (0+255),f,b
 24443                           
 24444                           ; BSR set to: 6
 24445   011814  EE20 F010          	lfsr	2,16
 24446   011818  5148               	movf	f_write@fp& (0+255),w,b
 24447   01181A  26D9               	addwf	fsr2l,f,c
 24448   01181C  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24449   01181E  22DA               	addwfc	fsr2h,f,c
 24450   011820  516B               	movf	f_write@wcnt& (0+255),w,b
 24451   011822  26DE               	addwf	postinc2,f,c
 24452   011824  516C               	movf	(f_write@wcnt+1)& (0+255),w,b
 24453   011826  22DE               	addwfc	postinc2,f,c
 24454   011828  0E00               	movlw	0
 24455   01182A  22DE               	addwfc	postinc2,f,c
 24456   01182C  22DE               	addwfc	postinc2,f,c
 24457                           
 24458                           ; BSR set to: 6
 24459   01182E  EE20 F010          	lfsr	2,16
 24460   011832  5148               	movf	f_write@fp& (0+255),w,b
 24461   011834  26D9               	addwf	fsr2l,f,c
 24462   011836  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24463   011838  22DA               	addwfc	fsr2h,f,c
 24464   01183A  EE10 F00A          	lfsr	1,10
 24465   01183E  5148               	movf	f_write@fp& (0+255),w,b
 24466   011840  26E1               	addwf	fsr1l,f,c
 24467   011842  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24468   011844  22E2               	addwfc	fsr1h,f,c
 24469   011846  50DE               	movf	postinc2,w,c
 24470   011848  5CE6               	subwf	postinc1,w,c
 24471   01184A  50DE               	movf	postinc2,w,c
 24472   01184C  58E6               	subwfb	postinc1,w,c
 24473   01184E  50DE               	movf	postinc2,w,c
 24474   011850  58E6               	subwfb	postinc1,w,c
 24475   011852  50DE               	movf	postinc2,w,c
 24476   011854  58E6               	subwfb	postinc1,w,c
 24477   011856  A0D8               	btfss	status,0,c
 24478   011858  D003               	goto	l11907
 24479                           
 24480                           ; BSR set to: 6
 24481   01185A  EE20 F00A          	lfsr	2,10
 24482   01185E  D002               	goto	L10
 24483   011860                     l11907:
 24484                           
 24485                           ; BSR set to: 6
 24486   011860  EE20 F010          	lfsr	2,16
 24487   011864                     L10:
 24488   011864  5148               	movf	f_write@fp& (0+255),w,b
 24489   011866  26D9               	addwf	fsr2l,f,c
 24490   011868  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24491   01186A  22DA               	addwfc	fsr2h,f,c
 24492   01186C  C4DE F65C          	movff	postinc2,_f_write$1360
 24493   011870  C4DE F65D          	movff	postinc2,_f_write$1360+1
 24494   011874  C4DE F65E          	movff	postinc2,_f_write$1360+2
 24495   011878  C4DE F65F          	movff	postinc2,_f_write$1360+3
 24496                           
 24497                           ; BSR set to: 6
 24498   01187C  EE20 F00A          	lfsr	2,10
 24499   011880  5148               	movf	f_write@fp& (0+255),w,b
 24500   011882  26D9               	addwf	fsr2l,f,c
 24501   011884  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24502   011886  22DA               	addwfc	fsr2h,f,c
 24503   011888  C65C  F4DE         	movff	_f_write$1360,postinc2
 24504   01188C  C65D  F4DE         	movff	_f_write$1360+1,postinc2
 24505   011890  C65E  F4DE         	movff	_f_write$1360+2,postinc2
 24506   011894  C65F  F4DE         	movff	_f_write$1360+3,postinc2
 24507   011898  D4F7               	goto	l11783
 24508   01189A                     l11911:
 24509                           
 24510                           ; BSR set to: 6
 24511                           ;fatfs/ff.c: 4123:  fp->flag |= 0x40;
 24512   01189A  EE20 F00E          	lfsr	2,14
 24513   01189E  5148               	movf	f_write@fp& (0+255),w,b
 24514   0118A0  26D9               	addwf	fsr2l,f,c
 24515   0118A2  5149               	movf	(f_write@fp+1)& (0+255),w,b
 24516   0118A4  22DA               	addwfc	fsr2h,f,c
 24517   0118A6  0E00               	movlw	0
 24518   0118A8  8CDB               	bsf	plusw2,6,c
 24519                           
 24520                           ; BSR set to: 6
 24521                           ;fatfs/ff.c: 4125:  return FR_OK;
 24522   0118AA  0E00               	movlw	0
 24523                           
 24524                           ; BSR set to: 6
 24525   0118AC  0012               	return		;funcret
 24526   0118AE                     __end_of_f_write:
 24527                           	callstack 0
 24528                           
 24529 ;; *************** function _f_sync *****************
 24530 ;; Defined at:
 24531 ;;		line 4135 in file "fatfs/ff.c"
 24532 ;; Parameters:    Size  Location     Type
 24533 ;;  fp              2   10[BANK6 ] PTR struct .
 24534 ;;		 -> files(3276), 
 24535 ;; Auto vars:     Size  Location     Type
 24536 ;;  tm              4   12[BANK6 ] unsigned long 
 24537 ;;  fs              2   19[BANK6 ] PTR struct .
 24538 ;;		 -> fs(560), NULL(0), 
 24539 ;;  dir             2   17[BANK6 ] PTR unsigned char 
 24540 ;;		 -> fs(560), NULL(0), 
 24541 ;;  res             1   16[BANK6 ] enum E275
 24542 ;; Return value:  Size  Location     Type
 24543 ;;                  1    wreg      enum E275
 24544 ;; Registers used:
 24545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24546 ;; Tracked objects:
 24547 ;;		On entry : 3F/6
 24548 ;;		On exit  : 3C/4
 24549 ;;		Unchanged: 0/0
 24550 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24551 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24552 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24554 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24555 ;;Total ram usage:       11 bytes
 24556 ;; Hardware stack levels used: 1
 24557 ;; Hardware stack levels required when called: 13
 24558 ;; This function calls:
 24559 ;;		_disk_write
 24560 ;;		_get_fattime
 24561 ;;		_move_window
 24562 ;;		_st_clust
 24563 ;;		_st_dword
 24564 ;;		_st_word
 24565 ;;		_sync_fs
 24566 ;;		_validate
 24567 ;; This function is called by:
 24568 ;;		_disk_io_handle
 24569 ;; This function uses a non-reentrant model
 24570 ;;
 24571                           
 24572                           	psect	text41
 24573   016234                     __ptext41:
 24574                           	callstack 0
 24575   016234                     _f_sync:
 24576                           	callstack 112
 24577                           
 24578                           ; BSR set to: 6
 24579                           ;fatfs/ff.c: 4136:  FIL* fp;fatfs/ff.c: 4138: {;fatfs/ff.c: 4139:  FRESULT res;;fatfs/ff
      +                          .c: 4140:  FATFS *fs;;fatfs/ff.c: 4141:  DWORD tm;;fatfs/ff.c: 4142:  BYTE *dir;;fatfs/f
      +                          f.c: 4145:  res = validate(&fp->obj, &fs);
 24580                           
 24581                           ; BSR set to: 6
 24582                           ;incstack = 0
 24583   016234  C60A  F5A6         	movff	f_sync@fp,validate@obj
 24584   016238  C60B  F5A7         	movff	f_sync@fp+1,validate@obj+1
 24585   01623C  0E13               	movlw	low f_sync@fs
 24586   01623E  0105               	movlb	5	; () banked
 24587   016240  6FA8               	movwf	validate@rfs& (0+255),b
 24588   016242  0E06               	movlw	high f_sync@fs
 24589   016244  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 24590   016246  EC59  F0C3         	call	_validate	;wreg free
 24591   01624A  0106               	movlb	6	; () banked
 24592   01624C  6F10               	movwf	f_sync@res& (0+255),b
 24593                           
 24594                           ; BSR set to: 6
 24595                           ;fatfs/ff.c: 4146:  if (res == FR_OK) {
 24596   01624E  5110               	movf	f_sync@res& (0+255),w,b
 24597   016250  A4D8               	btfss	status,2,c
 24598   016252  D0E2               	goto	l11953
 24599                           
 24600                           ; BSR set to: 6
 24601                           ;fatfs/ff.c: 4147:   if (fp->flag & 0x40) {
 24602   016254  EE20 F00E          	lfsr	2,14
 24603   016258  510A               	movf	f_sync@fp& (0+255),w,b
 24604   01625A  26D9               	addwf	fsr2l,f,c
 24605   01625C  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24606   01625E  22DA               	addwfc	fsr2h,f,c
 24607   016260  ACDF               	btfss	indf2,6,c
 24608   016262  D0DA               	goto	l11953
 24609                           
 24610                           ; BSR set to: 6
 24611                           ;fatfs/ff.c: 4149:    if (fp->flag & 0x80) {
 24612   016264  EE20 F00E          	lfsr	2,14
 24613   016268  510A               	movf	f_sync@fp& (0+255),w,b
 24614   01626A  26D9               	addwf	fsr2l,f,c
 24615   01626C  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24616   01626E  22DA               	addwfc	fsr2h,f,c
 24617   016270  AEDF               	btfss	indf2,7,c
 24618   016272  D035               	goto	l11933
 24619                           
 24620                           ; BSR set to: 6
 24621                           ;fatfs/ff.c: 4150:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) return 
      +                          FR_DISK_ERR;
 24622   016274  0E22               	movlw	34
 24623   016276  250A               	addwf	f_sync@fp& (0+255),w,b
 24624   016278  0105               	movlb	5	; () banked
 24625   01627A  6FE2               	movwf	disk_write@buff& (0+255),b
 24626   01627C  0E00               	movlw	0
 24627   01627E  0106               	movlb	6	; () banked
 24628   016280  210B               	addwfc	(f_sync@fp+1)& (0+255),w,b
 24629   016282  0105               	movlb	5	; () banked
 24630   016284  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 24631   016286  0106               	movlb	6	; () banked
 24632   016288  EE20 F018          	lfsr	2,24
 24633   01628C  510A               	movf	f_sync@fp& (0+255),w,b
 24634   01628E  26D9               	addwf	fsr2l,f,c
 24635   016290  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24636   016292  22DA               	addwfc	fsr2h,f,c
 24637   016294  C4DE F5E4          	movff	postinc2,disk_write@sector
 24638   016298  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 24639   01629C  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 24640   0162A0  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 24641   0162A4  0E00               	movlw	0
 24642   0162A6  0105               	movlb	5	; () banked
 24643   0162A8  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 24644   0162AA  0E01               	movlw	1
 24645   0162AC  6FE8               	movwf	disk_write@count& (0+255),b
 24646   0162AE  0106               	movlb	6	; () banked
 24647   0162B0  EE20 F001          	lfsr	2,1
 24648   0162B4  5113               	movf	f_sync@fs& (0+255),w,b
 24649   0162B6  26D9               	addwf	fsr2l,f,c
 24650   0162B8  5114               	movf	(f_sync@fs+1)& (0+255),w,b
 24651   0162BA  22DA               	addwfc	fsr2h,f,c
 24652   0162BC  50DF               	movf	indf2,w,c
 24653   0162BE  EC0F  F0C9         	call	_disk_write
 24654   0162C2  0900               	iorlw	0
 24655   0162C4  B4D8               	btfsc	status,2,c
 24656   0162C6  D002               	goto	l11931
 24657                           
 24658                           ; BSR set to: 5
 24659   0162C8  0E01               	movlw	1
 24660   0162CA  0012               	return	
 24661   0162CC                     l11931:
 24662                           
 24663                           ; BSR set to: 5
 24664                           ;fatfs/ff.c: 4151:     fp->flag &= (BYTE)~0x80;
 24665   0162CC  0106               	movlb	6	; () banked
 24666   0162CE  EE20 F00E          	lfsr	2,14
 24667   0162D2  510A               	movf	f_sync@fp& (0+255),w,b
 24668   0162D4  26D9               	addwf	fsr2l,f,c
 24669   0162D6  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24670   0162D8  22DA               	addwfc	fsr2h,f,c
 24671   0162DA  0E7F               	movlw	127
 24672   0162DC  16DF               	andwf	indf2,f,c
 24673   0162DE                     l11933:
 24674                           
 24675                           ; BSR set to: 6
 24676                           ;fatfs/ff.c: 4155:    tm = get_fattime();
 24677   0162DE  ECD5  F0CF         	call	_get_fattime	;wreg free
 24678   0162E2  C501  F60C         	movff	?_get_fattime,f_sync@tm
 24679   0162E6  C502  F60D         	movff	?_get_fattime+1,f_sync@tm+1
 24680   0162EA  C503  F60E         	movff	?_get_fattime+2,f_sync@tm+2
 24681   0162EE  C504  F60F         	movff	?_get_fattime+3,f_sync@tm+3
 24682                           
 24683                           ; BSR set to: 6
 24684                           ;fatfs/ff.c: 4187:    {;fatfs/ff.c: 4188:     res = move_window(fs, fp->dir_sect);
 24685   0162F2  C613  F600         	movff	f_sync@fs,move_window@fs
 24686   0162F6  C614  F601         	movff	f_sync@fs+1,move_window@fs+1
 24687   0162FA  EE20 F01C          	lfsr	2,28
 24688   0162FE  510A               	movf	f_sync@fp& (0+255),w,b
 24689   016300  26D9               	addwf	fsr2l,f,c
 24690   016302  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24691   016304  22DA               	addwfc	fsr2h,f,c
 24692   016306  C4DE F602          	movff	postinc2,move_window@sect
 24693   01630A  C4DE F603          	movff	postinc2,move_window@sect+1
 24694   01630E  C4DE F604          	movff	postinc2,move_window@sect+2
 24695   016312  C4DE F605          	movff	postinc2,move_window@sect+3
 24696   016316  EC1A  F0C4         	call	_move_window	;wreg free
 24697   01631A  0106               	movlb	6	; () banked
 24698   01631C  6F10               	movwf	f_sync@res& (0+255),b
 24699                           
 24700                           ; BSR set to: 6
 24701                           ;fatfs/ff.c: 4189:     if (res == FR_OK) {
 24702   01631E  5110               	movf	f_sync@res& (0+255),w,b
 24703   016320  A4D8               	btfss	status,2,c
 24704   016322  D07A               	goto	l11953
 24705                           
 24706                           ; BSR set to: 6
 24707                           ;fatfs/ff.c: 4190:      dir = fp->dir_ptr;
 24708   016324  EE20 F020          	lfsr	2,32
 24709   016328  510A               	movf	f_sync@fp& (0+255),w,b
 24710   01632A  26D9               	addwf	fsr2l,f,c
 24711   01632C  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24712   01632E  22DA               	addwfc	fsr2h,f,c
 24713   016330  C4DE F611          	movff	postinc2,f_sync@dir
 24714   016334  C4DD F612          	movff	postdec2,f_sync@dir+1
 24715                           
 24716                           ;fatfs/ff.c: 4191:      dir[11] |= 0x20;
 24717   016338  EE20 F00B          	lfsr	2,11
 24718   01633C  5111               	movf	f_sync@dir& (0+255),w,b
 24719   01633E  26D9               	addwf	fsr2l,f,c
 24720   016340  5112               	movf	(f_sync@dir+1)& (0+255),w,b
 24721   016342  22DA               	addwfc	fsr2h,f,c
 24722   016344  0E00               	movlw	0
 24723   016346  8ADB               	bsf	plusw2,5,c
 24724                           
 24725                           ; BSR set to: 6
 24726                           ;fatfs/ff.c: 4192:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 24727   016348  C60A  F4D9         	movff	f_sync@fp,fsr2l
 24728   01634C  C60B  F4DA         	movff	f_sync@fp+1,fsr2h
 24729   016350  C4DE F505          	movff	postinc2,st_clust@fs
 24730   016354  C4DD F506          	movff	postdec2,st_clust@fs+1
 24731   016358  C611  F507         	movff	f_sync@dir,st_clust@dir
 24732   01635C  C612  F508         	movff	f_sync@dir+1,st_clust@dir+1
 24733   016360  EE20 F006          	lfsr	2,6
 24734   016364  510A               	movf	f_sync@fp& (0+255),w,b
 24735   016366  26D9               	addwf	fsr2l,f,c
 24736   016368  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24737   01636A  22DA               	addwfc	fsr2h,f,c
 24738   01636C  C4DE F509          	movff	postinc2,st_clust@cl
 24739   016370  C4DE F50A          	movff	postinc2,st_clust@cl+1
 24740   016374  C4DE F50B          	movff	postinc2,st_clust@cl+2
 24741   016378  C4DE F50C          	movff	postinc2,st_clust@cl+3
 24742   01637C  ECF0  F0CD         	call	_st_clust	;wreg free
 24743                           
 24744                           ;fatfs/ff.c: 4193:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 24745   016380  0E1C               	movlw	28
 24746   016382  0106               	movlb	6	; () banked
 24747   016384  2511               	addwf	f_sync@dir& (0+255),w,b
 24748   016386  6E01               	movwf	st_dword@ptr^(0+1280),c
 24749   016388  0E00               	movlw	0
 24750   01638A  2112               	addwfc	(f_sync@dir+1)& (0+255),w,b
 24751   01638C  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24752   01638E  EE20 F00A          	lfsr	2,10
 24753   016392  510A               	movf	f_sync@fp& (0+255),w,b
 24754   016394  26D9               	addwf	fsr2l,f,c
 24755   016396  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24756   016398  22DA               	addwfc	fsr2h,f,c
 24757   01639A  C4DE F503          	movff	postinc2,st_dword@val
 24758   01639E  C4DE F504          	movff	postinc2,st_dword@val+1
 24759   0163A2  C4DE F505          	movff	postinc2,st_dword@val+2
 24760   0163A6  C4DE F506          	movff	postinc2,st_dword@val+3
 24761   0163AA  EC64  F0CB         	call	_st_dword	;wreg free
 24762                           
 24763                           ; BSR set to: 6
 24764                           ;fatfs/ff.c: 4194:      st_dword(dir + 22, tm);
 24765   0163AE  0E16               	movlw	22
 24766   0163B0  2511               	addwf	f_sync@dir& (0+255),w,b
 24767   0163B2  6E01               	movwf	st_dword@ptr^(0+1280),c
 24768   0163B4  0E00               	movlw	0
 24769   0163B6  2112               	addwfc	(f_sync@dir+1)& (0+255),w,b
 24770   0163B8  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24771   0163BA  C60C  F503         	movff	f_sync@tm,st_dword@val
 24772   0163BE  C60D  F504         	movff	f_sync@tm+1,st_dword@val+1
 24773   0163C2  C60E  F505         	movff	f_sync@tm+2,st_dword@val+2
 24774   0163C6  C60F  F506         	movff	f_sync@tm+3,st_dword@val+3
 24775   0163CA  EC64  F0CB         	call	_st_dword	;wreg free
 24776                           
 24777                           ; BSR set to: 6
 24778                           ;fatfs/ff.c: 4195:      st_word(dir + 18, 0);
 24779   0163CE  0E12               	movlw	18
 24780   0163D0  2511               	addwf	f_sync@dir& (0+255),w,b
 24781   0163D2  6E01               	movwf	st_word@ptr^(0+1280),c
 24782   0163D4  0E00               	movlw	0
 24783   0163D6  2112               	addwfc	(f_sync@dir+1)& (0+255),w,b
 24784   0163D8  6E02               	movwf	(st_word@ptr+1)^(0+1280),c
 24785   0163DA  0E00               	movlw	0
 24786   0163DC  6E04               	movwf	(st_word@val+1)^(0+1280),c
 24787   0163DE  0E00               	movlw	0
 24788   0163E0  6E03               	movwf	st_word@val^(0+1280),c
 24789   0163E2  EC27  F0CF         	call	_st_word	;wreg free
 24790                           
 24791                           ;fatfs/ff.c: 4196:      fs->wflag = 1;
 24792   0163E6  0106               	movlb	6	; () banked
 24793   0163E8  EE20 F004          	lfsr	2,4
 24794   0163EC  5113               	movf	f_sync@fs& (0+255),w,b
 24795   0163EE  26D9               	addwf	fsr2l,f,c
 24796   0163F0  5114               	movf	(f_sync@fs+1)& (0+255),w,b
 24797   0163F2  22DA               	addwfc	fsr2h,f,c
 24798   0163F4  0E01               	movlw	1
 24799   0163F6  6EDF               	movwf	indf2,c
 24800                           
 24801                           ; BSR set to: 6
 24802                           ;fatfs/ff.c: 4197:      res = sync_fs(fs);
 24803   0163F8  C613  F600         	movff	f_sync@fs,sync_fs@fs
 24804   0163FC  C614  F601         	movff	f_sync@fs+1,sync_fs@fs+1
 24805   016400  EC0E  F0B2         	call	_sync_fs	;wreg free
 24806   016404  0106               	movlb	6	; () banked
 24807   016406  6F10               	movwf	f_sync@res& (0+255),b
 24808                           
 24809                           ; BSR set to: 6
 24810                           ;fatfs/ff.c: 4198:      fp->flag &= (BYTE)~0x40;
 24811   016408  EE20 F00E          	lfsr	2,14
 24812   01640C  510A               	movf	f_sync@fp& (0+255),w,b
 24813   01640E  26D9               	addwf	fsr2l,f,c
 24814   016410  510B               	movf	(f_sync@fp+1)& (0+255),w,b
 24815   016412  22DA               	addwfc	fsr2h,f,c
 24816   016414  0EBF               	movlw	191
 24817   016416  16DF               	andwf	indf2,f,c
 24818   016418                     l11953:
 24819                           
 24820                           ; BSR set to: 6
 24821                           ;fatfs/ff.c: 4204:  return res;
 24822   016418  5110               	movf	f_sync@res& (0+255),w,b
 24823   01641A  0012               	return		;funcret
 24824   01641C                     __end_of_f_sync:
 24825                           	callstack 0
 24826                           
 24827 ;; *************** function _sync_fs *****************
 24828 ;; Defined at:
 24829 ;;		line 1108 in file "fatfs/ff.c"
 24830 ;; Parameters:    Size  Location     Type
 24831 ;;  fs              2    0[BANK6 ] PTR struct .
 24832 ;;		 -> fs(560), NULL(0), 
 24833 ;; Auto vars:     Size  Location     Type
 24834 ;;  res             1  159[BANK5 ] enum E275
 24835 ;; Return value:  Size  Location     Type
 24836 ;;                  1    wreg      enum E275
 24837 ;; Registers used:
 24838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24839 ;; Tracked objects:
 24840 ;;		On entry : 3F/6
 24841 ;;		On exit  : 3F/5
 24842 ;;		Unchanged: 0/0
 24843 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24844 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24846 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24847 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24848 ;;Total ram usage:       11 bytes
 24849 ;; Hardware stack levels used: 1
 24850 ;; Hardware stack levels required when called: 12
 24851 ;; This function calls:
 24852 ;;		_disk_ioctl
 24853 ;;		_disk_write
 24854 ;;		_memset
 24855 ;;		_st_dword
 24856 ;;		_st_word
 24857 ;;		_sync_window
 24858 ;; This function is called by:
 24859 ;;		_f_sync
 24860 ;; This function uses a non-reentrant model
 24861 ;;
 24862                           
 24863                           	psect	text42
 24864   01641C                     __ptext42:
 24865                           	callstack 0
 24866   01641C                     _sync_fs:
 24867                           	callstack 112
 24868                           
 24869                           ; BSR set to: 6
 24870                           ;fatfs/ff.c: 1109:  FATFS* fs;fatfs/ff.c: 1111: {;fatfs/ff.c: 1112:  FRESULT res;;fatfs/
      +                          ff.c: 1115:  res = sync_window(fs);
 24871                           
 24872                           ;incstack = 0
 24873   01641C  C600  F5ED         	movff	sync_fs@fs,sync_window@fs
 24874   016420  C601  F5EE         	movff	sync_fs@fs+1,sync_window@fs+1
 24875   016424  ECED  F0B7         	call	_sync_window	;wreg free
 24876   016428  6FFF               	movwf	sync_fs@res& (0+255),b
 24877                           
 24878                           ; BSR set to: 5
 24879                           ;fatfs/ff.c: 1116:  if (res == FR_OK) {
 24880   01642A  51FF               	movf	sync_fs@res& (0+255),w,b
 24881   01642C  A4D8               	btfss	status,2,c
 24882   01642E  D0E8               	goto	l216
 24883                           
 24884                           ; BSR set to: 5
 24885                           ;fatfs/ff.c: 1117:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 24886   016430  C600  F4D9         	movff	sync_fs@fs,fsr2l
 24887   016434  C601  F4DA         	movff	sync_fs@fs+1,fsr2h
 24888   016438  0E03               	movlw	3
 24889   01643A  18DE               	xorwf	postinc2,w,c
 24890   01643C  A4D8               	btfss	status,2,c
 24891   01643E  D0CA               	goto	l10889
 24892                           
 24893                           ; BSR set to: 5
 24894   016440  0106               	movlb	6	; () banked
 24895   016442  EE20 F005          	lfsr	2,5
 24896   016446  5100               	movf	sync_fs@fs& (0+255),w,b
 24897   016448  26D9               	addwf	fsr2l,f,c
 24898   01644A  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 24899   01644C  22DA               	addwfc	fsr2h,f,c
 24900   01644E  04DE               	decf	postinc2,w,c
 24901   016450  A4D8               	btfss	status,2,c
 24902   016452  D0C0               	goto	l10889
 24903                           
 24904                           ; BSR set to: 6
 24905                           ;fatfs/ff.c: 1119:    memset(fs->win, 0, sizeof fs->win);
 24906   016454  0E30               	movlw	48
 24907   016456  2500               	addwf	sync_fs@fs& (0+255),w,b
 24908   016458  6E01               	movwf	memset@dest^(0+1280),c
 24909   01645A  0E00               	movlw	0
 24910   01645C  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24911   01645E  6E02               	movwf	(memset@dest+1)^(0+1280),c
 24912   016460  0E00               	movlw	0
 24913   016462  6E04               	movwf	(memset@c+1)^(0+1280),c
 24914   016464  0E00               	movlw	0
 24915   016466  6E03               	movwf	memset@c^(0+1280),c
 24916   016468  0E02               	movlw	2
 24917   01646A  6E06               	movwf	(memset@n+1)^(0+1280),c
 24918   01646C  0E00               	movlw	0
 24919   01646E  6E05               	movwf	memset@n^(0+1280),c
 24920   016470  ECE7  F0CE         	call	_memset	;wreg free
 24921                           
 24922                           ;fatfs/ff.c: 1120:    st_word(fs->win + 510, 0xAA55);
 24923   016474  0E2E               	movlw	46
 24924   016476  2500               	addwf	sync_fs@fs& (0+255),w,b
 24925   016478  6E01               	movwf	st_word@ptr^(0+1280),c
 24926   01647A  0E02               	movlw	2
 24927   01647C  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24928   01647E  6E02               	movwf	(st_word@ptr+1)^(0+1280),c
 24929   016480  0EAA               	movlw	170
 24930   016482  6E04               	movwf	(st_word@val+1)^(0+1280),c
 24931   016484  0E55               	movlw	85
 24932   016486  6E03               	movwf	st_word@val^(0+1280),c
 24933   016488  EC27  F0CF         	call	_st_word	;wreg free
 24934                           
 24935                           ;fatfs/ff.c: 1121:    st_dword(fs->win + 0, 0x41615252);
 24936   01648C  0E30               	movlw	48
 24937   01648E  0106               	movlb	6	; () banked
 24938   016490  2500               	addwf	sync_fs@fs& (0+255),w,b
 24939   016492  6E01               	movwf	st_dword@ptr^(0+1280),c
 24940   016494  0E00               	movlw	0
 24941   016496  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24942   016498  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24943   01649A  0E52               	movlw	82
 24944   01649C  6E03               	movwf	st_dword@val^(0+1280),c
 24945   01649E  0E52               	movlw	82
 24946   0164A0  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 24947   0164A2  0E61               	movlw	97
 24948   0164A4  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 24949   0164A6  0E41               	movlw	65
 24950   0164A8  6E06               	movwf	(st_dword@val+3)^(0+1280),c
 24951   0164AA  EC64  F0CB         	call	_st_dword	;wreg free
 24952                           
 24953                           ;fatfs/ff.c: 1122:    st_dword(fs->win + 484, 0x61417272);
 24954   0164AE  0E14               	movlw	20
 24955   0164B0  2500               	addwf	sync_fs@fs& (0+255),w,b
 24956   0164B2  6E01               	movwf	st_dword@ptr^(0+1280),c
 24957   0164B4  0E02               	movlw	2
 24958   0164B6  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24959   0164B8  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24960   0164BA  0E72               	movlw	114
 24961   0164BC  6E03               	movwf	st_dword@val^(0+1280),c
 24962   0164BE  0E72               	movlw	114
 24963   0164C0  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 24964   0164C2  0E41               	movlw	65
 24965   0164C4  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 24966   0164C6  0E61               	movlw	97
 24967   0164C8  6E06               	movwf	(st_dword@val+3)^(0+1280),c
 24968   0164CA  EC64  F0CB         	call	_st_dword	;wreg free
 24969                           
 24970                           ;fatfs/ff.c: 1123:    st_dword(fs->win + 488, fs->free_clst);
 24971   0164CE  0E18               	movlw	24
 24972   0164D0  2500               	addwf	sync_fs@fs& (0+255),w,b
 24973   0164D2  6E01               	movwf	st_dword@ptr^(0+1280),c
 24974   0164D4  0E02               	movlw	2
 24975   0164D6  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24976   0164D8  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24977   0164DA  EE20 F010          	lfsr	2,16
 24978   0164DE  5100               	movf	sync_fs@fs& (0+255),w,b
 24979   0164E0  26D9               	addwf	fsr2l,f,c
 24980   0164E2  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 24981   0164E4  22DA               	addwfc	fsr2h,f,c
 24982   0164E6  C4DE F503          	movff	postinc2,st_dword@val
 24983   0164EA  C4DE F504          	movff	postinc2,st_dword@val+1
 24984   0164EE  C4DE F505          	movff	postinc2,st_dword@val+2
 24985   0164F2  C4DE F506          	movff	postinc2,st_dword@val+3
 24986   0164F6  EC64  F0CB         	call	_st_dword	;wreg free
 24987                           
 24988                           ;fatfs/ff.c: 1124:    st_dword(fs->win + 492, fs->last_clst);
 24989   0164FA  0E1C               	movlw	28
 24990   0164FC  2500               	addwf	sync_fs@fs& (0+255),w,b
 24991   0164FE  6E01               	movwf	st_dword@ptr^(0+1280),c
 24992   016500  0E02               	movlw	2
 24993   016502  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 24994   016504  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 24995   016506  EE20 F00C          	lfsr	2,12
 24996   01650A  5100               	movf	sync_fs@fs& (0+255),w,b
 24997   01650C  26D9               	addwf	fsr2l,f,c
 24998   01650E  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 24999   016510  22DA               	addwfc	fsr2h,f,c
 25000   016512  C4DE F503          	movff	postinc2,st_dword@val
 25001   016516  C4DE F504          	movff	postinc2,st_dword@val+1
 25002   01651A  C4DE F505          	movff	postinc2,st_dword@val+2
 25003   01651E  C4DE F506          	movff	postinc2,st_dword@val+3
 25004   016522  EC64  F0CB         	call	_st_dword	;wreg free
 25005                           
 25006                           ; BSR set to: 6
 25007                           ;fatfs/ff.c: 1125:    fs->winsect = fs->volbase + 1;
 25008   016526  EE20 F01C          	lfsr	2,28
 25009   01652A  5100               	movf	sync_fs@fs& (0+255),w,b
 25010   01652C  26D9               	addwf	fsr2l,f,c
 25011   01652E  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25012   016530  22DA               	addwfc	fsr2h,f,c
 25013   016532  C4DE F602          	movff	postinc2,??_sync_fs
 25014   016536  C4DE F603          	movff	postinc2,??_sync_fs+1
 25015   01653A  C4DE F604          	movff	postinc2,??_sync_fs+2
 25016   01653E  C4DE F605          	movff	postinc2,??_sync_fs+3
 25017   016542  0E01               	movlw	1
 25018   016544  2502               	addwf	??_sync_fs& (0+255),w,b
 25019   016546  6F06               	movwf	(??_sync_fs+4)& (0+255),b
 25020   016548  0E00               	movlw	0
 25021   01654A  2103               	addwfc	(??_sync_fs+1)& (0+255),w,b
 25022   01654C  6F07               	movwf	(??_sync_fs+5)& (0+255),b
 25023   01654E  0E00               	movlw	0
 25024   016550  2104               	addwfc	(??_sync_fs+2)& (0+255),w,b
 25025   016552  6F08               	movwf	(??_sync_fs+6)& (0+255),b
 25026   016554  0E00               	movlw	0
 25027   016556  2105               	addwfc	(??_sync_fs+3)& (0+255),w,b
 25028   016558  6F09               	movwf	(??_sync_fs+7)& (0+255),b
 25029   01655A  EE20 F02C          	lfsr	2,44
 25030   01655E  5100               	movf	sync_fs@fs& (0+255),w,b
 25031   016560  26D9               	addwf	fsr2l,f,c
 25032   016562  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25033   016564  22DA               	addwfc	fsr2h,f,c
 25034   016566  C606  F4DE         	movff	??_sync_fs+4,postinc2
 25035   01656A  C607  F4DE         	movff	??_sync_fs+5,postinc2
 25036   01656E  C608  F4DE         	movff	??_sync_fs+6,postinc2
 25037   016572  C609  F4DE         	movff	??_sync_fs+7,postinc2
 25038                           
 25039                           ; BSR set to: 6
 25040                           ;fatfs/ff.c: 1126:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 25041   016576  0E30               	movlw	48
 25042   016578  2500               	addwf	sync_fs@fs& (0+255),w,b
 25043   01657A  0105               	movlb	5	; () banked
 25044   01657C  6FE2               	movwf	disk_write@buff& (0+255),b
 25045   01657E  0E00               	movlw	0
 25046   016580  0106               	movlb	6	; () banked
 25047   016582  2101               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 25048   016584  0105               	movlb	5	; () banked
 25049   016586  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 25050   016588  0106               	movlb	6	; () banked
 25051   01658A  EE20 F02C          	lfsr	2,44
 25052   01658E  5100               	movf	sync_fs@fs& (0+255),w,b
 25053   016590  26D9               	addwf	fsr2l,f,c
 25054   016592  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25055   016594  22DA               	addwfc	fsr2h,f,c
 25056   016596  C4DE F5E4          	movff	postinc2,disk_write@sector
 25057   01659A  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 25058   01659E  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 25059   0165A2  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 25060   0165A6  0E00               	movlw	0
 25061   0165A8  0105               	movlb	5	; () banked
 25062   0165AA  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 25063   0165AC  0E01               	movlw	1
 25064   0165AE  6FE8               	movwf	disk_write@count& (0+255),b
 25065   0165B0  0106               	movlb	6	; () banked
 25066   0165B2  EE20 F001          	lfsr	2,1
 25067   0165B6  5100               	movf	sync_fs@fs& (0+255),w,b
 25068   0165B8  26D9               	addwf	fsr2l,f,c
 25069   0165BA  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25070   0165BC  22DA               	addwfc	fsr2h,f,c
 25071   0165BE  50DF               	movf	indf2,w,c
 25072   0165C0  EC0F  F0C9         	call	_disk_write
 25073                           
 25074                           ;fatfs/ff.c: 1127:    fs->fsi_flag = 0;
 25075   0165C4  0106               	movlb	6	; () banked
 25076   0165C6  EE20 F005          	lfsr	2,5
 25077   0165CA  5100               	movf	sync_fs@fs& (0+255),w,b
 25078   0165CC  26D9               	addwf	fsr2l,f,c
 25079   0165CE  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25080   0165D0  22DA               	addwfc	fsr2h,f,c
 25081   0165D2  6ADF               	clrf	indf2,c
 25082   0165D4                     l10889:
 25083                           
 25084                           ;fatfs/ff.c: 1130:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res = FR_DISK_ERR;
 25085   0165D4  0E00               	movlw	0
 25086   0165D6  0105               	movlb	5	; () banked
 25087   0165D8  6FA6               	movwf	disk_ioctl@cmd& (0+255),b
 25088   0165DA  0E00               	movlw	0
 25089   0165DC  6FA7               	movwf	disk_ioctl@buff& (0+255),b
 25090   0165DE  0E00               	movlw	0
 25091   0165E0  6FA8               	movwf	(disk_ioctl@buff+1)& (0+255),b
 25092   0165E2  0106               	movlb	6	; () banked
 25093   0165E4  EE20 F001          	lfsr	2,1
 25094   0165E8  5100               	movf	sync_fs@fs& (0+255),w,b
 25095   0165EA  26D9               	addwf	fsr2l,f,c
 25096   0165EC  5101               	movf	(sync_fs@fs+1)& (0+255),w,b
 25097   0165EE  22DA               	addwfc	fsr2h,f,c
 25098   0165F0  50DF               	movf	indf2,w,c
 25099   0165F2  ECAD  F0CC         	call	_disk_ioctl
 25100   0165F6  0900               	iorlw	0
 25101   0165F8  B4D8               	btfsc	status,2,c
 25102   0165FA  D002               	goto	l216
 25103                           
 25104                           ; BSR set to: 5
 25105   0165FC  0E01               	movlw	1
 25106   0165FE  6FFF               	movwf	sync_fs@res& (0+255),b
 25107   016600                     l216:
 25108                           
 25109                           ; BSR set to: 5
 25110                           ;fatfs/ff.c: 1133:  return res;
 25111   016600  51FF               	movf	sync_fs@res& (0+255),w,b
 25112                           
 25113                           ; BSR set to: 5
 25114   016602  0012               	return		;funcret
 25115   016604                     __end_of_sync_fs:
 25116                           	callstack 0
 25117                           
 25118 ;; *************** function _memset *****************
 25119 ;; Defined at:
 25120 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
 25121 ;; Parameters:    Size  Location     Type
 25122 ;;  dest            2    0[COMRAM] PTR void 
 25123 ;;		 -> djn$fn(12), fsdir$fn(12), fs(560), files(3276), 
 25124 ;;		 -> fsdir(40), f_rename@djn(40), djo$fn(12), f_rename@djo(40), 
 25125 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), dj$fn(12), 
 25126 ;;		 -> f_open@dj(40), NULL(0), 
 25127 ;;  c               2    2[COMRAM] int 
 25128 ;;  n               2    4[COMRAM] unsigned int 
 25129 ;; Auto vars:     Size  Location     Type
 25130 ;;  p               2    6[COMRAM] PTR unsigned char 
 25131 ;;		 -> djn$fn(12), fsdir$fn(12), fs(560), files(3276), 
 25132 ;;		 -> fsdir(40), f_rename@djn(40), djo$fn(12), f_rename@djo(40), 
 25133 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), dj$fn(12), 
 25134 ;;		 -> f_open@dj(40), NULL(0), 
 25135 ;; Return value:  Size  Location     Type
 25136 ;;                  2    0[COMRAM] PTR void 
 25137 ;; Registers used:
 25138 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25139 ;; Tracked objects:
 25140 ;;		On entry : 3F/6
 25141 ;;		On exit  : 3F/6
 25142 ;;		Unchanged: 3F/0
 25143 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25144 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25145 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25147 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25148 ;;Total ram usage:        8 bytes
 25149 ;; Hardware stack levels used: 1
 25150 ;; This function calls:
 25151 ;;		Nothing
 25152 ;; This function is called by:
 25153 ;;		_sync_fs
 25154 ;;		_dir_clear
 25155 ;;		_dir_register
 25156 ;;		_create_name
 25157 ;;		_f_open
 25158 ;; This function uses a non-reentrant model
 25159 ;;
 25160                           
 25161                           	psect	text43
 25162   019DCE                     __ptext43:
 25163                           	callstack 0
 25164   019DCE                     _memset:
 25165                           	callstack 121
 25166                           
 25167                           ; BSR set to: 6
 25168                           
 25169                           ; BSR set to: 5
 25170                           ;incstack = 0
 25171   019DCE  C501  F507         	movff	memset@dest,memset@p
 25172   019DD2  C502  F508         	movff	memset@dest+1,memset@p+1
 25173   019DD6  D008               	goto	l9857
 25174   019DD8                     l9853:
 25175                           
 25176                           ; BSR set to: 6
 25177   019DD8  C507  F4D9         	movff	memset@p,fsr2l
 25178   019DDC  C508  F4DA         	movff	memset@p+1,fsr2h
 25179   019DE0  C503  F4DF         	movff	memset@c,indf2
 25180                           
 25181                           ; BSR set to: 6
 25182   019DE4  4A07               	infsnz	memset@p^(0+1280),f,c
 25183   019DE6  2A08               	incf	(memset@p+1)^(0+1280),f,c
 25184   019DE8                     l9857:
 25185                           
 25186                           ; BSR set to: 6
 25187   019DE8  0605               	decf	memset@n^(0+1280),f,c
 25188   019DEA  A0D8               	btfss	status,0,c
 25189   019DEC  0606               	decf	(memset@n+1)^(0+1280),f,c
 25190   019DEE  2805               	incf	memset@n^(0+1280),w,c
 25191   019DF0  E1F3               	bnz	l9853
 25192   019DF2  2806               	incf	(memset@n+1)^(0+1280),w,c
 25193   019DF4  B4D8               	btfsc	status,2,c
 25194   019DF6  0012               	return	
 25195   019DF8  D7EF               	goto	l9853
 25196   019DFA                     __end_of_memset:
 25197                           	callstack 0
 25198                           
 25199 ;; *************** function _disk_ioctl *****************
 25200 ;; Defined at:
 25201 ;;		line 149 in file "drivers/diskio.c"
 25202 ;; Parameters:    Size  Location     Type
 25203 ;;  pdrv            1    wreg     unsigned char 
 25204 ;;  cmd             1   70[BANK5 ] unsigned char 
 25205 ;;  buff            2   71[BANK5 ] PTR void 
 25206 ;;		 -> NULL(0), 
 25207 ;; Auto vars:     Size  Location     Type
 25208 ;;  pdrv            1   73[BANK5 ] unsigned char 
 25209 ;;  res             1   74[BANK5 ] enum E17647
 25210 ;; Return value:  Size  Location     Type
 25211 ;;                  1    wreg      enum E17647
 25212 ;; Registers used:
 25213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25214 ;; Tracked objects:
 25215 ;;		On entry : 3F/6
 25216 ;;		On exit  : 3F/5
 25217 ;;		Unchanged: 0/0
 25218 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25219 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25220 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25222 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25223 ;;Total ram usage:        5 bytes
 25224 ;; Hardware stack levels used: 1
 25225 ;; Hardware stack levels required when called: 8
 25226 ;; This function calls:
 25227 ;;		_printf
 25228 ;; This function is called by:
 25229 ;;		_sync_fs
 25230 ;; This function uses a non-reentrant model
 25231 ;;
 25232                           
 25233                           	psect	text44
 25234   01995A                     __ptext44:
 25235                           	callstack 0
 25236   01995A                     _disk_ioctl:
 25237                           	callstack 115
 25238                           
 25239                           ; BSR set to: 6
 25240                           ;incstack = 0
 25241                           ;disk_ioctl@pdrv stored from wreg
 25242   01995A  0105               	movlb	5	; () banked
 25243   01995C  6FA9               	movwf	disk_ioctl@pdrv& (0+255),b
 25244                           
 25245                           ;drivers/diskio.c: 149: DRESULT disk_ioctl(BYTE pdrv, BYTE cmd, void* buff);drivers/disk
      +                          io.c: 150: {;drivers/diskio.c: 151:     DRESULT res = RES_ERROR;
 25246   01995E  0E01               	movlw	1
 25247   019960  0105               	movlb	5	; () banked
 25248   019962  6FAA               	movwf	disk_ioctl@res& (0+255),b
 25249                           
 25250                           ;drivers/diskio.c: 154:     switch (cmd) {
 25251   019964  D010               	goto	l10563
 25252   019966                     l10557:
 25253                           
 25254                           ; BSR set to: 5
 25255                           ;drivers/diskio.c: 156:         res = RES_OK;
 25256   019966  0E00               	movlw	0
 25257   019968  6FAA               	movwf	disk_ioctl@res& (0+255),b
 25258                           
 25259                           ;drivers/diskio.c: 157:         break;
 25260   01996A  D01C               	goto	l10567
 25261   01996C                     l97:
 25262                           
 25263                           ; BSR set to: 5
 25264                           ;drivers/diskio.c: 163:         printf("disk_ioctl: pdrv=%d, cmd=%d: Not handled.\n\r", 
      +                          pdrv, cmd);
 25265                           
 25266                           ; BSR set to: 5
 25267   01996C  0E0C               	movlw	low STR_17
 25268   01996E  6F9A               	movwf	printf@fmt& (0+255),b
 25269   019970  0EFA               	movlw	high STR_17
 25270   019972  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 25271   019974  C5A9  F59C         	movff	disk_ioctl@pdrv,?_printf+2
 25272   019978  6B9D               	clrf	(?_printf+3)& (0+255),b
 25273   01997A  C5A6  F59E         	movff	disk_ioctl@cmd,?_printf+4
 25274   01997E  6B9F               	clrf	(?_printf+5)& (0+255),b
 25275   019980  EC4F  F0CF         	call	_printf	;wreg free
 25276                           
 25277                           ;drivers/diskio.c: 164:         break;
 25278   019984  D00F               	goto	l10567
 25279   019986                     l10563:
 25280                           
 25281                           ; BSR set to: 5
 25282   019986  51A6               	movf	disk_ioctl@cmd& (0+255),w,b
 25283                           
 25284                           ; Switch size 1, requested type "simple"
 25285                           ; Number of cases is 5, Range of values is 0 to 4
 25286                           ; switch strategies available:
 25287                           ; Name         Instructions Cycles
 25288                           ; simple_byte           16     9 (average)
 25289                           ;	Chosen strategy is simple_byte
 25290   019988  0A00               	xorlw	0	; case 0
 25291   01998A  B4D8               	btfsc	status,2,c
 25292   01998C  D7EC               	goto	l10557
 25293   01998E  0A01               	xorlw	1	; case 1
 25294   019990  B4D8               	btfsc	status,2,c
 25295   019992  D7EC               	goto	l97
 25296   019994  0A03               	xorlw	3	; case 2
 25297   019996  B4D8               	btfsc	status,2,c
 25298   019998  D7E9               	goto	l97
 25299   01999A  0A01               	xorlw	1	; case 3
 25300   01999C  B4D8               	btfsc	status,2,c
 25301   01999E  D7E6               	goto	l97
 25302   0199A0  0A07               	xorlw	7	; case 4
 25303   0199A2  D7E4               	goto	l97
 25304   0199A4                     l10567:
 25305                           
 25306                           ; BSR set to: 5
 25307                           ;drivers/diskio.c: 168:     return res;
 25308   0199A4  51AA               	movf	disk_ioctl@res& (0+255),w,b
 25309                           
 25310                           ; BSR set to: 5
 25311   0199A6  0012               	return		;funcret
 25312   0199A8                     __end_of_disk_ioctl:
 25313                           	callstack 0
 25314                           
 25315 ;; *************** function _st_clust *****************
 25316 ;; Defined at:
 25317 ;;		line 1865 in file "fatfs/ff.c"
 25318 ;; Parameters:    Size  Location     Type
 25319 ;;  fs              2    4[COMRAM] PTR struct .
 25320 ;;		 -> fs(560), NULL(0), 
 25321 ;;  dir             2    6[COMRAM] PTR unsigned char 
 25322 ;;		 -> fs$win(512), fs(560), NULL(0), 
 25323 ;;  cl              4    8[COMRAM] unsigned long 
 25324 ;; Auto vars:     Size  Location     Type
 25325 ;;		None
 25326 ;; Return value:  Size  Location     Type
 25327 ;;                  1    wreg      void 
 25328 ;; Registers used:
 25329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25330 ;; Tracked objects:
 25331 ;;		On entry : 3F/6
 25332 ;;		On exit  : 0/0
 25333 ;;		Unchanged: 0/0
 25334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25335 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25337 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25338 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25339 ;;Total ram usage:        9 bytes
 25340 ;; Hardware stack levels used: 1
 25341 ;; Hardware stack levels required when called: 1
 25342 ;; This function calls:
 25343 ;;		_st_word
 25344 ;; This function is called by:
 25345 ;;		_f_open
 25346 ;;		_f_sync
 25347 ;; This function uses a non-reentrant model
 25348 ;;
 25349                           
 25350                           	psect	text45
 25351   019BE0                     __ptext45:
 25352                           	callstack 0
 25353   019BE0                     _st_clust:
 25354                           	callstack 123
 25355                           
 25356                           ; BSR set to: 6
 25357                           ;fatfs/ff.c: 1866:  FATFS* fs,;fatfs/ff.c: 1867:  BYTE* dir,;fatfs/ff.c: 1868:  DWORD cl
      +                          ;fatfs/ff.c: 1870: {;fatfs/ff.c: 1871:  st_word(dir + 26, (WORD)cl);
 25358                           
 25359                           ; BSR set to: 5
 25360                           ;incstack = 0
 25361   019BE0  0E1A               	movlw	26
 25362   019BE2  2407               	addwf	st_clust@dir^(0+1280),w,c
 25363   019BE4  6E01               	movwf	st_word@ptr^(0+1280),c
 25364   019BE6  0E00               	movlw	0
 25365   019BE8  2008               	addwfc	(st_clust@dir+1)^(0+1280),w,c
 25366   019BEA  6E02               	movwf	(st_word@ptr+1)^(0+1280),c
 25367   019BEC  C509  F503         	movff	st_clust@cl,st_word@val
 25368   019BF0  C50A  F504         	movff	st_clust@cl+1,st_word@val+1
 25369   019BF4  EC27  F0CF         	call	_st_word	;wreg free
 25370                           
 25371                           ;fatfs/ff.c: 1872:  if (fs->fs_type == 3) {
 25372   019BF8  C505  F4D9         	movff	st_clust@fs,fsr2l
 25373   019BFC  C506  F4DA         	movff	st_clust@fs+1,fsr2h
 25374   019C00  0E03               	movlw	3
 25375   019C02  18DE               	xorwf	postinc2,w,c
 25376   019C04  A4D8               	btfss	status,2,c
 25377   019C06  0012               	return	
 25378                           
 25379                           ;fatfs/ff.c: 1873:   st_word(dir + 20, (WORD)(cl >> 16));
 25380   019C08  0E14               	movlw	20
 25381   019C0A  2407               	addwf	st_clust@dir^(0+1280),w,c
 25382   019C0C  6E01               	movwf	st_word@ptr^(0+1280),c
 25383   019C0E  0E00               	movlw	0
 25384   019C10  2008               	addwfc	(st_clust@dir+1)^(0+1280),w,c
 25385   019C12  6E02               	movwf	(st_word@ptr+1)^(0+1280),c
 25386   019C14  C50B  F503         	movff	st_clust@cl+2,st_word@val
 25387   019C18  C50C  F504         	movff	st_clust@cl+3,st_word@val+1
 25388   019C1C  EC27  F0CF         	call	_st_word	;wreg free
 25389   019C20  0012               	return		;funcret
 25390   019C22                     __end_of_st_clust:
 25391                           	callstack 0
 25392                           
 25393 ;; *************** function _get_fattime *****************
 25394 ;; Defined at:
 25395 ;;		line 47 in file "drivers/diskio.c"
 25396 ;; Parameters:    Size  Location     Type
 25397 ;;		None
 25398 ;; Auto vars:     Size  Location     Type
 25399 ;;		None
 25400 ;; Return value:  Size  Location     Type
 25401 ;;                  4    0[COMRAM] unsigned long 
 25402 ;; Registers used:
 25403 ;;		wreg, status,2
 25404 ;; Tracked objects:
 25405 ;;		On entry : 3F/6
 25406 ;;		On exit  : 3F/6
 25407 ;;		Unchanged: 3F/0
 25408 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25412 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25413 ;;Total ram usage:        4 bytes
 25414 ;; Hardware stack levels used: 1
 25415 ;; This function calls:
 25416 ;;		Nothing
 25417 ;; This function is called by:
 25418 ;;		_f_open
 25419 ;;		_f_sync
 25420 ;; This function uses a non-reentrant model
 25421 ;;
 25422                           
 25423                           	psect	text46
 25424   019FAA                     __ptext46:
 25425                           	callstack 0
 25426   019FAA                     _get_fattime:
 25427                           	callstack 124
 25428                           
 25429                           ; BSR set to: 6
 25430                           ;drivers/diskio.c: 50:     return (DWORD)0 << 25 | (DWORD)1 << 21 | (DWORD)1 << 16;
 25431                           
 25432                           ;incstack = 0
 25433   019FAA  0E00               	movlw	0
 25434   019FAC  6E01               	movwf	?_get_fattime^(0+1280),c
 25435   019FAE  0E00               	movlw	0
 25436   019FB0  6E02               	movwf	(?_get_fattime+1)^(0+1280),c
 25437   019FB2  0E21               	movlw	33
 25438   019FB4  6E03               	movwf	(?_get_fattime+2)^(0+1280),c
 25439   019FB6  0E00               	movlw	0
 25440   019FB8  6E04               	movwf	(?_get_fattime+3)^(0+1280),c
 25441                           
 25442                           ; BSR set to: 6
 25443   019FBA  0012               	return		;funcret
 25444   019FBC                     __end_of_get_fattime:
 25445                           	callstack 0
 25446                           
 25447 ;; *************** function _f_read *****************
 25448 ;; Defined at:
 25449 ;;		line 3914 in file "fatfs/ff.c"
 25450 ;; Parameters:    Size  Location     Type
 25451 ;;  fp              2   36[BANK6 ] PTR struct .
 25452 ;;		 -> files(3276), 
 25453 ;;  buff            2   38[BANK6 ] PTR void 
 25454 ;;		 -> disk_buf(128), 
 25455 ;;  btr             2   40[BANK6 ] unsigned int 
 25456 ;;  br              2   42[BANK6 ] PTR unsigned int 
 25457 ;;		 -> disk_io_handle@n(2), 
 25458 ;; Auto vars:     Size  Location     Type
 25459 ;;  sect            4   73[BANK6 ] unsigned long 
 25460 ;;  clst            4   61[BANK6 ] unsigned long 
 25461 ;;  remain          4   56[BANK6 ] unsigned long 
 25462 ;;  fs              2   77[BANK6 ] PTR struct .
 25463 ;;		 -> fs(560), NULL(0), 
 25464 ;;  rcnt            2   71[BANK6 ] unsigned int 
 25465 ;;  cc              2   69[BANK6 ] unsigned int 
 25466 ;;  csect           2   67[BANK6 ] unsigned int 
 25467 ;;  rbuff           2   65[BANK6 ] PTR unsigned char 
 25468 ;;		 -> disk_buf(128), 
 25469 ;;  res             1   60[BANK6 ] enum E275
 25470 ;; Return value:  Size  Location     Type
 25471 ;;                  1    wreg      enum E275
 25472 ;; Registers used:
 25473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25474 ;; Tracked objects:
 25475 ;;		On entry : 3F/6
 25476 ;;		On exit  : 3F/6
 25477 ;;		Unchanged: 0/0
 25478 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25479 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25480 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25481 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25482 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25483 ;;Total ram usage:       43 bytes
 25484 ;; Hardware stack levels used: 1
 25485 ;; Hardware stack levels required when called: 14
 25486 ;; This function calls:
 25487 ;;		_clst2sect
 25488 ;;		_disk_read
 25489 ;;		_disk_write
 25490 ;;		_get_fat
 25491 ;;		_memcpy
 25492 ;;		_validate
 25493 ;; This function is called by:
 25494 ;;		_disk_io_handle
 25495 ;; This function uses a non-reentrant model
 25496 ;;
 25497                           
 25498                           	psect	text47
 25499   012566                     __ptext47:
 25500                           	callstack 0
 25501   012566                     _f_read:
 25502                           	callstack 111
 25503                           
 25504                           ; BSR set to: 6
 25505                           ;fatfs/ff.c: 3915:  FIL* fp,;fatfs/ff.c: 3916:  void* buff,;fatfs/ff.c: 3917:  UINT btr,
      +                          ;fatfs/ff.c: 3918:  UINT* br;fatfs/ff.c: 3920: {;fatfs/ff.c: 3921:  FRESULT res;;fatfs/f
      +                          f.c: 3922:  FATFS *fs;;fatfs/ff.c: 3923:  DWORD clst;;fatfs/ff.c: 3924:  LBA_t sect;;fat
      +                          fs/ff.c: 3925:  FSIZE_t remain;;fatfs/ff.c: 3926:  UINT rcnt, cc, csect;;fatfs/ff.c: 392
      +                          7:  BYTE *rbuff = (BYTE*)buff;
 25506                           
 25507                           ; BSR set to: 6
 25508                           ;incstack = 0
 25509   012566  C626  F641         	movff	f_read@buff,f_read@rbuff
 25510   01256A  C627  F642         	movff	f_read@buff+1,f_read@rbuff+1
 25511                           
 25512                           ; BSR set to: 6
 25513                           ;fatfs/ff.c: 3930:  *br = 0;
 25514   01256E  C62A  F4D9         	movff	f_read@br,fsr2l
 25515   012572  C62B  F4DA         	movff	f_read@br+1,fsr2h
 25516   012576  6ADE               	clrf	postinc2,c
 25517   012578  6ADD               	clrf	postdec2,c
 25518                           
 25519                           ; BSR set to: 6
 25520                           ;fatfs/ff.c: 3931:  res = validate(&fp->obj, &fs);
 25521   01257A  C624  F5A6         	movff	f_read@fp,validate@obj
 25522   01257E  C625  F5A7         	movff	f_read@fp+1,validate@obj+1
 25523   012582  0E4D               	movlw	low f_read@fs
 25524   012584  0105               	movlb	5	; () banked
 25525   012586  6FA8               	movwf	validate@rfs& (0+255),b
 25526   012588  0E06               	movlw	high f_read@fs
 25527   01258A  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 25528   01258C  EC59  F0C3         	call	_validate	;wreg free
 25529   012590  0106               	movlb	6	; () banked
 25530   012592  6F3C               	movwf	f_read@res& (0+255),b
 25531                           
 25532                           ; BSR set to: 6
 25533                           ;fatfs/ff.c: 3932:  if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res;
 25534   012594  513C               	movf	f_read@res& (0+255),w,b
 25535   012596  A4D8               	btfss	status,2,c
 25536   012598  D00B               	goto	u14650
 25537                           
 25538                           ; BSR set to: 6
 25539   01259A  EE20 F00F          	lfsr	2,15
 25540   01259E  5124               	movf	f_read@fp& (0+255),w,b
 25541   0125A0  26D9               	addwf	fsr2l,f,c
 25542   0125A2  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25543   0125A4  22DA               	addwfc	fsr2h,f,c
 25544   0125A6  50DF               	movf	indf2,w,c
 25545   0125A8  6F3C               	movwf	f_read@res& (0+255),b
 25546   0125AA  513C               	movf	f_read@res& (0+255),w,b
 25547   0125AC  B4D8               	btfsc	status,2,c
 25548   0125AE  D002               	goto	l11631
 25549   0125B0                     u14650:
 25550                           
 25551                           ; BSR set to: 6
 25552   0125B0  513C               	movf	f_read@res& (0+255),w,b
 25553   0125B2  0012               	return	
 25554   0125B4                     l11631:
 25555                           
 25556                           ; BSR set to: 6
 25557                           ;fatfs/ff.c: 3933:  if (!(fp->flag & 0x01)) return FR_DENIED;
 25558   0125B4  EE20 F00E          	lfsr	2,14
 25559   0125B8  5124               	movf	f_read@fp& (0+255),w,b
 25560   0125BA  26D9               	addwf	fsr2l,f,c
 25561   0125BC  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25562   0125BE  22DA               	addwfc	fsr2h,f,c
 25563   0125C0  B0DF               	btfsc	indf2,0,c
 25564   0125C2  D002               	goto	l11637
 25565                           
 25566                           ; BSR set to: 6
 25567   0125C4  0E07               	movlw	7
 25568   0125C6  0012               	return	
 25569   0125C8                     l11637:
 25570                           
 25571                           ; BSR set to: 6
 25572                           ;fatfs/ff.c: 3934:  remain = fp->obj.objsize - fp->fptr;
 25573   0125C8  EE20 F010          	lfsr	2,16
 25574   0125CC  5124               	movf	f_read@fp& (0+255),w,b
 25575   0125CE  26D9               	addwf	fsr2l,f,c
 25576   0125D0  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25577   0125D2  22DA               	addwfc	fsr2h,f,c
 25578   0125D4  C4DE F62C          	movff	postinc2,??_f_read
 25579   0125D8  C4DE F62D          	movff	postinc2,??_f_read+1
 25580   0125DC  C4DE F62E          	movff	postinc2,??_f_read+2
 25581   0125E0  C4DE F62F          	movff	postinc2,??_f_read+3
 25582   0125E4  EE20 F00A          	lfsr	2,10
 25583   0125E8  5124               	movf	f_read@fp& (0+255),w,b
 25584   0125EA  26D9               	addwf	fsr2l,f,c
 25585   0125EC  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25586   0125EE  22DA               	addwfc	fsr2h,f,c
 25587   0125F0  C4DE F630          	movff	postinc2,??_f_read+4
 25588   0125F4  C4DE F631          	movff	postinc2,??_f_read+5
 25589   0125F8  C4DE F632          	movff	postinc2,??_f_read+6
 25590   0125FC  C4DE F633          	movff	postinc2,??_f_read+7
 25591   012600  512C               	movf	??_f_read& (0+255),w,b
 25592   012602  5D30               	subwf	(??_f_read+4)& (0+255),w,b
 25593   012604  6F38               	movwf	f_read@remain& (0+255),b
 25594   012606  512D               	movf	(??_f_read+1)& (0+255),w,b
 25595   012608  5931               	subwfb	(??_f_read+5)& (0+255),w,b
 25596   01260A  6F39               	movwf	(f_read@remain+1)& (0+255),b
 25597   01260C  512E               	movf	(??_f_read+2)& (0+255),w,b
 25598   01260E  5932               	subwfb	(??_f_read+6)& (0+255),w,b
 25599   012610  6F3A               	movwf	(f_read@remain+2)& (0+255),b
 25600   012612  512F               	movf	(??_f_read+3)& (0+255),w,b
 25601   012614  5933               	subwfb	(??_f_read+7)& (0+255),w,b
 25602   012616  6F3B               	movwf	(f_read@remain+3)& (0+255),b
 25603                           
 25604                           ; BSR set to: 6
 25605                           ;fatfs/ff.c: 3935:  if (btr > remain) btr = (UINT)remain;
 25606   012618  5128               	movf	f_read@btr& (0+255),w,b
 25607   01261A  6F2C               	movwf	??_f_read& (0+255),b
 25608   01261C  5129               	movf	(f_read@btr+1)& (0+255),w,b
 25609   01261E  6F2D               	movwf	(??_f_read+1)& (0+255),b
 25610   012620  6B2E               	clrf	(??_f_read+2)& (0+255),b
 25611   012622  6B2F               	clrf	(??_f_read+3)& (0+255),b
 25612   012624  512C               	movf	??_f_read& (0+255),w,b
 25613   012626  5D38               	subwf	f_read@remain& (0+255),w,b
 25614   012628  512D               	movf	(??_f_read+1)& (0+255),w,b
 25615   01262A  5939               	subwfb	(f_read@remain+1)& (0+255),w,b
 25616   01262C  512E               	movf	(??_f_read+2)& (0+255),w,b
 25617   01262E  593A               	subwfb	(f_read@remain+2)& (0+255),w,b
 25618   012630  512F               	movf	(??_f_read+3)& (0+255),w,b
 25619   012632  593B               	subwfb	(f_read@remain+3)& (0+255),w,b
 25620   012634  B0D8               	btfsc	status,0,c
 25621   012636  D004               	goto	l11643
 25622                           
 25623                           ; BSR set to: 6
 25624   012638  C638  F628         	movff	f_read@remain,f_read@btr
 25625   01263C  C639  F629         	movff	f_read@remain+1,f_read@btr+1
 25626   012640                     l11643:
 25627                           
 25628                           ; BSR set to: 6
 25629                           ;fatfs/ff.c: 3937:  for ( ; btr > 0; btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr +
      +                          = rcnt) {
 25630   012640  5128               	movf	f_read@btr& (0+255),w,b
 25631   012642  1129               	iorwf	(f_read@btr+1)& (0+255),w,b
 25632   012644  B4D8               	btfsc	status,2,c
 25633   012646  D281               	goto	l11753
 25634                           
 25635                           ; BSR set to: 6
 25636                           ;fatfs/ff.c: 3938:   if (fp->fptr % ((UINT)512) == 0) {
 25637   012648  EE20 F010          	lfsr	2,16
 25638   01264C  5124               	movf	f_read@fp& (0+255),w,b
 25639   01264E  26D9               	addwf	fsr2l,f,c
 25640   012650  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25641   012652  22DA               	addwfc	fsr2h,f,c
 25642   012654  0EFF               	movlw	255
 25643   012656  14DE               	andwf	postinc2,w,c
 25644   012658  6F2C               	movwf	??_f_read& (0+255),b
 25645   01265A  0E01               	movlw	1
 25646   01265C  14DE               	andwf	postinc2,w,c
 25647   01265E  6F2D               	movwf	(??_f_read+1)& (0+255),b
 25648   012660  0E00               	movlw	0
 25649   012662  14DE               	andwf	postinc2,w,c
 25650   012664  6F2E               	movwf	(??_f_read+2)& (0+255),b
 25651   012666  0E00               	movlw	0
 25652   012668  14DE               	andwf	postinc2,w,c
 25653   01266A  6F2F               	movwf	(??_f_read+3)& (0+255),b
 25654   01266C  512C               	movf	??_f_read& (0+255),w,b
 25655   01266E  112D               	iorwf	(??_f_read+1)& (0+255),w,b
 25656   012670  112E               	iorwf	(??_f_read+2)& (0+255),w,b
 25657   012672  112F               	iorwf	(??_f_read+3)& (0+255),w,b
 25658   012674  A4D8               	btfss	status,2,c
 25659   012676  D202               	goto	l655
 25660                           
 25661                           ; BSR set to: 6
 25662                           ;fatfs/ff.c: 3939:    csect = (UINT)(fp->fptr / ((UINT)512) & (fs->csize - 1));
 25663   012678  EE20 F010          	lfsr	2,16
 25664   01267C  5124               	movf	f_read@fp& (0+255),w,b
 25665   01267E  26D9               	addwf	fsr2l,f,c
 25666   012680  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25667   012682  22DA               	addwfc	fsr2h,f,c
 25668   012684  C4DE F62C          	movff	postinc2,??_f_read
 25669   012688  C4DE F62D          	movff	postinc2,??_f_read+1
 25670   01268C  C4DE F62E          	movff	postinc2,??_f_read+2
 25671   012690  C4DE F62F          	movff	postinc2,??_f_read+3
 25672   012694  0E0A               	movlw	10
 25673   012696  D005               	goto	u14700
 25674   012698                     u14705:
 25675   012698  90D8               	bcf	status,0,c
 25676   01269A  332F               	rrcf	(??_f_read+3)& (0+255),f,b
 25677   01269C  332E               	rrcf	(??_f_read+2)& (0+255),f,b
 25678   01269E  332D               	rrcf	(??_f_read+1)& (0+255),f,b
 25679   0126A0  332C               	rrcf	??_f_read& (0+255),f,b
 25680   0126A2                     u14700:
 25681   0126A2  2EE8               	decfsz	wreg,f,c
 25682   0126A4  D7F9               	goto	u14705
 25683   0126A6  EE20 F00A          	lfsr	2,10
 25684   0126AA  514D               	movf	f_read@fs& (0+255),w,b
 25685   0126AC  26D9               	addwf	fsr2l,f,c
 25686   0126AE  514E               	movf	(f_read@fs+1)& (0+255),w,b
 25687   0126B0  22DA               	addwfc	fsr2h,f,c
 25688   0126B2  C4DE F630          	movff	postinc2,??_f_read+4
 25689   0126B6  C4DD F631          	movff	postdec2,??_f_read+5
 25690   0126BA  0EFF               	movlw	255
 25691   0126BC  2530               	addwf	(??_f_read+4)& (0+255),w,b
 25692   0126BE  6F32               	movwf	(??_f_read+6)& (0+255),b
 25693   0126C0  0EFF               	movlw	255
 25694   0126C2  2131               	addwfc	(??_f_read+5)& (0+255),w,b
 25695   0126C4  6F33               	movwf	(??_f_read+7)& (0+255),b
 25696   0126C6  512C               	movf	??_f_read& (0+255),w,b
 25697   0126C8  1532               	andwf	(??_f_read+6)& (0+255),w,b
 25698   0126CA  6F43               	movwf	f_read@csect& (0+255),b
 25699   0126CC  512D               	movf	(??_f_read+1)& (0+255),w,b
 25700   0126CE  1533               	andwf	(??_f_read+7)& (0+255),w,b
 25701   0126D0  6F44               	movwf	(f_read@csect+1)& (0+255),b
 25702                           
 25703                           ; BSR set to: 6
 25704                           ;fatfs/ff.c: 3940:    if (csect == 0) {
 25705   0126D2  5143               	movf	f_read@csect& (0+255),w,b
 25706   0126D4  1144               	iorwf	(f_read@csect+1)& (0+255),w,b
 25707   0126D6  A4D8               	btfss	status,2,c
 25708   0126D8  D06B               	goto	l11677
 25709                           
 25710                           ; BSR set to: 6
 25711                           ;fatfs/ff.c: 3941:     if (fp->fptr == 0) {
 25712   0126DA  EE20 F010          	lfsr	2,16
 25713   0126DE  5124               	movf	f_read@fp& (0+255),w,b
 25714   0126E0  26D9               	addwf	fsr2l,f,c
 25715   0126E2  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25716   0126E4  22DA               	addwfc	fsr2h,f,c
 25717   0126E6  50DE               	movf	postinc2,w,c
 25718   0126E8  10DE               	iorwf	postinc2,w,c
 25719   0126EA  10DE               	iorwf	postinc2,w,c
 25720   0126EC  10DE               	iorwf	postinc2,w,c
 25721   0126EE  A4D8               	btfss	status,2,c
 25722   0126F0  D00F               	goto	l11657
 25723                           
 25724                           ; BSR set to: 6
 25725                           ;fatfs/ff.c: 3942:      clst = fp->obj.sclust;
 25726   0126F2  EE20 F006          	lfsr	2,6
 25727   0126F6  5124               	movf	f_read@fp& (0+255),w,b
 25728   0126F8  26D9               	addwf	fsr2l,f,c
 25729   0126FA  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25730   0126FC  22DA               	addwfc	fsr2h,f,c
 25731   0126FE  C4DE F63D          	movff	postinc2,f_read@clst
 25732   012702  C4DE F63E          	movff	postinc2,f_read@clst+1
 25733   012706  C4DE F63F          	movff	postinc2,f_read@clst+2
 25734   01270A  C4DE F640          	movff	postinc2,f_read@clst+3
 25735                           
 25736                           ;fatfs/ff.c: 3943:     } else {
 25737   01270E  D01C               	goto	l11659
 25738   012710                     l11657:
 25739                           
 25740                           ; BSR set to: 6
 25741                           ;fatfs/ff.c: 3949:      {;fatfs/ff.c: 3950:       clst = get_fat(&fp->obj, fp->clust);
 25742   012710  C624  F60A         	movff	f_read@fp,get_fat@obj
 25743   012714  C625  F60B         	movff	f_read@fp+1,get_fat@obj+1
 25744   012718  EE20 F014          	lfsr	2,20
 25745   01271C  5124               	movf	f_read@fp& (0+255),w,b
 25746   01271E  26D9               	addwf	fsr2l,f,c
 25747   012720  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25748   012722  22DA               	addwfc	fsr2h,f,c
 25749   012724  C4DE F60C          	movff	postinc2,get_fat@clst
 25750   012728  C4DE F60D          	movff	postinc2,get_fat@clst+1
 25751   01272C  C4DE F60E          	movff	postinc2,get_fat@clst+2
 25752   012730  C4DE F60F          	movff	postinc2,get_fat@clst+3
 25753   012734  EC66  F0A0         	call	_get_fat	;wreg free
 25754   012738  C60A  F63D         	movff	?_get_fat,f_read@clst
 25755   01273C  C60B  F63E         	movff	?_get_fat+1,f_read@clst+1
 25756   012740  C60C  F63F         	movff	?_get_fat+2,f_read@clst+2
 25757   012744  C60D  F640         	movff	?_get_fat+3,f_read@clst+3
 25758   012748                     l11659:
 25759                           
 25760                           ;fatfs/ff.c: 3953:     if (clst < 2) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; 
      +                          };
 25761   012748  0106               	movlb	6	; () banked
 25762   01274A  5140               	movf	(f_read@clst+3)& (0+255),w,b
 25763   01274C  113F               	iorwf	(f_read@clst+2)& (0+255),w,b
 25764   01274E  113E               	iorwf	(f_read@clst+1)& (0+255),w,b
 25765   012750  E10E               	bnz	l11667
 25766   012752  0E02               	movlw	2
 25767   012754  5D3D               	subwf	f_read@clst& (0+255),w,b
 25768   012756  B0D8               	btfsc	status,0,c
 25769   012758  D00A               	goto	l11667
 25770   01275A                     u14730:
 25771                           
 25772                           ; BSR set to: 6
 25773   01275A  EE20 F00F          	lfsr	2,15
 25774   01275E  5124               	movf	f_read@fp& (0+255),w,b
 25775   012760  26D9               	addwf	fsr2l,f,c
 25776   012762  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25777   012764  22DA               	addwfc	fsr2h,f,c
 25778   012766  0E02               	movlw	2
 25779   012768  6EDF               	movwf	indf2,c
 25780                           
 25781                           ; BSR set to: 6
 25782   01276A  0E02               	movlw	2
 25783   01276C  0012               	return	
 25784   01276E                     l11667:
 25785                           
 25786                           ; BSR set to: 6
 25787                           ;fatfs/ff.c: 3954:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return F
      +                          R_DISK_ERR; };
 25788   01276E  293D               	incf	f_read@clst& (0+255),w,b
 25789   012770  E111               	bnz	l11675
 25790   012772  293E               	incf	(f_read@clst+1)& (0+255),w,b
 25791   012774  E10F               	bnz	l11675
 25792   012776  293F               	incf	(f_read@clst+2)& (0+255),w,b
 25793   012778  E10D               	bnz	l11675
 25794   01277A  2940               	incf	(f_read@clst+3)& (0+255),w,b
 25795   01277C  A4D8               	btfss	status,2,c
 25796   01277E  D00A               	goto	l11675
 25797   012780                     u14740:
 25798                           
 25799                           ; BSR set to: 6
 25800   012780  EE20 F00F          	lfsr	2,15
 25801   012784  5124               	movf	f_read@fp& (0+255),w,b
 25802   012786  26D9               	addwf	fsr2l,f,c
 25803   012788  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25804   01278A  22DA               	addwfc	fsr2h,f,c
 25805   01278C  0E01               	movlw	1
 25806   01278E  6EDF               	movwf	indf2,c
 25807                           
 25808                           ; BSR set to: 6
 25809   012790  0E01               	movlw	1
 25810   012792  0012               	return	
 25811   012794                     l11675:
 25812                           
 25813                           ; BSR set to: 6
 25814                           ;fatfs/ff.c: 3955:     fp->clust = clst;
 25815   012794  EE20 F014          	lfsr	2,20
 25816   012798  5124               	movf	f_read@fp& (0+255),w,b
 25817   01279A  26D9               	addwf	fsr2l,f,c
 25818   01279C  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25819   01279E  22DA               	addwfc	fsr2h,f,c
 25820   0127A0  C63D  F4DE         	movff	f_read@clst,postinc2
 25821   0127A4  C63E  F4DE         	movff	f_read@clst+1,postinc2
 25822   0127A8  C63F  F4DE         	movff	f_read@clst+2,postinc2
 25823   0127AC  C640  F4DE         	movff	f_read@clst+3,postinc2
 25824   0127B0                     l11677:
 25825                           
 25826                           ; BSR set to: 6
 25827                           ;fatfs/ff.c: 3957:    sect = clst2sect(fs, fp->clust);
 25828   0127B0  C64D  F50D         	movff	f_read@fs,clst2sect@fs
 25829   0127B4  C64E  F50E         	movff	f_read@fs+1,clst2sect@fs+1
 25830   0127B8  EE20 F014          	lfsr	2,20
 25831   0127BC  5124               	movf	f_read@fp& (0+255),w,b
 25832   0127BE  26D9               	addwf	fsr2l,f,c
 25833   0127C0  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25834   0127C2  22DA               	addwfc	fsr2h,f,c
 25835   0127C4  C4DE F50F          	movff	postinc2,clst2sect@clst
 25836   0127C8  C4DE F510          	movff	postinc2,clst2sect@clst+1
 25837   0127CC  C4DE F511          	movff	postinc2,clst2sect@clst+2
 25838   0127D0  C4DE F512          	movff	postinc2,clst2sect@clst+3
 25839   0127D4  ECBA  F0C3         	call	_clst2sect	;wreg free
 25840   0127D8  C50D  F649         	movff	?_clst2sect,f_read@sect
 25841   0127DC  C50E  F64A         	movff	?_clst2sect+1,f_read@sect+1
 25842   0127E0  C50F  F64B         	movff	?_clst2sect+2,f_read@sect+2
 25843   0127E4  C510  F64C         	movff	?_clst2sect+3,f_read@sect+3
 25844                           
 25845                           ;fatfs/ff.c: 3958:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; 
      +                          };
 25846   0127E8  0106               	movlb	6	; () banked
 25847   0127EA  5149               	movf	f_read@sect& (0+255),w,b
 25848   0127EC  114A               	iorwf	(f_read@sect+1)& (0+255),w,b
 25849   0127EE  114B               	iorwf	(f_read@sect+2)& (0+255),w,b
 25850   0127F0  114C               	iorwf	(f_read@sect+3)& (0+255),w,b
 25851   0127F2  B4D8               	btfsc	status,2,c
 25852   0127F4  D7B2               	goto	u14730
 25853                           
 25854                           ; BSR set to: 6
 25855                           ;fatfs/ff.c: 3959:    sect += csect;
 25856                           
 25857                           ; BSR set to: 6
 25858   0127F6  5143               	movf	f_read@csect& (0+255),w,b
 25859   0127F8  2749               	addwf	f_read@sect& (0+255),f,b
 25860   0127FA  5144               	movf	(f_read@csect+1)& (0+255),w,b
 25861   0127FC  234A               	addwfc	(f_read@sect+1)& (0+255),f,b
 25862   0127FE  0E00               	movlw	0
 25863   012800  234B               	addwfc	(f_read@sect+2)& (0+255),f,b
 25864   012802  0E00               	movlw	0
 25865   012804  234C               	addwfc	(f_read@sect+3)& (0+255),f,b
 25866                           
 25867                           ; BSR set to: 6
 25868                           ;fatfs/ff.c: 3960:    cc = btr / ((UINT)512);
 25869   012806  C628  F62C         	movff	f_read@btr,??_f_read
 25870   01280A  C629  F62D         	movff	f_read@btr+1,??_f_read+1
 25871   01280E  0E09               	movlw	9
 25872   012810  6F2E               	movwf	(??_f_read+2)& (0+255),b
 25873   012812                     u14765:
 25874   012812  90D8               	bcf	status,0,c
 25875   012814  332D               	rrcf	(??_f_read+1)& (0+255),f,b
 25876   012816  332C               	rrcf	??_f_read& (0+255),f,b
 25877   012818  2F2E               	decfsz	(??_f_read+2)& (0+255),f,b
 25878   01281A  D7FB               	goto	u14765
 25879   01281C  C62C  F645         	movff	??_f_read,f_read@cc
 25880   012820  C62D  F646         	movff	??_f_read+1,f_read@cc+1
 25881                           
 25882                           ; BSR set to: 6
 25883                           ;fatfs/ff.c: 3961:    if (cc > 0) {
 25884   012824  5145               	movf	f_read@cc& (0+255),w,b
 25885   012826  1146               	iorwf	(f_read@cc+1)& (0+255),w,b
 25886   012828  B4D8               	btfsc	status,2,c
 25887   01282A  D0A7               	goto	l11713
 25888                           
 25889                           ; BSR set to: 6
 25890                           ;fatfs/ff.c: 3962:     if (csect + cc > fs->csize) {
 25891   01282C  5145               	movf	f_read@cc& (0+255),w,b
 25892   01282E  2543               	addwf	f_read@csect& (0+255),w,b
 25893   012830  6F2C               	movwf	??_f_read& (0+255),b
 25894   012832  5146               	movf	(f_read@cc+1)& (0+255),w,b
 25895   012834  2144               	addwfc	(f_read@csect+1)& (0+255),w,b
 25896   012836  6F2D               	movwf	(??_f_read+1)& (0+255),b
 25897   012838  EE20 F00A          	lfsr	2,10
 25898   01283C  514D               	movf	f_read@fs& (0+255),w,b
 25899   01283E  26D9               	addwf	fsr2l,f,c
 25900   012840  514E               	movf	(f_read@fs+1)& (0+255),w,b
 25901   012842  22DA               	addwfc	fsr2h,f,c
 25902   012844  512C               	movf	??_f_read& (0+255),w,b
 25903   012846  5CDE               	subwf	postinc2,w,c
 25904   012848  512D               	movf	(??_f_read+1)& (0+255),w,b
 25905   01284A  58DE               	subwfb	postinc2,w,c
 25906   01284C  B0D8               	btfsc	status,0,c
 25907   01284E  D010               	goto	l11697
 25908                           
 25909                           ; BSR set to: 6
 25910                           ;fatfs/ff.c: 3963:      cc = fs->csize - csect;
 25911   012850  EE20 F00A          	lfsr	2,10
 25912   012854  514D               	movf	f_read@fs& (0+255),w,b
 25913   012856  26D9               	addwf	fsr2l,f,c
 25914   012858  514E               	movf	(f_read@fs+1)& (0+255),w,b
 25915   01285A  22DA               	addwfc	fsr2h,f,c
 25916   01285C  C4DE F62C          	movff	postinc2,??_f_read
 25917   012860  C4DD F62D          	movff	postdec2,??_f_read+1
 25918   012864  5143               	movf	f_read@csect& (0+255),w,b
 25919   012866  5D2C               	subwf	??_f_read& (0+255),w,b
 25920   012868  6F45               	movwf	f_read@cc& (0+255),b
 25921   01286A  5144               	movf	(f_read@csect+1)& (0+255),w,b
 25922   01286C  592D               	subwfb	(??_f_read+1)& (0+255),w,b
 25923   01286E  6F46               	movwf	(f_read@cc+1)& (0+255),b
 25924   012870                     l11697:
 25925                           
 25926                           ; BSR set to: 6
 25927                           ;fatfs/ff.c: 3965:     if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) { fp->err = (
      +                          BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 25928   012870  C641  F5E4         	movff	f_read@rbuff,disk_read@buff
 25929   012874  C642  F5E5         	movff	f_read@rbuff+1,disk_read@buff+1
 25930   012878  C649  F5E6         	movff	f_read@sect,disk_read@sector
 25931   01287C  C64A  F5E7         	movff	f_read@sect+1,disk_read@sector+1
 25932   012880  C64B  F5E8         	movff	f_read@sect+2,disk_read@sector+2
 25933   012884  C64C  F5E9         	movff	f_read@sect+3,disk_read@sector+3
 25934   012888  C645  F5EA         	movff	f_read@cc,disk_read@count
 25935   01288C  C646  F5EB         	movff	f_read@cc+1,disk_read@count+1
 25936   012890  EE20 F001          	lfsr	2,1
 25937   012894  514D               	movf	f_read@fs& (0+255),w,b
 25938   012896  26D9               	addwf	fsr2l,f,c
 25939   012898  514E               	movf	(f_read@fs+1)& (0+255),w,b
 25940   01289A  22DA               	addwfc	fsr2h,f,c
 25941   01289C  50DF               	movf	indf2,w,c
 25942   01289E  EC50  F0C9         	call	_disk_read
 25943   0128A2  0900               	iorlw	0
 25944   0128A4  A4D8               	btfss	status,2,c
 25945   0128A6  D0D9               	goto	u14870
 25946                           
 25947                           ; BSR set to: 5
 25948                           ;fatfs/ff.c: 3972:     if ((fp->flag & 0x80) && fp->sect - sect < cc) {
 25949                           
 25950                           ; BSR set to: 5
 25951   0128A8  0106               	movlb	6	; () banked
 25952   0128AA  EE20 F00E          	lfsr	2,14
 25953   0128AE  5124               	movf	f_read@fp& (0+255),w,b
 25954   0128B0  26D9               	addwf	fsr2l,f,c
 25955   0128B2  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25956   0128B4  22DA               	addwfc	fsr2h,f,c
 25957   0128B6  AEDF               	btfss	indf2,7,c
 25958   0128B8  D050               	goto	l11711
 25959                           
 25960                           ; BSR set to: 6
 25961   0128BA  5145               	movf	f_read@cc& (0+255),w,b
 25962   0128BC  6F2C               	movwf	??_f_read& (0+255),b
 25963   0128BE  5146               	movf	(f_read@cc+1)& (0+255),w,b
 25964   0128C0  6F2D               	movwf	(??_f_read+1)& (0+255),b
 25965   0128C2  6B2E               	clrf	(??_f_read+2)& (0+255),b
 25966   0128C4  6B2F               	clrf	(??_f_read+3)& (0+255),b
 25967   0128C6  EE20 F018          	lfsr	2,24
 25968   0128CA  5124               	movf	f_read@fp& (0+255),w,b
 25969   0128CC  26D9               	addwf	fsr2l,f,c
 25970   0128CE  5125               	movf	(f_read@fp+1)& (0+255),w,b
 25971   0128D0  22DA               	addwfc	fsr2h,f,c
 25972   0128D2  C4DE F630          	movff	postinc2,??_f_read+4
 25973   0128D6  C4DE F631          	movff	postinc2,??_f_read+5
 25974   0128DA  C4DE F632          	movff	postinc2,??_f_read+6
 25975   0128DE  C4DE F633          	movff	postinc2,??_f_read+7
 25976   0128E2  5149               	movf	f_read@sect& (0+255),w,b
 25977   0128E4  5D30               	subwf	(??_f_read+4)& (0+255),w,b
 25978   0128E6  6F34               	movwf	(??_f_read+8)& (0+255),b
 25979   0128E8  514A               	movf	(f_read@sect+1)& (0+255),w,b
 25980   0128EA  5931               	subwfb	(??_f_read+5)& (0+255),w,b
 25981   0128EC  6F35               	movwf	(??_f_read+9)& (0+255),b
 25982   0128EE  514B               	movf	(f_read@sect+2)& (0+255),w,b
 25983   0128F0  5932               	subwfb	(??_f_read+6)& (0+255),w,b
 25984   0128F2  6F36               	movwf	(??_f_read+10)& (0+255),b
 25985   0128F4  514C               	movf	(f_read@sect+3)& (0+255),w,b
 25986   0128F6  5933               	subwfb	(??_f_read+7)& (0+255),w,b
 25987   0128F8  6F37               	movwf	(??_f_read+11)& (0+255),b
 25988   0128FA  512C               	movf	??_f_read& (0+255),w,b
 25989   0128FC  5D34               	subwf	(??_f_read+8)& (0+255),w,b
 25990   0128FE  512D               	movf	(??_f_read+1)& (0+255),w,b
 25991   012900  5935               	subwfb	(??_f_read+9)& (0+255),w,b
 25992   012902  512E               	movf	(??_f_read+2)& (0+255),w,b
 25993   012904  5936               	subwfb	(??_f_read+10)& (0+255),w,b
 25994   012906  512F               	movf	(??_f_read+3)& (0+255),w,b
 25995   012908  5937               	subwfb	(??_f_read+11)& (0+255),w,b
 25996   01290A  B0D8               	btfsc	status,0,c
 25997   01290C  D026               	goto	l11711
 25998                           
 25999                           ; BSR set to: 6
 26000                           ;fatfs/ff.c: 3973:      memcpy(rbuff + ((fp->sect - sect) * ((UINT)512)), fp->buf, ((UIN
      +                          T)512));
 26001   01290E  EE20 F018          	lfsr	2,24
 26002   012912  5124               	movf	f_read@fp& (0+255),w,b
 26003   012914  26D9               	addwf	fsr2l,f,c
 26004   012916  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26005   012918  22DA               	addwfc	fsr2h,f,c
 26006   01291A  C4DE F62C          	movff	postinc2,??_f_read
 26007   01291E  C4DD F62D          	movff	postdec2,??_f_read+1
 26008   012922  5149               	movf	f_read@sect& (0+255),w,b
 26009   012924  5F2C               	subwf	??_f_read& (0+255),f,b
 26010   012926  514A               	movf	(f_read@sect+1)& (0+255),w,b
 26011   012928  5B2D               	subwfb	(??_f_read+1)& (0+255),f,b
 26012   01292A  0E09               	movlw	9
 26013   01292C                     u14825:
 26014   01292C  90D8               	bcf	status,0,c
 26015   01292E  372C               	rlcf	??_f_read& (0+255),f,b
 26016   012930  372D               	rlcf	(??_f_read+1)& (0+255),f,b
 26017   012932  2EE8               	decfsz	wreg,f,c
 26018   012934  D7FB               	goto	u14825
 26019   012936  512C               	movf	??_f_read& (0+255),w,b
 26020   012938  2541               	addwf	f_read@rbuff& (0+255),w,b
 26021   01293A  6E01               	movwf	memcpy@d1^(0+1280),c
 26022   01293C  512D               	movf	(??_f_read+1)& (0+255),w,b
 26023   01293E  2142               	addwfc	(f_read@rbuff+1)& (0+255),w,b
 26024   012940  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
 26025   012942  0E22               	movlw	34
 26026   012944  2524               	addwf	f_read@fp& (0+255),w,b
 26027   012946  6E03               	movwf	memcpy@s1^(0+1280),c
 26028   012948  0E00               	movlw	0
 26029   01294A  2125               	addwfc	(f_read@fp+1)& (0+255),w,b
 26030   01294C  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
 26031   01294E  0E02               	movlw	2
 26032   012950  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 26033   012952  0E00               	movlw	0
 26034   012954  6E05               	movwf	memcpy@n^(0+1280),c
 26035   012956  ECAD  F0CD         	call	_memcpy	;wreg free
 26036   01295A                     l11711:
 26037                           
 26038                           ;fatfs/ff.c: 3977:     rcnt = ((UINT)512) * cc;
 26039   01295A  C645  F62C         	movff	f_read@cc,??_f_read
 26040   01295E  C646  F62D         	movff	f_read@cc+1,??_f_read+1
 26041   012962  0E09               	movlw	9
 26042   012964                     u14835:
 26043   012964  90D8               	bcf	status,0,c
 26044   012966  0106               	movlb	6	; () banked
 26045   012968  372C               	rlcf	??_f_read& (0+255),f,b
 26046   01296A  372D               	rlcf	(??_f_read+1)& (0+255),f,b
 26047   01296C  2EE8               	decfsz	wreg,f,c
 26048   01296E  D7FA               	goto	u14835
 26049   012970  C62C  F647         	movff	??_f_read,f_read@rcnt
 26050   012974  C62D  F648         	movff	??_f_read+1,f_read@rcnt+1
 26051                           
 26052                           ;fatfs/ff.c: 3978:     continue;
 26053   012978  D0C9               	goto	l11743
 26054   01297A                     l11713:
 26055                           
 26056                           ; BSR set to: 6
 26057                           ;fatfs/ff.c: 3981:    if (fp->sect != sect) {
 26058   01297A  EE20 F018          	lfsr	2,24
 26059   01297E  5124               	movf	f_read@fp& (0+255),w,b
 26060   012980  26D9               	addwf	fsr2l,f,c
 26061   012982  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26062   012984  22DA               	addwfc	fsr2h,f,c
 26063   012986  5149               	movf	f_read@sect& (0+255),w,b
 26064   012988  18DE               	xorwf	postinc2,w,c
 26065   01298A  E10A               	bnz	u14840
 26066   01298C  514A               	movf	(f_read@sect+1)& (0+255),w,b
 26067   01298E  18DE               	xorwf	postinc2,w,c
 26068   012990  E107               	bnz	u14840
 26069   012992  514B               	movf	(f_read@sect+2)& (0+255),w,b
 26070   012994  18DE               	xorwf	postinc2,w,c
 26071   012996  E104               	bnz	u14840
 26072   012998  514C               	movf	(f_read@sect+3)& (0+255),w,b
 26073   01299A  18DE               	xorwf	postinc2,w,c
 26074   01299C  B4D8               	btfsc	status,2,c
 26075   01299E  D05F               	goto	l11735
 26076   0129A0                     u14840:
 26077                           
 26078                           ; BSR set to: 6
 26079                           ;fatfs/ff.c: 3983:     if (fp->flag & 0x80) {
 26080   0129A0  EE20 F00E          	lfsr	2,14
 26081   0129A4  5124               	movf	f_read@fp& (0+255),w,b
 26082   0129A6  26D9               	addwf	fsr2l,f,c
 26083   0129A8  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26084   0129AA  22DA               	addwfc	fsr2h,f,c
 26085   0129AC  AEDF               	btfss	indf2,7,c
 26086   0129AE  D033               	goto	l11727
 26087                           
 26088                           ; BSR set to: 6
 26089                           ;fatfs/ff.c: 3984:      if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp->
      +                          err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 26090   0129B0  0E22               	movlw	34
 26091   0129B2  2524               	addwf	f_read@fp& (0+255),w,b
 26092   0129B4  0105               	movlb	5	; () banked
 26093   0129B6  6FE2               	movwf	disk_write@buff& (0+255),b
 26094   0129B8  0E00               	movlw	0
 26095   0129BA  0106               	movlb	6	; () banked
 26096   0129BC  2125               	addwfc	(f_read@fp+1)& (0+255),w,b
 26097   0129BE  0105               	movlb	5	; () banked
 26098   0129C0  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 26099   0129C2  0106               	movlb	6	; () banked
 26100   0129C4  EE20 F018          	lfsr	2,24
 26101   0129C8  5124               	movf	f_read@fp& (0+255),w,b
 26102   0129CA  26D9               	addwf	fsr2l,f,c
 26103   0129CC  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26104   0129CE  22DA               	addwfc	fsr2h,f,c
 26105   0129D0  C4DE F5E4          	movff	postinc2,disk_write@sector
 26106   0129D4  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 26107   0129D8  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 26108   0129DC  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 26109   0129E0  0E00               	movlw	0
 26110   0129E2  0105               	movlb	5	; () banked
 26111   0129E4  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 26112   0129E6  0E01               	movlw	1
 26113   0129E8  6FE8               	movwf	disk_write@count& (0+255),b
 26114   0129EA  0106               	movlb	6	; () banked
 26115   0129EC  EE20 F001          	lfsr	2,1
 26116   0129F0  514D               	movf	f_read@fs& (0+255),w,b
 26117   0129F2  26D9               	addwf	fsr2l,f,c
 26118   0129F4  514E               	movf	(f_read@fs+1)& (0+255),w,b
 26119   0129F6  22DA               	addwfc	fsr2h,f,c
 26120   0129F8  50DF               	movf	indf2,w,c
 26121   0129FA  EC0F  F0C9         	call	_disk_write
 26122   0129FE  0900               	iorlw	0
 26123   012A00  A4D8               	btfss	status,2,c
 26124   012A02  D02B               	goto	u14870
 26125                           
 26126                           ; BSR set to: 5
 26127                           ;fatfs/ff.c: 3985:      fp->flag &= (BYTE)~0x80;
 26128                           
 26129                           ; BSR set to: 5
 26130   012A04  0106               	movlb	6	; () banked
 26131   012A06  EE20 F00E          	lfsr	2,14
 26132   012A0A  5124               	movf	f_read@fp& (0+255),w,b
 26133   012A0C  26D9               	addwf	fsr2l,f,c
 26134   012A0E  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26135   012A10  22DA               	addwfc	fsr2h,f,c
 26136   012A12  0E7F               	movlw	127
 26137   012A14  16DF               	andwf	indf2,f,c
 26138   012A16                     l11727:
 26139                           
 26140                           ; BSR set to: 6
 26141                           ;fatfs/ff.c: 3988:     if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) { fp->err = 
      +                          (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 26142   012A16  0E22               	movlw	34
 26143   012A18  2524               	addwf	f_read@fp& (0+255),w,b
 26144   012A1A  0105               	movlb	5	; () banked
 26145   012A1C  6FE4               	movwf	disk_read@buff& (0+255),b
 26146   012A1E  0E00               	movlw	0
 26147   012A20  0106               	movlb	6	; () banked
 26148   012A22  2125               	addwfc	(f_read@fp+1)& (0+255),w,b
 26149   012A24  0105               	movlb	5	; () banked
 26150   012A26  6FE5               	movwf	(disk_read@buff+1)& (0+255),b
 26151   012A28  C649  F5E6         	movff	f_read@sect,disk_read@sector
 26152   012A2C  C64A  F5E7         	movff	f_read@sect+1,disk_read@sector+1
 26153   012A30  C64B  F5E8         	movff	f_read@sect+2,disk_read@sector+2
 26154   012A34  C64C  F5E9         	movff	f_read@sect+3,disk_read@sector+3
 26155   012A38  0E00               	movlw	0
 26156   012A3A  6FEB               	movwf	(disk_read@count+1)& (0+255),b
 26157   012A3C  0E01               	movlw	1
 26158   012A3E  6FEA               	movwf	disk_read@count& (0+255),b
 26159   012A40  0106               	movlb	6	; () banked
 26160   012A42  EE20 F001          	lfsr	2,1
 26161   012A46  514D               	movf	f_read@fs& (0+255),w,b
 26162   012A48  26D9               	addwf	fsr2l,f,c
 26163   012A4A  514E               	movf	(f_read@fs+1)& (0+255),w,b
 26164   012A4C  22DA               	addwfc	fsr2h,f,c
 26165   012A4E  50DF               	movf	indf2,w,c
 26166   012A50  EC50  F0C9         	call	_disk_read
 26167   012A54  0900               	iorlw	0
 26168   012A56  B4D8               	btfsc	status,2,c
 26169   012A58  D002               	goto	l11735
 26170   012A5A                     u14870:
 26171                           
 26172                           ; BSR set to: 5
 26173   012A5A  0106               	movlb	6	; () banked
 26174   012A5C  D691               	goto	u14740
 26175   012A5E                     l11735:
 26176                           
 26177                           ;fatfs/ff.c: 3991:    fp->sect = sect;
 26178   012A5E  0106               	movlb	6	; () banked
 26179   012A60  EE20 F018          	lfsr	2,24
 26180   012A64  5124               	movf	f_read@fp& (0+255),w,b
 26181   012A66  26D9               	addwf	fsr2l,f,c
 26182   012A68  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26183   012A6A  22DA               	addwfc	fsr2h,f,c
 26184   012A6C  C649  F4DE         	movff	f_read@sect,postinc2
 26185   012A70  C64A  F4DE         	movff	f_read@sect+1,postinc2
 26186   012A74  C64B  F4DE         	movff	f_read@sect+2,postinc2
 26187   012A78  C64C  F4DE         	movff	f_read@sect+3,postinc2
 26188   012A7C                     l655:
 26189                           
 26190                           ; BSR set to: 6
 26191                           ;fatfs/ff.c: 3993:   rcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
 26192   012A7C  EE20 F010          	lfsr	2,16
 26193   012A80  5124               	movf	f_read@fp& (0+255),w,b
 26194   012A82  26D9               	addwf	fsr2l,f,c
 26195   012A84  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26196   012A86  22DA               	addwfc	fsr2h,f,c
 26197   012A88  C4DE F62C          	movff	postinc2,??_f_read
 26198   012A8C  C4DD F62D          	movff	postdec2,??_f_read+1
 26199   012A90  0EFF               	movlw	255
 26200   012A92  152C               	andwf	??_f_read& (0+255),w,b
 26201   012A94  6F2E               	movwf	(??_f_read+2)& (0+255),b
 26202   012A96  0E01               	movlw	1
 26203   012A98  152D               	andwf	(??_f_read+1)& (0+255),w,b
 26204   012A9A  6F2F               	movwf	(??_f_read+3)& (0+255),b
 26205   012A9C  512E               	movf	(??_f_read+2)& (0+255),w,b
 26206   012A9E  0800               	sublw	0
 26207   012AA0  6F47               	movwf	f_read@rcnt& (0+255),b
 26208   012AA2  512F               	movf	(??_f_read+3)& (0+255),w,b
 26209   012AA4  A0D8               	btfss	status,0,c
 26210   012AA6  2AE8               	incf	wreg,f,c
 26211   012AA8  0802               	sublw	2
 26212   012AAA  6F48               	movwf	(f_read@rcnt+1)& (0+255),b
 26213                           
 26214                           ; BSR set to: 6
 26215                           ;fatfs/ff.c: 3994:   if (rcnt > btr) rcnt = btr;
 26216   012AAC  5147               	movf	f_read@rcnt& (0+255),w,b
 26217   012AAE  5D28               	subwf	f_read@btr& (0+255),w,b
 26218   012AB0  5148               	movf	(f_read@rcnt+1)& (0+255),w,b
 26219   012AB2  5929               	subwfb	(f_read@btr+1)& (0+255),w,b
 26220   012AB4  B0D8               	btfsc	status,0,c
 26221   012AB6  D004               	goto	l11741
 26222                           
 26223                           ; BSR set to: 6
 26224   012AB8  C628  F647         	movff	f_read@btr,f_read@rcnt
 26225   012ABC  C629  F648         	movff	f_read@btr+1,f_read@rcnt+1
 26226   012AC0                     l11741:
 26227                           
 26228                           ; BSR set to: 6
 26229                           ;fatfs/ff.c: 3999:   memcpy(rbuff, fp->buf + fp->fptr % ((UINT)512), rcnt);
 26230   012AC0  C641  F501         	movff	f_read@rbuff,memcpy@d1
 26231   012AC4  C642  F502         	movff	f_read@rbuff+1,memcpy@d1+1
 26232   012AC8  EE20 F010          	lfsr	2,16
 26233   012ACC  5124               	movf	f_read@fp& (0+255),w,b
 26234   012ACE  26D9               	addwf	fsr2l,f,c
 26235   012AD0  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26236   012AD2  22DA               	addwfc	fsr2h,f,c
 26237   012AD4  C4DE F62C          	movff	postinc2,??_f_read
 26238   012AD8  C4DD F62D          	movff	postdec2,??_f_read+1
 26239   012ADC  0EFF               	movlw	255
 26240   012ADE  152C               	andwf	??_f_read& (0+255),w,b
 26241   012AE0  6F2E               	movwf	(??_f_read+2)& (0+255),b
 26242   012AE2  0E01               	movlw	1
 26243   012AE4  152D               	andwf	(??_f_read+1)& (0+255),w,b
 26244   012AE6  6F2F               	movwf	(??_f_read+3)& (0+255),b
 26245   012AE8  512E               	movf	(??_f_read+2)& (0+255),w,b
 26246   012AEA  2524               	addwf	f_read@fp& (0+255),w,b
 26247   012AEC  6F30               	movwf	(??_f_read+4)& (0+255),b
 26248   012AEE  512F               	movf	(??_f_read+3)& (0+255),w,b
 26249   012AF0  2125               	addwfc	(f_read@fp+1)& (0+255),w,b
 26250   012AF2  6F31               	movwf	(??_f_read+5)& (0+255),b
 26251   012AF4  0E22               	movlw	34
 26252   012AF6  2530               	addwf	(??_f_read+4)& (0+255),w,b
 26253   012AF8  6E03               	movwf	memcpy@s1^(0+1280),c
 26254   012AFA  0E00               	movlw	0
 26255   012AFC  2131               	addwfc	(??_f_read+5)& (0+255),w,b
 26256   012AFE  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
 26257   012B00  C647  F505         	movff	f_read@rcnt,memcpy@n
 26258   012B04  C648  F506         	movff	f_read@rcnt+1,memcpy@n+1
 26259   012B08  ECAD  F0CD         	call	_memcpy	;wreg free
 26260   012B0C                     l11743:
 26261   012B0C  0106               	movlb	6	; () banked
 26262   012B0E  5147               	movf	f_read@rcnt& (0+255),w,b
 26263   012B10  5F28               	subwf	f_read@btr& (0+255),f,b
 26264   012B12  5148               	movf	(f_read@rcnt+1)& (0+255),w,b
 26265   012B14  5B29               	subwfb	(f_read@btr+1)& (0+255),f,b
 26266                           
 26267                           ; BSR set to: 6
 26268   012B16  C62A  F4D9         	movff	f_read@br,fsr2l
 26269   012B1A  C62B  F4DA         	movff	f_read@br+1,fsr2h
 26270   012B1E  5147               	movf	f_read@rcnt& (0+255),w,b
 26271   012B20  26DE               	addwf	postinc2,f,c
 26272   012B22  5148               	movf	(f_read@rcnt+1)& (0+255),w,b
 26273   012B24  22DD               	addwfc	postdec2,f,c
 26274                           
 26275                           ; BSR set to: 6
 26276   012B26  5147               	movf	f_read@rcnt& (0+255),w,b
 26277   012B28  2741               	addwf	f_read@rbuff& (0+255),f,b
 26278   012B2A  5148               	movf	(f_read@rcnt+1)& (0+255),w,b
 26279   012B2C  2342               	addwfc	(f_read@rbuff+1)& (0+255),f,b
 26280                           
 26281                           ; BSR set to: 6
 26282   012B2E  EE20 F010          	lfsr	2,16
 26283   012B32  5124               	movf	f_read@fp& (0+255),w,b
 26284   012B34  26D9               	addwf	fsr2l,f,c
 26285   012B36  5125               	movf	(f_read@fp+1)& (0+255),w,b
 26286   012B38  22DA               	addwfc	fsr2h,f,c
 26287   012B3A  5147               	movf	f_read@rcnt& (0+255),w,b
 26288   012B3C  26DE               	addwf	postinc2,f,c
 26289   012B3E  5148               	movf	(f_read@rcnt+1)& (0+255),w,b
 26290   012B40  22DE               	addwfc	postinc2,f,c
 26291   012B42  0E00               	movlw	0
 26292   012B44  22DE               	addwfc	postinc2,f,c
 26293   012B46  22DE               	addwfc	postinc2,f,c
 26294   012B48  D57B               	goto	l11643
 26295   012B4A                     l11753:
 26296                           
 26297                           ; BSR set to: 6
 26298                           ;fatfs/ff.c: 4003:  return FR_OK;
 26299   012B4A  0E00               	movlw	0
 26300                           
 26301                           ; BSR set to: 6
 26302   012B4C  0012               	return		;funcret
 26303   012B4E                     __end_of_f_read:
 26304                           	callstack 0
 26305                           
 26306 ;; *************** function _f_lseek *****************
 26307 ;; Defined at:
 26308 ;;		line 4433 in file "fatfs/ff.c"
 26309 ;; Parameters:    Size  Location     Type
 26310 ;;  fp              2   72[BANK6 ] PTR struct .
 26311 ;;		 -> files(3276), 
 26312 ;;  ofs             4   74[BANK6 ] unsigned long 
 26313 ;; Auto vars:     Size  Location     Type
 26314 ;;  clst            4  109[BANK6 ] unsigned long 
 26315 ;;  bcs             4  103[BANK6 ] unsigned long 
 26316 ;;  nsect           4   98[BANK6 ] unsigned long 
 26317 ;;  ifptr           4   94[BANK6 ] unsigned long 
 26318 ;;  fs              2  107[BANK6 ] PTR struct .
 26319 ;;		 -> fs(560), NULL(0), 
 26320 ;;  res             1  102[BANK6 ] enum E275
 26321 ;; Return value:  Size  Location     Type
 26322 ;;                  1    wreg      enum E275
 26323 ;; Registers used:
 26324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26325 ;; Tracked objects:
 26326 ;;		On entry : 3F/6
 26327 ;;		On exit  : 3F/6
 26328 ;;		Unchanged: 0/0
 26329 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 26330 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26331 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26332 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26333 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26334 ;;Total ram usage:       41 bytes
 26335 ;; Hardware stack levels used: 1
 26336 ;; Hardware stack levels required when called: 15
 26337 ;; This function calls:
 26338 ;;		___lldiv
 26339 ;;		_clst2sect
 26340 ;;		_create_chain
 26341 ;;		_disk_read
 26342 ;;		_disk_write
 26343 ;;		_get_fat
 26344 ;;		_validate
 26345 ;; This function is called by:
 26346 ;;		_disk_io_handle
 26347 ;; This function uses a non-reentrant model
 26348 ;;
 26349                           
 26350                           	psect	text48
 26351   0118AE                     __ptext48:
 26352                           	callstack 0
 26353   0118AE                     _f_lseek:
 26354                           	callstack 110
 26355                           
 26356                           ; BSR set to: 6
 26357                           ;fatfs/ff.c: 4434:  FIL* fp,;fatfs/ff.c: 4435:  FSIZE_t ofs;fatfs/ff.c: 4437: {;fatfs/ff
      +                          .c: 4438:  FRESULT res;;fatfs/ff.c: 4439:  FATFS *fs;;fatfs/ff.c: 4440:  DWORD clst, bcs
      +                          ;;fatfs/ff.c: 4441:  LBA_t nsect;;fatfs/ff.c: 4442:  FSIZE_t ifptr;;fatfs/ff.c: 4449:  r
      +                          es = validate(&fp->obj, &fs);
 26358                           
 26359                           ; BSR set to: 6
 26360                           ;incstack = 0
 26361   0118AE  C648  F5A6         	movff	f_lseek@fp,validate@obj
 26362   0118B2  C649  F5A7         	movff	f_lseek@fp+1,validate@obj+1
 26363   0118B6  0E6B               	movlw	low f_lseek@fs
 26364   0118B8  0105               	movlb	5	; () banked
 26365   0118BA  6FA8               	movwf	validate@rfs& (0+255),b
 26366   0118BC  0E06               	movlw	high f_lseek@fs
 26367   0118BE  6FA9               	movwf	(validate@rfs+1)& (0+255),b
 26368   0118C0  EC59  F0C3         	call	_validate	;wreg free
 26369   0118C4  0106               	movlb	6	; () banked
 26370   0118C6  6F66               	movwf	f_lseek@res& (0+255),b
 26371                           
 26372                           ; BSR set to: 6
 26373                           ;fatfs/ff.c: 4450:  if (res == FR_OK) res = (FRESULT)fp->err;
 26374   0118C8  5166               	movf	f_lseek@res& (0+255),w,b
 26375   0118CA  A4D8               	btfss	status,2,c
 26376   0118CC  D008               	goto	l11963
 26377                           
 26378                           ; BSR set to: 6
 26379   0118CE  EE20 F00F          	lfsr	2,15
 26380   0118D2  5148               	movf	f_lseek@fp& (0+255),w,b
 26381   0118D4  26D9               	addwf	fsr2l,f,c
 26382   0118D6  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26383   0118D8  22DA               	addwfc	fsr2h,f,c
 26384   0118DA  50DF               	movf	indf2,w,c
 26385   0118DC  6F66               	movwf	f_lseek@res& (0+255),b
 26386   0118DE                     l11963:
 26387                           
 26388                           ; BSR set to: 6
 26389                           ;fatfs/ff.c: 4456:  if (res != FR_OK) return res;
 26390   0118DE  5166               	movf	f_lseek@res& (0+255),w,b
 26391   0118E0  B4D8               	btfsc	status,2,c
 26392   0118E2  D002               	goto	l11969
 26393   0118E4                     u15240:
 26394                           
 26395                           ; BSR set to: 6
 26396   0118E4  5166               	movf	f_lseek@res& (0+255),w,b
 26397   0118E6  0012               	return	
 26398   0118E8                     l11969:
 26399                           
 26400                           ; BSR set to: 6
 26401                           ;fatfs/ff.c: 4511:  {;fatfs/ff.c: 4515:   if (ofs > fp->obj.objsize && (0 || !(fp->flag 
      +                          & 0x02))) {
 26402   0118E8  EE20 F00A          	lfsr	2,10
 26403   0118EC  5148               	movf	f_lseek@fp& (0+255),w,b
 26404   0118EE  26D9               	addwf	fsr2l,f,c
 26405   0118F0  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26406   0118F2  22DA               	addwfc	fsr2h,f,c
 26407   0118F4  514A               	movf	f_lseek@ofs& (0+255),w,b
 26408   0118F6  5CDE               	subwf	postinc2,w,c
 26409   0118F8  514B               	movf	(f_lseek@ofs+1)& (0+255),w,b
 26410   0118FA  58DE               	subwfb	postinc2,w,c
 26411   0118FC  514C               	movf	(f_lseek@ofs+2)& (0+255),w,b
 26412   0118FE  58DE               	subwfb	postinc2,w,c
 26413   011900  514D               	movf	(f_lseek@ofs+3)& (0+255),w,b
 26414   011902  58DE               	subwfb	postinc2,w,c
 26415   011904  B0D8               	btfsc	status,0,c
 26416   011906  D016               	goto	l725
 26417                           
 26418                           ; BSR set to: 6
 26419   011908  EE20 F00E          	lfsr	2,14
 26420   01190C  5148               	movf	f_lseek@fp& (0+255),w,b
 26421   01190E  26D9               	addwf	fsr2l,f,c
 26422   011910  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26423   011912  22DA               	addwfc	fsr2h,f,c
 26424   011914  B2DF               	btfsc	indf2,1,c
 26425   011916  D00E               	goto	l725
 26426                           
 26427                           ; BSR set to: 6
 26428                           ;fatfs/ff.c: 4516:    ofs = fp->obj.objsize;
 26429   011918  EE20 F00A          	lfsr	2,10
 26430   01191C  5148               	movf	f_lseek@fp& (0+255),w,b
 26431   01191E  26D9               	addwf	fsr2l,f,c
 26432   011920  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26433   011922  22DA               	addwfc	fsr2h,f,c
 26434   011924  C4DE F64A          	movff	postinc2,f_lseek@ofs
 26435   011928  C4DE F64B          	movff	postinc2,f_lseek@ofs+1
 26436   01192C  C4DE F64C          	movff	postinc2,f_lseek@ofs+2
 26437   011930  C4DE F64D          	movff	postinc2,f_lseek@ofs+3
 26438   011934                     l725:
 26439                           
 26440                           ; BSR set to: 6
 26441                           ;fatfs/ff.c: 4518:   ifptr = fp->fptr;
 26442   011934  EE20 F010          	lfsr	2,16
 26443   011938  5148               	movf	f_lseek@fp& (0+255),w,b
 26444   01193A  26D9               	addwf	fsr2l,f,c
 26445   01193C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26446   01193E  22DA               	addwfc	fsr2h,f,c
 26447   011940  C4DE F65E          	movff	postinc2,f_lseek@ifptr
 26448   011944  C4DE F65F          	movff	postinc2,f_lseek@ifptr+1
 26449   011948  C4DE F660          	movff	postinc2,f_lseek@ifptr+2
 26450   01194C  C4DE F661          	movff	postinc2,f_lseek@ifptr+3
 26451                           
 26452                           ;fatfs/ff.c: 4519:   fp->fptr = nsect = 0;
 26453   011950  0E00               	movlw	0
 26454   011952  6F62               	movwf	f_lseek@nsect& (0+255),b
 26455   011954  0E00               	movlw	0
 26456   011956  6F63               	movwf	(f_lseek@nsect+1)& (0+255),b
 26457   011958  0E00               	movlw	0
 26458   01195A  6F64               	movwf	(f_lseek@nsect+2)& (0+255),b
 26459   01195C  0E00               	movlw	0
 26460   01195E  6F65               	movwf	(f_lseek@nsect+3)& (0+255),b
 26461   011960  EE20 F010          	lfsr	2,16
 26462   011964  5148               	movf	f_lseek@fp& (0+255),w,b
 26463   011966  26D9               	addwf	fsr2l,f,c
 26464   011968  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26465   01196A  22DA               	addwfc	fsr2h,f,c
 26466   01196C  C662  F4DE         	movff	f_lseek@nsect,postinc2
 26467   011970  C663  F4DE         	movff	f_lseek@nsect+1,postinc2
 26468   011974  C664  F4DE         	movff	f_lseek@nsect+2,postinc2
 26469   011978  C665  F4DE         	movff	f_lseek@nsect+3,postinc2
 26470                           
 26471                           ; BSR set to: 6
 26472                           ;fatfs/ff.c: 4520:   if (ofs > 0) {
 26473   01197C  514A               	movf	f_lseek@ofs& (0+255),w,b
 26474   01197E  114B               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 26475   011980  114C               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 26476   011982  114D               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 26477   011984  B4D8               	btfsc	status,2,c
 26478   011986  D214               	goto	l12073
 26479                           
 26480                           ; BSR set to: 6
 26481                           ;fatfs/ff.c: 4521:    bcs = (DWORD)fs->csize * ((UINT)512);
 26482   011988  EE20 F00A          	lfsr	2,10
 26483   01198C  516B               	movf	f_lseek@fs& (0+255),w,b
 26484   01198E  26D9               	addwf	fsr2l,f,c
 26485   011990  516C               	movf	(f_lseek@fs+1)& (0+255),w,b
 26486   011992  22DA               	addwfc	fsr2h,f,c
 26487   011994  C4DE F64E          	movff	postinc2,??_f_lseek
 26488   011998  C4DD F64F          	movff	postdec2,??_f_lseek+1
 26489   01199C  514E               	movf	??_f_lseek& (0+255),w,b
 26490   01199E  6F50               	movwf	(??_f_lseek+2)& (0+255),b
 26491   0119A0  514F               	movf	(??_f_lseek+1)& (0+255),w,b
 26492   0119A2  6F51               	movwf	(??_f_lseek+3)& (0+255),b
 26493   0119A4  6B52               	clrf	(??_f_lseek+4)& (0+255),b
 26494   0119A6  6B53               	clrf	(??_f_lseek+5)& (0+255),b
 26495   0119A8  0E09               	movlw	9
 26496   0119AA                     u15285:
 26497   0119AA  90D8               	bcf	status,0,c
 26498   0119AC  3750               	rlcf	(??_f_lseek+2)& (0+255),f,b
 26499   0119AE  3751               	rlcf	(??_f_lseek+3)& (0+255),f,b
 26500   0119B0  3752               	rlcf	(??_f_lseek+4)& (0+255),f,b
 26501   0119B2  3753               	rlcf	(??_f_lseek+5)& (0+255),f,b
 26502   0119B4  2EE8               	decfsz	wreg,f,c
 26503   0119B6  D7F9               	goto	u15285
 26504   0119B8  C650  F667         	movff	??_f_lseek+2,f_lseek@bcs
 26505   0119BC  C651  F668         	movff	??_f_lseek+3,f_lseek@bcs+1
 26506   0119C0  C652  F669         	movff	??_f_lseek+4,f_lseek@bcs+2
 26507   0119C4  C653  F66A         	movff	??_f_lseek+5,f_lseek@bcs+3
 26508                           
 26509                           ; BSR set to: 6
 26510                           ;fatfs/ff.c: 4522:    if (ifptr > 0 &&
 26511   0119C8  515E               	movf	f_lseek@ifptr& (0+255),w,b
 26512   0119CA  115F               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 26513   0119CC  1160               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 26514   0119CE  1161               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 26515   0119D0  B4D8               	btfsc	status,2,c
 26516   0119D2  D095               	goto	l11985
 26517                           
 26518                           ; BSR set to: 6
 26519   0119D4  0EFF               	movlw	255
 26520   0119D6  254A               	addwf	f_lseek@ofs& (0+255),w,b
 26521   0119D8  6E01               	movwf	___lldiv@dividend^(0+1280),c
 26522   0119DA  0EFF               	movlw	255
 26523   0119DC  214B               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 26524   0119DE  6E02               	movwf	(___lldiv@dividend+1)^(0+1280),c
 26525   0119E0  0EFF               	movlw	255
 26526   0119E2  214C               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 26527   0119E4  6E03               	movwf	(___lldiv@dividend+2)^(0+1280),c
 26528   0119E6  0EFF               	movlw	255
 26529   0119E8  214D               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 26530   0119EA  6E04               	movwf	(___lldiv@dividend+3)^(0+1280),c
 26531   0119EC  C667  F505         	movff	f_lseek@bcs,___lldiv@divisor
 26532   0119F0  C668  F506         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 26533   0119F4  C669  F507         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 26534   0119F8  C66A  F508         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 26535   0119FC  EC91  F0C9         	call	___lldiv	;wreg free
 26536   011A00  C501  F64E         	movff	?___lldiv,??_f_lseek
 26537   011A04  C502  F64F         	movff	?___lldiv+1,??_f_lseek+1
 26538   011A08  C503  F650         	movff	?___lldiv+2,??_f_lseek+2
 26539   011A0C  C504  F651         	movff	?___lldiv+3,??_f_lseek+3
 26540   011A10  0EFF               	movlw	255
 26541   011A12  255E               	addwf	f_lseek@ifptr& (0+255),w,b
 26542   011A14  6E01               	movwf	___lldiv@dividend^(0+1280),c
 26543   011A16  0EFF               	movlw	255
 26544   011A18  215F               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 26545   011A1A  6E02               	movwf	(___lldiv@dividend+1)^(0+1280),c
 26546   011A1C  0EFF               	movlw	255
 26547   011A1E  2160               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 26548   011A20  6E03               	movwf	(___lldiv@dividend+2)^(0+1280),c
 26549   011A22  0EFF               	movlw	255
 26550   011A24  2161               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 26551   011A26  6E04               	movwf	(___lldiv@dividend+3)^(0+1280),c
 26552   011A28  C667  F505         	movff	f_lseek@bcs,___lldiv@divisor
 26553   011A2C  C668  F506         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 26554   011A30  C669  F507         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 26555   011A34  C66A  F508         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 26556   011A38  EC91  F0C9         	call	___lldiv	;wreg free
 26557   011A3C  5001               	movf	?___lldiv^(0+1280),w,c
 26558   011A3E  5D4E               	subwf	??_f_lseek& (0+255),w,b
 26559   011A40  5002               	movf	(?___lldiv+1)^(0+1280),w,c
 26560   011A42  594F               	subwfb	(??_f_lseek+1)& (0+255),w,b
 26561   011A44  5003               	movf	(?___lldiv+2)^(0+1280),w,c
 26562   011A46  5950               	subwfb	(??_f_lseek+2)& (0+255),w,b
 26563   011A48  5004               	movf	(?___lldiv+3)^(0+1280),w,c
 26564   011A4A  5951               	subwfb	(??_f_lseek+3)& (0+255),w,b
 26565   011A4C  A0D8               	btfss	status,0,c
 26566   011A4E  D057               	goto	l11985
 26567                           
 26568                           ; BSR set to: 6
 26569                           ;fatfs/ff.c: 4523:     (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;fatfs/ff.c: 4524:     fp-
      +                          >fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);
 26570   011A50  0EFF               	movlw	255
 26571   011A52  2567               	addwf	f_lseek@bcs& (0+255),w,b
 26572   011A54  6F4E               	movwf	??_f_lseek& (0+255),b
 26573   011A56  0EFF               	movlw	255
 26574   011A58  2168               	addwfc	(f_lseek@bcs+1)& (0+255),w,b
 26575   011A5A  6F4F               	movwf	(??_f_lseek+1)& (0+255),b
 26576   011A5C  0EFF               	movlw	255
 26577   011A5E  2169               	addwfc	(f_lseek@bcs+2)& (0+255),w,b
 26578   011A60  6F50               	movwf	(??_f_lseek+2)& (0+255),b
 26579   011A62  0EFF               	movlw	255
 26580   011A64  216A               	addwfc	(f_lseek@bcs+3)& (0+255),w,b
 26581   011A66  6F51               	movwf	(??_f_lseek+3)& (0+255),b
 26582   011A68  1D4E               	comf	??_f_lseek& (0+255),w,b
 26583   011A6A  6F52               	movwf	(??_f_lseek+4)& (0+255),b
 26584   011A6C  1D4F               	comf	(??_f_lseek+1)& (0+255),w,b
 26585   011A6E  6F53               	movwf	(??_f_lseek+5)& (0+255),b
 26586   011A70  1D50               	comf	(??_f_lseek+2)& (0+255),w,b
 26587   011A72  6F54               	movwf	(??_f_lseek+6)& (0+255),b
 26588   011A74  1D51               	comf	(??_f_lseek+3)& (0+255),w,b
 26589   011A76  6F55               	movwf	(??_f_lseek+7)& (0+255),b
 26590   011A78  0EFF               	movlw	255
 26591   011A7A  255E               	addwf	f_lseek@ifptr& (0+255),w,b
 26592   011A7C  6F56               	movwf	(??_f_lseek+8)& (0+255),b
 26593   011A7E  0EFF               	movlw	255
 26594   011A80  215F               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 26595   011A82  6F57               	movwf	(??_f_lseek+9)& (0+255),b
 26596   011A84  0EFF               	movlw	255
 26597   011A86  2160               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 26598   011A88  6F58               	movwf	(??_f_lseek+10)& (0+255),b
 26599   011A8A  0EFF               	movlw	255
 26600   011A8C  2161               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 26601   011A8E  6F59               	movwf	(??_f_lseek+11)& (0+255),b
 26602   011A90  5152               	movf	(??_f_lseek+4)& (0+255),w,b
 26603   011A92  1556               	andwf	(??_f_lseek+8)& (0+255),w,b
 26604   011A94  6F5A               	movwf	(??_f_lseek+12)& (0+255),b
 26605   011A96  5153               	movf	(??_f_lseek+5)& (0+255),w,b
 26606   011A98  1557               	andwf	(??_f_lseek+9)& (0+255),w,b
 26607   011A9A  6F5B               	movwf	(??_f_lseek+13)& (0+255),b
 26608   011A9C  5154               	movf	(??_f_lseek+6)& (0+255),w,b
 26609   011A9E  1558               	andwf	(??_f_lseek+10)& (0+255),w,b
 26610   011AA0  6F5C               	movwf	(??_f_lseek+14)& (0+255),b
 26611   011AA2  5155               	movf	(??_f_lseek+7)& (0+255),w,b
 26612   011AA4  1559               	andwf	(??_f_lseek+11)& (0+255),w,b
 26613   011AA6  6F5D               	movwf	(??_f_lseek+15)& (0+255),b
 26614   011AA8  EE20 F010          	lfsr	2,16
 26615   011AAC  5148               	movf	f_lseek@fp& (0+255),w,b
 26616   011AAE  26D9               	addwf	fsr2l,f,c
 26617   011AB0  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26618   011AB2  22DA               	addwfc	fsr2h,f,c
 26619   011AB4  C65A  F4DE         	movff	??_f_lseek+12,postinc2
 26620   011AB8  C65B  F4DE         	movff	??_f_lseek+13,postinc2
 26621   011ABC  C65C  F4DE         	movff	??_f_lseek+14,postinc2
 26622   011AC0  C65D  F4DE         	movff	??_f_lseek+15,postinc2
 26623                           
 26624                           ;fatfs/ff.c: 4525:     ofs -= fp->fptr;
 26625   011AC4  EE20 F010          	lfsr	2,16
 26626   011AC8  5148               	movf	f_lseek@fp& (0+255),w,b
 26627   011ACA  26D9               	addwf	fsr2l,f,c
 26628   011ACC  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26629   011ACE  22DA               	addwfc	fsr2h,f,c
 26630   011AD0  50DE               	movf	postinc2,w,c
 26631   011AD2  5F4A               	subwf	f_lseek@ofs& (0+255),f,b
 26632   011AD4  50DE               	movf	postinc2,w,c
 26633   011AD6  5B4B               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 26634   011AD8  50DE               	movf	postinc2,w,c
 26635   011ADA  5B4C               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 26636   011ADC  50DD               	movf	postdec2,w,c
 26637   011ADE  5B4D               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 26638                           
 26639                           ;fatfs/ff.c: 4526:     clst = fp->clust;
 26640   011AE0  EE20 F014          	lfsr	2,20
 26641   011AE4  5148               	movf	f_lseek@fp& (0+255),w,b
 26642   011AE6  26D9               	addwf	fsr2l,f,c
 26643   011AE8  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26644   011AEA  22DA               	addwfc	fsr2h,f,c
 26645   011AEC  C4DE F66D          	movff	postinc2,f_lseek@clst
 26646   011AF0  C4DE F66E          	movff	postinc2,f_lseek@clst+1
 26647   011AF4  C4DE F66F          	movff	postinc2,f_lseek@clst+2
 26648   011AF8  C4DE F670          	movff	postinc2,f_lseek@clst+3
 26649                           
 26650                           ;fatfs/ff.c: 4527:    } else {
 26651   011AFC  D069               	goto	l12009
 26652   011AFE                     l11985:
 26653                           
 26654                           ; BSR set to: 6
 26655                           ;fatfs/ff.c: 4528:     clst = fp->obj.sclust;
 26656   011AFE  EE20 F006          	lfsr	2,6
 26657   011B02  5148               	movf	f_lseek@fp& (0+255),w,b
 26658   011B04  26D9               	addwf	fsr2l,f,c
 26659   011B06  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26660   011B08  22DA               	addwfc	fsr2h,f,c
 26661   011B0A  C4DE F66D          	movff	postinc2,f_lseek@clst
 26662   011B0E  C4DE F66E          	movff	postinc2,f_lseek@clst+1
 26663   011B12  C4DE F66F          	movff	postinc2,f_lseek@clst+2
 26664   011B16  C4DE F670          	movff	postinc2,f_lseek@clst+3
 26665                           
 26666                           ; BSR set to: 6
 26667                           ;fatfs/ff.c: 4530:     if (clst == 0) {
 26668   011B1A  516D               	movf	f_lseek@clst& (0+255),w,b
 26669   011B1C  116E               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 26670   011B1E  116F               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 26671   011B20  1170               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 26672   011B22  A4D8               	btfss	status,2,c
 26673   011B24  D047               	goto	l731
 26674                           
 26675                           ; BSR set to: 6
 26676                           ;fatfs/ff.c: 4531:      clst = create_chain(&fp->obj, 0);
 26677   011B26  C648  F62B         	movff	f_lseek@fp,create_chain@obj
 26678   011B2A  C649  F62C         	movff	f_lseek@fp+1,create_chain@obj+1
 26679   011B2E  0E00               	movlw	0
 26680   011B30  6F2D               	movwf	create_chain@clst& (0+255),b
 26681   011B32  0E00               	movlw	0
 26682   011B34  6F2E               	movwf	(create_chain@clst+1)& (0+255),b
 26683   011B36  0E00               	movlw	0
 26684   011B38  6F2F               	movwf	(create_chain@clst+2)& (0+255),b
 26685   011B3A  0E00               	movlw	0
 26686   011B3C  6F30               	movwf	(create_chain@clst+3)& (0+255),b
 26687   011B3E  EC94  F098         	call	_create_chain	;wreg free
 26688   011B42  C62B  F66D         	movff	?_create_chain,f_lseek@clst
 26689   011B46  C62C  F66E         	movff	?_create_chain+1,f_lseek@clst+1
 26690   011B4A  C62D  F66F         	movff	?_create_chain+2,f_lseek@clst+2
 26691   011B4E  C62E  F670         	movff	?_create_chain+3,f_lseek@clst+3
 26692                           
 26693                           ; BSR set to: 6
 26694                           ;fatfs/ff.c: 4532:      if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR
      +                          ; };
 26695   011B52  056D               	decf	f_lseek@clst& (0+255),w,b
 26696   011B54  116E               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 26697   011B56  116F               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 26698   011B58  1170               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 26699   011B5A  A4D8               	btfss	status,2,c
 26700   011B5C  D00A               	goto	l11999
 26701   011B5E                     u15320:
 26702                           
 26703                           ; BSR set to: 6
 26704   011B5E  EE20 F00F          	lfsr	2,15
 26705   011B62  5148               	movf	f_lseek@fp& (0+255),w,b
 26706   011B64  26D9               	addwf	fsr2l,f,c
 26707   011B66  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26708   011B68  22DA               	addwfc	fsr2h,f,c
 26709   011B6A  0E02               	movlw	2
 26710   011B6C  6EDF               	movwf	indf2,c
 26711                           
 26712                           ; BSR set to: 6
 26713   011B6E  0E02               	movlw	2
 26714   011B70  0012               	return	
 26715   011B72                     l11999:
 26716                           
 26717                           ; BSR set to: 6
 26718                           ;fatfs/ff.c: 4533:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return 
      +                          FR_DISK_ERR; };
 26719   011B72  296D               	incf	f_lseek@clst& (0+255),w,b
 26720   011B74  E111               	bnz	l12007
 26721   011B76  296E               	incf	(f_lseek@clst+1)& (0+255),w,b
 26722   011B78  E10F               	bnz	l12007
 26723   011B7A  296F               	incf	(f_lseek@clst+2)& (0+255),w,b
 26724   011B7C  E10D               	bnz	l12007
 26725   011B7E  2970               	incf	(f_lseek@clst+3)& (0+255),w,b
 26726   011B80  A4D8               	btfss	status,2,c
 26727   011B82  D00A               	goto	l12007
 26728   011B84                     u15330:
 26729                           
 26730                           ; BSR set to: 6
 26731   011B84  EE20 F00F          	lfsr	2,15
 26732   011B88  5148               	movf	f_lseek@fp& (0+255),w,b
 26733   011B8A  26D9               	addwf	fsr2l,f,c
 26734   011B8C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26735   011B8E  22DA               	addwfc	fsr2h,f,c
 26736   011B90  0E01               	movlw	1
 26737   011B92  6EDF               	movwf	indf2,c
 26738                           
 26739                           ; BSR set to: 6
 26740   011B94  0E01               	movlw	1
 26741   011B96  0012               	return	
 26742   011B98                     l12007:
 26743                           
 26744                           ; BSR set to: 6
 26745                           ;fatfs/ff.c: 4534:      fp->obj.sclust = clst;
 26746   011B98  EE20 F006          	lfsr	2,6
 26747   011B9C  5148               	movf	f_lseek@fp& (0+255),w,b
 26748   011B9E  26D9               	addwf	fsr2l,f,c
 26749   011BA0  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26750   011BA2  22DA               	addwfc	fsr2h,f,c
 26751   011BA4  C66D  F4DE         	movff	f_lseek@clst,postinc2
 26752   011BA8  C66E  F4DE         	movff	f_lseek@clst+1,postinc2
 26753   011BAC  C66F  F4DE         	movff	f_lseek@clst+2,postinc2
 26754   011BB0  C670  F4DE         	movff	f_lseek@clst+3,postinc2
 26755   011BB4                     l731:
 26756                           
 26757                           ; BSR set to: 6
 26758                           ;fatfs/ff.c: 4537:     fp->clust = clst;
 26759   011BB4  EE20 F014          	lfsr	2,20
 26760   011BB8  5148               	movf	f_lseek@fp& (0+255),w,b
 26761   011BBA  26D9               	addwf	fsr2l,f,c
 26762   011BBC  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26763   011BBE  22DA               	addwfc	fsr2h,f,c
 26764   011BC0  C66D  F4DE         	movff	f_lseek@clst,postinc2
 26765   011BC4  C66E  F4DE         	movff	f_lseek@clst+1,postinc2
 26766   011BC8  C66F  F4DE         	movff	f_lseek@clst+2,postinc2
 26767   011BCC  C670  F4DE         	movff	f_lseek@clst+3,postinc2
 26768   011BD0                     l12009:
 26769                           
 26770                           ; BSR set to: 6
 26771                           ;fatfs/ff.c: 4539:    if (clst != 0) {
 26772   011BD0  516D               	movf	f_lseek@clst& (0+255),w,b
 26773   011BD2  116E               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 26774   011BD4  116F               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 26775   011BD6  1170               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 26776   011BD8  A4D8               	btfss	status,2,c
 26777   011BDA  D08A               	goto	l12055
 26778   011BDC  D0E9               	goto	l12073
 26779   011BDE                     l12013:
 26780                           
 26781                           ; BSR set to: 6
 26782                           ;fatfs/ff.c: 4541:      ofs -= bcs; fp->fptr += bcs;
 26783   011BDE  5167               	movf	f_lseek@bcs& (0+255),w,b
 26784   011BE0  5F4A               	subwf	f_lseek@ofs& (0+255),f,b
 26785   011BE2  5168               	movf	(f_lseek@bcs+1)& (0+255),w,b
 26786   011BE4  5B4B               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 26787   011BE6  5169               	movf	(f_lseek@bcs+2)& (0+255),w,b
 26788   011BE8  5B4C               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 26789   011BEA  516A               	movf	(f_lseek@bcs+3)& (0+255),w,b
 26790   011BEC  5B4D               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 26791                           
 26792                           ; BSR set to: 6
 26793   011BEE  EE20 F010          	lfsr	2,16
 26794   011BF2  5148               	movf	f_lseek@fp& (0+255),w,b
 26795   011BF4  26D9               	addwf	fsr2l,f,c
 26796   011BF6  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26797   011BF8  22DA               	addwfc	fsr2h,f,c
 26798   011BFA  5167               	movf	f_lseek@bcs& (0+255),w,b
 26799   011BFC  26DE               	addwf	postinc2,f,c
 26800   011BFE  5168               	movf	(f_lseek@bcs+1)& (0+255),w,b
 26801   011C00  22DE               	addwfc	postinc2,f,c
 26802   011C02  5169               	movf	(f_lseek@bcs+2)& (0+255),w,b
 26803   011C04  22DE               	addwfc	postinc2,f,c
 26804   011C06  516A               	movf	(f_lseek@bcs+3)& (0+255),w,b
 26805   011C08  22DE               	addwfc	postinc2,f,c
 26806                           
 26807                           ; BSR set to: 6
 26808                           ;fatfs/ff.c: 4543:      if (fp->flag & 0x02) {
 26809   011C0A  EE20 F00E          	lfsr	2,14
 26810   011C0E  5148               	movf	f_lseek@fp& (0+255),w,b
 26811   011C10  26D9               	addwf	fsr2l,f,c
 26812   011C12  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26813   011C14  22DA               	addwfc	fsr2h,f,c
 26814   011C16  A2DF               	btfss	indf2,1,c
 26815   011C18  D025               	goto	l12033
 26816                           
 26817                           ; BSR set to: 6
 26818                           ;fatfs/ff.c: 4548:       clst = create_chain(&fp->obj, clst);
 26819   011C1A  C648  F62B         	movff	f_lseek@fp,create_chain@obj
 26820   011C1E  C649  F62C         	movff	f_lseek@fp+1,create_chain@obj+1
 26821   011C22  C66D  F62D         	movff	f_lseek@clst,create_chain@clst
 26822   011C26  C66E  F62E         	movff	f_lseek@clst+1,create_chain@clst+1
 26823   011C2A  C66F  F62F         	movff	f_lseek@clst+2,create_chain@clst+2
 26824   011C2E  C670  F630         	movff	f_lseek@clst+3,create_chain@clst+3
 26825   011C32  EC94  F098         	call	_create_chain	;wreg free
 26826   011C36  C62B  F66D         	movff	?_create_chain,f_lseek@clst
 26827   011C3A  C62C  F66E         	movff	?_create_chain+1,f_lseek@clst+1
 26828   011C3E  C62D  F66F         	movff	?_create_chain+2,f_lseek@clst+2
 26829   011C42  C62E  F670         	movff	?_create_chain+3,f_lseek@clst+3
 26830                           
 26831                           ; BSR set to: 6
 26832                           ;fatfs/ff.c: 4549:       if (clst == 0) {
 26833   011C46  516D               	movf	f_lseek@clst& (0+255),w,b
 26834   011C48  116E               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 26835   011C4A  116F               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 26836   011C4C  1170               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 26837   011C4E  A4D8               	btfss	status,2,c
 26838   011C50  D01F               	goto	l12035
 26839                           
 26840                           ; BSR set to: 6
 26841                           ;fatfs/ff.c: 4550:        ofs = 0; break;
 26842   011C52  0E00               	movlw	0
 26843   011C54  6F4A               	movwf	f_lseek@ofs& (0+255),b
 26844   011C56  0E00               	movlw	0
 26845   011C58  6F4B               	movwf	(f_lseek@ofs+1)& (0+255),b
 26846   011C5A  0E00               	movlw	0
 26847   011C5C  6F4C               	movwf	(f_lseek@ofs+2)& (0+255),b
 26848   011C5E  0E00               	movlw	0
 26849   011C60  6F4D               	movwf	(f_lseek@ofs+3)& (0+255),b
 26850   011C62  D050               	goto	u15400
 26851   011C64                     l12033:
 26852                           
 26853                           ; BSR set to: 6
 26854                           ;fatfs/ff.c: 4554:      {;fatfs/ff.c: 4555:       clst = get_fat(&fp->obj, clst);
 26855   011C64  C648  F60A         	movff	f_lseek@fp,get_fat@obj
 26856   011C68  C649  F60B         	movff	f_lseek@fp+1,get_fat@obj+1
 26857   011C6C  C66D  F60C         	movff	f_lseek@clst,get_fat@clst
 26858   011C70  C66E  F60D         	movff	f_lseek@clst+1,get_fat@clst+1
 26859   011C74  C66F  F60E         	movff	f_lseek@clst+2,get_fat@clst+2
 26860   011C78  C670  F60F         	movff	f_lseek@clst+3,get_fat@clst+3
 26861   011C7C  EC66  F0A0         	call	_get_fat	;wreg free
 26862   011C80  C60A  F66D         	movff	?_get_fat,f_lseek@clst
 26863   011C84  C60B  F66E         	movff	?_get_fat+1,f_lseek@clst+1
 26864   011C88  C60C  F66F         	movff	?_get_fat+2,f_lseek@clst+2
 26865   011C8C  C60D  F670         	movff	?_get_fat+3,f_lseek@clst+3
 26866   011C90                     l12035:
 26867                           
 26868                           ;fatfs/ff.c: 4557:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return 
      +                          FR_DISK_ERR; };
 26869   011C90  0106               	movlb	6	; () banked
 26870   011C92  296D               	incf	f_lseek@clst& (0+255),w,b
 26871   011C94  E107               	bnz	l12043
 26872   011C96  296E               	incf	(f_lseek@clst+1)& (0+255),w,b
 26873   011C98  E105               	bnz	l12043
 26874   011C9A  296F               	incf	(f_lseek@clst+2)& (0+255),w,b
 26875   011C9C  E103               	bnz	l12043
 26876   011C9E  2970               	incf	(f_lseek@clst+3)& (0+255),w,b
 26877   011CA0  B4D8               	btfsc	status,2,c
 26878   011CA2  D770               	goto	u15330
 26879   011CA4                     l12043:
 26880                           
 26881                           ; BSR set to: 6
 26882                           ;fatfs/ff.c: 4558:      if (clst <= 1 || clst >= fs->n_fatent) { fp->err = (BYTE)(FR_INT
      +                          _ERR); return FR_INT_ERR; };
 26883   011CA4  5170               	movf	(f_lseek@clst+3)& (0+255),w,b
 26884   011CA6  116F               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 26885   011CA8  116E               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 26886   011CAA  E104               	bnz	u15380
 26887   011CAC  0E02               	movlw	2
 26888   011CAE  5D6D               	subwf	f_lseek@clst& (0+255),w,b
 26889   011CB0  A0D8               	btfss	status,0,c
 26890   011CB2  D755               	goto	u15320
 26891   011CB4                     u15380:
 26892                           
 26893                           ; BSR set to: 6
 26894   011CB4  EE20 F014          	lfsr	2,20
 26895   011CB8  516B               	movf	f_lseek@fs& (0+255),w,b
 26896   011CBA  26D9               	addwf	fsr2l,f,c
 26897   011CBC  516C               	movf	(f_lseek@fs+1)& (0+255),w,b
 26898   011CBE  22DA               	addwfc	fsr2h,f,c
 26899   011CC0  50DE               	movf	postinc2,w,c
 26900   011CC2  5D6D               	subwf	f_lseek@clst& (0+255),w,b
 26901   011CC4  50DE               	movf	postinc2,w,c
 26902   011CC6  596E               	subwfb	(f_lseek@clst+1)& (0+255),w,b
 26903   011CC8  50DE               	movf	postinc2,w,c
 26904   011CCA  596F               	subwfb	(f_lseek@clst+2)& (0+255),w,b
 26905   011CCC  50DE               	movf	postinc2,w,c
 26906   011CCE  5970               	subwfb	(f_lseek@clst+3)& (0+255),w,b
 26907   011CD0  B0D8               	btfsc	status,0,c
 26908   011CD2  D745               	goto	u15320
 26909                           
 26910                           ; BSR set to: 6
 26911                           ;fatfs/ff.c: 4559:      fp->clust = clst;
 26912                           
 26913                           ; BSR set to: 6
 26914   011CD4  EE20 F014          	lfsr	2,20
 26915   011CD8  5148               	movf	f_lseek@fp& (0+255),w,b
 26916   011CDA  26D9               	addwf	fsr2l,f,c
 26917   011CDC  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26918   011CDE  22DA               	addwfc	fsr2h,f,c
 26919   011CE0  C66D  F4DE         	movff	f_lseek@clst,postinc2
 26920   011CE4  C66E  F4DE         	movff	f_lseek@clst+1,postinc2
 26921   011CE8  C66F  F4DE         	movff	f_lseek@clst+2,postinc2
 26922   011CEC  C670  F4DE         	movff	f_lseek@clst+3,postinc2
 26923   011CF0                     l12055:
 26924                           
 26925                           ; BSR set to: 6
 26926                           ;fatfs/ff.c: 4540:     while (ofs > bcs) {
 26927   011CF0  514A               	movf	f_lseek@ofs& (0+255),w,b
 26928   011CF2  5D67               	subwf	f_lseek@bcs& (0+255),w,b
 26929   011CF4  514B               	movf	(f_lseek@ofs+1)& (0+255),w,b
 26930   011CF6  5968               	subwfb	(f_lseek@bcs+1)& (0+255),w,b
 26931   011CF8  514C               	movf	(f_lseek@ofs+2)& (0+255),w,b
 26932   011CFA  5969               	subwfb	(f_lseek@bcs+2)& (0+255),w,b
 26933   011CFC  514D               	movf	(f_lseek@ofs+3)& (0+255),w,b
 26934   011CFE  596A               	subwfb	(f_lseek@bcs+3)& (0+255),w,b
 26935   011D00  A0D8               	btfss	status,0,c
 26936   011D02  D76D               	goto	l12013
 26937   011D04                     u15400:
 26938                           
 26939                           ; BSR set to: 6
 26940                           ;fatfs/ff.c: 4561:     fp->fptr += ofs;
 26941   011D04  EE20 F010          	lfsr	2,16
 26942   011D08  5148               	movf	f_lseek@fp& (0+255),w,b
 26943   011D0A  26D9               	addwf	fsr2l,f,c
 26944   011D0C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 26945   011D0E  22DA               	addwfc	fsr2h,f,c
 26946   011D10  514A               	movf	f_lseek@ofs& (0+255),w,b
 26947   011D12  26DE               	addwf	postinc2,f,c
 26948   011D14  514B               	movf	(f_lseek@ofs+1)& (0+255),w,b
 26949   011D16  22DE               	addwfc	postinc2,f,c
 26950   011D18  514C               	movf	(f_lseek@ofs+2)& (0+255),w,b
 26951   011D1A  22DE               	addwfc	postinc2,f,c
 26952   011D1C  514D               	movf	(f_lseek@ofs+3)& (0+255),w,b
 26953   011D1E  22DE               	addwfc	postinc2,f,c
 26954                           
 26955                           ; BSR set to: 6
 26956                           ;fatfs/ff.c: 4562:     if (ofs % ((UINT)512)) {
 26957   011D20  0EFF               	movlw	255
 26958   011D22  154A               	andwf	f_lseek@ofs& (0+255),w,b
 26959   011D24  6F4E               	movwf	??_f_lseek& (0+255),b
 26960   011D26  0E01               	movlw	1
 26961   011D28  154B               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 26962   011D2A  6F4F               	movwf	(??_f_lseek+1)& (0+255),b
 26963   011D2C  0E00               	movlw	0
 26964   011D2E  154C               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 26965   011D30  6F50               	movwf	(??_f_lseek+2)& (0+255),b
 26966   011D32  0E00               	movlw	0
 26967   011D34  154D               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 26968   011D36  6F51               	movwf	(??_f_lseek+3)& (0+255),b
 26969   011D38  514E               	movf	??_f_lseek& (0+255),w,b
 26970   011D3A  114F               	iorwf	(??_f_lseek+1)& (0+255),w,b
 26971   011D3C  1150               	iorwf	(??_f_lseek+2)& (0+255),w,b
 26972   011D3E  1151               	iorwf	(??_f_lseek+3)& (0+255),w,b
 26973   011D40  B4D8               	btfsc	status,2,c
 26974   011D42  D036               	goto	l12073
 26975                           
 26976                           ; BSR set to: 6
 26977                           ;fatfs/ff.c: 4563:      nsect = clst2sect(fs, clst);
 26978   011D44  C66B  F50D         	movff	f_lseek@fs,clst2sect@fs
 26979   011D48  C66C  F50E         	movff	f_lseek@fs+1,clst2sect@fs+1
 26980   011D4C  C66D  F50F         	movff	f_lseek@clst,clst2sect@clst
 26981   011D50  C66E  F510         	movff	f_lseek@clst+1,clst2sect@clst+1
 26982   011D54  C66F  F511         	movff	f_lseek@clst+2,clst2sect@clst+2
 26983   011D58  C670  F512         	movff	f_lseek@clst+3,clst2sect@clst+3
 26984   011D5C  ECBA  F0C3         	call	_clst2sect	;wreg free
 26985   011D60  C50D  F662         	movff	?_clst2sect,f_lseek@nsect
 26986   011D64  C50E  F663         	movff	?_clst2sect+1,f_lseek@nsect+1
 26987   011D68  C50F  F664         	movff	?_clst2sect+2,f_lseek@nsect+2
 26988   011D6C  C510  F665         	movff	?_clst2sect+3,f_lseek@nsect+3
 26989                           
 26990                           ;fatfs/ff.c: 4564:      if (nsect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 26991   011D70  0106               	movlb	6	; () banked
 26992   011D72  5162               	movf	f_lseek@nsect& (0+255),w,b
 26993   011D74  1163               	iorwf	(f_lseek@nsect+1)& (0+255),w,b
 26994   011D76  1164               	iorwf	(f_lseek@nsect+2)& (0+255),w,b
 26995   011D78  1165               	iorwf	(f_lseek@nsect+3)& (0+255),w,b
 26996   011D7A  B4D8               	btfsc	status,2,c
 26997   011D7C  D6F0               	goto	u15320
 26998                           
 26999                           ; BSR set to: 6
 27000                           ;fatfs/ff.c: 4565:      nsect += (DWORD)(ofs / ((UINT)512));
 27001                           
 27002                           ; BSR set to: 6
 27003   011D7E  C64A  F64E         	movff	f_lseek@ofs,??_f_lseek
 27004   011D82  C64B  F64F         	movff	f_lseek@ofs+1,??_f_lseek+1
 27005   011D86  C64C  F650         	movff	f_lseek@ofs+2,??_f_lseek+2
 27006   011D8A  C64D  F651         	movff	f_lseek@ofs+3,??_f_lseek+3
 27007   011D8E  0E0A               	movlw	10
 27008   011D90  D005               	goto	u15430
 27009   011D92                     u15435:
 27010   011D92  90D8               	bcf	status,0,c
 27011   011D94  3351               	rrcf	(??_f_lseek+3)& (0+255),f,b
 27012   011D96  3350               	rrcf	(??_f_lseek+2)& (0+255),f,b
 27013   011D98  334F               	rrcf	(??_f_lseek+1)& (0+255),f,b
 27014   011D9A  334E               	rrcf	??_f_lseek& (0+255),f,b
 27015   011D9C                     u15430:
 27016   011D9C  2EE8               	decfsz	wreg,f,c
 27017   011D9E  D7F9               	goto	u15435
 27018   011DA0  514E               	movf	??_f_lseek& (0+255),w,b
 27019   011DA2  2762               	addwf	f_lseek@nsect& (0+255),f,b
 27020   011DA4  514F               	movf	(??_f_lseek+1)& (0+255),w,b
 27021   011DA6  2363               	addwfc	(f_lseek@nsect+1)& (0+255),f,b
 27022   011DA8  5150               	movf	(??_f_lseek+2)& (0+255),w,b
 27023   011DAA  2364               	addwfc	(f_lseek@nsect+2)& (0+255),f,b
 27024   011DAC  5151               	movf	(??_f_lseek+3)& (0+255),w,b
 27025   011DAE  2365               	addwfc	(f_lseek@nsect+3)& (0+255),f,b
 27026   011DB0                     l12073:
 27027                           
 27028                           ; BSR set to: 6
 27029   011DB0  EE20 F010          	lfsr	2,16
 27030   011DB4  5148               	movf	f_lseek@fp& (0+255),w,b
 27031   011DB6  26D9               	addwf	fsr2l,f,c
 27032   011DB8  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27033   011DBA  22DA               	addwfc	fsr2h,f,c
 27034   011DBC  EE10 F00A          	lfsr	1,10
 27035   011DC0  5148               	movf	f_lseek@fp& (0+255),w,b
 27036   011DC2  26E1               	addwf	fsr1l,f,c
 27037   011DC4  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27038   011DC6  22E2               	addwfc	fsr1h,f,c
 27039   011DC8  50DE               	movf	postinc2,w,c
 27040   011DCA  5CE6               	subwf	postinc1,w,c
 27041   011DCC  50DE               	movf	postinc2,w,c
 27042   011DCE  58E6               	subwfb	postinc1,w,c
 27043   011DD0  50DE               	movf	postinc2,w,c
 27044   011DD2  58E6               	subwfb	postinc1,w,c
 27045   011DD4  50DE               	movf	postinc2,w,c
 27046   011DD6  58E6               	subwfb	postinc1,w,c
 27047   011DD8  B0D8               	btfsc	status,0,c
 27048   011DDA  D01C               	goto	l12079
 27049                           
 27050                           ; BSR set to: 6
 27051                           ;fatfs/ff.c: 4570:    fp->obj.objsize = fp->fptr;
 27052   011DDC  EE20 F010          	lfsr	2,16
 27053   011DE0  5148               	movf	f_lseek@fp& (0+255),w,b
 27054   011DE2  26D9               	addwf	fsr2l,f,c
 27055   011DE4  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27056   011DE6  22DA               	addwfc	fsr2h,f,c
 27057   011DE8  EE10 F00A          	lfsr	1,10
 27058   011DEC  5148               	movf	f_lseek@fp& (0+255),w,b
 27059   011DEE  26E1               	addwf	fsr1l,f,c
 27060   011DF0  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27061   011DF2  22E2               	addwfc	fsr1h,f,c
 27062   011DF4  C4DE F4E6          	movff	postinc2,postinc1
 27063   011DF8  C4DE F4E6          	movff	postinc2,postinc1
 27064   011DFC  C4DE F4E6          	movff	postinc2,postinc1
 27065   011E00  C4DE F4E6          	movff	postinc2,postinc1
 27066                           
 27067                           ; BSR set to: 6
 27068                           ;fatfs/ff.c: 4571:    fp->flag |= 0x40;
 27069   011E04  EE20 F00E          	lfsr	2,14
 27070   011E08  5148               	movf	f_lseek@fp& (0+255),w,b
 27071   011E0A  26D9               	addwf	fsr2l,f,c
 27072   011E0C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27073   011E0E  22DA               	addwfc	fsr2h,f,c
 27074   011E10  0E00               	movlw	0
 27075   011E12  8CDB               	bsf	plusw2,6,c
 27076   011E14                     l12079:
 27077                           
 27078                           ; BSR set to: 6
 27079                           ;fatfs/ff.c: 4573:   if (fp->fptr % ((UINT)512) && nsect != fp->sect) {
 27080   011E14  EE20 F010          	lfsr	2,16
 27081   011E18  5148               	movf	f_lseek@fp& (0+255),w,b
 27082   011E1A  26D9               	addwf	fsr2l,f,c
 27083   011E1C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27084   011E1E  22DA               	addwfc	fsr2h,f,c
 27085   011E20  0EFF               	movlw	255
 27086   011E22  14DE               	andwf	postinc2,w,c
 27087   011E24  6F4E               	movwf	??_f_lseek& (0+255),b
 27088   011E26  0E01               	movlw	1
 27089   011E28  14DE               	andwf	postinc2,w,c
 27090   011E2A  6F4F               	movwf	(??_f_lseek+1)& (0+255),b
 27091   011E2C  0E00               	movlw	0
 27092   011E2E  14DE               	andwf	postinc2,w,c
 27093   011E30  6F50               	movwf	(??_f_lseek+2)& (0+255),b
 27094   011E32  0E00               	movlw	0
 27095   011E34  14DE               	andwf	postinc2,w,c
 27096   011E36  6F51               	movwf	(??_f_lseek+3)& (0+255),b
 27097   011E38  514E               	movf	??_f_lseek& (0+255),w,b
 27098   011E3A  114F               	iorwf	(??_f_lseek+1)& (0+255),w,b
 27099   011E3C  1150               	iorwf	(??_f_lseek+2)& (0+255),w,b
 27100   011E3E  1151               	iorwf	(??_f_lseek+3)& (0+255),w,b
 27101   011E40  B4D8               	btfsc	status,2,c
 27102   011E42  D550               	goto	u15240
 27103                           
 27104                           ; BSR set to: 6
 27105   011E44  EE20 F018          	lfsr	2,24
 27106   011E48  5148               	movf	f_lseek@fp& (0+255),w,b
 27107   011E4A  26D9               	addwf	fsr2l,f,c
 27108   011E4C  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27109   011E4E  22DA               	addwfc	fsr2h,f,c
 27110   011E50  5162               	movf	f_lseek@nsect& (0+255),w,b
 27111   011E52  18DE               	xorwf	postinc2,w,c
 27112   011E54  E10A               	bnz	u15460
 27113   011E56  5163               	movf	(f_lseek@nsect+1)& (0+255),w,b
 27114   011E58  18DE               	xorwf	postinc2,w,c
 27115   011E5A  E107               	bnz	u15460
 27116   011E5C  5164               	movf	(f_lseek@nsect+2)& (0+255),w,b
 27117   011E5E  18DE               	xorwf	postinc2,w,c
 27118   011E60  E104               	bnz	u15460
 27119   011E62  5165               	movf	(f_lseek@nsect+3)& (0+255),w,b
 27120   011E64  18DE               	xorwf	postinc2,w,c
 27121   011E66  B4D8               	btfsc	status,2,c
 27122   011E68  D53D               	goto	u15240
 27123   011E6A                     u15460:
 27124                           
 27125                           ; BSR set to: 6
 27126                           ;fatfs/ff.c: 4576:    if (fp->flag & 0x80) {
 27127   011E6A  EE20 F00E          	lfsr	2,14
 27128   011E6E  5148               	movf	f_lseek@fp& (0+255),w,b
 27129   011E70  26D9               	addwf	fsr2l,f,c
 27130   011E72  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27131   011E74  22DA               	addwfc	fsr2h,f,c
 27132   011E76  AEDF               	btfss	indf2,7,c
 27133   011E78  D033               	goto	l12095
 27134                           
 27135                           ; BSR set to: 6
 27136                           ;fatfs/ff.c: 4577:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp->e
      +                          rr = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 27137   011E7A  0E22               	movlw	34
 27138   011E7C  2548               	addwf	f_lseek@fp& (0+255),w,b
 27139   011E7E  0105               	movlb	5	; () banked
 27140   011E80  6FE2               	movwf	disk_write@buff& (0+255),b
 27141   011E82  0E00               	movlw	0
 27142   011E84  0106               	movlb	6	; () banked
 27143   011E86  2149               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 27144   011E88  0105               	movlb	5	; () banked
 27145   011E8A  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 27146   011E8C  0106               	movlb	6	; () banked
 27147   011E8E  EE20 F018          	lfsr	2,24
 27148   011E92  5148               	movf	f_lseek@fp& (0+255),w,b
 27149   011E94  26D9               	addwf	fsr2l,f,c
 27150   011E96  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27151   011E98  22DA               	addwfc	fsr2h,f,c
 27152   011E9A  C4DE F5E4          	movff	postinc2,disk_write@sector
 27153   011E9E  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 27154   011EA2  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 27155   011EA6  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 27156   011EAA  0E00               	movlw	0
 27157   011EAC  0105               	movlb	5	; () banked
 27158   011EAE  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 27159   011EB0  0E01               	movlw	1
 27160   011EB2  6FE8               	movwf	disk_write@count& (0+255),b
 27161   011EB4  0106               	movlb	6	; () banked
 27162   011EB6  EE20 F001          	lfsr	2,1
 27163   011EBA  516B               	movf	f_lseek@fs& (0+255),w,b
 27164   011EBC  26D9               	addwf	fsr2l,f,c
 27165   011EBE  516C               	movf	(f_lseek@fs+1)& (0+255),w,b
 27166   011EC0  22DA               	addwfc	fsr2h,f,c
 27167   011EC2  50DF               	movf	indf2,w,c
 27168   011EC4  EC0F  F0C9         	call	_disk_write
 27169   011EC8  0900               	iorlw	0
 27170   011ECA  A4D8               	btfss	status,2,c
 27171   011ECC  D02B               	goto	u15490
 27172                           
 27173                           ; BSR set to: 5
 27174                           ;fatfs/ff.c: 4578:     fp->flag &= (BYTE)~0x80;
 27175                           
 27176                           ; BSR set to: 5
 27177   011ECE  0106               	movlb	6	; () banked
 27178   011ED0  EE20 F00E          	lfsr	2,14
 27179   011ED4  5148               	movf	f_lseek@fp& (0+255),w,b
 27180   011ED6  26D9               	addwf	fsr2l,f,c
 27181   011ED8  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27182   011EDA  22DA               	addwfc	fsr2h,f,c
 27183   011EDC  0E7F               	movlw	127
 27184   011EDE  16DF               	andwf	indf2,f,c
 27185   011EE0                     l12095:
 27186                           
 27187                           ; BSR set to: 6
 27188                           ;fatfs/ff.c: 4581:    if (disk_read(fs->pdrv, fp->buf, nsect, 1) != RES_OK) { fp->err = 
      +                          (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 27189   011EE0  0E22               	movlw	34
 27190   011EE2  2548               	addwf	f_lseek@fp& (0+255),w,b
 27191   011EE4  0105               	movlb	5	; () banked
 27192   011EE6  6FE4               	movwf	disk_read@buff& (0+255),b
 27193   011EE8  0E00               	movlw	0
 27194   011EEA  0106               	movlb	6	; () banked
 27195   011EEC  2149               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 27196   011EEE  0105               	movlb	5	; () banked
 27197   011EF0  6FE5               	movwf	(disk_read@buff+1)& (0+255),b
 27198   011EF2  C662  F5E6         	movff	f_lseek@nsect,disk_read@sector
 27199   011EF6  C663  F5E7         	movff	f_lseek@nsect+1,disk_read@sector+1
 27200   011EFA  C664  F5E8         	movff	f_lseek@nsect+2,disk_read@sector+2
 27201   011EFE  C665  F5E9         	movff	f_lseek@nsect+3,disk_read@sector+3
 27202   011F02  0E00               	movlw	0
 27203   011F04  6FEB               	movwf	(disk_read@count+1)& (0+255),b
 27204   011F06  0E01               	movlw	1
 27205   011F08  6FEA               	movwf	disk_read@count& (0+255),b
 27206   011F0A  0106               	movlb	6	; () banked
 27207   011F0C  EE20 F001          	lfsr	2,1
 27208   011F10  516B               	movf	f_lseek@fs& (0+255),w,b
 27209   011F12  26D9               	addwf	fsr2l,f,c
 27210   011F14  516C               	movf	(f_lseek@fs+1)& (0+255),w,b
 27211   011F16  22DA               	addwfc	fsr2h,f,c
 27212   011F18  50DF               	movf	indf2,w,c
 27213   011F1A  EC50  F0C9         	call	_disk_read
 27214   011F1E  0900               	iorlw	0
 27215   011F20  B4D8               	btfsc	status,2,c
 27216   011F22  D002               	goto	l12103
 27217   011F24                     u15490:
 27218                           
 27219                           ; BSR set to: 5
 27220   011F24  0106               	movlb	6	; () banked
 27221   011F26  D62E               	goto	u15330
 27222   011F28                     l12103:
 27223                           
 27224                           ; BSR set to: 5
 27225                           ;fatfs/ff.c: 4583:    fp->sect = nsect;
 27226   011F28  0106               	movlb	6	; () banked
 27227   011F2A  EE20 F018          	lfsr	2,24
 27228   011F2E  5148               	movf	f_lseek@fp& (0+255),w,b
 27229   011F30  26D9               	addwf	fsr2l,f,c
 27230   011F32  5149               	movf	(f_lseek@fp+1)& (0+255),w,b
 27231   011F34  22DA               	addwfc	fsr2h,f,c
 27232   011F36  C662  F4DE         	movff	f_lseek@nsect,postinc2
 27233   011F3A  C663  F4DE         	movff	f_lseek@nsect+1,postinc2
 27234   011F3E  C664  F4DE         	movff	f_lseek@nsect+2,postinc2
 27235   011F42  C665  F4DE         	movff	f_lseek@nsect+3,postinc2
 27236   011F46  D4CE               	goto	u15240
 27237   011F48                     __end_of_f_lseek:
 27238                           	callstack 0
 27239                           
 27240 ;; *************** function _validate *****************
 27241 ;; Defined at:
 27242 ;;		line 3613 in file "fatfs/ff.c"
 27243 ;; Parameters:    Size  Location     Type
 27244 ;;  obj             2   70[BANK5 ] PTR struct .
 27245 ;;		 -> files(3276), fsdir(40), 
 27246 ;;  rfs             2   72[BANK5 ] PTR PTR struct .
 27247 ;;		 -> f_truncate@fs(2), f_readdir@fs(2), f_closedir@fs(2), f_lseek@fs(2), 
 27248 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 27249 ;; Auto vars:     Size  Location     Type
 27250 ;;  res             1   80[BANK5 ] enum E275
 27251 ;; Return value:  Size  Location     Type
 27252 ;;                  1    wreg      enum E275
 27253 ;; Registers used:
 27254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27255 ;; Tracked objects:
 27256 ;;		On entry : 3F/5
 27257 ;;		On exit  : 3F/5
 27258 ;;		Unchanged: 0/0
 27259 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27260 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27261 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27262 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27263 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27264 ;;Total ram usage:       11 bytes
 27265 ;; Hardware stack levels used: 1
 27266 ;; Hardware stack levels required when called: 9
 27267 ;; This function calls:
 27268 ;;		_disk_status
 27269 ;; This function is called by:
 27270 ;;		_f_read
 27271 ;;		_f_write
 27272 ;;		_f_sync
 27273 ;;		_f_lseek
 27274 ;;		_f_closedir
 27275 ;;		_f_readdir
 27276 ;; This function uses a non-reentrant model
 27277 ;;
 27278                           
 27279                           	psect	text49
 27280   0186B2                     __ptext49:
 27281                           	callstack 0
 27282   0186B2                     _validate:
 27283                           	callstack 115
 27284                           
 27285                           ; BSR set to: 5
 27286                           ;fatfs/ff.c: 3614:  FFOBJID* obj,;fatfs/ff.c: 3615:  FATFS** rfs;fatfs/ff.c: 3617: {;fat
      +                          fs/ff.c: 3618:  FRESULT res = FR_INVALID_OBJECT;
 27287                           
 27288                           ; BSR set to: 6
 27289                           ;incstack = 0
 27290   0186B2  0E09               	movlw	9
 27291   0186B4  6FB0               	movwf	validate@res& (0+255),b
 27292                           
 27293                           ; BSR set to: 5
 27294                           ;fatfs/ff.c: 3621:  if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {
 27295   0186B6  51A6               	movf	validate@obj& (0+255),w,b
 27296   0186B8  11A7               	iorwf	(validate@obj+1)& (0+255),w,b
 27297   0186BA  B4D8               	btfsc	status,2,c
 27298   0186BC  D041               	goto	l589
 27299                           
 27300                           ; BSR set to: 5
 27301   0186BE  C5A6  F4D9         	movff	validate@obj,fsr2l
 27302   0186C2  C5A7  F4DA         	movff	validate@obj+1,fsr2h
 27303   0186C6  50DE               	movf	postinc2,w,c
 27304   0186C8  10DE               	iorwf	postinc2,w,c
 27305   0186CA  B4D8               	btfsc	status,2,c
 27306   0186CC  D039               	goto	l589
 27307                           
 27308                           ; BSR set to: 5
 27309   0186CE  C5A6  F4D9         	movff	validate@obj,fsr2l
 27310   0186D2  C5A7  F4DA         	movff	validate@obj+1,fsr2h
 27311   0186D6  C4DE F5AA          	movff	postinc2,??_validate
 27312   0186DA  C4DD F5AB          	movff	postdec2,??_validate+1
 27313   0186DE  C5AA  F4D9         	movff	??_validate,fsr2l
 27314   0186E2  C5AB  F4DA         	movff	??_validate+1,fsr2h
 27315   0186E6  50DF               	movf	indf2,w,c
 27316   0186E8  B4D8               	btfsc	status,2,c
 27317   0186EA  D02A               	goto	l589
 27318                           
 27319                           ; BSR set to: 5
 27320   0186EC  C5A6  F4D9         	movff	validate@obj,fsr2l
 27321   0186F0  C5A7  F4DA         	movff	validate@obj+1,fsr2h
 27322   0186F4  EE10 F006          	lfsr	1,6
 27323   0186F8  50DE               	movf	postinc2,w,c
 27324   0186FA  26E1               	addwf	fsr1l,f,c
 27325   0186FC  50DD               	movf	postdec2,w,c
 27326   0186FE  22E2               	addwfc	fsr1h,f,c
 27327   018700  EE20 F002          	lfsr	2,2
 27328   018704  51A6               	movf	validate@obj& (0+255),w,b
 27329   018706  26D9               	addwf	fsr2l,f,c
 27330   018708  51A7               	movf	(validate@obj+1)& (0+255),w,b
 27331   01870A  22DA               	addwfc	fsr2h,f,c
 27332   01870C  50E6               	movf	postinc1,w,c
 27333   01870E  18DE               	xorwf	postinc2,w,c
 27334   018710  E117               	bnz	l589
 27335   018712  50E6               	movf	postinc1,w,c
 27336   018714  18DE               	xorwf	postinc2,w,c
 27337   018716  A4D8               	btfss	status,2,c
 27338   018718  D013               	goto	l589
 27339                           
 27340                           ; BSR set to: 5
 27341                           ;fatfs/ff.c: 3633:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 27342   01871A  C5A6  F4D9         	movff	validate@obj,fsr2l
 27343   01871E  C5A7  F4DA         	movff	validate@obj+1,fsr2h
 27344   018722  EE10 F001          	lfsr	1,1
 27345   018726  50DE               	movf	postinc2,w,c
 27346   018728  26E1               	addwf	fsr1l,f,c
 27347   01872A  50DD               	movf	postdec2,w,c
 27348   01872C  22E2               	addwfc	fsr1h,f,c
 27349   01872E  50E7               	movf	indf1,w,c
 27350   018730  EC75  F0CF         	call	_disk_status
 27351   018734  0105               	movlb	5	; () banked
 27352   018736  6FAA               	movwf	??_validate& (0+255),b
 27353   018738  B1AA               	btfsc	??_validate& (0+255),0,b
 27354   01873A  D002               	goto	l589
 27355                           
 27356                           ; BSR set to: 5
 27357                           ;fatfs/ff.c: 3634:    res = FR_OK;
 27358   01873C  0E00               	movlw	0
 27359   01873E  6FB0               	movwf	validate@res& (0+255),b
 27360   018740                     l589:
 27361                           
 27362                           ; BSR set to: 5
 27363                           ;fatfs/ff.c: 3638:  *rfs = (res == FR_OK) ? obj->fs : 0;
 27364   018740  51B0               	movf	validate@res& (0+255),w,b
 27365   018742  B4D8               	btfsc	status,2,c
 27366   018744  D005               	goto	l11371
 27367                           
 27368                           ; BSR set to: 5
 27369   018746  0E00               	movlw	0
 27370   018748  6FAE               	movwf	_validate$1075& (0+255),b
 27371   01874A  0E00               	movlw	0
 27372   01874C  6FAF               	movwf	(_validate$1075+1)& (0+255),b
 27373   01874E  D008               	goto	l594
 27374   018750                     l11371:
 27375                           
 27376                           ; BSR set to: 5
 27377   018750  C5A6  F4D9         	movff	validate@obj,fsr2l
 27378   018754  C5A7  F4DA         	movff	validate@obj+1,fsr2h
 27379   018758  C4DE F5AE          	movff	postinc2,_validate$1075
 27380   01875C  C4DD F5AF          	movff	postdec2,_validate$1075+1
 27381   018760                     l594:
 27382                           
 27383                           ; BSR set to: 5
 27384   018760  C5A8  F4D9         	movff	validate@rfs,fsr2l
 27385   018764  C5A9  F4DA         	movff	validate@rfs+1,fsr2h
 27386   018768  C5AE  F4DE         	movff	_validate$1075,postinc2
 27387   01876C  C5AF  F4DD         	movff	_validate$1075+1,postdec2
 27388                           
 27389                           ; BSR set to: 5
 27390                           ;fatfs/ff.c: 3639:  return res;
 27391   018770  51B0               	movf	validate@res& (0+255),w,b
 27392                           
 27393                           ; BSR set to: 5
 27394   018772  0012               	return		;funcret
 27395   018774                     __end_of_validate:
 27396                           	callstack 0
 27397                           
 27398 ;; *************** function _disk_status *****************
 27399 ;; Defined at:
 27400 ;;		line 98 in file "drivers/diskio.c"
 27401 ;; Parameters:    Size  Location     Type
 27402 ;;  pdrv            1    wreg     unsigned char 
 27403 ;; Auto vars:     Size  Location     Type
 27404 ;;  pdrv            1   94[COMRAM] unsigned char 
 27405 ;; Return value:  Size  Location     Type
 27406 ;;                  1    wreg      unsigned char 
 27407 ;; Registers used:
 27408 ;;		wreg, status,2, status,0
 27409 ;; Tracked objects:
 27410 ;;		On entry : 3C/6
 27411 ;;		On exit  : 0/0
 27412 ;;		Unchanged: 0/0
 27413 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27418 ;;Total ram usage:        1 bytes
 27419 ;; Hardware stack levels used: 1
 27420 ;; Hardware stack levels required when called: 8
 27421 ;; This function calls:
 27422 ;;		_printf
 27423 ;; This function is called by:
 27424 ;;		_mount_volume
 27425 ;;		_validate
 27426 ;; This function uses a non-reentrant model
 27427 ;;
 27428                           
 27429                           	psect	text50
 27430   019EEA                     __ptext50:
 27431                           	callstack 0
 27432   019EEA                     _disk_status:
 27433                           	callstack 115
 27434                           
 27435                           ; BSR set to: 5
 27436                           ;incstack = 0
 27437                           ;disk_status@pdrv stored from wreg
 27438   019EEA  6E5F               	movwf	disk_status@pdrv^(0+1280),c
 27439                           
 27440                           ;drivers/diskio.c: 98: DSTATUS disk_status(BYTE pdrv);drivers/diskio.c: 99: {;drivers/di
      +                          skio.c: 100:     if (pdrv != 0) {
 27441   019EEC  505F               	movf	disk_status@pdrv^(0+1280),w,c
 27442   019EEE  B4D8               	btfsc	status,2,c
 27443   019EF0  D002               	goto	l10543
 27444   019EF2                     u12720:
 27445                           
 27446                           ;drivers/diskio.c: 102:         return 0x02;
 27447   019EF2  0E02               	movlw	2
 27448   019EF4  0012               	return	
 27449   019EF6                     l10543:
 27450                           
 27451                           ;drivers/diskio.c: 104:     if (start_lba == 0xffffffff) {
 27452   019EF6  0107               	movlb	7	; () banked
 27453   019EF8  29D5               	incf	_start_lba& (0+255),w,b
 27454   019EFA  E107               	bnz	l10551
 27455   019EFC  29D6               	incf	(_start_lba+1)& (0+255),w,b
 27456   019EFE  E105               	bnz	l10551
 27457   019F00  29D7               	incf	(_start_lba+2)& (0+255),w,b
 27458   019F02  E103               	bnz	l10551
 27459   019F04  29D8               	incf	(_start_lba+3)& (0+255),w,b
 27460   019F06  B4D8               	btfsc	status,2,c
 27461   019F08  D7F4               	goto	u12720
 27462   019F0A                     l10551:
 27463                           
 27464                           ; BSR set to: 7
 27465                           ;drivers/diskio.c: 108:     return 0;
 27466   019F0A  0E00               	movlw	0
 27467   019F0C  0012               	return		;funcret
 27468   019F0E                     __end_of_disk_status:
 27469                           	callstack 0
 27470                           
 27471 ;; *************** function _create_chain *****************
 27472 ;; Defined at:
 27473 ;;		line 1524 in file "fatfs/ff.c"
 27474 ;; Parameters:    Size  Location     Type
 27475 ;;  obj             2   43[BANK6 ] PTR struct .
 27476 ;;		 -> files(3276), fsdir(40), f_rename@djn(40), f_rename@djo(40), 
 27477 ;;		 -> f_mkdir@sobj(14), f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), 
 27478 ;;		 -> f_stat@dj(40), f_open@dj(40), 
 27479 ;;  clst            4   45[BANK6 ] unsigned long 
 27480 ;; Auto vars:     Size  Location     Type
 27481 ;;  cs              4   68[BANK6 ] unsigned long 
 27482 ;;  ncl             4   62[BANK6 ] unsigned long 
 27483 ;;  scl             4   58[BANK6 ] unsigned long 
 27484 ;;  fs              2   66[BANK6 ] PTR struct .
 27485 ;;		 -> fs(560), NULL(0), 
 27486 ;;  res             1   57[BANK6 ] enum E275
 27487 ;; Return value:  Size  Location     Type
 27488 ;;                  4   43[BANK6 ] unsigned long 
 27489 ;; Registers used:
 27490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27491 ;; Tracked objects:
 27492 ;;		On entry : 3F/6
 27493 ;;		On exit  : 3F/6
 27494 ;;		Unchanged: 0/0
 27495 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27496 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27497 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27498 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27499 ;;      Totals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27500 ;;Total ram usage:       29 bytes
 27501 ;; Hardware stack levels used: 1
 27502 ;; Hardware stack levels required when called: 14
 27503 ;; This function calls:
 27504 ;;		_get_fat
 27505 ;;		_put_fat
 27506 ;; This function is called by:
 27507 ;;		_dir_next
 27508 ;;		_f_write
 27509 ;;		_f_lseek
 27510 ;; This function uses a non-reentrant model
 27511 ;;
 27512                           
 27513                           	psect	text51
 27514   013128                     __ptext51:
 27515                           	callstack 0
 27516   013128                     _create_chain:
 27517                           	callstack 108
 27518                           
 27519                           ; BSR set to: 6
 27520                           ;fatfs/ff.c: 1525:  FFOBJID* obj,;fatfs/ff.c: 1526:  DWORD clst;fatfs/ff.c: 1528: {;fatf
      +                          s/ff.c: 1529:  DWORD cs, ncl, scl;;fatfs/ff.c: 1530:  FRESULT res;;fatfs/ff.c: 1531:  FA
      +                          TFS *fs = obj->fs;
 27521                           
 27522                           ;incstack = 0
 27523   013128  C62B  F4D9         	movff	create_chain@obj,fsr2l
 27524   01312C  C62C  F4DA         	movff	create_chain@obj+1,fsr2h
 27525   013130  C4DE F642          	movff	postinc2,create_chain@fs
 27526   013134  C4DD F643          	movff	postdec2,create_chain@fs+1
 27527                           
 27528                           ; BSR set to: 6
 27529                           ;fatfs/ff.c: 1534:  if (clst == 0) {
 27530   013138  512D               	movf	create_chain@clst& (0+255),w,b
 27531   01313A  112E               	iorwf	(create_chain@clst+1)& (0+255),w,b
 27532   01313C  112F               	iorwf	(create_chain@clst+2)& (0+255),w,b
 27533   01313E  1130               	iorwf	(create_chain@clst+3)& (0+255),w,b
 27534   013140  A4D8               	btfss	status,2,c
 27535   013142  D02D               	goto	l10007
 27536                           
 27537                           ; BSR set to: 6
 27538                           ;fatfs/ff.c: 1535:   scl = fs->last_clst;
 27539   013144  EE20 F00C          	lfsr	2,12
 27540   013148  5142               	movf	create_chain@fs& (0+255),w,b
 27541   01314A  26D9               	addwf	fsr2l,f,c
 27542   01314C  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27543   01314E  22DA               	addwfc	fsr2h,f,c
 27544   013150  C4DE F63A          	movff	postinc2,create_chain@scl
 27545   013154  C4DE F63B          	movff	postinc2,create_chain@scl+1
 27546   013158  C4DE F63C          	movff	postinc2,create_chain@scl+2
 27547   01315C  C4DE F63D          	movff	postinc2,create_chain@scl+3
 27548                           
 27549                           ; BSR set to: 6
 27550                           ;fatfs/ff.c: 1536:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 27551   013160  513A               	movf	create_chain@scl& (0+255),w,b
 27552   013162  113B               	iorwf	(create_chain@scl+1)& (0+255),w,b
 27553   013164  113C               	iorwf	(create_chain@scl+2)& (0+255),w,b
 27554   013166  113D               	iorwf	(create_chain@scl+3)& (0+255),w,b
 27555   013168  B4D8               	btfsc	status,2,c
 27556   01316A  D010               	goto	u11630
 27557                           
 27558                           ; BSR set to: 6
 27559   01316C  EE20 F014          	lfsr	2,20
 27560   013170  5142               	movf	create_chain@fs& (0+255),w,b
 27561   013172  26D9               	addwf	fsr2l,f,c
 27562   013174  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27563   013176  22DA               	addwfc	fsr2h,f,c
 27564   013178  50DE               	movf	postinc2,w,c
 27565   01317A  5D3A               	subwf	create_chain@scl& (0+255),w,b
 27566   01317C  50DE               	movf	postinc2,w,c
 27567   01317E  593B               	subwfb	(create_chain@scl+1)& (0+255),w,b
 27568   013180  50DE               	movf	postinc2,w,c
 27569   013182  593C               	subwfb	(create_chain@scl+2)& (0+255),w,b
 27570   013184  50DE               	movf	postinc2,w,c
 27571   013186  593D               	subwfb	(create_chain@scl+3)& (0+255),w,b
 27572   013188  A0D8               	btfss	status,0,c
 27573   01318A  D05B               	goto	l10023
 27574   01318C                     u11630:
 27575                           
 27576                           ; BSR set to: 6
 27577   01318C  0E01               	movlw	1
 27578   01318E  6F3A               	movwf	create_chain@scl& (0+255),b
 27579   013190  0E00               	movlw	0
 27580   013192  6F3B               	movwf	(create_chain@scl+1)& (0+255),b
 27581   013194  0E00               	movlw	0
 27582   013196  6F3C               	movwf	(create_chain@scl+2)& (0+255),b
 27583   013198  0E00               	movlw	0
 27584   01319A  6F3D               	movwf	(create_chain@scl+3)& (0+255),b
 27585   01319C  D052               	goto	l10023
 27586   01319E                     l10007:
 27587                           
 27588                           ; BSR set to: 6
 27589                           ;fatfs/ff.c: 1539:   cs = get_fat(obj, clst);
 27590   01319E  C62B  F60A         	movff	create_chain@obj,get_fat@obj
 27591   0131A2  C62C  F60B         	movff	create_chain@obj+1,get_fat@obj+1
 27592   0131A6  C62D  F60C         	movff	create_chain@clst,get_fat@clst
 27593   0131AA  C62E  F60D         	movff	create_chain@clst+1,get_fat@clst+1
 27594   0131AE  C62F  F60E         	movff	create_chain@clst+2,get_fat@clst+2
 27595   0131B2  C630  F60F         	movff	create_chain@clst+3,get_fat@clst+3
 27596   0131B6  EC66  F0A0         	call	_get_fat	;wreg free
 27597   0131BA  C60A  F644         	movff	?_get_fat,create_chain@cs
 27598   0131BE  C60B  F645         	movff	?_get_fat+1,create_chain@cs+1
 27599   0131C2  C60C  F646         	movff	?_get_fat+2,create_chain@cs+2
 27600   0131C6  C60D  F647         	movff	?_get_fat+3,create_chain@cs+3
 27601                           
 27602                           ;fatfs/ff.c: 1540:   if (cs < 2) return 1;
 27603   0131CA  0106               	movlb	6	; () banked
 27604   0131CC  5147               	movf	(create_chain@cs+3)& (0+255),w,b
 27605   0131CE  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27606   0131D0  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27607   0131D2  E10D               	bnz	l10015
 27608   0131D4  0E02               	movlw	2
 27609   0131D6  5D44               	subwf	create_chain@cs& (0+255),w,b
 27610   0131D8  B0D8               	btfsc	status,0,c
 27611   0131DA  D009               	goto	l10015
 27612                           
 27613                           ; BSR set to: 6
 27614   0131DC  0E01               	movlw	1
 27615   0131DE  6F2B               	movwf	?_create_chain& (0+255),b
 27616   0131E0  0E00               	movlw	0
 27617   0131E2  6F2C               	movwf	(?_create_chain+1)& (0+255),b
 27618   0131E4  0E00               	movlw	0
 27619   0131E6  6F2D               	movwf	(?_create_chain+2)& (0+255),b
 27620   0131E8  0E00               	movlw	0
 27621   0131EA  6F2E               	movwf	(?_create_chain+3)& (0+255),b
 27622   0131EC  0012               	return	
 27623   0131EE                     l10015:
 27624                           
 27625                           ; BSR set to: 6
 27626                           ;fatfs/ff.c: 1541:   if (cs == 0xFFFFFFFF) return cs;
 27627   0131EE  2944               	incf	create_chain@cs& (0+255),w,b
 27628   0131F0  E110               	bnz	l10019
 27629   0131F2  2945               	incf	(create_chain@cs+1)& (0+255),w,b
 27630   0131F4  E10E               	bnz	l10019
 27631   0131F6  2946               	incf	(create_chain@cs+2)& (0+255),w,b
 27632   0131F8  E10C               	bnz	l10019
 27633   0131FA  2947               	incf	(create_chain@cs+3)& (0+255),w,b
 27634   0131FC  A4D8               	btfss	status,2,c
 27635   0131FE  D009               	goto	l10019
 27636   013200                     u11650:
 27637                           
 27638                           ; BSR set to: 6
 27639   013200  C644  F62B         	movff	create_chain@cs,?_create_chain
 27640   013204  C645  F62C         	movff	create_chain@cs+1,?_create_chain+1
 27641   013208  C646  F62D         	movff	create_chain@cs+2,?_create_chain+2
 27642   01320C  C647  F62E         	movff	create_chain@cs+3,?_create_chain+3
 27643   013210  0012               	return	
 27644   013212                     l10019:
 27645                           
 27646                           ; BSR set to: 6
 27647                           ;fatfs/ff.c: 1542:   if (cs < fs->n_fatent) return cs;
 27648   013212  EE20 F014          	lfsr	2,20
 27649   013216  5142               	movf	create_chain@fs& (0+255),w,b
 27650   013218  26D9               	addwf	fsr2l,f,c
 27651   01321A  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27652   01321C  22DA               	addwfc	fsr2h,f,c
 27653   01321E  50DE               	movf	postinc2,w,c
 27654   013220  5D44               	subwf	create_chain@cs& (0+255),w,b
 27655   013222  50DE               	movf	postinc2,w,c
 27656   013224  5945               	subwfb	(create_chain@cs+1)& (0+255),w,b
 27657   013226  50DE               	movf	postinc2,w,c
 27658   013228  5946               	subwfb	(create_chain@cs+2)& (0+255),w,b
 27659   01322A  50DE               	movf	postinc2,w,c
 27660   01322C  5947               	subwfb	(create_chain@cs+3)& (0+255),w,b
 27661   01322E  A0D8               	btfss	status,0,c
 27662   013230  D7E7               	goto	u11650
 27663                           
 27664                           ; BSR set to: 6
 27665                           ;fatfs/ff.c: 1543:   scl = clst;
 27666   013232  C62D  F63A         	movff	create_chain@clst,create_chain@scl
 27667   013236  C62E  F63B         	movff	create_chain@clst+1,create_chain@scl+1
 27668   01323A  C62F  F63C         	movff	create_chain@clst+2,create_chain@scl+2
 27669   01323E  C630  F63D         	movff	create_chain@clst+3,create_chain@scl+3
 27670   013242                     l10023:
 27671                           
 27672                           ; BSR set to: 6
 27673                           ;fatfs/ff.c: 1545:  if (fs->free_clst == 0) return 0;
 27674   013242  EE20 F010          	lfsr	2,16
 27675   013246  5142               	movf	create_chain@fs& (0+255),w,b
 27676   013248  26D9               	addwf	fsr2l,f,c
 27677   01324A  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27678   01324C  22DA               	addwfc	fsr2h,f,c
 27679   01324E  50DE               	movf	postinc2,w,c
 27680   013250  10DE               	iorwf	postinc2,w,c
 27681   013252  10DE               	iorwf	postinc2,w,c
 27682   013254  10DE               	iorwf	postinc2,w,c
 27683   013256  A4D8               	btfss	status,2,c
 27684   013258  D009               	goto	l10029
 27685   01325A                     u11670:
 27686                           
 27687                           ; BSR set to: 6
 27688   01325A  0E00               	movlw	0
 27689   01325C  6F2B               	movwf	?_create_chain& (0+255),b
 27690   01325E  0E00               	movlw	0
 27691   013260  6F2C               	movwf	(?_create_chain+1)& (0+255),b
 27692   013262  0E00               	movlw	0
 27693   013264  6F2D               	movwf	(?_create_chain+2)& (0+255),b
 27694   013266  0E00               	movlw	0
 27695   013268  6F2E               	movwf	(?_create_chain+3)& (0+255),b
 27696   01326A  0012               	return	
 27697   01326C                     l10029:
 27698                           
 27699                           ; BSR set to: 6
 27700                           ;fatfs/ff.c: 1573:  {;fatfs/ff.c: 1574:   ncl = 0;
 27701   01326C  0E00               	movlw	0
 27702   01326E  6F3E               	movwf	create_chain@ncl& (0+255),b
 27703   013270  0E00               	movlw	0
 27704   013272  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 27705   013274  0E00               	movlw	0
 27706   013276  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 27707   013278  0E00               	movlw	0
 27708   01327A  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 27709                           
 27710                           ; BSR set to: 6
 27711                           ;fatfs/ff.c: 1575:   if (scl == clst) {
 27712   01327C  512D               	movf	create_chain@clst& (0+255),w,b
 27713   01327E  193A               	xorwf	create_chain@scl& (0+255),w,b
 27714   013280  E109               	bnz	u11681
 27715   013282  512E               	movf	(create_chain@clst+1)& (0+255),w,b
 27716   013284  193B               	xorwf	(create_chain@scl+1)& (0+255),w,b
 27717   013286  E106               	bnz	u11681
 27718   013288  512F               	movf	(create_chain@clst+2)& (0+255),w,b
 27719   01328A  193C               	xorwf	(create_chain@scl+2)& (0+255),w,b
 27720   01328C  E103               	bnz	u11681
 27721   01328E  5130               	movf	(create_chain@clst+3)& (0+255),w,b
 27722   013290  193D               	xorwf	(create_chain@scl+3)& (0+255),w,b
 27723   013292  A4D8               	btfss	status,2,c
 27724   013294                     u11681:
 27725   013294  D086               	goto	l10057
 27726                           
 27727                           ; BSR set to: 6
 27728                           ;fatfs/ff.c: 1576:    ncl = scl + 1;
 27729   013296  0E01               	movlw	1
 27730   013298  253A               	addwf	create_chain@scl& (0+255),w,b
 27731   01329A  6F3E               	movwf	create_chain@ncl& (0+255),b
 27732   01329C  0E00               	movlw	0
 27733   01329E  213B               	addwfc	(create_chain@scl+1)& (0+255),w,b
 27734   0132A0  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 27735   0132A2  0E00               	movlw	0
 27736   0132A4  213C               	addwfc	(create_chain@scl+2)& (0+255),w,b
 27737   0132A6  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 27738   0132A8  0E00               	movlw	0
 27739   0132AA  213D               	addwfc	(create_chain@scl+3)& (0+255),w,b
 27740   0132AC  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 27741                           
 27742                           ; BSR set to: 6
 27743                           ;fatfs/ff.c: 1577:    if (ncl >= fs->n_fatent) ncl = 2;
 27744   0132AE  EE20 F014          	lfsr	2,20
 27745   0132B2  5142               	movf	create_chain@fs& (0+255),w,b
 27746   0132B4  26D9               	addwf	fsr2l,f,c
 27747   0132B6  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27748   0132B8  22DA               	addwfc	fsr2h,f,c
 27749   0132BA  50DE               	movf	postinc2,w,c
 27750   0132BC  5D3E               	subwf	create_chain@ncl& (0+255),w,b
 27751   0132BE  50DE               	movf	postinc2,w,c
 27752   0132C0  593F               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 27753   0132C2  50DE               	movf	postinc2,w,c
 27754   0132C4  5940               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 27755   0132C6  50DE               	movf	postinc2,w,c
 27756   0132C8  5941               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 27757   0132CA  A0D8               	btfss	status,0,c
 27758   0132CC  D008               	goto	l10039
 27759                           
 27760                           ; BSR set to: 6
 27761   0132CE  0E02               	movlw	2
 27762   0132D0  6F3E               	movwf	create_chain@ncl& (0+255),b
 27763   0132D2  0E00               	movlw	0
 27764   0132D4  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 27765   0132D6  0E00               	movlw	0
 27766   0132D8  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 27767   0132DA  0E00               	movlw	0
 27768   0132DC  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 27769   0132DE                     l10039:
 27770                           
 27771                           ; BSR set to: 6
 27772                           ;fatfs/ff.c: 1578:    cs = get_fat(obj, ncl);
 27773   0132DE  C62B  F60A         	movff	create_chain@obj,get_fat@obj
 27774   0132E2  C62C  F60B         	movff	create_chain@obj+1,get_fat@obj+1
 27775   0132E6  C63E  F60C         	movff	create_chain@ncl,get_fat@clst
 27776   0132EA  C63F  F60D         	movff	create_chain@ncl+1,get_fat@clst+1
 27777   0132EE  C640  F60E         	movff	create_chain@ncl+2,get_fat@clst+2
 27778   0132F2  C641  F60F         	movff	create_chain@ncl+3,get_fat@clst+3
 27779   0132F6  EC66  F0A0         	call	_get_fat	;wreg free
 27780   0132FA  C60A  F644         	movff	?_get_fat,create_chain@cs
 27781   0132FE  C60B  F645         	movff	?_get_fat+1,create_chain@cs+1
 27782   013302  C60C  F646         	movff	?_get_fat+2,create_chain@cs+2
 27783   013306  C60D  F647         	movff	?_get_fat+3,create_chain@cs+3
 27784                           
 27785                           ;fatfs/ff.c: 1579:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 27786   01330A  0106               	movlb	6	; () banked
 27787   01330C  0544               	decf	create_chain@cs& (0+255),w,b
 27788   01330E  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27789   013310  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27790   013312  1147               	iorwf	(create_chain@cs+3)& (0+255),w,b
 27791   013314  B4D8               	btfsc	status,2,c
 27792   013316  D774               	goto	u11650
 27793                           
 27794                           ; BSR set to: 6
 27795   013318  2944               	incf	create_chain@cs& (0+255),w,b
 27796   01331A  E107               	bnz	l10045
 27797   01331C  2945               	incf	(create_chain@cs+1)& (0+255),w,b
 27798   01331E  E105               	bnz	l10045
 27799   013320  2946               	incf	(create_chain@cs+2)& (0+255),w,b
 27800   013322  E103               	bnz	l10045
 27801   013324  2947               	incf	(create_chain@cs+3)& (0+255),w,b
 27802   013326  B4D8               	btfsc	status,2,c
 27803   013328  D76B               	goto	u11650
 27804   01332A                     l10045:
 27805                           
 27806                           ; BSR set to: 6
 27807                           ;fatfs/ff.c: 1580:    if (cs != 0) {
 27808   01332A  5144               	movf	create_chain@cs& (0+255),w,b
 27809   01332C  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27810   01332E  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27811   013330  1147               	iorwf	(create_chain@cs+3)& (0+255),w,b
 27812   013332  B4D8               	btfsc	status,2,c
 27813   013334  D036               	goto	l10057
 27814                           
 27815                           ; BSR set to: 6
 27816                           ;fatfs/ff.c: 1581:     cs = fs->last_clst;
 27817   013336  EE20 F00C          	lfsr	2,12
 27818   01333A  5142               	movf	create_chain@fs& (0+255),w,b
 27819   01333C  26D9               	addwf	fsr2l,f,c
 27820   01333E  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27821   013340  22DA               	addwfc	fsr2h,f,c
 27822   013342  C4DE F644          	movff	postinc2,create_chain@cs
 27823   013346  C4DE F645          	movff	postinc2,create_chain@cs+1
 27824   01334A  C4DE F646          	movff	postinc2,create_chain@cs+2
 27825   01334E  C4DE F647          	movff	postinc2,create_chain@cs+3
 27826                           
 27827                           ; BSR set to: 6
 27828                           ;fatfs/ff.c: 1582:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 27829   013352  5147               	movf	(create_chain@cs+3)& (0+255),w,b
 27830   013354  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27831   013356  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27832   013358  E104               	bnz	u11730
 27833   01335A  0E02               	movlw	2
 27834   01335C  5D44               	subwf	create_chain@cs& (0+255),w,b
 27835   01335E  A0D8               	btfss	status,0,c
 27836   013360  D018               	goto	l10055
 27837   013362                     u11730:
 27838                           
 27839                           ; BSR set to: 6
 27840   013362  EE20 F014          	lfsr	2,20
 27841   013366  5142               	movf	create_chain@fs& (0+255),w,b
 27842   013368  26D9               	addwf	fsr2l,f,c
 27843   01336A  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27844   01336C  22DA               	addwfc	fsr2h,f,c
 27845   01336E  50DE               	movf	postinc2,w,c
 27846   013370  5D44               	subwf	create_chain@cs& (0+255),w,b
 27847   013372  50DE               	movf	postinc2,w,c
 27848   013374  5945               	subwfb	(create_chain@cs+1)& (0+255),w,b
 27849   013376  50DE               	movf	postinc2,w,c
 27850   013378  5946               	subwfb	(create_chain@cs+2)& (0+255),w,b
 27851   01337A  50DE               	movf	postinc2,w,c
 27852   01337C  5947               	subwfb	(create_chain@cs+3)& (0+255),w,b
 27853   01337E  B0D8               	btfsc	status,0,c
 27854   013380  D008               	goto	l10055
 27855                           
 27856                           ; BSR set to: 6
 27857   013382  C644  F63A         	movff	create_chain@cs,create_chain@scl
 27858   013386  C645  F63B         	movff	create_chain@cs+1,create_chain@scl+1
 27859   01338A  C646  F63C         	movff	create_chain@cs+2,create_chain@scl+2
 27860   01338E  C647  F63D         	movff	create_chain@cs+3,create_chain@scl+3
 27861   013392                     l10055:
 27862                           
 27863                           ; BSR set to: 6
 27864                           ;fatfs/ff.c: 1583:     ncl = 0;
 27865   013392  0E00               	movlw	0
 27866   013394  6F3E               	movwf	create_chain@ncl& (0+255),b
 27867   013396  0E00               	movlw	0
 27868   013398  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 27869   01339A  0E00               	movlw	0
 27870   01339C  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 27871   01339E  0E00               	movlw	0
 27872   0133A0  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 27873   0133A2                     l10057:
 27874                           
 27875                           ; BSR set to: 6
 27876                           ;fatfs/ff.c: 1586:   if (ncl == 0) {
 27877   0133A2  513E               	movf	create_chain@ncl& (0+255),w,b
 27878   0133A4  113F               	iorwf	(create_chain@ncl+1)& (0+255),w,b
 27879   0133A6  1140               	iorwf	(create_chain@ncl+2)& (0+255),w,b
 27880   0133A8  1141               	iorwf	(create_chain@ncl+3)& (0+255),w,b
 27881   0133AA  A4D8               	btfss	status,2,c
 27882   0133AC  D068               	goto	l10089
 27883                           
 27884                           ; BSR set to: 6
 27885                           ;fatfs/ff.c: 1587:    ncl = scl;
 27886   0133AE  C63A  F63E         	movff	create_chain@scl,create_chain@ncl
 27887   0133B2  C63B  F63F         	movff	create_chain@scl+1,create_chain@ncl+1
 27888   0133B6  C63C  F640         	movff	create_chain@scl+2,create_chain@ncl+2
 27889   0133BA  C63D  F641         	movff	create_chain@scl+3,create_chain@ncl+3
 27890   0133BE                     l10061:
 27891                           
 27892                           ; BSR set to: 6
 27893                           ;fatfs/ff.c: 1589:     ncl++;
 27894   0133BE  0E01               	movlw	1
 27895   0133C0  273E               	addwf	create_chain@ncl& (0+255),f,b
 27896   0133C2  0E00               	movlw	0
 27897   0133C4  233F               	addwfc	(create_chain@ncl+1)& (0+255),f,b
 27898   0133C6  2340               	addwfc	(create_chain@ncl+2)& (0+255),f,b
 27899   0133C8  2341               	addwfc	(create_chain@ncl+3)& (0+255),f,b
 27900                           
 27901                           ; BSR set to: 6
 27902                           ;fatfs/ff.c: 1590:     if (ncl >= fs->n_fatent) {
 27903   0133CA  EE20 F014          	lfsr	2,20
 27904   0133CE  5142               	movf	create_chain@fs& (0+255),w,b
 27905   0133D0  26D9               	addwf	fsr2l,f,c
 27906   0133D2  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 27907   0133D4  22DA               	addwfc	fsr2h,f,c
 27908   0133D6  50DE               	movf	postinc2,w,c
 27909   0133D8  5D3E               	subwf	create_chain@ncl& (0+255),w,b
 27910   0133DA  50DE               	movf	postinc2,w,c
 27911   0133DC  593F               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 27912   0133DE  50DE               	movf	postinc2,w,c
 27913   0133E0  5940               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 27914   0133E2  50DE               	movf	postinc2,w,c
 27915   0133E4  5941               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 27916   0133E6  A0D8               	btfss	status,0,c
 27917   0133E8  D010               	goto	l10073
 27918                           
 27919                           ; BSR set to: 6
 27920                           ;fatfs/ff.c: 1591:      ncl = 2;
 27921   0133EA  0E02               	movlw	2
 27922   0133EC  6F3E               	movwf	create_chain@ncl& (0+255),b
 27923   0133EE  0E00               	movlw	0
 27924   0133F0  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 27925   0133F2  0E00               	movlw	0
 27926   0133F4  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 27927   0133F6  0E00               	movlw	0
 27928   0133F8  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 27929                           
 27930                           ; BSR set to: 6
 27931                           ;fatfs/ff.c: 1592:      if (ncl > scl) return 0;
 27932   0133FA  513D               	movf	(create_chain@scl+3)& (0+255),w,b
 27933   0133FC  113C               	iorwf	(create_chain@scl+2)& (0+255),w,b
 27934   0133FE  113B               	iorwf	(create_chain@scl+1)& (0+255),w,b
 27935   013400  E104               	bnz	l10073
 27936   013402  0E02               	movlw	2
 27937   013404  5D3A               	subwf	create_chain@scl& (0+255),w,b
 27938   013406  A0D8               	btfss	status,0,c
 27939   013408  D728               	goto	u11670
 27940   01340A                     l10073:
 27941                           
 27942                           ; BSR set to: 6
 27943                           ;fatfs/ff.c: 1594:     cs = get_fat(obj, ncl);
 27944   01340A  C62B  F60A         	movff	create_chain@obj,get_fat@obj
 27945   01340E  C62C  F60B         	movff	create_chain@obj+1,get_fat@obj+1
 27946   013412  C63E  F60C         	movff	create_chain@ncl,get_fat@clst
 27947   013416  C63F  F60D         	movff	create_chain@ncl+1,get_fat@clst+1
 27948   01341A  C640  F60E         	movff	create_chain@ncl+2,get_fat@clst+2
 27949   01341E  C641  F60F         	movff	create_chain@ncl+3,get_fat@clst+3
 27950   013422  EC66  F0A0         	call	_get_fat	;wreg free
 27951   013426  C60A  F644         	movff	?_get_fat,create_chain@cs
 27952   01342A  C60B  F645         	movff	?_get_fat+1,create_chain@cs+1
 27953   01342E  C60C  F646         	movff	?_get_fat+2,create_chain@cs+2
 27954   013432  C60D  F647         	movff	?_get_fat+3,create_chain@cs+3
 27955                           
 27956                           ;fatfs/ff.c: 1595:     if (cs == 0) break;
 27957   013436  0106               	movlb	6	; () banked
 27958   013438  5144               	movf	create_chain@cs& (0+255),w,b
 27959   01343A  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27960   01343C  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27961   01343E  1147               	iorwf	(create_chain@cs+3)& (0+255),w,b
 27962   013440  B4D8               	btfsc	status,2,c
 27963   013442  D01D               	goto	l10089
 27964                           
 27965                           ; BSR set to: 6
 27966                           ;fatfs/ff.c: 1596:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 27967   013444  0544               	decf	create_chain@cs& (0+255),w,b
 27968   013446  1145               	iorwf	(create_chain@cs+1)& (0+255),w,b
 27969   013448  1146               	iorwf	(create_chain@cs+2)& (0+255),w,b
 27970   01344A  1147               	iorwf	(create_chain@cs+3)& (0+255),w,b
 27971   01344C  B4D8               	btfsc	status,2,c
 27972   01344E  D6D8               	goto	u11650
 27973                           
 27974                           ; BSR set to: 6
 27975   013450  2944               	incf	create_chain@cs& (0+255),w,b
 27976   013452  E107               	bnz	l10083
 27977   013454  2945               	incf	(create_chain@cs+1)& (0+255),w,b
 27978   013456  E105               	bnz	l10083
 27979   013458  2946               	incf	(create_chain@cs+2)& (0+255),w,b
 27980   01345A  E103               	bnz	l10083
 27981   01345C  2947               	incf	(create_chain@cs+3)& (0+255),w,b
 27982   01345E  B4D8               	btfsc	status,2,c
 27983   013460  D6CF               	goto	u11650
 27984   013462                     l10083:
 27985                           
 27986                           ; BSR set to: 6
 27987                           ;fatfs/ff.c: 1597:     if (ncl == scl) return 0;
 27988   013462  513A               	movf	create_chain@scl& (0+255),w,b
 27989   013464  193E               	xorwf	create_chain@ncl& (0+255),w,b
 27990   013466  E1AB               	bnz	l10061
 27991   013468  513B               	movf	(create_chain@scl+1)& (0+255),w,b
 27992   01346A  193F               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 27993   01346C  E1A8               	bnz	l10061
 27994   01346E  513C               	movf	(create_chain@scl+2)& (0+255),w,b
 27995   013470  1940               	xorwf	(create_chain@ncl+2)& (0+255),w,b
 27996   013472  E1A5               	bnz	l10061
 27997   013474  513D               	movf	(create_chain@scl+3)& (0+255),w,b
 27998   013476  1941               	xorwf	(create_chain@ncl+3)& (0+255),w,b
 27999   013478  B4D8               	btfsc	status,2,c
 28000   01347A  D6EF               	goto	u11670
 28001   01347C  D7A0               	goto	l10061
 28002   01347E                     l10089:
 28003                           
 28004                           ; BSR set to: 6
 28005                           ;fatfs/ff.c: 1600:   res = put_fat(fs, ncl, 0xFFFFFFFF);
 28006   01347E  C642  F60A         	movff	create_chain@fs,put_fat@fs
 28007   013482  C643  F60B         	movff	create_chain@fs+1,put_fat@fs+1
 28008   013486  C63E  F60C         	movff	create_chain@ncl,put_fat@clst
 28009   01348A  C63F  F60D         	movff	create_chain@ncl+1,put_fat@clst+1
 28010   01348E  C640  F60E         	movff	create_chain@ncl+2,put_fat@clst+2
 28011   013492  C641  F60F         	movff	create_chain@ncl+3,put_fat@clst+3
 28012   013496  0EFF               	movlw	255
 28013   013498  6F10               	movwf	put_fat@val& (0+255),b
 28014   01349A  0EFF               	movlw	255
 28015   01349C  6F11               	movwf	(put_fat@val+1)& (0+255),b
 28016   01349E  0EFF               	movlw	255
 28017   0134A0  6F12               	movwf	(put_fat@val+2)& (0+255),b
 28018   0134A2  0EFF               	movlw	255
 28019   0134A4  6F13               	movwf	(put_fat@val+3)& (0+255),b
 28020   0134A6  ECD6  F09A         	call	_put_fat	;wreg free
 28021   0134AA  6F39               	movwf	create_chain@res& (0+255),b
 28022                           
 28023                           ; BSR set to: 6
 28024                           ;fatfs/ff.c: 1601:   if (res == FR_OK && clst != 0) {
 28025   0134AC  5139               	movf	create_chain@res& (0+255),w,b
 28026   0134AE  A4D8               	btfss	status,2,c
 28027   0134B0  D01D               	goto	l10097
 28028                           
 28029                           ; BSR set to: 6
 28030   0134B2  512D               	movf	create_chain@clst& (0+255),w,b
 28031   0134B4  112E               	iorwf	(create_chain@clst+1)& (0+255),w,b
 28032   0134B6  112F               	iorwf	(create_chain@clst+2)& (0+255),w,b
 28033   0134B8  1130               	iorwf	(create_chain@clst+3)& (0+255),w,b
 28034   0134BA  B4D8               	btfsc	status,2,c
 28035   0134BC  D017               	goto	l10097
 28036                           
 28037                           ; BSR set to: 6
 28038                           ;fatfs/ff.c: 1602:    res = put_fat(fs, clst, ncl);
 28039   0134BE  C642  F60A         	movff	create_chain@fs,put_fat@fs
 28040   0134C2  C643  F60B         	movff	create_chain@fs+1,put_fat@fs+1
 28041   0134C6  C62D  F60C         	movff	create_chain@clst,put_fat@clst
 28042   0134CA  C62E  F60D         	movff	create_chain@clst+1,put_fat@clst+1
 28043   0134CE  C62F  F60E         	movff	create_chain@clst+2,put_fat@clst+2
 28044   0134D2  C630  F60F         	movff	create_chain@clst+3,put_fat@clst+3
 28045   0134D6  C63E  F610         	movff	create_chain@ncl,put_fat@val
 28046   0134DA  C63F  F611         	movff	create_chain@ncl+1,put_fat@val+1
 28047   0134DE  C640  F612         	movff	create_chain@ncl+2,put_fat@val+2
 28048   0134E2  C641  F613         	movff	create_chain@ncl+3,put_fat@val+3
 28049   0134E6  ECD6  F09A         	call	_put_fat	;wreg free
 28050   0134EA  6F39               	movwf	create_chain@res& (0+255),b
 28051   0134EC                     l10097:
 28052                           
 28053                           ; BSR set to: 6
 28054                           ;fatfs/ff.c: 1604:  };fatfs/ff.c: 1606:  if (res == FR_OK) {
 28055   0134EC  5139               	movf	create_chain@res& (0+255),w,b
 28056   0134EE  A4D8               	btfss	status,2,c
 28057   0134F0  D044               	goto	l10105
 28058                           
 28059                           ; BSR set to: 6
 28060                           ;fatfs/ff.c: 1607:   fs->last_clst = ncl;
 28061   0134F2  EE20 F00C          	lfsr	2,12
 28062   0134F6  5142               	movf	create_chain@fs& (0+255),w,b
 28063   0134F8  26D9               	addwf	fsr2l,f,c
 28064   0134FA  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 28065   0134FC  22DA               	addwfc	fsr2h,f,c
 28066   0134FE  C63E  F4DE         	movff	create_chain@ncl,postinc2
 28067   013502  C63F  F4DE         	movff	create_chain@ncl+1,postinc2
 28068   013506  C640  F4DE         	movff	create_chain@ncl+2,postinc2
 28069   01350A  C641  F4DE         	movff	create_chain@ncl+3,postinc2
 28070                           
 28071                           ; BSR set to: 6
 28072                           ;fatfs/ff.c: 1608:   if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 28073   01350E  EE20 F010          	lfsr	2,16
 28074   013512  5142               	movf	create_chain@fs& (0+255),w,b
 28075   013514  26D9               	addwf	fsr2l,f,c
 28076   013516  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 28077   013518  22DA               	addwfc	fsr2h,f,c
 28078   01351A  EE10 F014          	lfsr	1,20
 28079   01351E  5142               	movf	create_chain@fs& (0+255),w,b
 28080   013520  26E1               	addwf	fsr1l,f,c
 28081   013522  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 28082   013524  22E2               	addwfc	fsr1h,f,c
 28083   013526  0EFE               	movlw	254
 28084   013528  24E6               	addwf	postinc1,w,c
 28085   01352A  6F35               	movwf	(??_create_chain+4)& (0+255),b
 28086   01352C  0EFF               	movlw	255
 28087   01352E  20E6               	addwfc	postinc1,w,c
 28088   013530  6F36               	movwf	(??_create_chain+5)& (0+255),b
 28089   013532  0EFF               	movlw	255
 28090   013534  20E6               	addwfc	postinc1,w,c
 28091   013536  6F37               	movwf	(??_create_chain+6)& (0+255),b
 28092   013538  0EFF               	movlw	255
 28093   01353A  20E6               	addwfc	postinc1,w,c
 28094   01353C  6F38               	movwf	(??_create_chain+7)& (0+255),b
 28095   01353E  50DE               	movf	postinc2,w,c
 28096   013540  5D35               	subwf	(??_create_chain+4)& (0+255),w,b
 28097   013542  50DE               	movf	postinc2,w,c
 28098   013544  5936               	subwfb	(??_create_chain+5)& (0+255),w,b
 28099   013546  50DE               	movf	postinc2,w,c
 28100   013548  5937               	subwfb	(??_create_chain+6)& (0+255),w,b
 28101   01354A  50DE               	movf	postinc2,w,c
 28102   01354C  5938               	subwfb	(??_create_chain+7)& (0+255),w,b
 28103   01354E  A0D8               	btfss	status,0,c
 28104   013550  D00B               	goto	l320
 28105                           
 28106                           ; BSR set to: 6
 28107   013552  EE20 F010          	lfsr	2,16
 28108   013556  5142               	movf	create_chain@fs& (0+255),w,b
 28109   013558  26D9               	addwf	fsr2l,f,c
 28110   01355A  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 28111   01355C  22DA               	addwfc	fsr2h,f,c
 28112   01355E  06DE               	decf	postinc2,f,c
 28113   013560  0E00               	movlw	0
 28114   013562  5ADE               	subwfb	postinc2,f,c
 28115   013564  5ADE               	subwfb	postinc2,f,c
 28116   013566  5ADE               	subwfb	postinc2,f,c
 28117   013568                     l320:
 28118                           
 28119                           ; BSR set to: 6
 28120                           ;fatfs/ff.c: 1609:   fs->fsi_flag |= 1;
 28121   013568  EE20 F005          	lfsr	2,5
 28122   01356C  5142               	movf	create_chain@fs& (0+255),w,b
 28123   01356E  26D9               	addwf	fsr2l,f,c
 28124   013570  5143               	movf	(create_chain@fs+1)& (0+255),w,b
 28125   013572  22DA               	addwfc	fsr2h,f,c
 28126   013574  0E00               	movlw	0
 28127   013576  80DB               	bsf	plusw2,0,c
 28128                           
 28129                           ;fatfs/ff.c: 1610:  } else {
 28130   013578  D010               	goto	l321
 28131   01357A                     l10105:
 28132                           
 28133                           ; BSR set to: 6
 28134                           ;fatfs/ff.c: 1611:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 28135   01357A  0539               	decf	create_chain@res& (0+255),w,b
 28136   01357C  B4D8               	btfsc	status,2,c
 28137   01357E  D009               	goto	l323
 28138                           
 28139                           ; BSR set to: 6
 28140   013580  0E01               	movlw	1
 28141   013582  6F3E               	movwf	create_chain@ncl& (0+255),b
 28142   013584  0E00               	movlw	0
 28143   013586  6F3F               	movwf	(create_chain@ncl+1)& (0+255),b
 28144   013588  0E00               	movlw	0
 28145   01358A  6F40               	movwf	(create_chain@ncl+2)& (0+255),b
 28146   01358C  0E00               	movlw	0
 28147   01358E  6F41               	movwf	(create_chain@ncl+3)& (0+255),b
 28148   013590  D004               	goto	l321
 28149   013592                     l323:
 28150                           
 28151                           ; BSR set to: 6
 28152   013592  693E               	setf	create_chain@ncl& (0+255),b
 28153   013594  693F               	setf	(create_chain@ncl+1)& (0+255),b
 28154   013596  6940               	setf	(create_chain@ncl+2)& (0+255),b
 28155   013598  6941               	setf	(create_chain@ncl+3)& (0+255),b
 28156   01359A                     l321:
 28157                           
 28158                           ; BSR set to: 6
 28159                           ;fatfs/ff.c: 1614:  return ncl;
 28160   01359A  C63E  F62B         	movff	create_chain@ncl,?_create_chain
 28161   01359E  C63F  F62C         	movff	create_chain@ncl+1,?_create_chain+1
 28162   0135A2  C640  F62D         	movff	create_chain@ncl+2,?_create_chain+2
 28163   0135A6  C641  F62E         	movff	create_chain@ncl+3,?_create_chain+3
 28164                           
 28165                           ; BSR set to: 6
 28166   0135AA  0012               	return		;funcret
 28167   0135AC                     __end_of_create_chain:
 28168                           	callstack 0
 28169                           
 28170 ;; *************** function _put_fat *****************
 28171 ;; Defined at:
 28172 ;;		line 1239 in file "fatfs/ff.c"
 28173 ;; Parameters:    Size  Location     Type
 28174 ;;  fs              2   10[BANK6 ] PTR struct .
 28175 ;;		 -> fs(560), NULL(0), 
 28176 ;;  clst            4   12[BANK6 ] unsigned long 
 28177 ;;  val             4   16[BANK6 ] unsigned long 
 28178 ;; Auto vars:     Size  Location     Type
 28179 ;;  bc              2   40[BANK6 ] unsigned int 
 28180 ;;  p               2   38[BANK6 ] PTR unsigned char 
 28181 ;;		 -> fs$win(512), fs(560), NULL(0), 
 28182 ;;  res             1   42[BANK6 ] enum E275
 28183 ;; Return value:  Size  Location     Type
 28184 ;;                  1    wreg      enum E275
 28185 ;; Registers used:
 28186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28187 ;; Tracked objects:
 28188 ;;		On entry : 3F/6
 28189 ;;		On exit  : 3F/6
 28190 ;;		Unchanged: 0/0
 28191 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28192 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28193 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28194 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28195 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28196 ;;Total ram usage:       33 bytes
 28197 ;; Hardware stack levels used: 1
 28198 ;; Hardware stack levels required when called: 13
 28199 ;; This function calls:
 28200 ;;		_ld_dword
 28201 ;;		_move_window
 28202 ;;		_st_dword
 28203 ;;		_st_word
 28204 ;; This function is called by:
 28205 ;;		_remove_chain
 28206 ;;		_create_chain
 28207 ;; This function uses a non-reentrant model
 28208 ;;
 28209                           
 28210                           	psect	text52
 28211   0135AC                     __ptext52:
 28212                           	callstack 0
 28213   0135AC                     _put_fat:
 28214                           	callstack 108
 28215                           
 28216                           ; BSR set to: 6
 28217                           ;fatfs/ff.c: 1240:  FATFS* fs,;fatfs/ff.c: 1241:  DWORD clst,;fatfs/ff.c: 1242:  DWORD v
      +                          al;fatfs/ff.c: 1244: {;fatfs/ff.c: 1245:  UINT bc;;fatfs/ff.c: 1246:  BYTE *p;;fatfs/ff.
      +                          c: 1247:  FRESULT res = FR_INT_ERR;
 28218                           
 28219                           ; BSR set to: 6
 28220                           ;incstack = 0
 28221   0135AC  0E02               	movlw	2
 28222   0135AE  6F2A               	movwf	put_fat@res& (0+255),b
 28223                           
 28224                           ; BSR set to: 6
 28225                           ;fatfs/ff.c: 1250:  if (clst >= 2 && clst < fs->n_fatent) {
 28226   0135B0  510F               	movf	(put_fat@clst+3)& (0+255),w,b
 28227   0135B2  110E               	iorwf	(put_fat@clst+2)& (0+255),w,b
 28228   0135B4  110D               	iorwf	(put_fat@clst+1)& (0+255),w,b
 28229   0135B6  E104               	bnz	u11490
 28230   0135B8  0E02               	movlw	2
 28231   0135BA  5D0C               	subwf	put_fat@clst& (0+255),w,b
 28232   0135BC  A0D8               	btfss	status,0,c
 28233   0135BE  D1F4               	goto	l9991
 28234   0135C0                     u11490:
 28235                           
 28236                           ; BSR set to: 6
 28237   0135C0  EE20 F014          	lfsr	2,20
 28238   0135C4  510A               	movf	put_fat@fs& (0+255),w,b
 28239   0135C6  26D9               	addwf	fsr2l,f,c
 28240   0135C8  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28241   0135CA  22DA               	addwfc	fsr2h,f,c
 28242   0135CC  50DE               	movf	postinc2,w,c
 28243   0135CE  5D0C               	subwf	put_fat@clst& (0+255),w,b
 28244   0135D0  50DE               	movf	postinc2,w,c
 28245   0135D2  590D               	subwfb	(put_fat@clst+1)& (0+255),w,b
 28246   0135D4  50DE               	movf	postinc2,w,c
 28247   0135D6  590E               	subwfb	(put_fat@clst+2)& (0+255),w,b
 28248   0135D8  50DE               	movf	postinc2,w,c
 28249   0135DA  590F               	subwfb	(put_fat@clst+3)& (0+255),w,b
 28250   0135DC  A0D8               	btfss	status,0,c
 28251   0135DE  D1D6               	goto	l9989
 28252   0135E0  D1E3               	goto	l9991
 28253   0135E2                     l249:
 28254                           
 28255                           ; BSR set to: 6
 28256                           ;fatfs/ff.c: 1253:    bc = (UINT)clst; bc += bc / 2;
 28257   0135E2  C60C  F628         	movff	put_fat@clst,put_fat@bc
 28258   0135E6  C60D  F629         	movff	put_fat@clst+1,put_fat@bc+1
 28259                           
 28260                           ; BSR set to: 6
 28261   0135EA  90D8               	bcf	status,0,c
 28262   0135EC  3129               	rrcf	(put_fat@bc+1)& (0+255),w,b
 28263   0135EE  6F15               	movwf	(??_put_fat+1)& (0+255),b
 28264   0135F0  3128               	rrcf	put_fat@bc& (0+255),w,b
 28265   0135F2  6F14               	movwf	??_put_fat& (0+255),b
 28266   0135F4  5114               	movf	??_put_fat& (0+255),w,b
 28267   0135F6  2728               	addwf	put_fat@bc& (0+255),f,b
 28268   0135F8  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28269   0135FA  2329               	addwfc	(put_fat@bc+1)& (0+255),f,b
 28270                           
 28271                           ; BSR set to: 6
 28272                           ;fatfs/ff.c: 1254:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 28273   0135FC  C60A  F600         	movff	put_fat@fs,move_window@fs
 28274   013600  C60B  F601         	movff	put_fat@fs+1,move_window@fs+1
 28275   013604  EE20 F020          	lfsr	2,32
 28276   013608  510A               	movf	put_fat@fs& (0+255),w,b
 28277   01360A  26D9               	addwf	fsr2l,f,c
 28278   01360C  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28279   01360E  22DA               	addwfc	fsr2h,f,c
 28280   013610  C4DE F614          	movff	postinc2,??_put_fat
 28281   013614  C4DE F615          	movff	postinc2,??_put_fat+1
 28282   013618  C4DE F616          	movff	postinc2,??_put_fat+2
 28283   01361C  C4DE F617          	movff	postinc2,??_put_fat+3
 28284   013620  C628  F618         	movff	put_fat@bc,??_put_fat+4
 28285   013624  C629  F619         	movff	put_fat@bc+1,??_put_fat+5
 28286   013628  0E09               	movlw	9
 28287   01362A  6F1A               	movwf	(??_put_fat+6)& (0+255),b
 28288   01362C                     u11515:
 28289   01362C  90D8               	bcf	status,0,c
 28290   01362E  3319               	rrcf	(??_put_fat+5)& (0+255),f,b
 28291   013630  3318               	rrcf	(??_put_fat+4)& (0+255),f,b
 28292   013632  2F1A               	decfsz	(??_put_fat+6)& (0+255),f,b
 28293   013634  D7FB               	goto	u11515
 28294   013636  5118               	movf	(??_put_fat+4)& (0+255),w,b
 28295   013638  2514               	addwf	??_put_fat& (0+255),w,b
 28296   01363A  6F02               	movwf	move_window@sect& (0+255),b
 28297   01363C  5119               	movf	(??_put_fat+5)& (0+255),w,b
 28298   01363E  2115               	addwfc	(??_put_fat+1)& (0+255),w,b
 28299   013640  6F03               	movwf	(move_window@sect+1)& (0+255),b
 28300   013642  0E00               	movlw	0
 28301   013644  2116               	addwfc	(??_put_fat+2)& (0+255),w,b
 28302   013646  6F04               	movwf	(move_window@sect+2)& (0+255),b
 28303   013648  0E00               	movlw	0
 28304   01364A  2117               	addwfc	(??_put_fat+3)& (0+255),w,b
 28305   01364C  6F05               	movwf	(move_window@sect+3)& (0+255),b
 28306   01364E  EC1A  F0C4         	call	_move_window	;wreg free
 28307   013652  0106               	movlb	6	; () banked
 28308   013654  6F2A               	movwf	put_fat@res& (0+255),b
 28309                           
 28310                           ; BSR set to: 6
 28311                           ;fatfs/ff.c: 1255:    if (res != FR_OK) break;
 28312   013656  512A               	movf	put_fat@res& (0+255),w,b
 28313   013658  A4D8               	btfss	status,2,c
 28314   01365A  D1A6               	goto	l9991
 28315                           
 28316                           ; BSR set to: 6
 28317                           ;fatfs/ff.c: 1256:    p = fs->win + bc++ % ((UINT)512);
 28318   01365C  0EFF               	movlw	255
 28319   01365E  1528               	andwf	put_fat@bc& (0+255),w,b
 28320   013660  6F14               	movwf	??_put_fat& (0+255),b
 28321   013662  0E01               	movlw	1
 28322   013664  1529               	andwf	(put_fat@bc+1)& (0+255),w,b
 28323   013666  6F15               	movwf	(??_put_fat+1)& (0+255),b
 28324   013668  5114               	movf	??_put_fat& (0+255),w,b
 28325   01366A  250A               	addwf	put_fat@fs& (0+255),w,b
 28326   01366C  6F16               	movwf	(??_put_fat+2)& (0+255),b
 28327   01366E  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28328   013670  210B               	addwfc	(put_fat@fs+1)& (0+255),w,b
 28329   013672  6F17               	movwf	(??_put_fat+3)& (0+255),b
 28330   013674  0E30               	movlw	48
 28331   013676  2516               	addwf	(??_put_fat+2)& (0+255),w,b
 28332   013678  6F26               	movwf	put_fat@p& (0+255),b
 28333   01367A  0E00               	movlw	0
 28334   01367C  2117               	addwfc	(??_put_fat+3)& (0+255),w,b
 28335   01367E  6F27               	movwf	(put_fat@p+1)& (0+255),b
 28336                           
 28337                           ; BSR set to: 6
 28338   013680  4B28               	infsnz	put_fat@bc& (0+255),f,b
 28339   013682  2B29               	incf	(put_fat@bc+1)& (0+255),f,b
 28340                           
 28341                           ; BSR set to: 6
 28342                           ;fatfs/ff.c: 1257:    *p = (clst & 1) ? ((*p & 0x0F) | (BYTE)((BYTE)val << 4)) : (BYTE)v
      +                          al;
 28343   013684  B10C               	btfsc	put_fat@clst& (0+255),0,b
 28344   013686  D003               	goto	l9943
 28345                           
 28346                           ; BSR set to: 6
 28347   013688  C610  F622         	movff	put_fat@val,_put_fat$435
 28348   01368C  D00F               	goto	L11
 28349   01368E                     l9943:
 28350                           
 28351                           ; BSR set to: 6
 28352   01368E  C610  F614         	movff	put_fat@val,??_put_fat
 28353   013692  3B14               	swapf	??_put_fat& (0+255),f,b
 28354   013694  0EF0               	movlw	240
 28355   013696  1714               	andwf	??_put_fat& (0+255),f,b
 28356   013698  C626  F4D9         	movff	put_fat@p,fsr2l
 28357   01369C  C627  F4DA         	movff	put_fat@p+1,fsr2h
 28358   0136A0  50DF               	movf	indf2,w,c
 28359   0136A2  0B0F               	andlw	15
 28360   0136A4  1114               	iorwf	??_put_fat& (0+255),w,b
 28361   0136A6  6F15               	movwf	(??_put_fat+1)& (0+255),b
 28362   0136A8  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28363   0136AA  6F22               	movwf	_put_fat$435& (0+255),b
 28364   0136AC                     L11:
 28365   0136AC  6B23               	clrf	(_put_fat$435+1)& (0+255),b
 28366                           
 28367                           ; BSR set to: 6
 28368   0136AE  C626  F4D9         	movff	put_fat@p,fsr2l
 28369   0136B2  C627  F4DA         	movff	put_fat@p+1,fsr2h
 28370   0136B6  C622  F4DF         	movff	_put_fat$435,indf2
 28371                           
 28372                           ; BSR set to: 6
 28373                           ;fatfs/ff.c: 1258:    fs->wflag = 1;
 28374   0136BA  EE20 F004          	lfsr	2,4
 28375   0136BE  510A               	movf	put_fat@fs& (0+255),w,b
 28376   0136C0  26D9               	addwf	fsr2l,f,c
 28377   0136C2  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28378   0136C4  22DA               	addwfc	fsr2h,f,c
 28379   0136C6  0E01               	movlw	1
 28380   0136C8  6EDF               	movwf	indf2,c
 28381                           
 28382                           ; BSR set to: 6
 28383                           ;fatfs/ff.c: 1259:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 28384   0136CA  C60A  F600         	movff	put_fat@fs,move_window@fs
 28385   0136CE  C60B  F601         	movff	put_fat@fs+1,move_window@fs+1
 28386   0136D2  EE20 F020          	lfsr	2,32
 28387   0136D6  510A               	movf	put_fat@fs& (0+255),w,b
 28388   0136D8  26D9               	addwf	fsr2l,f,c
 28389   0136DA  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28390   0136DC  22DA               	addwfc	fsr2h,f,c
 28391   0136DE  C4DE F614          	movff	postinc2,??_put_fat
 28392   0136E2  C4DE F615          	movff	postinc2,??_put_fat+1
 28393   0136E6  C4DE F616          	movff	postinc2,??_put_fat+2
 28394   0136EA  C4DE F617          	movff	postinc2,??_put_fat+3
 28395   0136EE  C628  F618         	movff	put_fat@bc,??_put_fat+4
 28396   0136F2  C629  F619         	movff	put_fat@bc+1,??_put_fat+5
 28397   0136F6  0E09               	movlw	9
 28398   0136F8  6F1A               	movwf	(??_put_fat+6)& (0+255),b
 28399   0136FA                     u11545:
 28400   0136FA  90D8               	bcf	status,0,c
 28401   0136FC  3319               	rrcf	(??_put_fat+5)& (0+255),f,b
 28402   0136FE  3318               	rrcf	(??_put_fat+4)& (0+255),f,b
 28403   013700  2F1A               	decfsz	(??_put_fat+6)& (0+255),f,b
 28404   013702  D7FB               	goto	u11545
 28405   013704  5118               	movf	(??_put_fat+4)& (0+255),w,b
 28406   013706  2514               	addwf	??_put_fat& (0+255),w,b
 28407   013708  6F02               	movwf	move_window@sect& (0+255),b
 28408   01370A  5119               	movf	(??_put_fat+5)& (0+255),w,b
 28409   01370C  2115               	addwfc	(??_put_fat+1)& (0+255),w,b
 28410   01370E  6F03               	movwf	(move_window@sect+1)& (0+255),b
 28411   013710  0E00               	movlw	0
 28412   013712  2116               	addwfc	(??_put_fat+2)& (0+255),w,b
 28413   013714  6F04               	movwf	(move_window@sect+2)& (0+255),b
 28414   013716  0E00               	movlw	0
 28415   013718  2117               	addwfc	(??_put_fat+3)& (0+255),w,b
 28416   01371A  6F05               	movwf	(move_window@sect+3)& (0+255),b
 28417   01371C  EC1A  F0C4         	call	_move_window	;wreg free
 28418   013720  0106               	movlb	6	; () banked
 28419   013722  6F2A               	movwf	put_fat@res& (0+255),b
 28420                           
 28421                           ; BSR set to: 6
 28422                           ;fatfs/ff.c: 1260:    if (res != FR_OK) break;
 28423   013724  512A               	movf	put_fat@res& (0+255),w,b
 28424   013726  A4D8               	btfss	status,2,c
 28425   013728  D13F               	goto	l9991
 28426                           
 28427                           ; BSR set to: 6
 28428                           ;fatfs/ff.c: 1261:    p = fs->win + bc % ((UINT)512);
 28429   01372A  0EFF               	movlw	255
 28430   01372C  1528               	andwf	put_fat@bc& (0+255),w,b
 28431   01372E  6F14               	movwf	??_put_fat& (0+255),b
 28432   013730  0E01               	movlw	1
 28433   013732  1529               	andwf	(put_fat@bc+1)& (0+255),w,b
 28434   013734  6F15               	movwf	(??_put_fat+1)& (0+255),b
 28435   013736  5114               	movf	??_put_fat& (0+255),w,b
 28436   013738  250A               	addwf	put_fat@fs& (0+255),w,b
 28437   01373A  6F16               	movwf	(??_put_fat+2)& (0+255),b
 28438   01373C  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28439   01373E  210B               	addwfc	(put_fat@fs+1)& (0+255),w,b
 28440   013740  6F17               	movwf	(??_put_fat+3)& (0+255),b
 28441   013742  0E30               	movlw	48
 28442   013744  2516               	addwf	(??_put_fat+2)& (0+255),w,b
 28443   013746  6F26               	movwf	put_fat@p& (0+255),b
 28444   013748  0E00               	movlw	0
 28445   01374A  2117               	addwfc	(??_put_fat+3)& (0+255),w,b
 28446   01374C  6F27               	movwf	(put_fat@p+1)& (0+255),b
 28447                           
 28448                           ; BSR set to: 6
 28449                           ;fatfs/ff.c: 1262:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >>
      +                           8) & 0x0F));
 28450   01374E  B10C               	btfsc	put_fat@clst& (0+255),0,b
 28451   013750  D00E               	goto	l9961
 28452                           
 28453                           ; BSR set to: 6
 28454   013752  C611  F614         	movff	put_fat@val+1,??_put_fat
 28455   013756  0E0F               	movlw	15
 28456   013758  1714               	andwf	??_put_fat& (0+255),f,b
 28457   01375A  C626  F4D9         	movff	put_fat@p,fsr2l
 28458   01375E  C627  F4DA         	movff	put_fat@p+1,fsr2h
 28459   013762  50DF               	movf	indf2,w,c
 28460   013764  0BF0               	andlw	240
 28461   013766  1114               	iorwf	??_put_fat& (0+255),w,b
 28462   013768  6F15               	movwf	(??_put_fat+1)& (0+255),b
 28463   01376A  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28464   01376C  D012               	goto	L12
 28465   01376E                     l9961:
 28466                           
 28467                           ; BSR set to: 6
 28468   01376E  C610  F614         	movff	put_fat@val,??_put_fat
 28469   013772  C611  F615         	movff	put_fat@val+1,??_put_fat+1
 28470   013776  C612  F616         	movff	put_fat@val+2,??_put_fat+2
 28471   01377A  C613  F617         	movff	put_fat@val+3,??_put_fat+3
 28472   01377E  0E05               	movlw	5
 28473   013780  D005               	goto	u11570
 28474   013782                     u11575:
 28475   013782  90D8               	bcf	status,0,c
 28476   013784  3317               	rrcf	(??_put_fat+3)& (0+255),f,b
 28477   013786  3316               	rrcf	(??_put_fat+2)& (0+255),f,b
 28478   013788  3315               	rrcf	(??_put_fat+1)& (0+255),f,b
 28479   01378A  3314               	rrcf	??_put_fat& (0+255),f,b
 28480   01378C                     u11570:
 28481   01378C  2EE8               	decfsz	wreg,f,c
 28482   01378E  D7F9               	goto	u11575
 28483   013790  5114               	movf	??_put_fat& (0+255),w,b
 28484   013792                     L12:
 28485   013792  6F24               	movwf	_put_fat$436& (0+255),b
 28486   013794  6B25               	clrf	(_put_fat$436+1)& (0+255),b
 28487                           
 28488                           ; BSR set to: 6
 28489   013796  C626  F4D9         	movff	put_fat@p,fsr2l
 28490   01379A  C627  F4DA         	movff	put_fat@p+1,fsr2h
 28491   01379E  C624  F4DF         	movff	_put_fat$436,indf2
 28492   0137A2  D0EB               	goto	l9985
 28493   0137A4                     l9965:
 28494                           
 28495                           ; BSR set to: 6
 28496                           ;fatfs/ff.c: 1267:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)));
 28497   0137A4  C60A  F600         	movff	put_fat@fs,move_window@fs
 28498   0137A8  C60B  F601         	movff	put_fat@fs+1,move_window@fs+1
 28499   0137AC  EE20 F020          	lfsr	2,32
 28500   0137B0  510A               	movf	put_fat@fs& (0+255),w,b
 28501   0137B2  26D9               	addwf	fsr2l,f,c
 28502   0137B4  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28503   0137B6  22DA               	addwfc	fsr2h,f,c
 28504   0137B8  C4DE F614          	movff	postinc2,??_put_fat
 28505   0137BC  C4DE F615          	movff	postinc2,??_put_fat+1
 28506   0137C0  C4DE F616          	movff	postinc2,??_put_fat+2
 28507   0137C4  C4DE F617          	movff	postinc2,??_put_fat+3
 28508   0137C8  510D               	movf	(put_fat@clst+1)& (0+255),w,b
 28509   0137CA  6F18               	movwf	(??_put_fat+4)& (0+255),b
 28510   0137CC  510E               	movf	(put_fat@clst+2)& (0+255),w,b
 28511   0137CE  6F19               	movwf	(??_put_fat+5)& (0+255),b
 28512   0137D0  510F               	movf	(put_fat@clst+3)& (0+255),w,b
 28513   0137D2  6F1A               	movwf	(??_put_fat+6)& (0+255),b
 28514   0137D4  6B1B               	clrf	(??_put_fat+7)& (0+255),b
 28515   0137D6  5114               	movf	??_put_fat& (0+255),w,b
 28516   0137D8  2518               	addwf	(??_put_fat+4)& (0+255),w,b
 28517   0137DA  6F02               	movwf	move_window@sect& (0+255),b
 28518   0137DC  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28519   0137DE  2119               	addwfc	(??_put_fat+5)& (0+255),w,b
 28520   0137E0  6F03               	movwf	(move_window@sect+1)& (0+255),b
 28521   0137E2  5116               	movf	(??_put_fat+2)& (0+255),w,b
 28522   0137E4  211A               	addwfc	(??_put_fat+6)& (0+255),w,b
 28523   0137E6  6F04               	movwf	(move_window@sect+2)& (0+255),b
 28524   0137E8  5117               	movf	(??_put_fat+3)& (0+255),w,b
 28525   0137EA  211B               	addwfc	(??_put_fat+7)& (0+255),w,b
 28526   0137EC  6F05               	movwf	(move_window@sect+3)& (0+255),b
 28527   0137EE  EC1A  F0C4         	call	_move_window	;wreg free
 28528   0137F2  0106               	movlb	6	; () banked
 28529   0137F4  6F2A               	movwf	put_fat@res& (0+255),b
 28530                           
 28531                           ; BSR set to: 6
 28532                           ;fatfs/ff.c: 1268:    if (res != FR_OK) break;
 28533   0137F6  512A               	movf	put_fat@res& (0+255),w,b
 28534   0137F8  A4D8               	btfss	status,2,c
 28535   0137FA  D0D6               	goto	l9991
 28536                           
 28537                           ; BSR set to: 6
 28538                           ;fatfs/ff.c: 1269:    st_word(fs->win + clst * 2 % ((UINT)512), (WORD)val);
 28539   0137FC  C60C  F614         	movff	put_fat@clst,??_put_fat
 28540   013800  C60D  F615         	movff	put_fat@clst+1,??_put_fat+1
 28541   013804  90D8               	bcf	status,0,c
 28542   013806  3714               	rlcf	??_put_fat& (0+255),f,b
 28543   013808  3715               	rlcf	(??_put_fat+1)& (0+255),f,b
 28544   01380A  0EFF               	movlw	255
 28545   01380C  1514               	andwf	??_put_fat& (0+255),w,b
 28546   01380E  6F16               	movwf	(??_put_fat+2)& (0+255),b
 28547   013810  0E01               	movlw	1
 28548   013812  1515               	andwf	(??_put_fat+1)& (0+255),w,b
 28549   013814  6F17               	movwf	(??_put_fat+3)& (0+255),b
 28550   013816  5116               	movf	(??_put_fat+2)& (0+255),w,b
 28551   013818  250A               	addwf	put_fat@fs& (0+255),w,b
 28552   01381A  6F18               	movwf	(??_put_fat+4)& (0+255),b
 28553   01381C  5117               	movf	(??_put_fat+3)& (0+255),w,b
 28554   01381E  210B               	addwfc	(put_fat@fs+1)& (0+255),w,b
 28555   013820  6F19               	movwf	(??_put_fat+5)& (0+255),b
 28556   013822  0E30               	movlw	48
 28557   013824  2518               	addwf	(??_put_fat+4)& (0+255),w,b
 28558   013826  6E01               	movwf	st_word@ptr^(0+1280),c
 28559   013828  0E00               	movlw	0
 28560   01382A  2119               	addwfc	(??_put_fat+5)& (0+255),w,b
 28561   01382C  6E02               	movwf	(st_word@ptr+1)^(0+1280),c
 28562   01382E  C610  F503         	movff	put_fat@val,st_word@val
 28563   013832  C611  F504         	movff	put_fat@val+1,st_word@val+1
 28564   013836  EC27  F0CF         	call	_st_word	;wreg free
 28565                           
 28566                           ;fatfs/ff.c: 1270:    fs->wflag = 1;
 28567   01383A  0106               	movlb	6	; () banked
 28568   01383C  D09E               	goto	l9985
 28569   01383E                     l9975:
 28570                           
 28571                           ; BSR set to: 6
 28572                           ;fatfs/ff.c: 1277:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)));
 28573   01383E  C60A  F600         	movff	put_fat@fs,move_window@fs
 28574   013842  C60B  F601         	movff	put_fat@fs+1,move_window@fs+1
 28575   013846  EE20 F020          	lfsr	2,32
 28576   01384A  510A               	movf	put_fat@fs& (0+255),w,b
 28577   01384C  26D9               	addwf	fsr2l,f,c
 28578   01384E  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28579   013850  22DA               	addwfc	fsr2h,f,c
 28580   013852  C4DE F614          	movff	postinc2,??_put_fat
 28581   013856  C4DE F615          	movff	postinc2,??_put_fat+1
 28582   01385A  C4DE F616          	movff	postinc2,??_put_fat+2
 28583   01385E  C4DE F617          	movff	postinc2,??_put_fat+3
 28584   013862  C60C  F618         	movff	put_fat@clst,??_put_fat+4
 28585   013866  C60D  F619         	movff	put_fat@clst+1,??_put_fat+5
 28586   01386A  C60E  F61A         	movff	put_fat@clst+2,??_put_fat+6
 28587   01386E  C60F  F61B         	movff	put_fat@clst+3,??_put_fat+7
 28588   013872  0E08               	movlw	8
 28589   013874  D005               	goto	u11590
 28590   013876                     u11595:
 28591   013876  90D8               	bcf	status,0,c
 28592   013878  331B               	rrcf	(??_put_fat+7)& (0+255),f,b
 28593   01387A  331A               	rrcf	(??_put_fat+6)& (0+255),f,b
 28594   01387C  3319               	rrcf	(??_put_fat+5)& (0+255),f,b
 28595   01387E  3318               	rrcf	(??_put_fat+4)& (0+255),f,b
 28596   013880                     u11590:
 28597   013880  2EE8               	decfsz	wreg,f,c
 28598   013882  D7F9               	goto	u11595
 28599   013884  5114               	movf	??_put_fat& (0+255),w,b
 28600   013886  2518               	addwf	(??_put_fat+4)& (0+255),w,b
 28601   013888  6F02               	movwf	move_window@sect& (0+255),b
 28602   01388A  5115               	movf	(??_put_fat+1)& (0+255),w,b
 28603   01388C  2119               	addwfc	(??_put_fat+5)& (0+255),w,b
 28604   01388E  6F03               	movwf	(move_window@sect+1)& (0+255),b
 28605   013890  5116               	movf	(??_put_fat+2)& (0+255),w,b
 28606   013892  211A               	addwfc	(??_put_fat+6)& (0+255),w,b
 28607   013894  6F04               	movwf	(move_window@sect+2)& (0+255),b
 28608   013896  5117               	movf	(??_put_fat+3)& (0+255),w,b
 28609   013898  211B               	addwfc	(??_put_fat+7)& (0+255),w,b
 28610   01389A  6F05               	movwf	(move_window@sect+3)& (0+255),b
 28611   01389C  EC1A  F0C4         	call	_move_window	;wreg free
 28612   0138A0  0106               	movlb	6	; () banked
 28613   0138A2  6F2A               	movwf	put_fat@res& (0+255),b
 28614                           
 28615                           ; BSR set to: 6
 28616                           ;fatfs/ff.c: 1278:    if (res != FR_OK) break;
 28617   0138A4  512A               	movf	put_fat@res& (0+255),w,b
 28618   0138A6  A4D8               	btfss	status,2,c
 28619   0138A8  D07F               	goto	l9991
 28620                           
 28621                           ; BSR set to: 6
 28622                           ;fatfs/ff.c: 1280:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % ((UINT)
      +                          512)) & 0xF0000000);
 28623   0138AA  C60C  F614         	movff	put_fat@clst,??_put_fat
 28624   0138AE  C60D  F615         	movff	put_fat@clst+1,??_put_fat+1
 28625   0138B2  90D8               	bcf	status,0,c
 28626   0138B4  3714               	rlcf	??_put_fat& (0+255),f,b
 28627   0138B6  3715               	rlcf	(??_put_fat+1)& (0+255),f,b
 28628   0138B8  90D8               	bcf	status,0,c
 28629   0138BA  3714               	rlcf	??_put_fat& (0+255),f,b
 28630   0138BC  3715               	rlcf	(??_put_fat+1)& (0+255),f,b
 28631   0138BE  0EFF               	movlw	255
 28632   0138C0  1514               	andwf	??_put_fat& (0+255),w,b
 28633   0138C2  6F16               	movwf	(??_put_fat+2)& (0+255),b
 28634   0138C4  0E01               	movlw	1
 28635   0138C6  1515               	andwf	(??_put_fat+1)& (0+255),w,b
 28636   0138C8  6F17               	movwf	(??_put_fat+3)& (0+255),b
 28637   0138CA  5116               	movf	(??_put_fat+2)& (0+255),w,b
 28638   0138CC  250A               	addwf	put_fat@fs& (0+255),w,b
 28639   0138CE  6F18               	movwf	(??_put_fat+4)& (0+255),b
 28640   0138D0  5117               	movf	(??_put_fat+3)& (0+255),w,b
 28641   0138D2  210B               	addwfc	(put_fat@fs+1)& (0+255),w,b
 28642   0138D4  6F19               	movwf	(??_put_fat+5)& (0+255),b
 28643   0138D6  0E30               	movlw	48
 28644   0138D8  2518               	addwf	(??_put_fat+4)& (0+255),w,b
 28645   0138DA  6E01               	movwf	ld_dword@ptr^(0+1280),c
 28646   0138DC  0E00               	movlw	0
 28647   0138DE  2119               	addwfc	(??_put_fat+5)& (0+255),w,b
 28648   0138E0  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 28649   0138E2  ECD5  F0C4         	call	_ld_dword	;wreg free
 28650   0138E6  0E00               	movlw	0
 28651   0138E8  1401               	andwf	?_ld_dword^(0+1280),w,c
 28652   0138EA  6F1A               	movwf	(??_put_fat+6)& (0+255),b
 28653   0138EC  0E00               	movlw	0
 28654   0138EE  1402               	andwf	(?_ld_dword+1)^(0+1280),w,c
 28655   0138F0  6F1B               	movwf	(??_put_fat+7)& (0+255),b
 28656   0138F2  0E00               	movlw	0
 28657   0138F4  1403               	andwf	(?_ld_dword+2)^(0+1280),w,c
 28658   0138F6  6F1C               	movwf	(??_put_fat+8)& (0+255),b
 28659   0138F8  0EF0               	movlw	240
 28660   0138FA  1404               	andwf	(?_ld_dword+3)^(0+1280),w,c
 28661   0138FC  6F1D               	movwf	(??_put_fat+9)& (0+255),b
 28662   0138FE  0EFF               	movlw	255
 28663   013900  1510               	andwf	put_fat@val& (0+255),w,b
 28664   013902  6F1E               	movwf	(??_put_fat+10)& (0+255),b
 28665   013904  0EFF               	movlw	255
 28666   013906  1511               	andwf	(put_fat@val+1)& (0+255),w,b
 28667   013908  6F1F               	movwf	(??_put_fat+11)& (0+255),b
 28668   01390A  0EFF               	movlw	255
 28669   01390C  1512               	andwf	(put_fat@val+2)& (0+255),w,b
 28670   01390E  6F20               	movwf	(??_put_fat+12)& (0+255),b
 28671   013910  0E0F               	movlw	15
 28672   013912  1513               	andwf	(put_fat@val+3)& (0+255),w,b
 28673   013914  6F21               	movwf	(??_put_fat+13)& (0+255),b
 28674   013916  511A               	movf	(??_put_fat+6)& (0+255),w,b
 28675   013918  111E               	iorwf	(??_put_fat+10)& (0+255),w,b
 28676   01391A  6F10               	movwf	put_fat@val& (0+255),b
 28677   01391C  511B               	movf	(??_put_fat+7)& (0+255),w,b
 28678   01391E  111F               	iorwf	(??_put_fat+11)& (0+255),w,b
 28679   013920  6F11               	movwf	(put_fat@val+1)& (0+255),b
 28680   013922  511C               	movf	(??_put_fat+8)& (0+255),w,b
 28681   013924  1120               	iorwf	(??_put_fat+12)& (0+255),w,b
 28682   013926  6F12               	movwf	(put_fat@val+2)& (0+255),b
 28683   013928  511D               	movf	(??_put_fat+9)& (0+255),w,b
 28684   01392A  1121               	iorwf	(??_put_fat+13)& (0+255),w,b
 28685   01392C  6F13               	movwf	(put_fat@val+3)& (0+255),b
 28686                           
 28687                           ; BSR set to: 6
 28688                           ;fatfs/ff.c: 1282:    st_dword(fs->win + clst * 4 % ((UINT)512), val);
 28689                           
 28690                           ;fatfs/ff.c: 1281:    }
 28691   01392E  C60C  F614         	movff	put_fat@clst,??_put_fat
 28692   013932  C60D  F615         	movff	put_fat@clst+1,??_put_fat+1
 28693   013936  90D8               	bcf	status,0,c
 28694   013938  3714               	rlcf	??_put_fat& (0+255),f,b
 28695   01393A  3715               	rlcf	(??_put_fat+1)& (0+255),f,b
 28696   01393C  90D8               	bcf	status,0,c
 28697   01393E  3714               	rlcf	??_put_fat& (0+255),f,b
 28698   013940  3715               	rlcf	(??_put_fat+1)& (0+255),f,b
 28699   013942  0EFF               	movlw	255
 28700   013944  1514               	andwf	??_put_fat& (0+255),w,b
 28701   013946  6F16               	movwf	(??_put_fat+2)& (0+255),b
 28702   013948  0E01               	movlw	1
 28703   01394A  1515               	andwf	(??_put_fat+1)& (0+255),w,b
 28704   01394C  6F17               	movwf	(??_put_fat+3)& (0+255),b
 28705   01394E  5116               	movf	(??_put_fat+2)& (0+255),w,b
 28706   013950  250A               	addwf	put_fat@fs& (0+255),w,b
 28707   013952  6F18               	movwf	(??_put_fat+4)& (0+255),b
 28708   013954  5117               	movf	(??_put_fat+3)& (0+255),w,b
 28709   013956  210B               	addwfc	(put_fat@fs+1)& (0+255),w,b
 28710   013958  6F19               	movwf	(??_put_fat+5)& (0+255),b
 28711   01395A  0E30               	movlw	48
 28712   01395C  2518               	addwf	(??_put_fat+4)& (0+255),w,b
 28713   01395E  6E01               	movwf	st_dword@ptr^(0+1280),c
 28714   013960  0E00               	movlw	0
 28715   013962  2119               	addwfc	(??_put_fat+5)& (0+255),w,b
 28716   013964  6E02               	movwf	(st_dword@ptr+1)^(0+1280),c
 28717   013966  C610  F503         	movff	put_fat@val,st_dword@val
 28718   01396A  C611  F504         	movff	put_fat@val+1,st_dword@val+1
 28719   01396E  C612  F505         	movff	put_fat@val+2,st_dword@val+2
 28720   013972  C613  F506         	movff	put_fat@val+3,st_dword@val+3
 28721   013976  EC64  F0CB         	call	_st_dword	;wreg free
 28722   01397A                     l9985:
 28723                           
 28724                           ; BSR set to: 6
 28725                           ;fatfs/ff.c: 1283:    fs->wflag = 1;
 28726   01397A  EE20 F004          	lfsr	2,4
 28727   01397E  510A               	movf	put_fat@fs& (0+255),w,b
 28728   013980  26D9               	addwf	fsr2l,f,c
 28729   013982  510B               	movf	(put_fat@fs+1)& (0+255),w,b
 28730   013984  22DA               	addwfc	fsr2h,f,c
 28731   013986  0E01               	movlw	1
 28732   013988  6EDF               	movwf	indf2,c
 28733                           
 28734                           ;fatfs/ff.c: 1284:    break;
 28735   01398A  D00E               	goto	l9991
 28736   01398C                     l9989:
 28737                           
 28738                           ; BSR set to: 6
 28739   01398C  C60A  F4D9         	movff	put_fat@fs,fsr2l
 28740   013990  C60B  F4DA         	movff	put_fat@fs+1,fsr2h
 28741   013994  50DF               	movf	indf2,w,c
 28742                           
 28743                           ; Switch size 1, requested type "simple"
 28744                           ; Number of cases is 3, Range of values is 1 to 3
 28745                           ; switch strategies available:
 28746                           ; Name         Instructions Cycles
 28747                           ; simple_byte           10     6 (average)
 28748                           ;	Chosen strategy is simple_byte
 28749   013996  0A01               	xorlw	1	; case 1
 28750   013998  B4D8               	btfsc	status,2,c
 28751   01399A  D623               	goto	l249
 28752   01399C  0A03               	xorlw	3	; case 2
 28753   01399E  B4D8               	btfsc	status,2,c
 28754   0139A0  D701               	goto	l9965
 28755   0139A2  0A01               	xorlw	1	; case 3
 28756   0139A4  B4D8               	btfsc	status,2,c
 28757   0139A6  D74B               	goto	l9975
 28758   0139A8                     l9991:
 28759                           
 28760                           ; BSR set to: 6
 28761                           ;fatfs/ff.c: 1287:  return res;
 28762   0139A8  512A               	movf	put_fat@res& (0+255),w,b
 28763                           
 28764                           ; BSR set to: 6
 28765   0139AA  0012               	return		;funcret
 28766   0139AC                     __end_of_put_fat:
 28767                           	callstack 0
 28768                           
 28769 ;; *************** function _st_word *****************
 28770 ;; Defined at:
 28771 ;;		line 656 in file "fatfs/ff.c"
 28772 ;; Parameters:    Size  Location     Type
 28773 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 28774 ;;		 -> fs$win(512), fs(560), NULL(0), 
 28775 ;;  val             2    2[COMRAM] unsigned short 
 28776 ;; Auto vars:     Size  Location     Type
 28777 ;;		None
 28778 ;; Return value:  Size  Location     Type
 28779 ;;                  1    wreg      void 
 28780 ;; Registers used:
 28781 ;;		fsr2l, fsr2h, status,2, status,0
 28782 ;; Tracked objects:
 28783 ;;		On entry : 0/6
 28784 ;;		On exit  : 0/0
 28785 ;;		Unchanged: 0/0
 28786 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28790 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28791 ;;Total ram usage:        4 bytes
 28792 ;; Hardware stack levels used: 1
 28793 ;; This function calls:
 28794 ;;		Nothing
 28795 ;; This function is called by:
 28796 ;;		_sync_fs
 28797 ;;		_put_fat
 28798 ;;		_st_clust
 28799 ;;		_f_sync
 28800 ;; This function uses a non-reentrant model
 28801 ;;
 28802                           
 28803                           	psect	text53
 28804   019E4E                     __ptext53:
 28805                           	callstack 0
 28806   019E4E                     _st_word:
 28807                           	callstack 120
 28808                           
 28809                           ;fatfs/ff.c: 656: static void st_word (BYTE* ptr, WORD val);fatfs/ff.c: 657: {;fatfs/ff.
      +                          c: 658:  *ptr++ = (BYTE)val; val >>= 8;
 28810                           
 28811                           ; BSR set to: 6
 28812                           ;incstack = 0
 28813   019E4E  C501  F4D9         	movff	st_word@ptr,fsr2l
 28814   019E52  C502  F4DA         	movff	st_word@ptr+1,fsr2h
 28815   019E56  C503  F4DF         	movff	st_word@val,indf2
 28816   019E5A  4A01               	infsnz	st_word@ptr^(0+1280),f,c
 28817   019E5C  2A02               	incf	(st_word@ptr+1)^(0+1280),f,c
 28818   019E5E  C504  F503         	movff	st_word@val+1,st_word@val
 28819   019E62  6A04               	clrf	(st_word@val+1)^(0+1280),c
 28820                           
 28821                           ;fatfs/ff.c: 659:  *ptr++ = (BYTE)val;
 28822   019E64  C501  F4D9         	movff	st_word@ptr,fsr2l
 28823   019E68  C502  F4DA         	movff	st_word@ptr+1,fsr2h
 28824   019E6C  C503  F4DF         	movff	st_word@val,indf2
 28825   019E70  4A01               	infsnz	st_word@ptr^(0+1280),f,c
 28826   019E72  2A02               	incf	(st_word@ptr+1)^(0+1280),f,c
 28827   019E74  0012               	return		;funcret
 28828   019E76                     __end_of_st_word:
 28829                           	callstack 0
 28830                           
 28831 ;; *************** function _st_dword *****************
 28832 ;; Defined at:
 28833 ;;		line 662 in file "fatfs/ff.c"
 28834 ;; Parameters:    Size  Location     Type
 28835 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 28836 ;;		 -> fs$win(512), fs(560), NULL(0), 
 28837 ;;  val             4    2[COMRAM] unsigned long 
 28838 ;; Auto vars:     Size  Location     Type
 28839 ;;		None
 28840 ;; Return value:  Size  Location     Type
 28841 ;;                  1    wreg      void 
 28842 ;; Registers used:
 28843 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28844 ;; Tracked objects:
 28845 ;;		On entry : 3F/6
 28846 ;;		On exit  : 3F/6
 28847 ;;		Unchanged: 3F/0
 28848 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28849 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28852 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28853 ;;Total ram usage:        6 bytes
 28854 ;; Hardware stack levels used: 1
 28855 ;; This function calls:
 28856 ;;		Nothing
 28857 ;; This function is called by:
 28858 ;;		_sync_fs
 28859 ;;		_put_fat
 28860 ;;		_f_open
 28861 ;;		_f_sync
 28862 ;; This function uses a non-reentrant model
 28863 ;;
 28864                           
 28865                           	psect	text54
 28866   0196C8                     __ptext54:
 28867                           	callstack 0
 28868   0196C8                     _st_dword:
 28869                           	callstack 120
 28870                           
 28871                           ; BSR set to: 6
 28872                           ;fatfs/ff.c: 662: static void st_dword (BYTE* ptr, DWORD val);fatfs/ff.c: 663: {;fatfs/f
      +                          f.c: 664:  *ptr++ = (BYTE)val; val >>= 8;
 28873                           
 28874                           ;incstack = 0
 28875   0196C8  C501  F4D9         	movff	st_dword@ptr,fsr2l
 28876   0196CC  C502  F4DA         	movff	st_dword@ptr+1,fsr2h
 28877   0196D0  C503  F4DF         	movff	st_dword@val,indf2
 28878                           
 28879                           ; BSR set to: 6
 28880   0196D4  4A01               	infsnz	st_dword@ptr^(0+1280),f,c
 28881   0196D6  2A02               	incf	(st_dword@ptr+1)^(0+1280),f,c
 28882                           
 28883                           ; BSR set to: 6
 28884   0196D8  5004               	movf	(st_dword@val+1)^(0+1280),w,c
 28885   0196DA  6E03               	movwf	st_dword@val^(0+1280),c
 28886   0196DC  5005               	movf	(st_dword@val+2)^(0+1280),w,c
 28887   0196DE  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 28888   0196E0  5006               	movf	(st_dword@val+3)^(0+1280),w,c
 28889   0196E2  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 28890   0196E4  6A06               	clrf	(st_dword@val+3)^(0+1280),c
 28891                           
 28892                           ; BSR set to: 6
 28893                           ;fatfs/ff.c: 665:  *ptr++ = (BYTE)val; val >>= 8;
 28894   0196E6  C501  F4D9         	movff	st_dword@ptr,fsr2l
 28895   0196EA  C502  F4DA         	movff	st_dword@ptr+1,fsr2h
 28896   0196EE  C503  F4DF         	movff	st_dword@val,indf2
 28897                           
 28898                           ; BSR set to: 6
 28899   0196F2  4A01               	infsnz	st_dword@ptr^(0+1280),f,c
 28900   0196F4  2A02               	incf	(st_dword@ptr+1)^(0+1280),f,c
 28901   0196F6  5004               	movf	(st_dword@val+1)^(0+1280),w,c
 28902   0196F8  6E03               	movwf	st_dword@val^(0+1280),c
 28903   0196FA  5005               	movf	(st_dword@val+2)^(0+1280),w,c
 28904   0196FC  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 28905   0196FE  5006               	movf	(st_dword@val+3)^(0+1280),w,c
 28906   019700  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 28907   019702  6A06               	clrf	(st_dword@val+3)^(0+1280),c
 28908                           
 28909                           ; BSR set to: 6
 28910                           ;fatfs/ff.c: 666:  *ptr++ = (BYTE)val; val >>= 8;
 28911   019704  C501  F4D9         	movff	st_dword@ptr,fsr2l
 28912   019708  C502  F4DA         	movff	st_dword@ptr+1,fsr2h
 28913   01970C  C503  F4DF         	movff	st_dword@val,indf2
 28914                           
 28915                           ; BSR set to: 6
 28916   019710  4A01               	infsnz	st_dword@ptr^(0+1280),f,c
 28917   019712  2A02               	incf	(st_dword@ptr+1)^(0+1280),f,c
 28918                           
 28919                           ; BSR set to: 6
 28920   019714  5004               	movf	(st_dword@val+1)^(0+1280),w,c
 28921   019716  6E03               	movwf	st_dword@val^(0+1280),c
 28922   019718  5005               	movf	(st_dword@val+2)^(0+1280),w,c
 28923   01971A  6E04               	movwf	(st_dword@val+1)^(0+1280),c
 28924   01971C  5006               	movf	(st_dword@val+3)^(0+1280),w,c
 28925   01971E  6E05               	movwf	(st_dword@val+2)^(0+1280),c
 28926   019720  6A06               	clrf	(st_dword@val+3)^(0+1280),c
 28927                           
 28928                           ; BSR set to: 6
 28929                           ;fatfs/ff.c: 667:  *ptr++ = (BYTE)val;
 28930   019722  C501  F4D9         	movff	st_dword@ptr,fsr2l
 28931   019726  C502  F4DA         	movff	st_dword@ptr+1,fsr2h
 28932   01972A  C503  F4DF         	movff	st_dword@val,indf2
 28933   01972E  4A01               	infsnz	st_dword@ptr^(0+1280),f,c
 28934   019730  2A02               	incf	(st_dword@ptr+1)^(0+1280),f,c
 28935                           
 28936                           ; BSR set to: 6
 28937   019732  0012               	return		;funcret
 28938   019734                     __end_of_st_dword:
 28939                           	callstack 0
 28940                           
 28941 ;; *************** function _get_fat *****************
 28942 ;; Defined at:
 28943 ;;		line 1161 in file "fatfs/ff.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;  obj             2   10[BANK6 ] PTR struct .
 28946 ;;		 -> files(3276), fsdir(40), f_rename@djn(40), f_rename@djo(40), 
 28947 ;;		 -> f_mkdir@sobj(14), f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), 
 28948 ;;		 -> f_getfree@obj(14), f_stat@dj(40), f_open@dj(40), 
 28949 ;;  clst            4   12[BANK6 ] unsigned long 
 28950 ;; Auto vars:     Size  Location     Type
 28951 ;;  val             4   26[BANK6 ] unsigned long 
 28952 ;;  fs              2   34[BANK6 ] PTR struct .
 28953 ;;		 -> fs(560), NULL(0), 
 28954 ;;  bc              2   32[BANK6 ] unsigned int 
 28955 ;;  wc              2   30[BANK6 ] unsigned int 
 28956 ;; Return value:  Size  Location     Type
 28957 ;;                  4   10[BANK6 ] unsigned long 
 28958 ;; Registers used:
 28959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28960 ;; Tracked objects:
 28961 ;;		On entry : 3F/6
 28962 ;;		On exit  : 3C/4
 28963 ;;		Unchanged: 0/0
 28964 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28965 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28966 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28967 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28968 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28969 ;;Total ram usage:       26 bytes
 28970 ;; Hardware stack levels used: 1
 28971 ;; Hardware stack levels required when called: 13
 28972 ;; This function calls:
 28973 ;;		_ld_dword
 28974 ;;		_ld_word
 28975 ;;		_move_window
 28976 ;; This function is called by:
 28977 ;;		_remove_chain
 28978 ;;		_create_chain
 28979 ;;		_dir_sdi
 28980 ;;		_dir_next
 28981 ;;		_f_open
 28982 ;;		_f_read
 28983 ;;		_f_lseek
 28984 ;; This function uses a non-reentrant model
 28985 ;;
 28986                           
 28987                           	psect	text55
 28988   0140CC                     __ptext55:
 28989                           	callstack 0
 28990   0140CC                     _get_fat:
 28991                           	callstack 110
 28992                           
 28993                           ; BSR set to: 6
 28994                           ;fatfs/ff.c: 1162:  FFOBJID* obj,;fatfs/ff.c: 1163:  DWORD clst;fatfs/ff.c: 1165: {;fatf
      +                          s/ff.c: 1166:  UINT wc, bc;;fatfs/ff.c: 1167:  DWORD val;;fatfs/ff.c: 1168:  FATFS *fs =
      +                           obj->fs;
 28995                           
 28996                           ; BSR set to: 6
 28997                           ;incstack = 0
 28998   0140CC  C60A  F4D9         	movff	get_fat@obj,fsr2l
 28999   0140D0  C60B  F4DA         	movff	get_fat@obj+1,fsr2h
 29000   0140D4  C4DE F622          	movff	postinc2,get_fat@fs
 29001   0140D8  C4DD F623          	movff	postdec2,get_fat@fs+1
 29002                           
 29003                           ; BSR set to: 6
 29004                           ;fatfs/ff.c: 1171:  if (clst < 2 || clst >= fs->n_fatent) {
 29005   0140DC  510F               	movf	(get_fat@clst+3)& (0+255),w,b
 29006   0140DE  110E               	iorwf	(get_fat@clst+2)& (0+255),w,b
 29007   0140E0  110D               	iorwf	(get_fat@clst+1)& (0+255),w,b
 29008   0140E2  E104               	bnz	u11380
 29009   0140E4  0E02               	movlw	2
 29010   0140E6  5D0C               	subwf	get_fat@clst& (0+255),w,b
 29011   0140E8  A0D8               	btfss	status,0,c
 29012   0140EA  D010               	goto	u11390
 29013   0140EC                     u11380:
 29014                           
 29015                           ; BSR set to: 6
 29016   0140EC  EE20 F014          	lfsr	2,20
 29017   0140F0  5122               	movf	get_fat@fs& (0+255),w,b
 29018   0140F2  26D9               	addwf	fsr2l,f,c
 29019   0140F4  5123               	movf	(get_fat@fs+1)& (0+255),w,b
 29020   0140F6  22DA               	addwfc	fsr2h,f,c
 29021   0140F8  50DE               	movf	postinc2,w,c
 29022   0140FA  5D0C               	subwf	get_fat@clst& (0+255),w,b
 29023   0140FC  50DE               	movf	postinc2,w,c
 29024   0140FE  590D               	subwfb	(get_fat@clst+1)& (0+255),w,b
 29025   014100  50DE               	movf	postinc2,w,c
 29026   014102  590E               	subwfb	(get_fat@clst+2)& (0+255),w,b
 29027   014104  50DE               	movf	postinc2,w,c
 29028   014106  590F               	subwfb	(get_fat@clst+3)& (0+255),w,b
 29029   014108  A0D8               	btfss	status,0,c
 29030   01410A  D008               	goto	l226
 29031   01410C                     u11390:
 29032                           
 29033                           ; BSR set to: 6
 29034                           ;fatfs/ff.c: 1172:   val = 1;
 29035   01410C  0E01               	movlw	1
 29036   01410E  6F1A               	movwf	get_fat@val& (0+255),b
 29037   014110  0E00               	movlw	0
 29038   014112  6F1B               	movwf	(get_fat@val+1)& (0+255),b
 29039   014114  0E00               	movlw	0
 29040   014116  6F1C               	movwf	(get_fat@val+2)& (0+255),b
 29041   014118  0E00               	movlw	0
 29042   01411A  D16D               	goto	L14
 29043   01411C                     l226:
 29044                           
 29045                           ; BSR set to: 6
 29046                           ;fatfs/ff.c: 1175:   val = 0xFFFFFFFF;
 29047   01411C  691A               	setf	get_fat@val& (0+255),b
 29048   01411E  691B               	setf	(get_fat@val+1)& (0+255),b
 29049   014120  691C               	setf	(get_fat@val+2)& (0+255),b
 29050   014122  691D               	setf	(get_fat@val+3)& (0+255),b
 29051                           
 29052                           ;fatfs/ff.c: 1177:   switch (fs->fs_type) {
 29053   014124  D16A               	goto	l9917
 29054   014126                     l231:
 29055                           
 29056                           ; BSR set to: 6
 29057                           ;fatfs/ff.c: 1179:    bc = (UINT)clst; bc += bc / 2;
 29058   014126  C60C  F620         	movff	get_fat@clst,get_fat@bc
 29059   01412A  C60D  F621         	movff	get_fat@clst+1,get_fat@bc+1
 29060                           
 29061                           ; BSR set to: 6
 29062   01412E  90D8               	bcf	status,0,c
 29063   014130  3121               	rrcf	(get_fat@bc+1)& (0+255),w,b
 29064   014132  6F11               	movwf	(??_get_fat+1)& (0+255),b
 29065   014134  3120               	rrcf	get_fat@bc& (0+255),w,b
 29066   014136  6F10               	movwf	??_get_fat& (0+255),b
 29067   014138  5110               	movf	??_get_fat& (0+255),w,b
 29068   01413A  2720               	addwf	get_fat@bc& (0+255),f,b
 29069   01413C  5111               	movf	(??_get_fat+1)& (0+255),w,b
 29070   01413E  2321               	addwfc	(get_fat@bc+1)& (0+255),f,b
 29071                           
 29072                           ; BSR set to: 6
 29073                           ;fatfs/ff.c: 1180:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) br
      +                          eak;
 29074   014140  C622  F600         	movff	get_fat@fs,move_window@fs
 29075   014144  C623  F601         	movff	get_fat@fs+1,move_window@fs+1
 29076   014148  EE20 F020          	lfsr	2,32
 29077   01414C  5122               	movf	get_fat@fs& (0+255),w,b
 29078   01414E  26D9               	addwf	fsr2l,f,c
 29079   014150  5123               	movf	(get_fat@fs+1)& (0+255),w,b
 29080   014152  22DA               	addwfc	fsr2h,f,c
 29081   014154  C4DE F610          	movff	postinc2,??_get_fat
 29082   014158  C4DE F611          	movff	postinc2,??_get_fat+1
 29083   01415C  C4DE F612          	movff	postinc2,??_get_fat+2
 29084   014160  C4DE F613          	movff	postinc2,??_get_fat+3
 29085   014164  C620  F614         	movff	get_fat@bc,??_get_fat+4
 29086   014168  C621  F615         	movff	get_fat@bc+1,??_get_fat+5
 29087   01416C  0E09               	movlw	9
 29088   01416E  6F16               	movwf	(??_get_fat+6)& (0+255),b
 29089   014170                     u11405:
 29090   014170  90D8               	bcf	status,0,c
 29091   014172  3315               	rrcf	(??_get_fat+5)& (0+255),f,b
 29092   014174  3314               	rrcf	(??_get_fat+4)& (0+255),f,b
 29093   014176  2F16               	decfsz	(??_get_fat+6)& (0+255),f,b
 29094   014178  D7FB               	goto	u11405
 29095   01417A  5114               	movf	(??_get_fat+4)& (0+255),w,b
 29096   01417C  2510               	addwf	??_get_fat& (0+255),w,b
 29097   01417E  6F02               	movwf	move_window@sect& (0+255),b
 29098   014180  5115               	movf	(??_get_fat+5)& (0+255),w,b
 29099   014182  2111               	addwfc	(??_get_fat+1)& (0+255),w,b
 29100   014184  6F03               	movwf	(move_window@sect+1)& (0+255),b
 29101   014186  0E00               	movlw	0
 29102   014188  2112               	addwfc	(??_get_fat+2)& (0+255),w,b
 29103   01418A  6F04               	movwf	(move_window@sect+2)& (0+255),b
 29104   01418C  0E00               	movlw	0
 29105   01418E  2113               	addwfc	(??_get_fat+3)& (0+255),w,b
 29106   014190  6F05               	movwf	(move_window@sect+3)& (0+255),b
 29107   014192  EC1A  F0C4         	call	_move_window	;wreg free
 29108   014196  0900               	iorlw	0
 29109   014198  A4D8               	btfss	status,2,c
 29110   01419A  D13E               	goto	l229
 29111                           
 29112                           ; BSR set to: 5
 29113                           ;fatfs/ff.c: 1181:    wc = fs->win[bc++ % ((UINT)512)];
 29114   01419C  0EFF               	movlw	255
 29115   01419E  0106               	movlb	6	; () banked
 29116   0141A0  1520               	andwf	get_fat@bc& (0+255),w,b
 29117   0141A2  6F10               	movwf	??_get_fat& (0+255),b
 29118   0141A4  0E01               	movlw	1
 29119   0141A6  1521               	andwf	(get_fat@bc+1)& (0+255),w,b
 29120   0141A8  6F11               	movwf	(??_get_fat+1)& (0+255),b
 29121   0141AA  5110               	movf	??_get_fat& (0+255),w,b
 29122   0141AC  2522               	addwf	get_fat@fs& (0+255),w,b
 29123   0141AE  6F12               	movwf	(??_get_fat+2)& (0+255),b
 29124   0141B0  5111               	movf	(??_get_fat+1)& (0+255),w,b
 29125   0141B2  2123               	addwfc	(get_fat@fs+1)& (0+255),w,b
 29126   0141B4  6F13               	movwf	(??_get_fat+3)& (0+255),b
 29127   0141B6  0E30               	movlw	48
 29128   0141B8  2512               	addwf	(??_get_fat+2)& (0+255),w,b
 29129   0141BA  6ED9               	movwf	fsr2l,c
 29130   0141BC  0E00               	movlw	0
 29131   0141BE  2113               	addwfc	(??_get_fat+3)& (0+255),w,b
 29132   0141C0  6EDA               	movwf	fsr2h,c
 29133   0141C2  50DF               	movf	indf2,w,c
 29134   0141C4  6F14               	movwf	(??_get_fat+4)& (0+255),b
 29135   0141C6  5114               	movf	(??_get_fat+4)& (0+255),w,b
 29136   0141C8  6F1E               	movwf	get_fat@wc& (0+255),b
 29137   0141CA  6B1F               	clrf	(get_fat@wc+1)& (0+255),b
 29138                           
 29139                           ; BSR set to: 6
 29140   0141CC  4B20               	infsnz	get_fat@bc& (0+255),f,b
 29141   0141CE  2B21               	incf	(get_fat@bc+1)& (0+255),f,b
 29142                           
 29143                           ; BSR set to: 6
 29144                           ;fatfs/ff.c: 1182:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) br
      +                          eak;
 29145   0141D0  C622  F600         	movff	get_fat@fs,move_window@fs
 29146   0141D4  C623  F601         	movff	get_fat@fs+1,move_window@fs+1
 29147   0141D8  EE20 F020          	lfsr	2,32
 29148   0141DC  5122               	movf	get_fat@fs& (0+255),w,b
 29149   0141DE  26D9               	addwf	fsr2l,f,c
 29150   0141E0  5123               	movf	(get_fat@fs+1)& (0+255),w,b
 29151   0141E2  22DA               	addwfc	fsr2h,f,c
 29152   0141E4  C4DE F610          	movff	postinc2,??_get_fat
 29153   0141E8  C4DE F611          	movff	postinc2,??_get_fat+1
 29154   0141EC  C4DE F612          	movff	postinc2,??_get_fat+2
 29155   0141F0  C4DE F613          	movff	postinc2,??_get_fat+3
 29156   0141F4  C620  F614         	movff	get_fat@bc,??_get_fat+4
 29157   0141F8  C621  F615         	movff	get_fat@bc+1,??_get_fat+5
 29158   0141FC  0E09               	movlw	9
 29159   0141FE  6F16               	movwf	(??_get_fat+6)& (0+255),b
 29160   014200                     u11425:
 29161   014200  90D8               	bcf	status,0,c
 29162   014202  3315               	rrcf	(??_get_fat+5)& (0+255),f,b
 29163   014204  3314               	rrcf	(??_get_fat+4)& (0+255),f,b
 29164   014206  2F16               	decfsz	(??_get_fat+6)& (0+255),f,b
 29165   014208  D7FB               	goto	u11425
 29166   01420A  5114               	movf	(??_get_fat+4)& (0+255),w,b
 29167   01420C  2510               	addwf	??_get_fat& (0+255),w,b
 29168   01420E  6F02               	movwf	move_window@sect& (0+255),b
 29169   014210  5115               	movf	(??_get_fat+5)& (0+255),w,b
 29170   014212  2111               	addwfc	(??_get_fat+1)& (0+255),w,b
 29171   014214  6F03               	movwf	(move_window@sect+1)& (0+255),b
 29172   014216  0E00               	movlw	0
 29173   014218  2112               	addwfc	(??_get_fat+2)& (0+255),w,b
 29174   01421A  6F04               	movwf	(move_window@sect+2)& (0+255),b
 29175   01421C  0E00               	movlw	0
 29176   01421E  2113               	addwfc	(??_get_fat+3)& (0+255),w,b
 29177   014220  6F05               	movwf	(move_window@sect+3)& (0+255),b
 29178   014222  EC1A  F0C4         	call	_move_window	;wreg free
 29179   014226  0900               	iorlw	0
 29180   014228  A4D8               	btfss	status,2,c
 29181   01422A  D0F6               	goto	l229
 29182                           
 29183                           ; BSR set to: 5
 29184                           ;fatfs/ff.c: 1183:    wc |= (UINT)fs->win[bc % ((UINT)512)] << 8;
 29185   01422C  0EFF               	movlw	255
 29186   01422E  0106               	movlb	6	; () banked
 29187   014230  1520               	andwf	get_fat@bc& (0+255),w,b
 29188   014232  6F10               	movwf	??_get_fat& (0+255),b
 29189   014234  0E01               	movlw	1
 29190   014236  1521               	andwf	(get_fat@bc+1)& (0+255),w,b
 29191   014238  6F11               	movwf	(??_get_fat+1)& (0+255),b
 29192   01423A  5110               	movf	??_get_fat& (0+255),w,b
 29193   01423C  2522               	addwf	get_fat@fs& (0+255),w,b
 29194   01423E  6F12               	movwf	(??_get_fat+2)& (0+255),b
 29195   014240  5111               	movf	(??_get_fat+1)& (0+255),w,b
 29196   014242  2123               	addwfc	(get_fat@fs+1)& (0+255),w,b
 29197   014244  6F13               	movwf	(??_get_fat+3)& (0+255),b
 29198   014246  0E30               	movlw	48
 29199   014248  2512               	addwf	(??_get_fat+2)& (0+255),w,b
 29200   01424A  6ED9               	movwf	fsr2l,c
 29201   01424C  0E00               	movlw	0
 29202   01424E  2113               	addwfc	(??_get_fat+3)& (0+255),w,b
 29203   014250  6EDA               	movwf	fsr2h,c
 29204   014252  50DF               	movf	indf2,w,c
 29205   014254  6F14               	movwf	(??_get_fat+4)& (0+255),b
 29206   014256  5114               	movf	(??_get_fat+4)& (0+255),w,b
 29207   014258  6F16               	movwf	(??_get_fat+6)& (0+255),b
 29208   01425A  6B15               	clrf	(??_get_fat+5)& (0+255),b
 29209   01425C  5115               	movf	(??_get_fat+5)& (0+255),w,b
 29210   01425E  131E               	iorwf	get_fat@wc& (0+255),f,b
 29211   014260  5116               	movf	(??_get_fat+6)& (0+255),w,b
 29212   014262  131F               	iorwf	(get_fat@wc+1)& (0+255),f,b
 29213                           
 29214                           ; BSR set to: 6
 29215                           ;fatfs/ff.c: 1184:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 29216   014264  B10C               	btfsc	get_fat@clst& (0+255),0,b
 29217   014266  D007               	goto	l9899
 29218                           
 29219                           ; BSR set to: 6
 29220   014268  0EFF               	movlw	255
 29221   01426A  151E               	andwf	get_fat@wc& (0+255),w,b
 29222   01426C  6F18               	movwf	_get_fat$406& (0+255),b
 29223   01426E  0E0F               	movlw	15
 29224   014270  151F               	andwf	(get_fat@wc+1)& (0+255),w,b
 29225   014272  6F19               	movwf	(_get_fat$406+1)& (0+255),b
 29226   014274  D00F               	goto	l9901
 29227   014276                     l9899:
 29228                           
 29229                           ; BSR set to: 6
 29230   014276  C61E  F610         	movff	get_fat@wc,??_get_fat
 29231   01427A  C61F  F611         	movff	get_fat@wc+1,??_get_fat+1
 29232   01427E  0E04               	movlw	4
 29233   014280  6F12               	movwf	(??_get_fat+2)& (0+255),b
 29234   014282                     u11455:
 29235   014282  90D8               	bcf	status,0,c
 29236   014284  3311               	rrcf	(??_get_fat+1)& (0+255),f,b
 29237   014286  3310               	rrcf	??_get_fat& (0+255),f,b
 29238   014288  2F12               	decfsz	(??_get_fat+2)& (0+255),f,b
 29239   01428A  D7FB               	goto	u11455
 29240   01428C  C610  F618         	movff	??_get_fat,_get_fat$406
 29241   014290  C611  F619         	movff	??_get_fat+1,_get_fat$406+1
 29242   014294                     l9901:
 29243                           
 29244                           ; BSR set to: 6
 29245   014294  C618  F61A         	movff	_get_fat$406,get_fat@val
 29246   014298  C619  F61B         	movff	_get_fat$406+1,get_fat@val+1
 29247   01429C  D04B               	goto	L15
 29248   01429E                     l9903:
 29249                           
 29250                           ; BSR set to: 6
 29251                           ;fatfs/ff.c: 1188:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) != F
      +                          R_OK) break;
 29252   01429E  C622  F600         	movff	get_fat@fs,move_window@fs
 29253   0142A2  C623  F601         	movff	get_fat@fs+1,move_window@fs+1
 29254   0142A6  EE20 F020          	lfsr	2,32
 29255   0142AA  5122               	movf	get_fat@fs& (0+255),w,b
 29256   0142AC  26D9               	addwf	fsr2l,f,c
 29257   0142AE  5123               	movf	(get_fat@fs+1)& (0+255),w,b
 29258   0142B0  22DA               	addwfc	fsr2h,f,c
 29259   0142B2  C4DE F610          	movff	postinc2,??_get_fat
 29260   0142B6  C4DE F611          	movff	postinc2,??_get_fat+1
 29261   0142BA  C4DE F612          	movff	postinc2,??_get_fat+2
 29262   0142BE  C4DE F613          	movff	postinc2,??_get_fat+3
 29263   0142C2  510D               	movf	(get_fat@clst+1)& (0+255),w,b
 29264   0142C4  6F14               	movwf	(??_get_fat+4)& (0+255),b
 29265   0142C6  510E               	movf	(get_fat@clst+2)& (0+255),w,b
 29266   0142C8  6F15               	movwf	(??_get_fat+5)& (0+255),b
 29267   0142CA  510F               	movf	(get_fat@clst+3)& (0+255),w,b
 29268   0142CC  6F16               	movwf	(??_get_fat+6)& (0+255),b
 29269   0142CE  6B17               	clrf	(??_get_fat+7)& (0+255),b
 29270   0142D0  5110               	movf	??_get_fat& (0+255),w,b
 29271   0142D2  2514               	addwf	(??_get_fat+4)& (0+255),w,b
 29272   0142D4  6F02               	movwf	move_window@sect& (0+255),b
 29273   0142D6  5111               	movf	(??_get_fat+1)& (0+255),w,b
 29274   0142D8  2115               	addwfc	(??_get_fat+5)& (0+255),w,b
 29275   0142DA  6F03               	movwf	(move_window@sect+1)& (0+255),b
 29276   0142DC  5112               	movf	(??_get_fat+2)& (0+255),w,b
 29277   0142DE  2116               	addwfc	(??_get_fat+6)& (0+255),w,b
 29278   0142E0  6F04               	movwf	(move_window@sect+2)& (0+255),b
 29279   0142E2  5113               	movf	(??_get_fat+3)& (0+255),w,b
 29280   0142E4  2117               	addwfc	(??_get_fat+7)& (0+255),w,b
 29281   0142E6  6F05               	movwf	(move_window@sect+3)& (0+255),b
 29282   0142E8  EC1A  F0C4         	call	_move_window	;wreg free
 29283   0142EC  0900               	iorlw	0
 29284   0142EE  A4D8               	btfss	status,2,c
 29285   0142F0  D093               	goto	l229
 29286                           
 29287                           ; BSR set to: 5
 29288                           ;fatfs/ff.c: 1189:    val = ld_word(fs->win + clst * 2 % ((UINT)512));
 29289   0142F2  C60C  F610         	movff	get_fat@clst,??_get_fat
 29290   0142F6  C60D  F611         	movff	get_fat@clst+1,??_get_fat+1
 29291   0142FA  90D8               	bcf	status,0,c
 29292   0142FC  0106               	movlb	6	; () banked
 29293   0142FE  3710               	rlcf	??_get_fat& (0+255),f,b
 29294   014300  3711               	rlcf	(??_get_fat+1)& (0+255),f,b
 29295   014302  0EFF               	movlw	255
 29296   014304  1510               	andwf	??_get_fat& (0+255),w,b
 29297   014306  6F12               	movwf	(??_get_fat+2)& (0+255),b
 29298   014308  0E01               	movlw	1
 29299   01430A  1511               	andwf	(??_get_fat+1)& (0+255),w,b
 29300   01430C  6F13               	movwf	(??_get_fat+3)& (0+255),b
 29301   01430E  5112               	movf	(??_get_fat+2)& (0+255),w,b
 29302   014310  2522               	addwf	get_fat@fs& (0+255),w,b
 29303   014312  6F14               	movwf	(??_get_fat+4)& (0+255),b
 29304   014314  5113               	movf	(??_get_fat+3)& (0+255),w,b
 29305   014316  2123               	addwfc	(get_fat@fs+1)& (0+255),w,b
 29306   014318  6F15               	movwf	(??_get_fat+5)& (0+255),b
 29307   01431A  0E30               	movlw	48
 29308   01431C  2514               	addwf	(??_get_fat+4)& (0+255),w,b
 29309   01431E  6E01               	movwf	ld_word@ptr^(0+1280),c
 29310   014320  0E00               	movlw	0
 29311   014322  2115               	addwfc	(??_get_fat+5)& (0+255),w,b
 29312   014324  6E02               	movwf	(ld_word@ptr+1)^(0+1280),c
 29313   014326  EC31  F0CE         	call	_ld_word	;wreg free
 29314   01432A  C501  F61A         	movff	?_ld_word,get_fat@val
 29315   01432E  C502  F61B         	movff	?_ld_word+1,get_fat@val+1
 29316   014332  0106               	movlb	6	; () banked
 29317   014334                     L15:
 29318   014334  6B1C               	clrf	(get_fat@val+2)& (0+255),b
 29319   014336  6B1D               	clrf	(get_fat@val+3)& (0+255),b
 29320                           
 29321                           ;fatfs/ff.c: 1190:    break;
 29322   014338  D06F               	goto	l229
 29323   01433A                     l9909:
 29324                           
 29325                           ; BSR set to: 6
 29326                           ;fatfs/ff.c: 1193:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) != F
      +                          R_OK) break;
 29327   01433A  C622  F600         	movff	get_fat@fs,move_window@fs
 29328   01433E  C623  F601         	movff	get_fat@fs+1,move_window@fs+1
 29329   014342  EE20 F020          	lfsr	2,32
 29330   014346  5122               	movf	get_fat@fs& (0+255),w,b
 29331   014348  26D9               	addwf	fsr2l,f,c
 29332   01434A  5123               	movf	(get_fat@fs+1)& (0+255),w,b
 29333   01434C  22DA               	addwfc	fsr2h,f,c
 29334   01434E  C4DE F610          	movff	postinc2,??_get_fat
 29335   014352  C4DE F611          	movff	postinc2,??_get_fat+1
 29336   014356  C4DE F612          	movff	postinc2,??_get_fat+2
 29337   01435A  C4DE F613          	movff	postinc2,??_get_fat+3
 29338   01435E  C60C  F614         	movff	get_fat@clst,??_get_fat+4
 29339   014362  C60D  F615         	movff	get_fat@clst+1,??_get_fat+5
 29340   014366  C60E  F616         	movff	get_fat@clst+2,??_get_fat+6
 29341   01436A  C60F  F617         	movff	get_fat@clst+3,??_get_fat+7
 29342   01436E  0E08               	movlw	8
 29343   014370  D005               	goto	u11470
 29344   014372                     u11475:
 29345   014372  90D8               	bcf	status,0,c
 29346   014374  3317               	rrcf	(??_get_fat+7)& (0+255),f,b
 29347   014376  3316               	rrcf	(??_get_fat+6)& (0+255),f,b
 29348   014378  3315               	rrcf	(??_get_fat+5)& (0+255),f,b
 29349   01437A  3314               	rrcf	(??_get_fat+4)& (0+255),f,b
 29350   01437C                     u11470:
 29351   01437C  2EE8               	decfsz	wreg,f,c
 29352   01437E  D7F9               	goto	u11475
 29353   014380  5110               	movf	??_get_fat& (0+255),w,b
 29354   014382  2514               	addwf	(??_get_fat+4)& (0+255),w,b
 29355   014384  6F02               	movwf	move_window@sect& (0+255),b
 29356   014386  5111               	movf	(??_get_fat+1)& (0+255),w,b
 29357   014388  2115               	addwfc	(??_get_fat+5)& (0+255),w,b
 29358   01438A  6F03               	movwf	(move_window@sect+1)& (0+255),b
 29359   01438C  5112               	movf	(??_get_fat+2)& (0+255),w,b
 29360   01438E  2116               	addwfc	(??_get_fat+6)& (0+255),w,b
 29361   014390  6F04               	movwf	(move_window@sect+2)& (0+255),b
 29362   014392  5113               	movf	(??_get_fat+3)& (0+255),w,b
 29363   014394  2117               	addwfc	(??_get_fat+7)& (0+255),w,b
 29364   014396  6F05               	movwf	(move_window@sect+3)& (0+255),b
 29365   014398  EC1A  F0C4         	call	_move_window	;wreg free
 29366   01439C  0900               	iorlw	0
 29367   01439E  A4D8               	btfss	status,2,c
 29368   0143A0  D03B               	goto	l229
 29369                           
 29370                           ; BSR set to: 5
 29371                           ;fatfs/ff.c: 1194:    val = ld_dword(fs->win + clst * 4 % ((UINT)512)) & 0x0FFFFFFF;
 29372   0143A2  C60C  F610         	movff	get_fat@clst,??_get_fat
 29373   0143A6  C60D  F611         	movff	get_fat@clst+1,??_get_fat+1
 29374   0143AA  0106               	movlb	6	; () banked
 29375   0143AC  90D8               	bcf	status,0,c
 29376   0143AE  3710               	rlcf	??_get_fat& (0+255),f,b
 29377   0143B0  3711               	rlcf	(??_get_fat+1)& (0+255),f,b
 29378   0143B2  90D8               	bcf	status,0,c
 29379   0143B4  3710               	rlcf	??_get_fat& (0+255),f,b
 29380   0143B6  3711               	rlcf	(??_get_fat+1)& (0+255),f,b
 29381   0143B8  0EFF               	movlw	255
 29382   0143BA  1510               	andwf	??_get_fat& (0+255),w,b
 29383   0143BC  6F12               	movwf	(??_get_fat+2)& (0+255),b
 29384   0143BE  0E01               	movlw	1
 29385   0143C0  1511               	andwf	(??_get_fat+1)& (0+255),w,b
 29386   0143C2  6F13               	movwf	(??_get_fat+3)& (0+255),b
 29387   0143C4  5112               	movf	(??_get_fat+2)& (0+255),w,b
 29388   0143C6  2522               	addwf	get_fat@fs& (0+255),w,b
 29389   0143C8  6F14               	movwf	(??_get_fat+4)& (0+255),b
 29390   0143CA  5113               	movf	(??_get_fat+3)& (0+255),w,b
 29391   0143CC  2123               	addwfc	(get_fat@fs+1)& (0+255),w,b
 29392   0143CE  6F15               	movwf	(??_get_fat+5)& (0+255),b
 29393   0143D0  0E30               	movlw	48
 29394   0143D2  2514               	addwf	(??_get_fat+4)& (0+255),w,b
 29395   0143D4  6E01               	movwf	ld_dword@ptr^(0+1280),c
 29396   0143D6  0E00               	movlw	0
 29397   0143D8  2115               	addwfc	(??_get_fat+5)& (0+255),w,b
 29398   0143DA  6E02               	movwf	(ld_dword@ptr+1)^(0+1280),c
 29399   0143DC  ECD5  F0C4         	call	_ld_dword	;wreg free
 29400   0143E0  0EFF               	movlw	255
 29401   0143E2  1401               	andwf	?_ld_dword^(0+1280),w,c
 29402   0143E4  6F1A               	movwf	get_fat@val& (0+255),b
 29403   0143E6  0EFF               	movlw	255
 29404   0143E8  1402               	andwf	(?_ld_dword+1)^(0+1280),w,c
 29405   0143EA  6F1B               	movwf	(get_fat@val+1)& (0+255),b
 29406   0143EC  0EFF               	movlw	255
 29407   0143EE  1403               	andwf	(?_ld_dword+2)^(0+1280),w,c
 29408   0143F0  6F1C               	movwf	(get_fat@val+2)& (0+255),b
 29409   0143F2  0E0F               	movlw	15
 29410   0143F4  1404               	andwf	(?_ld_dword+3)^(0+1280),w,c
 29411   0143F6                     L14:
 29412   0143F6  6F1D               	movwf	(get_fat@val+3)& (0+255),b
 29413                           
 29414                           ;fatfs/ff.c: 1195:    break;
 29415   0143F8  D00F               	goto	l229
 29416   0143FA                     l9917:
 29417                           
 29418                           ; BSR set to: 6
 29419   0143FA  C622  F4D9         	movff	get_fat@fs,fsr2l
 29420   0143FE  C623  F4DA         	movff	get_fat@fs+1,fsr2h
 29421   014402  50DF               	movf	indf2,w,c
 29422                           
 29423                           ; Switch size 1, requested type "simple"
 29424                           ; Number of cases is 3, Range of values is 1 to 3
 29425                           ; switch strategies available:
 29426                           ; Name         Instructions Cycles
 29427                           ; simple_byte           10     6 (average)
 29428                           ;	Chosen strategy is simple_byte
 29429   014404  0A01               	xorlw	1	; case 1
 29430   014406  B4D8               	btfsc	status,2,c
 29431   014408  D68E               	goto	l231
 29432   01440A  0A03               	xorlw	3	; case 2
 29433   01440C  B4D8               	btfsc	status,2,c
 29434   01440E  D747               	goto	l9903
 29435   014410  0A01               	xorlw	1	; case 3
 29436   014412  B4D8               	btfsc	status,2,c
 29437   014414  D792               	goto	l9909
 29438   014416  D67A               	goto	u11390
 29439   014418                     l229:
 29440                           
 29441                           ;fatfs/ff.c: 1228:  return val;
 29442   014418  C61A  F60A         	movff	get_fat@val,?_get_fat
 29443   01441C  C61B  F60B         	movff	get_fat@val+1,?_get_fat+1
 29444   014420  C61C  F60C         	movff	get_fat@val+2,?_get_fat+2
 29445   014424  C61D  F60D         	movff	get_fat@val+3,?_get_fat+3
 29446   014428  0012               	return		;funcret
 29447   01442A                     __end_of_get_fat:
 29448                           	callstack 0
 29449                           
 29450 ;; *************** function _move_window *****************
 29451 ;; Defined at:
 29452 ;;		line 1077 in file "fatfs/ff.c"
 29453 ;; Parameters:    Size  Location     Type
 29454 ;;  fs              2    0[BANK6 ] PTR struct .
 29455 ;;		 -> fs(560), NULL(0), 
 29456 ;;  sect            4    2[BANK6 ] unsigned long 
 29457 ;; Auto vars:     Size  Location     Type
 29458 ;;  res             1  159[BANK5 ] enum E275
 29459 ;; Return value:  Size  Location     Type
 29460 ;;                  1    wreg      enum E275
 29461 ;; Registers used:
 29462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29463 ;; Tracked objects:
 29464 ;;		On entry : 3F/6
 29465 ;;		On exit  : 3F/5
 29466 ;;		Unchanged: 0/0
 29467 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29468 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29470 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29471 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29472 ;;Total ram usage:       11 bytes
 29473 ;; Hardware stack levels used: 1
 29474 ;; Hardware stack levels required when called: 12
 29475 ;; This function calls:
 29476 ;;		_disk_read
 29477 ;;		_sync_window
 29478 ;; This function is called by:
 29479 ;;		_get_fat
 29480 ;;		_put_fat
 29481 ;;		_dir_alloc
 29482 ;;		_dir_read
 29483 ;;		_dir_find
 29484 ;;		_dir_register
 29485 ;;		_check_fs
 29486 ;;		_mount_volume
 29487 ;;		_f_open
 29488 ;;		_f_sync
 29489 ;; This function uses a non-reentrant model
 29490 ;;
 29491                           
 29492                           	psect	text56
 29493   018834                     __ptext56:
 29494                           	callstack 0
 29495   018834                     _move_window:
 29496                           	callstack 110
 29497                           
 29498                           ; BSR set to: 6
 29499                           ;fatfs/ff.c: 1078:  FATFS* fs,;fatfs/ff.c: 1079:  LBA_t sect;fatfs/ff.c: 1081: {;fatfs/f
      +                          f.c: 1082:  FRESULT res = FR_OK;
 29500                           
 29501                           ;incstack = 0
 29502   018834  0E00               	movlw	0
 29503   018836  0105               	movlb	5	; () banked
 29504   018838  6FFF               	movwf	move_window@res& (0+255),b
 29505                           
 29506                           ; BSR set to: 5
 29507                           ;fatfs/ff.c: 1085:  if (sect != fs->winsect) {
 29508   01883A  0106               	movlb	6	; () banked
 29509   01883C  EE20 F02C          	lfsr	2,44
 29510   018840  5100               	movf	move_window@fs& (0+255),w,b
 29511   018842  26D9               	addwf	fsr2l,f,c
 29512   018844  5101               	movf	(move_window@fs+1)& (0+255),w,b
 29513   018846  22DA               	addwfc	fsr2h,f,c
 29514   018848  5102               	movf	move_window@sect& (0+255),w,b
 29515   01884A  18DE               	xorwf	postinc2,w,c
 29516   01884C  E10A               	bnz	u11310
 29517   01884E  5103               	movf	(move_window@sect+1)& (0+255),w,b
 29518   018850  18DE               	xorwf	postinc2,w,c
 29519   018852  E107               	bnz	u11310
 29520   018854  5104               	movf	(move_window@sect+2)& (0+255),w,b
 29521   018856  18DE               	xorwf	postinc2,w,c
 29522   018858  E104               	bnz	u11310
 29523   01885A  5105               	movf	(move_window@sect+3)& (0+255),w,b
 29524   01885C  18DE               	xorwf	postinc2,w,c
 29525   01885E  B4D8               	btfsc	status,2,c
 29526   018860  D044               	goto	l9837
 29527   018862                     u11310:
 29528                           
 29529                           ; BSR set to: 6
 29530                           ;fatfs/ff.c: 1087:   res = sync_window(fs);
 29531   018862  C600  F5ED         	movff	move_window@fs,sync_window@fs
 29532   018866  C601  F5EE         	movff	move_window@fs+1,sync_window@fs+1
 29533   01886A  ECED  F0B7         	call	_sync_window	;wreg free
 29534   01886E  6FFF               	movwf	move_window@res& (0+255),b
 29535                           
 29536                           ; BSR set to: 5
 29537                           ;fatfs/ff.c: 1089:   if (res == FR_OK) {
 29538   018870  51FF               	movf	move_window@res& (0+255),w,b
 29539   018872  A4D8               	btfss	status,2,c
 29540   018874  D03A               	goto	l9837
 29541                           
 29542                           ; BSR set to: 5
 29543                           ;fatfs/ff.c: 1090:    if (disk_read(fs->pdrv, fs->win, sect, 1) != RES_OK) {
 29544   018876  0E30               	movlw	48
 29545   018878  0106               	movlb	6	; () banked
 29546   01887A  2500               	addwf	move_window@fs& (0+255),w,b
 29547   01887C  0105               	movlb	5	; () banked
 29548   01887E  6FE4               	movwf	disk_read@buff& (0+255),b
 29549   018880  0E00               	movlw	0
 29550   018882  0106               	movlb	6	; () banked
 29551   018884  2101               	addwfc	(move_window@fs+1)& (0+255),w,b
 29552   018886  0105               	movlb	5	; () banked
 29553   018888  6FE5               	movwf	(disk_read@buff+1)& (0+255),b
 29554   01888A  C602  F5E6         	movff	move_window@sect,disk_read@sector
 29555   01888E  C603  F5E7         	movff	move_window@sect+1,disk_read@sector+1
 29556   018892  C604  F5E8         	movff	move_window@sect+2,disk_read@sector+2
 29557   018896  C605  F5E9         	movff	move_window@sect+3,disk_read@sector+3
 29558   01889A  0E00               	movlw	0
 29559   01889C  6FEB               	movwf	(disk_read@count+1)& (0+255),b
 29560   01889E  0E01               	movlw	1
 29561   0188A0  6FEA               	movwf	disk_read@count& (0+255),b
 29562   0188A2  0106               	movlb	6	; () banked
 29563   0188A4  EE20 F001          	lfsr	2,1
 29564   0188A8  5100               	movf	move_window@fs& (0+255),w,b
 29565   0188AA  26D9               	addwf	fsr2l,f,c
 29566   0188AC  5101               	movf	(move_window@fs+1)& (0+255),w,b
 29567   0188AE  22DA               	addwfc	fsr2h,f,c
 29568   0188B0  50DF               	movf	indf2,w,c
 29569   0188B2  EC50  F0C9         	call	_disk_read
 29570   0188B6  0900               	iorlw	0
 29571   0188B8  B4D8               	btfsc	status,2,c
 29572   0188BA  D008               	goto	l9835
 29573                           
 29574                           ; BSR set to: 5
 29575                           ;fatfs/ff.c: 1091:     sect = (LBA_t)0 - 1;
 29576   0188BC  0106               	movlb	6	; () banked
 29577   0188BE  6902               	setf	move_window@sect& (0+255),b
 29578   0188C0  6903               	setf	(move_window@sect+1)& (0+255),b
 29579   0188C2  6904               	setf	(move_window@sect+2)& (0+255),b
 29580   0188C4  6905               	setf	(move_window@sect+3)& (0+255),b
 29581                           
 29582                           ; BSR set to: 6
 29583                           ;fatfs/ff.c: 1092:     res = FR_DISK_ERR;
 29584   0188C6  0E01               	movlw	1
 29585   0188C8  0105               	movlb	5	; () banked
 29586   0188CA  6FFF               	movwf	move_window@res& (0+255),b
 29587   0188CC                     l9835:
 29588                           
 29589                           ; BSR set to: 5
 29590                           ;fatfs/ff.c: 1094:    fs->winsect = sect;
 29591   0188CC  0106               	movlb	6	; () banked
 29592   0188CE  EE20 F02C          	lfsr	2,44
 29593   0188D2  5100               	movf	move_window@fs& (0+255),w,b
 29594   0188D4  26D9               	addwf	fsr2l,f,c
 29595   0188D6  5101               	movf	(move_window@fs+1)& (0+255),w,b
 29596   0188D8  22DA               	addwfc	fsr2h,f,c
 29597   0188DA  C602  F4DE         	movff	move_window@sect,postinc2
 29598   0188DE  C603  F4DE         	movff	move_window@sect+1,postinc2
 29599   0188E2  C604  F4DE         	movff	move_window@sect+2,postinc2
 29600   0188E6  C605  F4DE         	movff	move_window@sect+3,postinc2
 29601   0188EA                     l9837:
 29602                           
 29603                           ;fatfs/ff.c: 1097:  return res;
 29604   0188EA  0105               	movlb	5	; () banked
 29605   0188EC  51FF               	movf	move_window@res& (0+255),w,b
 29606                           
 29607                           ; BSR set to: 5
 29608   0188EE  0012               	return		;funcret
 29609   0188F0                     __end_of_move_window:
 29610                           	callstack 0
 29611                           
 29612 ;; *************** function _sync_window *****************
 29613 ;; Defined at:
 29614 ;;		line 1055 in file "fatfs/ff.c"
 29615 ;; Parameters:    Size  Location     Type
 29616 ;;  fs              2  141[BANK5 ] PTR struct .
 29617 ;;		 -> fs(560), NULL(0), 
 29618 ;; Auto vars:     Size  Location     Type
 29619 ;;  res             1   94[COMRAM] enum E275
 29620 ;; Return value:  Size  Location     Type
 29621 ;;                  1    wreg      enum E275
 29622 ;; Registers used:
 29623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29624 ;; Tracked objects:
 29625 ;;		On entry : 3F/6
 29626 ;;		On exit  : 3F/5
 29627 ;;		Unchanged: 0/0
 29628 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29631 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29632 ;;      Totals:         1      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29633 ;;Total ram usage:       19 bytes
 29634 ;; Hardware stack levels used: 1
 29635 ;; Hardware stack levels required when called: 11
 29636 ;; This function calls:
 29637 ;;		_disk_write
 29638 ;; This function is called by:
 29639 ;;		_move_window
 29640 ;;		_sync_fs
 29641 ;;		_dir_clear
 29642 ;; This function uses a non-reentrant model
 29643 ;;
 29644                           
 29645                           	psect	text57
 29646   016FDA                     __ptext57:
 29647                           	callstack 0
 29648   016FDA                     _sync_window:
 29649                           	callstack 110
 29650                           
 29651                           ; BSR set to: 6
 29652                           ;fatfs/ff.c: 1056:  FATFS* fs;fatfs/ff.c: 1058: {;fatfs/ff.c: 1059:  FRESULT res = FR_OK
      +                          ;
 29653                           
 29654                           ; BSR set to: 5
 29655                           ;incstack = 0
 29656   016FDA  0E00               	movlw	0
 29657   016FDC  6E5F               	movwf	sync_window@res^(0+1280),c
 29658                           
 29659                           ; BSR set to: 6
 29660                           ;fatfs/ff.c: 1062:  if (fs->wflag) {
 29661   016FDE  0105               	movlb	5	; () banked
 29662   016FE0  EE20 F004          	lfsr	2,4
 29663   016FE4  51ED               	movf	sync_window@fs& (0+255),w,b
 29664   016FE6  26D9               	addwf	fsr2l,f,c
 29665   016FE8  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29666   016FEA  22DA               	addwfc	fsr2h,f,c
 29667   016FEC  50DF               	movf	indf2,w,c
 29668   016FEE  B4D8               	btfsc	status,2,c
 29669   016FF0  D0AB               	goto	l202
 29670                           
 29671                           ; BSR set to: 5
 29672                           ;fatfs/ff.c: 1063:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {
 29673   016FF2  0E30               	movlw	48
 29674   016FF4  25ED               	addwf	sync_window@fs& (0+255),w,b
 29675   016FF6  6FE2               	movwf	disk_write@buff& (0+255),b
 29676   016FF8  0E00               	movlw	0
 29677   016FFA  21EE               	addwfc	(sync_window@fs+1)& (0+255),w,b
 29678   016FFC  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 29679   016FFE  EE20 F02C          	lfsr	2,44
 29680   017002  51ED               	movf	sync_window@fs& (0+255),w,b
 29681   017004  26D9               	addwf	fsr2l,f,c
 29682   017006  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29683   017008  22DA               	addwfc	fsr2h,f,c
 29684   01700A  C4DE F5E4          	movff	postinc2,disk_write@sector
 29685   01700E  C4DE F5E5          	movff	postinc2,disk_write@sector+1
 29686   017012  C4DE F5E6          	movff	postinc2,disk_write@sector+2
 29687   017016  C4DE F5E7          	movff	postinc2,disk_write@sector+3
 29688   01701A  0E00               	movlw	0
 29689   01701C  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 29690   01701E  0E01               	movlw	1
 29691   017020  6FE8               	movwf	disk_write@count& (0+255),b
 29692   017022  EE20 F001          	lfsr	2,1
 29693   017026  51ED               	movf	sync_window@fs& (0+255),w,b
 29694   017028  26D9               	addwf	fsr2l,f,c
 29695   01702A  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29696   01702C  22DA               	addwfc	fsr2h,f,c
 29697   01702E  50DF               	movf	indf2,w,c
 29698   017030  EC0F  F0C9         	call	_disk_write
 29699   017034  0900               	iorlw	0
 29700   017036  A4D8               	btfss	status,2,c
 29701   017038  D085               	goto	l9779
 29702                           
 29703                           ; BSR set to: 5
 29704                           ;fatfs/ff.c: 1064:    fs->wflag = 0;
 29705   01703A  EE20 F004          	lfsr	2,4
 29706   01703E  51ED               	movf	sync_window@fs& (0+255),w,b
 29707   017040  26D9               	addwf	fsr2l,f,c
 29708   017042  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29709   017044  22DA               	addwfc	fsr2h,f,c
 29710   017046  6ADF               	clrf	indf2,c
 29711                           
 29712                           ; BSR set to: 5
 29713                           ;fatfs/ff.c: 1065:    if (fs->winsect - fs->fatbase < fs->fsize) {
 29714   017048  EE20 F018          	lfsr	2,24
 29715   01704C  51ED               	movf	sync_window@fs& (0+255),w,b
 29716   01704E  26D9               	addwf	fsr2l,f,c
 29717   017050  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29718   017052  22DA               	addwfc	fsr2h,f,c
 29719   017054  EE10 F020          	lfsr	1,32
 29720   017058  51ED               	movf	sync_window@fs& (0+255),w,b
 29721   01705A  26E1               	addwf	fsr1l,f,c
 29722   01705C  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29723   01705E  22E2               	addwfc	fsr1h,f,c
 29724   017060  C4E6 F5F3          	movff	postinc1,??_sync_window+4
 29725   017064  C4E6 F5F4          	movff	postinc1,??_sync_window+5
 29726   017068  C4E6 F5F5          	movff	postinc1,??_sync_window+6
 29727   01706C  C4E6 F5F6          	movff	postinc1,??_sync_window+7
 29728   017070  EE10 F02C          	lfsr	1,44
 29729   017074  51ED               	movf	sync_window@fs& (0+255),w,b
 29730   017076  26E1               	addwf	fsr1l,f,c
 29731   017078  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29732   01707A  22E2               	addwfc	fsr1h,f,c
 29733   01707C  C4E6 F5F7          	movff	postinc1,??_sync_window+8
 29734   017080  C4E6 F5F8          	movff	postinc1,??_sync_window+9
 29735   017084  C4E6 F5F9          	movff	postinc1,??_sync_window+10
 29736   017088  C4E6 F5FA          	movff	postinc1,??_sync_window+11
 29737   01708C  51F3               	movf	(??_sync_window+4)& (0+255),w,b
 29738   01708E  5DF7               	subwf	(??_sync_window+8)& (0+255),w,b
 29739   017090  6FFB               	movwf	(??_sync_window+12)& (0+255),b
 29740   017092  51F4               	movf	(??_sync_window+5)& (0+255),w,b
 29741   017094  59F8               	subwfb	(??_sync_window+9)& (0+255),w,b
 29742   017096  6FFC               	movwf	(??_sync_window+13)& (0+255),b
 29743   017098  51F5               	movf	(??_sync_window+6)& (0+255),w,b
 29744   01709A  59F9               	subwfb	(??_sync_window+10)& (0+255),w,b
 29745   01709C  6FFD               	movwf	(??_sync_window+14)& (0+255),b
 29746   01709E  51F6               	movf	(??_sync_window+7)& (0+255),w,b
 29747   0170A0  59FA               	subwfb	(??_sync_window+11)& (0+255),w,b
 29748   0170A2  6FFE               	movwf	(??_sync_window+15)& (0+255),b
 29749   0170A4  50DE               	movf	postinc2,w,c
 29750   0170A6  5DFB               	subwf	(??_sync_window+12)& (0+255),w,b
 29751   0170A8  50DE               	movf	postinc2,w,c
 29752   0170AA  59FC               	subwfb	(??_sync_window+13)& (0+255),w,b
 29753   0170AC  50DE               	movf	postinc2,w,c
 29754   0170AE  59FD               	subwfb	(??_sync_window+14)& (0+255),w,b
 29755   0170B0  50DE               	movf	postinc2,w,c
 29756   0170B2  59FE               	subwfb	(??_sync_window+15)& (0+255),w,b
 29757   0170B4  B0D8               	btfsc	status,0,c
 29758   0170B6  D048               	goto	l202
 29759                           
 29760                           ; BSR set to: 5
 29761                           ;fatfs/ff.c: 1066:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + 
      +                          fs->fsize, 1);
 29762   0170B8  EE20 F003          	lfsr	2,3
 29763   0170BC  51ED               	movf	sync_window@fs& (0+255),w,b
 29764   0170BE  26D9               	addwf	fsr2l,f,c
 29765   0170C0  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29766   0170C2  22DA               	addwfc	fsr2h,f,c
 29767   0170C4  0E02               	movlw	2
 29768   0170C6  18DE               	xorwf	postinc2,w,c
 29769   0170C8  A4D8               	btfss	status,2,c
 29770   0170CA  D03E               	goto	l202
 29771                           
 29772                           ; BSR set to: 5
 29773   0170CC  0E30               	movlw	48
 29774   0170CE  25ED               	addwf	sync_window@fs& (0+255),w,b
 29775   0170D0  6FE2               	movwf	disk_write@buff& (0+255),b
 29776   0170D2  0E00               	movlw	0
 29777   0170D4  21EE               	addwfc	(sync_window@fs+1)& (0+255),w,b
 29778   0170D6  6FE3               	movwf	(disk_write@buff+1)& (0+255),b
 29779   0170D8  EE20 F018          	lfsr	2,24
 29780   0170DC  51ED               	movf	sync_window@fs& (0+255),w,b
 29781   0170DE  26D9               	addwf	fsr2l,f,c
 29782   0170E0  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29783   0170E2  22DA               	addwfc	fsr2h,f,c
 29784   0170E4  C4DE F5EF          	movff	postinc2,??_sync_window
 29785   0170E8  C4DE F5F0          	movff	postinc2,??_sync_window+1
 29786   0170EC  C4DE F5F1          	movff	postinc2,??_sync_window+2
 29787   0170F0  C4DE F5F2          	movff	postinc2,??_sync_window+3
 29788   0170F4  EE20 F02C          	lfsr	2,44
 29789   0170F8  51ED               	movf	sync_window@fs& (0+255),w,b
 29790   0170FA  26D9               	addwf	fsr2l,f,c
 29791   0170FC  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29792   0170FE  22DA               	addwfc	fsr2h,f,c
 29793   017100  C4DE F5F3          	movff	postinc2,??_sync_window+4
 29794   017104  C4DE F5F4          	movff	postinc2,??_sync_window+5
 29795   017108  C4DE F5F5          	movff	postinc2,??_sync_window+6
 29796   01710C  C4DE F5F6          	movff	postinc2,??_sync_window+7
 29797   017110  51EF               	movf	??_sync_window& (0+255),w,b
 29798   017112  25F3               	addwf	(??_sync_window+4)& (0+255),w,b
 29799   017114  6FE4               	movwf	disk_write@sector& (0+255),b
 29800   017116  51F0               	movf	(??_sync_window+1)& (0+255),w,b
 29801   017118  21F4               	addwfc	(??_sync_window+5)& (0+255),w,b
 29802   01711A  6FE5               	movwf	(disk_write@sector+1)& (0+255),b
 29803   01711C  51F1               	movf	(??_sync_window+2)& (0+255),w,b
 29804   01711E  21F5               	addwfc	(??_sync_window+6)& (0+255),w,b
 29805   017120  6FE6               	movwf	(disk_write@sector+2)& (0+255),b
 29806   017122  51F2               	movf	(??_sync_window+3)& (0+255),w,b
 29807   017124  21F6               	addwfc	(??_sync_window+7)& (0+255),w,b
 29808   017126  6FE7               	movwf	(disk_write@sector+3)& (0+255),b
 29809   017128  0E00               	movlw	0
 29810   01712A  6FE9               	movwf	(disk_write@count+1)& (0+255),b
 29811   01712C  0E01               	movlw	1
 29812   01712E  6FE8               	movwf	disk_write@count& (0+255),b
 29813   017130  EE20 F001          	lfsr	2,1
 29814   017134  51ED               	movf	sync_window@fs& (0+255),w,b
 29815   017136  26D9               	addwf	fsr2l,f,c
 29816   017138  51EE               	movf	(sync_window@fs+1)& (0+255),w,b
 29817   01713A  22DA               	addwfc	fsr2h,f,c
 29818   01713C  50DF               	movf	indf2,w,c
 29819   01713E  EC0F  F0C9         	call	_disk_write
 29820   017142  D002               	goto	l202
 29821   017144                     l9779:
 29822                           
 29823                           ; BSR set to: 5
 29824                           ;fatfs/ff.c: 1069:    res = FR_DISK_ERR;
 29825   017144  0E01               	movlw	1
 29826   017146  6E5F               	movwf	sync_window@res^(0+1280),c
 29827   017148                     l202:
 29828                           
 29829                           ; BSR set to: 5
 29830                           ;fatfs/ff.c: 1072:  return res;
 29831   017148  505F               	movf	sync_window@res^(0+1280),w,c
 29832                           
 29833                           ; BSR set to: 5
 29834   01714A  0012               	return		;funcret
 29835   01714C                     __end_of_sync_window:
 29836                           	callstack 0
 29837                           
 29838 ;; *************** function _disk_write *****************
 29839 ;; Defined at:
 29840 ;;		line 130 in file "drivers/diskio.c"
 29841 ;; Parameters:    Size  Location     Type
 29842 ;;  pdrv            1    wreg     unsigned char 
 29843 ;;  buff            2  130[BANK5 ] PTR const unsigned char 
 29844 ;;		 -> files$buf(512), fs$win(512), fs(560), disk_buf(128), 
 29845 ;;		 -> files(3276), NULL(0), 
 29846 ;;  sector          4  132[BANK5 ] unsigned long 
 29847 ;;  count           2  136[BANK5 ] unsigned int 
 29848 ;; Auto vars:     Size  Location     Type
 29849 ;;  pdrv            1  138[BANK5 ] unsigned char 
 29850 ;;  i               2  139[BANK5 ] int 
 29851 ;; Return value:  Size  Location     Type
 29852 ;;                  1    wreg      enum E17647
 29853 ;; Registers used:
 29854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29855 ;; Tracked objects:
 29856 ;;		On entry : 3C/6
 29857 ;;		On exit  : 3F/5
 29858 ;;		Unchanged: 0/0
 29859 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29860 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29861 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29863 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29864 ;;Total ram usage:       11 bytes
 29865 ;; Hardware stack levels used: 1
 29866 ;; Hardware stack levels required when called: 10
 29867 ;; This function calls:
 29868 ;;		_SDCard_write512
 29869 ;;		_printf
 29870 ;;		_util_addrdump
 29871 ;; This function is called by:
 29872 ;;		_sync_window
 29873 ;;		_sync_fs
 29874 ;;		_dir_clear
 29875 ;;		_f_read
 29876 ;;		_f_write
 29877 ;;		_f_sync
 29878 ;;		_f_lseek
 29879 ;; This function uses a non-reentrant model
 29880 ;;
 29881                           
 29882                           	psect	text58
 29883   01921E                     __ptext58:
 29884                           	callstack 0
 29885   01921E                     _disk_write:
 29886                           	callstack 110
 29887                           
 29888                           ;drivers/diskio.c: 134:     for (int i = 0; i < count; i++) {
 29889                           
 29890                           ; BSR set to: 5
 29891                           ;incstack = 0
 29892                           ;drivers/diskio.c: 130: DRESULT disk_write(BYTE pdrv, const BYTE* buff, LBA_t sector, UI
      +                          NT count);drivers/diskio.c: 131: {;drivers/diskio.c: 132:     do { if (debug_flags & (1 
      +                          << 2)) printf ("disk_write: pdrv=%d, sector=%ld, count=%d\n\r", pdrv, sector, count); } 
      +                          while(0);
 29893   01921E  0E00               	movlw	0
 29894   019220  0105               	movlb	5	; () banked
 29895   019222  6FEC               	movwf	(disk_write@i+1)& (0+255),b
 29896   019224  0E00               	movlw	0
 29897   019226  6FEB               	movwf	disk_write@i& (0+255),b
 29898   019228  D033               	goto	l9731
 29899   01922A                     l9713:
 29900                           
 29901                           ; BSR set to: 5
 29902                           ;drivers/diskio.c: 135:         if (SDCard_write512(start_lba + sector, 0, buff, 512) !=
      +                           0) {
 29903   01922A  51E4               	movf	disk_write@sector& (0+255),w,b
 29904   01922C  0107               	movlb	7	; () banked
 29905   01922E  25D5               	addwf	_start_lba& (0+255),w,b
 29906   019230  0105               	movlb	5	; () banked
 29907   019232  6FC7               	movwf	SDCard_write512@addr& (0+255),b
 29908   019234  51E5               	movf	(disk_write@sector+1)& (0+255),w,b
 29909   019236  0107               	movlb	7	; () banked
 29910   019238  21D6               	addwfc	(_start_lba+1)& (0+255),w,b
 29911   01923A  0105               	movlb	5	; () banked
 29912   01923C  6FC8               	movwf	(SDCard_write512@addr+1)& (0+255),b
 29913   01923E  51E6               	movf	(disk_write@sector+2)& (0+255),w,b
 29914   019240  0107               	movlb	7	; () banked
 29915   019242  21D7               	addwfc	(_start_lba+2)& (0+255),w,b
 29916   019244  0105               	movlb	5	; () banked
 29917   019246  6FC9               	movwf	(SDCard_write512@addr+2)& (0+255),b
 29918   019248  51E7               	movf	(disk_write@sector+3)& (0+255),w,b
 29919   01924A  0107               	movlb	7	; () banked
 29920   01924C  21D8               	addwfc	(_start_lba+3)& (0+255),w,b
 29921   01924E  0105               	movlb	5	; () banked
 29922   019250  6FCA               	movwf	(SDCard_write512@addr+3)& (0+255),b
 29923   019252  0E00               	movlw	0
 29924   019254  6FCC               	movwf	(SDCard_write512@offs+1)& (0+255),b
 29925   019256  0E00               	movlw	0
 29926   019258  6FCB               	movwf	SDCard_write512@offs& (0+255),b
 29927   01925A  C5E2  F5CD         	movff	disk_write@buff,SDCard_write512@buf
 29928   01925E  C5E3  F5CE         	movff	disk_write@buff+1,SDCard_write512@buf+1
 29929   019262  0E02               	movlw	2
 29930   019264  6FD0               	movwf	(SDCard_write512@count+1)& (0+255),b
 29931   019266  0E00               	movlw	0
 29932   019268  6FCF               	movwf	SDCard_write512@count& (0+255),b
 29933   01926A  ECA5  F0AA         	call	_SDCard_write512	;wreg free
 29934   01926E  0105               	movlb	5	; () banked
 29935   019270  51C7               	movf	?_SDCard_write512& (0+255),w,b
 29936   019272  11C8               	iorwf	(?_SDCard_write512+1)& (0+255),w,b
 29937   019274  B4D8               	btfsc	status,2,c
 29938   019276  D002               	goto	l9725
 29939                           
 29940                           ; BSR set to: 5
 29941                           ;drivers/diskio.c: 137:             return RES_ERROR;
 29942   019278  0E01               	movlw	1
 29943   01927A  0012               	return	
 29944   01927C                     l9725:
 29945                           
 29946                           ; BSR set to: 5
 29947                           ;drivers/diskio.c: 142:         sector++;
 29948   01927C  0E01               	movlw	1
 29949   01927E  27E4               	addwf	disk_write@sector& (0+255),f,b
 29950   019280  0E00               	movlw	0
 29951   019282  23E5               	addwfc	(disk_write@sector+1)& (0+255),f,b
 29952   019284  23E6               	addwfc	(disk_write@sector+2)& (0+255),f,b
 29953   019286  23E7               	addwfc	(disk_write@sector+3)& (0+255),f,b
 29954                           
 29955                           ; BSR set to: 5
 29956                           ;drivers/diskio.c: 143:         buff += 512;
 29957   019288  0E02               	movlw	2
 29958   01928A  27E3               	addwf	(disk_write@buff+1)& (0+255),f,b
 29959                           
 29960                           ; BSR set to: 5
 29961                           ;drivers/diskio.c: 144:     }
 29962   01928C  4BEB               	infsnz	disk_write@i& (0+255),f,b
 29963   01928E  2BEC               	incf	(disk_write@i+1)& (0+255),f,b
 29964   019290                     l9731:
 29965                           
 29966                           ; BSR set to: 5
 29967   019290  51E8               	movf	disk_write@count& (0+255),w,b
 29968   019292  5DEB               	subwf	disk_write@i& (0+255),w,b
 29969   019294  51E9               	movf	(disk_write@count+1)& (0+255),w,b
 29970   019296  59EC               	subwfb	(disk_write@i+1)& (0+255),w,b
 29971   019298  A0D8               	btfss	status,0,c
 29972   01929A  D7C7               	goto	l9713
 29973                           
 29974                           ; BSR set to: 5
 29975                           ;drivers/diskio.c: 146:     return RES_OK;
 29976   01929C  0E00               	movlw	0
 29977                           
 29978                           ; BSR set to: 5
 29979   01929E  0012               	return		;funcret
 29980   0192A0                     __end_of_disk_write:
 29981                           	callstack 0
 29982                           
 29983 ;; *************** function _SDCard_write512 *****************
 29984 ;; Defined at:
 29985 ;;		line 237 in file "src/boards/../../drivers/SDCard.c"
 29986 ;; Parameters:    Size  Location     Type
 29987 ;;  addr            4  103[BANK5 ] unsigned long 
 29988 ;;  offs            2  107[BANK5 ] unsigned int 
 29989 ;;  buf             2  109[BANK5 ] PTR const void 
 29990 ;;		 -> files$buf(512), fs$win(512), fs(560), disk_buf(128), 
 29991 ;;		 -> files(3276), NULL(0), 
 29992 ;;  count           2  111[BANK5 ] unsigned int 
 29993 ;; Auto vars:     Size  Location     Type
 29994 ;;  i               2  119[BANK5 ] unsigned int 
 29995 ;;  i               2  117[BANK5 ] int 
 29996 ;;  crc             2  127[BANK5 ] unsigned short 
 29997 ;;  spi             2  125[BANK5 ] PTR struct SPI
 29998 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 29999 ;;  result          2  123[BANK5 ] int 
 30000 ;;  retry           2  121[BANK5 ] int 
 30001 ;;  response        1  129[BANK5 ] unsigned char 
 30002 ;; Return value:  Size  Location     Type
 30003 ;;                  2  103[BANK5 ] int 
 30004 ;; Registers used:
 30005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30006 ;; Tracked objects:
 30007 ;;		On entry : 3F/5
 30008 ;;		On exit  : 0/0
 30009 ;;		Unchanged: 0/0
 30010 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 30011 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30012 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30014 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30015 ;;Total ram usage:       27 bytes
 30016 ;; Hardware stack levels used: 1
 30017 ;; Hardware stack levels required when called: 9
 30018 ;; This function calls:
 30019 ;;		_SDCard_end_transaction
 30020 ;;		_SPI_SD_dummy_clocks
 30021 ;;		_SPI_SD_send
 30022 ;;		___SDCard_command_r1
 30023 ;;		___SDCard_crc16
 30024 ;;		___SDCard_wait_response
 30025 ;;		_printf
 30026 ;;		_util_addrdump
 30027 ;; This function is called by:
 30028 ;;		_disk_write
 30029 ;; This function uses a non-reentrant model
 30030 ;;
 30031                           
 30032                           	psect	text59
 30033   01554A                     __ptext59:
 30034                           	callstack 0
 30035   01554A                     _SDCard_write512:
 30036                           	callstack 110
 30037                           
 30038                           ; BSR set to: 5
 30039                           ;src/boards/../../drivers/SDCard.c: 237: int SDCard_write512(uint32_t addr, unsigned int
      +                           offs, const void *buf, unsigned int count);src/boards/../../drivers/SDCard.c: 238: {;sr
      +                          c/boards/../../drivers/SDCard.c: 239:     struct SPI *spi = ctx_.spi;
 30040                           
 30041                           ; BSR set to: 5
 30042                           ;incstack = 0
 30043   01554A  C706  F5DD         	movff	_ctx_,SDCard_write512@spi
 30044   01554E  C707  F5DE         	movff	_ctx_+1,SDCard_write512@spi+1
 30045                           
 30046                           ; BSR set to: 5
 30047                           ;src/boards/../../drivers/SDCard.c: 240:     int result;;src/boards/../../drivers/SDCard
      +                          .c: 241:     uint8_t response;;src/boards/../../drivers/SDCard.c: 242:     uint16_t crc;
      +                          ;src/boards/../../drivers/SDCard.c: 243:     int retry = 5;
 30048   015552  0E00               	movlw	0
 30049   015554  6FDA               	movwf	(SDCard_write512@retry+1)& (0+255),b
 30050   015556  0E05               	movlw	5
 30051   015558  6FD9               	movwf	SDCard_write512@retry& (0+255),b
 30052                           
 30053                           ; BSR set to: 5
 30054                           ;src/boards/../../drivers/SDCard.c: 250:     crc = 0;
 30055   01555A  0E00               	movlw	0
 30056   01555C  6FE0               	movwf	(SDCard_write512@crc+1)& (0+255),b
 30057   01555E  0E00               	movlw	0
 30058   015560  6FDF               	movwf	SDCard_write512@crc& (0+255),b
 30059                           
 30060                           ; BSR set to: 5
 30061                           ;src/boards/../../drivers/SDCard.c: 251:     response = 0xff;
 30062   015562  69E1               	setf	SDCard_write512@response& (0+255),b
 30063                           
 30064                           ; BSR set to: 5
 30065                           ;src/boards/../../drivers/SDCard.c: 252:     for (int i = 0; i < offs; i++) {
 30066   015564  0E00               	movlw	0
 30067   015566  6FD6               	movwf	(SDCard_write512@i+1)& (0+255),b
 30068   015568  0E00               	movlw	0
 30069   01556A  6FD5               	movwf	SDCard_write512@i& (0+255),b
 30070   01556C  D015               	goto	l9545
 30071   01556E                     l9541:
 30072                           
 30073                           ; BSR set to: 5
 30074                           ;src/boards/../../drivers/SDCard.c: 253:         crc = __SDCard_crc16(crc, &response, 1)
      +                          ;
 30075   01556E  C5DF  F501         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 30076   015572  C5E0  F502         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 30077   015576  0EE1               	movlw	low SDCard_write512@response
 30078   015578  6E03               	movwf	___SDCard_crc16@buf^(0+1280),c
 30079   01557A  0E05               	movlw	high SDCard_write512@response
 30080   01557C  6E04               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 30081   01557E  0E00               	movlw	0
 30082   015580  6E06               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 30083   015582  0E01               	movlw	1
 30084   015584  6E05               	movwf	___SDCard_crc16@count^(0+1280),c
 30085   015586  ECE7  F0C5         	call	___SDCard_crc16	;wreg free
 30086   01558A  C501  F5DF         	movff	?___SDCard_crc16,SDCard_write512@crc
 30087   01558E  C502  F5E0         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 30088                           
 30089                           ;src/boards/../../drivers/SDCard.c: 254:     }
 30090   015592  0105               	movlb	5	; () banked
 30091   015594  4BD5               	infsnz	SDCard_write512@i& (0+255),f,b
 30092   015596  2BD6               	incf	(SDCard_write512@i+1)& (0+255),f,b
 30093   015598                     l9545:
 30094                           
 30095                           ; BSR set to: 5
 30096   015598  51CB               	movf	SDCard_write512@offs& (0+255),w,b
 30097   01559A  5DD5               	subwf	SDCard_write512@i& (0+255),w,b
 30098   01559C  51CC               	movf	(SDCard_write512@offs+1)& (0+255),w,b
 30099   01559E  59D6               	subwfb	(SDCard_write512@i+1)& (0+255),w,b
 30100   0155A0  A0D8               	btfss	status,0,c
 30101   0155A2  D7E5               	goto	l9541
 30102                           
 30103                           ; BSR set to: 5
 30104                           ;src/boards/../../drivers/SDCard.c: 255:     crc = __SDCard_crc16(crc, buf, count);
 30105   0155A4  C5DF  F501         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 30106   0155A8  C5E0  F502         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 30107   0155AC  C5CD  F503         	movff	SDCard_write512@buf,___SDCard_crc16@buf
 30108   0155B0  C5CE  F504         	movff	SDCard_write512@buf+1,___SDCard_crc16@buf+1
 30109   0155B4  C5CF  F505         	movff	SDCard_write512@count,___SDCard_crc16@count
 30110   0155B8  C5D0  F506         	movff	SDCard_write512@count+1,___SDCard_crc16@count+1
 30111   0155BC  ECE7  F0C5         	call	___SDCard_crc16	;wreg free
 30112   0155C0  C501  F5DF         	movff	?___SDCard_crc16,SDCard_write512@crc
 30113   0155C4  C502  F5E0         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 30114                           
 30115                           ;src/boards/../../drivers/SDCard.c: 256:     for (unsigned int i = 0; i < 512 - offs - c
      +                          ount; i++) {
 30116   0155C8  0E00               	movlw	0
 30117   0155CA  0105               	movlb	5	; () banked
 30118   0155CC  6FD8               	movwf	(SDCard_write512@i_2787+1)& (0+255),b
 30119   0155CE  0E00               	movlw	0
 30120   0155D0  6FD7               	movwf	SDCard_write512@i_2787& (0+255),b
 30121   0155D2  D015               	goto	l9555
 30122   0155D4                     l9551:
 30123                           
 30124                           ; BSR set to: 5
 30125                           ;src/boards/../../drivers/SDCard.c: 257:         crc = __SDCard_crc16(crc, &response, 1)
      +                          ;
 30126   0155D4  C5DF  F501         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 30127   0155D8  C5E0  F502         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 30128   0155DC  0EE1               	movlw	low SDCard_write512@response
 30129   0155DE  6E03               	movwf	___SDCard_crc16@buf^(0+1280),c
 30130   0155E0  0E05               	movlw	high SDCard_write512@response
 30131   0155E2  6E04               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 30132   0155E4  0E00               	movlw	0
 30133   0155E6  6E06               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 30134   0155E8  0E01               	movlw	1
 30135   0155EA  6E05               	movwf	___SDCard_crc16@count^(0+1280),c
 30136   0155EC  ECE7  F0C5         	call	___SDCard_crc16	;wreg free
 30137   0155F0  C501  F5DF         	movff	?___SDCard_crc16,SDCard_write512@crc
 30138   0155F4  C502  F5E0         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 30139                           
 30140                           ;src/boards/../../drivers/SDCard.c: 258:     }
 30141   0155F8  0105               	movlb	5	; () banked
 30142   0155FA  4BD7               	infsnz	SDCard_write512@i_2787& (0+255),f,b
 30143   0155FC  2BD8               	incf	(SDCard_write512@i_2787+1)& (0+255),f,b
 30144   0155FE                     l9555:
 30145                           
 30146                           ; BSR set to: 5
 30147   0155FE  C5CB  F5D1         	movff	SDCard_write512@offs,??_SDCard_write512
 30148   015602  C5CC  F5D2         	movff	SDCard_write512@offs+1,??_SDCard_write512+1
 30149   015606  1FD1               	comf	??_SDCard_write512& (0+255),f,b
 30150   015608  1FD2               	comf	(??_SDCard_write512+1)& (0+255),f,b
 30151   01560A  4BD1               	infsnz	??_SDCard_write512& (0+255),f,b
 30152   01560C  2BD2               	incf	(??_SDCard_write512+1)& (0+255),f,b
 30153   01560E  51CF               	movf	SDCard_write512@count& (0+255),w,b
 30154   015610  5FD1               	subwf	??_SDCard_write512& (0+255),f,b
 30155   015612  51D0               	movf	(SDCard_write512@count+1)& (0+255),w,b
 30156   015614  5BD2               	subwfb	(??_SDCard_write512+1)& (0+255),f,b
 30157   015616  0E00               	movlw	0
 30158   015618  25D1               	addwf	??_SDCard_write512& (0+255),w,b
 30159   01561A  6FD3               	movwf	(??_SDCard_write512+2)& (0+255),b
 30160   01561C  0E02               	movlw	2
 30161   01561E  21D2               	addwfc	(??_SDCard_write512+1)& (0+255),w,b
 30162   015620  6FD4               	movwf	(??_SDCard_write512+3)& (0+255),b
 30163   015622  51D3               	movf	(??_SDCard_write512+2)& (0+255),w,b
 30164   015624  5DD7               	subwf	SDCard_write512@i_2787& (0+255),w,b
 30165   015626  51D4               	movf	(??_SDCard_write512+3)& (0+255),w,b
 30166   015628  59D8               	subwfb	(SDCard_write512@i_2787+1)& (0+255),w,b
 30167   01562A  A0D8               	btfss	status,0,c
 30168   01562C  D7D3               	goto	l9551
 30169   01562E                     u11030:
 30170                           
 30171                           ;src/boards/../../drivers/SDCard.c: 261:     result = __SDCard_command_r1(24, addr, &res
      +                          ponse);
 30172   01562E  C5C7  F518         	movff	SDCard_write512@addr,___SDCard_command_r1@argument
 30173   015632  C5C8  F519         	movff	SDCard_write512@addr+1,___SDCard_command_r1@argument+1
 30174   015636  C5C9  F51A         	movff	SDCard_write512@addr+2,___SDCard_command_r1@argument+2
 30175   01563A  C5CA  F51B         	movff	SDCard_write512@addr+3,___SDCard_command_r1@argument+3
 30176   01563E  0EE1               	movlw	low SDCard_write512@response
 30177   015640  6E1C               	movwf	___SDCard_command_r1@r1^(0+1280),c
 30178   015642  0E05               	movlw	high SDCard_write512@response
 30179   015644  6E1D               	movwf	(___SDCard_command_r1@r1+1)^(0+1280),c
 30180   015646  0E18               	movlw	24
 30181   015648  EC40  F0C7         	call	___SDCard_command_r1
 30182   01564C  C518  F5DB         	movff	?___SDCard_command_r1,SDCard_write512@result
 30183   015650  C519  F5DC         	movff	?___SDCard_command_r1+1,SDCard_write512@result+1
 30184                           
 30185                           ;src/boards/../../drivers/SDCard.c: 262:     if (result != 0) {
 30186   015654  0105               	movlb	5	; () banked
 30187   015656  51DB               	movf	SDCard_write512@result& (0+255),w,b
 30188   015658  11DC               	iorwf	(SDCard_write512@result+1)& (0+255),w,b
 30189   01565A  A4D8               	btfss	status,2,c
 30190   01565C  D0AA               	goto	l9619
 30191                           
 30192                           ; BSR set to: 5
 30193                           ;src/boards/../../drivers/SDCard.c: 265:     if (response != 0) {
 30194   01565E  51E1               	movf	SDCard_write512@response& (0+255),w,b
 30195   015660  B4D8               	btfsc	status,2,c
 30196   015662  D004               	goto	l9567
 30197   015664                     u11050:
 30198                           
 30199                           ; BSR set to: 5
 30200                           ;src/boards/../../drivers/SDCard.c: 266:         result = 3;
 30201   015664  0E00               	movlw	0
 30202   015666  6FDC               	movwf	(SDCard_write512@result+1)& (0+255),b
 30203   015668  0E03               	movlw	3
 30204   01566A  D0A2               	goto	L16
 30205   01566C                     l9567:
 30206                           
 30207                           ; BSR set to: 5
 30208                           ;src/boards/../../drivers/SDCard.c: 270:     response = 0xfe;
 30209   01566C  0EFE               	movlw	254
 30210   01566E  6FE1               	movwf	SDCard_write512@response& (0+255),b
 30211                           
 30212                           ; BSR set to: 5
 30213                           ;src/boards/../../drivers/SDCard.c: 271:     SPI_SD_send(spi, &response, 1);
 30214   015670  C5DD  F501         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 30215   015674  C5DE  F502         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 30216   015678  0EE1               	movlw	low SDCard_write512@response
 30217   01567A  6E03               	movwf	SPI_SD_send@buf^(0+1280),c
 30218   01567C  0E05               	movlw	high SDCard_write512@response
 30219   01567E  6E04               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 30220   015680  0E00               	movlw	0
 30221   015682  6E06               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 30222   015684  0E01               	movlw	1
 30223   015686  6E05               	movwf	SPI_SD_send@count^(0+1280),c
 30224   015688  EC9A  F0CB         	call	_SPI_SD_send	;wreg free
 30225                           
 30226                           ;src/boards/../../drivers/SDCard.c: 272:     SPI_SD_dummy_clocks(spi, offs);
 30227   01568C  C5DD  F50B         	movff	SDCard_write512@spi,SPI_SD_dummy_clocks@ctx_
 30228   015690  C5DE  F50C         	movff	SDCard_write512@spi+1,SPI_SD_dummy_clocks@ctx_+1
 30229   015694  C5CB  F50D         	movff	SDCard_write512@offs,SPI_SD_dummy_clocks@clocks
 30230   015698  C5CC  F50E         	movff	SDCard_write512@offs+1,SPI_SD_dummy_clocks@clocks+1
 30231   01569C  EC84  F0CC         	call	_SPI_SD_dummy_clocks	;wreg free
 30232                           
 30233                           ;src/boards/../../drivers/SDCard.c: 273:     SPI_SD_send(spi, buf, count);
 30234   0156A0  C5DD  F501         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 30235   0156A4  C5DE  F502         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 30236   0156A8  C5CD  F503         	movff	SDCard_write512@buf,SPI_SD_send@buf
 30237   0156AC  C5CE  F504         	movff	SDCard_write512@buf+1,SPI_SD_send@buf+1
 30238   0156B0  C5CF  F505         	movff	SDCard_write512@count,SPI_SD_send@count
 30239   0156B4  C5D0  F506         	movff	SDCard_write512@count+1,SPI_SD_send@count+1
 30240   0156B8  EC9A  F0CB         	call	_SPI_SD_send	;wreg free
 30241                           
 30242                           ;src/boards/../../drivers/SDCard.c: 274:     SPI_SD_dummy_clocks(spi, 512 - offs - count
      +                          );
 30243   0156BC  C5DD  F50B         	movff	SDCard_write512@spi,SPI_SD_dummy_clocks@ctx_
 30244   0156C0  C5DE  F50C         	movff	SDCard_write512@spi+1,SPI_SD_dummy_clocks@ctx_+1
 30245   0156C4  C5CB  F5D1         	movff	SDCard_write512@offs,??_SDCard_write512
 30246   0156C8  C5CC  F5D2         	movff	SDCard_write512@offs+1,??_SDCard_write512+1
 30247   0156CC  0105               	movlb	5	; () banked
 30248   0156CE  1FD1               	comf	??_SDCard_write512& (0+255),f,b
 30249   0156D0  1FD2               	comf	(??_SDCard_write512+1)& (0+255),f,b
 30250   0156D2  4BD1               	infsnz	??_SDCard_write512& (0+255),f,b
 30251   0156D4  2BD2               	incf	(??_SDCard_write512+1)& (0+255),f,b
 30252   0156D6  51CF               	movf	SDCard_write512@count& (0+255),w,b
 30253   0156D8  5FD1               	subwf	??_SDCard_write512& (0+255),f,b
 30254   0156DA  51D0               	movf	(SDCard_write512@count+1)& (0+255),w,b
 30255   0156DC  5BD2               	subwfb	(??_SDCard_write512+1)& (0+255),f,b
 30256   0156DE  0E00               	movlw	0
 30257   0156E0  25D1               	addwf	??_SDCard_write512& (0+255),w,b
 30258   0156E2  6E0D               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 30259   0156E4  0E02               	movlw	2
 30260   0156E6  21D2               	addwfc	(??_SDCard_write512+1)& (0+255),w,b
 30261   0156E8  6E0E               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 30262   0156EA  EC84  F0CC         	call	_SPI_SD_dummy_clocks	;wreg free
 30263                           
 30264                           ;src/boards/../../drivers/SDCard.c: 275:     response = (crc >> 8) & 0xff;
 30265   0156EE  C5E0  F5E1         	movff	SDCard_write512@crc+1,SDCard_write512@response
 30266                           
 30267                           ;src/boards/../../drivers/SDCard.c: 276:     SPI_SD_send(spi, &response, 1);
 30268   0156F2  C5DD  F501         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 30269   0156F6  C5DE  F502         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 30270   0156FA  0EE1               	movlw	low SDCard_write512@response
 30271   0156FC  6E03               	movwf	SPI_SD_send@buf^(0+1280),c
 30272   0156FE  0E05               	movlw	high SDCard_write512@response
 30273   015700  6E04               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 30274   015702  0E00               	movlw	0
 30275   015704  6E06               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 30276   015706  0E01               	movlw	1
 30277   015708  6E05               	movwf	SPI_SD_send@count^(0+1280),c
 30278   01570A  EC9A  F0CB         	call	_SPI_SD_send	;wreg free
 30279                           
 30280                           ;src/boards/../../drivers/SDCard.c: 277:     response = crc & 0xff;
 30281   01570E  C5DF  F5E1         	movff	SDCard_write512@crc,SDCard_write512@response
 30282                           
 30283                           ;src/boards/../../drivers/SDCard.c: 278:     SPI_SD_send(spi, &response, 1);
 30284   015712  C5DD  F501         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 30285   015716  C5DE  F502         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 30286   01571A  0EE1               	movlw	low SDCard_write512@response
 30287   01571C  6E03               	movwf	SPI_SD_send@buf^(0+1280),c
 30288   01571E  0E05               	movlw	high SDCard_write512@response
 30289   015720  6E04               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 30290   015722  0E00               	movlw	0
 30291   015724  6E06               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 30292   015726  0E01               	movlw	1
 30293   015728  6E05               	movwf	SPI_SD_send@count^(0+1280),c
 30294   01572A  EC9A  F0CB         	call	_SPI_SD_send	;wreg free
 30295                           
 30296                           ;src/boards/../../drivers/SDCard.c: 280:     response = __SDCard_wait_response(0xff, 300
      +                          0);
 30297   01572E  0E0B               	movlw	11
 30298   015730  6E13               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 30299   015732  0EB8               	movlw	184
 30300   015734  6E12               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 30301   015736  0EFF               	movlw	255
 30302   015738  ECB7  F0CE         	call	___SDCard_wait_response
 30303   01573C  0105               	movlb	5	; () banked
 30304   01573E  6FE1               	movwf	SDCard_write512@response& (0+255),b
 30305                           
 30306                           ; BSR set to: 5
 30307                           ;src/boards/../../drivers/SDCard.c: 281:     if (response == 0xff) {
 30308   015740  29E1               	incf	SDCard_write512@response& (0+255),w,b
 30309   015742  A4D8               	btfss	status,2,c
 30310   015744  D004               	goto	l9593
 30311   015746                     u11060:
 30312                           
 30313                           ; BSR set to: 5
 30314                           ;src/boards/../../drivers/SDCard.c: 283:         result = 1;
 30315   015746  0E00               	movlw	0
 30316   015748  6FDC               	movwf	(SDCard_write512@result+1)& (0+255),b
 30317   01574A  0E01               	movlw	1
 30318   01574C  D031               	goto	L16
 30319   01574E                     l9593:
 30320                           
 30321                           ; BSR set to: 5
 30322                           ;src/boards/../../drivers/SDCard.c: 286:     if ((response & 0x1f) != 0x05) {
 30323   01574E  51E1               	movf	SDCard_write512@response& (0+255),w,b
 30324   015750  0B1F               	andlw	31
 30325   015752  0A05               	xorlw	5
 30326   015754  B4D8               	btfsc	status,2,c
 30327   015756  D01D               	goto	l9609
 30328                           
 30329                           ; BSR set to: 5
 30330                           ;src/boards/../../drivers/SDCard.c: 288:         if ((response & 0x1f) == 0x0b) {
 30331   015758  51E1               	movf	SDCard_write512@response& (0+255),w,b
 30332   01575A  0B1F               	andlw	31
 30333   01575C  0A0B               	xorlw	11
 30334   01575E  A4D8               	btfss	status,2,c
 30335   015760  D781               	goto	u11050
 30336                           
 30337                           ; BSR set to: 5
 30338                           ;src/boards/../../drivers/SDCard.c: 290:             if (--retry < 1) {
 30339   015762  07D9               	decf	SDCard_write512@retry& (0+255),f,b
 30340   015764  A0D8               	btfss	status,0,c
 30341   015766  07DA               	decf	(SDCard_write512@retry+1)& (0+255),f,b
 30342   015768  BFDA               	btfsc	(SDCard_write512@retry+1)& (0+255),7,b
 30343   01576A  D005               	goto	u11090
 30344   01576C  51DA               	movf	(SDCard_write512@retry+1)& (0+255),w,b
 30345   01576E  E107               	bnz	l9605
 30346   015770  05D9               	decf	SDCard_write512@retry& (0+255),w,b
 30347   015772  B0D8               	btfsc	status,0,c
 30348   015774  D004               	goto	l9605
 30349   015776                     u11090:
 30350                           
 30351                           ; BSR set to: 5
 30352                           ;src/boards/../../drivers/SDCard.c: 291:                 result = 4;
 30353   015776  0E00               	movlw	0
 30354   015778  6FDC               	movwf	(SDCard_write512@result+1)& (0+255),b
 30355   01577A  0E04               	movlw	4
 30356   01577C  D019               	goto	L16
 30357   01577E                     l9605:
 30358                           
 30359                           ; BSR set to: 5
 30360                           ;src/boards/../../drivers/SDCard.c: 294:             __SDCard_wait_response(0xff, 30000)
      +                          ;
 30361   01577E  0E75               	movlw	117
 30362   015780  6E13               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 30363   015782  0E30               	movlw	48
 30364   015784  6E12               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 30365   015786  0EFF               	movlw	255
 30366   015788  ECB7  F0CE         	call	___SDCard_wait_response
 30367                           
 30368                           ;src/boards/../../drivers/SDCard.c: 295:             SDCard_end_transaction();
 30369   01578C  EC12  F0CF         	call	_SDCard_end_transaction	;wreg free
 30370                           
 30371                           ;src/boards/../../drivers/SDCard.c: 296:             goto retry;
 30372   015790  D74E               	goto	u11030
 30373   015792                     l9609:
 30374                           
 30375                           ; BSR set to: 5
 30376                           ;src/boards/../../drivers/SDCard.c: 302:     response = __SDCard_wait_response(0x00, 300
      +                          00);
 30377   015792  0E75               	movlw	117
 30378   015794  6E13               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 30379   015796  0E30               	movlw	48
 30380   015798  6E12               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 30381   01579A  0E00               	movlw	0
 30382   01579C  ECB7  F0CE         	call	___SDCard_wait_response
 30383   0157A0  0105               	movlb	5	; () banked
 30384   0157A2  6FE1               	movwf	SDCard_write512@response& (0+255),b
 30385                           
 30386                           ; BSR set to: 5
 30387                           ;src/boards/../../drivers/SDCard.c: 303:     if (response == 0x00) {
 30388   0157A4  51E1               	movf	SDCard_write512@response& (0+255),w,b
 30389   0157A6  B4D8               	btfsc	status,2,c
 30390   0157A8  D7CE               	goto	u11060
 30391                           
 30392                           ; BSR set to: 5
 30393                           ;src/boards/../../drivers/SDCard.c: 309:     result = 0;
 30394   0157AA  0E00               	movlw	0
 30395   0157AC  6FDC               	movwf	(SDCard_write512@result+1)& (0+255),b
 30396   0157AE  0E00               	movlw	0
 30397   0157B0                     L16:
 30398   0157B0  6FDB               	movwf	SDCard_write512@result& (0+255),b
 30399   0157B2                     l9619:
 30400                           
 30401                           ; BSR set to: 5
 30402                           ;src/boards/../../drivers/SDCard.c: 312:     SDCard_end_transaction();
 30403   0157B2  EC12  F0CF         	call	_SDCard_end_transaction	;wreg free
 30404                           
 30405                           ;src/boards/../../drivers/SDCard.c: 313:     return result;
 30406   0157B6  C5DB  F5C7         	movff	SDCard_write512@result,?_SDCard_write512
 30407   0157BA  C5DC  F5C8         	movff	SDCard_write512@result+1,?_SDCard_write512+1
 30408   0157BE  0012               	return		;funcret
 30409   0157C0                     __end_of_SDCard_write512:
 30410                           	callstack 0
 30411                           
 30412 ;; *************** function _disk_read *****************
 30413 ;; Defined at:
 30414 ;;		line 111 in file "drivers/diskio.c"
 30415 ;; Parameters:    Size  Location     Type
 30416 ;;  pdrv            1    wreg     unsigned char 
 30417 ;;  buff            2  132[BANK5 ] PTR unsigned char 
 30418 ;;		 -> fs(560), disk_buf(128), files(3276), NULL(0), 
 30419 ;;  sector          4  134[BANK5 ] unsigned long 
 30420 ;;  count           2  138[BANK5 ] unsigned int 
 30421 ;; Auto vars:     Size  Location     Type
 30422 ;;  pdrv            1  140[BANK5 ] unsigned char 
 30423 ;;  i               2  141[BANK5 ] int 
 30424 ;; Return value:  Size  Location     Type
 30425 ;;                  1    wreg      enum E17647
 30426 ;; Registers used:
 30427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30428 ;; Tracked objects:
 30429 ;;		On entry : 3F/6
 30430 ;;		On exit  : 3F/5
 30431 ;;		Unchanged: 0/0
 30432 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 30433 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30434 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30436 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30437 ;;Total ram usage:       11 bytes
 30438 ;; Hardware stack levels used: 1
 30439 ;; Hardware stack levels required when called: 10
 30440 ;; This function calls:
 30441 ;;		_SDCard_read512
 30442 ;;		_printf
 30443 ;;		_util_addrdump
 30444 ;; This function is called by:
 30445 ;;		_move_window
 30446 ;;		_f_open
 30447 ;;		_f_read
 30448 ;;		_f_write
 30449 ;;		_f_lseek
 30450 ;; This function uses a non-reentrant model
 30451 ;;
 30452                           
 30453                           	psect	text60
 30454   0192A0                     __ptext60:
 30455                           	callstack 0
 30456   0192A0                     _disk_read:
 30457                           	callstack 111
 30458                           
 30459                           ; BSR set to: 6
 30460                           ;drivers/diskio.c: 115:     for (int i = 0; i < count; i++) {
 30461                           
 30462                           ; BSR set to: 6
 30463                           
 30464                           ;incstack = 0
 30465                           ;drivers/diskio.c: 111: DRESULT disk_read(BYTE pdrv, BYTE* buff, LBA_t sector, UINT coun
      +                          t);drivers/diskio.c: 112: {;drivers/diskio.c: 113:     do { if (debug_flags & (1 << 1)) 
      +                          printf ("disk_read:  pdrv=%d, sector=%ld, count=%d\n\r", pdrv, sector, count); } while(0
      +                          );
 30466   0192A0  0E00               	movlw	0
 30467   0192A2  0105               	movlb	5	; () banked
 30468   0192A4  6FEE               	movwf	(disk_read@i+1)& (0+255),b
 30469   0192A6  0E00               	movlw	0
 30470   0192A8  6FED               	movwf	disk_read@i& (0+255),b
 30471   0192AA  D033               	goto	l9759
 30472   0192AC                     l9741:
 30473                           
 30474                           ; BSR set to: 5
 30475                           ;drivers/diskio.c: 116:         if (SDCard_read512(start_lba + sector, 0, buff, 512) != 
      +                          0) {
 30476   0192AC  51E6               	movf	disk_read@sector& (0+255),w,b
 30477   0192AE  0107               	movlb	7	; () banked
 30478   0192B0  25D5               	addwf	_start_lba& (0+255),w,b
 30479   0192B2  0105               	movlb	5	; () banked
 30480   0192B4  6FC7               	movwf	SDCard_read512@addr& (0+255),b
 30481   0192B6  51E7               	movf	(disk_read@sector+1)& (0+255),w,b
 30482   0192B8  0107               	movlb	7	; () banked
 30483   0192BA  21D6               	addwfc	(_start_lba+1)& (0+255),w,b
 30484   0192BC  0105               	movlb	5	; () banked
 30485   0192BE  6FC8               	movwf	(SDCard_read512@addr+1)& (0+255),b
 30486   0192C0  51E8               	movf	(disk_read@sector+2)& (0+255),w,b
 30487   0192C2  0107               	movlb	7	; () banked
 30488   0192C4  21D7               	addwfc	(_start_lba+2)& (0+255),w,b
 30489   0192C6  0105               	movlb	5	; () banked
 30490   0192C8  6FC9               	movwf	(SDCard_read512@addr+2)& (0+255),b
 30491   0192CA  51E9               	movf	(disk_read@sector+3)& (0+255),w,b
 30492   0192CC  0107               	movlb	7	; () banked
 30493   0192CE  21D8               	addwfc	(_start_lba+3)& (0+255),w,b
 30494   0192D0  0105               	movlb	5	; () banked
 30495   0192D2  6FCA               	movwf	(SDCard_read512@addr+3)& (0+255),b
 30496   0192D4  0E00               	movlw	0
 30497   0192D6  6FCC               	movwf	(SDCard_read512@offs+1)& (0+255),b
 30498   0192D8  0E00               	movlw	0
 30499   0192DA  6FCB               	movwf	SDCard_read512@offs& (0+255),b
 30500   0192DC  C5E4  F5CD         	movff	disk_read@buff,SDCard_read512@buf
 30501   0192E0  C5E5  F5CE         	movff	disk_read@buff+1,SDCard_read512@buf+1
 30502   0192E4  0E02               	movlw	2
 30503   0192E6  6FD0               	movwf	(SDCard_read512@count+1)& (0+255),b
 30504   0192E8  0E00               	movlw	0
 30505   0192EA  6FCF               	movwf	SDCard_read512@count& (0+255),b
 30506   0192EC  EC18  F0AF         	call	_SDCard_read512	;wreg free
 30507   0192F0  0105               	movlb	5	; () banked
 30508   0192F2  51C7               	movf	?_SDCard_read512& (0+255),w,b
 30509   0192F4  11C8               	iorwf	(?_SDCard_read512+1)& (0+255),w,b
 30510   0192F6  B4D8               	btfsc	status,2,c
 30511   0192F8  D002               	goto	l9753
 30512                           
 30513                           ; BSR set to: 5
 30514                           ;drivers/diskio.c: 118:             return RES_ERROR;
 30515   0192FA  0E01               	movlw	1
 30516   0192FC  0012               	return	
 30517   0192FE                     l9753:
 30518                           
 30519                           ; BSR set to: 5
 30520                           ;drivers/diskio.c: 123:         sector++;
 30521   0192FE  0E01               	movlw	1
 30522   019300  27E6               	addwf	disk_read@sector& (0+255),f,b
 30523   019302  0E00               	movlw	0
 30524   019304  23E7               	addwfc	(disk_read@sector+1)& (0+255),f,b
 30525   019306  23E8               	addwfc	(disk_read@sector+2)& (0+255),f,b
 30526   019308  23E9               	addwfc	(disk_read@sector+3)& (0+255),f,b
 30527                           
 30528                           ; BSR set to: 5
 30529                           ;drivers/diskio.c: 124:         buff += 512;
 30530   01930A  0E02               	movlw	2
 30531   01930C  27E5               	addwf	(disk_read@buff+1)& (0+255),f,b
 30532                           
 30533                           ; BSR set to: 5
 30534                           ;drivers/diskio.c: 125:     }
 30535   01930E  4BED               	infsnz	disk_read@i& (0+255),f,b
 30536   019310  2BEE               	incf	(disk_read@i+1)& (0+255),f,b
 30537   019312                     l9759:
 30538                           
 30539                           ; BSR set to: 5
 30540   019312  51EA               	movf	disk_read@count& (0+255),w,b
 30541   019314  5DED               	subwf	disk_read@i& (0+255),w,b
 30542   019316  51EB               	movf	(disk_read@count+1)& (0+255),w,b
 30543   019318  59EE               	subwfb	(disk_read@i+1)& (0+255),w,b
 30544   01931A  A0D8               	btfss	status,0,c
 30545   01931C  D7C7               	goto	l9741
 30546                           
 30547                           ; BSR set to: 5
 30548                           ;drivers/diskio.c: 127:     return RES_OK;
 30549   01931E  0E00               	movlw	0
 30550                           
 30551                           ; BSR set to: 5
 30552   019320  0012               	return		;funcret
 30553   019322                     __end_of_disk_read:
 30554                           	callstack 0
 30555                           
 30556 ;; *************** function _SDCard_read512 *****************
 30557 ;; Defined at:
 30558 ;;		line 169 in file "src/boards/../../drivers/SDCard.c"
 30559 ;; Parameters:    Size  Location     Type
 30560 ;;  addr            4  103[BANK5 ] unsigned long 
 30561 ;;  offs            2  107[BANK5 ] unsigned int 
 30562 ;;  buf             2  109[BANK5 ] PTR void 
 30563 ;;		 -> fs(560), disk_buf(128), files(3276), NULL(0), 
 30564 ;;		 -> disk_initialize@buf(128), 
 30565 ;;  count           2  111[BANK5 ] unsigned int 
 30566 ;; Auto vars:     Size  Location     Type
 30567 ;;  i               2  119[BANK5 ] unsigned int 
 30568 ;;  i               2  117[BANK5 ] int 
 30569 ;;  crc             2  129[BANK5 ] unsigned short 
 30570 ;;  spi             2  127[BANK5 ] PTR struct SPI
 30571 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 30572 ;;  result          2  125[BANK5 ] int 
 30573 ;;  resp_crc        2  123[BANK5 ] unsigned short 
 30574 ;;  retry           2  121[BANK5 ] int 
 30575 ;;  response        1  131[BANK5 ] unsigned char 
 30576 ;; Return value:  Size  Location     Type
 30577 ;;                  2  103[BANK5 ] int 
 30578 ;; Registers used:
 30579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30580 ;; Tracked objects:
 30581 ;;		On entry : 3F/5
 30582 ;;		On exit  : 0/0
 30583 ;;		Unchanged: 0/0
 30584 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 30585 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30586 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30587 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30588 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30589 ;;Total ram usage:       29 bytes
 30590 ;; Hardware stack levels used: 1
 30591 ;; Hardware stack levels required when called: 9
 30592 ;; This function calls:
 30593 ;;		_SDCard_end_transaction
 30594 ;;		_SPI_SD_receive
 30595 ;;		_SPI_SD_receive_byte
 30596 ;;		___SDCard_command_r1
 30597 ;;		___SDCard_crc16
 30598 ;;		___SDCard_wait_response
 30599 ;;		_printf
 30600 ;;		_util_addrdump
 30601 ;; This function is called by:
 30602 ;;		_disk_initialize
 30603 ;;		_disk_read
 30604 ;; This function uses a non-reentrant model
 30605 ;;
 30606                           
 30607                           	psect	text61
 30608   015E30                     __ptext61:
 30609                           	callstack 0
 30610   015E30                     _SDCard_read512:
 30611                           	callstack 111
 30612                           
 30613                           ; BSR set to: 5
 30614                           ;src/boards/../../drivers/SDCard.c: 169: int SDCard_read512(uint32_t addr, unsigned int 
      +                          offs, void *buf, unsigned int count);src/boards/../../drivers/SDCard.c: 170: {;src/board
      +                          s/../../drivers/SDCard.c: 171:     struct SPI *spi = ctx_.spi;
 30615                           
 30616                           ; BSR set to: 5
 30617                           ;incstack = 0
 30618   015E30  C706  F5DF         	movff	_ctx_,SDCard_read512@spi
 30619   015E34  C707  F5E0         	movff	_ctx_+1,SDCard_read512@spi+1
 30620                           
 30621                           ; BSR set to: 5
 30622                           ;src/boards/../../drivers/SDCard.c: 172:     int result;;src/boards/../../drivers/SDCard
      +                          .c: 173:     uint8_t response;;src/boards/../../drivers/SDCard.c: 174:     uint16_t crc,
      +                           resp_crc;;src/boards/../../drivers/SDCard.c: 175:     int retry = 5;
 30623   015E38  0E00               	movlw	0
 30624   015E3A  6FDA               	movwf	(SDCard_read512@retry+1)& (0+255),b
 30625   015E3C  0E05               	movlw	5
 30626   015E3E  6FD9               	movwf	SDCard_read512@retry& (0+255),b
 30627   015E40                     l9631:
 30628                           
 30629                           ;src/boards/../../drivers/SDCard.c: 180:     result = __SDCard_command_r1(17, addr, &res
      +                          ponse);
 30630   015E40  C5C7  F518         	movff	SDCard_read512@addr,___SDCard_command_r1@argument
 30631   015E44  C5C8  F519         	movff	SDCard_read512@addr+1,___SDCard_command_r1@argument+1
 30632   015E48  C5C9  F51A         	movff	SDCard_read512@addr+2,___SDCard_command_r1@argument+2
 30633   015E4C  C5CA  F51B         	movff	SDCard_read512@addr+3,___SDCard_command_r1@argument+3
 30634   015E50  0EE3               	movlw	low SDCard_read512@response
 30635   015E52  6E1C               	movwf	___SDCard_command_r1@r1^(0+1280),c
 30636   015E54  0E05               	movlw	high SDCard_read512@response
 30637   015E56  6E1D               	movwf	(___SDCard_command_r1@r1+1)^(0+1280),c
 30638   015E58  0E11               	movlw	17
 30639   015E5A  EC40  F0C7         	call	___SDCard_command_r1
 30640   015E5E  C518  F5DD         	movff	?___SDCard_command_r1,SDCard_read512@result
 30641   015E62  C519  F5DE         	movff	?___SDCard_command_r1+1,SDCard_read512@result+1
 30642                           
 30643                           ;src/boards/../../drivers/SDCard.c: 181:     if (result != 0) {
 30644   015E66  0105               	movlb	5	; () banked
 30645   015E68  51DD               	movf	SDCard_read512@result& (0+255),w,b
 30646   015E6A  11DE               	iorwf	(SDCard_read512@result+1)& (0+255),w,b
 30647   015E6C  A4D8               	btfss	status,2,c
 30648   015E6E  D0DF               	goto	l9703
 30649                           
 30650                           ; BSR set to: 5
 30651                           ;src/boards/../../drivers/SDCard.c: 184:     if (response != 0) {
 30652   015E70  51E3               	movf	SDCard_read512@response& (0+255),w,b
 30653   015E72  B4D8               	btfsc	status,2,c
 30654   015E74  D004               	goto	l9641
 30655   015E76                     u11120:
 30656                           
 30657                           ; BSR set to: 5
 30658                           ;src/boards/../../drivers/SDCard.c: 185:         result = 3;
 30659   015E76  0E00               	movlw	0
 30660   015E78  6FDE               	movwf	(SDCard_read512@result+1)& (0+255),b
 30661   015E7A  0E03               	movlw	3
 30662   015E7C  D0D7               	goto	L17
 30663   015E7E                     l9641:
 30664                           
 30665                           ; BSR set to: 5
 30666                           ;src/boards/../../drivers/SDCard.c: 189:     response = __SDCard_wait_response(0xff, 300
      +                          0);
 30667   015E7E  0E0B               	movlw	11
 30668   015E80  6E13               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 30669   015E82  0EB8               	movlw	184
 30670   015E84  6E12               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 30671   015E86  0EFF               	movlw	255
 30672   015E88  ECB7  F0CE         	call	___SDCard_wait_response
 30673   015E8C  0105               	movlb	5	; () banked
 30674   015E8E  6FE3               	movwf	SDCard_read512@response& (0+255),b
 30675                           
 30676                           ; BSR set to: 5
 30677                           ;src/boards/../../drivers/SDCard.c: 190:     if (response == 0xff) {
 30678   015E90  29E3               	incf	SDCard_read512@response& (0+255),w,b
 30679   015E92  A4D8               	btfss	status,2,c
 30680   015E94  D004               	goto	l9647
 30681                           
 30682                           ; BSR set to: 5
 30683                           ;src/boards/../../drivers/SDCard.c: 191:         result = 1;
 30684   015E96  0E00               	movlw	0
 30685   015E98  6FDE               	movwf	(SDCard_read512@result+1)& (0+255),b
 30686   015E9A  0E01               	movlw	1
 30687   015E9C  D0C7               	goto	L17
 30688   015E9E                     l9647:
 30689                           
 30690                           ; BSR set to: 5
 30691                           ;src/boards/../../drivers/SDCard.c: 194:     if (response != 0xfe) {
 30692   015E9E  0EFE               	movlw	254
 30693   015EA0  19E3               	xorwf	SDCard_read512@response& (0+255),w,b
 30694   015EA2  A4D8               	btfss	status,2,c
 30695   015EA4  D7E8               	goto	u11120
 30696                           
 30697                           ; BSR set to: 5
 30698                           ;src/boards/../../drivers/SDCard.c: 199:     crc = 0;
 30699   015EA6  0E00               	movlw	0
 30700   015EA8  6FE2               	movwf	(SDCard_read512@crc+1)& (0+255),b
 30701   015EAA  0E00               	movlw	0
 30702   015EAC  6FE1               	movwf	SDCard_read512@crc& (0+255),b
 30703                           
 30704                           ;src/boards/../../drivers/SDCard.c: 200:     for (int i = 0; i < offs; i++) {
 30705   015EAE  0E00               	movlw	0
 30706   015EB0  6FD6               	movwf	(SDCard_read512@i+1)& (0+255),b
 30707   015EB2  0E00               	movlw	0
 30708   015EB4  6FD5               	movwf	SDCard_read512@i& (0+255),b
 30709   015EB6  D020               	goto	l9661
 30710   015EB8                     l9653:
 30711                           
 30712                           ; BSR set to: 5
 30713                           ;src/boards/../../drivers/SDCard.c: 201:         response = SPI_SD_receive_byte(spi);
 30714   015EB8  C5DF  F50F         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 30715   015EBC  C5E0  F510         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 30716   015EC0  EC87  F0CF         	call	_SPI_SD_receive_byte	;wreg free
 30717   015EC4  0105               	movlb	5	; () banked
 30718   015EC6  6FE3               	movwf	SDCard_read512@response& (0+255),b
 30719                           
 30720                           ; BSR set to: 5
 30721                           ;src/boards/../../drivers/SDCard.c: 202:         if (ctx_.calc_read_crc)
 30722   015EC8  0107               	movlb	7	; () banked
 30723   015ECA  A10A               	btfss	(_ctx_+4)& (0+255),0,b
 30724   015ECC  D012               	goto	l9659
 30725                           
 30726                           ; BSR set to: 7
 30727                           ;src/boards/../../drivers/SDCard.c: 203:             crc = __SDCard_crc16(crc, &response
      +                          , 1);
 30728   015ECE  C5E1  F501         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 30729   015ED2  C5E2  F502         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 30730   015ED6  0EE3               	movlw	low SDCard_read512@response
 30731   015ED8  6E03               	movwf	___SDCard_crc16@buf^(0+1280),c
 30732   015EDA  0E05               	movlw	high SDCard_read512@response
 30733   015EDC  6E04               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 30734   015EDE  0E00               	movlw	0
 30735   015EE0  6E06               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 30736   015EE2  0E01               	movlw	1
 30737   015EE4  6E05               	movwf	___SDCard_crc16@count^(0+1280),c
 30738   015EE6  ECE7  F0C5         	call	___SDCard_crc16	;wreg free
 30739   015EEA  C501  F5E1         	movff	?___SDCard_crc16,SDCard_read512@crc
 30740   015EEE  C502  F5E2         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 30741   015EF2                     l9659:
 30742                           
 30743                           ;src/boards/../../drivers/SDCard.c: 204:     }
 30744   015EF2  0105               	movlb	5	; () banked
 30745   015EF4  4BD5               	infsnz	SDCard_read512@i& (0+255),f,b
 30746   015EF6  2BD6               	incf	(SDCard_read512@i+1)& (0+255),f,b
 30747   015EF8                     l9661:
 30748                           
 30749                           ; BSR set to: 5
 30750   015EF8  51CB               	movf	SDCard_read512@offs& (0+255),w,b
 30751   015EFA  5DD5               	subwf	SDCard_read512@i& (0+255),w,b
 30752   015EFC  51CC               	movf	(SDCard_read512@offs+1)& (0+255),w,b
 30753   015EFE  59D6               	subwfb	(SDCard_read512@i+1)& (0+255),w,b
 30754   015F00  A0D8               	btfss	status,0,c
 30755   015F02  D7DA               	goto	l9653
 30756                           
 30757                           ; BSR set to: 5
 30758                           ;src/boards/../../drivers/SDCard.c: 205:     SPI_SD_receive(spi, buf, count);
 30759   015F04  C5DF  F501         	movff	SDCard_read512@spi,SPI_SD_receive@ctx_
 30760   015F08  C5E0  F502         	movff	SDCard_read512@spi+1,SPI_SD_receive@ctx_+1
 30761   015F0C  C5CD  F503         	movff	SDCard_read512@buf,SPI_SD_receive@buf
 30762   015F10  C5CE  F504         	movff	SDCard_read512@buf+1,SPI_SD_receive@buf+1
 30763   015F14  C5CF  F505         	movff	SDCard_read512@count,SPI_SD_receive@count
 30764   015F18  C5D0  F506         	movff	SDCard_read512@count+1,SPI_SD_receive@count+1
 30765   015F1C  ECE0  F0AB         	call	_SPI_SD_receive	;wreg free
 30766                           
 30767                           ;src/boards/../../drivers/SDCard.c: 206:     if (ctx_.calc_read_crc)
 30768   015F20  0107               	movlb	7	; () banked
 30769   015F22  A10A               	btfss	(_ctx_+4)& (0+255),0,b
 30770   015F24  D012               	goto	l9669
 30771                           
 30772                           ; BSR set to: 7
 30773                           ;src/boards/../../drivers/SDCard.c: 207:         crc = __SDCard_crc16(crc, buf, count);
 30774   015F26  C5E1  F501         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 30775   015F2A  C5E2  F502         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 30776   015F2E  C5CD  F503         	movff	SDCard_read512@buf,___SDCard_crc16@buf
 30777   015F32  C5CE  F504         	movff	SDCard_read512@buf+1,___SDCard_crc16@buf+1
 30778   015F36  C5CF  F505         	movff	SDCard_read512@count,___SDCard_crc16@count
 30779   015F3A  C5D0  F506         	movff	SDCard_read512@count+1,___SDCard_crc16@count+1
 30780   015F3E  ECE7  F0C5         	call	___SDCard_crc16	;wreg free
 30781   015F42  C501  F5E1         	movff	?___SDCard_crc16,SDCard_read512@crc
 30782   015F46  C502  F5E2         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 30783   015F4A                     l9669:
 30784                           
 30785                           ;src/boards/../../drivers/SDCard.c: 208:     for (unsigned int i = 0; i < 512 - offs - c
      +                          ount; i++) {
 30786   015F4A  0E00               	movlw	0
 30787   015F4C  0105               	movlb	5	; () banked
 30788   015F4E  6FD8               	movwf	(SDCard_read512@i_2770+1)& (0+255),b
 30789   015F50  0E00               	movlw	0
 30790   015F52  6FD7               	movwf	SDCard_read512@i_2770& (0+255),b
 30791   015F54  D020               	goto	l9679
 30792   015F56                     l9671:
 30793                           
 30794                           ; BSR set to: 5
 30795                           ;src/boards/../../drivers/SDCard.c: 209:         response = SPI_SD_receive_byte(spi);
 30796   015F56  C5DF  F50F         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 30797   015F5A  C5E0  F510         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 30798   015F5E  EC87  F0CF         	call	_SPI_SD_receive_byte	;wreg free
 30799   015F62  0105               	movlb	5	; () banked
 30800   015F64  6FE3               	movwf	SDCard_read512@response& (0+255),b
 30801                           
 30802                           ; BSR set to: 5
 30803                           ;src/boards/../../drivers/SDCard.c: 210:         if (ctx_.calc_read_crc)
 30804   015F66  0107               	movlb	7	; () banked
 30805   015F68  A10A               	btfss	(_ctx_+4)& (0+255),0,b
 30806   015F6A  D012               	goto	l9677
 30807                           
 30808                           ; BSR set to: 7
 30809                           ;src/boards/../../drivers/SDCard.c: 211:             crc = __SDCard_crc16(crc, &response
      +                          , 1);
 30810   015F6C  C5E1  F501         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 30811   015F70  C5E2  F502         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 30812   015F74  0EE3               	movlw	low SDCard_read512@response
 30813   015F76  6E03               	movwf	___SDCard_crc16@buf^(0+1280),c
 30814   015F78  0E05               	movlw	high SDCard_read512@response
 30815   015F7A  6E04               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 30816   015F7C  0E00               	movlw	0
 30817   015F7E  6E06               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 30818   015F80  0E01               	movlw	1
 30819   015F82  6E05               	movwf	___SDCard_crc16@count^(0+1280),c
 30820   015F84  ECE7  F0C5         	call	___SDCard_crc16	;wreg free
 30821   015F88  C501  F5E1         	movff	?___SDCard_crc16,SDCard_read512@crc
 30822   015F8C  C502  F5E2         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 30823   015F90                     l9677:
 30824                           
 30825                           ;src/boards/../../drivers/SDCard.c: 212:     }
 30826   015F90  0105               	movlb	5	; () banked
 30827   015F92  4BD7               	infsnz	SDCard_read512@i_2770& (0+255),f,b
 30828   015F94  2BD8               	incf	(SDCard_read512@i_2770+1)& (0+255),f,b
 30829   015F96                     l9679:
 30830                           
 30831                           ; BSR set to: 5
 30832   015F96  C5CB  F5D1         	movff	SDCard_read512@offs,??_SDCard_read512
 30833   015F9A  C5CC  F5D2         	movff	SDCard_read512@offs+1,??_SDCard_read512+1
 30834   015F9E  1FD1               	comf	??_SDCard_read512& (0+255),f,b
 30835   015FA0  1FD2               	comf	(??_SDCard_read512+1)& (0+255),f,b
 30836   015FA2  4BD1               	infsnz	??_SDCard_read512& (0+255),f,b
 30837   015FA4  2BD2               	incf	(??_SDCard_read512+1)& (0+255),f,b
 30838   015FA6  51CF               	movf	SDCard_read512@count& (0+255),w,b
 30839   015FA8  5FD1               	subwf	??_SDCard_read512& (0+255),f,b
 30840   015FAA  51D0               	movf	(SDCard_read512@count+1)& (0+255),w,b
 30841   015FAC  5BD2               	subwfb	(??_SDCard_read512+1)& (0+255),f,b
 30842   015FAE  0E00               	movlw	0
 30843   015FB0  25D1               	addwf	??_SDCard_read512& (0+255),w,b
 30844   015FB2  6FD3               	movwf	(??_SDCard_read512+2)& (0+255),b
 30845   015FB4  0E02               	movlw	2
 30846   015FB6  21D2               	addwfc	(??_SDCard_read512+1)& (0+255),w,b
 30847   015FB8  6FD4               	movwf	(??_SDCard_read512+3)& (0+255),b
 30848   015FBA  51D3               	movf	(??_SDCard_read512+2)& (0+255),w,b
 30849   015FBC  5DD7               	subwf	SDCard_read512@i_2770& (0+255),w,b
 30850   015FBE  51D4               	movf	(??_SDCard_read512+3)& (0+255),w,b
 30851   015FC0  59D8               	subwfb	(SDCard_read512@i_2770+1)& (0+255),w,b
 30852   015FC2  A0D8               	btfss	status,0,c
 30853   015FC4  D7C8               	goto	l9671
 30854                           
 30855                           ; BSR set to: 5
 30856                           ;src/boards/../../drivers/SDCard.c: 217:     resp_crc = (uint16_t)SPI_SD_receive_byte(sp
      +                          i) << 8;
 30857   015FC6  C5DF  F50F         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 30858   015FCA  C5E0  F510         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 30859   015FCE  EC87  F0CF         	call	_SPI_SD_receive_byte	;wreg free
 30860   015FD2  0105               	movlb	5	; () banked
 30861   015FD4  6FDC               	movwf	(SDCard_read512@resp_crc+1)& (0+255),b
 30862   015FD6  6BDB               	clrf	SDCard_read512@resp_crc& (0+255),b
 30863                           
 30864                           ; BSR set to: 5
 30865                           ;src/boards/../../drivers/SDCard.c: 218:     resp_crc |= SPI_SD_receive_byte(spi);
 30866   015FD8  C5DF  F50F         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 30867   015FDC  C5E0  F510         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 30868   015FE0  EC87  F0CF         	call	_SPI_SD_receive_byte	;wreg free
 30869   015FE4  0105               	movlb	5	; () banked
 30870   015FE6  6FD1               	movwf	??_SDCard_read512& (0+255),b
 30871   015FE8  51D1               	movf	??_SDCard_read512& (0+255),w,b
 30872   015FEA  13DB               	iorwf	SDCard_read512@resp_crc& (0+255),f,b
 30873                           
 30874                           ; BSR set to: 5
 30875                           ;src/boards/../../drivers/SDCard.c: 219:     if (ctx_.calc_read_crc && resp_crc != crc) 
      +                          {
 30876   015FEC  0107               	movlb	7	; () banked
 30877   015FEE  A10A               	btfss	(_ctx_+4)& (0+255),0,b
 30878   015FF0  D019               	goto	l9701
 30879                           
 30880                           ; BSR set to: 7
 30881   015FF2  0105               	movlb	5	; () banked
 30882   015FF4  51E1               	movf	SDCard_read512@crc& (0+255),w,b
 30883   015FF6  19DB               	xorwf	SDCard_read512@resp_crc& (0+255),w,b
 30884   015FF8  E104               	bnz	u11210
 30885   015FFA  51E2               	movf	(SDCard_read512@crc+1)& (0+255),w,b
 30886   015FFC  19DC               	xorwf	(SDCard_read512@resp_crc+1)& (0+255),w,b
 30887   015FFE  B4D8               	btfsc	status,2,c
 30888   016000  D011               	goto	l9701
 30889   016002                     u11210:
 30890                           
 30891                           ; BSR set to: 5
 30892                           ;src/boards/../../drivers/SDCard.c: 222:         if (--retry < 1) {
 30893   016002  07D9               	decf	SDCard_read512@retry& (0+255),f,b
 30894   016004  A0D8               	btfss	status,0,c
 30895   016006  07DA               	decf	(SDCard_read512@retry+1)& (0+255),f,b
 30896   016008  BFDA               	btfsc	(SDCard_read512@retry+1)& (0+255),7,b
 30897   01600A  D005               	goto	u11220
 30898   01600C  51DA               	movf	(SDCard_read512@retry+1)& (0+255),w,b
 30899   01600E  E107               	bnz	l9699
 30900   016010  05D9               	decf	SDCard_read512@retry& (0+255),w,b
 30901   016012  B0D8               	btfsc	status,0,c
 30902   016014  D004               	goto	l9699
 30903   016016                     u11220:
 30904                           
 30905                           ; BSR set to: 5
 30906                           ;src/boards/../../drivers/SDCard.c: 223:             result = 4;
 30907   016016  0E00               	movlw	0
 30908   016018  6FDE               	movwf	(SDCard_read512@result+1)& (0+255),b
 30909   01601A  0E04               	movlw	4
 30910   01601C  D007               	goto	L17
 30911   01601E                     l9699:
 30912                           
 30913                           ; BSR set to: 5
 30914                           ;src/boards/../../drivers/SDCard.c: 226:         SDCard_end_transaction();
 30915   01601E  EC12  F0CF         	call	_SDCard_end_transaction	;wreg free
 30916                           
 30917                           ;src/boards/../../drivers/SDCard.c: 227:         goto retry;
 30918   016022  D70E               	goto	l9631
 30919   016024                     l9701:
 30920                           
 30921                           ;src/boards/../../drivers/SDCard.c: 230:     result = 0;
 30922   016024  0E00               	movlw	0
 30923   016026  0105               	movlb	5	; () banked
 30924   016028  6FDE               	movwf	(SDCard_read512@result+1)& (0+255),b
 30925   01602A  0E00               	movlw	0
 30926   01602C                     L17:
 30927   01602C  6FDD               	movwf	SDCard_read512@result& (0+255),b
 30928   01602E                     l9703:
 30929                           
 30930                           ; BSR set to: 5
 30931                           ;src/boards/../../drivers/SDCard.c: 233:     SDCard_end_transaction();
 30932   01602E  EC12  F0CF         	call	_SDCard_end_transaction	;wreg free
 30933                           
 30934                           ;src/boards/../../drivers/SDCard.c: 234:     return result;
 30935   016032  C5DD  F5C7         	movff	SDCard_read512@result,?_SDCard_read512
 30936   016036  C5DE  F5C8         	movff	SDCard_read512@result+1,?_SDCard_read512+1
 30937   01603A  0012               	return		;funcret
 30938   01603C                     __end_of_SDCard_read512:
 30939                           	callstack 0
 30940                           
 30941 ;; *************** function _util_addrdump *****************
 30942 ;; Defined at:
 30943 ;;		line 50 in file "drivers/utils.c"
 30944 ;; Parameters:    Size  Location     Type
 30945 ;;  header          2   70[BANK5 ] PTR const unsigned char 
 30946 ;;		 -> STR_80(5), STR_77(5), STR_16(6), STR_13(6), 
 30947 ;;  addr_offs       4   72[BANK5 ] unsigned long 
 30948 ;;  addr            2   76[BANK5 ] PTR const void 
 30949 ;;		 -> files$buf(512), fs$win(512), fs(560), disk_buf(128), 
 30950 ;;		 -> files(3276), NULL(0), disk_initialize@buf(128), 
 30951 ;;  size            2   78[BANK5 ] unsigned int 
 30952 ;; Auto vars:     Size  Location     Type
 30953 ;;  i               2  101[BANK5 ] unsigned int 
 30954 ;;  chars          17   82[BANK5 ] unsigned char [17]
 30955 ;;  buf             2   99[BANK5 ] PTR const unsigned char 
 30956 ;;		 -> files$buf(512), fs$win(512), fs(560), disk_buf(128), 
 30957 ;;		 -> files(3276), NULL(0), disk_initialize@buf(128), 
 30958 ;; Return value:  Size  Location     Type
 30959 ;;                  1    wreg      void 
 30960 ;; Registers used:
 30961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30962 ;; Tracked objects:
 30963 ;;		On entry : 0/0
 30964 ;;		On exit  : 3F/5
 30965 ;;		Unchanged: 0/0
 30966 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 30967 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30968 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30969 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30970 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30971 ;;Total ram usage:       33 bytes
 30972 ;; Hardware stack levels used: 1
 30973 ;; Hardware stack levels required when called: 8
 30974 ;; This function calls:
 30975 ;;		_printf
 30976 ;; This function is called by:
 30977 ;;		_disk_read
 30978 ;;		_disk_write
 30979 ;;		_SDCard_read512
 30980 ;;		_SDCard_write512
 30981 ;; This function uses a non-reentrant model
 30982 ;;
 30983                           
 30984                           	psect	text62
 30985   017C62                     __ptext62:
 30986                           	callstack 0
 30987   017C62                     _util_addrdump:
 30988                           	callstack 111
 30989                           
 30990                           ;drivers/utils.c: 50: void util_addrdump(const char *header, uint32_t addr_offs, const v
      +                          oid *addr, unsigned int size);drivers/utils.c: 51: {;drivers/utils.c: 52:     char chars
      +                          [17];;drivers/utils.c: 53:     const uint8_t *buf = addr;
 30991                           
 30992                           ;incstack = 0
 30993   017C62  C5AC  F5C3         	movff	util_addrdump@addr,util_addrdump@buf
 30994   017C66  C5AD  F5C4         	movff	util_addrdump@addr+1,util_addrdump@buf+1
 30995                           
 30996                           ;drivers/utils.c: 54:     size = ((size + 15) & ~0xfU);
 30997   017C6A  0E0F               	movlw	15
 30998   017C6C  0105               	movlb	5	; () banked
 30999   017C6E  25AE               	addwf	util_addrdump@size& (0+255),w,b
 31000   017C70  6FB0               	movwf	??_util_addrdump& (0+255),b
 31001   017C72  0E00               	movlw	0
 31002   017C74  21AF               	addwfc	(util_addrdump@size+1)& (0+255),w,b
 31003   017C76  6FB1               	movwf	(??_util_addrdump+1)& (0+255),b
 31004   017C78  0EF0               	movlw	240
 31005   017C7A  15B0               	andwf	??_util_addrdump& (0+255),w,b
 31006   017C7C  6FAE               	movwf	util_addrdump@size& (0+255),b
 31007   017C7E  0EFF               	movlw	255
 31008   017C80  15B1               	andwf	(??_util_addrdump+1)& (0+255),w,b
 31009   017C82  6FAF               	movwf	(util_addrdump@size+1)& (0+255),b
 31010                           
 31011                           ; BSR set to: 5
 31012                           ;drivers/utils.c: 55:     for (unsigned int i = 0; i < size; i++) {
 31013   017C84  0E00               	movlw	0
 31014   017C86  6FC6               	movwf	(util_addrdump@i+1)& (0+255),b
 31015   017C88  0E00               	movlw	0
 31016   017C8A  6FC5               	movwf	util_addrdump@i& (0+255),b
 31017   017C8C  D075               	goto	l9467
 31018   017C8E                     l9447:
 31019                           
 31020                           ; BSR set to: 5
 31021                           ;drivers/utils.c: 56:         if ((i % 16) == 0)
 31022   017C8E  C5C5  F5B0         	movff	util_addrdump@i,??_util_addrdump
 31023   017C92  0E0F               	movlw	15
 31024   017C94  17B0               	andwf	??_util_addrdump& (0+255),f,b
 31025   017C96  A4D8               	btfss	status,2,c
 31026   017C98  D016               	goto	l122
 31027                           
 31028                           ; BSR set to: 5
 31029                           ;drivers/utils.c: 57:             printf("%s%06lx:", header, addr_offs + i);
 31030   017C9A  0EC0               	movlw	low STR_22
 31031   017C9C  6F9A               	movwf	printf@fmt& (0+255),b
 31032   017C9E  0EFF               	movlw	high STR_22
 31033   017CA0  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 31034   017CA2  C5A6  F59C         	movff	util_addrdump@header,?_printf+2
 31035   017CA6  C5A7  F59D         	movff	util_addrdump@header+1,?_printf+3
 31036   017CAA  51C5               	movf	util_addrdump@i& (0+255),w,b
 31037   017CAC  25A8               	addwf	util_addrdump@addr_offs& (0+255),w,b
 31038   017CAE  6F9E               	movwf	(?_printf+4)& (0+255),b
 31039   017CB0  51C6               	movf	(util_addrdump@i+1)& (0+255),w,b
 31040   017CB2  21A9               	addwfc	(util_addrdump@addr_offs+1)& (0+255),w,b
 31041   017CB4  6F9F               	movwf	(?_printf+5)& (0+255),b
 31042   017CB6  0E00               	movlw	0
 31043   017CB8  21AA               	addwfc	(util_addrdump@addr_offs+2)& (0+255),w,b
 31044   017CBA  6FA0               	movwf	(?_printf+6)& (0+255),b
 31045   017CBC  0E00               	movlw	0
 31046   017CBE  21AB               	addwfc	(util_addrdump@addr_offs+3)& (0+255),w,b
 31047   017CC0  6FA1               	movwf	(?_printf+7)& (0+255),b
 31048   017CC2  EC4F  F0CF         	call	_printf	;wreg free
 31049   017CC6                     l122:
 31050                           
 31051                           ; BSR set to: 5
 31052                           ;drivers/utils.c: 58:         printf(" %02x", buf[i]);
 31053   017CC6  0EE0               	movlw	low STR_20
 31054   017CC8  6F9A               	movwf	printf@fmt& (0+255),b
 31055   017CCA  0EFF               	movlw	high STR_20
 31056   017CCC  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 31057   017CCE  51C5               	movf	util_addrdump@i& (0+255),w,b
 31058   017CD0  25C3               	addwf	util_addrdump@buf& (0+255),w,b
 31059   017CD2  6ED9               	movwf	fsr2l,c
 31060   017CD4  51C6               	movf	(util_addrdump@i+1)& (0+255),w,b
 31061   017CD6  21C4               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 31062   017CD8  6EDA               	movwf	fsr2h,c
 31063   017CDA  50DF               	movf	indf2,w,c
 31064   017CDC  6FB0               	movwf	??_util_addrdump& (0+255),b
 31065   017CDE  51B0               	movf	??_util_addrdump& (0+255),w,b
 31066   017CE0  6F9C               	movwf	(?_printf+2)& (0+255),b
 31067   017CE2  6B9D               	clrf	(?_printf+3)& (0+255),b
 31068   017CE4  EC4F  F0CF         	call	_printf	;wreg free
 31069                           
 31070                           ; BSR set to: 5
 31071                           ;drivers/utils.c: 59:         if (0x20 <= buf[i] && buf[i] <= 0x7e) {
 31072   017CE8  51C5               	movf	util_addrdump@i& (0+255),w,b
 31073   017CEA  25C3               	addwf	util_addrdump@buf& (0+255),w,b
 31074   017CEC  6ED9               	movwf	fsr2l,c
 31075   017CEE  51C6               	movf	(util_addrdump@i+1)& (0+255),w,b
 31076   017CF0  21C4               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 31077   017CF2  6EDA               	movwf	fsr2h,c
 31078   017CF4  0E1F               	movlw	31
 31079   017CF6  64DF               	cpfsgt	indf2,c
 31080   017CF8  D01E               	goto	l9457
 31081                           
 31082                           ; BSR set to: 5
 31083   017CFA  51C5               	movf	util_addrdump@i& (0+255),w,b
 31084   017CFC  25C3               	addwf	util_addrdump@buf& (0+255),w,b
 31085   017CFE  6ED9               	movwf	fsr2l,c
 31086   017D00  51C6               	movf	(util_addrdump@i+1)& (0+255),w,b
 31087   017D02  21C4               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 31088   017D04  6EDA               	movwf	fsr2h,c
 31089   017D06  0E7F               	movlw	127
 31090   017D08  60DF               	cpfslt	indf2,c
 31091   017D0A  D015               	goto	l9457
 31092                           
 31093                           ; BSR set to: 5
 31094                           ;drivers/utils.c: 60:             chars[i % 16] = buf[i];
 31095   017D0C  51C5               	movf	util_addrdump@i& (0+255),w,b
 31096   017D0E  25C3               	addwf	util_addrdump@buf& (0+255),w,b
 31097   017D10  6ED9               	movwf	fsr2l,c
 31098   017D12  51C6               	movf	(util_addrdump@i+1)& (0+255),w,b
 31099   017D14  21C4               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 31100   017D16  6EDA               	movwf	fsr2h,c
 31101   017D18  0E0F               	movlw	15
 31102   017D1A  15C5               	andwf	util_addrdump@i& (0+255),w,b
 31103   017D1C  6FB0               	movwf	??_util_addrdump& (0+255),b
 31104   017D1E  0E00               	movlw	0
 31105   017D20  15C6               	andwf	(util_addrdump@i+1)& (0+255),w,b
 31106   017D22  6FB1               	movwf	(??_util_addrdump+1)& (0+255),b
 31107   017D24  0EB2               	movlw	low util_addrdump@chars
 31108   017D26  25B0               	addwf	??_util_addrdump& (0+255),w,b
 31109   017D28  6EE1               	movwf	fsr1l,c
 31110   017D2A  0E05               	movlw	high util_addrdump@chars
 31111   017D2C  21B1               	addwfc	(??_util_addrdump+1)& (0+255),w,b
 31112   017D2E  6EE2               	movwf	fsr1h,c
 31113   017D30  C4DF F4E7          	movff	indf2,indf1
 31114                           
 31115                           ;drivers/utils.c: 61:         } else {
 31116   017D34  D00E               	goto	l9459
 31117   017D36                     l9457:
 31118                           
 31119                           ; BSR set to: 5
 31120                           ;drivers/utils.c: 62:             chars[i % 16] = '.';
 31121   017D36  0E0F               	movlw	15
 31122   017D38  15C5               	andwf	util_addrdump@i& (0+255),w,b
 31123   017D3A  6FB0               	movwf	??_util_addrdump& (0+255),b
 31124   017D3C  0E00               	movlw	0
 31125   017D3E  15C6               	andwf	(util_addrdump@i+1)& (0+255),w,b
 31126   017D40  6FB1               	movwf	(??_util_addrdump+1)& (0+255),b
 31127   017D42  0EB2               	movlw	low util_addrdump@chars
 31128   017D44  25B0               	addwf	??_util_addrdump& (0+255),w,b
 31129   017D46  6ED9               	movwf	fsr2l,c
 31130   017D48  0E05               	movlw	high util_addrdump@chars
 31131   017D4A  21B1               	addwfc	(??_util_addrdump+1)& (0+255),w,b
 31132   017D4C  6EDA               	movwf	fsr2h,c
 31133   017D4E  0E2E               	movlw	46
 31134   017D50  6EDF               	movwf	indf2,c
 31135   017D52                     l9459:
 31136                           
 31137                           ; BSR set to: 5
 31138                           ;drivers/utils.c: 64:         if ((i % 16) == 15) {
 31139   017D52  51C5               	movf	util_addrdump@i& (0+255),w,b
 31140   017D54  0B0F               	andlw	15
 31141   017D56  0A0F               	xorlw	15
 31142   017D58  A4D8               	btfss	status,2,c
 31143   017D5A  D00C               	goto	l9465
 31144                           
 31145                           ; BSR set to: 5
 31146                           ;drivers/utils.c: 65:             chars[16] = '\0';
 31147   017D5C  0E00               	movlw	0
 31148   017D5E  6FC2               	movwf	(util_addrdump@chars+16)& (0+255),b
 31149                           
 31150                           ; BSR set to: 5
 31151                           ;drivers/utils.c: 66:             printf(" %s\n\r", chars);
 31152   017D60  0E9F               	movlw	low (STR_35+3)
 31153   017D62  6F9A               	movwf	printf@fmt& (0+255),b
 31154   017D64  0EFF               	movlw	high (STR_35+3)
 31155   017D66  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 31156   017D68  0EB2               	movlw	low util_addrdump@chars
 31157   017D6A  6F9C               	movwf	(?_printf+2)& (0+255),b
 31158   017D6C  0E05               	movlw	high util_addrdump@chars
 31159   017D6E  6F9D               	movwf	(?_printf+3)& (0+255),b
 31160   017D70  EC4F  F0CF         	call	_printf	;wreg free
 31161   017D74                     l9465:
 31162                           
 31163                           ; BSR set to: 5
 31164                           ;drivers/utils.c: 68:     }
 31165   017D74  4BC5               	infsnz	util_addrdump@i& (0+255),f,b
 31166   017D76  2BC6               	incf	(util_addrdump@i+1)& (0+255),f,b
 31167   017D78                     l9467:
 31168                           
 31169                           ; BSR set to: 5
 31170   017D78  51AE               	movf	util_addrdump@size& (0+255),w,b
 31171   017D7A  5DC5               	subwf	util_addrdump@i& (0+255),w,b
 31172   017D7C  51AF               	movf	(util_addrdump@size+1)& (0+255),w,b
 31173   017D7E  59C6               	subwfb	(util_addrdump@i+1)& (0+255),w,b
 31174   017D80  B0D8               	btfsc	status,0,c
 31175   017D82  0012               	return	
 31176   017D84  D784               	goto	l9447
 31177   017D86                     __end_of_util_addrdump:
 31178                           	callstack 0
 31179                           
 31180 ;; *************** function ___SDCard_crc16 *****************
 31181 ;; Defined at:
 31182 ;;		line 352 in file "src/boards/../../drivers/SDCard.c"
 31183 ;; Parameters:    Size  Location     Type
 31184 ;;  crc             2    0[COMRAM] unsigned short 
 31185 ;;  buf             2    2[COMRAM] PTR const void 
 31186 ;;		 -> files$buf(512), fs$win(512), fs(560), SDCard_write512@response(1), 
 31187 ;;		 -> SDCard_read512@response(1), disk_buf(128), files(3276), NULL(0), 
 31188 ;;		 -> disk_initialize@buf(128), 
 31189 ;;  count           2    4[COMRAM] unsigned int 
 31190 ;; Auto vars:     Size  Location     Type
 31191 ;;  p               2   11[COMRAM] PTR unsigned char 
 31192 ;;		 -> files$buf(512), fs$win(512), fs(560), SDCard_write512@response(1), 
 31193 ;;		 -> SDCard_read512@response(1), disk_buf(128), files(3276), NULL(0), 
 31194 ;;		 -> disk_initialize@buf(128), 
 31195 ;;  endp            2    9[COMRAM] PTR unsigned char 
 31196 ;;		 -> files$buf(512), fs$win(512), fs(560), SDCard_write512@response(1), 
 31197 ;;		 -> SDCard_read512@response(1), disk_buf(128), files(3276), NULL(0), 
 31198 ;;		 -> disk_initialize@buf(128), 
 31199 ;; Return value:  Size  Location     Type
 31200 ;;                  2    0[COMRAM] unsigned short 
 31201 ;; Registers used:
 31202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31203 ;; Tracked objects:
 31204 ;;		On entry : 3D/5
 31205 ;;		On exit  : 3D/5
 31206 ;;		Unchanged: 3C/0
 31207 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31208 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31209 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31210 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31211 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31212 ;;Total ram usage:       13 bytes
 31213 ;; Hardware stack levels used: 1
 31214 ;; This function calls:
 31215 ;;		Nothing
 31216 ;; This function is called by:
 31217 ;;		_SDCard_read512
 31218 ;;		_SDCard_write512
 31219 ;; This function uses a non-reentrant model
 31220 ;;
 31221                           
 31222                           	psect	text63
 31223   018BCE                     __ptext63:
 31224                           	callstack 0
 31225   018BCE                     ___SDCard_crc16:
 31226                           	callstack 118
 31227                           
 31228                           ;src/boards/../../drivers/SDCard.c: 352: uint16_t __SDCard_crc16(uint16_t crc, const voi
      +                          d *buf, unsigned int count);src/boards/../../drivers/SDCard.c: 353: {;src/boards/../../d
      +                          rivers/SDCard.c: 354:     uint8_t *p = (uint8_t*)buf;
 31229                           
 31230                           ; BSR set to: 5
 31231                           ;incstack = 0
 31232   018BCE  C503  F50C         	movff	___SDCard_crc16@buf,___SDCard_crc16@p
 31233   018BD2  C504  F50D         	movff	___SDCard_crc16@buf+1,___SDCard_crc16@p+1
 31234                           
 31235                           ;src/boards/../../drivers/SDCard.c: 355:     uint8_t *endp = p + count;
 31236   018BD6  5005               	movf	___SDCard_crc16@count^(0+1280),w,c
 31237   018BD8  240C               	addwf	___SDCard_crc16@p^(0+1280),w,c
 31238   018BDA  6E0A               	movwf	___SDCard_crc16@endp^(0+1280),c
 31239   018BDC  5006               	movf	(___SDCard_crc16@count+1)^(0+1280),w,c
 31240   018BDE  200D               	addwfc	(___SDCard_crc16@p+1)^(0+1280),w,c
 31241   018BE0  6E0B               	movwf	(___SDCard_crc16@endp+1)^(0+1280),c
 31242                           
 31243                           ;src/boards/../../drivers/SDCard.c: 357:     while (p < endp) {
 31244   018BE2  D041               	goto	l9523
 31245   018BE4                     l9511:
 31246                           
 31247                           ;src/boards/../../drivers/SDCard.c: 358:         crc = (crc >> 8)|(crc << 8);
 31248   018BE4  C501  F507         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 31249   018BE8  C502  F501         	movff	___SDCard_crc16@crc+1,___SDCard_crc16@crc
 31250   018BEC  C507  F502         	movff	??___SDCard_crc16,___SDCard_crc16@crc+1
 31251                           
 31252                           ;src/boards/../../drivers/SDCard.c: 359:         crc ^= *p++;
 31253   018BF0  C50C  F4D9         	movff	___SDCard_crc16@p,fsr2l
 31254   018BF4  C50D  F4DA         	movff	___SDCard_crc16@p+1,fsr2h
 31255   018BF8  50DF               	movf	indf2,w,c
 31256   018BFA  6E07               	movwf	??___SDCard_crc16^(0+1280),c
 31257   018BFC  5007               	movf	??___SDCard_crc16^(0+1280),w,c
 31258   018BFE  1A01               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 31259   018C00  4A0C               	infsnz	___SDCard_crc16@p^(0+1280),f,c
 31260   018C02  2A0D               	incf	(___SDCard_crc16@p+1)^(0+1280),f,c
 31261                           
 31262                           ;src/boards/../../drivers/SDCard.c: 360:         crc ^= ((crc & 0xff) >> 4);
 31263   018C04  C501  F507         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 31264   018C08  C502  F508         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16+1
 31265   018C0C  0E04               	movlw	4
 31266   018C0E  6E09               	movwf	(??___SDCard_crc16+2)^(0+1280),c
 31267   018C10                     u10985:
 31268   018C10  90D8               	bcf	status,0,c
 31269   018C12  3208               	rrcf	(??___SDCard_crc16+1)^(0+1280),f,c
 31270   018C14  3207               	rrcf	??___SDCard_crc16^(0+1280),f,c
 31271   018C16  2E09               	decfsz	(??___SDCard_crc16+2)^(0+1280),f,c
 31272   018C18  D7FB               	goto	u10985
 31273   018C1A  0E0F               	movlw	15
 31274   018C1C  1607               	andwf	??___SDCard_crc16^(0+1280),f,c
 31275   018C1E  0E00               	movlw	0
 31276   018C20  1608               	andwf	(??___SDCard_crc16+1)^(0+1280),f,c
 31277   018C22  5007               	movf	??___SDCard_crc16^(0+1280),w,c
 31278   018C24  1A01               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 31279   018C26  5008               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 31280   018C28  1A02               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 31281                           
 31282                           ;src/boards/../../drivers/SDCard.c: 361:         crc ^= (crc << 12);
 31283   018C2A  C501  F507         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 31284   018C2E  C502  F508         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16+1
 31285   018C32  0E0C               	movlw	12
 31286   018C34                     u10995:
 31287   018C34  90D8               	bcf	status,0,c
 31288   018C36  3607               	rlcf	??___SDCard_crc16^(0+1280),f,c
 31289   018C38  3608               	rlcf	(??___SDCard_crc16+1)^(0+1280),f,c
 31290   018C3A  2EE8               	decfsz	wreg,f,c
 31291   018C3C  D7FB               	goto	u10995
 31292   018C3E  5007               	movf	??___SDCard_crc16^(0+1280),w,c
 31293   018C40  1A01               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 31294   018C42  5008               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 31295   018C44  1A02               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 31296                           
 31297                           ;src/boards/../../drivers/SDCard.c: 362:         crc ^= ((crc & 0xff) << 5);
 31298   018C46  0EFF               	movlw	255
 31299   018C48  1401               	andwf	___SDCard_crc16@crc^(0+1280),w,c
 31300   018C4A  6E07               	movwf	??___SDCard_crc16^(0+1280),c
 31301   018C4C  0E00               	movlw	0
 31302   018C4E  1402               	andwf	(___SDCard_crc16@crc+1)^(0+1280),w,c
 31303   018C50  6E08               	movwf	(??___SDCard_crc16+1)^(0+1280),c
 31304   018C52  0E05               	movlw	5
 31305   018C54                     u11005:
 31306   018C54  90D8               	bcf	status,0,c
 31307   018C56  3607               	rlcf	??___SDCard_crc16^(0+1280),f,c
 31308   018C58  3608               	rlcf	(??___SDCard_crc16+1)^(0+1280),f,c
 31309   018C5A  2EE8               	decfsz	wreg,f,c
 31310   018C5C  D7FB               	goto	u11005
 31311   018C5E  5007               	movf	??___SDCard_crc16^(0+1280),w,c
 31312   018C60  1A01               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 31313   018C62  5008               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 31314   018C64  1A02               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 31315   018C66                     l9523:
 31316                           
 31317                           ;src/boards/../../drivers/SDCard.c: 357:     while (p < endp) {
 31318   018C66  500A               	movf	___SDCard_crc16@endp^(0+1280),w,c
 31319   018C68  5C0C               	subwf	___SDCard_crc16@p^(0+1280),w,c
 31320   018C6A  500B               	movf	(___SDCard_crc16@endp+1)^(0+1280),w,c
 31321   018C6C  580D               	subwfb	(___SDCard_crc16@p+1)^(0+1280),w,c
 31322   018C6E  A0D8               	btfss	status,0,c
 31323   018C70  D7B9               	goto	l9511
 31324                           
 31325                           ;src/boards/../../drivers/SDCard.c: 365:     return crc;
 31326   018C72  C501  F501         	movff	___SDCard_crc16@crc,?___SDCard_crc16
 31327   018C76  C502  F502         	movff	___SDCard_crc16@crc+1,?___SDCard_crc16+1
 31328   018C7A  0012               	return		;funcret
 31329   018C7C                     __end_of___SDCard_crc16:
 31330                           	callstack 0
 31331                           
 31332 ;; *************** function _ld_word *****************
 31333 ;; Defined at:
 31334 ;;		line 618 in file "fatfs/ff.c"
 31335 ;; Parameters:    Size  Location     Type
 31336 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
 31337 ;;		 -> fs$win(512), fs(560), NULL(0), 
 31338 ;; Auto vars:     Size  Location     Type
 31339 ;;  rv              2    5[COMRAM] unsigned short 
 31340 ;; Return value:  Size  Location     Type
 31341 ;;                  2    0[COMRAM] unsigned short 
 31342 ;; Registers used:
 31343 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31344 ;; Tracked objects:
 31345 ;;		On entry : 0/6
 31346 ;;		On exit  : 0/0
 31347 ;;		Unchanged: 0/0
 31348 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31351 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31352 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31353 ;;Total ram usage:        7 bytes
 31354 ;; Hardware stack levels used: 1
 31355 ;; This function calls:
 31356 ;;		Nothing
 31357 ;; This function is called by:
 31358 ;;		_get_fat
 31359 ;;		_ld_clust
 31360 ;;		_get_fileinfo
 31361 ;;		_check_fs
 31362 ;;		_mount_volume
 31363 ;; This function uses a non-reentrant model
 31364 ;;
 31365                           
 31366                           	psect	text64
 31367   019C62                     __ptext64:
 31368                           	callstack 0
 31369   019C62                     _ld_word:
 31370                           	callstack 123
 31371                           
 31372                           ;fatfs/ff.c: 618: static WORD ld_word (const BYTE* ptr);fatfs/ff.c: 619: {;fatfs/ff.c: 6
      +                          20:  WORD rv;;fatfs/ff.c: 622:  rv = ptr[1];
 31373                           
 31374                           ;incstack = 0
 31375   019C62  EE20 F001          	lfsr	2,1
 31376   019C66  5001               	movf	ld_word@ptr^(0+1280),w,c
 31377   019C68  26D9               	addwf	fsr2l,f,c
 31378   019C6A  5002               	movf	(ld_word@ptr+1)^(0+1280),w,c
 31379   019C6C  22DA               	addwfc	fsr2h,f,c
 31380   019C6E  50DF               	movf	indf2,w,c
 31381   019C70  6E03               	movwf	??_ld_word^(0+1280),c
 31382   019C72  5003               	movf	??_ld_word^(0+1280),w,c
 31383   019C74  6E06               	movwf	ld_word@rv^(0+1280),c
 31384   019C76  6A07               	clrf	(ld_word@rv+1)^(0+1280),c
 31385                           
 31386                           ;fatfs/ff.c: 623:  rv = rv << 8 | ptr[0];
 31387   019C78  C501  F4D9         	movff	ld_word@ptr,fsr2l
 31388   019C7C  C502  F4DA         	movff	ld_word@ptr+1,fsr2h
 31389   019C80  50DF               	movf	indf2,w,c
 31390   019C82  6E03               	movwf	??_ld_word^(0+1280),c
 31391   019C84  5006               	movf	ld_word@rv^(0+1280),w,c
 31392   019C86  6E04               	movwf	(??_ld_word+1)^(0+1280),c
 31393   019C88  5003               	movf	??_ld_word^(0+1280),w,c
 31394   019C8A  6E06               	movwf	ld_word@rv^(0+1280),c
 31395   019C8C  C504  F507         	movff	??_ld_word+1,ld_word@rv+1
 31396                           
 31397                           ;fatfs/ff.c: 624:  return rv;
 31398   019C90  C506  F501         	movff	ld_word@rv,?_ld_word
 31399   019C94  C507  F502         	movff	ld_word@rv+1,?_ld_word+1
 31400   019C98  0012               	return		;funcret
 31401   019C9A                     __end_of_ld_word:
 31402                           	callstack 0
 31403                           
 31404 ;; *************** function _ld_dword *****************
 31405 ;; Defined at:
 31406 ;;		line 627 in file "fatfs/ff.c"
 31407 ;; Parameters:    Size  Location     Type
 31408 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
 31409 ;;		 -> fs$win(512), fs(560), NULL(0), 
 31410 ;; Auto vars:     Size  Location     Type
 31411 ;;  rv              4    9[COMRAM] unsigned long 
 31412 ;; Return value:  Size  Location     Type
 31413 ;;                  4    0[COMRAM] unsigned long 
 31414 ;; Registers used:
 31415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31416 ;; Tracked objects:
 31417 ;;		On entry : 3F/6
 31418 ;;		On exit  : 3F/6
 31419 ;;		Unchanged: 3F/0
 31420 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31422 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31423 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31424 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31425 ;;Total ram usage:       13 bytes
 31426 ;; Hardware stack levels used: 1
 31427 ;; This function calls:
 31428 ;;		Nothing
 31429 ;; This function is called by:
 31430 ;;		_get_fat
 31431 ;;		_put_fat
 31432 ;;		_get_fileinfo
 31433 ;;		_check_fs
 31434 ;;		_find_volume
 31435 ;;		_mount_volume
 31436 ;;		_f_open
 31437 ;; This function uses a non-reentrant model
 31438 ;;
 31439                           
 31440                           	psect	text65
 31441   0189AA                     __ptext65:
 31442                           	callstack 0
 31443   0189AA                     _ld_dword:
 31444                           	callstack 123
 31445                           
 31446                           ; BSR set to: 6
 31447                           ;fatfs/ff.c: 627: static DWORD ld_dword (const BYTE* ptr);fatfs/ff.c: 628: {;fatfs/ff.c:
      +                           629:  DWORD rv;;fatfs/ff.c: 631:  rv = ptr[3];
 31448                           
 31449                           ;incstack = 0
 31450   0189AA  EE20 F003          	lfsr	2,3
 31451   0189AE  5001               	movf	ld_dword@ptr^(0+1280),w,c
 31452   0189B0  26D9               	addwf	fsr2l,f,c
 31453   0189B2  5002               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 31454   0189B4  22DA               	addwfc	fsr2h,f,c
 31455   0189B6  50DF               	movf	indf2,w,c
 31456   0189B8  6E05               	movwf	??_ld_dword^(0+1280),c
 31457   0189BA  5005               	movf	??_ld_dword^(0+1280),w,c
 31458   0189BC  6E0A               	movwf	ld_dword@rv^(0+1280),c
 31459   0189BE  6A0B               	clrf	(ld_dword@rv+1)^(0+1280),c
 31460   0189C0  6A0C               	clrf	(ld_dword@rv+2)^(0+1280),c
 31461   0189C2  6A0D               	clrf	(ld_dword@rv+3)^(0+1280),c
 31462                           
 31463                           ;fatfs/ff.c: 632:  rv = rv << 8 | ptr[2];
 31464   0189C4  EE20 F002          	lfsr	2,2
 31465   0189C8  5001               	movf	ld_dword@ptr^(0+1280),w,c
 31466   0189CA  26D9               	addwf	fsr2l,f,c
 31467   0189CC  5002               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 31468   0189CE  22DA               	addwfc	fsr2h,f,c
 31469   0189D0  50DF               	movf	indf2,w,c
 31470   0189D2  6E05               	movwf	??_ld_dword^(0+1280),c
 31471   0189D4  5005               	movf	??_ld_dword^(0+1280),w,c
 31472   0189D6  C50A  F507         	movff	ld_dword@rv,??_ld_dword+2
 31473   0189DA  C50B  F508         	movff	ld_dword@rv+1,??_ld_dword+3
 31474   0189DE  C50C  F509         	movff	ld_dword@rv+2,??_ld_dword+4
 31475   0189E2  6A06               	clrf	(??_ld_dword+1)^(0+1280),c
 31476   0189E4  1006               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 31477   0189E6  6E0A               	movwf	ld_dword@rv^(0+1280),c
 31478   0189E8  5007               	movf	(??_ld_dword+2)^(0+1280),w,c
 31479   0189EA  6E0B               	movwf	(ld_dword@rv+1)^(0+1280),c
 31480   0189EC  5008               	movf	(??_ld_dword+3)^(0+1280),w,c
 31481   0189EE  6E0C               	movwf	(ld_dword@rv+2)^(0+1280),c
 31482   0189F0  5009               	movf	(??_ld_dword+4)^(0+1280),w,c
 31483   0189F2  6E0D               	movwf	(ld_dword@rv+3)^(0+1280),c
 31484                           
 31485                           ;fatfs/ff.c: 633:  rv = rv << 8 | ptr[1];
 31486   0189F4  EE20 F001          	lfsr	2,1
 31487   0189F8  5001               	movf	ld_dword@ptr^(0+1280),w,c
 31488   0189FA  26D9               	addwf	fsr2l,f,c
 31489   0189FC  5002               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 31490   0189FE  22DA               	addwfc	fsr2h,f,c
 31491   018A00  50DF               	movf	indf2,w,c
 31492   018A02  6E05               	movwf	??_ld_dword^(0+1280),c
 31493   018A04  5005               	movf	??_ld_dword^(0+1280),w,c
 31494   018A06  C50A  F507         	movff	ld_dword@rv,??_ld_dword+2
 31495   018A0A  C50B  F508         	movff	ld_dword@rv+1,??_ld_dword+3
 31496   018A0E  C50C  F509         	movff	ld_dword@rv+2,??_ld_dword+4
 31497   018A12  6A06               	clrf	(??_ld_dword+1)^(0+1280),c
 31498   018A14  1006               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 31499   018A16  6E0A               	movwf	ld_dword@rv^(0+1280),c
 31500   018A18  5007               	movf	(??_ld_dword+2)^(0+1280),w,c
 31501   018A1A  6E0B               	movwf	(ld_dword@rv+1)^(0+1280),c
 31502   018A1C  5008               	movf	(??_ld_dword+3)^(0+1280),w,c
 31503   018A1E  6E0C               	movwf	(ld_dword@rv+2)^(0+1280),c
 31504   018A20  5009               	movf	(??_ld_dword+4)^(0+1280),w,c
 31505   018A22  6E0D               	movwf	(ld_dword@rv+3)^(0+1280),c
 31506                           
 31507                           ;fatfs/ff.c: 634:  rv = rv << 8 | ptr[0];
 31508   018A24  C501  F4D9         	movff	ld_dword@ptr,fsr2l
 31509   018A28  C502  F4DA         	movff	ld_dword@ptr+1,fsr2h
 31510   018A2C  50DF               	movf	indf2,w,c
 31511   018A2E  6E05               	movwf	??_ld_dword^(0+1280),c
 31512   018A30  5005               	movf	??_ld_dword^(0+1280),w,c
 31513   018A32  C50A  F507         	movff	ld_dword@rv,??_ld_dword+2
 31514   018A36  C50B  F508         	movff	ld_dword@rv+1,??_ld_dword+3
 31515   018A3A  C50C  F509         	movff	ld_dword@rv+2,??_ld_dword+4
 31516   018A3E  6A06               	clrf	(??_ld_dword+1)^(0+1280),c
 31517   018A40  1006               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 31518   018A42  6E0A               	movwf	ld_dword@rv^(0+1280),c
 31519   018A44  5007               	movf	(??_ld_dword+2)^(0+1280),w,c
 31520   018A46  6E0B               	movwf	(ld_dword@rv+1)^(0+1280),c
 31521   018A48  5008               	movf	(??_ld_dword+3)^(0+1280),w,c
 31522   018A4A  6E0C               	movwf	(ld_dword@rv+2)^(0+1280),c
 31523   018A4C  5009               	movf	(??_ld_dword+4)^(0+1280),w,c
 31524   018A4E  6E0D               	movwf	(ld_dword@rv+3)^(0+1280),c
 31525                           
 31526                           ; BSR set to: 6
 31527                           ;fatfs/ff.c: 635:  return rv;
 31528   018A50  C50A  F501         	movff	ld_dword@rv,?_ld_dword
 31529   018A54  C50B  F502         	movff	ld_dword@rv+1,?_ld_dword+1
 31530   018A58  C50C  F503         	movff	ld_dword@rv+2,?_ld_dword+2
 31531   018A5C  C50D  F504         	movff	ld_dword@rv+3,?_ld_dword+3
 31532                           
 31533                           ; BSR set to: 6
 31534   018A60  0012               	return		;funcret
 31535   018A62                     __end_of_ld_dword:
 31536                           	callstack 0
 31537                           
 31538 ;; *************** function _clst2sect *****************
 31539 ;; Defined at:
 31540 ;;		line 1144 in file "fatfs/ff.c"
 31541 ;; Parameters:    Size  Location     Type
 31542 ;;  fs              2   12[COMRAM] PTR struct .
 31543 ;;		 -> fs(560), NULL(0), 
 31544 ;;  clst            4   14[COMRAM] unsigned long 
 31545 ;; Auto vars:     Size  Location     Type
 31546 ;;		None
 31547 ;; Return value:  Size  Location     Type
 31548 ;;                  4   12[COMRAM] unsigned long 
 31549 ;; Registers used:
 31550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31551 ;; Tracked objects:
 31552 ;;		On entry : 3C/6
 31553 ;;		On exit  : 3C/4
 31554 ;;		Unchanged: 3C/0
 31555 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31556 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31558 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31559 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31560 ;;Total ram usage:       12 bytes
 31561 ;; Hardware stack levels used: 1
 31562 ;; Hardware stack levels required when called: 1
 31563 ;; This function calls:
 31564 ;;		___lmul
 31565 ;; This function is called by:
 31566 ;;		_dir_clear
 31567 ;;		_dir_sdi
 31568 ;;		_dir_next
 31569 ;;		_f_open
 31570 ;;		_f_read
 31571 ;;		_f_write
 31572 ;;		_f_lseek
 31573 ;; This function uses a non-reentrant model
 31574 ;;
 31575                           
 31576                           	psect	text66
 31577   018774                     __ptext66:
 31578                           	callstack 0
 31579   018774                     _clst2sect:
 31580                           	callstack 122
 31581                           
 31582                           ;fatfs/ff.c: 1145:  FATFS* fs,;fatfs/ff.c: 1146:  DWORD clst;fatfs/ff.c: 1148: {;fatfs/f
      +                          f.c: 1149:  clst -= 2;
 31583                           
 31584                           ; BSR set to: 6
 31585                           ;incstack = 0
 31586   018774  0E02               	movlw	2
 31587   018776  5E0F               	subwf	clst2sect@clst^(0+1280),f,c
 31588   018778  0E00               	movlw	0
 31589   01877A  5A10               	subwfb	(clst2sect@clst+1)^(0+1280),f,c
 31590   01877C  5A11               	subwfb	(clst2sect@clst+2)^(0+1280),f,c
 31591   01877E  5A12               	subwfb	(clst2sect@clst+3)^(0+1280),f,c
 31592                           
 31593                           ;fatfs/ff.c: 1150:  if (clst >= fs->n_fatent - 2) return 0;
 31594   018780  EE20 F014          	lfsr	2,20
 31595   018784  500D               	movf	clst2sect@fs^(0+1280),w,c
 31596   018786  26D9               	addwf	fsr2l,f,c
 31597   018788  500E               	movf	(clst2sect@fs+1)^(0+1280),w,c
 31598   01878A  22DA               	addwfc	fsr2h,f,c
 31599   01878C  0EFE               	movlw	254
 31600   01878E  24DE               	addwf	postinc2,w,c
 31601   018790  6E13               	movwf	??_clst2sect^(0+1280),c
 31602   018792  0EFF               	movlw	255
 31603   018794  20DE               	addwfc	postinc2,w,c
 31604   018796  6E14               	movwf	(??_clst2sect+1)^(0+1280),c
 31605   018798  0EFF               	movlw	255
 31606   01879A  20DE               	addwfc	postinc2,w,c
 31607   01879C  6E15               	movwf	(??_clst2sect+2)^(0+1280),c
 31608   01879E  0EFF               	movlw	255
 31609   0187A0  20DE               	addwfc	postinc2,w,c
 31610   0187A2  6E16               	movwf	(??_clst2sect+3)^(0+1280),c
 31611   0187A4  5013               	movf	??_clst2sect^(0+1280),w,c
 31612   0187A6  5C0F               	subwf	clst2sect@clst^(0+1280),w,c
 31613   0187A8  5014               	movf	(??_clst2sect+1)^(0+1280),w,c
 31614   0187AA  5810               	subwfb	(clst2sect@clst+1)^(0+1280),w,c
 31615   0187AC  5015               	movf	(??_clst2sect+2)^(0+1280),w,c
 31616   0187AE  5811               	subwfb	(clst2sect@clst+2)^(0+1280),w,c
 31617   0187B0  5016               	movf	(??_clst2sect+3)^(0+1280),w,c
 31618   0187B2  5812               	subwfb	(clst2sect@clst+3)^(0+1280),w,c
 31619   0187B4  A0D8               	btfss	status,0,c
 31620   0187B6  D009               	goto	l9867
 31621   0187B8  0E00               	movlw	0
 31622   0187BA  6E0D               	movwf	?_clst2sect^(0+1280),c
 31623   0187BC  0E00               	movlw	0
 31624   0187BE  6E0E               	movwf	(?_clst2sect+1)^(0+1280),c
 31625   0187C0  0E00               	movlw	0
 31626   0187C2  6E0F               	movwf	(?_clst2sect+2)^(0+1280),c
 31627   0187C4  0E00               	movlw	0
 31628   0187C6  6E10               	movwf	(?_clst2sect+3)^(0+1280),c
 31629   0187C8  0012               	return	
 31630   0187CA                     l9867:
 31631                           
 31632                           ;fatfs/ff.c: 1151:  return fs->database + (LBA_t)fs->csize * clst;
 31633   0187CA  EE20 F028          	lfsr	2,40
 31634   0187CE  500D               	movf	clst2sect@fs^(0+1280),w,c
 31635   0187D0  26D9               	addwf	fsr2l,f,c
 31636   0187D2  500E               	movf	(clst2sect@fs+1)^(0+1280),w,c
 31637   0187D4  22DA               	addwfc	fsr2h,f,c
 31638   0187D6  C4DE F513          	movff	postinc2,??_clst2sect
 31639   0187DA  C4DE F514          	movff	postinc2,??_clst2sect+1
 31640   0187DE  C4DE F515          	movff	postinc2,??_clst2sect+2
 31641   0187E2  C4DE F516          	movff	postinc2,??_clst2sect+3
 31642   0187E6  EE20 F00A          	lfsr	2,10
 31643   0187EA  500D               	movf	clst2sect@fs^(0+1280),w,c
 31644   0187EC  26D9               	addwf	fsr2l,f,c
 31645   0187EE  500E               	movf	(clst2sect@fs+1)^(0+1280),w,c
 31646   0187F0  22DA               	addwfc	fsr2h,f,c
 31647   0187F2  C4DE F517          	movff	postinc2,??_clst2sect+4
 31648   0187F6  C4DD F518          	movff	postdec2,??_clst2sect+5
 31649   0187FA  C517  F501         	movff	??_clst2sect+4,___lmul@multiplier
 31650   0187FE  C518  F502         	movff	??_clst2sect+5,___lmul@multiplier+1
 31651   018802  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 31652   018804  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 31653   018806  C50F  F505         	movff	clst2sect@clst,___lmul@multiplicand
 31654   01880A  C510  F506         	movff	clst2sect@clst+1,___lmul@multiplicand+1
 31655   01880E  C511  F507         	movff	clst2sect@clst+2,___lmul@multiplicand+2
 31656   018812  C512  F508         	movff	clst2sect@clst+3,___lmul@multiplicand+3
 31657   018816  EC2F  F0CC         	call	___lmul	;wreg free
 31658   01881A  5013               	movf	??_clst2sect^(0+1280),w,c
 31659   01881C  2401               	addwf	?___lmul^(0+1280),w,c
 31660   01881E  6E0D               	movwf	?_clst2sect^(0+1280),c
 31661   018820  5014               	movf	(??_clst2sect+1)^(0+1280),w,c
 31662   018822  2002               	addwfc	(?___lmul+1)^(0+1280),w,c
 31663   018824  6E0E               	movwf	(?_clst2sect+1)^(0+1280),c
 31664   018826  5015               	movf	(??_clst2sect+2)^(0+1280),w,c
 31665   018828  2003               	addwfc	(?___lmul+2)^(0+1280),w,c
 31666   01882A  6E0F               	movwf	(?_clst2sect+2)^(0+1280),c
 31667   01882C  5016               	movf	(??_clst2sect+3)^(0+1280),w,c
 31668   01882E  2004               	addwfc	(?___lmul+3)^(0+1280),w,c
 31669   018830  6E10               	movwf	(?_clst2sect+3)^(0+1280),c
 31670   018832  0012               	return		;funcret
 31671   018834                     __end_of_clst2sect:
 31672                           	callstack 0
 31673                           
 31674 ;; *************** function ___lmul *****************
 31675 ;; Defined at:
 31676 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 31677 ;; Parameters:    Size  Location     Type
 31678 ;;  multiplier      4    0[COMRAM] unsigned long 
 31679 ;;  multiplicand    4    4[COMRAM] unsigned long 
 31680 ;; Auto vars:     Size  Location     Type
 31681 ;;  product         4    8[COMRAM] unsigned long 
 31682 ;; Return value:  Size  Location     Type
 31683 ;;                  4    0[COMRAM] unsigned long 
 31684 ;; Registers used:
 31685 ;;		wreg, status,2, status,0
 31686 ;; Tracked objects:
 31687 ;;		On entry : 3C/4
 31688 ;;		On exit  : 3C/4
 31689 ;;		Unchanged: 3C/0
 31690 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31691 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31692 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31694 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31695 ;;Total ram usage:       12 bytes
 31696 ;; Hardware stack levels used: 1
 31697 ;; This function calls:
 31698 ;;		Nothing
 31699 ;; This function is called by:
 31700 ;;		_clst2sect
 31701 ;;		_mount_volume
 31702 ;;		_main
 31703 ;; This function uses a non-reentrant model
 31704 ;;
 31705                           
 31706                           	psect	text67
 31707   01985E                     __ptext67:
 31708                           	callstack 0
 31709   01985E                     ___lmul:
 31710                           	callstack 122
 31711                           
 31712                           ;incstack = 0
 31713   01985E  0E00               	movlw	0
 31714   019860  6E09               	movwf	___lmul@product^(0+1280),c
 31715   019862  0E00               	movlw	0
 31716   019864  6E0A               	movwf	(___lmul@product+1)^(0+1280),c
 31717   019866  0E00               	movlw	0
 31718   019868  6E0B               	movwf	(___lmul@product+2)^(0+1280),c
 31719   01986A  0E00               	movlw	0
 31720   01986C  6E0C               	movwf	(___lmul@product+3)^(0+1280),c
 31721   01986E                     l9843:
 31722   01986E  A001               	btfss	___lmul@multiplier^(0+1280),0,c
 31723   019870  D008               	goto	l9847
 31724   019872  5005               	movf	___lmul@multiplicand^(0+1280),w,c
 31725   019874  2609               	addwf	___lmul@product^(0+1280),f,c
 31726   019876  5006               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 31727   019878  220A               	addwfc	(___lmul@product+1)^(0+1280),f,c
 31728   01987A  5007               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 31729   01987C  220B               	addwfc	(___lmul@product+2)^(0+1280),f,c
 31730   01987E  5008               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 31731   019880  220C               	addwfc	(___lmul@product+3)^(0+1280),f,c
 31732   019882                     l9847:
 31733   019882  90D8               	bcf	status,0,c
 31734   019884  3605               	rlcf	___lmul@multiplicand^(0+1280),f,c
 31735   019886  3606               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 31736   019888  3607               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 31737   01988A  3608               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 31738   01988C  90D8               	bcf	status,0,c
 31739   01988E  3204               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 31740   019890  3203               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 31741   019892  3202               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 31742   019894  3201               	rrcf	___lmul@multiplier^(0+1280),f,c
 31743   019896  5001               	movf	___lmul@multiplier^(0+1280),w,c
 31744   019898  1002               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 31745   01989A  1003               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 31746   01989C  1004               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 31747   01989E  A4D8               	btfss	status,2,c
 31748   0198A0  D7E6               	goto	l9843
 31749   0198A2  C509  F501         	movff	___lmul@product,?___lmul
 31750   0198A6  C50A  F502         	movff	___lmul@product+1,?___lmul+1
 31751   0198AA  C50B  F503         	movff	___lmul@product+2,?___lmul+2
 31752   0198AE  C50C  F504         	movff	___lmul@product+3,?___lmul+3
 31753   0198B2  0012               	return		;funcret
 31754   0198B4                     __end_of___lmul:
 31755                           	callstack 0
 31756                           
 31757 ;; *************** function ___lldiv *****************
 31758 ;; Defined at:
 31759 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 31760 ;; Parameters:    Size  Location     Type
 31761 ;;  dividend        4    0[COMRAM] unsigned long 
 31762 ;;  divisor         4    4[COMRAM] unsigned long 
 31763 ;; Auto vars:     Size  Location     Type
 31764 ;;  quotient        4    8[COMRAM] unsigned long 
 31765 ;;  counter         1   12[COMRAM] unsigned char 
 31766 ;; Return value:  Size  Location     Type
 31767 ;;                  4    0[COMRAM] unsigned long 
 31768 ;; Registers used:
 31769 ;;		wreg, status,2, status,0
 31770 ;; Tracked objects:
 31771 ;;		On entry : 3F/6
 31772 ;;		On exit  : 3F/6
 31773 ;;		Unchanged: 3F/0
 31774 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31775 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31776 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31778 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31779 ;;Total ram usage:       13 bytes
 31780 ;; Hardware stack levels used: 1
 31781 ;; This function calls:
 31782 ;;		Nothing
 31783 ;; This function is called by:
 31784 ;;		_mount_volume
 31785 ;;		_f_lseek
 31786 ;; This function uses a non-reentrant model
 31787 ;;
 31788                           
 31789                           	psect	text68
 31790   019322                     __ptext68:
 31791                           	callstack 0
 31792   019322                     ___lldiv:
 31793                           	callstack 123
 31794                           
 31795                           ; BSR set to: 6
 31796                           
 31797                           ;incstack = 0
 31798   019322  0E00               	movlw	0
 31799   019324  6E09               	movwf	___lldiv@quotient^(0+1280),c
 31800   019326  0E00               	movlw	0
 31801   019328  6E0A               	movwf	(___lldiv@quotient+1)^(0+1280),c
 31802   01932A  0E00               	movlw	0
 31803   01932C  6E0B               	movwf	(___lldiv@quotient+2)^(0+1280),c
 31804   01932E  0E00               	movlw	0
 31805   019330  6E0C               	movwf	(___lldiv@quotient+3)^(0+1280),c
 31806                           
 31807                           ; BSR set to: 6
 31808   019332  5005               	movf	___lldiv@divisor^(0+1280),w,c
 31809   019334  1006               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 31810   019336  1007               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 31811   019338  1008               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 31812   01933A  B4D8               	btfsc	status,2,c
 31813   01933C  D02A               	goto	l1741
 31814                           
 31815                           ; BSR set to: 6
 31816   01933E  0E01               	movlw	1
 31817   019340  6E0D               	movwf	___lldiv@counter^(0+1280),c
 31818   019342  D006               	goto	l10857
 31819   019344                     l10855:
 31820                           
 31821                           ; BSR set to: 6
 31822   019344  90D8               	bcf	status,0,c
 31823   019346  3605               	rlcf	___lldiv@divisor^(0+1280),f,c
 31824   019348  3606               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 31825   01934A  3607               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 31826   01934C  3608               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 31827   01934E  2A0D               	incf	___lldiv@counter^(0+1280),f,c
 31828   019350                     l10857:
 31829                           
 31830                           ; BSR set to: 6
 31831   019350  AE08               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 31832   019352  D7F8               	goto	l10855
 31833   019354                     u13340:
 31834                           
 31835                           ; BSR set to: 6
 31836   019354  90D8               	bcf	status,0,c
 31837   019356  3609               	rlcf	___lldiv@quotient^(0+1280),f,c
 31838   019358  360A               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 31839   01935A  360B               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 31840   01935C  360C               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 31841                           
 31842                           ; BSR set to: 6
 31843   01935E  5005               	movf	___lldiv@divisor^(0+1280),w,c
 31844   019360  5C01               	subwf	___lldiv@dividend^(0+1280),w,c
 31845   019362  5006               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 31846   019364  5802               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 31847   019366  5007               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 31848   019368  5803               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 31849   01936A  5008               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 31850   01936C  5804               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 31851   01936E  A0D8               	btfss	status,0,c
 31852   019370  D009               	goto	l10867
 31853                           
 31854                           ; BSR set to: 6
 31855   019372  5005               	movf	___lldiv@divisor^(0+1280),w,c
 31856   019374  5E01               	subwf	___lldiv@dividend^(0+1280),f,c
 31857   019376  5006               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 31858   019378  5A02               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 31859   01937A  5007               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 31860   01937C  5A03               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 31861   01937E  5008               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 31862   019380  5A04               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 31863                           
 31864                           ; BSR set to: 6
 31865   019382  8009               	bsf	___lldiv@quotient^(0+1280),0,c
 31866   019384                     l10867:
 31867                           
 31868                           ; BSR set to: 6
 31869   019384  90D8               	bcf	status,0,c
 31870   019386  3208               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 31871   019388  3207               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 31872   01938A  3206               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 31873   01938C  3205               	rrcf	___lldiv@divisor^(0+1280),f,c
 31874                           
 31875                           ; BSR set to: 6
 31876   01938E  2E0D               	decfsz	___lldiv@counter^(0+1280),f,c
 31877   019390  D7E1               	goto	u13340
 31878   019392                     l1741:
 31879                           
 31880                           ; BSR set to: 6
 31881   019392  C509  F501         	movff	___lldiv@quotient,?___lldiv
 31882   019396  C50A  F502         	movff	___lldiv@quotient+1,?___lldiv+1
 31883   01939A  C50B  F503         	movff	___lldiv@quotient+2,?___lldiv+2
 31884   01939E  C50C  F504         	movff	___lldiv@quotient+3,?___lldiv+3
 31885                           
 31886                           ; BSR set to: 6
 31887   0193A2  0012               	return		;funcret
 31888   0193A4                     __end_of___lldiv:
 31889                           	callstack 0
 31890                           
 31891 ;; *************** function _emuz80_57q_write_to_sram *****************
 31892 ;; Defined at:
 31893 ;;		line 164 in file "src/boards/SBC8080-57Q.c"
 31894 ;; Parameters:    Size  Location     Type
 31895 ;;  addr            2    0[COMRAM] unsigned short 
 31896 ;;  buf             2    2[COMRAM] PTR unsigned char 
 31897 ;;		 -> bios(1334), bdosccp(5683), rom(842), disk_buf(128), 
 31898 ;;		 -> tmp_buf(512), 
 31899 ;;  len             2    4[COMRAM] unsigned int 
 31900 ;; Auto vars:     Size  Location     Type
 31901 ;;  ab              2   10[COMRAM] struct address_bus_u
 31902 ;;  i               2    8[COMRAM] unsigned int 
 31903 ;; Return value:  Size  Location     Type
 31904 ;;                  1    wreg      void 
 31905 ;; Registers used:
 31906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 31907 ;; Tracked objects:
 31908 ;;		On entry : 38/7
 31909 ;;		On exit  : 0/0
 31910 ;;		Unchanged: 0/0
 31911 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31912 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31913 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31915 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31916 ;;Total ram usage:       12 bytes
 31917 ;; Hardware stack levels used: 1
 31918 ;; This function calls:
 31919 ;;		Nothing
 31920 ;; This function is called by:
 31921 ;;		_mem_init
 31922 ;;		_disk_io_handle
 31923 ;;		_main
 31924 ;; This function uses a non-reentrant model
 31925 ;;
 31926                           
 31927                           	psect	text69
 31928   019492                     __ptext69:
 31929                           	callstack 0
 31930   019492                     _emuz80_57q_write_to_sram:
 31931                           	callstack 125
 31932                           
 31933                           ;src/boards/SBC8080-57Q.c: 164: void emuz80_57q_write_to_sram(uint16_t addr, uint8_t *bu
      +                          f, unsigned int len);src/boards/SBC8080-57Q.c: 165: {;src/boards/SBC8080-57Q.c: 166:  un
      +                          ion address_bus_u ab;;src/boards/SBC8080-57Q.c: 167:  unsigned int i;;src/boards/SBC8080
      +                          -57Q.c: 169:  ab.w = addr;
 31934                           
 31935                           ; BSR set to: 6
 31936                           ;incstack = 0
 31937   019492  C501  F50B         	movff	emuz80_57q_write_to_sram@addr,emuz80_57q_write_to_sram@ab
 31938   019496  C502  F50C         	movff	emuz80_57q_write_to_sram@addr+1,emuz80_57q_write_to_sram@ab+1
 31939                           
 31940                           ;src/boards/SBC8080-57Q.c: 170:  LATD = ab.h;
 31941   01949A  C50C  F4C1         	movff	emuz80_57q_write_to_sram@ab+1,1217	;volatile
 31942                           
 31943                           ;src/boards/SBC8080-57Q.c: 171:  LATB = ab.l;
 31944   01949E  C50B  F4BF         	movff	emuz80_57q_write_to_sram@ab,1215	;volatile
 31945                           
 31946                           ;src/boards/SBC8080-57Q.c: 172:  TRISF = 0x00;
 31947   0194A2  0E00               	movlw	0
 31948   0194A4  6ECB               	movwf	203,c	;volatile
 31949                           
 31950                           ;src/boards/SBC8080-57Q.c: 173:  for(i = 0; i < len; i++) {
 31951   0194A6  0E00               	movlw	0
 31952   0194A8  6E0A               	movwf	(emuz80_57q_write_to_sram@i+1)^(0+1280),c
 31953   0194AA  0E00               	movlw	0
 31954   0194AC  6E09               	movwf	emuz80_57q_write_to_sram@i^(0+1280),c
 31955   0194AE  D025               	goto	l12241
 31956   0194B0                     l1354:
 31957                           
 31958                           ;src/boards/SBC8080-57Q.c: 174:   LATC5 = 0;
 31959   0194B0  9AC0               	bcf	1216,5,c	;volatile
 31960                           
 31961                           ;src/boards/SBC8080-57Q.c: 175:   LATF = ((uint8_t*)buf)[i];
 31962   0194B2  5009               	movf	emuz80_57q_write_to_sram@i^(0+1280),w,c
 31963   0194B4  2403               	addwf	emuz80_57q_write_to_sram@buf^(0+1280),w,c
 31964   0194B6  6E07               	movwf	??_emuz80_57q_write_to_sram^(0+1280),c
 31965   0194B8  500A               	movf	(emuz80_57q_write_to_sram@i+1)^(0+1280),w,c
 31966   0194BA  2004               	addwfc	(emuz80_57q_write_to_sram@buf+1)^(0+1280),w,c
 31967   0194BC  6E08               	movwf	(??_emuz80_57q_write_to_sram+1)^(0+1280),c
 31968   0194BE  C507  F4F6         	movff	??_emuz80_57q_write_to_sram,tblptrl
 31969   0194C2  C508  F4F7         	movff	??_emuz80_57q_write_to_sram+1,tblptrh
 31970   0194C6  0E00               	movlw	low (__mediumconst shr (0+16))
 31971   0194C8  6EF8               	movwf	tblptru,c
 31972   0194CA  0E24               	movlw	(high __ramtop+-1)
 31973   0194CC  64F7               	cpfsgt	tblptrh,c
 31974   0194CE  D003               	bra	u15727
 31975   0194D0  0008               	tblrd		*
 31976   0194D2  50F5               	movf	tablat,w,c
 31977   0194D4  D005               	bra	u15720
 31978   0194D6                     u15727:
 31979   0194D6  C4F6 F4E9          	movff	tblptrl,fsr0l
 31980   0194DA  C4F7 F4EA          	movff	tblptrh,fsr0h
 31981   0194DE  50EF               	movf	indf0,w,c
 31982   0194E0                     u15720:
 31983   0194E0  6EC3               	movwf	195,c	;volatile
 31984                           
 31985                           ;src/boards/SBC8080-57Q.c: 176:   LATC5 = 1;
 31986   0194E2  8AC0               	bsf	1216,5,c	;volatile
 31987                           
 31988                           ;src/boards/SBC8080-57Q.c: 177:   LATB = ++ab.l;
 31989   0194E4  2A0B               	incf	emuz80_57q_write_to_sram@ab^(0+1280),f,c
 31990   0194E6  C50B  F4BF         	movff	emuz80_57q_write_to_sram@ab,1215	;volatile
 31991                           
 31992                           ;src/boards/SBC8080-57Q.c: 178:   if (ab.l == 0) {
 31993   0194EA  500B               	movf	emuz80_57q_write_to_sram@ab^(0+1280),w,c
 31994   0194EC  A4D8               	btfss	status,2,c
 31995   0194EE  D003               	goto	l1355
 31996                           
 31997                           ;src/boards/SBC8080-57Q.c: 179:    ab.h++;
 31998   0194F0  2A0C               	incf	(emuz80_57q_write_to_sram@ab+1)^(0+1280),f,c
 31999                           
 32000                           ;src/boards/SBC8080-57Q.c: 180:    LATD = ab.h;
 32001   0194F2  C50C  F4C1         	movff	emuz80_57q_write_to_sram@ab+1,1217	;volatile
 32002   0194F6                     l1355:
 32003                           
 32004                           ;src/boards/SBC8080-57Q.c: 182:  }
 32005   0194F6  4A09               	infsnz	emuz80_57q_write_to_sram@i^(0+1280),f,c
 32006   0194F8  2A0A               	incf	(emuz80_57q_write_to_sram@i+1)^(0+1280),f,c
 32007   0194FA                     l12241:
 32008   0194FA  5005               	movf	emuz80_57q_write_to_sram@len^(0+1280),w,c
 32009   0194FC  5C09               	subwf	emuz80_57q_write_to_sram@i^(0+1280),w,c
 32010   0194FE  5006               	movf	(emuz80_57q_write_to_sram@len+1)^(0+1280),w,c
 32011   019500  580A               	subwfb	(emuz80_57q_write_to_sram@i+1)^(0+1280),w,c
 32012   019502  B0D8               	btfsc	status,0,c
 32013   019504  0012               	return	
 32014   019506  D7D4               	goto	l1354
 32015   019508                     __end_of_emuz80_57q_write_to_sram:
 32016                           	callstack 0
 32017                           
 32018 ;; *************** function _emuz80_57q_read_from_sram *****************
 32019 ;; Defined at:
 32020 ;;		line 185 in file "src/boards/SBC8080-57Q.c"
 32021 ;; Parameters:    Size  Location     Type
 32022 ;;  addr            2    0[COMRAM] unsigned short 
 32023 ;;  buf             2    2[COMRAM] PTR unsigned char 
 32024 ;;		 -> disk_buf(128), tmp_buf(512), 
 32025 ;;  len             2    4[COMRAM] unsigned int 
 32026 ;; Auto vars:     Size  Location     Type
 32027 ;;  ab              2    8[COMRAM] struct address_bus_u
 32028 ;;  i               2    6[COMRAM] unsigned int 
 32029 ;; Return value:  Size  Location     Type
 32030 ;;                  1    wreg      void 
 32031 ;; Registers used:
 32032 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32033 ;; Tracked objects:
 32034 ;;		On entry : 0/5
 32035 ;;		On exit  : 0/0
 32036 ;;		Unchanged: 0/0
 32037 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32038 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32039 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32041 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32042 ;;Total ram usage:       10 bytes
 32043 ;; Hardware stack levels used: 1
 32044 ;; This function calls:
 32045 ;;		Nothing
 32046 ;; This function is called by:
 32047 ;;		_mem_init
 32048 ;;		_disk_io_handle
 32049 ;; This function uses a non-reentrant model
 32050 ;;
 32051                           
 32052                           	psect	text70
 32053   0198B4                     __ptext70:
 32054                           	callstack 0
 32055   0198B4                     _emuz80_57q_read_from_sram:
 32056                           	callstack 125
 32057                           
 32058                           ;src/boards/SBC8080-57Q.c: 185: void emuz80_57q_read_from_sram(uint16_t addr, uint8_t *b
      +                          uf, unsigned int len);src/boards/SBC8080-57Q.c: 186: {;src/boards/SBC8080-57Q.c: 187:  u
      +                          nion address_bus_u ab;;src/boards/SBC8080-57Q.c: 188:  unsigned int i;;src/boards/SBC808
      +                          0-57Q.c: 190:  ab.w = addr;
 32059                           
 32060                           ;incstack = 0
 32061   0198B4  C501  F509         	movff	emuz80_57q_read_from_sram@addr,emuz80_57q_read_from_sram@ab
 32062   0198B8  C502  F50A         	movff	emuz80_57q_read_from_sram@addr+1,emuz80_57q_read_from_sram@ab+1
 32063                           
 32064                           ;src/boards/SBC8080-57Q.c: 191:  LATD = ab.h;
 32065   0198BC  C50A  F4C1         	movff	emuz80_57q_read_from_sram@ab+1,1217	;volatile
 32066                           
 32067                           ;src/boards/SBC8080-57Q.c: 192:  LATB = ab.l;
 32068   0198C0  C509  F4BF         	movff	emuz80_57q_read_from_sram@ab,1215	;volatile
 32069                           
 32070                           ;src/boards/SBC8080-57Q.c: 193:  TRISF = 0xff;
 32071   0198C4  68CB               	setf	203,c	;volatile
 32072                           
 32073                           ;src/boards/SBC8080-57Q.c: 194:  for(i = 0; i < len; i++) {
 32074   0198C6  0E00               	movlw	0
 32075   0198C8  6E08               	movwf	(emuz80_57q_read_from_sram@i+1)^(0+1280),c
 32076   0198CA  0E00               	movlw	0
 32077   0198CC  6E07               	movwf	emuz80_57q_read_from_sram@i^(0+1280),c
 32078   0198CE  D015               	goto	l12259
 32079   0198D0                     l1361:
 32080                           
 32081                           ;src/boards/SBC8080-57Q.c: 195:   LATA5 = 0;
 32082   0198D0  9ABE               	bcf	1214,5,c	;volatile
 32083                           
 32084                           ;src/boards/SBC8080-57Q.c: 196:   ((uint8_t*)buf)[i] = PORTF;
 32085   0198D2  5007               	movf	emuz80_57q_read_from_sram@i^(0+1280),w,c
 32086   0198D4  2403               	addwf	emuz80_57q_read_from_sram@buf^(0+1280),w,c
 32087   0198D6  6ED9               	movwf	fsr2l,c
 32088   0198D8  5008               	movf	(emuz80_57q_read_from_sram@i+1)^(0+1280),w,c
 32089   0198DA  2004               	addwfc	(emuz80_57q_read_from_sram@buf+1)^(0+1280),w,c
 32090   0198DC  6EDA               	movwf	fsr2h,c
 32091   0198DE  C4D3 F4DF          	movff	1235,indf2	;volatile
 32092                           
 32093                           ;src/boards/SBC8080-57Q.c: 197:   LATA5 = 1;
 32094   0198E2  8ABE               	bsf	1214,5,c	;volatile
 32095                           
 32096                           ;src/boards/SBC8080-57Q.c: 198:   LATB = ++ab.l;
 32097   0198E4  2A09               	incf	emuz80_57q_read_from_sram@ab^(0+1280),f,c
 32098   0198E6  C509  F4BF         	movff	emuz80_57q_read_from_sram@ab,1215	;volatile
 32099                           
 32100                           ;src/boards/SBC8080-57Q.c: 199:   if (ab.l == 0) {
 32101   0198EA  5009               	movf	emuz80_57q_read_from_sram@ab^(0+1280),w,c
 32102   0198EC  A4D8               	btfss	status,2,c
 32103   0198EE  D003               	goto	l1362
 32104                           
 32105                           ;src/boards/SBC8080-57Q.c: 200:    ab.h++;
 32106   0198F0  2A0A               	incf	(emuz80_57q_read_from_sram@ab+1)^(0+1280),f,c
 32107                           
 32108                           ;src/boards/SBC8080-57Q.c: 201:    LATD = ab.h;
 32109   0198F2  C50A  F4C1         	movff	emuz80_57q_read_from_sram@ab+1,1217	;volatile
 32110   0198F6                     l1362:
 32111                           
 32112                           ;src/boards/SBC8080-57Q.c: 203:  }
 32113   0198F6  4A07               	infsnz	emuz80_57q_read_from_sram@i^(0+1280),f,c
 32114   0198F8  2A08               	incf	(emuz80_57q_read_from_sram@i+1)^(0+1280),f,c
 32115   0198FA                     l12259:
 32116   0198FA  5005               	movf	emuz80_57q_read_from_sram@len^(0+1280),w,c
 32117   0198FC  5C07               	subwf	emuz80_57q_read_from_sram@i^(0+1280),w,c
 32118   0198FE  5006               	movf	(emuz80_57q_read_from_sram@len+1)^(0+1280),w,c
 32119   019900  5808               	subwfb	(emuz80_57q_read_from_sram@i+1)^(0+1280),w,c
 32120   019902  B0D8               	btfsc	status,0,c
 32121   019904  0012               	return	
 32122   019906  D7E4               	goto	l1361
 32123   019908                     __end_of_emuz80_57q_read_from_sram:
 32124                           	callstack 0
 32125                           
 32126 ;; *************** function _emuz80_57q_get_from_sram *****************
 32127 ;; Defined at:
 32128 ;;		line 148 in file "src/boards/SBC8080-57Q.c"
 32129 ;; Parameters:    Size  Location     Type
 32130 ;;  addr            2    0[COMRAM] unsigned short 
 32131 ;; Auto vars:     Size  Location     Type
 32132 ;;  ab              2    3[COMRAM] struct address_bus_u
 32133 ;;  ret_val         1    2[COMRAM] unsigned char 
 32134 ;; Return value:  Size  Location     Type
 32135 ;;                  1    wreg      unsigned char 
 32136 ;; Registers used:
 32137 ;;		wreg, status,2
 32138 ;; Tracked objects:
 32139 ;;		On entry : 38/0
 32140 ;;		On exit  : 0/0
 32141 ;;		Unchanged: 0/0
 32142 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32144 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32146 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32147 ;;Total ram usage:        5 bytes
 32148 ;; Hardware stack levels used: 1
 32149 ;; This function calls:
 32150 ;;		Nothing
 32151 ;; This function is called by:
 32152 ;;		_disk_io_handle
 32153 ;; This function uses a non-reentrant model
 32154 ;;
 32155                           
 32156                           	psect	text71
 32157   019F74                     __ptext71:
 32158                           	callstack 0
 32159   019F74                     _emuz80_57q_get_from_sram:
 32160                           	callstack 125
 32161                           
 32162                           ;src/boards/SBC8080-57Q.c: 148: uint8_t emuz80_57q_get_from_sram(uint16_t addr);src/boar
      +                          ds/SBC8080-57Q.c: 149: {;src/boards/SBC8080-57Q.c: 150:  union address_bus_u ab;;src/boa
      +                          rds/SBC8080-57Q.c: 151:  uint8_t ret_val;;src/boards/SBC8080-57Q.c: 153:  ab.w = addr;
 32163                           
 32164                           ;incstack = 0
 32165   019F74  C501  F504         	movff	emuz80_57q_get_from_sram@addr,emuz80_57q_get_from_sram@ab
 32166   019F78  C502  F505         	movff	emuz80_57q_get_from_sram@addr+1,emuz80_57q_get_from_sram@ab+1
 32167                           
 32168                           ;src/boards/SBC8080-57Q.c: 154:  LATD = ab.h;
 32169   019F7C  C505  F4C1         	movff	emuz80_57q_get_from_sram@ab+1,1217	;volatile
 32170                           
 32171                           ;src/boards/SBC8080-57Q.c: 155:  LATB = ab.l;
 32172   019F80  C504  F4BF         	movff	emuz80_57q_get_from_sram@ab,1215	;volatile
 32173                           
 32174                           ;src/boards/SBC8080-57Q.c: 156:  LATA5 = 0;
 32175   019F84  9ABE               	bcf	1214,5,c	;volatile
 32176                           
 32177                           ;src/boards/SBC8080-57Q.c: 157:  __nop();
 32178   019F86  0000               	nop	
 32179                           
 32180                           ;src/boards/SBC8080-57Q.c: 158:  __nop();
 32181   019F88  0000               	nop	
 32182                           
 32183                           ;src/boards/SBC8080-57Q.c: 159:  ret_val = PORTF;
 32184   019F8A  C4D3 F503          	movff	1235,emuz80_57q_get_from_sram@ret_val	;volatile
 32185                           
 32186                           ;src/boards/SBC8080-57Q.c: 160:  LATA5 = 1;
 32187   019F8E  8ABE               	bsf	1214,5,c	;volatile
 32188                           
 32189                           ;src/boards/SBC8080-57Q.c: 161:  return ret_val;
 32190   019F90  5003               	movf	emuz80_57q_get_from_sram@ret_val^(0+1280),w,c
 32191   019F92  0012               	return		;funcret
 32192   019F94                     __end_of_emuz80_57q_get_from_sram:
 32193                           	callstack 0
 32194                           
 32195 ;; *************** function ___xxtofl *****************
 32196 ;; Defined at:
 32197 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 32198 ;; Parameters:    Size  Location     Type
 32199 ;;  sign            1    wreg     unsigned char 
 32200 ;;  val             4   12[COMRAM] long 
 32201 ;; Auto vars:     Size  Location     Type
 32202 ;;  sign            1   20[COMRAM] unsigned char 
 32203 ;;  arg             4   22[COMRAM] unsigned long 
 32204 ;;  exp             1   21[COMRAM] unsigned char 
 32205 ;; Return value:  Size  Location     Type
 32206 ;;                  4   12[COMRAM] unsigned char 
 32207 ;; Registers used:
 32208 ;;		wreg, status,2, status,0
 32209 ;; Tracked objects:
 32210 ;;		On entry : 3C/4
 32211 ;;		On exit  : 0/0
 32212 ;;		Unchanged: 0/0
 32213 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32215 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32216 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32217 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32218 ;;Total ram usage:       14 bytes
 32219 ;; Hardware stack levels used: 1
 32220 ;; This function calls:
 32221 ;;		Nothing
 32222 ;; This function is called by:
 32223 ;;		_main
 32224 ;; This function uses a non-reentrant model
 32225 ;;
 32226                           
 32227                           	psect	text72
 32228   0173FA                     __ptext72:
 32229                           	callstack 0
 32230   0173FA                     ___xxtofl:
 32231                           	callstack 126
 32232                           
 32233                           ;incstack = 0
 32234                           ;___xxtofl@sign stored from wreg
 32235   0173FA  6E15               	movwf	___xxtofl@sign^(0+1280),c
 32236   0173FC  5015               	movf	___xxtofl@sign^(0+1280),w,c
 32237   0173FE  A4D8               	btfss	status,2,c
 32238   017400  AE10               	btfss	(___xxtofl@val+3)^(0+1280),7,c
 32239   017402  D01A               	goto	l2369
 32240   017404  C50D  F511         	movff	___xxtofl@val,??___xxtofl
 32241   017408  C50E  F512         	movff	___xxtofl@val+1,??___xxtofl+1
 32242   01740C  C50F  F513         	movff	___xxtofl@val+2,??___xxtofl+2
 32243   017410  C510  F514         	movff	___xxtofl@val+3,??___xxtofl+3
 32244   017414  1E11               	comf	??___xxtofl^(0+1280),f,c
 32245   017416  1E12               	comf	(??___xxtofl+1)^(0+1280),f,c
 32246   017418  1E13               	comf	(??___xxtofl+2)^(0+1280),f,c
 32247   01741A  1E14               	comf	(??___xxtofl+3)^(0+1280),f,c
 32248   01741C  2A11               	incf	??___xxtofl^(0+1280),f,c
 32249   01741E  0E00               	movlw	0
 32250   017420  2212               	addwfc	(??___xxtofl+1)^(0+1280),f,c
 32251   017422  2213               	addwfc	(??___xxtofl+2)^(0+1280),f,c
 32252   017424  2214               	addwfc	(??___xxtofl+3)^(0+1280),f,c
 32253   017426  C511  F517         	movff	??___xxtofl,___xxtofl@arg
 32254   01742A  C512  F518         	movff	??___xxtofl+1,___xxtofl@arg+1
 32255   01742E  C513  F519         	movff	??___xxtofl+2,___xxtofl@arg+2
 32256   017432  C514  F51A         	movff	??___xxtofl+3,___xxtofl@arg+3
 32257   017436  D008               	goto	l12791
 32258   017438                     l2369:
 32259   017438  C50D  F517         	movff	___xxtofl@val,___xxtofl@arg
 32260   01743C  C50E  F518         	movff	___xxtofl@val+1,___xxtofl@arg+1
 32261   017440  C50F  F519         	movff	___xxtofl@val+2,___xxtofl@arg+2
 32262   017444  C510  F51A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 32263   017448                     l12791:
 32264   017448  500D               	movf	___xxtofl@val^(0+1280),w,c
 32265   01744A  100E               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
 32266   01744C  100F               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
 32267   01744E  1010               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
 32268   017450  A4D8               	btfss	status,2,c
 32269   017452  D009               	goto	l12797
 32270   017454  0E00               	movlw	0
 32271   017456  6E0D               	movwf	?___xxtofl^(0+1280),c
 32272   017458  0E00               	movlw	0
 32273   01745A  6E0E               	movwf	(?___xxtofl+1)^(0+1280),c
 32274   01745C  0E00               	movlw	0
 32275   01745E  6E0F               	movwf	(?___xxtofl+2)^(0+1280),c
 32276   017460  0E00               	movlw	0
 32277   017462  6E10               	movwf	(?___xxtofl+3)^(0+1280),c
 32278   017464  0012               	return	
 32279   017466                     l12797:
 32280   017466  0E96               	movlw	150
 32281   017468  6E16               	movwf	___xxtofl@exp^(0+1280),c
 32282   01746A  D006               	goto	l12801
 32283   01746C                     l12799:
 32284   01746C  2A16               	incf	___xxtofl@exp^(0+1280),f,c
 32285   01746E  90D8               	bcf	status,0,c
 32286   017470  321A               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 32287   017472  3219               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 32288   017474  3218               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 32289   017476  3217               	rrcf	___xxtofl@arg^(0+1280),f,c
 32290   017478                     l12801:
 32291   017478  0E00               	movlw	0
 32292   01747A  1417               	andwf	___xxtofl@arg^(0+1280),w,c
 32293   01747C  6E11               	movwf	??___xxtofl^(0+1280),c
 32294   01747E  0E00               	movlw	0
 32295   017480  1418               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 32296   017482  6E12               	movwf	(??___xxtofl+1)^(0+1280),c
 32297   017484  0E00               	movlw	0
 32298   017486  1419               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 32299   017488  6E13               	movwf	(??___xxtofl+2)^(0+1280),c
 32300   01748A  0EFE               	movlw	254
 32301   01748C  141A               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 32302   01748E  6E14               	movwf	(??___xxtofl+3)^(0+1280),c
 32303   017490  5011               	movf	??___xxtofl^(0+1280),w,c
 32304   017492  1012               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 32305   017494  1013               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 32306   017496  1014               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 32307   017498  B4D8               	btfsc	status,2,c
 32308   01749A  D00D               	goto	l2376
 32309   01749C  D7E7               	goto	l12799
 32310   01749E                     l12803:
 32311   01749E  2A16               	incf	___xxtofl@exp^(0+1280),f,c
 32312   0174A0  0E01               	movlw	1
 32313   0174A2  2617               	addwf	___xxtofl@arg^(0+1280),f,c
 32314   0174A4  0E00               	movlw	0
 32315   0174A6  2218               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
 32316   0174A8  2219               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
 32317   0174AA  221A               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
 32318   0174AC  90D8               	bcf	status,0,c
 32319   0174AE  321A               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 32320   0174B0  3219               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 32321   0174B2  3218               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 32322   0174B4  3217               	rrcf	___xxtofl@arg^(0+1280),f,c
 32323   0174B6                     l2376:
 32324   0174B6  0E00               	movlw	0
 32325   0174B8  1417               	andwf	___xxtofl@arg^(0+1280),w,c
 32326   0174BA  6E11               	movwf	??___xxtofl^(0+1280),c
 32327   0174BC  0E00               	movlw	0
 32328   0174BE  1418               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 32329   0174C0  6E12               	movwf	(??___xxtofl+1)^(0+1280),c
 32330   0174C2  0E00               	movlw	0
 32331   0174C4  1419               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 32332   0174C6  6E13               	movwf	(??___xxtofl+2)^(0+1280),c
 32333   0174C8  0EFF               	movlw	255
 32334   0174CA  141A               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 32335   0174CC  6E14               	movwf	(??___xxtofl+3)^(0+1280),c
 32336   0174CE  5011               	movf	??___xxtofl^(0+1280),w,c
 32337   0174D0  1012               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 32338   0174D2  1013               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 32339   0174D4  1014               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 32340   0174D6  B4D8               	btfsc	status,2,c
 32341   0174D8  D007               	goto	l12811
 32342   0174DA  D7E1               	goto	l12803
 32343   0174DC                     l12809:
 32344   0174DC  0616               	decf	___xxtofl@exp^(0+1280),f,c
 32345   0174DE  90D8               	bcf	status,0,c
 32346   0174E0  3617               	rlcf	___xxtofl@arg^(0+1280),f,c
 32347   0174E2  3618               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
 32348   0174E4  3619               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
 32349   0174E6  361A               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
 32350   0174E8                     l12811:
 32351   0174E8  BE19               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
 32352   0174EA  D003               	goto	u16410
 32353   0174EC  0E02               	movlw	2
 32354   0174EE  6016               	cpfslt	___xxtofl@exp^(0+1280),c
 32355   0174F0  D7F5               	goto	l12809
 32356   0174F2                     u16410:
 32357   0174F2  A016               	btfss	___xxtofl@exp^(0+1280),0,c
 32358   0174F4  9E19               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
 32359   0174F6  90D8               	bcf	status,0,c
 32360   0174F8  3216               	rrcf	___xxtofl@exp^(0+1280),f,c
 32361   0174FA  C516  F511         	movff	___xxtofl@exp,??___xxtofl
 32362   0174FE  6A12               	clrf	(??___xxtofl+1)^(0+1280),c
 32363   017500  6A13               	clrf	(??___xxtofl+2)^(0+1280),c
 32364   017502  6A14               	clrf	(??___xxtofl+3)^(0+1280),c
 32365   017504  C511  F514         	movff	??___xxtofl,??___xxtofl+3
 32366   017508  6A13               	clrf	(??___xxtofl+2)^(0+1280),c
 32367   01750A  6A12               	clrf	(??___xxtofl+1)^(0+1280),c
 32368   01750C  6A11               	clrf	??___xxtofl^(0+1280),c
 32369   01750E  5011               	movf	??___xxtofl^(0+1280),w,c
 32370   017510  1217               	iorwf	___xxtofl@arg^(0+1280),f,c
 32371   017512  5012               	movf	(??___xxtofl+1)^(0+1280),w,c
 32372   017514  1218               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
 32373   017516  5013               	movf	(??___xxtofl+2)^(0+1280),w,c
 32374   017518  1219               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
 32375   01751A  5014               	movf	(??___xxtofl+3)^(0+1280),w,c
 32376   01751C  121A               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
 32377   01751E  5015               	movf	___xxtofl@sign^(0+1280),w,c
 32378   017520  A4D8               	btfss	status,2,c
 32379   017522  AE10               	btfss	(___xxtofl@val+3)^(0+1280),7,c
 32380   017524  D001               	goto	l12827
 32381   017526  8E1A               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
 32382   017528                     l12827:
 32383   017528  C517  F50D         	movff	___xxtofl@arg,?___xxtofl
 32384   01752C  C518  F50E         	movff	___xxtofl@arg+1,?___xxtofl+1
 32385   017530  C519  F50F         	movff	___xxtofl@arg+2,?___xxtofl+2
 32386   017534  C51A  F510         	movff	___xxtofl@arg+3,?___xxtofl+3
 32387   017538  0012               	return		;funcret
 32388   01753A                     __end_of___xxtofl:
 32389                           	callstack 0
 32390                           
 32391 ;; *************** function _SD_init *****************
 32392 ;; Defined at:
 32393 ;;		line 251 in file "src/io.c"
 32394 ;; Parameters:    Size  Location     Type
 32395 ;;		None
 32396 ;; Auto vars:     Size  Location     Type
 32397 ;;		None
 32398 ;; Return value:  Size  Location     Type
 32399 ;;                  1    wreg      void 
 32400 ;; Registers used:
 32401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32402 ;; Tracked objects:
 32403 ;;		On entry : 3F/5
 32404 ;;		On exit  : 3F/5
 32405 ;;		Unchanged: 0/0
 32406 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32409 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32410 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32411 ;;Total ram usage:        2 bytes
 32412 ;; Hardware stack levels used: 1
 32413 ;; Hardware stack levels required when called: 10
 32414 ;; This function calls:
 32415 ;;		_SDCard_init
 32416 ;;		_printf
 32417 ;; This function is called by:
 32418 ;;		_main
 32419 ;; This function uses a non-reentrant model
 32420 ;;
 32421                           
 32422                           	psect	text73
 32423   01957A                     __ptext73:
 32424                           	callstack 0
 32425   01957A                     _SD_init:
 32426                           	callstack 116
 32427                           
 32428                           ; BSR set to: 5
 32429                           ;src/io.c: 254:  static int retry;;src/io.c: 255:  for (retry = 0; 1; retry++) {
 32430                           
 32431                           ;incstack = 0
 32432   01957A  0E00               	movlw	0
 32433   01957C  0107               	movlb	7	; () banked
 32434   01957E  6F1E               	movwf	(SD_init@retry+1)& (0+255),b
 32435   019580  0E00               	movlw	0
 32436   019582  6F1D               	movwf	SD_init@retry& (0+255),b
 32437   019584                     l12589:
 32438                           
 32439                           ; BSR set to: 7
 32440                           ;src/io.c: 256:   if (20 <= retry) {
 32441   019584  BF1E               	btfsc	(SD_init@retry+1)& (0+255),7,b
 32442   019586  D00E               	goto	l12593
 32443   019588  511E               	movf	(SD_init@retry+1)& (0+255),w,b
 32444   01958A  E104               	bnz	u16200
 32445   01958C  0E14               	movlw	20
 32446   01958E  5D1D               	subwf	SD_init@retry& (0+255),w,b
 32447   019590  A0D8               	btfss	status,0,c
 32448   019592  D008               	goto	l12593
 32449   019594                     u16200:
 32450                           
 32451                           ; BSR set to: 7
 32452                           ;src/io.c: 257:    printf("No SD Card?\n\r");
 32453   019594  0E8E               	movlw	low STR_51
 32454   019596  0105               	movlb	5	; () banked
 32455   019598  6F9A               	movwf	printf@fmt& (0+255),b
 32456   01959A  0EFF               	movlw	high STR_51
 32457   01959C  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 32458   01959E  EC4F  F0CF         	call	_printf	;wreg free
 32459   0195A2                     l1021:
 32460                           
 32461                           ; BSR set to: 5
 32462                           
 32463                           ; BSR set to: 5
 32464   0195A2  D7FF               	goto	l1021
 32465   0195A4                     l12593:
 32466                           
 32467                           ; BSR set to: 7
 32468                           ;src/io.c: 260:   if (SDCard_init(SPI_CLOCK_100KHZ, SPI_CLOCK_8MHZ, 100) == 0)
 32469   0195A4  0E00               	movlw	0
 32470   0195A6  0105               	movlb	5	; () banked
 32471   0195A8  6FAF               	movwf	(SDCard_init@initial_clock_speed+1)& (0+255),b
 32472   0195AA  0E00               	movlw	0
 32473   0195AC  6FAE               	movwf	SDCard_init@initial_clock_speed& (0+255),b
 32474   0195AE  0E00               	movlw	0
 32475   0195B0  6FB1               	movwf	(SDCard_init@clock_speed+1)& (0+255),b
 32476   0195B2  0E05               	movlw	5
 32477   0195B4  6FB0               	movwf	SDCard_init@clock_speed& (0+255),b
 32478   0195B6  0E00               	movlw	0
 32479   0195B8  6FB3               	movwf	(SDCard_init@timeout+1)& (0+255),b
 32480   0195BA  0E64               	movlw	100
 32481   0195BC  6FB2               	movwf	SDCard_init@timeout& (0+255),b
 32482   0195BE  EC1E  F0B0         	call	_SDCard_init	;wreg free
 32483   0195C2  51AE               	movf	?_SDCard_init& (0+255),w,b
 32484   0195C4  11AF               	iorwf	(?_SDCard_init+1)& (0+255),w,b
 32485   0195C6  B4D8               	btfsc	status,2,c
 32486   0195C8  0012               	return	
 32487                           
 32488                           ; BSR set to: 5
 32489                           ;src/io.c: 262:   _delay((unsigned long)((200)*(64000000UL/4000.0)));
 32490   0195CA  0E11               	movlw	17
 32491   0195CC  0105               	movlb	5	; () banked
 32492   0195CE  6FBE               	movwf	(??_SD_init+1)& (0+255),b
 32493   0195D0  0E3C               	movlw	60
 32494   0195D2  6FBD               	movwf	??_SD_init& (0+255),b
 32495   0195D4  0ECB               	movlw	203
 32496   0195D6                     u16557:
 32497   0195D6  2EE8               	decfsz	wreg,f,c
 32498   0195D8  D7FE               	bra	u16557
 32499   0195DA  2FBD               	decfsz	??_SD_init& (0+255),f,b
 32500   0195DC  D7FC               	bra	u16557
 32501   0195DE  2FBE               	decfsz	(??_SD_init+1)& (0+255),f,b
 32502   0195E0  D7FA               	bra	u16557
 32503                           
 32504                           ;src/io.c: 263:  }
 32505   0195E2  0107               	movlb	7	; () banked
 32506   0195E4  4B1D               	infsnz	SD_init@retry& (0+255),f,b
 32507   0195E6  2B1E               	incf	(SD_init@retry+1)& (0+255),f,b
 32508   0195E8  D7CD               	goto	l12589
 32509   0195EA                     __end_of_SD_init:
 32510                           	callstack 0
 32511                           
 32512 ;; *************** function _SDCard_init *****************
 32513 ;; Defined at:
 32514 ;;		line 53 in file "src/boards/../../drivers/SDCard.c"
 32515 ;; Parameters:    Size  Location     Type
 32516 ;;  initial_cloc    2   78[BANK5 ] int 
 32517 ;;  clock_speed     2   80[BANK5 ] int 
 32518 ;;  timeout         2   82[BANK5 ] unsigned short 
 32519 ;; Auto vars:     Size  Location     Type
 32520 ;;  i               2   84[BANK5 ] int 
 32521 ;;  buf             5   88[BANK5 ] unsigned char [5]
 32522 ;;  spi             2   86[BANK5 ] PTR struct SPI
 32523 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 32524 ;; Return value:  Size  Location     Type
 32525 ;;                  2   78[BANK5 ] int 
 32526 ;; Registers used:
 32527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32528 ;; Tracked objects:
 32529 ;;		On entry : 3F/5
 32530 ;;		On exit  : 3F/5
 32531 ;;		Unchanged: 0/0
 32532 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32533 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32534 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32536 ;;      Totals:         1      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32537 ;;Total ram usage:       16 bytes
 32538 ;; Hardware stack levels used: 1
 32539 ;; Hardware stack levels required when called: 9
 32540 ;; This function calls:
 32541 ;;		_SDCard_command
 32542 ;;		_SDCard_end_transaction
 32543 ;;		_SPI_SD_begin
 32544 ;;		_SPI_SD_begin_transaction
 32545 ;;		_SPI_SD_configure
 32546 ;;		_SPI_SD_dummy_clocks
 32547 ;;		_printf
 32548 ;; This function is called by:
 32549 ;;		_SD_init
 32550 ;; This function uses a non-reentrant model
 32551 ;;
 32552                           
 32553                           	psect	text74
 32554   01603C                     __ptext74:
 32555                           	callstack 0
 32556   01603C                     _SDCard_init:
 32557                           	callstack 116
 32558                           
 32559                           ; BSR set to: 5
 32560                           ;src/boards/../../drivers/SDCard.c: 53: int SDCard_init(int initial_clock_speed, int clo
      +                          ck_speed, uint16_t timeout);src/boards/../../drivers/SDCard.c: 54: {;src/boards/../../dr
      +                          ivers/SDCard.c: 55:     ctx_.spi = SPI_SD_ctx;
 32561                           
 32562                           ; BSR set to: 5
 32563                           ;incstack = 0
 32564   01603C  0EBB               	movlw	low _pic18f47q43_spi_ctx
 32565   01603E  0107               	movlb	7	; () banked
 32566   016040  6F06               	movwf	_ctx_& (0+255),b
 32567   016042  0E07               	movlw	high _pic18f47q43_spi_ctx
 32568   016044  6F07               	movwf	(_ctx_+1)& (0+255),b
 32569                           
 32570                           ; BSR set to: 7
 32571                           ;src/boards/../../drivers/SDCard.c: 56:     ctx_.timeout = timeout;
 32572   016046  C5B2  F708         	movff	SDCard_init@timeout,_ctx_+2
 32573   01604A  C5B3  F709         	movff	SDCard_init@timeout+1,_ctx_+3
 32574                           
 32575                           ; BSR set to: 7
 32576                           ;src/boards/../../drivers/SDCard.c: 57:     ctx_.calc_read_crc = 0;
 32577   01604E  910A               	bcf	(_ctx_+4)& (0+255),0,b
 32578                           
 32579                           ;src/boards/../../drivers/SDCard.c: 58:     struct SPI *spi = ctx_.spi;
 32580   016050  C706  F5B6         	movff	_ctx_,SDCard_init@spi
 32581   016054  C707  F5B7         	movff	_ctx_+1,SDCard_init@spi+1
 32582                           
 32583                           ; BSR set to: 7
 32584                           ;src/boards/../../drivers/SDCard.c: 59:     SPI_SD_begin(spi);
 32585   016058  C5B6  F501         	movff	SDCard_init@spi,SPI_SD_begin@ctx_
 32586   01605C  C5B7  F502         	movff	SDCard_init@spi+1,SPI_SD_begin@ctx_+1
 32587   016060  EC9E  F0CE         	call	_SPI_SD_begin	;wreg free
 32588                           
 32589                           ; BSR set to: 0
 32590                           ;src/boards/../../drivers/SDCard.c: 64:     SPI_SD_configure(spi, initial_clock_speed, 1
      +                          , 0);
 32591   016064  C5B6  F5A6         	movff	SDCard_init@spi,SPI_SD_configure@ctx_
 32592   016068  C5B7  F5A7         	movff	SDCard_init@spi+1,SPI_SD_configure@ctx_+1
 32593   01606C  C5AE  F5A8         	movff	SDCard_init@initial_clock_speed,SPI_SD_configure@clock_speed
 32594   016070  C5AF  F5A9         	movff	SDCard_init@initial_clock_speed+1,SPI_SD_configure@clock_speed+1
 32595   016074  0E01               	movlw	1
 32596   016076  0105               	movlb	5	; () banked
 32597   016078  6FAA               	movwf	SPI_SD_configure@bit_order& (0+255),b
 32598   01607A  0E00               	movlw	0
 32599   01607C  6FAB               	movwf	SPI_SD_configure@data_mode& (0+255),b
 32600   01607E  ECE0  F0C0         	call	_SPI_SD_configure	;wreg free
 32601                           
 32602                           ;src/boards/../../drivers/SDCard.c: 65:     SPI_SD_begin_transaction(spi);
 32603   016082  C5B6  F505         	movff	SDCard_init@spi,SPI_SD_begin_transaction@ctx_
 32604   016086  C5B7  F506         	movff	SDCard_init@spi+1,SPI_SD_begin_transaction@ctx_+1
 32605   01608A  EC98  F0CF         	call	_SPI_SD_begin_transaction	;wreg free
 32606                           
 32607                           ;src/boards/../../drivers/SDCard.c: 66:     SPI_SD_dummy_clocks(spi, 10);
 32608   01608E  C5B6  F50B         	movff	SDCard_init@spi,SPI_SD_dummy_clocks@ctx_
 32609   016092  C5B7  F50C         	movff	SDCard_init@spi+1,SPI_SD_dummy_clocks@ctx_+1
 32610   016096  0E00               	movlw	0
 32611   016098  6E0E               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 32612   01609A  0E0A               	movlw	10
 32613   01609C  6E0D               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 32614   01609E  EC84  F0CC         	call	_SPI_SD_dummy_clocks	;wreg free
 32615                           
 32616                           ;src/boards/../../drivers/SDCard.c: 67:     SDCard_end_transaction();
 32617   0160A2  EC12  F0CF         	call	_SDCard_end_transaction	;wreg free
 32618                           
 32619                           ;src/boards/../../drivers/SDCard.c: 70:     SDCard_command(0, 0, buf, 1);
 32620   0160A6  0E00               	movlw	0
 32621   0160A8  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32622   0160AA  0E00               	movlw	0
 32623   0160AC  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32624   0160AE  0E00               	movlw	0
 32625   0160B0  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32626   0160B2  0E00               	movlw	0
 32627   0160B4  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32628   0160B6  0EB8               	movlw	low SDCard_init@buf
 32629   0160B8  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32630   0160BA  0E05               	movlw	high SDCard_init@buf
 32631   0160BC  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32632   0160BE  0E00               	movlw	0
 32633   0160C0  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32634   0160C2  0E01               	movlw	1
 32635   0160C4  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32636   0160C6  0E00               	movlw	0
 32637   0160C8  ECF5  F0CA         	call	_SDCard_command
 32638                           
 32639                           ;src/boards/../../drivers/SDCard.c: 72:     if (buf[0] != 0x01) {
 32640   0160CC  0105               	movlb	5	; () banked
 32641   0160CE  05B8               	decf	SDCard_init@buf& (0+255),w,b
 32642   0160D0  B4D8               	btfsc	status,2,c
 32643   0160D2  D005               	goto	l12289
 32644   0160D4                     u15770:
 32645                           
 32646                           ; BSR set to: 5
 32647                           ;src/boards/../../drivers/SDCard.c: 74:         return 1;
 32648   0160D4  0E00               	movlw	0
 32649   0160D6  6FAF               	movwf	(?_SDCard_init+1)& (0+255),b
 32650   0160D8  0E01               	movlw	1
 32651   0160DA  6FAE               	movwf	?_SDCard_init& (0+255),b
 32652   0160DC  0012               	return	
 32653   0160DE                     l12289:
 32654                           
 32655                           ; BSR set to: 5
 32656                           ;src/boards/../../drivers/SDCard.c: 78:     SDCard_command(8, 0x000001aa, buf, 5);
 32657   0160DE  0EAA               	movlw	170
 32658   0160E0  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32659   0160E2  0E01               	movlw	1
 32660   0160E4  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32661   0160E6  0E00               	movlw	0
 32662   0160E8  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32663   0160EA  0E00               	movlw	0
 32664   0160EC  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32665   0160EE  0EB8               	movlw	low SDCard_init@buf
 32666   0160F0  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32667   0160F2  0E05               	movlw	high SDCard_init@buf
 32668   0160F4  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32669   0160F6  0E00               	movlw	0
 32670   0160F8  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32671   0160FA  0E05               	movlw	5
 32672   0160FC  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32673   0160FE  0E08               	movlw	8
 32674   016100  ECF5  F0CA         	call	_SDCard_command
 32675                           
 32676                           ;src/boards/../../drivers/SDCard.c: 81:     if (buf[0] != 0x01 || (buf[3] & 0x01) != 0x0
      +                          1 || buf[4] != 0xaa) {
 32677   016104  0105               	movlb	5	; () banked
 32678   016106  05B8               	decf	SDCard_init@buf& (0+255),w,b
 32679   016108  B4D8               	btfsc	status,2,c
 32680                           
 32681                           ; BSR set to: 5
 32682   01610A  A1BB               	btfss	(SDCard_init@buf+3)& (0+255),0,b
 32683   01610C  D004               	goto	u15800
 32684                           
 32685                           ; BSR set to: 5
 32686   01610E  0EAA               	movlw	170
 32687   016110  19BC               	xorwf	(SDCard_init@buf+4)& (0+255),w,b
 32688   016112  B4D8               	btfsc	status,2,c
 32689   016114  D005               	goto	l12305
 32690   016116                     u15800:
 32691                           
 32692                           ; BSR set to: 5
 32693                           ;src/boards/../../drivers/SDCard.c: 83:         return 2;
 32694                           
 32695                           ; BSR set to: 5
 32696   016116  0E00               	movlw	0
 32697   016118  6FAF               	movwf	(?_SDCard_init+1)& (0+255),b
 32698   01611A  0E02               	movlw	2
 32699   01611C  6FAE               	movwf	?_SDCard_init& (0+255),b
 32700   01611E  0012               	return	
 32701   016120                     l12305:
 32702                           
 32703                           ; BSR set to: 5
 32704                           ;src/boards/../../drivers/SDCard.c: 87:     for (int i = 0; i < 3000; i++) {
 32705   016120  0E00               	movlw	0
 32706   016122  6FB5               	movwf	(SDCard_init@i+1)& (0+255),b
 32707   016124  0E00               	movlw	0
 32708   016126  6FB4               	movwf	SDCard_init@i& (0+255),b
 32709   016128                     l12311:
 32710                           
 32711                           ; BSR set to: 5
 32712                           ;src/boards/../../drivers/SDCard.c: 88:         SDCard_command(55, 0, buf, 1);
 32713   016128  0E00               	movlw	0
 32714   01612A  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32715   01612C  0E00               	movlw	0
 32716   01612E  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32717   016130  0E00               	movlw	0
 32718   016132  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32719   016134  0E00               	movlw	0
 32720   016136  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32721   016138  0EB8               	movlw	low SDCard_init@buf
 32722   01613A  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32723   01613C  0E05               	movlw	high SDCard_init@buf
 32724   01613E  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32725   016140  0E00               	movlw	0
 32726   016142  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32727   016144  0E01               	movlw	1
 32728   016146  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32729   016148  0E37               	movlw	55
 32730   01614A  ECF5  F0CA         	call	_SDCard_command
 32731                           
 32732                           ;src/boards/../../drivers/SDCard.c: 89:         SDCard_command(41, 1UL << 30 , buf, 5);
 32733   01614E  0E00               	movlw	0
 32734   016150  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32735   016152  0E00               	movlw	0
 32736   016154  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32737   016156  0E00               	movlw	0
 32738   016158  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32739   01615A  0E40               	movlw	64
 32740   01615C  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32741   01615E  0EB8               	movlw	low SDCard_init@buf
 32742   016160  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32743   016162  0E05               	movlw	high SDCard_init@buf
 32744   016164  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32745   016166  0E00               	movlw	0
 32746   016168  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32747   01616A  0E05               	movlw	5
 32748   01616C  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32749   01616E  0E29               	movlw	41
 32750   016170  ECF5  F0CA         	call	_SDCard_command
 32751                           
 32752                           ;src/boards/../../drivers/SDCard.c: 90:         if (buf[0] == 0x00)
 32753   016174  0105               	movlb	5	; () banked
 32754   016176  51B8               	movf	SDCard_init@buf& (0+255),w,b
 32755   016178  B4D8               	btfsc	status,2,c
 32756   01617A  D00A               	goto	u15820
 32757                           
 32758                           ; BSR set to: 5
 32759                           ;src/boards/../../drivers/SDCard.c: 92:     }
 32760   01617C  4BB4               	infsnz	SDCard_init@i& (0+255),f,b
 32761   01617E  2BB5               	incf	(SDCard_init@i+1)& (0+255),f,b
 32762                           
 32763                           ; BSR set to: 5
 32764   016180  BFB5               	btfsc	(SDCard_init@i+1)& (0+255),7,b
 32765   016182  D7D2               	goto	l12311
 32766   016184  0EB8               	movlw	184
 32767   016186  5DB4               	subwf	SDCard_init@i& (0+255),w,b
 32768   016188  0E0B               	movlw	11
 32769   01618A  59B5               	subwfb	(SDCard_init@i+1)& (0+255),w,b
 32770   01618C  A0D8               	btfss	status,0,c
 32771   01618E  D7CC               	goto	l12311
 32772   016190                     u15820:
 32773                           
 32774                           ; BSR set to: 5
 32775                           ;src/boards/../../drivers/SDCard.c: 94:     if (buf[0] != 0x00) {
 32776   016190  51B8               	movf	SDCard_init@buf& (0+255),w,b
 32777   016192  A4D8               	btfss	status,2,c
 32778   016194  D79F               	goto	u15770
 32779                           
 32780                           ; BSR set to: 5
 32781                           ;src/boards/../../drivers/SDCard.c: 100:     SDCard_command(58, 0, buf, 5);
 32782   016196  0E00               	movlw	0
 32783   016198  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32784   01619A  0E00               	movlw	0
 32785   01619C  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32786   01619E  0E00               	movlw	0
 32787   0161A0  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32788   0161A2  0E00               	movlw	0
 32789   0161A4  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32790   0161A6  0EB8               	movlw	low SDCard_init@buf
 32791   0161A8  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32792   0161AA  0E05               	movlw	high SDCard_init@buf
 32793   0161AC  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32794   0161AE  0E00               	movlw	0
 32795   0161B0  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32796   0161B2  0E05               	movlw	5
 32797   0161B4  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32798   0161B6  0E3A               	movlw	58
 32799   0161B8  ECF5  F0CA         	call	_SDCard_command
 32800                           
 32801                           ;src/boards/../../drivers/SDCard.c: 103:     if (buf[0] & 0xfe) {
 32802   0161BC  C5B8  F55F         	movff	SDCard_init@buf,??_SDCard_init
 32803   0161C0  0EFE               	movlw	254
 32804   0161C2  165F               	andwf	??_SDCard_init^(0+1280),f,c
 32805   0161C4  B4D8               	btfsc	status,2,c
 32806   0161C6  D006               	goto	l1562
 32807   0161C8                     u15840:
 32808                           
 32809                           ;src/boards/../../drivers/SDCard.c: 105:         return 3;
 32810   0161C8  0E00               	movlw	0
 32811   0161CA  0105               	movlb	5	; () banked
 32812   0161CC  6FAF               	movwf	(?_SDCard_init+1)& (0+255),b
 32813   0161CE  0E03               	movlw	3
 32814   0161D0  6FAE               	movwf	?_SDCard_init& (0+255),b
 32815   0161D2  0012               	return	
 32816   0161D4                     l1562:
 32817                           
 32818                           ;src/boards/../../drivers/SDCard.c: 107:     if (!(buf[1] & 0x40)) {
 32819   0161D4  0105               	movlb	5	; () banked
 32820   0161D6  ADB9               	btfss	(SDCard_init@buf+1)& (0+255),6,b
 32821   0161D8  D79E               	goto	u15800
 32822                           
 32823                           ; BSR set to: 5
 32824                           ;src/boards/../../drivers/SDCard.c: 113:     if (!(buf[1] & 0x80)) {
 32825                           
 32826                           ; BSR set to: 5
 32827   0161DA  AFB9               	btfss	(SDCard_init@buf+1)& (0+255),7,b
 32828   0161DC  D7F5               	goto	u15840
 32829                           
 32830                           ; BSR set to: 5
 32831                           ;src/boards/../../drivers/SDCard.c: 120:     SDCard_command(59, 1, buf, 1);
 32832                           
 32833                           ; BSR set to: 5
 32834   0161DE  0E01               	movlw	1
 32835   0161E0  6E28               	movwf	SDCard_command@argument^(0+1280),c
 32836   0161E2  0E00               	movlw	0
 32837   0161E4  6E29               	movwf	(SDCard_command@argument+1)^(0+1280),c
 32838   0161E6  0E00               	movlw	0
 32839   0161E8  6E2A               	movwf	(SDCard_command@argument+2)^(0+1280),c
 32840   0161EA  0E00               	movlw	0
 32841   0161EC  6E2B               	movwf	(SDCard_command@argument+3)^(0+1280),c
 32842   0161EE  0EB8               	movlw	low SDCard_init@buf
 32843   0161F0  6E2C               	movwf	SDCard_command@response_buffer^(0+1280),c
 32844   0161F2  0E05               	movlw	high SDCard_init@buf
 32845   0161F4  6E2D               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 32846   0161F6  0E00               	movlw	0
 32847   0161F8  6E2F               	movwf	(SDCard_command@length+1)^(0+1280),c
 32848   0161FA  0E01               	movlw	1
 32849   0161FC  6E2E               	movwf	SDCard_command@length^(0+1280),c
 32850   0161FE  0E3B               	movlw	59
 32851   016200  ECF5  F0CA         	call	_SDCard_command
 32852                           
 32853                           ;src/boards/../../drivers/SDCard.c: 121:     if (buf[0] != 0x00) {
 32854   016204  0105               	movlb	5	; () banked
 32855   016206  51B8               	movf	SDCard_init@buf& (0+255),w,b
 32856   016208  A4D8               	btfss	status,2,c
 32857   01620A  D7DE               	goto	u15840
 32858                           
 32859                           ; BSR set to: 5
 32860                           ;src/boards/../../drivers/SDCard.c: 126:     SPI_SD_configure(spi, clock_speed, 1, 0);
 32861   01620C  C5B6  F5A6         	movff	SDCard_init@spi,SPI_SD_configure@ctx_
 32862   016210  C5B7  F5A7         	movff	SDCard_init@spi+1,SPI_SD_configure@ctx_+1
 32863   016214  C5B0  F5A8         	movff	SDCard_init@clock_speed,SPI_SD_configure@clock_speed
 32864   016218  C5B1  F5A9         	movff	SDCard_init@clock_speed+1,SPI_SD_configure@clock_speed+1
 32865   01621C  0E01               	movlw	1
 32866   01621E  6FAA               	movwf	SPI_SD_configure@bit_order& (0+255),b
 32867   016220  0E00               	movlw	0
 32868   016222  6FAB               	movwf	SPI_SD_configure@data_mode& (0+255),b
 32869   016224  ECE0  F0C0         	call	_SPI_SD_configure	;wreg free
 32870                           
 32871                           ;src/boards/../../drivers/SDCard.c: 130:     return 0;
 32872   016228  0E00               	movlw	0
 32873   01622A  0105               	movlb	5	; () banked
 32874   01622C  6FAF               	movwf	(?_SDCard_init+1)& (0+255),b
 32875   01622E  0E00               	movlw	0
 32876   016230  6FAE               	movwf	?_SDCard_init& (0+255),b
 32877                           
 32878                           ; BSR set to: 5
 32879   016232  0012               	return		;funcret
 32880   016234                     __end_of_SDCard_init:
 32881                           	callstack 0
 32882                           
 32883 ;; *************** function _SPI_SD_configure *****************
 32884 ;; Defined at:
 32885 ;;		line 84 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 32886 ;; Parameters:    Size  Location     Type
 32887 ;;  ctx_            2   70[BANK5 ] PTR struct SPI
 32888 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 32889 ;;  clock_speed     2   72[BANK5 ] int 
 32890 ;;  bit_order       1   74[BANK5 ] unsigned char 
 32891 ;;  data_mode       1   75[BANK5 ] unsigned char 
 32892 ;; Auto vars:     Size  Location     Type
 32893 ;;  ctx             2    0        PTR struct SPI_HW
 32894 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 32895 ;; Return value:  Size  Location     Type
 32896 ;;                  1    wreg      void 
 32897 ;; Registers used:
 32898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32899 ;; Tracked objects:
 32900 ;;		On entry : 3F/5
 32901 ;;		On exit  : 3A/0
 32902 ;;		Unchanged: 0/0
 32903 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32904 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32907 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32908 ;;Total ram usage:        8 bytes
 32909 ;; Hardware stack levels used: 1
 32910 ;; Hardware stack levels required when called: 8
 32911 ;; This function calls:
 32912 ;;		_printf
 32913 ;; This function is called by:
 32914 ;;		_SDCard_init
 32915 ;; This function uses a non-reentrant model
 32916 ;;
 32917                           
 32918                           	psect	text75
 32919   0181C0                     __ptext75:
 32920                           	callstack 0
 32921   0181C0                     _SPI_SD_configure:
 32922                           	callstack 116
 32923                           
 32924                           ; BSR set to: 5
 32925                           ;src/boards/../../drivers/pic18f47q43_spi.c: 88:     SPI1CON0bits.MST = 1;
 32926                           
 32927                           ; BSR set to: 5
 32928                           
 32929                           ; BSR set to: 5
 32930                           ;incstack = 0
 32931   0181C0  0100               	movlb	0	; () banked
 32932   0181C2  8384               	bsf	132,1,b	;volatile
 32933                           
 32934                           ; BSR set to: 0
 32935                           ;src/boards/../../drivers/pic18f47q43_spi.c: 89:     SPI1CON0bits.BMODE = 1;
 32936   0181C4  8184               	bsf	132,0,b	;volatile
 32937                           
 32938                           ; BSR set to: 0
 32939                           ;src/boards/../../drivers/pic18f47q43_spi.c: 90:     SPI1TWIDTH = 0;
 32940   0181C6  0E00               	movlw	0
 32941   0181C8  6F88               	movwf	136,b	;volatile
 32942                           
 32943                           ; BSR set to: 0
 32944                           ;src/boards/../../drivers/pic18f47q43_spi.c: 91:     SPI1INTE = 0;
 32945   0181CA  0E00               	movlw	0
 32946   0181CC  6F8B               	movwf	139,b	;volatile
 32947                           
 32948                           ; BSR set to: 0
 32949                           ;src/boards/../../drivers/pic18f47q43_spi.c: 92:     SPI1CON1bits.FST = 0;
 32950   0181CE  9985               	bcf	133,4,b	;volatile
 32951                           
 32952                           ; BSR set to: 0
 32953                           ;src/boards/../../drivers/pic18f47q43_spi.c: 93:     SPI1CON2bits.TXR = 1;
 32954   0181D0  8386               	bsf	134,1,b	;volatile
 32955                           
 32956                           ; BSR set to: 0
 32957                           ;src/boards/../../drivers/pic18f47q43_spi.c: 94:     SPI1CON2bits.RXR = 1;
 32958   0181D2  8186               	bsf	134,0,b	;volatile
 32959                           
 32960                           ;src/boards/../../drivers/pic18f47q43_spi.c: 96:     if (bit_order == 1)
 32961   0181D4  0105               	movlb	5	; () banked
 32962   0181D6  05AA               	decf	SPI_SD_configure@bit_order& (0+255),w,b
 32963   0181D8  A4D8               	btfss	status,2,c
 32964   0181DA  D003               	goto	l1391
 32965                           
 32966                           ; BSR set to: 5
 32967                           ;src/boards/../../drivers/pic18f47q43_spi.c: 97:         SPI1CON0bits.LSBF = 0;
 32968   0181DC  0100               	movlb	0	; () banked
 32969   0181DE  9584               	bcf	132,2,b	;volatile
 32970   0181E0  D002               	goto	l11411
 32971   0181E2                     l1391:
 32972                           
 32973                           ; BSR set to: 5
 32974                           ;src/boards/../../drivers/pic18f47q43_spi.c: 99:         SPI1CON0bits.LSBF = 1;
 32975   0181E2  0100               	movlb	0	; () banked
 32976   0181E4  8584               	bsf	132,2,b	;volatile
 32977   0181E6                     l11411:
 32978                           
 32979                           ; BSR set to: 0
 32980                           ;src/boards/../../drivers/pic18f47q43_spi.c: 101:     if (data_mode == 0) {
 32981   0181E6  0105               	movlb	5	; () banked
 32982   0181E8  51AB               	movf	SPI_SD_configure@data_mode& (0+255),w,b
 32983   0181EA  A4D8               	btfss	status,2,c
 32984   0181EC  D005               	goto	l11415
 32985                           
 32986                           ; BSR set to: 5
 32987                           ;src/boards/../../drivers/pic18f47q43_spi.c: 102:         SPI1CON1bits.SMP = 0;
 32988   0181EE  0100               	movlb	0	; () banked
 32989   0181F0  9F85               	bcf	133,7,b	;volatile
 32990                           
 32991                           ;src/boards/../../drivers/pic18f47q43_spi.c: 103:         SPI1CON1bits.CKE = 1;
 32992   0181F2  8D85               	bsf	133,6,b	;volatile
 32993                           
 32994                           ;src/boards/../../drivers/pic18f47q43_spi.c: 104:         SPI1CON1bits.CKP = 0;
 32995   0181F4  9B85               	bcf	133,5,b	;volatile
 32996                           
 32997                           ;src/boards/../../drivers/pic18f47q43_spi.c: 105:     } else {
 32998   0181F6  D00E               	goto	l11417
 32999   0181F8                     l11415:
 33000                           
 33001                           ; BSR set to: 5
 33002                           ;src/boards/../../drivers/pic18f47q43_spi.c: 106:         printf("%s: ERROR: mode %d is 
      +                          not supported\n\r", __func__, data_mode);
 33003   0181F8  0E83               	movlw	low STR_57
 33004   0181FA  6F9A               	movwf	printf@fmt& (0+255),b
 33005   0181FC  0EFB               	movlw	high STR_57
 33006   0181FE  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 33007   018200  0E4F               	movlw	low STR_58
 33008   018202  6F9C               	movwf	(?_printf+2)& (0+255),b
 33009   018204  0EFF               	movlw	high STR_58
 33010   018206  6F9D               	movwf	(?_printf+3)& (0+255),b
 33011   018208  C5AB  F59E         	movff	SPI_SD_configure@data_mode,?_printf+4
 33012   01820C  6B9F               	clrf	(?_printf+5)& (0+255),b
 33013   01820E  EC4F  F0CF         	call	_printf	;wreg free
 33014   018212                     l1395:
 33015                           
 33016                           ; BSR set to: 5
 33017                           
 33018                           ; BSR set to: 5
 33019   018212  D7FF               	goto	l1395
 33020   018214                     l11417:
 33021                           
 33022                           ; BSR set to: 0
 33023                           ;src/boards/../../drivers/pic18f47q43_spi.c: 110:     SPI1CLK = 0;
 33024   018214  0E00               	movlw	0
 33025   018216  6F8C               	movwf	140,b	;volatile
 33026                           
 33027                           ;src/boards/../../drivers/pic18f47q43_spi.c: 111:     switch (clock_speed) {
 33028   018218  D02D               	goto	l11437
 33029   01821A                     l11419:
 33030                           
 33031                           ; BSR set to: 5
 33032                           ;src/boards/../../drivers/pic18f47q43_spi.c: 113:         SPI1CLK = 2;
 33033   01821A  0E02               	movlw	2
 33034   01821C  0100               	movlb	0	; () banked
 33035   01821E  6F8C               	movwf	140,b	;volatile
 33036                           
 33037                           ;src/boards/../../drivers/pic18f47q43_spi.c: 114:         SPI1BAUD = 2;
 33038   018220  0E02               	movlw	2
 33039   018222  6F89               	movwf	137,b	;volatile
 33040                           
 33041                           ;src/boards/../../drivers/pic18f47q43_spi.c: 115:         break;
 33042   018224  0012               	return	
 33043   018226                     l11421:
 33044                           
 33045                           ; BSR set to: 5
 33046                           ;src/boards/../../drivers/pic18f47q43_spi.c: 117:         SPI1BAUD = 15;
 33047   018226  0E0F               	movlw	15
 33048   018228  0100               	movlb	0	; () banked
 33049   01822A  6F89               	movwf	137,b	;volatile
 33050                           
 33051                           ;src/boards/../../drivers/pic18f47q43_spi.c: 118:         break;
 33052   01822C  0012               	return	
 33053   01822E                     l11423:
 33054                           
 33055                           ; BSR set to: 5
 33056                           ;src/boards/../../drivers/pic18f47q43_spi.c: 120:         SPI1BAUD = 7;
 33057   01822E  0E07               	movlw	7
 33058   018230  0100               	movlb	0	; () banked
 33059   018232  6F89               	movwf	137,b	;volatile
 33060                           
 33061                           ;src/boards/../../drivers/pic18f47q43_spi.c: 121:         break;
 33062   018234  0012               	return	
 33063   018236                     l11425:
 33064                           
 33065                           ; BSR set to: 5
 33066                           ;src/boards/../../drivers/pic18f47q43_spi.c: 123:         SPI1BAUD = 5;
 33067   018236  0E05               	movlw	5
 33068   018238  0100               	movlb	0	; () banked
 33069   01823A  6F89               	movwf	137,b	;volatile
 33070                           
 33071                           ;src/boards/../../drivers/pic18f47q43_spi.c: 124:         break;
 33072   01823C  0012               	return	
 33073   01823E                     l11427:
 33074                           
 33075                           ; BSR set to: 5
 33076                           ;src/boards/../../drivers/pic18f47q43_spi.c: 126:         SPI1BAUD = 4;
 33077   01823E  0E04               	movlw	4
 33078   018240  0100               	movlb	0	; () banked
 33079   018242  6F89               	movwf	137,b	;volatile
 33080                           
 33081                           ;src/boards/../../drivers/pic18f47q43_spi.c: 127:         break;
 33082   018244  0012               	return	
 33083   018246                     l11429:
 33084                           
 33085                           ; BSR set to: 5
 33086                           ;src/boards/../../drivers/pic18f47q43_spi.c: 129:         SPI1BAUD = 3;
 33087   018246  0E03               	movlw	3
 33088   018248  0100               	movlb	0	; () banked
 33089   01824A  6F89               	movwf	137,b	;volatile
 33090                           
 33091                           ;src/boards/../../drivers/pic18f47q43_spi.c: 130:         break;
 33092   01824C  0012               	return	
 33093   01824E                     l11431:
 33094                           
 33095                           ; BSR set to: 5
 33096                           ;src/boards/../../drivers/pic18f47q43_spi.c: 132:         SPI1BAUD = 2;
 33097   01824E  0E02               	movlw	2
 33098   018250  0100               	movlb	0	; () banked
 33099   018252  6F89               	movwf	137,b	;volatile
 33100                           
 33101                           ;src/boards/../../drivers/pic18f47q43_spi.c: 133:         break;
 33102   018254  0012               	return	
 33103   018256                     l11433:
 33104                           
 33105                           ; BSR set to: 5
 33106                           ;src/boards/../../drivers/pic18f47q43_spi.c: 135:         printf("%s: ERROR: clock speed
      +                           %d is not supported\n\r", __func__, clock_speed);
 33107   018256  0EB2               	movlw	low STR_59
 33108   018258  6F9A               	movwf	printf@fmt& (0+255),b
 33109   01825A  0EF9               	movlw	high STR_59
 33110   01825C  6F9B               	movwf	(printf@fmt+1)& (0+255),b
 33111   01825E  0E4F               	movlw	low STR_58
 33112   018260  6F9C               	movwf	(?_printf+2)& (0+255),b
 33113   018262  0EFF               	movlw	high STR_58
 33114   018264  6F9D               	movwf	(?_printf+3)& (0+255),b
 33115   018266  C5A8  F59E         	movff	SPI_SD_configure@clock_speed,?_printf+4
 33116   01826A  C5A9  F59F         	movff	SPI_SD_configure@clock_speed+1,?_printf+5
 33117   01826E  EC4F  F0CF         	call	_printf	;wreg free
 33118                           
 33119                           ;src/boards/../../drivers/pic18f47q43_spi.c: 136:         break;
 33120   018272  0012               	return	
 33121   018274                     l11437:
 33122                           
 33123                           ; BSR set to: 0
 33124   018274  C5A8  F5AC         	movff	SPI_SD_configure@clock_speed,??_SPI_SD_configure
 33125   018278  C5A9  F5AD         	movff	SPI_SD_configure@clock_speed+1,??_SPI_SD_configure+1
 33126                           
 33127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33128                           ; Switch size 1, requested type "simple"
 33129                           ; Number of cases is 1, Range of values is 0 to 0
 33130                           ; switch strategies available:
 33131                           ; Name         Instructions Cycles
 33132                           ; simple_byte            4     3 (average)
 33133                           ;	Chosen strategy is simple_byte
 33134   01827C  0105               	movlb	5	; () banked
 33135   01827E  51AD               	movf	(??_SPI_SD_configure+1)& (0+255),w,b
 33136   018280  0A00               	xorlw	0	; case 0
 33137   018282  A4D8               	btfss	status,2,c
 33138   018284  D7E8               	goto	l11433
 33139                           
 33140                           ; BSR set to: 5
 33141                           ; Switch size 1, requested type "simple"
 33142                           ; Number of cases is 7, Range of values is 0 to 6
 33143                           ; switch strategies available:
 33144                           ; Name         Instructions Cycles
 33145                           ; simple_byte           22    12 (average)
 33146                           ;	Chosen strategy is simple_byte
 33147   018286  51AC               	movf	??_SPI_SD_configure& (0+255),w,b
 33148   018288  0A00               	xorlw	0	; case 0
 33149   01828A  B4D8               	btfsc	status,2,c
 33150   01828C  D7C6               	goto	l11419
 33151   01828E  0A01               	xorlw	1	; case 1
 33152   018290  B4D8               	btfsc	status,2,c
 33153   018292  D7C9               	goto	l11421
 33154   018294  0A03               	xorlw	3	; case 2
 33155   018296  B4D8               	btfsc	status,2,c
 33156   018298  D7CA               	goto	l11423
 33157   01829A  0A01               	xorlw	1	; case 3
 33158   01829C  B4D8               	btfsc	status,2,c
 33159   01829E  D7CB               	goto	l11425
 33160   0182A0  0A07               	xorlw	7	; case 4
 33161   0182A2  B4D8               	btfsc	status,2,c
 33162   0182A4  D7CC               	goto	l11427
 33163   0182A6  0A01               	xorlw	1	; case 5
 33164   0182A8  B4D8               	btfsc	status,2,c
 33165   0182AA  D7CD               	goto	l11429
 33166   0182AC  0A03               	xorlw	3	; case 6
 33167   0182AE  B4D8               	btfsc	status,2,c
 33168   0182B0  D7CE               	goto	l11431
 33169   0182B2  D7D1               	goto	l11433
 33170   0182B4                     __end_of_SPI_SD_configure:
 33171                           	callstack 0
 33172                           
 33173 ;; *************** function _printf *****************
 33174 ;; Defined at:
 33175 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
 33176 ;; Parameters:    Size  Location     Type
 33177 ;;  fmt             2   58[BANK5 ] PTR const unsigned char 
 33178 ;;		 -> STR_90(36), STR_89(27), STR_87(3), STR_86(40), 
 33179 ;;		 -> STR_85(30), STR_84(47), STR_83(42), STR_82(35), 
 33180 ;;		 -> STR_81(50), STR_79(50), STR_78(55), STR_76(50), 
 33181 ;;		 -> STR_75(36), STR_74(34), STR_73(18), STR_72(41), 
 33182 ;;		 -> STR_71(38), STR_70(43), STR_69(36), STR_68(46), 
 33183 ;;		 -> STR_67(35), STR_66(27), STR_65(25), STR_64(45), 
 33184 ;;		 -> STR_63(19), STR_62(25), STR_61(28), STR_59(45), 
 33185 ;;		 -> STR_57(38), STR_56(21), STR_55(32), STR_54(31), 
 33186 ;;		 -> STR_53(22), STR_52(18), STR_51(14), STR_50(25), 
 33187 ;;		 -> STR_49(25), STR_48(3), STR_47(34), STR_46(24), 
 33188 ;;		 -> STR_45(16), STR_44(52), STR_41(18), STR_38(5), 
 33189 ;;		 -> STR_37(9), STR_35(9), STR_32(27), STR_25(24), 
 33190 ;;		 -> STR_24(6), STR_23(6), STR_22(9), STR_21(6), 
 33191 ;;		 -> STR_20(6), STR_19(8), STR_18(50), STR_17(44), 
 33192 ;;		 -> STR_15(29), STR_14(44), STR_12(28), STR_11(44), 
 33193 ;;		 -> STR_10(18), STR_9(23), STR_8(33), STR_7(21), 
 33194 ;;		 -> STR_6(19), STR_4(26), STR_3(39), STR_2(23), 
 33195 ;;		 -> STR_1(25), 
 33196 ;; Auto vars:     Size  Location     Type
 33197 ;;  ap              2   92[COMRAM] PTR void [1]
 33198 ;;		 -> ?_printf(2), ?_sprintf(2), 
 33199 ;;  ret             2    0        int 
 33200 ;; Return value:  Size  Location     Type
 33201 ;;                  2   58[BANK5 ] int 
 33202 ;; Registers used:
 33203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33204 ;; Tracked objects:
 33205 ;;		On entry : 3F/5
 33206 ;;		On exit  : 3F/5
 33207 ;;		Unchanged: 0/0
 33208 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33209 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33212 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33213 ;;Total ram usage:       14 bytes
 33214 ;; Hardware stack levels used: 1
 33215 ;; Hardware stack levels required when called: 7
 33216 ;; This function calls:
 33217 ;;		_vfprintf
 33218 ;; This function is called by:
 33219 ;;		_disk_initialize
 33220 ;;		_disk_status
 33221 ;;		_disk_read
 33222 ;;		_disk_write
 33223 ;;		_disk_ioctl
 33224 ;;		_util_hexdump
 33225 ;;		_util_addrdump
 33226 ;;		_menu_select
 33227 ;;		_mem_init
 33228 ;;		_wait_for_programmer
 33229 ;;		_SD_init
 33230 ;;		_disk_io_handle
 33231 ;;		_SPI_SD_configure
 33232 ;;		_SDCard_init
 33233 ;;		_SDCard_read512
 33234 ;;		_SDCard_write512
 33235 ;;		_main
 33236 ;; This function uses a non-reentrant model
 33237 ;;
 33238                           
 33239                           	psect	text76
 33240   019E9E                     __ptext76:
 33241                           	callstack 0
 33242   019E9E                     _printf:
 33243                           	callstack 118
 33244                           
 33245                           ; BSR set to: 5
 33246                           
 33247                           ;incstack = 0
 33248   019E9E  0E9C               	movlw	low (?_printf+2)
 33249   019EA0  6E5D               	movwf	printf@ap^(0+1280),c
 33250   019EA2  0E05               	movlw	high (?_printf+2)
 33251   019EA4  6E5E               	movwf	(printf@ap+1)^(0+1280),c
 33252                           
 33253                           ; BSR set to: 5
 33254   019EA6  0E00               	movlw	0
 33255   019EA8  6F94               	movwf	vfprintf@fp& (0+255),b
 33256   019EAA  0E00               	movlw	0
 33257   019EAC  6F95               	movwf	(vfprintf@fp+1)& (0+255),b
 33258   019EAE  C59A  F596         	movff	printf@fmt,vfprintf@fmt
 33259   019EB2  C59B  F597         	movff	printf@fmt+1,vfprintf@fmt+1
 33260   019EB6  0E5D               	movlw	low printf@ap
 33261   019EB8  6F98               	movwf	vfprintf@ap& (0+255),b
 33262   019EBA  0E05               	movlw	high printf@ap
 33263   019EBC  6F99               	movwf	(vfprintf@ap+1)& (0+255),b
 33264   019EBE  EC44  F0CD         	call	_vfprintf	;wreg free
 33265                           
 33266                           ; BSR set to: 5
 33267   019EC2  0012               	return		;funcret
 33268   019EC4                     __end_of_printf:
 33269                           	callstack 0
 33270                           
 33271 ;; *************** function _vfprintf *****************
 33272 ;; Defined at:
 33273 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 33274 ;; Parameters:    Size  Location     Type
 33275 ;;  fp              2   52[BANK5 ] PTR struct _IO_FILE
 33276 ;;		 -> sprintf@f(12), NULL(0), 
 33277 ;;  fmt             2   54[BANK5 ] PTR const unsigned char 
 33278 ;;		 -> STR_90(36), STR_89(27), STR_87(3), STR_86(40), 
 33279 ;;		 -> STR_85(30), STR_84(47), STR_83(42), STR_82(35), 
 33280 ;;		 -> STR_81(50), STR_79(50), STR_78(55), STR_76(50), 
 33281 ;;		 -> STR_75(36), STR_74(34), STR_73(18), STR_72(41), 
 33282 ;;		 -> STR_71(38), STR_70(43), STR_69(36), STR_68(46), 
 33283 ;;		 -> STR_67(35), STR_66(27), STR_65(25), STR_64(45), 
 33284 ;;		 -> STR_63(19), STR_62(25), STR_61(28), STR_59(45), 
 33285 ;;		 -> STR_57(38), STR_56(21), STR_55(32), STR_54(31), 
 33286 ;;		 -> STR_53(22), STR_52(18), STR_51(14), STR_50(25), 
 33287 ;;		 -> STR_49(25), STR_48(3), STR_47(34), STR_46(24), 
 33288 ;;		 -> STR_45(16), STR_44(52), STR_43(15), STR_41(18), 
 33289 ;;		 -> STR_38(5), STR_37(9), STR_35(9), STR_32(27), 
 33290 ;;		 -> STR_25(24), STR_24(6), STR_23(6), STR_22(9), 
 33291 ;;		 -> STR_21(6), STR_20(6), STR_19(8), STR_18(50), 
 33292 ;;		 -> STR_17(44), STR_15(29), STR_14(44), STR_12(28), 
 33293 ;;		 -> STR_11(44), STR_10(18), STR_9(23), STR_8(33), 
 33294 ;;		 -> STR_7(21), STR_6(19), STR_4(26), STR_3(39), 
 33295 ;;		 -> STR_2(23), STR_1(25), 
 33296 ;;  ap              2   56[BANK5 ] PTR PTR void 
 33297 ;;		 -> printf@ap(2), sprintf@ap(2), 
 33298 ;; Auto vars:     Size  Location     Type
 33299 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
 33300 ;;		 -> STR_90(36), STR_89(27), STR_87(3), STR_86(40), 
 33301 ;;		 -> STR_85(30), STR_84(47), STR_83(42), STR_82(35), 
 33302 ;;		 -> STR_81(50), STR_79(50), STR_78(55), STR_76(50), 
 33303 ;;		 -> STR_75(36), STR_74(34), STR_73(18), STR_72(41), 
 33304 ;;		 -> STR_71(38), STR_70(43), STR_69(36), STR_68(46), 
 33305 ;;		 -> STR_67(35), STR_66(27), STR_65(25), STR_64(45), 
 33306 ;;		 -> STR_63(19), STR_62(25), STR_61(28), STR_59(45), 
 33307 ;;		 -> STR_57(38), STR_56(21), STR_55(32), STR_54(31), 
 33308 ;;		 -> STR_53(22), STR_52(18), STR_51(14), STR_50(25), 
 33309 ;;		 -> STR_49(25), STR_48(3), STR_47(34), STR_46(24), 
 33310 ;;		 -> STR_45(16), STR_44(52), STR_43(15), STR_41(18), 
 33311 ;;		 -> STR_38(5), STR_37(9), STR_35(9), STR_32(27), 
 33312 ;;		 -> STR_25(24), STR_24(6), STR_23(6), STR_22(9), 
 33313 ;;		 -> STR_21(6), STR_20(6), STR_19(8), STR_18(50), 
 33314 ;;		 -> STR_17(44), STR_15(29), STR_14(44), STR_12(28), 
 33315 ;;		 -> STR_11(44), STR_10(18), STR_9(23), STR_8(33), 
 33316 ;;		 -> STR_7(21), STR_6(19), STR_4(26), STR_3(39), 
 33317 ;;		 -> STR_2(23), STR_1(25), 
 33318 ;; Return value:  Size  Location     Type
 33319 ;;                  2   52[BANK5 ] int 
 33320 ;; Registers used:
 33321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33322 ;; Tracked objects:
 33323 ;;		On entry : 3F/5
 33324 ;;		On exit  : 3F/5
 33325 ;;		Unchanged: 0/0
 33326 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33327 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33330 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33331 ;;Total ram usage:        8 bytes
 33332 ;; Hardware stack levels used: 1
 33333 ;; Hardware stack levels required when called: 6
 33334 ;; This function calls:
 33335 ;;		_vfpfcnvrt
 33336 ;; This function is called by:
 33337 ;;		_sprintf
 33338 ;;		_printf
 33339 ;; This function uses a non-reentrant model
 33340 ;;
 33341                           
 33342                           	psect	text77
 33343   019A88                     __ptext77:
 33344                           	callstack 0
 33345   019A88                     _vfprintf:
 33346                           	callstack 118
 33347                           
 33348                           ; BSR set to: 5
 33349                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 33350                           
 33351                           ; BSR set to: 5
 33352                           ;incstack = 0
 33353   019A88  C596  F55B         	movff	vfprintf@fmt,vfprintf@cfmt
 33354   019A8C  C597  F55C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 33355                           
 33356                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 33357   019A90  D00E               	goto	l9369
 33358   019A92                     l9367:
 33359                           
 33360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 33361   019A92  C594  F551         	movff	vfprintf@fp,vfpfcnvrt@fp
 33362   019A96  C595  F552         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 33363   019A9A  0E5B               	movlw	low vfprintf@cfmt
 33364   019A9C  6E53               	movwf	vfpfcnvrt@fmt^(0+1280),c
 33365   019A9E  0E05               	movlw	high vfprintf@cfmt
 33366   019AA0  6E54               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
 33367   019AA2  C598  F555         	movff	vfprintf@ap,vfpfcnvrt@ap
 33368   019AA6  C599  F556         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 33369   019AAA  ECA7  F095         	call	_vfpfcnvrt	;wreg free
 33370   019AAE                     l9369:
 33371                           
 33372                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 33373   019AAE  C55B  F4F6         	movff	vfprintf@cfmt,tblptrl
 33374   019AB2  C55C  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 33375   019AB6                     	if	0	;tblptru may be non-zero
 33376   019AB6                     	endif
 33377   019AB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33378   019AB6  0E00               	movlw	low (__mediumconst shr (0+16))
 33379   019AB8  6EF8               	movwf	tblptru,c
 33380   019ABA                     	endif
 33381   019ABA  0008               	tblrd		*
 33382   019ABC  50F5               	movf	tablat,w,c
 33383   019ABE  0900               	iorlw	0
 33384   019AC0  A4D8               	btfss	status,2,c
 33385   019AC2  D7E7               	goto	l9367
 33386                           
 33387                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 33388   019AC4  0E00               	movlw	0
 33389   019AC6  0105               	movlb	5	; () banked
 33390   019AC8  6F95               	movwf	(?_vfprintf+1)& (0+255),b
 33391   019ACA  0E00               	movlw	0
 33392   019ACC  6F94               	movwf	?_vfprintf& (0+255),b
 33393                           
 33394                           ; BSR set to: 5
 33395   019ACE  0012               	return		;funcret
 33396   019AD0                     __end_of_vfprintf:
 33397                           	callstack 0
 33398                           
 33399 ;; *************** function _vfpfcnvrt *****************
 33400 ;; Defined at:
 33401 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 33402 ;; Parameters:    Size  Location     Type
 33403 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
 33404 ;;		 -> sprintf@f(12), NULL(0), 
 33405 ;;  fmt             2   82[COMRAM] PTR PTR unsigned char 
 33406 ;;		 -> vfprintf@cfmt(2), 
 33407 ;;  ap              2   84[COMRAM] PTR PTR void 
 33408 ;;		 -> printf@ap(2), sprintf@ap(2), 
 33409 ;; Auto vars:     Size  Location     Type
 33410 ;;  convarg         4   45[BANK5 ] struct .
 33411 ;;  cp              2   50[BANK5 ] PTR unsigned char 
 33412 ;;		 -> STR_90(36), STR_89(27), STR_87(3), STR_86(40), 
 33413 ;;		 -> STR_85(30), STR_84(47), STR_83(42), STR_82(35), 
 33414 ;;		 -> STR_81(50), STR_79(50), STR_78(55), STR_76(50), 
 33415 ;;		 -> STR_75(36), STR_74(34), STR_73(18), STR_72(41), 
 33416 ;;		 -> STR_71(38), STR_70(43), STR_69(36), STR_68(46), 
 33417 ;;		 -> STR_67(35), STR_66(27), STR_65(25), STR_64(45), 
 33418 ;;		 -> STR_63(19), STR_62(25), STR_61(28), STR_59(45), 
 33419 ;;		 -> STR_57(38), STR_56(21), STR_55(32), STR_54(31), 
 33420 ;;		 -> STR_53(22), STR_52(18), STR_51(14), STR_50(25), 
 33421 ;;		 -> STR_49(25), STR_48(3), STR_47(34), STR_46(24), 
 33422 ;;		 -> STR_45(16), STR_44(52), STR_43(15), STR_41(18), 
 33423 ;;		 -> STR_38(5), STR_37(9), STR_35(9), STR_32(27), 
 33424 ;;		 -> STR_25(24), STR_24(6), STR_23(6), STR_22(9), 
 33425 ;;		 -> STR_21(6), STR_20(6), STR_19(8), STR_18(50), 
 33426 ;;		 -> STR_17(44), STR_15(29), STR_14(44), STR_12(28), 
 33427 ;;		 -> STR_11(44), STR_10(18), STR_9(23), STR_8(33), 
 33428 ;;		 -> STR_7(21), STR_6(19), STR_4(26), STR_3(39), 
 33429 ;;		 -> STR_2(23), STR_1(25), 
 33430 ;;  c               1   49[BANK5 ] unsigned char 
 33431 ;;  done            1   44[BANK5 ] _Bool 
 33432 ;; Return value:  Size  Location     Type
 33433 ;;                  1    wreg      void 
 33434 ;; Registers used:
 33435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33436 ;; Tracked objects:
 33437 ;;		On entry : 0/5
 33438 ;;		On exit  : 0/0
 33439 ;;		Unchanged: 0/0
 33440 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33441 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33442 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33443 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33444 ;;      Totals:        10       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33445 ;;Total ram usage:       18 bytes
 33446 ;; Hardware stack levels used: 1
 33447 ;; Hardware stack levels required when called: 5
 33448 ;; This function calls:
 33449 ;;		_ctoa
 33450 ;;		_dtoa
 33451 ;;		_efgtoa
 33452 ;;		_fputc
 33453 ;;		_read_prec_or_width
 33454 ;;		_stoa
 33455 ;;		_xtoa
 33456 ;; This function is called by:
 33457 ;;		_vfprintf
 33458 ;; This function uses a non-reentrant model
 33459 ;;
 33460                           
 33461                           	psect	text78
 33462   012B4E                     __ptext78:
 33463                           	callstack 0
 33464   012B4E                     _vfpfcnvrt:
 33465                           	callstack 118
 33466                           
 33467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 33468                           
 33469                           ; BSR set to: 5
 33470                           ;incstack = 0
 33471   012B4E  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33472   012B52  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33473   012B56  C4DE F4F6          	movff	postinc2,tblptrl
 33474   012B5A  C4DD F4F7          	movff	postdec2,tblptrh
 33475   012B5E                     	if	0	;tblptru may be non-zero
 33476   012B5E                     	endif
 33477   012B5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33478   012B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 33479   012B60  6EF8               	movwf	tblptru,c
 33480   012B62                     	endif
 33481   012B62  0008               	tblrd		*
 33482   012B64  50F5               	movf	tablat,w,c
 33483   012B66  0A25               	xorlw	37
 33484   012B68  A4D8               	btfss	status,2,c
 33485   012B6A  D2C9               	goto	l9307
 33486                           
 33487                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 33488   012B6C  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33489   012B70  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33490   012B74  2ADE               	incf	postinc2,f,c
 33491   012B76  0E00               	movlw	0
 33492   012B78  22DD               	addwfc	postdec2,f,c
 33493                           
 33494                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 33495   012B7A  0E00               	movlw	0
 33496   012B7C  0107               	movlb	7	; () banked
 33497   012B7E  6F14               	movwf	(_width+1)& (0+255),b
 33498   012B80  0E00               	movlw	0
 33499   012B82  6F13               	movwf	_width& (0+255),b
 33500   012B84  C713  F727         	movff	_width,_flags
 33501                           
 33502                           ; BSR set to: 7
 33503                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 33504   012B88  6915               	setf	_prec& (0+255),b
 33505   012B8A  6916               	setf	(_prec+1)& (0+255),b
 33506                           
 33507                           ; BSR set to: 7
 33508                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 33509   012B8C  0E00               	movlw	0
 33510   012B8E  0105               	movlb	5	; () banked
 33511   012B90  D00B               	goto	L18
 33512   012B92                     l9159:
 33513                           
 33514                           ; BSR set to: 5
 33515                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 33516   012B92  0107               	movlb	7	; () banked
 33517   012B94  8327               	bsf	_flags& (0+255),1,b
 33518                           
 33519                           ; BSR set to: 7
 33520                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 33521   012B96  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33522   012B9A  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33523   012B9E  2ADE               	incf	postinc2,f,c
 33524   012BA0  0E00               	movlw	0
 33525   012BA2  22DD               	addwfc	postdec2,f,c
 33526                           
 33527                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 33528   012BA4  D013               	goto	l9169
 33529   012BA6                     l9163:
 33530                           
 33531                           ; BSR set to: 5
 33532                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 33533   012BA6  0E01               	movlw	1
 33534   012BA8                     L18:
 33535   012BA8  6F8C               	movwf	vfpfcnvrt@done& (0+255),b
 33536                           
 33537                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 33538   012BAA  D010               	goto	l9169
 33539   012BAC                     l9167:
 33540                           
 33541                           ; BSR set to: 5
 33542   012BAC  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33543   012BB0  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33544   012BB4  C4DE F4F6          	movff	postinc2,tblptrl
 33545   012BB8  C4DD F4F7          	movff	postdec2,tblptrh
 33546   012BBC                     	if	0	;tblptru may be non-zero
 33547   012BBC                     	endif
 33548   012BBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33549   012BBC  0E00               	movlw	low (__mediumconst shr (0+16))
 33550   012BBE  6EF8               	movwf	tblptru,c
 33551   012BC0                     	endif
 33552   012BC0  0008               	tblrd		*
 33553   012BC2  50F5               	movf	tablat,w,c
 33554                           
 33555                           ; Switch size 1, requested type "simple"
 33556                           ; Number of cases is 1, Range of values is 48 to 48
 33557                           ; switch strategies available:
 33558                           ; Name         Instructions Cycles
 33559                           ; simple_byte            4     3 (average)
 33560                           ;	Chosen strategy is simple_byte
 33561   012BC4  0A30               	xorlw	48	; case 48
 33562   012BC6  B4D8               	btfsc	status,2,c
 33563   012BC8  D7E4               	goto	l9159
 33564   012BCA  D7ED               	goto	l9163
 33565   012BCC                     l9169:
 33566                           
 33567                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 33568   012BCC  0105               	movlb	5	; () banked
 33569   012BCE  518C               	movf	vfpfcnvrt@done& (0+255),w,b
 33570   012BD0  B4D8               	btfsc	status,2,c
 33571   012BD2  D7EC               	goto	l9167
 33572                           
 33573                           ; BSR set to: 5
 33574                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 33575   012BD4  C553  F507         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 33576   012BD8  C554  F508         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 33577   012BDC  C555  F509         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 33578   012BE0  C556  F50A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 33579   012BE4  EC31  F0C5         	call	_read_prec_or_width	;wreg free
 33580   012BE8  C507  F713         	movff	?_read_prec_or_width,_width
 33581   012BEC  C508  F714         	movff	?_read_prec_or_width+1,_width+1
 33582                           
 33583                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 33584   012BF0  0107               	movlb	7	; () banked
 33585   012BF2  AF14               	btfss	(_width+1)& (0+255),7,b
 33586   012BF4  D005               	goto	l9177
 33587                           
 33588                           ; BSR set to: 7
 33589                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 33590   012BF6  8127               	bsf	_flags& (0+255),0,b
 33591                           
 33592                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 33593   012BF8  6D13               	negf	_width& (0+255),b
 33594   012BFA  1F14               	comf	(_width+1)& (0+255),f,b
 33595   012BFC  B0D8               	btfsc	status,0,c
 33596   012BFE  2B14               	incf	(_width+1)& (0+255),f,b
 33597   012C00                     l9177:
 33598                           
 33599                           ; BSR set to: 7
 33600                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 33601   012C00  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33602   012C04  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33603   012C08  C4DE F4F6          	movff	postinc2,tblptrl
 33604   012C0C  C4DD F4F7          	movff	postdec2,tblptrh
 33605   012C10                     	if	0	;tblptru may be non-zero
 33606   012C10                     	endif
 33607   012C10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33608   012C10  0E00               	movlw	low (__mediumconst shr (0+16))
 33609   012C12  6EF8               	movwf	tblptru,c
 33610   012C14                     	endif
 33611   012C14  0008               	tblrd		*
 33612   012C16  50F5               	movf	tablat,w,c
 33613   012C18  0A2E               	xorlw	46
 33614   012C1A  A4D8               	btfss	status,2,c
 33615   012C1C  D015               	goto	l9183
 33616                           
 33617                           ; BSR set to: 7
 33618                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 33619   012C1E  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33620   012C22  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33621   012C26  2ADE               	incf	postinc2,f,c
 33622   012C28  0E00               	movlw	0
 33623   012C2A  22DD               	addwfc	postdec2,f,c
 33624                           
 33625                           ; BSR set to: 7
 33626                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 33627   012C2C  C553  F507         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 33628   012C30  C554  F508         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 33629   012C34  C555  F509         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 33630   012C38  C556  F50A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 33631   012C3C  EC31  F0C5         	call	_read_prec_or_width	;wreg free
 33632   012C40  C507  F715         	movff	?_read_prec_or_width,_prec
 33633   012C44  C508  F716         	movff	?_read_prec_or_width+1,_prec+1
 33634   012C48                     l9183:
 33635                           
 33636                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
 33637   012C48  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33638   012C4C  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33639   012C50  C4DE F4F6          	movff	postinc2,tblptrl
 33640   012C54  C4DD F4F7          	movff	postdec2,tblptrh
 33641   012C58                     	if	0	;tblptru may be non-zero
 33642   012C58                     	endif
 33643   012C58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33644   012C58  0E00               	movlw	low (__mediumconst shr (0+16))
 33645   012C5A  6EF8               	movwf	tblptru,c
 33646   012C5C                     	endif
 33647   012C5C  0008               	tblrd		*
 33648   012C5E  50F5               	movf	tablat,w,c
 33649   012C60  0A63               	xorlw	99
 33650   012C62  A4D8               	btfss	status,2,c
 33651   012C64  D023               	goto	l9191
 33652                           
 33653                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
 33654   012C66  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33655   012C6A  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33656   012C6E  2ADE               	incf	postinc2,f,c
 33657   012C70  0E00               	movlw	0
 33658   012C72  22DD               	addwfc	postdec2,f,c
 33659                           
 33660                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 33661   012C74  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 33662   012C78  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 33663   012C7C  C4DF F557          	movff	indf2,??_vfpfcnvrt
 33664   012C80  0E02               	movlw	2
 33665   012C82  26DE               	addwf	postinc2,f,c
 33666   012C84  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 33667   012C88  0E00               	movlw	0
 33668   012C8A  22DD               	addwfc	postdec2,f,c
 33669   012C8C  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 33670   012C90  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 33671   012C94  50DF               	movf	indf2,w,c
 33672   012C96  0105               	movlb	5	; () banked
 33673   012C98  6F91               	movwf	vfpfcnvrt@c& (0+255),b
 33674                           
 33675                           ; BSR set to: 5
 33676                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
 33677   012C9A  C551  F50B         	movff	vfpfcnvrt@fp,ctoa@fp
 33678   012C9E  C552  F50C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 33679   012CA2  C591  F50D         	movff	vfpfcnvrt@c,ctoa@c
 33680   012CA6  EC81  F0C8         	call	_ctoa	;wreg free
 33681   012CAA  0012               	return	
 33682   012CAC                     l9191:
 33683                           
 33684                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 33685   012CAC  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33686   012CB0  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33687   012CB4  C4DE F592          	movff	postinc2,vfpfcnvrt@cp
 33688   012CB8  C4DD F593          	movff	postdec2,vfpfcnvrt@cp+1
 33689                           
 33690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 33691   012CBC  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33692   012CC0  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33693   012CC4                     	if	0	;tblptru may be non-zero
 33694   012CC4                     	endif
 33695   012CC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33696   012CC4  0E00               	movlw	low (__mediumconst shr (0+16))
 33697   012CC6  6EF8               	movwf	tblptru,c
 33698   012CC8                     	endif
 33699   012CC8  0008               	tblrd		*
 33700   012CCA  C4F5 F591          	movff	tablat,vfpfcnvrt@c
 33701                           
 33702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 33703   012CCE  D008               	goto	l9203
 33704   012CD0                     l9195:
 33705                           
 33706                           ; BSR set to: 5
 33707                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1309:     cp++;
 33708   012CD0  4B92               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 33709   012CD2  2B93               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 33710                           
 33711                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1316:     break;
 33712   012CD4  D017               	goto	l9205
 33713   012CD6                     l2615:
 33714                           
 33715                           ; BSR set to: 5
 33716                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 33717                           
 33718                           ; BSR set to: 5
 33719   012CD6  0E69               	movlw	105
 33720   012CD8  D001               	goto	L19
 33721   012CDA                     l9199:
 33722                           
 33723                           ; BSR set to: 5
 33724                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 33725   012CDA  0E00               	movlw	0
 33726   012CDC                     L19:
 33727   012CDC  6F91               	movwf	vfpfcnvrt@c& (0+255),b
 33728                           
 33729                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
 33730   012CDE  D012               	goto	l9205
 33731   012CE0                     l9203:
 33732   012CE0  0105               	movlb	5	; () banked
 33733   012CE2  5191               	movf	vfpfcnvrt@c& (0+255),w,b
 33734                           
 33735                           ; Switch size 1, requested type "simple"
 33736                           ; Number of cases is 5, Range of values is 88 to 120
 33737                           ; switch strategies available:
 33738                           ; Name         Instructions Cycles
 33739                           ; simple_byte           16     9 (average)
 33740                           ;	Chosen strategy is simple_byte
 33741   012CE4  0A58               	xorlw	88	; case 88
 33742   012CE6  B4D8               	btfsc	status,2,c
 33743   012CE8  D7F6               	goto	l2615
 33744   012CEA  0A3C               	xorlw	60	; case 100
 33745   012CEC  B4D8               	btfsc	status,2,c
 33746   012CEE  D7F3               	goto	l2615
 33747   012CF0  0A0D               	xorlw	13	; case 105
 33748   012CF2  B4D8               	btfsc	status,2,c
 33749   012CF4  D7F0               	goto	l2615
 33750   012CF6  0A05               	xorlw	5	; case 108
 33751   012CF8  B4D8               	btfsc	status,2,c
 33752   012CFA  D7EA               	goto	l9195
 33753   012CFC  0A14               	xorlw	20	; case 120
 33754   012CFE  B4D8               	btfsc	status,2,c
 33755   012D00  D7EA               	goto	l2615
 33756   012D02  D7EB               	goto	l9199
 33757   012D04                     l9205:
 33758                           
 33759                           ; BSR set to: 5
 33760                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 33761   012D04  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33762   012D08  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33763   012D0C                     	if	0	;tblptru may be non-zero
 33764   012D0C                     	endif
 33765   012D0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33766   012D0C  0E00               	movlw	low (__mediumconst shr (0+16))
 33767   012D0E  6EF8               	movwf	tblptru,c
 33768   012D10                     	endif
 33769   012D10  0008               	tblrd		*
 33770   012D12  50F5               	movf	tablat,w,c
 33771   012D14  0A64               	xorlw	100
 33772   012D16  B4D8               	btfsc	status,2,c
 33773   012D18  D03F               	goto	l9215
 33774                           
 33775                           ; BSR set to: 5
 33776   012D1A  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33777   012D1E  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33778   012D22                     	if	0	;tblptru may be non-zero
 33779   012D22                     	endif
 33780   012D22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33781   012D22  0E00               	movlw	low (__mediumconst shr (0+16))
 33782   012D24  6EF8               	movwf	tblptru,c
 33783   012D26                     	endif
 33784   012D26  0008               	tblrd		*
 33785   012D28  50F5               	movf	tablat,w,c
 33786   012D2A  0A69               	xorlw	105
 33787   012D2C  B4D8               	btfsc	status,2,c
 33788   012D2E  D034               	goto	l9215
 33789   012D30  D057               	goto	l9223
 33790   012D32                     l9209:
 33791                           
 33792                           ; BSR set to: 5
 33793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 33794   012D32  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 33795   012D36  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 33796   012D3A  C4DF F557          	movff	indf2,??_vfpfcnvrt
 33797   012D3E  0E02               	movlw	2
 33798   012D40  26DE               	addwf	postinc2,f,c
 33799   012D42  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 33800   012D46  0E00               	movlw	0
 33801   012D48  22DD               	addwfc	postdec2,f,c
 33802   012D4A  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 33803   012D4E  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 33804   012D52  C4DE F58D          	movff	postinc2,vfpfcnvrt@convarg
 33805   012D56  C4DD F58E          	movff	postdec2,vfpfcnvrt@convarg+1
 33806   012D5A  0E00               	movlw	0
 33807   012D5C  BF8E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
 33808   012D5E  0EFF               	movlw	-1
 33809   012D60  6F8F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 33810   012D62  6F90               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 33811                           
 33812                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1366:      break;
 33813   012D64  D020               	goto	l9217
 33814   012D66                     l9211:
 33815                           
 33816                           ; BSR set to: 5
 33817                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 33818   012D66  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 33819   012D6A  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 33820   012D6E  C4DF F557          	movff	indf2,??_vfpfcnvrt
 33821   012D72  0E04               	movlw	4
 33822   012D74  26DE               	addwf	postinc2,f,c
 33823   012D76  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 33824   012D7A  0E00               	movlw	0
 33825   012D7C  22DD               	addwfc	postdec2,f,c
 33826   012D7E  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 33827   012D82  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 33828   012D86  C4DE F58D          	movff	postinc2,vfpfcnvrt@convarg
 33829   012D8A  C4DE F58E          	movff	postinc2,vfpfcnvrt@convarg+1
 33830   012D8E  C4DE F58F          	movff	postinc2,vfpfcnvrt@convarg+2
 33831   012D92  C4DE F590          	movff	postinc2,vfpfcnvrt@convarg+3
 33832                           
 33833                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1380:      break;
 33834   012D96  D007               	goto	l9217
 33835   012D98                     l9215:
 33836                           
 33837                           ; BSR set to: 5
 33838   012D98  5191               	movf	vfpfcnvrt@c& (0+255),w,b
 33839                           
 33840                           ; Switch size 1, requested type "simple"
 33841                           ; Number of cases is 2, Range of values is 105 to 108
 33842                           ; switch strategies available:
 33843                           ; Name         Instructions Cycles
 33844                           ; simple_byte            7     4 (average)
 33845                           ;	Chosen strategy is simple_byte
 33846   012D9A  0A69               	xorlw	105	; case 105
 33847   012D9C  B4D8               	btfsc	status,2,c
 33848   012D9E  D7C9               	goto	l9209
 33849   012DA0  0A05               	xorlw	5	; case 108
 33850   012DA2  B4D8               	btfsc	status,2,c
 33851   012DA4  D7E0               	goto	l9211
 33852   012DA6                     l9217:
 33853                           
 33854                           ; BSR set to: 5
 33855                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 33856   012DA6  0E01               	movlw	1
 33857   012DA8  2592               	addwf	vfpfcnvrt@cp& (0+255),w,b
 33858   012DAA  6E57               	movwf	??_vfpfcnvrt^(0+1280),c
 33859   012DAC  0E00               	movlw	0
 33860   012DAE  2193               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 33861   012DB0  6E58               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 33862   012DB2  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33863   012DB6  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33864   012DBA  C557  F4DE         	movff	??_vfpfcnvrt,postinc2
 33865   012DBE  C558  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 33866                           
 33867                           ; BSR set to: 5
 33868                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 33869   012DC2  C551  F51B         	movff	vfpfcnvrt@fp,dtoa@fp
 33870   012DC6  C552  F51C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 33871   012DCA  C58D  F51D         	movff	vfpfcnvrt@convarg,dtoa@d
 33872   012DCE  C58E  F51E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 33873   012DD2  C58F  F51F         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 33874   012DD6  C590  F520         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 33875   012DDA  ECA6  F0B8         	call	_dtoa	;wreg free
 33876   012DDE  0012               	return	
 33877   012DE0                     l9223:
 33878                           
 33879                           ; BSR set to: 5
 33880   012DE0  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33881   012DE4  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33882   012DE8                     	if	0	;tblptru may be non-zero
 33883   012DE8                     	endif
 33884   012DE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33885   012DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 33886   012DEA  6EF8               	movwf	tblptru,c
 33887   012DEC                     	endif
 33888   012DEC  0008               	tblrd		*
 33889   012DEE  50F5               	movf	tablat,w,c
 33890   012DF0  0A78               	xorlw	120
 33891   012DF2  B4D8               	btfsc	status,2,c
 33892   012DF4  D040               	goto	l9233
 33893                           
 33894                           ; BSR set to: 5
 33895   012DF6  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33896   012DFA  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33897   012DFE                     	if	0	;tblptru may be non-zero
 33898   012DFE                     	endif
 33899   012DFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33900   012DFE  0E00               	movlw	low (__mediumconst shr (0+16))
 33901   012E00  6EF8               	movwf	tblptru,c
 33902   012E02                     	endif
 33903   012E02  0008               	tblrd		*
 33904   012E04  50F5               	movf	tablat,w,c
 33905   012E06  0A58               	xorlw	88
 33906   012E08  B4D8               	btfsc	status,2,c
 33907   012E0A  D035               	goto	l9233
 33908   012E0C  D070               	goto	l9245
 33909   012E0E                     l9227:
 33910                           
 33911                           ; BSR set to: 5
 33912                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 33913   012E0E  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 33914   012E12  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 33915   012E16  C4DF F557          	movff	indf2,??_vfpfcnvrt
 33916   012E1A  0E02               	movlw	2
 33917   012E1C  26DE               	addwf	postinc2,f,c
 33918   012E1E  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 33919   012E22  0E00               	movlw	0
 33920   012E24  22DD               	addwfc	postdec2,f,c
 33921   012E26  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 33922   012E2A  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 33923   012E2E  C4DE F559          	movff	postinc2,??_vfpfcnvrt+2
 33924   012E32  C4DD F55A          	movff	postdec2,??_vfpfcnvrt+3
 33925   012E36  C559  F58D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
 33926   012E3A  C55A  F58E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
 33927   012E3E  6B8F               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 33928   012E40  6B90               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 33929                           
 33930                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
 33931   012E42  D020               	goto	l9235
 33932   012E44                     l9229:
 33933                           
 33934                           ; BSR set to: 5
 33935                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 33936   012E44  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 33937   012E48  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 33938   012E4C  C4DF F557          	movff	indf2,??_vfpfcnvrt
 33939   012E50  0E04               	movlw	4
 33940   012E52  26DE               	addwf	postinc2,f,c
 33941   012E54  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 33942   012E58  0E00               	movlw	0
 33943   012E5A  22DD               	addwfc	postdec2,f,c
 33944   012E5C  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 33945   012E60  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 33946   012E64  C4DE F58D          	movff	postinc2,vfpfcnvrt@convarg
 33947   012E68  C4DE F58E          	movff	postinc2,vfpfcnvrt@convarg+1
 33948   012E6C  C4DE F58F          	movff	postinc2,vfpfcnvrt@convarg+2
 33949   012E70  C4DE F590          	movff	postinc2,vfpfcnvrt@convarg+3
 33950                           
 33951                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1471:      break;
 33952   012E74  D007               	goto	l9235
 33953   012E76                     l9233:
 33954                           
 33955                           ; BSR set to: 5
 33956   012E76  5191               	movf	vfpfcnvrt@c& (0+255),w,b
 33957                           
 33958                           ; Switch size 1, requested type "simple"
 33959                           ; Number of cases is 2, Range of values is 105 to 108
 33960                           ; switch strategies available:
 33961                           ; Name         Instructions Cycles
 33962                           ; simple_byte            7     4 (average)
 33963                           ;	Chosen strategy is simple_byte
 33964   012E78  0A69               	xorlw	105	; case 105
 33965   012E7A  B4D8               	btfsc	status,2,c
 33966   012E7C  D7C8               	goto	l9227
 33967   012E7E  0A05               	xorlw	5	; case 108
 33968   012E80  B4D8               	btfsc	status,2,c
 33969   012E82  D7E0               	goto	l9229
 33970   012E84                     l9235:
 33971                           
 33972                           ; BSR set to: 5
 33973                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 33974   012E84  0E01               	movlw	1
 33975   012E86  2592               	addwf	vfpfcnvrt@cp& (0+255),w,b
 33976   012E88  6E57               	movwf	??_vfpfcnvrt^(0+1280),c
 33977   012E8A  0E00               	movlw	0
 33978   012E8C  2193               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 33979   012E8E  6E58               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 33980   012E90  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 33981   012E94  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 33982   012E98  C557  F4DE         	movff	??_vfpfcnvrt,postinc2
 33983   012E9C  C558  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 33984                           
 33985                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 33986   012EA0  D018               	goto	l9243
 33987   012EA2                     l9237:
 33988                           
 33989                           ; BSR set to: 5
 33990                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint,*cp);;	Return value of _vfpfcnvrt is never used
 33991   012EA2  C551  F51B         	movff	vfpfcnvrt@fp,xtoa@fp
 33992   012EA6  C552  F51C         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 33993   012EAA  C58D  F51D         	movff	vfpfcnvrt@convarg,xtoa@d
 33994   012EAE  C58E  F51E         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 33995   012EB2  C58F  F51F         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
 33996   012EB6  C590  F520         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
 33997   012EBA  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 33998   012EBE  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 33999   012EC2                     	if	0	;tblptru may be non-zero
 34000   012EC2                     	endif
 34001   012EC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34002   012EC2  0E00               	movlw	low (__mediumconst shr (0+16))
 34003   012EC4  6EF8               	movwf	tblptru,c
 34004   012EC6                     	endif
 34005   012EC6  0008               	tblrd		*
 34006   012EC8  C4F5 F521          	movff	tablat,xtoa@x
 34007   012ECC  ECC3  F0BE         	call	_xtoa	;wreg free
 34008   012ED0  0012               	return	
 34009   012ED2                     l9243:
 34010                           
 34011                           ; BSR set to: 5
 34012   012ED2  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 34013   012ED6  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 34014   012EDA                     	if	0	;tblptru may be non-zero
 34015   012EDA                     	endif
 34016   012EDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34017   012EDA  0E00               	movlw	low (__mediumconst shr (0+16))
 34018   012EDC  6EF8               	movwf	tblptru,c
 34019   012EDE                     	endif
 34020   012EDE  0008               	tblrd		*
 34021   012EE0  50F5               	movf	tablat,w,c
 34022                           
 34023                           ; Switch size 1, requested type "simple"
 34024                           ; Number of cases is 2, Range of values is 88 to 120
 34025                           ; switch strategies available:
 34026                           ; Name         Instructions Cycles
 34027                           ; simple_byte            7     4 (average)
 34028                           ;	Chosen strategy is simple_byte
 34029   012EE2  0A58               	xorlw	88	; case 88
 34030   012EE4  B4D8               	btfsc	status,2,c
 34031   012EE6  D7DD               	goto	l9237
 34032   012EE8  0A20               	xorlw	32	; case 120
 34033   012EEA  B4D8               	btfsc	status,2,c
 34034   012EEC  D7DA               	goto	l9237
 34035   012EEE                     l9245:
 34036                           
 34037                           ; BSR set to: 5
 34038                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 34039   012EEE  0E00               	movlw	0
 34040   012EF0  6F8C               	movwf	vfpfcnvrt@done& (0+255),b
 34041                           
 34042                           ; BSR set to: 5
 34043                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 34044   012EF2  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34045   012EF6  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34046   012EFA  C4DE F4F6          	movff	postinc2,tblptrl
 34047   012EFE  C4DD F4F7          	movff	postdec2,tblptrh
 34048   012F02                     	if	0	;tblptru may be non-zero
 34049   012F02                     	endif
 34050   012F02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34051   012F02  0E00               	movlw	low (__mediumconst shr (0+16))
 34052   012F04  6EF8               	movwf	tblptru,c
 34053   012F06                     	endif
 34054   012F06  0008               	tblrd		*
 34055   012F08  50F5               	movf	tablat,w,c
 34056   012F0A  0A73               	xorlw	115
 34057   012F0C  A4D8               	btfss	status,2,c
 34058   012F0E  D00A               	goto	l9253
 34059                           
 34060                           ; BSR set to: 5
 34061                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 34062   012F10  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34063   012F14  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34064   012F18  2ADE               	incf	postinc2,f,c
 34065   012F1A  0E00               	movlw	0
 34066   012F1C  22DD               	addwfc	postdec2,f,c
 34067                           
 34068                           ; BSR set to: 5
 34069                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 34070   012F1E  0E01               	movlw	1
 34071   012F20  6F8C               	movwf	vfpfcnvrt@done& (0+255),b
 34072                           
 34073                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
 34074   012F22  D044               	goto	l9263
 34075   012F24                     l9253:
 34076                           
 34077                           ; BSR set to: 5
 34078   012F24  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34079   012F28  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34080   012F2C  C4DE F4F6          	movff	postinc2,tblptrl
 34081   012F30  C4DD F4F7          	movff	postdec2,tblptrh
 34082   012F34                     	if	0	;tblptru may be non-zero
 34083   012F34                     	endif
 34084   012F34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34085   012F34  0E00               	movlw	low (__mediumconst shr (0+16))
 34086   012F36  6EF8               	movwf	tblptru,c
 34087   012F38                     	endif
 34088   012F38  0008               	tblrd		*
 34089   012F3A  50F5               	movf	tablat,w,c
 34090   012F3C  0A6C               	xorlw	108
 34091   012F3E  A4D8               	btfss	status,2,c
 34092   012F40  D035               	goto	l9263
 34093                           
 34094                           ; BSR set to: 5
 34095   012F42  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34096   012F46  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34097   012F4A  C4DE F557          	movff	postinc2,??_vfpfcnvrt
 34098   012F4E  C4DD F558          	movff	postdec2,??_vfpfcnvrt+1
 34099   012F52  0E01               	movlw	1
 34100   012F54  2657               	addwf	??_vfpfcnvrt^(0+1280),f,c
 34101   012F56  0E00               	movlw	0
 34102   012F58  2258               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 34103   012F5A  C557  F4F6         	movff	??_vfpfcnvrt,tblptrl
 34104   012F5E  C558  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 34105   012F62                     	if	0	;tblptru may be non-zero
 34106   012F62                     	endif
 34107   012F62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34108   012F62  0E00               	movlw	low (__mediumconst shr (0+16))
 34109   012F64  6EF8               	movwf	tblptru,c
 34110   012F66                     	endif
 34111   012F66  0008               	tblrd		*
 34112   012F68  50F5               	movf	tablat,w,c
 34113   012F6A  0A6C               	xorlw	108
 34114   012F6C  A4D8               	btfss	status,2,c
 34115   012F6E  D01E               	goto	l9263
 34116                           
 34117                           ; BSR set to: 5
 34118   012F70  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34119   012F74  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34120   012F78  C4DE F557          	movff	postinc2,??_vfpfcnvrt
 34121   012F7C  C4DD F558          	movff	postdec2,??_vfpfcnvrt+1
 34122   012F80  0E02               	movlw	2
 34123   012F82  2657               	addwf	??_vfpfcnvrt^(0+1280),f,c
 34124   012F84  0E00               	movlw	0
 34125   012F86  2258               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 34126   012F88  C557  F4F6         	movff	??_vfpfcnvrt,tblptrl
 34127   012F8C  C558  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 34128   012F90                     	if	0	;tblptru may be non-zero
 34129   012F90                     	endif
 34130   012F90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34131   012F90  0E00               	movlw	low (__mediumconst shr (0+16))
 34132   012F92  6EF8               	movwf	tblptru,c
 34133   012F94                     	endif
 34134   012F94  0008               	tblrd		*
 34135   012F96  50F5               	movf	tablat,w,c
 34136   012F98  0A73               	xorlw	115
 34137   012F9A  A4D8               	btfss	status,2,c
 34138   012F9C  D007               	goto	l9263
 34139                           
 34140                           ; BSR set to: 5
 34141                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 34142   012F9E  0E03               	movlw	3
 34143   012FA0  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34144   012FA4  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34145   012FA8  26DE               	addwf	postinc2,f,c
 34146   012FAA  D7B7               	goto	L20
 34147   012FAC                     l9263:
 34148                           
 34149                           ; BSR set to: 5
 34150                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 34151   012FAC  518C               	movf	vfpfcnvrt@done& (0+255),w,b
 34152   012FAE  B4D8               	btfsc	status,2,c
 34153   012FB0  D01B               	goto	l9269
 34154                           
 34155                           ; BSR set to: 5
 34156                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 34157   012FB2  C551  F50B         	movff	vfpfcnvrt@fp,stoa@fp
 34158   012FB6  C552  F50C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 34159   012FBA  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 34160   012FBE  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 34161   012FC2  C4DF F557          	movff	indf2,??_vfpfcnvrt
 34162   012FC6  0E02               	movlw	2
 34163   012FC8  26DE               	addwf	postinc2,f,c
 34164   012FCA  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 34165   012FCE  0E00               	movlw	0
 34166   012FD0  22DD               	addwfc	postdec2,f,c
 34167   012FD2  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 34168   012FD6  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 34169   012FDA  C4DE F50D          	movff	postinc2,stoa@s
 34170   012FDE  C4DD F50E          	movff	postdec2,stoa@s+1
 34171   012FE2  EC9D  F0BA         	call	_stoa	;wreg free
 34172   012FE6  0012               	return	
 34173   012FE8                     l9269:
 34174                           
 34175                           ; BSR set to: 5
 34176                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 34177   012FE8  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34178   012FEC  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34179   012FF0  C4DE F592          	movff	postinc2,vfpfcnvrt@cp
 34180   012FF4  C4DD F593          	movff	postdec2,vfpfcnvrt@cp+1
 34181                           
 34182                           ; BSR set to: 5
 34183                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 34184   012FF8  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 34185   012FFC  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 34186   013000                     	if	0	;tblptru may be non-zero
 34187   013000                     	endif
 34188   013000                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34189   013000  0E00               	movlw	low (__mediumconst shr (0+16))
 34190   013002  6EF8               	movwf	tblptru,c
 34191   013004                     	endif
 34192   013004  0008               	tblrd		*
 34193   013006  C4F5 F591          	movff	tablat,vfpfcnvrt@c
 34194                           
 34195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 34196   01300A  D008               	goto	l9281
 34197   01300C                     l9273:
 34198                           
 34199                           ; BSR set to: 5
 34200                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 34201   01300C  4B92               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 34202   01300E  2B93               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 34203                           
 34204                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
 34205   013010  D010               	goto	l9283
 34206   013012                     l9275:
 34207                           
 34208                           ; BSR set to: 5
 34209                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 34210   013012  0E6C               	movlw	108
 34211   013014  D001               	goto	L21
 34212   013016                     l9277:
 34213                           
 34214                           ; BSR set to: 5
 34215                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 34216   013016  0E00               	movlw	0
 34217   013018                     L21:
 34218   013018  6F91               	movwf	vfpfcnvrt@c& (0+255),b
 34219                           
 34220                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
 34221   01301A  D00B               	goto	l9283
 34222   01301C                     l9281:
 34223                           
 34224                           ; BSR set to: 5
 34225   01301C  5191               	movf	vfpfcnvrt@c& (0+255),w,b
 34226                           
 34227                           ; Switch size 1, requested type "simple"
 34228                           ; Number of cases is 3, Range of values is 76 to 108
 34229                           ; switch strategies available:
 34230                           ; Name         Instructions Cycles
 34231                           ; simple_byte           10     6 (average)
 34232                           ;	Chosen strategy is simple_byte
 34233   01301E  0A4C               	xorlw	76	; case 76
 34234   013020  B4D8               	btfsc	status,2,c
 34235   013022  D7F4               	goto	l9273
 34236   013024  0A2A               	xorlw	42	; case 102
 34237   013026  B4D8               	btfsc	status,2,c
 34238   013028  D7F4               	goto	l9275
 34239   01302A  0A0A               	xorlw	10	; case 108
 34240   01302C  B4D8               	btfsc	status,2,c
 34241   01302E  D7EE               	goto	l9273
 34242   013030  D7F2               	goto	l9277
 34243   013032                     l9283:
 34244                           
 34245                           ; BSR set to: 5
 34246   013032  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 34247   013036  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 34248   01303A                     	if	0	;tblptru may be non-zero
 34249   01303A                     	endif
 34250   01303A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34251   01303A  0E00               	movlw	low (__mediumconst shr (0+16))
 34252   01303C  6EF8               	movwf	tblptru,c
 34253   01303E                     	endif
 34254   01303E  0008               	tblrd		*
 34255   013040  50F5               	movf	tablat,w,c
 34256   013042  0A66               	xorlw	102
 34257   013044  B4D8               	btfsc	status,2,c
 34258   013046  D01A               	goto	l9291
 34259   013048  D052               	goto	l9303
 34260   01304A                     l9285:
 34261                           
 34262                           ; BSR set to: 5
 34263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 34264                           
 34265                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
 34266                           
 34267                           ; BSR set to: 5
 34268                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 34269   01304A  C555  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 34270   01304E  C556  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 34271   013052  C4DF F557          	movff	indf2,??_vfpfcnvrt
 34272   013056  0E04               	movlw	4
 34273   013058  26DE               	addwf	postinc2,f,c
 34274   01305A  C4DF F558          	movff	indf2,??_vfpfcnvrt+1
 34275   01305E  0E00               	movlw	0
 34276   013060  22DD               	addwfc	postdec2,f,c
 34277   013062  C557  F4D9         	movff	??_vfpfcnvrt,fsr2l
 34278   013066  C558  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 34279   01306A  C4DE F58D          	movff	postinc2,vfpfcnvrt@convarg
 34280   01306E  C4DE F58E          	movff	postinc2,vfpfcnvrt@convarg+1
 34281   013072  C4DE F58F          	movff	postinc2,vfpfcnvrt@convarg+2
 34282   013076  C4DE F590          	movff	postinc2,vfpfcnvrt@convarg+3
 34283                           
 34284                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
 34285   01307A  D007               	goto	l9293
 34286   01307C                     l9291:
 34287                           
 34288                           ; BSR set to: 5
 34289   01307C  5191               	movf	vfpfcnvrt@c& (0+255),w,b
 34290                           
 34291                           ; Switch size 1, requested type "simple"
 34292                           ; Number of cases is 2, Range of values is 76 to 108
 34293                           ; switch strategies available:
 34294                           ; Name         Instructions Cycles
 34295                           ; simple_byte            7     4 (average)
 34296                           ;	Chosen strategy is simple_byte
 34297   01307E  0A4C               	xorlw	76	; case 76
 34298   013080  B4D8               	btfsc	status,2,c
 34299   013082  D7E3               	goto	l9285
 34300   013084  0A20               	xorlw	32	; case 108
 34301   013086  B4D8               	btfsc	status,2,c
 34302   013088  D7E0               	goto	l9285
 34303   01308A                     l9293:
 34304                           
 34305                           ; BSR set to: 5
 34306                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 34307   01308A  0E01               	movlw	1
 34308   01308C  2592               	addwf	vfpfcnvrt@cp& (0+255),w,b
 34309   01308E  6E57               	movwf	??_vfpfcnvrt^(0+1280),c
 34310   013090  0E00               	movlw	0
 34311   013092  2193               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 34312   013094  6E58               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 34313   013096  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34314   01309A  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34315   01309E  C557  F4DE         	movff	??_vfpfcnvrt,postinc2
 34316   0130A2  C558  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 34317                           
 34318                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 34319   0130A6  D018               	goto	l9301
 34320   0130A8                     l9295:
 34321                           
 34322                           ; BSR set to: 5
 34323                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 34324   0130A8  C551  F548         	movff	vfpfcnvrt@fp,efgtoa@fp
 34325   0130AC  C552  F549         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 34326   0130B0  C58D  F54A         	movff	vfpfcnvrt@convarg,efgtoa@f
 34327   0130B4  C58E  F54B         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 34328   0130B8  C58F  F54C         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 34329   0130BC  C590  F54D         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 34330   0130C0  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 34331   0130C4  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 34332   0130C8                     	if	0	;tblptru may be non-zero
 34333   0130C8                     	endif
 34334   0130C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34335   0130C8  0E00               	movlw	low (__mediumconst shr (0+16))
 34336   0130CA  6EF8               	movwf	tblptru,c
 34337   0130CC                     	endif
 34338   0130CC  0008               	tblrd		*
 34339   0130CE  C4F5 F54E          	movff	tablat,efgtoa@c
 34340   0130D2  EC00  F080         	call	_efgtoa	;wreg free
 34341   0130D6  0012               	return	
 34342   0130D8                     l9301:
 34343                           
 34344                           ; BSR set to: 5
 34345   0130D8  C592  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 34346   0130DC  C593  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 34347   0130E0                     	if	0	;tblptru may be non-zero
 34348   0130E0                     	endif
 34349   0130E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34350   0130E0  0E00               	movlw	low (__mediumconst shr (0+16))
 34351   0130E2  6EF8               	movwf	tblptru,c
 34352   0130E4                     	endif
 34353   0130E4  0008               	tblrd		*
 34354   0130E6  50F5               	movf	tablat,w,c
 34355                           
 34356                           ; Switch size 1, requested type "simple"
 34357                           ; Number of cases is 1, Range of values is 102 to 102
 34358                           ; switch strategies available:
 34359                           ; Name         Instructions Cycles
 34360                           ; simple_byte            4     3 (average)
 34361                           ;	Chosen strategy is simple_byte
 34362   0130E8  0A66               	xorlw	102	; case 102
 34363   0130EA  B4D8               	btfsc	status,2,c
 34364   0130EC  D7DD               	goto	l9295
 34365   0130EE                     l9303:
 34366                           
 34367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 34368   0130EE  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34369   0130F2  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34370   0130F6  2ADE               	incf	postinc2,f,c
 34371   0130F8  0E00               	movlw	0
 34372   0130FA  22DD               	addwfc	postdec2,f,c
 34373   0130FC  0012               	return	
 34374   0130FE                     l9307:
 34375                           
 34376                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 34377   0130FE  C553  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 34378   013102  C554  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 34379   013106  C4DE F4F6          	movff	postinc2,tblptrl
 34380   01310A  C4DD F4F7          	movff	postdec2,tblptrh
 34381   01310E                     	if	0	;tblptru may be non-zero
 34382   01310E                     	endif
 34383   01310E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34384   01310E  0E00               	movlw	low (__mediumconst shr (0+16))
 34385   013110  6EF8               	movwf	tblptru,c
 34386   013112                     	endif
 34387   013112  0008               	tblrd		*
 34388   013114  50F5               	movf	tablat,w,c
 34389   013116  6E02               	movwf	fputc@c^(0+1280),c
 34390   013118  6A03               	clrf	(fputc@c+1)^(0+1280),c
 34391   01311A  C551  F504         	movff	vfpfcnvrt@fp,fputc@fp
 34392   01311E  C552  F505         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 34393   013122  EC95  F0C7         	call	_fputc	;wreg free
 34394   013126  D7E3               	goto	l9303
 34395   013128                     __end_of_vfpfcnvrt:
 34396                           	callstack 0
 34397                           
 34398 ;; *************** function _xtoa *****************
 34399 ;; Defined at:
 34400 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 34401 ;; Parameters:    Size  Location     Type
 34402 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
 34403 ;;		 -> sprintf@f(12), NULL(0), 
 34404 ;;  d               4   28[COMRAM] unsigned long 
 34405 ;;  x               1   32[COMRAM] unsigned char 
 34406 ;; Auto vars:     Size  Location     Type
 34407 ;;  i               2   45[COMRAM] int 
 34408 ;;  w               2   42[COMRAM] int 
 34409 ;;  p               2   40[COMRAM] int 
 34410 ;;  c               1   44[COMRAM] unsigned char 
 34411 ;;  a               1   39[COMRAM] unsigned char 
 34412 ;; Return value:  Size  Location     Type
 34413 ;;                  1    wreg      void 
 34414 ;; Registers used:
 34415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34416 ;; Tracked objects:
 34417 ;;		On entry : 0/5
 34418 ;;		On exit  : 0/0
 34419 ;;		Unchanged: 0/0
 34420 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34421 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34422 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34424 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34425 ;;Total ram usage:       21 bytes
 34426 ;; Hardware stack levels used: 1
 34427 ;; Hardware stack levels required when called: 4
 34428 ;; This function calls:
 34429 ;;		_pad
 34430 ;; This function is called by:
 34431 ;;		_vfpfcnvrt
 34432 ;; This function uses a non-reentrant model
 34433 ;;
 34434                           
 34435                           	psect	text79
 34436   017D86                     __ptext79:
 34437                           	callstack 0
 34438   017D86                     _xtoa:
 34439                           	callstack 118
 34440                           
 34441                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1052: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d, char x);C:\Program Files\Microchip\xc8\v2.46\pic\sources\
      +                          c99\common\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\do
      +                          prnt.c: 1061:  char a;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dop
      +                          rnt.c: 1065:  int p;
 34442                           
 34443                           ;incstack = 0
 34444   017D86  0107               	movlb	7	; () banked
 34445   017D88  AF16               	btfss	(_prec+1)& (0+255),7,b
 34446                           
 34447                           ; BSR set to: 7
 34448                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
 34449   017D8A  9327               	bcf	_flags& (0+255),1,b
 34450                           
 34451                           ; BSR set to: 7
 34452                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
 34453   017D8C  AF16               	btfss	(_prec+1)& (0+255),7,b
 34454   017D8E  D005               	goto	l2571
 34455                           
 34456                           ; BSR set to: 7
 34457   017D90  0E00               	movlw	0
 34458   017D92  6E2A               	movwf	(xtoa@p+1)^(0+1280),c
 34459   017D94  0E01               	movlw	1
 34460   017D96  6E29               	movwf	xtoa@p^(0+1280),c
 34461   017D98  D004               	goto	l2573
 34462   017D9A                     l2571:
 34463                           
 34464                           ; BSR set to: 7
 34465   017D9A  C715  F529         	movff	_prec,xtoa@p
 34466   017D9E  C716  F52A         	movff	_prec+1,xtoa@p+1
 34467   017DA2                     l2573:
 34468                           
 34469                           ; BSR set to: 7
 34470                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 34471   017DA2  C713  F52B         	movff	_width,xtoa@w
 34472   017DA6  C714  F52C         	movff	_width+1,xtoa@w+1
 34473                           
 34474                           ; BSR set to: 7
 34475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
 34476   017DAA  0E78               	movlw	120
 34477   017DAC  1821               	xorwf	xtoa@x^(0+1280),w,c
 34478   017DAE  B4D8               	btfsc	status,2,c
 34479   017DB0  D004               	goto	l8979
 34480                           
 34481                           ; BSR set to: 7
 34482   017DB2  0E00               	movlw	0
 34483   017DB4  6E27               	movwf	(_xtoa$3453+1)^(0+1280),c
 34484   017DB6  0E41               	movlw	65
 34485   017DB8  D003               	goto	L22
 34486   017DBA                     l8979:
 34487                           
 34488                           ; BSR set to: 7
 34489   017DBA  0E00               	movlw	0
 34490   017DBC  6E27               	movwf	(_xtoa$3453+1)^(0+1280),c
 34491   017DBE  0E61               	movlw	97
 34492   017DC0                     L22:
 34493   017DC0  6E26               	movwf	_xtoa$3453^(0+1280),c
 34494                           
 34495                           ; BSR set to: 7
 34496   017DC2  C526  F528         	movff	_xtoa$3453,xtoa@a
 34497                           
 34498                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 34499   017DC6  0E00               	movlw	0
 34500   017DC8  6E2F               	movwf	(xtoa@i+1)^(0+1280),c
 34501   017DCA  0E4F               	movlw	79
 34502   017DCC  6E2E               	movwf	xtoa@i^(0+1280),c
 34503                           
 34504                           ; BSR set to: 7
 34505                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 34506   017DCE  0E00               	movlw	0
 34507   017DD0  6F7C               	movwf	(_dbuf+79)& (0+255),b
 34508                           
 34509                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 34510   017DD2  D035               	goto	l9003
 34511   017DD4                     l8985:
 34512                           
 34513                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1107:         --i;
 34514   017DD4  062E               	decf	xtoa@i^(0+1280),f,c
 34515   017DD6  A0D8               	btfss	status,0,c
 34516   017DD8  062F               	decf	(xtoa@i+1)^(0+1280),f,c
 34517                           
 34518                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 34519   017DDA  501D               	movf	xtoa@d^(0+1280),w,c
 34520   017DDC  0B0F               	andlw	15
 34521   017DDE  6E2D               	movwf	xtoa@c^(0+1280),c
 34522                           
 34523                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 34524   017DE0  0E0A               	movlw	10
 34525   017DE2  602D               	cpfslt	xtoa@c^(0+1280),c
 34526   017DE4  D002               	goto	l8993
 34527                           
 34528                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 34529   017DE6  0E30               	movlw	48
 34530   017DE8  D002               	goto	L23
 34531   017DEA                     l8993:
 34532                           
 34533                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
 34534   017DEA  5028               	movf	xtoa@a^(0+1280),w,c
 34535   017DEC  0FF6               	addlw	246
 34536   017DEE                     L23:
 34537   017DEE  262D               	addwf	xtoa@c^(0+1280),f,c
 34538                           
 34539                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 34540   017DF0  0E2D               	movlw	low _dbuf
 34541   017DF2  242E               	addwf	xtoa@i^(0+1280),w,c
 34542   017DF4  6ED9               	movwf	fsr2l,c
 34543   017DF6  0E07               	movlw	high _dbuf
 34544   017DF8  202F               	addwfc	(xtoa@i+1)^(0+1280),w,c
 34545   017DFA  6EDA               	movwf	fsr2h,c
 34546   017DFC  C52D  F4DF         	movff	xtoa@c,indf2
 34547                           
 34548                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
 34549   017E00  0629               	decf	xtoa@p^(0+1280),f,c
 34550   017E02  A0D8               	btfss	status,0,c
 34551   017E04  062A               	decf	(xtoa@p+1)^(0+1280),f,c
 34552                           
 34553                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 34554   017E06  062B               	decf	xtoa@w^(0+1280),f,c
 34555   017E08  A0D8               	btfss	status,0,c
 34556   017E0A  062C               	decf	(xtoa@w+1)^(0+1280),f,c
 34557                           
 34558                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 34559   017E0C  C51D  F522         	movff	xtoa@d,??_xtoa
 34560   017E10  C51E  F523         	movff	xtoa@d+1,??_xtoa+1
 34561   017E14  C51F  F524         	movff	xtoa@d+2,??_xtoa+2
 34562   017E18  C520  F525         	movff	xtoa@d+3,??_xtoa+3
 34563   017E1C  0E05               	movlw	5
 34564   017E1E  D005               	goto	u10310
 34565   017E20                     u10315:
 34566   017E20  90D8               	bcf	status,0,c
 34567   017E22  3225               	rrcf	(??_xtoa+3)^(0+1280),f,c
 34568   017E24  3224               	rrcf	(??_xtoa+2)^(0+1280),f,c
 34569   017E26  3223               	rrcf	(??_xtoa+1)^(0+1280),f,c
 34570   017E28  3222               	rrcf	??_xtoa^(0+1280),f,c
 34571   017E2A                     u10310:
 34572   017E2A  2EE8               	decfsz	wreg,f,c
 34573   017E2C  D7F9               	goto	u10315
 34574   017E2E  C522  F51D         	movff	??_xtoa,xtoa@d
 34575   017E32  C523  F51E         	movff	??_xtoa+1,xtoa@d+1
 34576   017E36  C524  F51F         	movff	??_xtoa+2,xtoa@d+2
 34577   017E3A  C525  F520         	movff	??_xtoa+3,xtoa@d+3
 34578   017E3E                     l9003:
 34579                           
 34580                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 34581   017E3E  BE2F               	btfsc	(xtoa@i+1)^(0+1280),7,c
 34582   017E40  D01D               	goto	u10360
 34583   017E42  502F               	movf	(xtoa@i+1)^(0+1280),w,c
 34584   017E44  E104               	bnz	u10320
 34585   017E46  0E02               	movlw	2
 34586   017E48  5C2E               	subwf	xtoa@i^(0+1280),w,c
 34587   017E4A  A0D8               	btfss	status,0,c
 34588   017E4C  D017               	goto	u10360
 34589   017E4E                     u10320:
 34590   017E4E  501D               	movf	xtoa@d^(0+1280),w,c
 34591   017E50  101E               	iorwf	(xtoa@d+1)^(0+1280),w,c
 34592   017E52  101F               	iorwf	(xtoa@d+2)^(0+1280),w,c
 34593   017E54  1020               	iorwf	(xtoa@d+3)^(0+1280),w,c
 34594   017E56  A4D8               	btfss	status,2,c
 34595   017E58  D7BD               	goto	l8985
 34596   017E5A  BE2A               	btfsc	(xtoa@p+1)^(0+1280),7,c
 34597   017E5C  D005               	goto	u10340
 34598   017E5E  502A               	movf	(xtoa@p+1)^(0+1280),w,c
 34599   017E60  E1B9               	bnz	l8985
 34600   017E62  0429               	decf	xtoa@p^(0+1280),w,c
 34601   017E64  B0D8               	btfsc	status,0,c
 34602   017E66  D7B6               	goto	l8985
 34603   017E68                     u10340:
 34604   017E68  BE2C               	btfsc	(xtoa@w+1)^(0+1280),7,c
 34605   017E6A  D008               	goto	u10360
 34606   017E6C  502C               	movf	(xtoa@w+1)^(0+1280),w,c
 34607   017E6E  E103               	bnz	u10350
 34608   017E70  042B               	decf	xtoa@w^(0+1280),w,c
 34609   017E72  A0D8               	btfss	status,0,c
 34610   017E74  D003               	goto	u10360
 34611   017E76                     u10350:
 34612   017E76  0107               	movlb	7	; () banked
 34613   017E78  B327               	btfsc	_flags& (0+255),1,b
 34614   017E7A  D7AC               	goto	l8985
 34615   017E7C                     u10360:
 34616                           
 34617                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 34618   017E7C  C51B  F512         	movff	xtoa@fp,pad@fp
 34619   017E80  C51C  F513         	movff	xtoa@fp+1,pad@fp+1
 34620   017E84  0E2D               	movlw	low _dbuf
 34621   017E86  242E               	addwf	xtoa@i^(0+1280),w,c
 34622   017E88  6E14               	movwf	pad@buf^(0+1280),c
 34623   017E8A  0E07               	movlw	high _dbuf
 34624   017E8C  202F               	addwfc	(xtoa@i+1)^(0+1280),w,c
 34625   017E8E  6E15               	movwf	(pad@buf+1)^(0+1280),c
 34626   017E90  C52B  F516         	movff	xtoa@w,pad@p
 34627   017E94  C52C  F517         	movff	xtoa@w+1,pad@p+1
 34628   017E98  ECD2  F0C9         	call	_pad	;wreg free
 34629   017E9C  0012               	return		;funcret
 34630   017E9E                     __end_of_xtoa:
 34631                           	callstack 0
 34632                           
 34633 ;; *************** function _stoa *****************
 34634 ;; Defined at:
 34635 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 34636 ;; Parameters:    Size  Location     Type
 34637 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
 34638 ;;		 -> sprintf@f(12), NULL(0), 
 34639 ;;  s               2   12[COMRAM] PTR unsigned char 
 34640 ;;		 -> files$buf(512), files$fptr(4), files$sect(4), files$obj$objsize(4), 
 34641 ;;		 -> files$dir_sect(4), sdj$sect(4), dj$sect(4), djn$sect(4), 
 34642 ;;		 -> djo$sect(4), fsdir$sect(4), fs$win(512), fs$winsect(4), 
 34643 ;;		 -> fs$fatbase(4), fs$volbase(4), fs$csize(2), fs$pdrv(1), 
 34644 ;;		 -> ?_printf(2), ?_sprintf(2), fs(560), STR_80(5), 
 34645 ;;		 -> STR_77(5), STR_60(17), STR_58(17), fileinfo(22), 
 34646 ;;		 -> NULL(0), STR_26(1), util_addrdump@chars(17), util_hexdump@chars(17), 
 34647 ;;		 -> STR_16(6), STR_13(6), STR_5(1), disk_initialize@buf(128), 
 34648 ;; Auto vars:     Size  Location     Type
 34649 ;;  l               2   22[COMRAM] int 
 34650 ;;  cp              2   20[COMRAM] PTR unsigned char 
 34651 ;;		 -> files$buf(512), files$fptr(4), files$sect(4), files$obj$objsize(4), 
 34652 ;;		 -> files$dir_sect(4), sdj$sect(4), dj$sect(4), djn$sect(4), 
 34653 ;;		 -> djo$sect(4), fsdir$sect(4), fs$win(512), fs$winsect(4), 
 34654 ;;		 -> fs$fatbase(4), fs$volbase(4), fs$csize(2), fs$pdrv(1), 
 34655 ;;		 -> ?_printf(2), STR_97(7), ?_sprintf(2), fs(560), 
 34656 ;;		 -> STR_80(5), STR_77(5), STR_60(17), STR_58(17), 
 34657 ;;		 -> fileinfo(22), NULL(0), STR_26(1), util_addrdump@chars(17), 
 34658 ;;		 -> util_hexdump@chars(17), STR_16(6), STR_13(6), STR_5(1), 
 34659 ;;		 -> disk_initialize@buf(128), 
 34660 ;;  w               2   18[COMRAM] int 
 34661 ;;  p               2   16[COMRAM] int 
 34662 ;; Return value:  Size  Location     Type
 34663 ;;                  1    wreg      void 
 34664 ;; Registers used:
 34665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34666 ;; Tracked objects:
 34667 ;;		On entry : 3F/5
 34668 ;;		On exit  : 0/0
 34669 ;;		Unchanged: 0/0
 34670 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34672 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34674 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34675 ;;Total ram usage:       14 bytes
 34676 ;; Hardware stack levels used: 1
 34677 ;; Hardware stack levels required when called: 2
 34678 ;; This function calls:
 34679 ;;		_fputc
 34680 ;; This function is called by:
 34681 ;;		_vfpfcnvrt
 34682 ;; This function uses a non-reentrant model
 34683 ;;
 34684                           
 34685                           	psect	text80
 34686   01753A                     __ptext80:
 34687                           	callstack 0
 34688   01753A                     _stoa:
 34689                           	callstack 120
 34690                           
 34691                           ; BSR set to: 5
 34692                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 34693                           
 34694                           ;incstack = 0
 34695   01753A  C50D  F515         	movff	stoa@s,stoa@cp
 34696   01753E  C50E  F516         	movff	stoa@s+1,stoa@cp+1
 34697                           
 34698                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 34699   017542  5015               	movf	stoa@cp^(0+1280),w,c
 34700   017544  1016               	iorwf	(stoa@cp+1)^(0+1280),w,c
 34701   017546  A4D8               	btfss	status,2,c
 34702   017548  D004               	goto	l8933
 34703                           
 34704                           ; BSR set to: 5
 34705                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 34706   01754A  0ED9               	movlw	low STR_97
 34707   01754C  6E15               	movwf	stoa@cp^(0+1280),c
 34708   01754E  0EFF               	movlw	high STR_97
 34709   017550  6E16               	movwf	(stoa@cp+1)^(0+1280),c
 34710   017552                     l8933:
 34711                           
 34712                           ; BSR set to: 5
 34713                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 34714   017552  0E00               	movlw	0
 34715   017554  6E18               	movwf	(stoa@l+1)^(0+1280),c
 34716   017556  0E00               	movlw	0
 34717   017558  6E17               	movwf	stoa@l^(0+1280),c
 34718   01755A  D002               	goto	l8937
 34719   01755C                     l8935:
 34720   01755C  4A17               	infsnz	stoa@l^(0+1280),f,c
 34721   01755E  2A18               	incf	(stoa@l+1)^(0+1280),f,c
 34722   017560                     l8937:
 34723   017560  5017               	movf	stoa@l^(0+1280),w,c
 34724   017562  2415               	addwf	stoa@cp^(0+1280),w,c
 34725   017564  6E0F               	movwf	??_stoa^(0+1280),c
 34726   017566  5018               	movf	(stoa@l+1)^(0+1280),w,c
 34727   017568  2016               	addwfc	(stoa@cp+1)^(0+1280),w,c
 34728   01756A  6E10               	movwf	(??_stoa+1)^(0+1280),c
 34729   01756C  C50F  F4F6         	movff	??_stoa,tblptrl
 34730   017570  C510  F4F7         	movff	??_stoa+1,tblptrh
 34731   017574  0E00               	movlw	low (__mediumconst shr (0+16))
 34732   017576  6EF8               	movwf	tblptru,c
 34733   017578  0E24               	movlw	(high __ramtop+-1)
 34734   01757A  64F7               	cpfsgt	tblptrh,c
 34735   01757C  D003               	bra	u10177
 34736   01757E  0008               	tblrd		*
 34737   017580  50F5               	movf	tablat,w,c
 34738   017582  D005               	bra	u10170
 34739   017584                     u10177:
 34740   017584  C4F6 F4E9          	movff	tblptrl,fsr0l
 34741   017588  C4F7 F4EA          	movff	tblptrh,fsr0h
 34742   01758C  50EF               	movf	indf0,w,c
 34743   01758E                     u10170:
 34744   01758E  0900               	iorlw	0
 34745   017590  A4D8               	btfss	status,2,c
 34746   017592  D7E4               	goto	l8935
 34747                           
 34748                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 34749   017594  0107               	movlb	7	; () banked
 34750   017596  BF16               	btfsc	(_prec+1)& (0+255),7,b
 34751   017598  D00E               	goto	l2554
 34752                           
 34753                           ; BSR set to: 7
 34754   01759A  5017               	movf	stoa@l^(0+1280),w,c
 34755   01759C  5D15               	subwf	_prec& (0+255),w,b
 34756   01759E  5116               	movf	(_prec+1)& (0+255),w,b
 34757   0175A0  0A80               	xorlw	128
 34758   0175A2  6E0F               	movwf	??_stoa^(0+1280),c
 34759   0175A4  5018               	movf	(stoa@l+1)^(0+1280),w,c
 34760   0175A6  0A80               	xorlw	128
 34761   0175A8  580F               	subwfb	??_stoa^(0+1280),w,c
 34762   0175AA  B0D8               	btfsc	status,0,c
 34763   0175AC  D004               	goto	l2554
 34764                           
 34765                           ; BSR set to: 7
 34766                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 34767   0175AE  C715  F517         	movff	_prec,stoa@l
 34768   0175B2  C716  F518         	movff	_prec+1,stoa@l+1
 34769   0175B6                     l2554:
 34770                           
 34771                           ; BSR set to: 7
 34772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
 34773   0175B6  C517  F511         	movff	stoa@l,stoa@p
 34774   0175BA  C518  F512         	movff	stoa@l+1,stoa@p+1
 34775                           
 34776                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 34777   0175BE  C713  F513         	movff	_width,stoa@w
 34778   0175C2  C714  F514         	movff	_width+1,stoa@w+1
 34779                           
 34780                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 34781   0175C6  A127               	btfss	_flags& (0+255),0,b
 34782   0175C8  D00D               	goto	l8951
 34783   0175CA  D034               	goto	l8957
 34784   0175CC                     l8947:
 34785                           
 34786                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 34787   0175CC  0E00               	movlw	0
 34788   0175CE  6E03               	movwf	(fputc@c+1)^(0+1280),c
 34789   0175D0  0E20               	movlw	32
 34790   0175D2  6E02               	movwf	fputc@c^(0+1280),c
 34791   0175D4  C50B  F504         	movff	stoa@fp,fputc@fp
 34792   0175D8  C50C  F505         	movff	stoa@fp+1,fputc@fp+1
 34793   0175DC  EC95  F0C7         	call	_fputc	;wreg free
 34794                           
 34795                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 34796   0175E0  4A17               	infsnz	stoa@l^(0+1280),f,c
 34797   0175E2  2A18               	incf	(stoa@l+1)^(0+1280),f,c
 34798   0175E4                     l8951:
 34799                           
 34800                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 34801   0175E4  5013               	movf	stoa@w^(0+1280),w,c
 34802   0175E6  5C17               	subwf	stoa@l^(0+1280),w,c
 34803   0175E8  5018               	movf	(stoa@l+1)^(0+1280),w,c
 34804   0175EA  0A80               	xorlw	128
 34805   0175EC  6E0F               	movwf	??_stoa^(0+1280),c
 34806   0175EE  5014               	movf	(stoa@w+1)^(0+1280),w,c
 34807   0175F0  0A80               	xorlw	128
 34808   0175F2  580F               	subwfb	??_stoa^(0+1280),w,c
 34809   0175F4  B0D8               	btfsc	status,0,c
 34810   0175F6  D01E               	goto	l8957
 34811   0175F8  D7E9               	goto	l8947
 34812   0175FA                     l8953:
 34813                           
 34814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 34815   0175FA  C515  F4F6         	movff	stoa@cp,tblptrl
 34816   0175FE  C516  F4F7         	movff	stoa@cp+1,tblptrh
 34817   017602  0E00               	movlw	low (__mediumconst shr (0+16))
 34818   017604  6EF8               	movwf	tblptru,c
 34819   017606  0E24               	movlw	(high __ramtop+-1)
 34820   017608  64F7               	cpfsgt	tblptrh,c
 34821   01760A  D003               	bra	u10237
 34822   01760C  0008               	tblrd		*
 34823   01760E  50F5               	movf	tablat,w,c
 34824   017610  D005               	bra	u10230
 34825   017612                     u10237:
 34826   017612  C4F6 F4E9          	movff	tblptrl,fsr0l
 34827   017616  C4F7 F4EA          	movff	tblptrh,fsr0h
 34828   01761A  50EF               	movf	indf0,w,c
 34829   01761C                     u10230:
 34830   01761C  6E0F               	movwf	??_stoa^(0+1280),c
 34831   01761E  500F               	movf	??_stoa^(0+1280),w,c
 34832   017620  6E02               	movwf	fputc@c^(0+1280),c
 34833   017622  6A03               	clrf	(fputc@c+1)^(0+1280),c
 34834   017624  C50B  F504         	movff	stoa@fp,fputc@fp
 34835   017628  C50C  F505         	movff	stoa@fp+1,fputc@fp+1
 34836   01762C  EC95  F0C7         	call	_fputc	;wreg free
 34837                           
 34838                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 34839   017630  4A15               	infsnz	stoa@cp^(0+1280),f,c
 34840   017632  2A16               	incf	(stoa@cp+1)^(0+1280),f,c
 34841   017634                     l8957:
 34842                           
 34843                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 34844   017634  0611               	decf	stoa@p^(0+1280),f,c
 34845   017636  A0D8               	btfss	status,0,c
 34846   017638  0612               	decf	(stoa@p+1)^(0+1280),f,c
 34847   01763A  2811               	incf	stoa@p^(0+1280),w,c
 34848   01763C  E1DE               	bnz	l8953
 34849   01763E  2812               	incf	(stoa@p+1)^(0+1280),w,c
 34850   017640  A4D8               	btfss	status,2,c
 34851   017642  D7DB               	goto	l8953
 34852                           
 34853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 34854   017644  0107               	movlb	7	; () banked
 34855   017646  A127               	btfss	_flags& (0+255),0,b
 34856   017648  0012               	return	
 34857   01764A  D00C               	goto	l8965
 34858   01764C                     l8961:
 34859                           
 34860                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 34861   01764C  0E00               	movlw	0
 34862   01764E  6E03               	movwf	(fputc@c+1)^(0+1280),c
 34863   017650  0E20               	movlw	32
 34864   017652  6E02               	movwf	fputc@c^(0+1280),c
 34865   017654  C50B  F504         	movff	stoa@fp,fputc@fp
 34866   017658  C50C  F505         	movff	stoa@fp+1,fputc@fp+1
 34867   01765C  EC95  F0C7         	call	_fputc	;wreg free
 34868                           
 34869                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 34870   017660  4A17               	infsnz	stoa@l^(0+1280),f,c
 34871   017662  2A18               	incf	(stoa@l+1)^(0+1280),f,c
 34872   017664                     l8965:
 34873                           
 34874                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 34875   017664  5013               	movf	stoa@w^(0+1280),w,c
 34876   017666  5C17               	subwf	stoa@l^(0+1280),w,c
 34877   017668  5018               	movf	(stoa@l+1)^(0+1280),w,c
 34878   01766A  0A80               	xorlw	128
 34879   01766C  6E0F               	movwf	??_stoa^(0+1280),c
 34880   01766E  5014               	movf	(stoa@w+1)^(0+1280),w,c
 34881   017670  0A80               	xorlw	128
 34882   017672  580F               	subwfb	??_stoa^(0+1280),w,c
 34883   017674  B0D8               	btfsc	status,0,c
 34884   017676  0012               	return	
 34885   017678  D7E9               	goto	l8961
 34886   01767A                     __end_of_stoa:
 34887                           	callstack 0
 34888                           
 34889 ;; *************** function _read_prec_or_width *****************
 34890 ;; Defined at:
 34891 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 34892 ;; Parameters:    Size  Location     Type
 34893 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
 34894 ;;		 -> vfprintf@cfmt(2), 
 34895 ;;  ap              2    8[COMRAM] PTR PTR void [1]
 34896 ;;		 -> printf@ap(2), sprintf@ap(2), 
 34897 ;; Auto vars:     Size  Location     Type
 34898 ;;  c               1   12[COMRAM] unsigned char 
 34899 ;;  n               2   13[COMRAM] int 
 34900 ;; Return value:  Size  Location     Type
 34901 ;;                  2    6[COMRAM] int 
 34902 ;; Registers used:
 34903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34904 ;; Tracked objects:
 34905 ;;		On entry : 3D/5
 34906 ;;		On exit  : 0/0
 34907 ;;		Unchanged: 0/0
 34908 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34910 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34911 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34912 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34913 ;;Total ram usage:        9 bytes
 34914 ;; Hardware stack levels used: 1
 34915 ;; Hardware stack levels required when called: 1
 34916 ;; This function calls:
 34917 ;;		___wmul
 34918 ;; This function is called by:
 34919 ;;		_vfpfcnvrt
 34920 ;; This function uses a non-reentrant model
 34921 ;;
 34922                           
 34923                           	psect	text81
 34924   018A62                     __ptext81:
 34925                           	callstack 0
 34926   018A62                     _read_prec_or_width:
 34927                           	callstack 121
 34928                           
 34929                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 34930                           
 34931                           ;incstack = 0
 34932   018A62  0E00               	movlw	0
 34933   018A64  6E0F               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 34934   018A66  0E00               	movlw	0
 34935   018A68  6E0E               	movwf	read_prec_or_width@n^(0+1280),c
 34936                           
 34937                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 34938   018A6A  C507  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 34939   018A6E  C508  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 34940   018A72  C4DE F4F6          	movff	postinc2,tblptrl
 34941   018A76  C4DD F4F7          	movff	postdec2,tblptrh
 34942   018A7A                     	if	0	;tblptru may be non-zero
 34943   018A7A                     	endif
 34944   018A7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34945   018A7A  0E00               	movlw	low (__mediumconst shr (0+16))
 34946   018A7C  6EF8               	movwf	tblptru,c
 34947   018A7E                     	endif
 34948   018A7E  0008               	tblrd		*
 34949   018A80  50F5               	movf	tablat,w,c
 34950   018A82  0A2A               	xorlw	42
 34951   018A84  A4D8               	btfss	status,2,c
 34952   018A86  D033               	goto	l9027
 34953                           
 34954                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 34955   018A88  C507  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 34956   018A8C  C508  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 34957   018A90  2ADE               	incf	postinc2,f,c
 34958   018A92  0E00               	movlw	0
 34959   018A94  22DD               	addwfc	postdec2,f,c
 34960                           
 34961                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 34962   018A96  C509  F4D9         	movff	read_prec_or_width@ap,fsr2l
 34963   018A9A  C50A  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 34964   018A9E  C4DF F50B          	movff	indf2,??_read_prec_or_width
 34965   018AA2  0E02               	movlw	2
 34966   018AA4  26DE               	addwf	postinc2,f,c
 34967   018AA6  C4DF F50C          	movff	indf2,??_read_prec_or_width+1
 34968   018AAA  0E00               	movlw	0
 34969   018AAC  22DD               	addwfc	postdec2,f,c
 34970   018AAE  C50B  F4D9         	movff	??_read_prec_or_width,fsr2l
 34971   018AB2  C50C  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 34972   018AB6  C4DE F50E          	movff	postinc2,read_prec_or_width@n
 34973   018ABA  C4DD F50F          	movff	postdec2,read_prec_or_width@n+1
 34974                           
 34975                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 34976   018ABE  D028               	goto	u10380
 34977   018AC0                     l9023:
 34978                           
 34979                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 34980   018AC0  C50E  F501         	movff	read_prec_or_width@n,___wmul@multiplier
 34981   018AC4  C50F  F502         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
 34982   018AC8  0E00               	movlw	0
 34983   018ACA  6E04               	movwf	(___wmul@multiplicand+1)^(0+1280),c
 34984   018ACC  0E0A               	movlw	10
 34985   018ACE  6E03               	movwf	___wmul@multiplicand^(0+1280),c
 34986   018AD0  EC62  F0CF         	call	___wmul	;wreg free
 34987   018AD4  500D               	movf	read_prec_or_width@c^(0+1280),w,c
 34988   018AD6  2401               	addwf	?___wmul^(0+1280),w,c
 34989   018AD8  6E0E               	movwf	read_prec_or_width@n^(0+1280),c
 34990   018ADA  0E00               	movlw	0
 34991   018ADC  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
 34992   018ADE  6E0F               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 34993                           
 34994                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 34995   018AE0  C507  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 34996   018AE4  C508  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 34997   018AE8  2ADE               	incf	postinc2,f,c
 34998   018AEA  0E00               	movlw	0
 34999   018AEC  22DD               	addwfc	postdec2,f,c
 35000   018AEE                     l9027:
 35001                           
 35002                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 35003   018AEE  C507  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 35004   018AF2  C508  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 35005   018AF6  C4DE F4F6          	movff	postinc2,tblptrl
 35006   018AFA  C4DD F4F7          	movff	postdec2,tblptrh
 35007   018AFE                     	if	0	;tblptru may be non-zero
 35008   018AFE                     	endif
 35009   018AFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35010   018AFE  0E00               	movlw	low (__mediumconst shr (0+16))
 35011   018B00  6EF8               	movwf	tblptru,c
 35012   018B02                     	endif
 35013   018B02  0008               	tblrd		*
 35014   018B04  50F5               	movf	tablat,w,c
 35015   018B06  0FD0               	addlw	208
 35016   018B08  6E0D               	movwf	read_prec_or_width@c^(0+1280),c
 35017   018B0A  0E09               	movlw	9
 35018   018B0C  640D               	cpfsgt	read_prec_or_width@c^(0+1280),c
 35019   018B0E  D7D8               	goto	l9023
 35020   018B10                     u10380:
 35021                           
 35022                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 35023                           
 35024                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1169:     }
 35025   018B10  C50E  F507         	movff	read_prec_or_width@n,?_read_prec_or_width
 35026   018B14  C50F  F508         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 35027   018B18  0012               	return		;funcret
 35028   018B1A                     __end_of_read_prec_or_width:
 35029                           	callstack 0
 35030                           
 35031 ;; *************** function ___wmul *****************
 35032 ;; Defined at:
 35033 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 35034 ;; Parameters:    Size  Location     Type
 35035 ;;  multiplier      2    0[COMRAM] unsigned int 
 35036 ;;  multiplicand    2    2[COMRAM] unsigned int 
 35037 ;; Auto vars:     Size  Location     Type
 35038 ;;  product         2    4[COMRAM] unsigned int 
 35039 ;; Return value:  Size  Location     Type
 35040 ;;                  2    0[COMRAM] unsigned int 
 35041 ;; Registers used:
 35042 ;;		wreg, status,2, status,0, prodl, prodh
 35043 ;; Tracked objects:
 35044 ;;		On entry : 0/5
 35045 ;;		On exit  : 0/0
 35046 ;;		Unchanged: 0/0
 35047 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35051 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35052 ;;Total ram usage:        6 bytes
 35053 ;; Hardware stack levels used: 1
 35054 ;; This function calls:
 35055 ;;		Nothing
 35056 ;; This function is called by:
 35057 ;;		_menu_select
 35058 ;;		_disk_io_handle
 35059 ;;		_read_prec_or_width
 35060 ;; This function uses a non-reentrant model
 35061 ;;
 35062                           
 35063                           	psect	text82
 35064   019EC4                     __ptext82:
 35065                           	callstack 0
 35066   019EC4                     ___wmul:
 35067                           	callstack 121
 35068                           
 35069                           ;incstack = 0
 35070   019EC4  5001               	movf	___wmul@multiplier^(0+1280),w,c
 35071   019EC6  0203               	mulwf	___wmul@multiplicand^(0+1280),c
 35072   019EC8  C4F3 F505          	movff	prodl,___wmul@product
 35073   019ECC  C4F4 F506          	movff	prodh,___wmul@product+1
 35074   019ED0  5001               	movf	___wmul@multiplier^(0+1280),w,c
 35075   019ED2  0204               	mulwf	(___wmul@multiplicand+1)^(0+1280),c
 35076   019ED4  50F3               	movf	243,w,c
 35077   019ED6  2606               	addwf	(___wmul@product+1)^(0+1280),f,c
 35078   019ED8  5002               	movf	(___wmul@multiplier+1)^(0+1280),w,c
 35079   019EDA  0203               	mulwf	___wmul@multiplicand^(0+1280),c
 35080   019EDC  50F3               	movf	243,w,c
 35081   019EDE  2606               	addwf	(___wmul@product+1)^(0+1280),f,c
 35082   019EE0  C505  F501         	movff	___wmul@product,?___wmul
 35083   019EE4  C506  F502         	movff	___wmul@product+1,?___wmul+1
 35084   019EE8  0012               	return		;funcret
 35085   019EEA                     __end_of___wmul:
 35086                           	callstack 0
 35087                           
 35088 ;; *************** function _efgtoa *****************
 35089 ;; Defined at:
 35090 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 35091 ;; Parameters:    Size  Location     Type
 35092 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
 35093 ;;		 -> sprintf@f(12), NULL(0), 
 35094 ;;  f               4   73[COMRAM] PTR struct _IO_FILE
 35095 ;;  c               1   77[COMRAM] unsigned char 
 35096 ;; Auto vars:     Size  Location     Type
 35097 ;;  u               4   40[BANK5 ] struct flui
 35098 ;;  g               4   34[BANK5 ] struct flui
 35099 ;;  l               4   27[BANK5 ] struct flui
 35100 ;;  h               4   23[BANK5 ] struct flui
 35101 ;;  ou              4   19[BANK5 ] struct flui
 35102 ;;  n               2   38[BANK5 ] int 
 35103 ;;  i               2   31[BANK5 ] int 
 35104 ;;  w               2   17[BANK5 ] int 
 35105 ;;  e               2   15[BANK5 ] int 
 35106 ;;  m               2   13[BANK5 ] int 
 35107 ;;  d               2   11[BANK5 ] int 
 35108 ;;  t               2    4[BANK5 ] int 
 35109 ;;  p               2    2[BANK5 ] int 
 35110 ;;  ne              2    0[BANK5 ] int 
 35111 ;;  sign            1   33[BANK5 ] unsigned char 
 35112 ;;  nmode           1   10[BANK5 ] unsigned char 
 35113 ;;  mode            1    9[BANK5 ] unsigned char 
 35114 ;;  pp              1    8[BANK5 ] unsigned char 
 35115 ;;  esign           1    0        unsigned char 
 35116 ;; Return value:  Size  Location     Type
 35117 ;;                  1    wreg      void 
 35118 ;; Registers used:
 35119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35120 ;; Tracked objects:
 35121 ;;		On entry : 0/5
 35122 ;;		On exit  : 0/0
 35123 ;;		Unchanged: 0/0
 35124 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35125 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35126 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35128 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35129 ;;Total ram usage:       53 bytes
 35130 ;; Hardware stack levels used: 1
 35131 ;; Hardware stack levels required when called: 4
 35132 ;; This function calls:
 35133 ;;		___fladd
 35134 ;;		___fldiv
 35135 ;;		___fleq
 35136 ;;		___flge
 35137 ;;		___flmul
 35138 ;;		___flneg
 35139 ;;		___flsub
 35140 ;;		___fltol
 35141 ;;		___fpclassifyf
 35142 ;;		_floorf
 35143 ;;		_labs
 35144 ;;		_memcpy
 35145 ;;		_pad
 35146 ;;		_strcpy
 35147 ;; This function is called by:
 35148 ;;		_vfpfcnvrt
 35149 ;; This function uses a non-reentrant model
 35150 ;;
 35151                           
 35152                           	psect	text83
 35153   010000                     __ptext83:
 35154                           	callstack 0
 35155   010000                     _efgtoa:
 35156                           	callstack 118
 35157                           
 35158                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 35159                           
 35160                           ;incstack = 0
 35161   010000  0E00               	movlw	0
 35162   010002  0105               	movlb	5	; () banked
 35163   010004  6F81               	movwf	efgtoa@sign& (0+255),b
 35164                           
 35165                           ; BSR set to: 5
 35166                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 35167   010006  C54A  F582         	movff	efgtoa@f,efgtoa@g
 35168   01000A  C54B  F583         	movff	efgtoa@f+1,efgtoa@g+1
 35169   01000E  C54C  F584         	movff	efgtoa@f+2,efgtoa@g+2
 35170   010012  C54D  F585         	movff	efgtoa@f+3,efgtoa@g+3
 35171                           
 35172                           ; BSR set to: 5
 35173                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 35174   010016  AF85               	btfss	(efgtoa@g+3)& (0+255),7,b
 35175   010018  D014               	goto	l8705
 35176                           
 35177                           ; BSR set to: 5
 35178                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 35179   01001A  0E01               	movlw	1
 35180   01001C  6F81               	movwf	efgtoa@sign& (0+255),b
 35181                           
 35182                           ; BSR set to: 5
 35183                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 35184   01001E  C582  F501         	movff	efgtoa@g,___flneg@f1
 35185   010022  C583  F502         	movff	efgtoa@g+1,___flneg@f1+1
 35186   010026  C584  F503         	movff	efgtoa@g+2,___flneg@f1+2
 35187   01002A  C585  F504         	movff	efgtoa@g+3,___flneg@f1+3
 35188   01002E  ECD0  F0CE         	call	___flneg	;wreg free
 35189   010032  C501  F582         	movff	?___flneg,efgtoa@g
 35190   010036  C502  F583         	movff	?___flneg+1,efgtoa@g+1
 35191   01003A  C503  F584         	movff	?___flneg+2,efgtoa@g+2
 35192   01003E  C504  F585         	movff	?___flneg+3,efgtoa@g+3
 35193   010042                     l8705:
 35194                           
 35195                           ; BSR set to: 5
 35196                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 35197   010042  0E00               	movlw	0
 35198   010044  6F87               	movwf	(efgtoa@n+1)& (0+255),b
 35199   010046  0E00               	movlw	0
 35200   010048  6F86               	movwf	efgtoa@n& (0+255),b
 35201                           
 35202                           ; BSR set to: 5
 35203                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 35204   01004A  C713  F571         	movff	_width,efgtoa@w
 35205   01004E  C714  F572         	movff	_width+1,efgtoa@w+1
 35206                           
 35207                           ; BSR set to: 5
 35208                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
 35209   010052  5181               	movf	efgtoa@sign& (0+255),w,b
 35210   010054  B4D8               	btfsc	status,2,c
 35211   010056  D00D               	goto	l8719
 35212                           
 35213                           ; BSR set to: 5
 35214                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 35215   010058  5181               	movf	efgtoa@sign& (0+255),w,b
 35216   01005A  A4D8               	btfss	status,2,c
 35217   01005C  D004               	goto	l8715
 35218                           
 35219                           ; BSR set to: 5
 35220   01005E  0E00               	movlw	0
 35221   010060  6F67               	movwf	(_efgtoa$3431+1)& (0+255),b
 35222   010062  0E2B               	movlw	43
 35223   010064  D003               	goto	L24
 35224   010066                     l8715:
 35225                           
 35226                           ; BSR set to: 5
 35227   010066  0E00               	movlw	0
 35228   010068  6F67               	movwf	(_efgtoa$3431+1)& (0+255),b
 35229   01006A  0E2D               	movlw	45
 35230   01006C                     L24:
 35231   01006C  6F66               	movwf	_efgtoa$3431& (0+255),b
 35232                           
 35233                           ; BSR set to: 5
 35234   01006E  C566  F581         	movff	_efgtoa$3431,efgtoa@sign
 35235   010072                     l8719:
 35236                           
 35237                           ; BSR set to: 5
 35238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 35239   010072  C582  F501         	movff	efgtoa@g,___fpclassifyf@x
 35240   010076  C583  F502         	movff	efgtoa@g+1,___fpclassifyf@x+1
 35241   01007A  C584  F503         	movff	efgtoa@g+2,___fpclassifyf@x+2
 35242   01007E  C585  F504         	movff	efgtoa@g+3,___fpclassifyf@x+3
 35243   010082  EC29  F0C2         	call	___fpclassifyf	;wreg free
 35244   010086  0401               	decf	?___fpclassifyf^(0+1280),w,c
 35245   010088  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 35246   01008A  A4D8               	btfss	status,2,c
 35247   01008C  D02D               	goto	l8737
 35248                           
 35249                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 35250   01008E  0105               	movlb	5	; () banked
 35251   010090  5181               	movf	efgtoa@sign& (0+255),w,b
 35252   010092  B4D8               	btfsc	status,2,c
 35253   010094  D009               	goto	l8729
 35254                           
 35255                           ; BSR set to: 5
 35256                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 35257   010096  C581  F72D         	movff	efgtoa@sign,_dbuf
 35258                           
 35259                           ; BSR set to: 5
 35260                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
 35261   01009A  0771               	decf	efgtoa@w& (0+255),f,b
 35262   01009C  A0D8               	btfss	status,0,c
 35263   01009E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 35264                           
 35265                           ; BSR set to: 5
 35266                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 35267   0100A0  0E00               	movlw	0
 35268   0100A2  6F87               	movwf	(efgtoa@n+1)& (0+255),b
 35269   0100A4  0E01               	movlw	1
 35270   0100A6  6F86               	movwf	efgtoa@n& (0+255),b
 35271   0100A8                     l8729:
 35272                           
 35273                           ; BSR set to: 5
 35274                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 35275   0100A8  0E2D               	movlw	low _dbuf
 35276   0100AA  2586               	addwf	efgtoa@n& (0+255),w,b
 35277   0100AC  6E01               	movwf	strcpy@dest^(0+1280),c
 35278   0100AE  0E07               	movlw	high _dbuf
 35279   0100B0  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 35280   0100B2  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 35281   0100B4  0EF6               	movlw	low STR_91
 35282   0100B6  6E03               	movwf	strcpy@src^(0+1280),c
 35283   0100B8  0EFF               	movlw	high STR_91
 35284   0100BA  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 35285   0100BC  EC85  F0CE         	call	_strcpy	;wreg free
 35286   0100C0                     l8731:
 35287                           
 35288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 35289   0100C0  0105               	movlb	5	; () banked
 35290   0100C2  0EFD               	movlw	253
 35291   0100C4  2771               	addwf	efgtoa@w& (0+255),f,b
 35292   0100C6  0EFF               	movlw	255
 35293   0100C8  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
 35294                           
 35295                           ; BSR set to: 5
 35296                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 35297   0100CA  C548  F512         	movff	efgtoa@fp,pad@fp
 35298   0100CE  C549  F513         	movff	efgtoa@fp+1,pad@fp+1
 35299   0100D2  0E2D               	movlw	low _dbuf
 35300   0100D4  6E14               	movwf	pad@buf^(0+1280),c
 35301   0100D6  0E07               	movlw	high _dbuf
 35302   0100D8  6E15               	movwf	(pad@buf+1)^(0+1280),c
 35303   0100DA  C571  F516         	movff	efgtoa@w,pad@p
 35304   0100DE  C572  F517         	movff	efgtoa@w+1,pad@p+1
 35305   0100E2  ECD2  F0C9         	call	_pad	;wreg free
 35306   0100E6  0012               	return	
 35307   0100E8                     l8737:
 35308                           
 35309                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 35310   0100E8  C582  F501         	movff	efgtoa@g,___fpclassifyf@x
 35311   0100EC  C583  F502         	movff	efgtoa@g+1,___fpclassifyf@x+1
 35312   0100F0  C584  F503         	movff	efgtoa@g+2,___fpclassifyf@x+2
 35313   0100F4  C585  F504         	movff	efgtoa@g+3,___fpclassifyf@x+3
 35314   0100F8  EC29  F0C2         	call	___fpclassifyf	;wreg free
 35315   0100FC  5001               	movf	?___fpclassifyf^(0+1280),w,c
 35316   0100FE  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 35317   010100  A4D8               	btfss	status,2,c
 35318   010102  D01A               	goto	l8755
 35319                           
 35320                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 35321   010104  0105               	movlb	5	; () banked
 35322   010106  5181               	movf	efgtoa@sign& (0+255),w,b
 35323   010108  B4D8               	btfsc	status,2,c
 35324   01010A  D009               	goto	l8747
 35325                           
 35326                           ; BSR set to: 5
 35327                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 35328   01010C  C581  F72D         	movff	efgtoa@sign,_dbuf
 35329                           
 35330                           ; BSR set to: 5
 35331                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
 35332   010110  0771               	decf	efgtoa@w& (0+255),f,b
 35333   010112  A0D8               	btfss	status,0,c
 35334   010114  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 35335                           
 35336                           ; BSR set to: 5
 35337                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 35338   010116  0E00               	movlw	0
 35339   010118  6F87               	movwf	(efgtoa@n+1)& (0+255),b
 35340   01011A  0E01               	movlw	1
 35341   01011C  6F86               	movwf	efgtoa@n& (0+255),b
 35342   01011E                     l8747:
 35343                           
 35344                           ; BSR set to: 5
 35345                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 35346   01011E  0E2D               	movlw	low _dbuf
 35347   010120  2586               	addwf	efgtoa@n& (0+255),w,b
 35348   010122  6E01               	movwf	strcpy@dest^(0+1280),c
 35349   010124  0E07               	movlw	high _dbuf
 35350   010126  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 35351   010128  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 35352   01012A  0EFA               	movlw	low STR_94
 35353   01012C  6E03               	movwf	strcpy@src^(0+1280),c
 35354   01012E  0EFF               	movlw	high STR_94
 35355   010130  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 35356   010132  EC85  F0CE         	call	_strcpy	;wreg free
 35357   010136  D7C4               	goto	l8731
 35358   010138                     l8755:
 35359                           
 35360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 35361   010138  0E00               	movlw	0
 35362   01013A  0105               	movlb	5	; () banked
 35363   01013C  6F88               	movwf	efgtoa@u& (0+255),b
 35364   01013E  0E00               	movlw	0
 35365   010140  6F89               	movwf	(efgtoa@u+1)& (0+255),b
 35366   010142  0E80               	movlw	128
 35367   010144  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
 35368   010146  0E3F               	movlw	63
 35369   010148  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
 35370                           
 35371                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 35372   01014A  0E00               	movlw	0
 35373   01014C  6F70               	movwf	(efgtoa@e+1)& (0+255),b
 35374   01014E  0E00               	movlw	0
 35375   010150  6F6F               	movwf	efgtoa@e& (0+255),b
 35376                           
 35377                           ; BSR set to: 5
 35378                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 35379   010152  C582  F501         	movff	efgtoa@g,___fleq@ff1
 35380   010156  C583  F502         	movff	efgtoa@g+1,___fleq@ff1+1
 35381   01015A  C584  F503         	movff	efgtoa@g+2,___fleq@ff1+2
 35382   01015E  C585  F504         	movff	efgtoa@g+3,___fleq@ff1+3
 35383   010162  0E00               	movlw	0
 35384   010164  6E05               	movwf	___fleq@ff2^(0+1280),c
 35385   010166  0E00               	movlw	0
 35386   010168  6E06               	movwf	(___fleq@ff2+1)^(0+1280),c
 35387   01016A  0E00               	movlw	0
 35388   01016C  6E07               	movwf	(___fleq@ff2+2)^(0+1280),c
 35389   01016E  0E00               	movlw	0
 35390   010170  6E08               	movwf	(___fleq@ff2+3)^(0+1280),c
 35391   010172  ECCA  F0C8         	call	___fleq	;wreg free
 35392   010176  A0D8               	btfss	status,0,c
 35393   010178  D00C               	goto	l8763
 35394   01017A  D0BE               	goto	u9930
 35395   01017C                     l2504:
 35396                           
 35397                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 35398   01017C  C573  F588         	movff	efgtoa@ou,efgtoa@u
 35399   010180  C574  F589         	movff	efgtoa@ou+1,efgtoa@u+1
 35400   010184  C575  F58A         	movff	efgtoa@ou+2,efgtoa@u+2
 35401   010188  C576  F58B         	movff	efgtoa@ou+3,efgtoa@u+3
 35402                           
 35403                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
 35404   01018C  0105               	movlb	5	; () banked
 35405   01018E  4B6F               	infsnz	efgtoa@e& (0+255),f,b
 35406   010190  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
 35407   010192                     l8763:
 35408                           
 35409                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 35410   010192  C588  F501         	movff	efgtoa@u,___flmul@b
 35411   010196  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
 35412   01019A  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
 35413   01019E  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
 35414   0101A2  0E00               	movlw	0
 35415   0101A4  6E05               	movwf	___flmul@a^(0+1280),c
 35416   0101A6  0E00               	movlw	0
 35417   0101A8  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 35418   0101AA  0E20               	movlw	32
 35419   0101AC  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 35420   0101AE  0E41               	movlw	65
 35421   0101B0  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 35422   0101B2  EC15  F0A2         	call	___flmul	;wreg free
 35423   0101B6  C501  F573         	movff	?___flmul,efgtoa@ou
 35424   0101BA  C502  F574         	movff	?___flmul+1,efgtoa@ou+1
 35425   0101BE  C503  F575         	movff	?___flmul+2,efgtoa@ou+2
 35426   0101C2  C504  F576         	movff	?___flmul+3,efgtoa@ou+3
 35427   0101C6  0105               	movlb	5	; () banked
 35428   0101C8  5173               	movf	efgtoa@ou& (0+255),w,b
 35429   0101CA  5D82               	subwf	efgtoa@g& (0+255),w,b
 35430   0101CC  6E01               	movwf	labs@a^(0+1280),c
 35431   0101CE  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
 35432   0101D0  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
 35433   0101D2  6E02               	movwf	(labs@a+1)^(0+1280),c
 35434   0101D4  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
 35435   0101D6  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
 35436   0101D8  6E03               	movwf	(labs@a+2)^(0+1280),c
 35437   0101DA  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
 35438   0101DC  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
 35439   0101DE  6E04               	movwf	(labs@a+3)^(0+1280),c
 35440   0101E0  ECFA  F0CC         	call	_labs	;wreg free
 35441   0101E4  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
 35442   0101E6  D7CA               	goto	l2504
 35443   0101E8  5004               	movf	(?_labs+3)^(0+1280),w,c
 35444   0101EA  1003               	iorwf	(?_labs+2)^(0+1280),w,c
 35445   0101EC  1002               	iorwf	(?_labs+1)^(0+1280),w,c
 35446   0101EE  E104               	bnz	u9890
 35447   0101F0  0E02               	movlw	2
 35448   0101F2  5C01               	subwf	?_labs^(0+1280),w,c
 35449   0101F4  A0D8               	btfss	status,0,c
 35450   0101F6  D7C2               	goto	l2504
 35451   0101F8                     u9890:
 35452                           
 35453                           ; BSR set to: 5
 35454   0101F8  C573  F51A         	movff	efgtoa@ou,___flge@ff1
 35455   0101FC  C574  F51B         	movff	efgtoa@ou+1,___flge@ff1+1
 35456   010200  C575  F51C         	movff	efgtoa@ou+2,___flge@ff1+2
 35457   010204  C576  F51D         	movff	efgtoa@ou+3,___flge@ff1+3
 35458   010208  C582  F51E         	movff	efgtoa@g,___flge@ff2
 35459   01020C  C583  F51F         	movff	efgtoa@g+1,___flge@ff2+1
 35460   010210  C584  F520         	movff	efgtoa@g+2,___flge@ff2+2
 35461   010214  C585  F521         	movff	efgtoa@g+3,___flge@ff2+3
 35462   010218  EC5A  F0C1         	call	___flge	;wreg free
 35463   01021C  A0D8               	btfss	status,0,c
 35464   01021E  D7AE               	goto	l2504
 35465                           
 35466                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 35467   010220  0105               	movlb	5	; () banked
 35468   010222  5188               	movf	efgtoa@u& (0+255),w,b
 35469   010224  5D82               	subwf	efgtoa@g& (0+255),w,b
 35470   010226  6E01               	movwf	labs@a^(0+1280),c
 35471   010228  5189               	movf	(efgtoa@u+1)& (0+255),w,b
 35472   01022A  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
 35473   01022C  6E02               	movwf	(labs@a+1)^(0+1280),c
 35474   01022E  518A               	movf	(efgtoa@u+2)& (0+255),w,b
 35475   010230  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
 35476   010232  6E03               	movwf	(labs@a+2)^(0+1280),c
 35477   010234  518B               	movf	(efgtoa@u+3)& (0+255),w,b
 35478   010236  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
 35479   010238  6E04               	movwf	(labs@a+3)^(0+1280),c
 35480   01023A  ECFA  F0CC         	call	_labs	;wreg free
 35481   01023E  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
 35482   010240  D008               	goto	u9910
 35483   010242  5004               	movf	(?_labs+3)^(0+1280),w,c
 35484   010244  1003               	iorwf	(?_labs+2)^(0+1280),w,c
 35485   010246  1002               	iorwf	(?_labs+1)^(0+1280),w,c
 35486   010248  E143               	bnz	l8781
 35487   01024A  0E02               	movlw	2
 35488   01024C  5C01               	subwf	?_labs^(0+1280),w,c
 35489   01024E  B0D8               	btfsc	status,0,c
 35490   010250  D03F               	goto	l8781
 35491   010252                     u9910:
 35492                           
 35493                           ; BSR set to: 5
 35494                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
 35495   010252  C588  F582         	movff	efgtoa@u,efgtoa@g
 35496   010256  C589  F583         	movff	efgtoa@u+1,efgtoa@g+1
 35497   01025A  C58A  F584         	movff	efgtoa@u+2,efgtoa@g+2
 35498   01025E  C58B  F585         	movff	efgtoa@u+3,efgtoa@g+3
 35499                           
 35500                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
 35501   010262  D04A               	goto	u9930
 35502   010264                     l8773:
 35503                           
 35504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 35505   010264  C588  F51B         	movff	efgtoa@u,___fldiv@b
 35506   010268  C589  F51C         	movff	efgtoa@u+1,___fldiv@b+1
 35507   01026C  C58A  F51D         	movff	efgtoa@u+2,___fldiv@b+2
 35508   010270  C58B  F51E         	movff	efgtoa@u+3,___fldiv@b+3
 35509   010274  0E00               	movlw	0
 35510   010276  6E1F               	movwf	___fldiv@a^(0+1280),c
 35511   010278  0E00               	movlw	0
 35512   01027A  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 35513   01027C  0E20               	movlw	32
 35514   01027E  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 35515   010280  0E41               	movlw	65
 35516   010282  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 35517   010284  EC61  F0A9         	call	___fldiv	;wreg free
 35518   010288  C51B  F588         	movff	?___fldiv,efgtoa@u
 35519   01028C  C51C  F589         	movff	?___fldiv+1,efgtoa@u+1
 35520   010290  C51D  F58A         	movff	?___fldiv+2,efgtoa@u+2
 35521   010294  C51E  F58B         	movff	?___fldiv+3,efgtoa@u+3
 35522                           
 35523                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
 35524   010298  0105               	movlb	5	; () banked
 35525   01029A  076F               	decf	efgtoa@e& (0+255),f,b
 35526   01029C  A0D8               	btfss	status,0,c
 35527   01029E  0770               	decf	(efgtoa@e+1)& (0+255),f,b
 35528                           
 35529                           ; BSR set to: 5
 35530                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 35531   0102A0  5188               	movf	efgtoa@u& (0+255),w,b
 35532   0102A2  5D82               	subwf	efgtoa@g& (0+255),w,b
 35533   0102A4  6E01               	movwf	labs@a^(0+1280),c
 35534   0102A6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
 35535   0102A8  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
 35536   0102AA  6E02               	movwf	(labs@a+1)^(0+1280),c
 35537   0102AC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
 35538   0102AE  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
 35539   0102B0  6E03               	movwf	(labs@a+2)^(0+1280),c
 35540   0102B2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
 35541   0102B4  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
 35542   0102B6  6E04               	movwf	(labs@a+3)^(0+1280),c
 35543   0102B8  ECFA  F0CC         	call	_labs	;wreg free
 35544   0102BC  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
 35545   0102BE  D7C9               	goto	u9910
 35546   0102C0  5004               	movf	(?_labs+3)^(0+1280),w,c
 35547   0102C2  1003               	iorwf	(?_labs+2)^(0+1280),w,c
 35548   0102C4  1002               	iorwf	(?_labs+1)^(0+1280),w,c
 35549   0102C6  E104               	bnz	l8781
 35550   0102C8  0E02               	movlw	2
 35551   0102CA  5C01               	subwf	?_labs^(0+1280),w,c
 35552   0102CC  A0D8               	btfss	status,0,c
 35553   0102CE  D7C1               	goto	u9910
 35554   0102D0                     l8781:
 35555                           
 35556                           ; BSR set to: 5
 35557                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 35558   0102D0  C582  F51A         	movff	efgtoa@g,___flge@ff1
 35559   0102D4  C583  F51B         	movff	efgtoa@g+1,___flge@ff1+1
 35560   0102D8  C584  F51C         	movff	efgtoa@g+2,___flge@ff1+2
 35561   0102DC  C585  F51D         	movff	efgtoa@g+3,___flge@ff1+3
 35562   0102E0  C588  F51E         	movff	efgtoa@u,___flge@ff2
 35563   0102E4  C589  F51F         	movff	efgtoa@u+1,___flge@ff2+1
 35564   0102E8  C58A  F520         	movff	efgtoa@u+2,___flge@ff2+2
 35565   0102EC  C58B  F521         	movff	efgtoa@u+3,___flge@ff2+3
 35566   0102F0  EC5A  F0C1         	call	___flge	;wreg free
 35567   0102F4  A0D8               	btfss	status,0,c
 35568   0102F6  D7B6               	goto	l8773
 35569   0102F8                     u9930:
 35570                           
 35571                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 35572                           
 35573                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 677:     }
 35574   0102F8  C54E  F569         	movff	efgtoa@c,efgtoa@mode
 35575                           
 35576                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 35577   0102FC  C569  F56A         	movff	efgtoa@mode,efgtoa@nmode
 35578                           
 35579                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 35580   010300  0107               	movlb	7	; () banked
 35581   010302  BF16               	btfsc	(_prec+1)& (0+255),7,b
 35582   010304  D005               	goto	l8787
 35583                           
 35584                           ; BSR set to: 7
 35585   010306  C715  F562         	movff	_prec,efgtoa@p
 35586   01030A  C716  F563         	movff	_prec+1,efgtoa@p+1
 35587   01030E  D005               	goto	l8789
 35588   010310                     l8787:
 35589                           
 35590                           ; BSR set to: 7
 35591   010310  0E00               	movlw	0
 35592   010312  0105               	movlb	5	; () banked
 35593   010314  6F63               	movwf	(efgtoa@p+1)& (0+255),b
 35594   010316  0E06               	movlw	6
 35595   010318  6F62               	movwf	efgtoa@p& (0+255),b
 35596   01031A                     l8789:
 35597                           
 35598                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
 35599   01031A  C562  F56D         	movff	efgtoa@p,efgtoa@m
 35600   01031E  C563  F56E         	movff	efgtoa@p+1,efgtoa@m+1
 35601                           
 35602                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
 35603   010322  0105               	movlb	5	; () banked
 35604   010324  4B6D               	infsnz	efgtoa@m& (0+255),f,b
 35605   010326  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
 35606                           
 35607                           ; BSR set to: 5
 35608                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 35609   010328  0E66               	movlw	102
 35610   01032A  196A               	xorwf	efgtoa@nmode& (0+255),w,b
 35611   01032C  A4D8               	btfss	status,2,c
 35612   01032E  D016               	goto	l8803
 35613                           
 35614                           ; BSR set to: 5
 35615                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 35616   010330  AF70               	btfss	(efgtoa@e+1)& (0+255),7,b
 35617   010332  D00C               	goto	l8799
 35618                           
 35619                           ; BSR set to: 5
 35620                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 35621   010334  0E00               	movlw	0
 35622   010336  6F88               	movwf	efgtoa@u& (0+255),b
 35623   010338  0E00               	movlw	0
 35624   01033A  6F89               	movwf	(efgtoa@u+1)& (0+255),b
 35625   01033C  0E80               	movlw	128
 35626   01033E  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
 35627   010340  0E3F               	movlw	63
 35628   010342  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
 35629                           
 35630                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 35631   010344  0E00               	movlw	0
 35632   010346  6F70               	movwf	(efgtoa@e+1)& (0+255),b
 35633   010348  0E00               	movlw	0
 35634   01034A  6F6F               	movwf	efgtoa@e& (0+255),b
 35635   01034C                     l8799:
 35636                           
 35637                           ; BSR set to: 5
 35638                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 35639   01034C  0E67               	movlw	103
 35640   01034E  1969               	xorwf	efgtoa@mode& (0+255),w,b
 35641   010350  B4D8               	btfsc	status,2,c
 35642   010352  D004               	goto	l8803
 35643                           
 35644                           ; BSR set to: 5
 35645                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 35646   010354  516F               	movf	efgtoa@e& (0+255),w,b
 35647   010356  276D               	addwf	efgtoa@m& (0+255),f,b
 35648   010358  5170               	movf	(efgtoa@e+1)& (0+255),w,b
 35649   01035A  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
 35650   01035C                     l8803:
 35651                           
 35652                           ; BSR set to: 5
 35653                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 35654   01035C  0E00               	movlw	0
 35655   01035E  6F80               	movwf	(efgtoa@i+1)& (0+255),b
 35656   010360  0E00               	movlw	0
 35657   010362  6F7F               	movwf	efgtoa@i& (0+255),b
 35658                           
 35659                           ; BSR set to: 5
 35660                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 35661   010364  C582  F577         	movff	efgtoa@g,efgtoa@h
 35662   010368  C583  F578         	movff	efgtoa@g+1,efgtoa@h+1
 35663   01036C  C584  F579         	movff	efgtoa@g+2,efgtoa@h+2
 35664   010370  C585  F57A         	movff	efgtoa@g+3,efgtoa@h+3
 35665                           
 35666                           ; BSR set to: 5
 35667                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 35668   010374  C588  F573         	movff	efgtoa@u,efgtoa@ou
 35669   010378  C589  F574         	movff	efgtoa@u+1,efgtoa@ou+1
 35670   01037C  C58A  F575         	movff	efgtoa@u+2,efgtoa@ou+2
 35671   010380  C58B  F576         	movff	efgtoa@u+3,efgtoa@ou+3
 35672                           
 35673                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 35674   010384  D07B               	goto	l8817
 35675   010386                     l8809:
 35676                           
 35677                           ; BSR set to: 5
 35678                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 35679   010386  C577  F51B         	movff	efgtoa@h,___fldiv@b
 35680   01038A  C578  F51C         	movff	efgtoa@h+1,___fldiv@b+1
 35681   01038E  C579  F51D         	movff	efgtoa@h+2,___fldiv@b+2
 35682   010392  C57A  F51E         	movff	efgtoa@h+3,___fldiv@b+3
 35683   010396  C588  F51F         	movff	efgtoa@u,___fldiv@a
 35684   01039A  C589  F520         	movff	efgtoa@u+1,___fldiv@a+1
 35685   01039E  C58A  F521         	movff	efgtoa@u+2,___fldiv@a+2
 35686   0103A2  C58B  F522         	movff	efgtoa@u+3,___fldiv@a+3
 35687   0103A6  EC61  F0A9         	call	___fldiv	;wreg free
 35688   0103AA  C51B  F534         	movff	?___fldiv,floorf@x
 35689   0103AE  C51C  F535         	movff	?___fldiv+1,floorf@x+1
 35690   0103B2  C51D  F536         	movff	?___fldiv+2,floorf@x+2
 35691   0103B6  C51E  F537         	movff	?___fldiv+3,floorf@x+3
 35692   0103BA  ECBB  F0B4         	call	_floorf	;wreg free
 35693   0103BE  C534  F57B         	movff	?_floorf,efgtoa@l
 35694   0103C2  C535  F57C         	movff	?_floorf+1,efgtoa@l+1
 35695   0103C6  C536  F57D         	movff	?_floorf+2,efgtoa@l+2
 35696   0103CA  C537  F57E         	movff	?_floorf+3,efgtoa@l+3
 35697                           
 35698                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 35699   0103CE  C57B  F501         	movff	efgtoa@l,___fltol@f1
 35700   0103D2  C57C  F502         	movff	efgtoa@l+1,___fltol@f1+1
 35701   0103D6  C57D  F503         	movff	efgtoa@l+2,___fltol@f1+2
 35702   0103DA  C57E  F504         	movff	efgtoa@l+3,___fltol@f1+3
 35703   0103DE  EC78  F0C4         	call	___fltol	;wreg free
 35704   0103E2  C501  F56B         	movff	?___fltol,efgtoa@d
 35705   0103E6  C502  F56C         	movff	?___fltol+1,efgtoa@d+1
 35706                           
 35707                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 35708   0103EA  C577  F51A         	movff	efgtoa@h,___flsub@b
 35709   0103EE  C578  F51B         	movff	efgtoa@h+1,___flsub@b+1
 35710   0103F2  C579  F51C         	movff	efgtoa@h+2,___flsub@b+2
 35711   0103F6  C57A  F51D         	movff	efgtoa@h+3,___flsub@b+3
 35712   0103FA  C57B  F505         	movff	efgtoa@l,___flmul@a
 35713   0103FE  C57C  F506         	movff	efgtoa@l+1,___flmul@a+1
 35714   010402  C57D  F507         	movff	efgtoa@l+2,___flmul@a+2
 35715   010406  C57E  F508         	movff	efgtoa@l+3,___flmul@a+3
 35716   01040A  C588  F501         	movff	efgtoa@u,___flmul@b
 35717   01040E  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
 35718   010412  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
 35719   010416  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
 35720   01041A  EC15  F0A2         	call	___flmul	;wreg free
 35721   01041E  C501  F51E         	movff	?___flmul,___flsub@a
 35722   010422  C502  F51F         	movff	?___flmul+1,___flsub@a+1
 35723   010426  C503  F520         	movff	?___flmul+2,___flsub@a+2
 35724   01042A  C504  F521         	movff	?___flmul+3,___flsub@a+3
 35725   01042E  EC68  F0CD         	call	___flsub	;wreg free
 35726   010432  C51A  F577         	movff	?___flsub,efgtoa@h
 35727   010436  C51B  F578         	movff	?___flsub+1,efgtoa@h+1
 35728   01043A  C51C  F579         	movff	?___flsub+2,efgtoa@h+2
 35729   01043E  C51D  F57A         	movff	?___flsub+3,efgtoa@h+3
 35730                           
 35731                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 35732   010442  C588  F51B         	movff	efgtoa@u,___fldiv@b
 35733   010446  C589  F51C         	movff	efgtoa@u+1,___fldiv@b+1
 35734   01044A  C58A  F51D         	movff	efgtoa@u+2,___fldiv@b+2
 35735   01044E  C58B  F51E         	movff	efgtoa@u+3,___fldiv@b+3
 35736   010452  0E00               	movlw	0
 35737   010454  6E1F               	movwf	___fldiv@a^(0+1280),c
 35738   010456  0E00               	movlw	0
 35739   010458  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 35740   01045A  0E20               	movlw	32
 35741   01045C  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 35742   01045E  0E41               	movlw	65
 35743   010460  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 35744   010462  EC61  F0A9         	call	___fldiv	;wreg free
 35745   010466  C51B  F588         	movff	?___fldiv,efgtoa@u
 35746   01046A  C51C  F589         	movff	?___fldiv+1,efgtoa@u+1
 35747   01046E  C51D  F58A         	movff	?___fldiv+2,efgtoa@u+2
 35748   010472  C51E  F58B         	movff	?___fldiv+3,efgtoa@u+3
 35749                           
 35750                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
 35751   010476  0105               	movlb	5	; () banked
 35752   010478  4B7F               	infsnz	efgtoa@i& (0+255),f,b
 35753   01047A  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
 35754   01047C                     l8817:
 35755                           
 35756                           ; BSR set to: 5
 35757                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 35758   01047C  516D               	movf	efgtoa@m& (0+255),w,b
 35759   01047E  5D7F               	subwf	efgtoa@i& (0+255),w,b
 35760   010480  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 35761   010482  0A80               	xorlw	128
 35762   010484  6E4F               	movwf	??_efgtoa^(0+1280),c
 35763   010486  516E               	movf	(efgtoa@m+1)& (0+255),w,b
 35764   010488  0A80               	xorlw	128
 35765   01048A  584F               	subwfb	??_efgtoa^(0+1280),w,c
 35766   01048C  A0D8               	btfss	status,0,c
 35767   01048E  D77B               	goto	l8809
 35768                           
 35769                           ; BSR set to: 5
 35770                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 35771   010490  C588  F501         	movff	efgtoa@u,___flmul@b
 35772   010494  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
 35773   010498  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
 35774   01049C  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
 35775   0104A0  0E00               	movlw	0
 35776   0104A2  6E05               	movwf	___flmul@a^(0+1280),c
 35777   0104A4  0E00               	movlw	0
 35778   0104A6  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 35779   0104A8  0EA0               	movlw	160
 35780   0104AA  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 35781   0104AC  0E40               	movlw	64
 35782   0104AE  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 35783   0104B0  EC15  F0A2         	call	___flmul	;wreg free
 35784   0104B4  C501  F57B         	movff	?___flmul,efgtoa@l
 35785   0104B8  C502  F57C         	movff	?___flmul+1,efgtoa@l+1
 35786   0104BC  C503  F57D         	movff	?___flmul+2,efgtoa@l+2
 35787   0104C0  C504  F57E         	movff	?___flmul+3,efgtoa@l+3
 35788                           
 35789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 35790   0104C4  C577  F51A         	movff	efgtoa@h,___flge@ff1
 35791   0104C8  C578  F51B         	movff	efgtoa@h+1,___flge@ff1+1
 35792   0104CC  C579  F51C         	movff	efgtoa@h+2,___flge@ff1+2
 35793   0104D0  C57A  F51D         	movff	efgtoa@h+3,___flge@ff1+3
 35794   0104D4  C57B  F51E         	movff	efgtoa@l,___flge@ff2
 35795   0104D8  C57C  F51F         	movff	efgtoa@l+1,___flge@ff2+1
 35796   0104DC  C57D  F520         	movff	efgtoa@l+2,___flge@ff2+2
 35797   0104E0  C57E  F521         	movff	efgtoa@l+3,___flge@ff2+3
 35798   0104E4  EC5A  F0C1         	call	___flge	;wreg free
 35799   0104E8  B0D8               	btfsc	status,0,c
 35800   0104EA  D003               	goto	l8825
 35801                           
 35802                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 35803   0104EC  0E00               	movlw	0
 35804   0104EE  0105               	movlb	5	; () banked
 35805   0104F0  D018               	goto	L25
 35806   0104F2                     l8825:
 35807                           
 35808                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 35809   0104F2  C577  F501         	movff	efgtoa@h,___fleq@ff1
 35810   0104F6  C578  F502         	movff	efgtoa@h+1,___fleq@ff1+1
 35811   0104FA  C579  F503         	movff	efgtoa@h+2,___fleq@ff1+2
 35812   0104FE  C57A  F504         	movff	efgtoa@h+3,___fleq@ff1+3
 35813   010502  C57B  F505         	movff	efgtoa@l,___fleq@ff2
 35814   010506  C57C  F506         	movff	efgtoa@l+1,___fleq@ff2+1
 35815   01050A  C57D  F507         	movff	efgtoa@l+2,___fleq@ff2+2
 35816   01050E  C57E  F508         	movff	efgtoa@l+3,___fleq@ff2+3
 35817   010512  ECCA  F0C8         	call	___fleq	;wreg free
 35818   010516  A0D8               	btfss	status,0,c
 35819   010518  D00B               	goto	l8831
 35820   01051A  0105               	movlb	5	; () banked
 35821   01051C  B16B               	btfsc	efgtoa@d& (0+255),0,b
 35822   01051E  D008               	goto	l8831
 35823                           
 35824                           ; BSR set to: 5
 35825                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 35826   010520  0E00               	movlw	0
 35827   010522                     L25:
 35828   010522  6F7B               	movwf	efgtoa@l& (0+255),b
 35829   010524  0E00               	movlw	0
 35830   010526  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
 35831   010528  0E00               	movlw	0
 35832   01052A  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
 35833   01052C  0E00               	movlw	0
 35834   01052E  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
 35835   010530                     l8831:
 35836                           
 35837                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 35838   010530  C582  F501         	movff	efgtoa@g,___fladd@b
 35839   010534  C583  F502         	movff	efgtoa@g+1,___fladd@b+1
 35840   010538  C584  F503         	movff	efgtoa@g+2,___fladd@b+2
 35841   01053C  C585  F504         	movff	efgtoa@g+3,___fladd@b+3
 35842   010540  C57B  F505         	movff	efgtoa@l,___fladd@a
 35843   010544  C57C  F506         	movff	efgtoa@l+1,___fladd@a+1
 35844   010548  C57D  F507         	movff	efgtoa@l+2,___fladd@a+2
 35845   01054C  C57E  F508         	movff	efgtoa@l+3,___fladd@a+3
 35846   010550  ECAB  F0A3         	call	___fladd	;wreg free
 35847   010554  C501  F577         	movff	?___fladd,efgtoa@h
 35848   010558  C502  F578         	movff	?___fladd+1,efgtoa@h+1
 35849   01055C  C503  F579         	movff	?___fladd+2,efgtoa@h+2
 35850   010560  C504  F57A         	movff	?___fladd+3,efgtoa@h+3
 35851                           
 35852                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 35853   010564  C577  F51A         	movff	efgtoa@h,___flge@ff1
 35854   010568  C578  F51B         	movff	efgtoa@h+1,___flge@ff1+1
 35855   01056C  C579  F51C         	movff	efgtoa@h+2,___flge@ff1+2
 35856   010570  C57A  F51D         	movff	efgtoa@h+3,___flge@ff1+3
 35857   010574  0E00               	movlw	0
 35858   010576  6E05               	movwf	___flmul@a^(0+1280),c
 35859   010578  0E00               	movlw	0
 35860   01057A  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 35861   01057C  0E20               	movlw	32
 35862   01057E  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 35863   010580  0E41               	movlw	65
 35864   010582  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 35865   010584  C573  F501         	movff	efgtoa@ou,___flmul@b
 35866   010588  C574  F502         	movff	efgtoa@ou+1,___flmul@b+1
 35867   01058C  C575  F503         	movff	efgtoa@ou+2,___flmul@b+2
 35868   010590  C576  F504         	movff	efgtoa@ou+3,___flmul@b+3
 35869   010594  EC15  F0A2         	call	___flmul	;wreg free
 35870   010598  C501  F51E         	movff	?___flmul,___flge@ff2
 35871   01059C  C502  F51F         	movff	?___flmul+1,___flge@ff2+1
 35872   0105A0  C503  F520         	movff	?___flmul+2,___flge@ff2+2
 35873   0105A4  C504  F521         	movff	?___flmul+3,___flge@ff2+3
 35874   0105A8  EC5A  F0C1         	call	___flge	;wreg free
 35875   0105AC  A0D8               	btfss	status,0,c
 35876   0105AE  D024               	goto	l8843
 35877                           
 35878                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
 35879   0105B0  0105               	movlb	5	; () banked
 35880   0105B2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
 35881   0105B4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
 35882                           
 35883                           ; BSR set to: 5
 35884                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 35885   0105B6  C573  F501         	movff	efgtoa@ou,___flmul@b
 35886   0105BA  C574  F502         	movff	efgtoa@ou+1,___flmul@b+1
 35887   0105BE  C575  F503         	movff	efgtoa@ou+2,___flmul@b+2
 35888   0105C2  C576  F504         	movff	efgtoa@ou+3,___flmul@b+3
 35889   0105C6  0E00               	movlw	0
 35890   0105C8  6E05               	movwf	___flmul@a^(0+1280),c
 35891   0105CA  0E00               	movlw	0
 35892   0105CC  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 35893   0105CE  0E20               	movlw	32
 35894   0105D0  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 35895   0105D2  0E41               	movlw	65
 35896   0105D4  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 35897   0105D6  EC15  F0A2         	call	___flmul	;wreg free
 35898   0105DA  C501  F573         	movff	?___flmul,efgtoa@ou
 35899   0105DE  C502  F574         	movff	?___flmul+1,efgtoa@ou+1
 35900   0105E2  C503  F575         	movff	?___flmul+2,efgtoa@ou+2
 35901   0105E6  C504  F576         	movff	?___flmul+3,efgtoa@ou+3
 35902                           
 35903                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 35904   0105EA  0E66               	movlw	102
 35905   0105EC  0105               	movlb	5	; () banked
 35906   0105EE  196A               	xorwf	efgtoa@nmode& (0+255),w,b
 35907   0105F0  A4D8               	btfss	status,2,c
 35908   0105F2  D002               	goto	l8843
 35909                           
 35910                           ; BSR set to: 5
 35911                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
 35912   0105F4  4B6D               	infsnz	efgtoa@m& (0+255),f,b
 35913   0105F6  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
 35914   0105F8                     l8843:
 35915                           
 35916                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 35917   0105F8  C573  F588         	movff	efgtoa@ou,efgtoa@u
 35918   0105FC  C574  F589         	movff	efgtoa@ou+1,efgtoa@u+1
 35919   010600  C575  F58A         	movff	efgtoa@ou+2,efgtoa@u+2
 35920   010604  C576  F58B         	movff	efgtoa@ou+3,efgtoa@u+3
 35921                           
 35922                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 35923   010608  C56F  F560         	movff	efgtoa@e,efgtoa@ne
 35924   01060C  C570  F561         	movff	efgtoa@e+1,efgtoa@ne+1
 35925                           
 35926                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 35927   010610  0E00               	movlw	0
 35928   010612  0105               	movlb	5	; () banked
 35929   010614  6F68               	movwf	efgtoa@pp& (0+255),b
 35930                           
 35931                           ; BSR set to: 5
 35932                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 35933   010616  0E00               	movlw	0
 35934   010618  6F65               	movwf	(efgtoa@t+1)& (0+255),b
 35935   01061A  0E00               	movlw	0
 35936   01061C  6F64               	movwf	efgtoa@t& (0+255),b
 35937                           
 35938                           ; BSR set to: 5
 35939                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 35940   01061E  0E00               	movlw	0
 35941   010620  6F80               	movwf	(efgtoa@i+1)& (0+255),b
 35942   010622  0E00               	movlw	0
 35943   010624  6F7F               	movwf	efgtoa@i& (0+255),b
 35944                           
 35945                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 35946   010626  D0CD               	goto	l8893
 35947   010628                     l8853:
 35948                           
 35949                           ; BSR set to: 5
 35950                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 35951   010628  C577  F51B         	movff	efgtoa@h,___fldiv@b
 35952   01062C  C578  F51C         	movff	efgtoa@h+1,___fldiv@b+1
 35953   010630  C579  F51D         	movff	efgtoa@h+2,___fldiv@b+2
 35954   010634  C57A  F51E         	movff	efgtoa@h+3,___fldiv@b+3
 35955   010638  C588  F51F         	movff	efgtoa@u,___fldiv@a
 35956   01063C  C589  F520         	movff	efgtoa@u+1,___fldiv@a+1
 35957   010640  C58A  F521         	movff	efgtoa@u+2,___fldiv@a+2
 35958   010644  C58B  F522         	movff	efgtoa@u+3,___fldiv@a+3
 35959   010648  EC61  F0A9         	call	___fldiv	;wreg free
 35960   01064C  C51B  F534         	movff	?___fldiv,floorf@x
 35961   010650  C51C  F535         	movff	?___fldiv+1,floorf@x+1
 35962   010654  C51D  F536         	movff	?___fldiv+2,floorf@x+2
 35963   010658  C51E  F537         	movff	?___fldiv+3,floorf@x+3
 35964   01065C  ECBB  F0B4         	call	_floorf	;wreg free
 35965   010660  C534  F57B         	movff	?_floorf,efgtoa@l
 35966   010664  C535  F57C         	movff	?_floorf+1,efgtoa@l+1
 35967   010668  C536  F57D         	movff	?_floorf+2,efgtoa@l+2
 35968   01066C  C537  F57E         	movff	?_floorf+3,efgtoa@l+3
 35969                           
 35970                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 35971   010670  C57B  F501         	movff	efgtoa@l,___fltol@f1
 35972   010674  C57C  F502         	movff	efgtoa@l+1,___fltol@f1+1
 35973   010678  C57D  F503         	movff	efgtoa@l+2,___fltol@f1+2
 35974   01067C  C57E  F504         	movff	efgtoa@l+3,___fltol@f1+3
 35975   010680  EC78  F0C4         	call	___fltol	;wreg free
 35976   010684  BE02               	btfsc	(?___fltol+1)^(0+1280),7,c
 35977   010686  D006               	goto	u10040
 35978   010688  5002               	movf	(?___fltol+1)^(0+1280),w,c
 35979   01068A  E113               	bnz	l8857
 35980   01068C  0E0A               	movlw	10
 35981   01068E  5C01               	subwf	?___fltol^(0+1280),w,c
 35982   010690  B0D8               	btfsc	status,0,c
 35983   010692  D00F               	goto	l8857
 35984   010694                     u10040:
 35985   010694  C57B  F501         	movff	efgtoa@l,___fltol@f1
 35986   010698  C57C  F502         	movff	efgtoa@l+1,___fltol@f1+1
 35987   01069C  C57D  F503         	movff	efgtoa@l+2,___fltol@f1+2
 35988   0106A0  C57E  F504         	movff	efgtoa@l+3,___fltol@f1+3
 35989   0106A4  EC78  F0C4         	call	___fltol	;wreg free
 35990   0106A8  C501  F56B         	movff	?___fltol,efgtoa@d
 35991   0106AC  C502  F56C         	movff	?___fltol+1,efgtoa@d+1
 35992   0106B0  D005               	goto	l2532
 35993   0106B2                     l8857:
 35994   0106B2  0E00               	movlw	0
 35995   0106B4  0105               	movlb	5	; () banked
 35996   0106B6  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
 35997   0106B8  0E09               	movlw	9
 35998   0106BA  6F6B               	movwf	efgtoa@d& (0+255),b
 35999   0106BC                     l2532:
 36000                           
 36001                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 36002   0106BC  0105               	movlb	5	; () banked
 36003   0106BE  5168               	movf	efgtoa@pp& (0+255),w,b
 36004   0106C0  B4D8               	btfsc	status,2,c
 36005                           
 36006                           ; BSR set to: 5
 36007   0106C2  AF61               	btfss	(efgtoa@ne+1)& (0+255),7,b
 36008   0106C4  D020               	goto	l8877
 36009                           
 36010                           ; BSR set to: 5
 36011                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 36012   0106C6  0E2D               	movlw	low _dbuf
 36013   0106C8  2586               	addwf	efgtoa@n& (0+255),w,b
 36014   0106CA  6ED9               	movwf	fsr2l,c
 36015   0106CC  0E07               	movlw	high _dbuf
 36016   0106CE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36017   0106D0  6EDA               	movwf	fsr2h,c
 36018   0106D2  0E2E               	movlw	46
 36019   0106D4  6EDF               	movwf	indf2,c
 36020                           
 36021                           ; BSR set to: 5
 36022   0106D6  4B86               	infsnz	efgtoa@n& (0+255),f,b
 36023   0106D8  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
 36024                           
 36025                           ; BSR set to: 5
 36026                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 36027   0106DA  0771               	decf	efgtoa@w& (0+255),f,b
 36028   0106DC  A0D8               	btfss	status,0,c
 36029   0106DE  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 36030                           
 36031                           ; BSR set to: 5
 36032                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 36033   0106E0  0E01               	movlw	1
 36034   0106E2  6F68               	movwf	efgtoa@pp& (0+255),b
 36035   0106E4  D010               	goto	l8877
 36036   0106E6                     l8869:
 36037                           
 36038                           ; BSR set to: 5
 36039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 36040   0106E6  0E2D               	movlw	low _dbuf
 36041   0106E8  2586               	addwf	efgtoa@n& (0+255),w,b
 36042   0106EA  6ED9               	movwf	fsr2l,c
 36043   0106EC  0E07               	movlw	high _dbuf
 36044   0106EE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36045   0106F0  6EDA               	movwf	fsr2h,c
 36046   0106F2  0E30               	movlw	48
 36047   0106F4  6EDF               	movwf	indf2,c
 36048                           
 36049                           ; BSR set to: 5
 36050   0106F6  4B86               	infsnz	efgtoa@n& (0+255),f,b
 36051   0106F8  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
 36052                           
 36053                           ; BSR set to: 5
 36054                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 36055   0106FA  0771               	decf	efgtoa@w& (0+255),f,b
 36056   0106FC  A0D8               	btfss	status,0,c
 36057   0106FE  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 36058                           
 36059                           ; BSR set to: 5
 36060                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 36061   010700  0764               	decf	efgtoa@t& (0+255),f,b
 36062   010702  A0D8               	btfss	status,0,c
 36063   010704  0765               	decf	(efgtoa@t+1)& (0+255),f,b
 36064   010706                     l8877:
 36065                           
 36066                           ; BSR set to: 5
 36067                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 36068   010706  5164               	movf	efgtoa@t& (0+255),w,b
 36069   010708  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
 36070   01070A  A4D8               	btfss	status,2,c
 36071   01070C  D7EC               	goto	l8869
 36072                           
 36073                           ; BSR set to: 5
 36074                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 36075   01070E  0E2D               	movlw	low _dbuf
 36076   010710  2586               	addwf	efgtoa@n& (0+255),w,b
 36077   010712  6ED9               	movwf	fsr2l,c
 36078   010714  0E07               	movlw	high _dbuf
 36079   010716  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36080   010718  6EDA               	movwf	fsr2h,c
 36081   01071A  516B               	movf	efgtoa@d& (0+255),w,b
 36082   01071C  0F30               	addlw	48
 36083   01071E  6EDF               	movwf	indf2,c
 36084                           
 36085                           ; BSR set to: 5
 36086   010720  4B86               	infsnz	efgtoa@n& (0+255),f,b
 36087   010722  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
 36088                           
 36089                           ; BSR set to: 5
 36090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 36091   010724  0771               	decf	efgtoa@w& (0+255),f,b
 36092   010726  A0D8               	btfss	status,0,c
 36093   010728  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 36094                           
 36095                           ; BSR set to: 5
 36096                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 36097   01072A  C577  F51A         	movff	efgtoa@h,___flsub@b
 36098   01072E  C578  F51B         	movff	efgtoa@h+1,___flsub@b+1
 36099   010732  C579  F51C         	movff	efgtoa@h+2,___flsub@b+2
 36100   010736  C57A  F51D         	movff	efgtoa@h+3,___flsub@b+3
 36101   01073A  C57B  F505         	movff	efgtoa@l,___flmul@a
 36102   01073E  C57C  F506         	movff	efgtoa@l+1,___flmul@a+1
 36103   010742  C57D  F507         	movff	efgtoa@l+2,___flmul@a+2
 36104   010746  C57E  F508         	movff	efgtoa@l+3,___flmul@a+3
 36105   01074A  C588  F501         	movff	efgtoa@u,___flmul@b
 36106   01074E  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
 36107   010752  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
 36108   010756  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
 36109   01075A  EC15  F0A2         	call	___flmul	;wreg free
 36110   01075E  C501  F51E         	movff	?___flmul,___flsub@a
 36111   010762  C502  F51F         	movff	?___flmul+1,___flsub@a+1
 36112   010766  C503  F520         	movff	?___flmul+2,___flsub@a+2
 36113   01076A  C504  F521         	movff	?___flmul+3,___flsub@a+3
 36114   01076E  EC68  F0CD         	call	___flsub	;wreg free
 36115   010772  C51A  F577         	movff	?___flsub,efgtoa@h
 36116   010776  C51B  F578         	movff	?___flsub+1,efgtoa@h+1
 36117   01077A  C51C  F579         	movff	?___flsub+2,efgtoa@h+2
 36118   01077E  C51D  F57A         	movff	?___flsub+3,efgtoa@h+3
 36119                           
 36120                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 36121   010782  C588  F51B         	movff	efgtoa@u,___fldiv@b
 36122   010786  C589  F51C         	movff	efgtoa@u+1,___fldiv@b+1
 36123   01078A  C58A  F51D         	movff	efgtoa@u+2,___fldiv@b+2
 36124   01078E  C58B  F51E         	movff	efgtoa@u+3,___fldiv@b+3
 36125   010792  0E00               	movlw	0
 36126   010794  6E1F               	movwf	___fldiv@a^(0+1280),c
 36127   010796  0E00               	movlw	0
 36128   010798  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 36129   01079A  0E20               	movlw	32
 36130   01079C  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 36131   01079E  0E41               	movlw	65
 36132   0107A0  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 36133   0107A2  EC61  F0A9         	call	___fldiv	;wreg free
 36134   0107A6  C51B  F588         	movff	?___fldiv,efgtoa@u
 36135   0107AA  C51C  F589         	movff	?___fldiv+1,efgtoa@u+1
 36136   0107AE  C51D  F58A         	movff	?___fldiv+2,efgtoa@u+2
 36137   0107B2  C51E  F58B         	movff	?___fldiv+3,efgtoa@u+3
 36138                           
 36139                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 36140   0107B6  0105               	movlb	5	; () banked
 36141   0107B8  0760               	decf	efgtoa@ne& (0+255),f,b
 36142   0107BA  A0D8               	btfss	status,0,c
 36143   0107BC  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
 36144                           
 36145                           ; BSR set to: 5
 36146                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
 36147   0107BE  4B7F               	infsnz	efgtoa@i& (0+255),f,b
 36148   0107C0  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
 36149   0107C2                     l8893:
 36150                           
 36151                           ; BSR set to: 5
 36152                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 36153   0107C2  516D               	movf	efgtoa@m& (0+255),w,b
 36154   0107C4  5D7F               	subwf	efgtoa@i& (0+255),w,b
 36155   0107C6  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 36156   0107C8  0A80               	xorlw	128
 36157   0107CA  6E4F               	movwf	??_efgtoa^(0+1280),c
 36158   0107CC  516E               	movf	(efgtoa@m+1)& (0+255),w,b
 36159   0107CE  0A80               	xorlw	128
 36160   0107D0  584F               	subwfb	??_efgtoa^(0+1280),w,c
 36161   0107D2  B0D8               	btfsc	status,0,c
 36162   0107D4  D008               	goto	u10090
 36163                           
 36164                           ; BSR set to: 5
 36165   0107D6  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
 36166   0107D8  D727               	goto	l8853
 36167   0107DA  5187               	movf	(efgtoa@n+1)& (0+255),w,b
 36168   0107DC  E104               	bnz	u10090
 36169   0107DE  0E4B               	movlw	75
 36170   0107E0  5D86               	subwf	efgtoa@n& (0+255),w,b
 36171   0107E2  A0D8               	btfss	status,0,c
 36172   0107E4  D721               	goto	l8853
 36173   0107E6                     u10090:
 36174                           
 36175                           ; BSR set to: 5
 36176                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 36177   0107E6  0E00               	movlw	0
 36178   0107E8  6F80               	movwf	(efgtoa@i+1)& (0+255),b
 36179   0107EA  0E4F               	movlw	79
 36180   0107EC  6F7F               	movwf	efgtoa@i& (0+255),b
 36181                           
 36182                           ; BSR set to: 5
 36183                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 36184   0107EE  0E2D               	movlw	low _dbuf
 36185   0107F0  257F               	addwf	efgtoa@i& (0+255),w,b
 36186   0107F2  6ED9               	movwf	fsr2l,c
 36187   0107F4  0E07               	movlw	high _dbuf
 36188   0107F6  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
 36189   0107F8  6EDA               	movwf	fsr2h,c
 36190   0107FA  6ADF               	clrf	indf2,c
 36191                           
 36192                           ; BSR set to: 5
 36193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 36194   0107FC  0E2D               	movlw	low _dbuf
 36195   0107FE  6E4F               	movwf	??_efgtoa^(0+1280),c
 36196   010800  0E07               	movlw	high _dbuf
 36197   010802  6E50               	movwf	(??_efgtoa+1)^(0+1280),c
 36198   010804  5186               	movf	efgtoa@n& (0+255),w,b
 36199   010806  5E4F               	subwf	??_efgtoa^(0+1280),f,c
 36200   010808  5187               	movf	(efgtoa@n+1)& (0+255),w,b
 36201   01080A  5A50               	subwfb	(??_efgtoa+1)^(0+1280),f,c
 36202   01080C  517F               	movf	efgtoa@i& (0+255),w,b
 36203   01080E  244F               	addwf	??_efgtoa^(0+1280),w,c
 36204   010810  6E01               	movwf	memcpy@d1^(0+1280),c
 36205   010812  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 36206   010814  2050               	addwfc	(??_efgtoa+1)^(0+1280),w,c
 36207   010816  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
 36208   010818  0E2D               	movlw	low _dbuf
 36209   01081A  6E03               	movwf	memcpy@s1^(0+1280),c
 36210   01081C  0E07               	movlw	high _dbuf
 36211   01081E  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
 36212   010820  C586  F505         	movff	efgtoa@n,memcpy@n
 36213   010824  C587  F506         	movff	efgtoa@n+1,memcpy@n+1
 36214   010828  ECAD  F0CD         	call	_memcpy	;wreg free
 36215                           
 36216                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 36217   01082C  0105               	movlb	5	; () banked
 36218   01082E  5186               	movf	efgtoa@n& (0+255),w,b
 36219   010830  5D7F               	subwf	efgtoa@i& (0+255),w,b
 36220   010832  6F86               	movwf	efgtoa@n& (0+255),b
 36221   010834  5187               	movf	(efgtoa@n+1)& (0+255),w,b
 36222   010836  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
 36223   010838  6F87               	movwf	(efgtoa@n+1)& (0+255),b
 36224                           
 36225                           ; BSR set to: 5
 36226                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 36227   01083A  5181               	movf	efgtoa@sign& (0+255),w,b
 36228   01083C  B4D8               	btfsc	status,2,c
 36229   01083E  D002               	goto	u10100
 36230   010840  0E01               	movlw	1
 36231   010842  D001               	goto	u10110
 36232   010844                     u10100:
 36233   010844  0E00               	movlw	0
 36234   010846                     u10110:
 36235   010846  6F7F               	movwf	efgtoa@i& (0+255),b
 36236   010848  6B80               	clrf	(efgtoa@i+1)& (0+255),b
 36237                           
 36238                           ; BSR set to: 5
 36239                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
 36240   01084A  0107               	movlb	7	; () banked
 36241   01084C  B327               	btfsc	_flags& (0+255),1,b
 36242   01084E  D00F               	goto	l8915
 36243   010850  D023               	goto	u10140
 36244   010852                     l8911:
 36245                           
 36246                           ; BSR set to: 5
 36247                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
 36248   010852  0786               	decf	efgtoa@n& (0+255),f,b
 36249   010854  A0D8               	btfss	status,0,c
 36250   010856  0787               	decf	(efgtoa@n+1)& (0+255),f,b
 36251   010858  0E2D               	movlw	low _dbuf
 36252   01085A  2586               	addwf	efgtoa@n& (0+255),w,b
 36253   01085C  6ED9               	movwf	fsr2l,c
 36254   01085E  0E07               	movlw	high _dbuf
 36255   010860  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36256   010862  6EDA               	movwf	fsr2h,c
 36257   010864  0E30               	movlw	48
 36258   010866  6EDF               	movwf	indf2,c
 36259                           
 36260                           ; BSR set to: 5
 36261                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 856:    w--;
 36262   010868  0771               	decf	efgtoa@w& (0+255),f,b
 36263   01086A  A0D8               	btfss	status,0,c
 36264   01086C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
 36265   01086E                     l8915:
 36266                           
 36267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
 36268   01086E  0105               	movlb	5	; () banked
 36269   010870  5171               	movf	efgtoa@w& (0+255),w,b
 36270   010872  5D7F               	subwf	efgtoa@i& (0+255),w,b
 36271   010874  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 36272   010876  0A80               	xorlw	128
 36273   010878  6E4F               	movwf	??_efgtoa^(0+1280),c
 36274   01087A  5172               	movf	(efgtoa@w+1)& (0+255),w,b
 36275   01087C  0A80               	xorlw	128
 36276   01087E  584F               	subwfb	??_efgtoa^(0+1280),w,c
 36277   010880  B0D8               	btfsc	status,0,c
 36278   010882  D00A               	goto	u10140
 36279                           
 36280                           ; BSR set to: 5
 36281   010884  5186               	movf	efgtoa@n& (0+255),w,b
 36282   010886  5D7F               	subwf	efgtoa@i& (0+255),w,b
 36283   010888  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 36284   01088A  0A80               	xorlw	128
 36285   01088C  6E4F               	movwf	??_efgtoa^(0+1280),c
 36286   01088E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
 36287   010890  0A80               	xorlw	128
 36288   010892  584F               	subwfb	??_efgtoa^(0+1280),w,c
 36289   010894  A0D8               	btfss	status,0,c
 36290   010896  D7DD               	goto	l8911
 36291   010898                     u10140:
 36292                           
 36293                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 36294   010898  0105               	movlb	5	; () banked
 36295   01089A  5181               	movf	efgtoa@sign& (0+255),w,b
 36296   01089C  B4D8               	btfsc	status,2,c
 36297   01089E  D00B               	goto	l8923
 36298                           
 36299                           ; BSR set to: 5
 36300                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 36301   0108A0  0786               	decf	efgtoa@n& (0+255),f,b
 36302   0108A2  A0D8               	btfss	status,0,c
 36303   0108A4  0787               	decf	(efgtoa@n+1)& (0+255),f,b
 36304   0108A6  0E2D               	movlw	low _dbuf
 36305   0108A8  2586               	addwf	efgtoa@n& (0+255),w,b
 36306   0108AA  6ED9               	movwf	fsr2l,c
 36307   0108AC  0E07               	movlw	high _dbuf
 36308   0108AE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36309   0108B0  6EDA               	movwf	fsr2h,c
 36310   0108B2  C581  F4DF         	movff	efgtoa@sign,indf2
 36311   0108B6                     l8923:
 36312                           
 36313                           ; BSR set to: 5
 36314                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 36315   0108B6  517F               	movf	efgtoa@i& (0+255),w,b
 36316   0108B8  5F71               	subwf	efgtoa@w& (0+255),f,b
 36317   0108BA  5180               	movf	(efgtoa@i+1)& (0+255),w,b
 36318   0108BC  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
 36319                           
 36320                           ; BSR set to: 5
 36321                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 36322   0108BE  C548  F512         	movff	efgtoa@fp,pad@fp
 36323   0108C2  C549  F513         	movff	efgtoa@fp+1,pad@fp+1
 36324   0108C6  0E2D               	movlw	low _dbuf
 36325   0108C8  2586               	addwf	efgtoa@n& (0+255),w,b
 36326   0108CA  6E14               	movwf	pad@buf^(0+1280),c
 36327   0108CC  0E07               	movlw	high _dbuf
 36328   0108CE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
 36329   0108D0  6E15               	movwf	(pad@buf+1)^(0+1280),c
 36330   0108D2  C571  F516         	movff	efgtoa@w,pad@p
 36331   0108D6  C572  F517         	movff	efgtoa@w+1,pad@p+1
 36332   0108DA  ECD2  F0C9         	call	_pad	;wreg free
 36333   0108DE  0012               	return		;funcret
 36334   0108E0                     __end_of_efgtoa:
 36335                           	callstack 0
 36336                           
 36337 ;; *************** function _strcpy *****************
 36338 ;; Defined at:
 36339 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 36340 ;; Parameters:    Size  Location     Type
 36341 ;;  dest            2    0[COMRAM] PTR unsigned char 
 36342 ;;		 -> dbuf(80), fileinfo(22), 
 36343 ;;  src             2    2[COMRAM] PTR const unsigned char 
 36344 ;;		 -> STR_94(4), STR_91(4), STR_42(9), 
 36345 ;; Auto vars:     Size  Location     Type
 36346 ;;  d               2    4[COMRAM] PTR unsigned char 
 36347 ;;		 -> dbuf(80), fileinfo(22), 
 36348 ;; Return value:  Size  Location     Type
 36349 ;;                  2    0[COMRAM] PTR unsigned char 
 36350 ;; Registers used:
 36351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36352 ;; Tracked objects:
 36353 ;;		On entry : 3D/7
 36354 ;;		On exit  : 3D/5
 36355 ;;		Unchanged: 3C/0
 36356 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36360 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36361 ;;Total ram usage:        6 bytes
 36362 ;; Hardware stack levels used: 1
 36363 ;; This function calls:
 36364 ;;		Nothing
 36365 ;; This function is called by:
 36366 ;;		_menu_select
 36367 ;;		_efgtoa
 36368 ;; This function uses a non-reentrant model
 36369 ;;
 36370                           
 36371                           	psect	text84
 36372   019D0A                     __ptext84:
 36373                           	callstack 0
 36374   019D0A                     _strcpy:
 36375                           	callstack 121
 36376                           
 36377                           ;incstack = 0
 36378   019D0A  C501  F505         	movff	strcpy@dest,strcpy@d
 36379   019D0E  C502  F506         	movff	strcpy@dest+1,strcpy@d+1
 36380   019D12                     l8089:
 36381   019D12  C503  F4F6         	movff	strcpy@src,tblptrl
 36382   019D16  C504  F4F7         	movff	strcpy@src+1,tblptrh
 36383   019D1A  4A03               	infsnz	strcpy@src^(0+1280),f,c
 36384   019D1C  2A04               	incf	(strcpy@src+1)^(0+1280),f,c
 36385   019D1E                     	if	0	;tblptru may be non-zero
 36386   019D1E                     	endif
 36387   019D1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36388   019D1E  0E00               	movlw	low (__mediumconst shr (0+16))
 36389   019D20  6EF8               	movwf	tblptru,c
 36390   019D22                     	endif
 36391   019D22  C505  F4D9         	movff	strcpy@d,fsr2l
 36392   019D26  C506  F4DA         	movff	strcpy@d+1,fsr2h
 36393   019D2A  4A05               	infsnz	strcpy@d^(0+1280),f,c
 36394   019D2C  2A06               	incf	(strcpy@d+1)^(0+1280),f,c
 36395   019D2E  0008               	tblrd		*
 36396   019D30  C4F5 F4DF          	movff	tablat,indf2
 36397   019D34  50DF               	movf	indf2,w,c
 36398   019D36  B4D8               	btfsc	status,2,c
 36399   019D38  0012               	return	
 36400   019D3A  D7EB               	goto	l8089
 36401   019D3C                     __end_of_strcpy:
 36402                           	callstack 0
 36403                           
 36404 ;; *************** function _memcpy *****************
 36405 ;; Defined at:
 36406 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 36407 ;; Parameters:    Size  Location     Type
 36408 ;;  d1              2    0[COMRAM] PTR void 
 36409 ;;		 -> files$buf(512), fs$win(512), dbuf(80), fs(560), 
 36410 ;;		 -> disk_buf(128), files(3276), f_rename@djn(40), f_rename@buf(32), 
 36411 ;;		 -> NULL(0), 
 36412 ;;  s1              2    2[COMRAM] PTR const void 
 36413 ;;		 -> files$buf(512), djn$fn(12), fs$win(512), dbuf(80), 
 36414 ;;		 -> fs(560), disk_buf(128), files(3276), f_rename@djn(40), 
 36415 ;;		 -> f_rename@buf(32), f_rename@djo(40), f_mkdir@dj(40), dj$fn(12), 
 36416 ;;		 -> f_open@dj(40), NULL(0), 
 36417 ;;  n               2    4[COMRAM] unsigned int 
 36418 ;; Auto vars:     Size  Location     Type
 36419 ;;  s               2    8[COMRAM] PTR const unsigned char 
 36420 ;;		 -> files$buf(512), djn$fn(12), fs$win(512), dbuf(80), 
 36421 ;;		 -> fs(560), disk_buf(128), files(3276), f_rename@djn(40), 
 36422 ;;		 -> f_rename@buf(32), f_rename@djo(40), f_mkdir@dj(40), dj$fn(12), 
 36423 ;;		 -> f_open@dj(40), NULL(0), 
 36424 ;;  d               2    6[COMRAM] PTR unsigned char 
 36425 ;;		 -> files$buf(512), fs$win(512), dbuf(80), fs(560), 
 36426 ;;		 -> disk_buf(128), files(3276), f_rename@djn(40), f_rename@buf(32), 
 36427 ;;		 -> NULL(0), 
 36428 ;;  tmp             1   10[COMRAM] unsigned char 
 36429 ;; Return value:  Size  Location     Type
 36430 ;;                  2    0[COMRAM] PTR void 
 36431 ;; Registers used:
 36432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36433 ;; Tracked objects:
 36434 ;;		On entry : 3C/6
 36435 ;;		On exit  : 3C/4
 36436 ;;		Unchanged: 3C/0
 36437 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36438 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36439 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36441 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36442 ;;Total ram usage:       11 bytes
 36443 ;; Hardware stack levels used: 1
 36444 ;; This function calls:
 36445 ;;		Nothing
 36446 ;; This function is called by:
 36447 ;;		_dir_register
 36448 ;;		_f_read
 36449 ;;		_f_write
 36450 ;;		_efgtoa
 36451 ;; This function uses a non-reentrant model
 36452 ;;
 36453                           
 36454                           	psect	text85
 36455   019B5A                     __ptext85:
 36456                           	callstack 0
 36457   019B5A                     _memcpy:
 36458                           	callstack 121
 36459                           
 36460                           ;incstack = 0
 36461   019B5A  C503  F509         	movff	memcpy@s1,memcpy@s
 36462   019B5E  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
 36463   019B62  C501  F507         	movff	memcpy@d1,memcpy@d
 36464   019B66  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
 36465   019B6A  D010               	goto	l8085
 36466   019B6C                     l8077:
 36467   019B6C  C509  F4D9         	movff	memcpy@s,fsr2l
 36468   019B70  C50A  F4DA         	movff	memcpy@s+1,fsr2h
 36469   019B74  50DF               	movf	indf2,w,c
 36470   019B76  6E0B               	movwf	memcpy@tmp^(0+1280),c
 36471   019B78  4A09               	infsnz	memcpy@s^(0+1280),f,c
 36472   019B7A  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
 36473   019B7C  C507  F4D9         	movff	memcpy@d,fsr2l
 36474   019B80  C508  F4DA         	movff	memcpy@d+1,fsr2h
 36475   019B84  C50B  F4DF         	movff	memcpy@tmp,indf2
 36476   019B88  4A07               	infsnz	memcpy@d^(0+1280),f,c
 36477   019B8A  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
 36478   019B8C                     l8085:
 36479   019B8C  0605               	decf	memcpy@n^(0+1280),f,c
 36480   019B8E  A0D8               	btfss	status,0,c
 36481   019B90  0606               	decf	(memcpy@n+1)^(0+1280),f,c
 36482   019B92  2805               	incf	memcpy@n^(0+1280),w,c
 36483   019B94  E1EB               	bnz	l8077
 36484   019B96  2806               	incf	(memcpy@n+1)^(0+1280),w,c
 36485   019B98  B4D8               	btfsc	status,2,c
 36486   019B9A  0012               	return	
 36487   019B9C  D7E7               	goto	l8077
 36488   019B9E                     __end_of_memcpy:
 36489                           	callstack 0
 36490                           
 36491 ;; *************** function _labs *****************
 36492 ;; Defined at:
 36493 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
 36494 ;; Parameters:    Size  Location     Type
 36495 ;;  a               4    0[COMRAM] long 
 36496 ;; Auto vars:     Size  Location     Type
 36497 ;;		None
 36498 ;; Return value:  Size  Location     Type
 36499 ;;                  4    0[COMRAM] long 
 36500 ;; Registers used:
 36501 ;;		wreg, status,2, status,0
 36502 ;; Tracked objects:
 36503 ;;		On entry : 3F/5
 36504 ;;		On exit  : 3F/5
 36505 ;;		Unchanged: 3E/0
 36506 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36510 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36511 ;;Total ram usage:        8 bytes
 36512 ;; Hardware stack levels used: 1
 36513 ;; This function calls:
 36514 ;;		Nothing
 36515 ;; This function is called by:
 36516 ;;		_efgtoa
 36517 ;; This function uses a non-reentrant model
 36518 ;;
 36519                           
 36520                           	psect	text86
 36521   0199F4                     __ptext86:
 36522                           	callstack 0
 36523   0199F4                     _labs:
 36524                           	callstack 121
 36525                           
 36526                           ; BSR set to: 5
 36527                           
 36528                           ;incstack = 0
 36529   0199F4  BE04               	btfsc	(labs@a+3)^(0+1280),7,c
 36530   0199F6  D009               	goto	l8587
 36531                           
 36532                           ; BSR set to: 5
 36533   0199F8  C501  F501         	movff	labs@a,?_labs
 36534   0199FC  C502  F502         	movff	labs@a+1,?_labs+1
 36535   019A00  C503  F503         	movff	labs@a+2,?_labs+2
 36536   019A04  C504  F504         	movff	labs@a+3,?_labs+3
 36537   019A08  0012               	return	
 36538   019A0A                     l8587:
 36539                           
 36540                           ; BSR set to: 5
 36541   019A0A  C501  F505         	movff	labs@a,??_labs
 36542   019A0E  C502  F506         	movff	labs@a+1,??_labs+1
 36543   019A12  C503  F507         	movff	labs@a+2,??_labs+2
 36544   019A16  C504  F508         	movff	labs@a+3,??_labs+3
 36545   019A1A  1E05               	comf	??_labs^(0+1280),f,c
 36546   019A1C  1E06               	comf	(??_labs+1)^(0+1280),f,c
 36547   019A1E  1E07               	comf	(??_labs+2)^(0+1280),f,c
 36548   019A20  1E08               	comf	(??_labs+3)^(0+1280),f,c
 36549   019A22  2A05               	incf	??_labs^(0+1280),f,c
 36550   019A24  0E00               	movlw	0
 36551   019A26  2206               	addwfc	(??_labs+1)^(0+1280),f,c
 36552   019A28  2207               	addwfc	(??_labs+2)^(0+1280),f,c
 36553   019A2A  2208               	addwfc	(??_labs+3)^(0+1280),f,c
 36554   019A2C  C505  F501         	movff	??_labs,?_labs
 36555   019A30  C506  F502         	movff	??_labs+1,?_labs+1
 36556   019A34  C507  F503         	movff	??_labs+2,?_labs+2
 36557   019A38  C508  F504         	movff	??_labs+3,?_labs+3
 36558                           
 36559                           ; BSR set to: 5
 36560   019A3C  0012               	return		;funcret
 36561   019A3E                     __end_of_labs:
 36562                           	callstack 0
 36563                           
 36564 ;; *************** function _floorf *****************
 36565 ;; Defined at:
 36566 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
 36567 ;; Parameters:    Size  Location     Type
 36568 ;;  x               4   51[COMRAM] float 
 36569 ;; Auto vars:     Size  Location     Type
 36570 ;;  u               4   67[COMRAM] struct .
 36571 ;;  m               4   61[COMRAM] unsigned long 
 36572 ;;  e               2   65[COMRAM] int 
 36573 ;; Return value:  Size  Location     Type
 36574 ;;                  4   51[COMRAM] float 
 36575 ;; Registers used:
 36576 ;;		wreg, status,2, status,0
 36577 ;; Tracked objects:
 36578 ;;		On entry : 0/5
 36579 ;;		On exit  : 0/0
 36580 ;;		Unchanged: 0/0
 36581 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36583 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36584 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36585 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36586 ;;Total ram usage:       20 bytes
 36587 ;; Hardware stack levels used: 1
 36588 ;; This function calls:
 36589 ;;		Nothing
 36590 ;; This function is called by:
 36591 ;;		_efgtoa
 36592 ;; This function uses a non-reentrant model
 36593 ;;
 36594                           
 36595                           	psect	text87
 36596   016976                     __ptext87:
 36597                           	callstack 0
 36598   016976                     _floorf:
 36599                           	callstack 121
 36600                           
 36601                           ; BSR set to: 5
 36602                           ;incstack = 0
 36603   016976  C70B  F544         	movff	floorf@F521,floorf@u
 36604   01697A  C70C  F545         	movff	floorf@F521+1,floorf@u+1
 36605   01697E  C70D  F546         	movff	floorf@F521+2,floorf@u+2
 36606   016982  C70E  F547         	movff	floorf@F521+3,floorf@u+3
 36607   016986  C534  F544         	movff	floorf@x,floorf@u
 36608   01698A  C535  F545         	movff	floorf@x+1,floorf@u+1
 36609   01698E  C536  F546         	movff	floorf@x+2,floorf@u+2
 36610   016992  C537  F547         	movff	floorf@x+3,floorf@u+3
 36611   016996  0E81               	movlw	129
 36612   016998  6E38               	movwf	??_floorf^(0+1280),c
 36613   01699A  0EFF               	movlw	255
 36614   01699C  6E39               	movwf	(??_floorf+1)^(0+1280),c
 36615   01699E  C544  F53A         	movff	floorf@u,??_floorf+2
 36616   0169A2  C545  F53B         	movff	floorf@u+1,??_floorf+3
 36617   0169A6  C546  F53C         	movff	floorf@u+2,??_floorf+4
 36618   0169AA  C547  F53D         	movff	floorf@u+3,??_floorf+5
 36619   0169AE  0E18               	movlw	24
 36620   0169B0  D005               	goto	u9540
 36621   0169B2                     u9545:
 36622   0169B2  90D8               	bcf	status,0,c
 36623   0169B4  323D               	rrcf	(??_floorf+5)^(0+1280),f,c
 36624   0169B6  323C               	rrcf	(??_floorf+4)^(0+1280),f,c
 36625   0169B8  323B               	rrcf	(??_floorf+3)^(0+1280),f,c
 36626   0169BA  323A               	rrcf	(??_floorf+2)^(0+1280),f,c
 36627   0169BC                     u9540:
 36628   0169BC  2EE8               	decfsz	wreg,f,c
 36629   0169BE  D7F9               	goto	u9545
 36630   0169C0  503A               	movf	(??_floorf+2)^(0+1280),w,c
 36631   0169C2  2438               	addwf	??_floorf^(0+1280),w,c
 36632   0169C4  6E42               	movwf	floorf@e^(0+1280),c
 36633   0169C6  0E00               	movlw	0
 36634   0169C8  2039               	addwfc	(??_floorf+1)^(0+1280),w,c
 36635   0169CA  6E43               	movwf	(floorf@e+1)^(0+1280),c
 36636   0169CC  BE43               	btfsc	(floorf@e+1)^(0+1280),7,c
 36637   0169CE  D00F               	goto	l8597
 36638   0169D0  5043               	movf	(floorf@e+1)^(0+1280),w,c
 36639   0169D2  E104               	bnz	u9550
 36640   0169D4  0E17               	movlw	23
 36641   0169D6  5C42               	subwf	floorf@e^(0+1280),w,c
 36642   0169D8  A0D8               	btfss	status,0,c
 36643   0169DA  D009               	goto	l8597
 36644   0169DC                     u9550:
 36645   0169DC  C534  F534         	movff	floorf@x,?_floorf
 36646   0169E0  C535  F535         	movff	floorf@x+1,?_floorf+1
 36647   0169E4  C536  F536         	movff	floorf@x+2,?_floorf+2
 36648   0169E8  C537  F537         	movff	floorf@x+3,?_floorf+3
 36649   0169EC  0012               	return	
 36650   0169EE                     l8597:
 36651   0169EE  BE43               	btfsc	(floorf@e+1)^(0+1280),7,c
 36652   0169F0  D05B               	goto	l8607
 36653   0169F2  C542  F538         	movff	floorf@e,??_floorf
 36654   0169F6  0EFF               	movlw	255
 36655   0169F8  6E39               	movwf	(??_floorf+1)^(0+1280),c
 36656   0169FA  0EFF               	movlw	255
 36657   0169FC  6E3A               	movwf	(??_floorf+2)^(0+1280),c
 36658   0169FE  0E7F               	movlw	127
 36659   016A00  6E3B               	movwf	(??_floorf+3)^(0+1280),c
 36660   016A02  0E00               	movlw	0
 36661   016A04  6E3C               	movwf	(??_floorf+4)^(0+1280),c
 36662   016A06                     u9575:
 36663   016A06  6638               	tstfsz	??_floorf^(0+1280),c
 36664   016A08  D001               	goto	u9576
 36665   016A0A  D007               	goto	u9577
 36666   016A0C                     u9576:
 36667   016A0C  343C               	rlcf	(??_floorf+4)^(0+1280),w,c
 36668   016A0E  323C               	rrcf	(??_floorf+4)^(0+1280),f,c
 36669   016A10  323B               	rrcf	(??_floorf+3)^(0+1280),f,c
 36670   016A12  323A               	rrcf	(??_floorf+2)^(0+1280),f,c
 36671   016A14  3239               	rrcf	(??_floorf+1)^(0+1280),f,c
 36672   016A16  2E38               	decfsz	??_floorf^(0+1280),f,c
 36673   016A18  D7F6               	goto	u9575
 36674   016A1A                     u9577:
 36675   016A1A  C539  F53E         	movff	??_floorf+1,floorf@m
 36676   016A1E  C53A  F53F         	movff	??_floorf+2,floorf@m+1
 36677   016A22  C53B  F540         	movff	??_floorf+3,floorf@m+2
 36678   016A26  C53C  F541         	movff	??_floorf+4,floorf@m+3
 36679   016A2A  503E               	movf	floorf@m^(0+1280),w,c
 36680   016A2C  1444               	andwf	floorf@u^(0+1280),w,c
 36681   016A2E  6E38               	movwf	??_floorf^(0+1280),c
 36682   016A30  503F               	movf	(floorf@m+1)^(0+1280),w,c
 36683   016A32  1445               	andwf	(floorf@u+1)^(0+1280),w,c
 36684   016A34  6E39               	movwf	(??_floorf+1)^(0+1280),c
 36685   016A36  5040               	movf	(floorf@m+2)^(0+1280),w,c
 36686   016A38  1446               	andwf	(floorf@u+2)^(0+1280),w,c
 36687   016A3A  6E3A               	movwf	(??_floorf+2)^(0+1280),c
 36688   016A3C  5041               	movf	(floorf@m+3)^(0+1280),w,c
 36689   016A3E  1447               	andwf	(floorf@u+3)^(0+1280),w,c
 36690   016A40  6E3B               	movwf	(??_floorf+3)^(0+1280),c
 36691   016A42  5038               	movf	??_floorf^(0+1280),w,c
 36692   016A44  1039               	iorwf	(??_floorf+1)^(0+1280),w,c
 36693   016A46  103A               	iorwf	(??_floorf+2)^(0+1280),w,c
 36694   016A48  103B               	iorwf	(??_floorf+3)^(0+1280),w,c
 36695   016A4A  B4D8               	btfsc	status,2,c
 36696   016A4C  D7C7               	goto	u9550
 36697   016A4E  C544  F538         	movff	floorf@u,??_floorf
 36698   016A52  C545  F539         	movff	floorf@u+1,??_floorf+1
 36699   016A56  C546  F53A         	movff	floorf@u+2,??_floorf+2
 36700   016A5A  C547  F53B         	movff	floorf@u+3,??_floorf+3
 36701   016A5E  0E20               	movlw	32
 36702   016A60  D005               	goto	u9590
 36703   016A62                     u9595:
 36704   016A62  90D8               	bcf	status,0,c
 36705   016A64  323B               	rrcf	(??_floorf+3)^(0+1280),f,c
 36706   016A66  323A               	rrcf	(??_floorf+2)^(0+1280),f,c
 36707   016A68  3239               	rrcf	(??_floorf+1)^(0+1280),f,c
 36708   016A6A  3238               	rrcf	??_floorf^(0+1280),f,c
 36709   016A6C                     u9590:
 36710   016A6C  2EE8               	decfsz	wreg,f,c
 36711   016A6E  D7F9               	goto	u9595
 36712   016A70  5038               	movf	??_floorf^(0+1280),w,c
 36713   016A72  B4D8               	btfsc	status,2,c
 36714   016A74  D008               	goto	l2688
 36715   016A76  503E               	movf	floorf@m^(0+1280),w,c
 36716   016A78  2644               	addwf	floorf@u^(0+1280),f,c
 36717   016A7A  503F               	movf	(floorf@m+1)^(0+1280),w,c
 36718   016A7C  2245               	addwfc	(floorf@u+1)^(0+1280),f,c
 36719   016A7E  5040               	movf	(floorf@m+2)^(0+1280),w,c
 36720   016A80  2246               	addwfc	(floorf@u+2)^(0+1280),f,c
 36721   016A82  5041               	movf	(floorf@m+3)^(0+1280),w,c
 36722   016A84  2247               	addwfc	(floorf@u+3)^(0+1280),f,c
 36723   016A86                     l2688:
 36724   016A86  1C3E               	comf	floorf@m^(0+1280),w,c
 36725   016A88  6E38               	movwf	??_floorf^(0+1280),c
 36726   016A8A  1C3F               	comf	(floorf@m+1)^(0+1280),w,c
 36727   016A8C  6E39               	movwf	(??_floorf+1)^(0+1280),c
 36728   016A8E  1C40               	comf	(floorf@m+2)^(0+1280),w,c
 36729   016A90  6E3A               	movwf	(??_floorf+2)^(0+1280),c
 36730   016A92  1C41               	comf	(floorf@m+3)^(0+1280),w,c
 36731   016A94  6E3B               	movwf	(??_floorf+3)^(0+1280),c
 36732   016A96  5038               	movf	??_floorf^(0+1280),w,c
 36733   016A98  1644               	andwf	floorf@u^(0+1280),f,c
 36734   016A9A  5039               	movf	(??_floorf+1)^(0+1280),w,c
 36735   016A9C  1645               	andwf	(floorf@u+1)^(0+1280),f,c
 36736   016A9E  503A               	movf	(??_floorf+2)^(0+1280),w,c
 36737   016AA0  1646               	andwf	(floorf@u+2)^(0+1280),f,c
 36738   016AA2  503B               	movf	(??_floorf+3)^(0+1280),w,c
 36739   016AA4  1647               	andwf	(floorf@u+3)^(0+1280),f,c
 36740   016AA6  D032               	goto	l8615
 36741   016AA8                     l8607:
 36742   016AA8  C544  F538         	movff	floorf@u,??_floorf
 36743   016AAC  C545  F539         	movff	floorf@u+1,??_floorf+1
 36744   016AB0  C546  F53A         	movff	floorf@u+2,??_floorf+2
 36745   016AB4  C547  F53B         	movff	floorf@u+3,??_floorf+3
 36746   016AB8  0E20               	movlw	32
 36747   016ABA  D005               	goto	u9610
 36748   016ABC                     u9615:
 36749   016ABC  90D8               	bcf	status,0,c
 36750   016ABE  323B               	rrcf	(??_floorf+3)^(0+1280),f,c
 36751   016AC0  323A               	rrcf	(??_floorf+2)^(0+1280),f,c
 36752   016AC2  3239               	rrcf	(??_floorf+1)^(0+1280),f,c
 36753   016AC4  3238               	rrcf	??_floorf^(0+1280),f,c
 36754   016AC6                     u9610:
 36755   016AC6  2EE8               	decfsz	wreg,f,c
 36756   016AC8  D7F9               	goto	u9615
 36757   016ACA  6638               	tstfsz	??_floorf^(0+1280),c
 36758   016ACC  D008               	goto	l8611
 36759   016ACE  0E00               	movlw	0
 36760   016AD0  6E44               	movwf	floorf@u^(0+1280),c
 36761   016AD2  0E00               	movlw	0
 36762   016AD4  6E45               	movwf	(floorf@u+1)^(0+1280),c
 36763   016AD6  0E00               	movlw	0
 36764   016AD8  6E46               	movwf	(floorf@u+2)^(0+1280),c
 36765   016ADA  0E00               	movlw	0
 36766   016ADC  D016               	goto	L26
 36767   016ADE                     l8611:
 36768   016ADE  90D8               	bcf	status,0,c
 36769   016AE0  3444               	rlcf	floorf@u^(0+1280),w,c
 36770   016AE2  6E38               	movwf	??_floorf^(0+1280),c
 36771   016AE4  3445               	rlcf	(floorf@u+1)^(0+1280),w,c
 36772   016AE6  6E39               	movwf	(??_floorf+1)^(0+1280),c
 36773   016AE8  3446               	rlcf	(floorf@u+2)^(0+1280),w,c
 36774   016AEA  6E3A               	movwf	(??_floorf+2)^(0+1280),c
 36775   016AEC  3447               	rlcf	(floorf@u+3)^(0+1280),w,c
 36776   016AEE  6E3B               	movwf	(??_floorf+3)^(0+1280),c
 36777   016AF0  5038               	movf	??_floorf^(0+1280),w,c
 36778   016AF2  1039               	iorwf	(??_floorf+1)^(0+1280),w,c
 36779   016AF4  103A               	iorwf	(??_floorf+2)^(0+1280),w,c
 36780   016AF6  103B               	iorwf	(??_floorf+3)^(0+1280),w,c
 36781   016AF8  B4D8               	btfsc	status,2,c
 36782   016AFA  D008               	goto	l8615
 36783   016AFC  0E00               	movlw	0
 36784   016AFE  6E44               	movwf	floorf@u^(0+1280),c
 36785   016B00  0E00               	movlw	0
 36786   016B02  6E45               	movwf	(floorf@u+1)^(0+1280),c
 36787   016B04  0E80               	movlw	128
 36788   016B06  6E46               	movwf	(floorf@u+2)^(0+1280),c
 36789   016B08  0EBF               	movlw	191
 36790   016B0A                     L26:
 36791   016B0A  6E47               	movwf	(floorf@u+3)^(0+1280),c
 36792   016B0C                     l8615:
 36793   016B0C  C544  F534         	movff	floorf@u,?_floorf
 36794   016B10  C545  F535         	movff	floorf@u+1,?_floorf+1
 36795   016B14  C546  F536         	movff	floorf@u+2,?_floorf+2
 36796   016B18  C547  F537         	movff	floorf@u+3,?_floorf+3
 36797   016B1C  0012               	return		;funcret
 36798   016B1E                     __end_of_floorf:
 36799                           	callstack 0
 36800                           
 36801 ;; *************** function ___fpclassifyf *****************
 36802 ;; Defined at:
 36803 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
 36804 ;; Parameters:    Size  Location     Type
 36805 ;;  x               4    0[COMRAM] float 
 36806 ;; Auto vars:     Size  Location     Type
 36807 ;;  u               4   10[COMRAM] struct .
 36808 ;;  e               2    8[COMRAM] int 
 36809 ;; Return value:  Size  Location     Type
 36810 ;;                  2    0[COMRAM] int 
 36811 ;; Registers used:
 36812 ;;		wreg, status,2, status,0
 36813 ;; Tracked objects:
 36814 ;;		On entry : 0/5
 36815 ;;		On exit  : 0/0
 36816 ;;		Unchanged: 0/0
 36817 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36819 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36820 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36821 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36822 ;;Total ram usage:       14 bytes
 36823 ;; Hardware stack levels used: 1
 36824 ;; This function calls:
 36825 ;;		Nothing
 36826 ;; This function is called by:
 36827 ;;		_efgtoa
 36828 ;; This function uses a non-reentrant model
 36829 ;;
 36830                           
 36831                           	psect	text88
 36832   018452                     __ptext88:
 36833                           	callstack 0
 36834   018452                     ___fpclassifyf:
 36835                           	callstack 121
 36836                           
 36837                           ;incstack = 0
 36838   018452  C70F  F50B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 36839   018456  C710  F50C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 36840   01845A  C711  F50D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 36841   01845E  C712  F50E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 36842   018462  C501  F50B         	movff	___fpclassifyf@x,___fpclassifyf@u
 36843   018466  C502  F50C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 36844   01846A  C503  F50D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 36845   01846E  C504  F50E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 36846   018472  C50B  F505         	movff	___fpclassifyf@u,??___fpclassifyf
 36847   018476  C50C  F506         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 36848   01847A  C50D  F507         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 36849   01847E  C50E  F508         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 36850   018482  0E18               	movlw	24
 36851   018484  D005               	goto	u9460
 36852   018486                     u9465:
 36853   018486  90D8               	bcf	status,0,c
 36854   018488  3208               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
 36855   01848A  3207               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
 36856   01848C  3206               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
 36857   01848E  3205               	rrcf	??___fpclassifyf^(0+1280),f,c
 36858   018490                     u9460:
 36859   018490  2EE8               	decfsz	wreg,f,c
 36860   018492  D7F9               	goto	u9465
 36861   018494  5005               	movf	??___fpclassifyf^(0+1280),w,c
 36862   018496  6E09               	movwf	___fpclassifyf@e^(0+1280),c
 36863   018498  6A0A               	clrf	(___fpclassifyf@e+1)^(0+1280),c
 36864   01849A  5009               	movf	___fpclassifyf@e^(0+1280),w,c
 36865   01849C  100A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 36866   01849E  A4D8               	btfss	status,2,c
 36867   0184A0  D019               	goto	l8573
 36868   0184A2  90D8               	bcf	status,0,c
 36869   0184A4  340B               	rlcf	___fpclassifyf@u^(0+1280),w,c
 36870   0184A6  6E05               	movwf	??___fpclassifyf^(0+1280),c
 36871   0184A8  340C               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
 36872   0184AA  6E06               	movwf	(??___fpclassifyf+1)^(0+1280),c
 36873   0184AC  340D               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
 36874   0184AE  6E07               	movwf	(??___fpclassifyf+2)^(0+1280),c
 36875   0184B0  340E               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
 36876   0184B2  6E08               	movwf	(??___fpclassifyf+3)^(0+1280),c
 36877   0184B4  5005               	movf	??___fpclassifyf^(0+1280),w,c
 36878   0184B6  1006               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 36879   0184B8  1007               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 36880   0184BA  1008               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 36881   0184BC  A4D8               	btfss	status,2,c
 36882   0184BE  D005               	goto	l8569
 36883   0184C0  0E00               	movlw	0
 36884   0184C2  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 36885   0184C4  0E02               	movlw	2
 36886   0184C6  6E01               	movwf	?___fpclassifyf^(0+1280),c
 36887   0184C8  0012               	return	
 36888   0184CA                     l8569:
 36889   0184CA  0E00               	movlw	0
 36890   0184CC  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 36891   0184CE  0E03               	movlw	3
 36892   0184D0  6E01               	movwf	?___fpclassifyf^(0+1280),c
 36893   0184D2  0012               	return	
 36894   0184D4                     l8573:
 36895   0184D4  2809               	incf	___fpclassifyf@e^(0+1280),w,c
 36896   0184D6  100A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 36897   0184D8  A4D8               	btfss	status,2,c
 36898   0184DA  D01C               	goto	l8579
 36899   0184DC  C50B  F505         	movff	___fpclassifyf@u,??___fpclassifyf
 36900   0184E0  C50C  F506         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 36901   0184E4  C50D  F507         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 36902   0184E8  C50E  F508         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 36903   0184EC  0E09               	movlw	9
 36904   0184EE                     u9505:
 36905   0184EE  90D8               	bcf	status,0,c
 36906   0184F0  3605               	rlcf	??___fpclassifyf^(0+1280),f,c
 36907   0184F2  3606               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
 36908   0184F4  3607               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
 36909   0184F6  3608               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
 36910   0184F8  2EE8               	decfsz	wreg,f,c
 36911   0184FA  D7F9               	goto	u9505
 36912   0184FC  5005               	movf	??___fpclassifyf^(0+1280),w,c
 36913   0184FE  1006               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 36914   018500  1007               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 36915   018502  1008               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 36916   018504  A4D8               	btfss	status,2,c
 36917   018506  D002               	goto	u9510
 36918   018508  0E01               	movlw	1
 36919   01850A  D001               	goto	u9520
 36920   01850C                     u9510:
 36921   01850C  0E00               	movlw	0
 36922   01850E                     u9520:
 36923   01850E  6E01               	movwf	?___fpclassifyf^(0+1280),c
 36924   018510  6A02               	clrf	(?___fpclassifyf+1)^(0+1280),c
 36925   018512  0012               	return	
 36926   018514                     l8579:
 36927   018514  0E00               	movlw	0
 36928   018516  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 36929   018518  0E04               	movlw	4
 36930   01851A  6E01               	movwf	?___fpclassifyf^(0+1280),c
 36931   01851C  0012               	return		;funcret
 36932   01851E                     __end_of___fpclassifyf:
 36933                           	callstack 0
 36934                           
 36935 ;; *************** function ___fltol *****************
 36936 ;; Defined at:
 36937 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
 36938 ;; Parameters:    Size  Location     Type
 36939 ;;  f1              4    0[COMRAM] int 
 36940 ;; Auto vars:     Size  Location     Type
 36941 ;;  exp1            1    9[COMRAM] unsigned char 
 36942 ;;  sign1           1    8[COMRAM] unsigned char 
 36943 ;; Return value:  Size  Location     Type
 36944 ;;                  4    0[COMRAM] long 
 36945 ;; Registers used:
 36946 ;;		wreg, status,2, status,0
 36947 ;; Tracked objects:
 36948 ;;		On entry : 0/5
 36949 ;;		On exit  : 0/0
 36950 ;;		Unchanged: 0/0
 36951 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36952 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36953 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36954 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36955 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36956 ;;Total ram usage:       10 bytes
 36957 ;; Hardware stack levels used: 1
 36958 ;; This function calls:
 36959 ;;		Nothing
 36960 ;; This function is called by:
 36961 ;;		_efgtoa
 36962 ;; This function uses a non-reentrant model
 36963 ;;
 36964                           
 36965                           	psect	text89
 36966   0188F0                     __ptext89:
 36967                           	callstack 0
 36968   0188F0                     ___fltol:
 36969                           	callstack 121
 36970                           
 36971                           ;incstack = 0
 36972   0188F0  3403               	rlcf	(___fltol@f1+2)^(0+1280),w,c
 36973   0188F2  3404               	rlcf	(___fltol@f1+3)^(0+1280),w,c
 36974   0188F4  6E0A               	movwf	___fltol@exp1^(0+1280),c
 36975   0188F6  500A               	movf	___fltol@exp1^(0+1280),w,c
 36976   0188F8  A4D8               	btfss	status,2,c
 36977   0188FA  D009               	goto	l8503
 36978   0188FC                     u9340:
 36979   0188FC  0E00               	movlw	0
 36980   0188FE  6E01               	movwf	?___fltol^(0+1280),c
 36981   018900  0E00               	movlw	0
 36982   018902  6E02               	movwf	(?___fltol+1)^(0+1280),c
 36983   018904  0E00               	movlw	0
 36984   018906  6E03               	movwf	(?___fltol+2)^(0+1280),c
 36985   018908  0E00               	movlw	0
 36986   01890A  6E04               	movwf	(?___fltol+3)^(0+1280),c
 36987   01890C  0012               	return	
 36988   01890E                     l8503:
 36989   01890E  C501  F505         	movff	___fltol@f1,??___fltol
 36990   018912  C502  F506         	movff	___fltol@f1+1,??___fltol+1
 36991   018916  C503  F507         	movff	___fltol@f1+2,??___fltol+2
 36992   01891A  C504  F508         	movff	___fltol@f1+3,??___fltol+3
 36993   01891E  0E20               	movlw	32
 36994   018920  D005               	goto	u9350
 36995   018922                     u9355:
 36996   018922  90D8               	bcf	status,0,c
 36997   018924  3208               	rrcf	(??___fltol+3)^(0+1280),f,c
 36998   018926  3207               	rrcf	(??___fltol+2)^(0+1280),f,c
 36999   018928  3206               	rrcf	(??___fltol+1)^(0+1280),f,c
 37000   01892A  3205               	rrcf	??___fltol^(0+1280),f,c
 37001   01892C                     u9350:
 37002   01892C  2EE8               	decfsz	wreg,f,c
 37003   01892E  D7F9               	goto	u9355
 37004   018930  5005               	movf	??___fltol^(0+1280),w,c
 37005   018932  6E09               	movwf	___fltol@sign1^(0+1280),c
 37006   018934  8E03               	bsf	(___fltol@f1+2)^(0+1280),7,c
 37007   018936  0EFF               	movlw	255
 37008   018938  1601               	andwf	___fltol@f1^(0+1280),f,c
 37009   01893A  0EFF               	movlw	255
 37010   01893C  1602               	andwf	(___fltol@f1+1)^(0+1280),f,c
 37011   01893E  0EFF               	movlw	255
 37012   018940  1603               	andwf	(___fltol@f1+2)^(0+1280),f,c
 37013   018942  0E00               	movlw	0
 37014   018944  1604               	andwf	(___fltol@f1+3)^(0+1280),f,c
 37015   018946  0E96               	movlw	150
 37016   018948  5E0A               	subwf	___fltol@exp1^(0+1280),f,c
 37017   01894A  AE0A               	btfss	___fltol@exp1^(0+1280),7,c
 37018   01894C  D00D               	goto	l8523
 37019   01894E  500A               	movf	___fltol@exp1^(0+1280),w,c
 37020   018950  0A80               	xorlw	128
 37021   018952  0F97               	addlw	151
 37022   018954  A0D8               	btfss	status,0,c
 37023   018956  D7D2               	goto	u9340
 37024   018958                     l8519:
 37025   018958  90D8               	bcf	status,0,c
 37026   01895A  3204               	rrcf	(___fltol@f1+3)^(0+1280),f,c
 37027   01895C  3203               	rrcf	(___fltol@f1+2)^(0+1280),f,c
 37028   01895E  3202               	rrcf	(___fltol@f1+1)^(0+1280),f,c
 37029   018960  3201               	rrcf	___fltol@f1^(0+1280),f,c
 37030   018962  3E0A               	incfsz	___fltol@exp1^(0+1280),f,c
 37031   018964  D7F9               	goto	l8519
 37032   018966  D00D               	goto	u9390
 37033   018968                     l8523:
 37034   018968  0E1F               	movlw	31
 37035   01896A  640A               	cpfsgt	___fltol@exp1^(0+1280),c
 37036   01896C  D007               	goto	l8531
 37037   01896E  D7C6               	goto	u9340
 37038   018970                     l8529:
 37039   018970  90D8               	bcf	status,0,c
 37040   018972  3601               	rlcf	___fltol@f1^(0+1280),f,c
 37041   018974  3602               	rlcf	(___fltol@f1+1)^(0+1280),f,c
 37042   018976  3603               	rlcf	(___fltol@f1+2)^(0+1280),f,c
 37043   018978  3604               	rlcf	(___fltol@f1+3)^(0+1280),f,c
 37044   01897A  060A               	decf	___fltol@exp1^(0+1280),f,c
 37045   01897C                     l8531:
 37046   01897C  500A               	movf	___fltol@exp1^(0+1280),w,c
 37047   01897E  A4D8               	btfss	status,2,c
 37048   018980  D7F7               	goto	l8529
 37049   018982                     u9390:
 37050   018982  5009               	movf	___fltol@sign1^(0+1280),w,c
 37051   018984  B4D8               	btfsc	status,2,c
 37052   018986  D008               	goto	l8537
 37053   018988  1E04               	comf	(___fltol@f1+3)^(0+1280),f,c
 37054   01898A  1E03               	comf	(___fltol@f1+2)^(0+1280),f,c
 37055   01898C  1E02               	comf	(___fltol@f1+1)^(0+1280),f,c
 37056   01898E  6C01               	negf	___fltol@f1^(0+1280),c
 37057   018990  0E00               	movlw	0
 37058   018992  2202               	addwfc	(___fltol@f1+1)^(0+1280),f,c
 37059   018994  2203               	addwfc	(___fltol@f1+2)^(0+1280),f,c
 37060   018996  2204               	addwfc	(___fltol@f1+3)^(0+1280),f,c
 37061   018998                     l8537:
 37062   018998  C501  F501         	movff	___fltol@f1,?___fltol
 37063   01899C  C502  F502         	movff	___fltol@f1+1,?___fltol+1
 37064   0189A0  C503  F503         	movff	___fltol@f1+2,?___fltol+2
 37065   0189A4  C504  F504         	movff	___fltol@f1+3,?___fltol+3
 37066   0189A8  0012               	return		;funcret
 37067   0189AA                     __end_of___fltol:
 37068                           	callstack 0
 37069                           
 37070 ;; *************** function ___flsub *****************
 37071 ;; Defined at:
 37072 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 37073 ;; Parameters:    Size  Location     Type
 37074 ;;  b               4   25[COMRAM] long 
 37075 ;;  a               4   29[COMRAM] long 
 37076 ;; Auto vars:     Size  Location     Type
 37077 ;;		None
 37078 ;; Return value:  Size  Location     Type
 37079 ;;                  4   25[COMRAM] long 
 37080 ;; Registers used:
 37081 ;;		wreg, status,2, status,0, cstack
 37082 ;; Tracked objects:
 37083 ;;		On entry : 0/5
 37084 ;;		On exit  : 0/0
 37085 ;;		Unchanged: 0/0
 37086 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37087 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37090 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37091 ;;Total ram usage:        8 bytes
 37092 ;; Hardware stack levels used: 1
 37093 ;; Hardware stack levels required when called: 1
 37094 ;; This function calls:
 37095 ;;		___fladd
 37096 ;; This function is called by:
 37097 ;;		_efgtoa
 37098 ;; This function uses a non-reentrant model
 37099 ;;
 37100                           
 37101                           	psect	text90
 37102   019AD0                     __ptext90:
 37103                           	callstack 0
 37104   019AD0                     ___flsub:
 37105                           	callstack 120
 37106                           
 37107                           ;incstack = 0
 37108   019AD0  0E00               	movlw	0
 37109   019AD2  1A1E               	xorwf	___flsub@a^(0+1280),f,c
 37110   019AD4  0E00               	movlw	0
 37111   019AD6  1A1F               	xorwf	(___flsub@a+1)^(0+1280),f,c
 37112   019AD8  0E00               	movlw	0
 37113   019ADA  1A20               	xorwf	(___flsub@a+2)^(0+1280),f,c
 37114   019ADC  0E80               	movlw	128
 37115   019ADE  1A21               	xorwf	(___flsub@a+3)^(0+1280),f,c
 37116   019AE0  C51A  F501         	movff	___flsub@b,___fladd@b
 37117   019AE4  C51B  F502         	movff	___flsub@b+1,___fladd@b+1
 37118   019AE8  C51C  F503         	movff	___flsub@b+2,___fladd@b+2
 37119   019AEC  C51D  F504         	movff	___flsub@b+3,___fladd@b+3
 37120   019AF0  C51E  F505         	movff	___flsub@a,___fladd@a
 37121   019AF4  C51F  F506         	movff	___flsub@a+1,___fladd@a+1
 37122   019AF8  C520  F507         	movff	___flsub@a+2,___fladd@a+2
 37123   019AFC  C521  F508         	movff	___flsub@a+3,___fladd@a+3
 37124   019B00  ECAB  F0A3         	call	___fladd	;wreg free
 37125   019B04  C501  F51A         	movff	?___fladd,?___flsub
 37126   019B08  C502  F51B         	movff	?___fladd+1,?___flsub+1
 37127   019B0C  C503  F51C         	movff	?___fladd+2,?___flsub+2
 37128   019B10  C504  F51D         	movff	?___fladd+3,?___flsub+3
 37129   019B14  0012               	return		;funcret
 37130   019B16                     __end_of___flsub:
 37131                           	callstack 0
 37132                           
 37133 ;; *************** function ___fladd *****************
 37134 ;; Defined at:
 37135 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 37136 ;; Parameters:    Size  Location     Type
 37137 ;;  b               4    0[COMRAM] long 
 37138 ;;  a               4    4[COMRAM] long 
 37139 ;; Auto vars:     Size  Location     Type
 37140 ;;  grs             1   15[COMRAM] unsigned char 
 37141 ;;  bexp            1   14[COMRAM] unsigned char 
 37142 ;;  aexp            1   13[COMRAM] unsigned char 
 37143 ;;  signs           1   12[COMRAM] unsigned char 
 37144 ;; Return value:  Size  Location     Type
 37145 ;;                  4    0[COMRAM] unsigned char 
 37146 ;; Registers used:
 37147 ;;		wreg, status,2, status,0
 37148 ;; Tracked objects:
 37149 ;;		On entry : 0/5
 37150 ;;		On exit  : 0/0
 37151 ;;		Unchanged: 0/0
 37152 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37153 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37154 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37155 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37156 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37157 ;;Total ram usage:       16 bytes
 37158 ;; Hardware stack levels used: 1
 37159 ;; This function calls:
 37160 ;;		Nothing
 37161 ;; This function is called by:
 37162 ;;		___flsub
 37163 ;;		_efgtoa
 37164 ;; This function uses a non-reentrant model
 37165 ;;
 37166                           
 37167                           	psect	text91
 37168   014756                     __ptext91:
 37169                           	callstack 0
 37170   014756                     ___fladd:
 37171                           	callstack 120
 37172                           
 37173                           ;incstack = 0
 37174   014756  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 37175   014758  0B80               	andlw	128
 37176   01475A  6E0D               	movwf	___fladd@signs^(0+1280),c
 37177   01475C  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 37178   01475E  2404               	addwf	(___fladd@b+3)^(0+1280),w,c
 37179   014760  6E0F               	movwf	___fladd@bexp^(0+1280),c
 37180   014762  BE03               	btfsc	(___fladd@b+2)^(0+1280),7,c
 37181   014764  800F               	bsf	___fladd@bexp^(0+1280),0,c
 37182   014766  500F               	movf	___fladd@bexp^(0+1280),w,c
 37183   014768  B4D8               	btfsc	status,2,c
 37184   01476A  D00D               	goto	l7881
 37185   01476C  280F               	incf	___fladd@bexp^(0+1280),w,c
 37186   01476E  A4D8               	btfss	status,2,c
 37187   014770  D008               	goto	l7877
 37188   014772  0E00               	movlw	0
 37189   014774  6E01               	movwf	___fladd@b^(0+1280),c
 37190   014776  0E00               	movlw	0
 37191   014778  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 37192   01477A  0E00               	movlw	0
 37193   01477C  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 37194   01477E  0E00               	movlw	0
 37195   014780  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37196   014782                     l7877:
 37197   014782  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
 37198   014784  D006               	goto	L27
 37199   014786                     l7881:
 37200   014786  0E00               	movlw	0
 37201   014788  6E01               	movwf	___fladd@b^(0+1280),c
 37202   01478A  0E00               	movlw	0
 37203   01478C  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 37204   01478E  0E00               	movlw	0
 37205   014790  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 37206   014792                     L27:
 37207   014792  0E00               	movlw	0
 37208   014794  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37209   014796  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 37210   014798  0B80               	andlw	128
 37211   01479A  6E0E               	movwf	___fladd@aexp^(0+1280),c
 37212   01479C  500D               	movf	___fladd@signs^(0+1280),w,c
 37213   01479E  180E               	xorwf	___fladd@aexp^(0+1280),w,c
 37214   0147A0  A4D8               	btfss	status,2,c
 37215   0147A2  8C0D               	bsf	___fladd@signs^(0+1280),6,c
 37216   0147A4  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 37217   0147A6  2408               	addwf	(___fladd@a+3)^(0+1280),w,c
 37218   0147A8  6E0E               	movwf	___fladd@aexp^(0+1280),c
 37219   0147AA  BE07               	btfsc	(___fladd@a+2)^(0+1280),7,c
 37220   0147AC  800E               	bsf	___fladd@aexp^(0+1280),0,c
 37221   0147AE  500E               	movf	___fladd@aexp^(0+1280),w,c
 37222   0147B0  B4D8               	btfsc	status,2,c
 37223   0147B2  D00D               	goto	l7905
 37224   0147B4  280E               	incf	___fladd@aexp^(0+1280),w,c
 37225   0147B6  A4D8               	btfss	status,2,c
 37226   0147B8  D008               	goto	l7901
 37227   0147BA  0E00               	movlw	0
 37228   0147BC  6E05               	movwf	___fladd@a^(0+1280),c
 37229   0147BE  0E00               	movlw	0
 37230   0147C0  6E06               	movwf	(___fladd@a+1)^(0+1280),c
 37231   0147C2  0E00               	movlw	0
 37232   0147C4  6E07               	movwf	(___fladd@a+2)^(0+1280),c
 37233   0147C6  0E00               	movlw	0
 37234   0147C8  6E08               	movwf	(___fladd@a+3)^(0+1280),c
 37235   0147CA                     l7901:
 37236   0147CA  8E07               	bsf	(___fladd@a+2)^(0+1280),7,c
 37237   0147CC  D006               	goto	L28
 37238   0147CE                     l7905:
 37239   0147CE  0E00               	movlw	0
 37240   0147D0  6E05               	movwf	___fladd@a^(0+1280),c
 37241   0147D2  0E00               	movlw	0
 37242   0147D4  6E06               	movwf	(___fladd@a+1)^(0+1280),c
 37243   0147D6  0E00               	movlw	0
 37244   0147D8  6E07               	movwf	(___fladd@a+2)^(0+1280),c
 37245   0147DA                     L28:
 37246   0147DA  0E00               	movlw	0
 37247   0147DC  6E08               	movwf	(___fladd@a+3)^(0+1280),c
 37248   0147DE  500F               	movf	___fladd@bexp^(0+1280),w,c
 37249   0147E0  5C0E               	subwf	___fladd@aexp^(0+1280),w,c
 37250   0147E2  B0D8               	btfsc	status,0,c
 37251   0147E4  D022               	goto	l7943
 37252   0147E6  AC0D               	btfss	___fladd@signs^(0+1280),6,c
 37253   0147E8  D002               	goto	l7913
 37254   0147EA  0E80               	movlw	128
 37255   0147EC  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
 37256   0147EE                     l7913:
 37257   0147EE  C50F  F510         	movff	___fladd@bexp,___fladd@grs
 37258   0147F2  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
 37259   0147F6  C510  F50E         	movff	___fladd@grs,___fladd@aexp
 37260   0147FA  C501  F510         	movff	___fladd@b,___fladd@grs
 37261   0147FE  C505  F501         	movff	___fladd@a,___fladd@b
 37262   014802  C510  F505         	movff	___fladd@grs,___fladd@a
 37263   014806  C502  F510         	movff	___fladd@b+1,___fladd@grs
 37264   01480A  C506  F502         	movff	___fladd@a+1,___fladd@b+1
 37265   01480E  C510  F506         	movff	___fladd@grs,___fladd@a+1
 37266   014812  C503  F510         	movff	___fladd@b+2,___fladd@grs
 37267   014816  C507  F503         	movff	___fladd@a+2,___fladd@b+2
 37268   01481A  C510  F507         	movff	___fladd@grs,___fladd@a+2
 37269   01481E  C504  F510         	movff	___fladd@b+3,___fladd@grs
 37270   014822  C508  F504         	movff	___fladd@a+3,___fladd@b+3
 37271   014826  C510  F508         	movff	___fladd@grs,___fladd@a+3
 37272   01482A                     l7943:
 37273   01482A  0E00               	movlw	0
 37274   01482C  6E10               	movwf	___fladd@grs^(0+1280),c
 37275   01482E  500F               	movf	___fladd@bexp^(0+1280),w,c
 37276   014830  C50E  F509         	movff	___fladd@aexp,??___fladd
 37277   014834  6A0A               	clrf	(??___fladd+1)^(0+1280),c
 37278   014836  5E09               	subwf	??___fladd^(0+1280),f,c
 37279   014838  0E00               	movlw	0
 37280   01483A  5A0A               	subwfb	(??___fladd+1)^(0+1280),f,c
 37281   01483C  BE0A               	btfsc	(??___fladd+1)^(0+1280),7,c
 37282   01483E  D02C               	goto	l2243
 37283   014840  500A               	movf	(??___fladd+1)^(0+1280),w,c
 37284   014842  E104               	bnz	u8390
 37285   014844  0E1A               	movlw	26
 37286   014846  5C09               	subwf	??___fladd^(0+1280),w,c
 37287   014848  A0D8               	btfss	status,0,c
 37288   01484A  D026               	goto	l2243
 37289   01484C                     u8390:
 37290   01484C  5001               	movf	___fladd@b^(0+1280),w,c
 37291   01484E  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
 37292   014850  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
 37293   014852  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
 37294   014854  B4D8               	btfsc	status,2,c
 37295   014856  D002               	goto	u8400
 37296   014858  0E01               	movlw	1
 37297   01485A  D001               	goto	u8410
 37298   01485C                     u8400:
 37299   01485C  0E00               	movlw	0
 37300   01485E                     u8410:
 37301   01485E  6E10               	movwf	___fladd@grs^(0+1280),c
 37302   014860  0E00               	movlw	0
 37303   014862  6E01               	movwf	___fladd@b^(0+1280),c
 37304   014864  0E00               	movlw	0
 37305   014866  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 37306   014868  0E00               	movlw	0
 37307   01486A  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 37308   01486C  0E00               	movlw	0
 37309   01486E  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37310   014870  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
 37311   014874  D015               	goto	u8440
 37312   014876                     l2244:
 37313   014876  A010               	btfss	___fladd@grs^(0+1280),0,c
 37314   014878  D005               	goto	l7955
 37315   01487A  90D8               	bcf	status,0,c
 37316   01487C  3010               	rrcf	___fladd@grs^(0+1280),w,c
 37317   01487E  0901               	iorlw	1
 37318   014880  6E10               	movwf	___fladd@grs^(0+1280),c
 37319   014882  D002               	goto	l7957
 37320   014884                     l7955:
 37321   014884  90D8               	bcf	status,0,c
 37322   014886  3210               	rrcf	___fladd@grs^(0+1280),f,c
 37323   014888                     l7957:
 37324   014888  B001               	btfsc	___fladd@b^(0+1280),0,c
 37325   01488A  8E10               	bsf	___fladd@grs^(0+1280),7,c
 37326   01488C  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
 37327   01488E  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
 37328   014890  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
 37329   014892  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
 37330   014894  3201               	rrcf	___fladd@b^(0+1280),f,c
 37331   014896  2A0F               	incf	___fladd@bexp^(0+1280),f,c
 37332   014898                     l2243:
 37333   014898  500E               	movf	___fladd@aexp^(0+1280),w,c
 37334   01489A  5C0F               	subwf	___fladd@bexp^(0+1280),w,c
 37335   01489C  A0D8               	btfss	status,0,c
 37336   01489E  D7EB               	goto	l2244
 37337   0148A0                     u8440:
 37338   0148A0  BC0D               	btfsc	___fladd@signs^(0+1280),6,c
 37339   0148A2  D028               	goto	l7989
 37340   0148A4  500F               	movf	___fladd@bexp^(0+1280),w,c
 37341   0148A6  A4D8               	btfss	status,2,c
 37342   0148A8  D009               	goto	l7971
 37343   0148AA  0E00               	movlw	0
 37344   0148AC  6E01               	movwf	?___fladd^(0+1280),c
 37345   0148AE  0E00               	movlw	0
 37346   0148B0  6E02               	movwf	(?___fladd+1)^(0+1280),c
 37347   0148B2  0E00               	movlw	0
 37348   0148B4  6E03               	movwf	(?___fladd+2)^(0+1280),c
 37349   0148B6  0E00               	movlw	0
 37350   0148B8  6E04               	movwf	(?___fladd+3)^(0+1280),c
 37351   0148BA  0012               	return	
 37352   0148BC                     l7971:
 37353   0148BC  5005               	movf	___fladd@a^(0+1280),w,c
 37354   0148BE  2601               	addwf	___fladd@b^(0+1280),f,c
 37355   0148C0  5006               	movf	(___fladd@a+1)^(0+1280),w,c
 37356   0148C2  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
 37357   0148C4  5007               	movf	(___fladd@a+2)^(0+1280),w,c
 37358   0148C6  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
 37359   0148C8  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 37360   0148CA  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
 37361   0148CC  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
 37362   0148CE  D071               	goto	u8570
 37363   0148D0  A010               	btfss	___fladd@grs^(0+1280),0,c
 37364   0148D2  D005               	goto	l7979
 37365   0148D4  90D8               	bcf	status,0,c
 37366   0148D6  3010               	rrcf	___fladd@grs^(0+1280),w,c
 37367   0148D8  0901               	iorlw	1
 37368   0148DA  6E10               	movwf	___fladd@grs^(0+1280),c
 37369   0148DC  D002               	goto	l7981
 37370   0148DE                     l7979:
 37371   0148DE  90D8               	bcf	status,0,c
 37372   0148E0  3210               	rrcf	___fladd@grs^(0+1280),f,c
 37373   0148E2                     l7981:
 37374   0148E2  B001               	btfsc	___fladd@b^(0+1280),0,c
 37375   0148E4  8E10               	bsf	___fladd@grs^(0+1280),7,c
 37376   0148E6  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
 37377   0148E8  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
 37378   0148EA  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
 37379   0148EC  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
 37380   0148EE  3201               	rrcf	___fladd@b^(0+1280),f,c
 37381   0148F0  2A0F               	incf	___fladd@bexp^(0+1280),f,c
 37382   0148F2  D05F               	goto	u8570
 37383   0148F4                     l7989:
 37384   0148F4  5005               	movf	___fladd@a^(0+1280),w,c
 37385   0148F6  5C01               	subwf	___fladd@b^(0+1280),w,c
 37386   0148F8  5006               	movf	(___fladd@a+1)^(0+1280),w,c
 37387   0148FA  5802               	subwfb	(___fladd@b+1)^(0+1280),w,c
 37388   0148FC  5007               	movf	(___fladd@a+2)^(0+1280),w,c
 37389   0148FE  5803               	subwfb	(___fladd@b+2)^(0+1280),w,c
 37390   014900  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 37391   014902  0A80               	xorlw	128
 37392   014904  6E09               	movwf	??___fladd^(0+1280),c
 37393   014906  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 37394   014908  0A80               	xorlw	128
 37395   01490A  5809               	subwfb	??___fladd^(0+1280),w,c
 37396   01490C  B0D8               	btfsc	status,0,c
 37397   01490E  D025               	goto	l7999
 37398   014910  5001               	movf	___fladd@b^(0+1280),w,c
 37399   014912  5C05               	subwf	___fladd@a^(0+1280),w,c
 37400   014914  6E09               	movwf	??___fladd^(0+1280),c
 37401   014916  5002               	movf	(___fladd@b+1)^(0+1280),w,c
 37402   014918  5806               	subwfb	(___fladd@a+1)^(0+1280),w,c
 37403   01491A  6E0A               	movwf	(??___fladd+1)^(0+1280),c
 37404   01491C  5003               	movf	(___fladd@b+2)^(0+1280),w,c
 37405   01491E  5807               	subwfb	(___fladd@a+2)^(0+1280),w,c
 37406   014920  6E0B               	movwf	(??___fladd+2)^(0+1280),c
 37407   014922  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 37408   014924  5808               	subwfb	(___fladd@a+3)^(0+1280),w,c
 37409   014926  6E0C               	movwf	(??___fladd+3)^(0+1280),c
 37410   014928  0EFF               	movlw	255
 37411   01492A  2409               	addwf	??___fladd^(0+1280),w,c
 37412   01492C  6E01               	movwf	___fladd@b^(0+1280),c
 37413   01492E  0EFF               	movlw	255
 37414   014930  200A               	addwfc	(??___fladd+1)^(0+1280),w,c
 37415   014932  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 37416   014934  0EFF               	movlw	255
 37417   014936  200B               	addwfc	(??___fladd+2)^(0+1280),w,c
 37418   014938  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 37419   01493A  0EFF               	movlw	255
 37420   01493C  200C               	addwfc	(??___fladd+3)^(0+1280),w,c
 37421   01493E  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37422   014940  0E80               	movlw	128
 37423   014942  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
 37424   014944  6C10               	negf	___fladd@grs^(0+1280),c
 37425   014946  5010               	movf	___fladd@grs^(0+1280),w,c
 37426   014948  A4D8               	btfss	status,2,c
 37427   01494A  D00F               	goto	l2259
 37428   01494C  0E01               	movlw	1
 37429   01494E  2601               	addwf	___fladd@b^(0+1280),f,c
 37430   014950  0E00               	movlw	0
 37431   014952  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
 37432   014954  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
 37433   014956  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
 37434   014958  D008               	goto	l2259
 37435   01495A                     l7999:
 37436   01495A  5005               	movf	___fladd@a^(0+1280),w,c
 37437   01495C  5E01               	subwf	___fladd@b^(0+1280),f,c
 37438   01495E  5006               	movf	(___fladd@a+1)^(0+1280),w,c
 37439   014960  5A02               	subwfb	(___fladd@b+1)^(0+1280),f,c
 37440   014962  5007               	movf	(___fladd@a+2)^(0+1280),w,c
 37441   014964  5A03               	subwfb	(___fladd@b+2)^(0+1280),f,c
 37442   014966  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 37443   014968  5A04               	subwfb	(___fladd@b+3)^(0+1280),f,c
 37444   01496A                     l2259:
 37445   01496A  5001               	movf	___fladd@b^(0+1280),w,c
 37446   01496C  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
 37447   01496E  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
 37448   014970  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
 37449   014972  A4D8               	btfss	status,2,c
 37450   014974  D01C               	goto	l8023
 37451   014976  5010               	movf	___fladd@grs^(0+1280),w,c
 37452   014978  A4D8               	btfss	status,2,c
 37453   01497A  D019               	goto	l8023
 37454   01497C  0E00               	movlw	0
 37455   01497E  6E01               	movwf	?___fladd^(0+1280),c
 37456   014980  0E00               	movlw	0
 37457   014982  6E02               	movwf	(?___fladd+1)^(0+1280),c
 37458   014984  0E00               	movlw	0
 37459   014986  6E03               	movwf	(?___fladd+2)^(0+1280),c
 37460   014988  0E00               	movlw	0
 37461   01498A  6E04               	movwf	(?___fladd+3)^(0+1280),c
 37462   01498C  0012               	return	
 37463   01498E                     l8007:
 37464   01498E  90D8               	bcf	status,0,c
 37465   014990  3601               	rlcf	___fladd@b^(0+1280),f,c
 37466   014992  3602               	rlcf	(___fladd@b+1)^(0+1280),f,c
 37467   014994  3603               	rlcf	(___fladd@b+2)^(0+1280),f,c
 37468   014996  3604               	rlcf	(___fladd@b+3)^(0+1280),f,c
 37469   014998  BE10               	btfsc	___fladd@grs^(0+1280),7,c
 37470   01499A  8001               	bsf	___fladd@b^(0+1280),0,c
 37471   01499C  A010               	btfss	___fladd@grs^(0+1280),0,c
 37472   01499E  D002               	goto	l8017
 37473   0149A0  80D8               	bsf	status,0,c
 37474   0149A2  D001               	goto	L29
 37475   0149A4                     l8017:
 37476   0149A4  90D8               	bcf	status,0,c
 37477   0149A6                     L29:
 37478   0149A6  3610               	rlcf	___fladd@grs^(0+1280),f,c
 37479   0149A8  500F               	movf	___fladd@bexp^(0+1280),w,c
 37480   0149AA  A4D8               	btfss	status,2,c
 37481   0149AC  060F               	decf	___fladd@bexp^(0+1280),f,c
 37482   0149AE                     l8023:
 37483   0149AE  AE03               	btfss	(___fladd@b+2)^(0+1280),7,c
 37484   0149B0  D7EE               	goto	l8007
 37485   0149B2                     u8570:
 37486   0149B2  0E00               	movlw	0
 37487   0149B4  6E0E               	movwf	___fladd@aexp^(0+1280),c
 37488   0149B6  AE10               	btfss	___fladd@grs^(0+1280),7,c
 37489   0149B8  D00B               	goto	l2268
 37490   0149BA  C510  F509         	movff	___fladd@grs,??___fladd
 37491   0149BE  0E7F               	movlw	127
 37492   0149C0  1609               	andwf	??___fladd^(0+1280),f,c
 37493   0149C2  B4D8               	btfsc	status,2,c
 37494   0149C4  D003               	goto	l2269
 37495   0149C6                     u8590:
 37496   0149C6  0E01               	movlw	1
 37497   0149C8  6E0E               	movwf	___fladd@aexp^(0+1280),c
 37498   0149CA  D002               	goto	l2268
 37499   0149CC                     l2269:
 37500   0149CC  B001               	btfsc	___fladd@b^(0+1280),0,c
 37501   0149CE  D7FB               	goto	u8590
 37502   0149D0                     l2268:
 37503   0149D0  500E               	movf	___fladd@aexp^(0+1280),w,c
 37504   0149D2  B4D8               	btfsc	status,2,c
 37505   0149D4  D020               	goto	l8043
 37506   0149D6  0E01               	movlw	1
 37507   0149D8  2601               	addwf	___fladd@b^(0+1280),f,c
 37508   0149DA  0E00               	movlw	0
 37509   0149DC  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
 37510   0149DE  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
 37511   0149E0  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
 37512   0149E2  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
 37513   0149E4  D018               	goto	l8043
 37514   0149E6  C501  F509         	movff	___fladd@b,??___fladd
 37515   0149EA  C502  F50A         	movff	___fladd@b+1,??___fladd+1
 37516   0149EE  C503  F50B         	movff	___fladd@b+2,??___fladd+2
 37517   0149F2  C504  F50C         	movff	___fladd@b+3,??___fladd+3
 37518   0149F6  340C               	rlcf	(??___fladd+3)^(0+1280),w,c
 37519   0149F8  320C               	rrcf	(??___fladd+3)^(0+1280),f,c
 37520   0149FA  320B               	rrcf	(??___fladd+2)^(0+1280),f,c
 37521   0149FC  320A               	rrcf	(??___fladd+1)^(0+1280),f,c
 37522   0149FE  3209               	rrcf	??___fladd^(0+1280),f,c
 37523   014A00  C509  F501         	movff	??___fladd,___fladd@b
 37524   014A04  C50A  F502         	movff	??___fladd+1,___fladd@b+1
 37525   014A08  C50B  F503         	movff	??___fladd+2,___fladd@b+2
 37526   014A0C  C50C  F504         	movff	??___fladd+3,___fladd@b+3
 37527   014A10  280F               	incf	___fladd@bexp^(0+1280),w,c
 37528   014A12  A4D8               	btfss	status,2,c
 37529   014A14  2A0F               	incf	___fladd@bexp^(0+1280),f,c
 37530   014A16                     l8043:
 37531   014A16  280F               	incf	___fladd@bexp^(0+1280),w,c
 37532   014A18  B4D8               	btfsc	status,2,c
 37533   014A1A  D003               	goto	u8650
 37534   014A1C  500F               	movf	___fladd@bexp^(0+1280),w,c
 37535   014A1E  A4D8               	btfss	status,2,c
 37536   014A20  D00D               	goto	l8051
 37537   014A22                     u8650:
 37538   014A22  0E00               	movlw	0
 37539   014A24  6E01               	movwf	___fladd@b^(0+1280),c
 37540   014A26  0E00               	movlw	0
 37541   014A28  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 37542   014A2A  0E00               	movlw	0
 37543   014A2C  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 37544   014A2E  0E00               	movlw	0
 37545   014A30  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37546   014A32  500F               	movf	___fladd@bexp^(0+1280),w,c
 37547   014A34  A4D8               	btfss	status,2,c
 37548   014A36  D002               	goto	l8051
 37549   014A38  0E00               	movlw	0
 37550   014A3A  6E0D               	movwf	___fladd@signs^(0+1280),c
 37551   014A3C                     l8051:
 37552   014A3C  A00F               	btfss	___fladd@bexp^(0+1280),0,c
 37553   014A3E  D002               	goto	l8055
 37554   014A40  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
 37555   014A42  D001               	goto	l8057
 37556   014A44                     l8055:
 37557   014A44  9E03               	bcf	(___fladd@b+2)^(0+1280),7,c
 37558   014A46                     l8057:
 37559   014A46  90D8               	bcf	status,0,c
 37560   014A48  300F               	rrcf	___fladd@bexp^(0+1280),w,c
 37561   014A4A  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 37562   014A4C  BE0D               	btfsc	___fladd@signs^(0+1280),7,c
 37563   014A4E  8E04               	bsf	(___fladd@b+3)^(0+1280),7,c
 37564   014A50  C501  F501         	movff	___fladd@b,?___fladd
 37565   014A54  C502  F502         	movff	___fladd@b+1,?___fladd+1
 37566   014A58  C503  F503         	movff	___fladd@b+2,?___fladd+2
 37567   014A5C  C504  F504         	movff	___fladd@b+3,?___fladd+3
 37568   014A60  0012               	return		;funcret
 37569   014A62                     __end_of___fladd:
 37570                           	callstack 0
 37571                           
 37572 ;; *************** function ___flneg *****************
 37573 ;; Defined at:
 37574 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
 37575 ;; Parameters:    Size  Location     Type
 37576 ;;  f1              4    0[COMRAM] unsigned char 
 37577 ;; Auto vars:     Size  Location     Type
 37578 ;;		None
 37579 ;; Return value:  Size  Location     Type
 37580 ;;                  4    0[COMRAM] unsigned char 
 37581 ;; Registers used:
 37582 ;;		wreg, status,2, status,0
 37583 ;; Tracked objects:
 37584 ;;		On entry : 3F/5
 37585 ;;		On exit  : 3F/5
 37586 ;;		Unchanged: 3E/0
 37587 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37591 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37592 ;;Total ram usage:        4 bytes
 37593 ;; Hardware stack levels used: 1
 37594 ;; This function calls:
 37595 ;;		Nothing
 37596 ;; This function is called by:
 37597 ;;		_efgtoa
 37598 ;; This function uses a non-reentrant model
 37599 ;;
 37600                           
 37601                           	psect	text92
 37602   019DA0                     __ptext92:
 37603                           	callstack 0
 37604   019DA0                     ___flneg:
 37605                           	callstack 121
 37606                           
 37607                           ; BSR set to: 5
 37608                           
 37609                           ;incstack = 0
 37610   019DA0  5001               	movf	___flneg@f1^(0+1280),w,c
 37611   019DA2  1002               	iorwf	(___flneg@f1+1)^(0+1280),w,c
 37612   019DA4  1003               	iorwf	(___flneg@f1+2)^(0+1280),w,c
 37613   019DA6  1004               	iorwf	(___flneg@f1+3)^(0+1280),w,c
 37614   019DA8  B4D8               	btfsc	status,2,c
 37615   019DAA  D008               	goto	l8493
 37616                           
 37617                           ; BSR set to: 5
 37618   019DAC  0E00               	movlw	0
 37619   019DAE  1A01               	xorwf	___flneg@f1^(0+1280),f,c
 37620   019DB0  0E00               	movlw	0
 37621   019DB2  1A02               	xorwf	(___flneg@f1+1)^(0+1280),f,c
 37622   019DB4  0E00               	movlw	0
 37623   019DB6  1A03               	xorwf	(___flneg@f1+2)^(0+1280),f,c
 37624   019DB8  0E80               	movlw	128
 37625   019DBA  1A04               	xorwf	(___flneg@f1+3)^(0+1280),f,c
 37626   019DBC                     l8493:
 37627                           
 37628                           ; BSR set to: 5
 37629   019DBC  C501  F501         	movff	___flneg@f1,?___flneg
 37630   019DC0  C502  F502         	movff	___flneg@f1+1,?___flneg+1
 37631   019DC4  C503  F503         	movff	___flneg@f1+2,?___flneg+2
 37632   019DC8  C504  F504         	movff	___flneg@f1+3,?___flneg+3
 37633                           
 37634                           ; BSR set to: 5
 37635   019DCC  0012               	return		;funcret
 37636   019DCE                     __end_of___flneg:
 37637                           	callstack 0
 37638                           
 37639 ;; *************** function ___flmul *****************
 37640 ;; Defined at:
 37641 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
 37642 ;; Parameters:    Size  Location     Type
 37643 ;;  b               4    0[COMRAM] unsigned char 
 37644 ;;  a               4    4[COMRAM] unsigned char 
 37645 ;; Auto vars:     Size  Location     Type
 37646 ;;  prod            4   19[COMRAM] struct .
 37647 ;;  grs             4   14[COMRAM] unsigned long 
 37648 ;;  temp            2   23[COMRAM] struct .
 37649 ;;  bexp            1   18[COMRAM] unsigned char 
 37650 ;;  aexp            1   13[COMRAM] unsigned char 
 37651 ;;  sign            1   12[COMRAM] unsigned char 
 37652 ;; Return value:  Size  Location     Type
 37653 ;;                  4    0[COMRAM] unsigned char 
 37654 ;; Registers used:
 37655 ;;		wreg, status,2, status,0, prodl, prodh
 37656 ;; Tracked objects:
 37657 ;;		On entry : 0/5
 37658 ;;		On exit  : 0/0
 37659 ;;		Unchanged: 0/0
 37660 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37661 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37662 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37663 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37664 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37665 ;;Total ram usage:       25 bytes
 37666 ;; Hardware stack levels used: 1
 37667 ;; This function calls:
 37668 ;;		Nothing
 37669 ;; This function is called by:
 37670 ;;		_efgtoa
 37671 ;; This function uses a non-reentrant model
 37672 ;;
 37673                           
 37674                           	psect	text93
 37675   01442A                     __ptext93:
 37676                           	callstack 0
 37677   01442A                     ___flmul:
 37678                           	callstack 121
 37679                           
 37680                           ; BSR set to: 5
 37681                           ;incstack = 0
 37682   01442A  5004               	movf	(___flmul@b+3)^(0+1280),w,c
 37683   01442C  0B80               	andlw	128
 37684   01442E  6E0D               	movwf	___flmul@sign^(0+1280),c
 37685   014430  5004               	movf	(___flmul@b+3)^(0+1280),w,c
 37686   014432  2404               	addwf	(___flmul@b+3)^(0+1280),w,c
 37687   014434  6E13               	movwf	___flmul@bexp^(0+1280),c
 37688   014436  BE03               	btfsc	(___flmul@b+2)^(0+1280),7,c
 37689   014438  8013               	bsf	___flmul@bexp^(0+1280),0,c
 37690   01443A  5013               	movf	___flmul@bexp^(0+1280),w,c
 37691   01443C  B4D8               	btfsc	status,2,c
 37692   01443E  D00D               	goto	l8329
 37693   014440  2813               	incf	___flmul@bexp^(0+1280),w,c
 37694   014442  A4D8               	btfss	status,2,c
 37695   014444  D008               	goto	l8327
 37696   014446  0E00               	movlw	0
 37697   014448  6E01               	movwf	___flmul@b^(0+1280),c
 37698   01444A  0E00               	movlw	0
 37699   01444C  6E02               	movwf	(___flmul@b+1)^(0+1280),c
 37700   01444E  0E00               	movlw	0
 37701   014450  6E03               	movwf	(___flmul@b+2)^(0+1280),c
 37702   014452  0E00               	movlw	0
 37703   014454  6E04               	movwf	(___flmul@b+3)^(0+1280),c
 37704   014456                     l8327:
 37705   014456  8E03               	bsf	(___flmul@b+2)^(0+1280),7,c
 37706   014458  D008               	goto	l8331
 37707   01445A                     l8329:
 37708   01445A  0E00               	movlw	0
 37709   01445C  6E01               	movwf	___flmul@b^(0+1280),c
 37710   01445E  0E00               	movlw	0
 37711   014460  6E02               	movwf	(___flmul@b+1)^(0+1280),c
 37712   014462  0E00               	movlw	0
 37713   014464  6E03               	movwf	(___flmul@b+2)^(0+1280),c
 37714   014466  0E00               	movlw	0
 37715   014468  6E04               	movwf	(___flmul@b+3)^(0+1280),c
 37716   01446A                     l8331:
 37717   01446A  5008               	movf	(___flmul@a+3)^(0+1280),w,c
 37718   01446C  0B80               	andlw	128
 37719   01446E  1A0D               	xorwf	___flmul@sign^(0+1280),f,c
 37720   014470  5008               	movf	(___flmul@a+3)^(0+1280),w,c
 37721   014472  2408               	addwf	(___flmul@a+3)^(0+1280),w,c
 37722   014474  6E0E               	movwf	___flmul@aexp^(0+1280),c
 37723   014476  BE07               	btfsc	(___flmul@a+2)^(0+1280),7,c
 37724   014478  800E               	bsf	___flmul@aexp^(0+1280),0,c
 37725   01447A  500E               	movf	___flmul@aexp^(0+1280),w,c
 37726   01447C  B4D8               	btfsc	status,2,c
 37727   01447E  D00D               	goto	l8347
 37728   014480  280E               	incf	___flmul@aexp^(0+1280),w,c
 37729   014482  A4D8               	btfss	status,2,c
 37730   014484  D008               	goto	l8345
 37731   014486  0E00               	movlw	0
 37732   014488  6E05               	movwf	___flmul@a^(0+1280),c
 37733   01448A  0E00               	movlw	0
 37734   01448C  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 37735   01448E  0E00               	movlw	0
 37736   014490  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 37737   014492  0E00               	movlw	0
 37738   014494  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 37739   014496                     l8345:
 37740   014496  8E07               	bsf	(___flmul@a+2)^(0+1280),7,c
 37741   014498  D008               	goto	l2328
 37742   01449A                     l8347:
 37743   01449A  0E00               	movlw	0
 37744   01449C  6E05               	movwf	___flmul@a^(0+1280),c
 37745   01449E  0E00               	movlw	0
 37746   0144A0  6E06               	movwf	(___flmul@a+1)^(0+1280),c
 37747   0144A2  0E00               	movlw	0
 37748   0144A4  6E07               	movwf	(___flmul@a+2)^(0+1280),c
 37749   0144A6  0E00               	movlw	0
 37750   0144A8  6E08               	movwf	(___flmul@a+3)^(0+1280),c
 37751   0144AA                     l2328:
 37752   0144AA  500E               	movf	___flmul@aexp^(0+1280),w,c
 37753   0144AC  B4D8               	btfsc	status,2,c
 37754   0144AE  D003               	goto	u9140
 37755   0144B0  5013               	movf	___flmul@bexp^(0+1280),w,c
 37756   0144B2  A4D8               	btfss	status,2,c
 37757   0144B4  D009               	goto	l8355
 37758   0144B6                     u9140:
 37759   0144B6  0E00               	movlw	0
 37760   0144B8  6E01               	movwf	?___flmul^(0+1280),c
 37761   0144BA  0E00               	movlw	0
 37762   0144BC  6E02               	movwf	(?___flmul+1)^(0+1280),c
 37763   0144BE  0E00               	movlw	0
 37764   0144C0  6E03               	movwf	(?___flmul+2)^(0+1280),c
 37765   0144C2  0E00               	movlw	0
 37766   0144C4  6E04               	movwf	(?___flmul+3)^(0+1280),c
 37767   0144C6  0012               	return	
 37768   0144C8                     l8355:
 37769   0144C8  5007               	movf	(___flmul@a+2)^(0+1280),w,c
 37770   0144CA  0201               	mulwf	___flmul@b^(0+1280),c
 37771   0144CC  C4F3 F518          	movff	prodl,___flmul@temp
 37772   0144D0  C4F4 F519          	movff	prodh,___flmul@temp+1
 37773   0144D4  5018               	movf	___flmul@temp^(0+1280),w,c
 37774   0144D6  6E0F               	movwf	___flmul@grs^(0+1280),c
 37775   0144D8  6A10               	clrf	(___flmul@grs+1)^(0+1280),c
 37776   0144DA  6A11               	clrf	(___flmul@grs+2)^(0+1280),c
 37777   0144DC  6A12               	clrf	(___flmul@grs+3)^(0+1280),c
 37778   0144DE  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37779   0144E0  6E14               	movwf	___flmul@prod^(0+1280),c
 37780   0144E2  6A15               	clrf	(___flmul@prod+1)^(0+1280),c
 37781   0144E4  6A16               	clrf	(___flmul@prod+2)^(0+1280),c
 37782   0144E6  6A17               	clrf	(___flmul@prod+3)^(0+1280),c
 37783   0144E8  5006               	movf	(___flmul@a+1)^(0+1280),w,c
 37784   0144EA  0202               	mulwf	(___flmul@b+1)^(0+1280),c
 37785   0144EC  C4F3 F518          	movff	prodl,___flmul@temp
 37786   0144F0  C4F4 F519          	movff	prodh,___flmul@temp+1
 37787   0144F4  5018               	movf	___flmul@temp^(0+1280),w,c
 37788   0144F6  260F               	addwf	___flmul@grs^(0+1280),f,c
 37789   0144F8  0E00               	movlw	0
 37790   0144FA  2210               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 37791   0144FC  2211               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 37792   0144FE  2212               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 37793   014500  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37794   014502  2614               	addwf	___flmul@prod^(0+1280),f,c
 37795   014504  0E00               	movlw	0
 37796   014506  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37797   014508  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37798   01450A  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37799   01450C  5005               	movf	___flmul@a^(0+1280),w,c
 37800   01450E  0203               	mulwf	(___flmul@b+2)^(0+1280),c
 37801   014510  C4F3 F518          	movff	prodl,___flmul@temp
 37802   014514  C4F4 F519          	movff	prodh,___flmul@temp+1
 37803   014518  5018               	movf	___flmul@temp^(0+1280),w,c
 37804   01451A  260F               	addwf	___flmul@grs^(0+1280),f,c
 37805   01451C  0E00               	movlw	0
 37806   01451E  2210               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 37807   014520  2211               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 37808   014522  2212               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 37809   014524  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37810   014526  2614               	addwf	___flmul@prod^(0+1280),f,c
 37811   014528  0E00               	movlw	0
 37812   01452A  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37813   01452C  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37814   01452E  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37815   014530  C511  F512         	movff	___flmul@grs+2,___flmul@grs+3
 37816   014534  C510  F511         	movff	___flmul@grs+1,___flmul@grs+2
 37817   014538  C50F  F510         	movff	___flmul@grs,___flmul@grs+1
 37818   01453C  6A0F               	clrf	___flmul@grs^(0+1280),c
 37819   01453E  5005               	movf	___flmul@a^(0+1280),w,c
 37820   014540  0202               	mulwf	(___flmul@b+1)^(0+1280),c
 37821   014542  C4F3 F518          	movff	prodl,___flmul@temp
 37822   014546  C4F4 F519          	movff	prodh,___flmul@temp+1
 37823   01454A  5018               	movf	___flmul@temp^(0+1280),w,c
 37824   01454C  260F               	addwf	___flmul@grs^(0+1280),f,c
 37825   01454E  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37826   014550  2210               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 37827   014552  0E00               	movlw	0
 37828   014554  2211               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 37829   014556  0E00               	movlw	0
 37830   014558  2212               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 37831   01455A  5006               	movf	(___flmul@a+1)^(0+1280),w,c
 37832   01455C  0201               	mulwf	___flmul@b^(0+1280),c
 37833   01455E  C4F3 F518          	movff	prodl,___flmul@temp
 37834   014562  C4F4 F519          	movff	prodh,___flmul@temp+1
 37835   014566  5018               	movf	___flmul@temp^(0+1280),w,c
 37836   014568  260F               	addwf	___flmul@grs^(0+1280),f,c
 37837   01456A  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37838   01456C  2210               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 37839   01456E  0E00               	movlw	0
 37840   014570  2211               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 37841   014572  0E00               	movlw	0
 37842   014574  2212               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 37843   014576  C511  F512         	movff	___flmul@grs+2,___flmul@grs+3
 37844   01457A  C510  F511         	movff	___flmul@grs+1,___flmul@grs+2
 37845   01457E  C50F  F510         	movff	___flmul@grs,___flmul@grs+1
 37846   014582  6A0F               	clrf	___flmul@grs^(0+1280),c
 37847   014584  5005               	movf	___flmul@a^(0+1280),w,c
 37848   014586  0201               	mulwf	___flmul@b^(0+1280),c
 37849   014588  C4F3 F518          	movff	prodl,___flmul@temp
 37850   01458C  C4F4 F519          	movff	prodh,___flmul@temp+1
 37851   014590  5018               	movf	___flmul@temp^(0+1280),w,c
 37852   014592  260F               	addwf	___flmul@grs^(0+1280),f,c
 37853   014594  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37854   014596  2210               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 37855   014598  0E00               	movlw	0
 37856   01459A  2211               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 37857   01459C  0E00               	movlw	0
 37858   01459E  2212               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 37859   0145A0  5007               	movf	(___flmul@a+2)^(0+1280),w,c
 37860   0145A2  0202               	mulwf	(___flmul@b+1)^(0+1280),c
 37861   0145A4  C4F3 F518          	movff	prodl,___flmul@temp
 37862   0145A8  C4F4 F519          	movff	prodh,___flmul@temp+1
 37863   0145AC  5018               	movf	___flmul@temp^(0+1280),w,c
 37864   0145AE  2614               	addwf	___flmul@prod^(0+1280),f,c
 37865   0145B0  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37866   0145B2  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37867   0145B4  0E00               	movlw	0
 37868   0145B6  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37869   0145B8  0E00               	movlw	0
 37870   0145BA  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37871   0145BC  5006               	movf	(___flmul@a+1)^(0+1280),w,c
 37872   0145BE  0203               	mulwf	(___flmul@b+2)^(0+1280),c
 37873   0145C0  C4F3 F518          	movff	prodl,___flmul@temp
 37874   0145C4  C4F4 F519          	movff	prodh,___flmul@temp+1
 37875   0145C8  5018               	movf	___flmul@temp^(0+1280),w,c
 37876   0145CA  2614               	addwf	___flmul@prod^(0+1280),f,c
 37877   0145CC  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37878   0145CE  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37879   0145D0  0E00               	movlw	0
 37880   0145D2  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37881   0145D4  0E00               	movlw	0
 37882   0145D6  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37883   0145D8  5007               	movf	(___flmul@a+2)^(0+1280),w,c
 37884   0145DA  0203               	mulwf	(___flmul@b+2)^(0+1280),c
 37885   0145DC  C4F3 F518          	movff	prodl,___flmul@temp
 37886   0145E0  C4F4 F519          	movff	prodh,___flmul@temp+1
 37887   0145E4  5018               	movf	___flmul@temp^(0+1280),w,c
 37888   0145E6  6E09               	movwf	??___flmul^(0+1280),c
 37889   0145E8  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 37890   0145EA  6E0A               	movwf	(??___flmul+1)^(0+1280),c
 37891   0145EC  6A0B               	clrf	(??___flmul+2)^(0+1280),c
 37892   0145EE  6A0C               	clrf	(??___flmul+3)^(0+1280),c
 37893   0145F0  C50B  F50C         	movff	??___flmul+2,??___flmul+3
 37894   0145F4  C50A  F50B         	movff	??___flmul+1,??___flmul+2
 37895   0145F8  C509  F50A         	movff	??___flmul,??___flmul+1
 37896   0145FC  6A09               	clrf	??___flmul^(0+1280),c
 37897   0145FE  5009               	movf	??___flmul^(0+1280),w,c
 37898   014600  2614               	addwf	___flmul@prod^(0+1280),f,c
 37899   014602  500A               	movf	(??___flmul+1)^(0+1280),w,c
 37900   014604  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37901   014606  500B               	movf	(??___flmul+2)^(0+1280),w,c
 37902   014608  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37903   01460A  500C               	movf	(??___flmul+3)^(0+1280),w,c
 37904   01460C  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37905   01460E  5012               	movf	(___flmul@grs+3)^(0+1280),w,c
 37906   014610  2614               	addwf	___flmul@prod^(0+1280),f,c
 37907   014612  0E00               	movlw	0
 37908   014614  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37909   014616  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37910   014618  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37911   01461A  C511  F512         	movff	___flmul@grs+2,___flmul@grs+3
 37912   01461E  C510  F511         	movff	___flmul@grs+1,___flmul@grs+2
 37913   014622  C50F  F510         	movff	___flmul@grs,___flmul@grs+1
 37914   014626  6A0F               	clrf	___flmul@grs^(0+1280),c
 37915   014628  500E               	movf	___flmul@aexp^(0+1280),w,c
 37916   01462A  C513  F509         	movff	___flmul@bexp,??___flmul
 37917   01462E  6A0A               	clrf	(??___flmul+1)^(0+1280),c
 37918   014630  2609               	addwf	??___flmul^(0+1280),f,c
 37919   014632  0E00               	movlw	0
 37920   014634  220A               	addwfc	(??___flmul+1)^(0+1280),f,c
 37921   014636  0E82               	movlw	130
 37922   014638  2409               	addwf	??___flmul^(0+1280),w,c
 37923   01463A  6E18               	movwf	___flmul@temp^(0+1280),c
 37924   01463C  0EFF               	movlw	255
 37925   01463E  200A               	addwfc	(??___flmul+1)^(0+1280),w,c
 37926   014640  6E19               	movwf	(___flmul@temp+1)^(0+1280),c
 37927   014642  D00F               	goto	l8403
 37928   014644                     l8397:
 37929   014644  90D8               	bcf	status,0,c
 37930   014646  3614               	rlcf	___flmul@prod^(0+1280),f,c
 37931   014648  3615               	rlcf	(___flmul@prod+1)^(0+1280),f,c
 37932   01464A  3616               	rlcf	(___flmul@prod+2)^(0+1280),f,c
 37933   01464C  3617               	rlcf	(___flmul@prod+3)^(0+1280),f,c
 37934   01464E  BE12               	btfsc	(___flmul@grs+3)^(0+1280),7,c
 37935   014650  8014               	bsf	___flmul@prod^(0+1280),0,c
 37936   014652  90D8               	bcf	status,0,c
 37937   014654  360F               	rlcf	___flmul@grs^(0+1280),f,c
 37938   014656  3610               	rlcf	(___flmul@grs+1)^(0+1280),f,c
 37939   014658  3611               	rlcf	(___flmul@grs+2)^(0+1280),f,c
 37940   01465A  3612               	rlcf	(___flmul@grs+3)^(0+1280),f,c
 37941   01465C  0618               	decf	___flmul@temp^(0+1280),f,c
 37942   01465E  A0D8               	btfss	status,0,c
 37943   014660  0619               	decf	(___flmul@temp+1)^(0+1280),f,c
 37944   014662                     l8403:
 37945   014662  AE16               	btfss	(___flmul@prod+2)^(0+1280),7,c
 37946   014664  D7EF               	goto	l8397
 37947   014666  0E00               	movlw	0
 37948   014668  6E0E               	movwf	___flmul@aexp^(0+1280),c
 37949   01466A  AE12               	btfss	(___flmul@grs+3)^(0+1280),7,c
 37950   01466C  D017               	goto	l2337
 37951   01466E  0EFF               	movlw	255
 37952   014670  140F               	andwf	___flmul@grs^(0+1280),w,c
 37953   014672  6E09               	movwf	??___flmul^(0+1280),c
 37954   014674  0EFF               	movlw	255
 37955   014676  1410               	andwf	(___flmul@grs+1)^(0+1280),w,c
 37956   014678  6E0A               	movwf	(??___flmul+1)^(0+1280),c
 37957   01467A  0EFF               	movlw	255
 37958   01467C  1411               	andwf	(___flmul@grs+2)^(0+1280),w,c
 37959   01467E  6E0B               	movwf	(??___flmul+2)^(0+1280),c
 37960   014680  0E7F               	movlw	127
 37961   014682  1412               	andwf	(___flmul@grs+3)^(0+1280),w,c
 37962   014684  6E0C               	movwf	(??___flmul+3)^(0+1280),c
 37963   014686  5009               	movf	??___flmul^(0+1280),w,c
 37964   014688  100A               	iorwf	(??___flmul+1)^(0+1280),w,c
 37965   01468A  100B               	iorwf	(??___flmul+2)^(0+1280),w,c
 37966   01468C  100C               	iorwf	(??___flmul+3)^(0+1280),w,c
 37967   01468E  B4D8               	btfsc	status,2,c
 37968   014690  D003               	goto	l2338
 37969   014692                     u9180:
 37970   014692  0E01               	movlw	1
 37971   014694  6E0E               	movwf	___flmul@aexp^(0+1280),c
 37972   014696  D002               	goto	l2337
 37973   014698                     l2338:
 37974   014698  B014               	btfsc	___flmul@prod^(0+1280),0,c
 37975   01469A  D7FB               	goto	u9180
 37976   01469C                     l2337:
 37977   01469C  500E               	movf	___flmul@aexp^(0+1280),w,c
 37978   01469E  B4D8               	btfsc	status,2,c
 37979   0146A0  D01F               	goto	l8423
 37980   0146A2  0E01               	movlw	1
 37981   0146A4  2614               	addwf	___flmul@prod^(0+1280),f,c
 37982   0146A6  0E00               	movlw	0
 37983   0146A8  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 37984   0146AA  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 37985   0146AC  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 37986   0146AE  A017               	btfss	(___flmul@prod+3)^(0+1280),0,c
 37987   0146B0  D017               	goto	l8423
 37988   0146B2  C514  F509         	movff	___flmul@prod,??___flmul
 37989   0146B6  C515  F50A         	movff	___flmul@prod+1,??___flmul+1
 37990   0146BA  C516  F50B         	movff	___flmul@prod+2,??___flmul+2
 37991   0146BE  C517  F50C         	movff	___flmul@prod+3,??___flmul+3
 37992   0146C2  340C               	rlcf	(??___flmul+3)^(0+1280),w,c
 37993   0146C4  320C               	rrcf	(??___flmul+3)^(0+1280),f,c
 37994   0146C6  320B               	rrcf	(??___flmul+2)^(0+1280),f,c
 37995   0146C8  320A               	rrcf	(??___flmul+1)^(0+1280),f,c
 37996   0146CA  3209               	rrcf	??___flmul^(0+1280),f,c
 37997   0146CC  C509  F514         	movff	??___flmul,___flmul@prod
 37998   0146D0  C50A  F515         	movff	??___flmul+1,___flmul@prod+1
 37999   0146D4  C50B  F516         	movff	??___flmul+2,___flmul@prod+2
 38000   0146D8  C50C  F517         	movff	??___flmul+3,___flmul@prod+3
 38001   0146DC  4A18               	infsnz	___flmul@temp^(0+1280),f,c
 38002   0146DE  2A19               	incf	(___flmul@temp+1)^(0+1280),f,c
 38003   0146E0                     l8423:
 38004   0146E0  BE19               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 38005   0146E2  D00D               	goto	l8427
 38006   0146E4  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 38007   0146E6  E103               	bnz	u9220
 38008   0146E8  2818               	incf	___flmul@temp^(0+1280),w,c
 38009   0146EA  A0D8               	btfss	status,0,c
 38010   0146EC  D008               	goto	l8427
 38011   0146EE                     u9220:
 38012   0146EE  0E00               	movlw	0
 38013   0146F0  6E14               	movwf	___flmul@prod^(0+1280),c
 38014   0146F2  0E00               	movlw	0
 38015   0146F4  6E15               	movwf	(___flmul@prod+1)^(0+1280),c
 38016   0146F6  0E80               	movlw	128
 38017   0146F8  6E16               	movwf	(___flmul@prod+2)^(0+1280),c
 38018   0146FA  0E7F               	movlw	127
 38019   0146FC  D020               	goto	L30
 38020   0146FE                     l8427:
 38021   0146FE  BE19               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 38022   014700  D005               	goto	u9230
 38023   014702  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
 38024   014704  E10E               	bnz	l2345
 38025   014706  0418               	decf	___flmul@temp^(0+1280),w,c
 38026   014708  B0D8               	btfsc	status,0,c
 38027   01470A  D00B               	goto	l2345
 38028   01470C                     u9230:
 38029   01470C  0E00               	movlw	0
 38030   01470E  6E14               	movwf	___flmul@prod^(0+1280),c
 38031   014710  0E00               	movlw	0
 38032   014712  6E15               	movwf	(___flmul@prod+1)^(0+1280),c
 38033   014714  0E00               	movlw	0
 38034   014716  6E16               	movwf	(___flmul@prod+2)^(0+1280),c
 38035   014718  0E00               	movlw	0
 38036   01471A  6E17               	movwf	(___flmul@prod+3)^(0+1280),c
 38037   01471C  0E00               	movlw	0
 38038   01471E  6E0D               	movwf	___flmul@sign^(0+1280),c
 38039   014720  D00F               	goto	l8439
 38040   014722                     l2345:
 38041   014722  C518  F513         	movff	___flmul@temp,___flmul@bexp
 38042   014726  0EFF               	movlw	255
 38043   014728  1614               	andwf	___flmul@prod^(0+1280),f,c
 38044   01472A  0EFF               	movlw	255
 38045   01472C  1615               	andwf	(___flmul@prod+1)^(0+1280),f,c
 38046   01472E  0E7F               	movlw	127
 38047   014730  1616               	andwf	(___flmul@prod+2)^(0+1280),f,c
 38048   014732  0E00               	movlw	0
 38049   014734  1617               	andwf	(___flmul@prod+3)^(0+1280),f,c
 38050   014736  B013               	btfsc	___flmul@bexp^(0+1280),0,c
 38051   014738  8E16               	bsf	(___flmul@prod+2)^(0+1280),7,c
 38052   01473A  90D8               	bcf	status,0,c
 38053   01473C  3013               	rrcf	___flmul@bexp^(0+1280),w,c
 38054   01473E                     L30:
 38055   01473E  6E17               	movwf	(___flmul@prod+3)^(0+1280),c
 38056   014740                     l8439:
 38057   014740  500D               	movf	___flmul@sign^(0+1280),w,c
 38058   014742  1217               	iorwf	(___flmul@prod+3)^(0+1280),f,c
 38059   014744  C514  F501         	movff	___flmul@prod,?___flmul
 38060   014748  C515  F502         	movff	___flmul@prod+1,?___flmul+1
 38061   01474C  C516  F503         	movff	___flmul@prod+2,?___flmul+2
 38062   014750  C517  F504         	movff	___flmul@prod+3,?___flmul+3
 38063   014754  0012               	return		;funcret
 38064   014756                     __end_of___flmul:
 38065                           	callstack 0
 38066                           
 38067 ;; *************** function ___flge *****************
 38068 ;; Defined at:
 38069 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
 38070 ;; Parameters:    Size  Location     Type
 38071 ;;  ff1             4   25[COMRAM] unsigned char 
 38072 ;;  ff2             4   29[COMRAM] unsigned char 
 38073 ;; Auto vars:     Size  Location     Type
 38074 ;;		None
 38075 ;; Return value:  Size  Location     Type
 38076 ;;		None               void
 38077 ;; Registers used:
 38078 ;;		wreg, status,2, status,0
 38079 ;; Tracked objects:
 38080 ;;		On entry : 0/5
 38081 ;;		On exit  : 0/0
 38082 ;;		Unchanged: 0/0
 38083 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38084 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38086 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38087 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38088 ;;Total ram usage:       12 bytes
 38089 ;; Hardware stack levels used: 1
 38090 ;; This function calls:
 38091 ;;		Nothing
 38092 ;; This function is called by:
 38093 ;;		_efgtoa
 38094 ;; This function uses a non-reentrant model
 38095 ;;
 38096                           
 38097                           	psect	text94
 38098   0182B4                     __ptext94:
 38099                           	callstack 0
 38100   0182B4                     ___flge:
 38101                           	callstack 121
 38102                           
 38103                           ;incstack = 0
 38104   0182B4  0E00               	movlw	0
 38105   0182B6  141A               	andwf	___flge@ff1^(0+1280),w,c
 38106   0182B8  6E22               	movwf	??___flge^(0+1280),c
 38107   0182BA  0E00               	movlw	0
 38108   0182BC  141B               	andwf	(___flge@ff1+1)^(0+1280),w,c
 38109   0182BE  6E23               	movwf	(??___flge+1)^(0+1280),c
 38110   0182C0  0E80               	movlw	128
 38111   0182C2  141C               	andwf	(___flge@ff1+2)^(0+1280),w,c
 38112   0182C4  6E24               	movwf	(??___flge+2)^(0+1280),c
 38113   0182C6  0E7F               	movlw	127
 38114   0182C8  141D               	andwf	(___flge@ff1+3)^(0+1280),w,c
 38115   0182CA  6E25               	movwf	(??___flge+3)^(0+1280),c
 38116   0182CC  5022               	movf	??___flge^(0+1280),w,c
 38117   0182CE  1023               	iorwf	(??___flge+1)^(0+1280),w,c
 38118   0182D0  1024               	iorwf	(??___flge+2)^(0+1280),w,c
 38119   0182D2  1025               	iorwf	(??___flge+3)^(0+1280),w,c
 38120   0182D4  A4D8               	btfss	status,2,c
 38121   0182D6  D008               	goto	l8471
 38122   0182D8  0E00               	movlw	0
 38123   0182DA  6E1A               	movwf	___flge@ff1^(0+1280),c
 38124   0182DC  0E00               	movlw	0
 38125   0182DE  6E1B               	movwf	(___flge@ff1+1)^(0+1280),c
 38126   0182E0  0E00               	movlw	0
 38127   0182E2  6E1C               	movwf	(___flge@ff1+2)^(0+1280),c
 38128   0182E4  0E00               	movlw	0
 38129   0182E6  6E1D               	movwf	(___flge@ff1+3)^(0+1280),c
 38130   0182E8                     l8471:
 38131   0182E8  0E00               	movlw	0
 38132   0182EA  141E               	andwf	___flge@ff2^(0+1280),w,c
 38133   0182EC  6E22               	movwf	??___flge^(0+1280),c
 38134   0182EE  0E00               	movlw	0
 38135   0182F0  141F               	andwf	(___flge@ff2+1)^(0+1280),w,c
 38136   0182F2  6E23               	movwf	(??___flge+1)^(0+1280),c
 38137   0182F4  0E80               	movlw	128
 38138   0182F6  1420               	andwf	(___flge@ff2+2)^(0+1280),w,c
 38139   0182F8  6E24               	movwf	(??___flge+2)^(0+1280),c
 38140   0182FA  0E7F               	movlw	127
 38141   0182FC  1421               	andwf	(___flge@ff2+3)^(0+1280),w,c
 38142   0182FE  6E25               	movwf	(??___flge+3)^(0+1280),c
 38143   018300  5022               	movf	??___flge^(0+1280),w,c
 38144   018302  1023               	iorwf	(??___flge+1)^(0+1280),w,c
 38145   018304  1024               	iorwf	(??___flge+2)^(0+1280),w,c
 38146   018306  1025               	iorwf	(??___flge+3)^(0+1280),w,c
 38147   018308  A4D8               	btfss	status,2,c
 38148   01830A  D008               	goto	l8475
 38149   01830C  0E00               	movlw	0
 38150   01830E  6E1E               	movwf	___flge@ff2^(0+1280),c
 38151   018310  0E00               	movlw	0
 38152   018312  6E1F               	movwf	(___flge@ff2+1)^(0+1280),c
 38153   018314  0E00               	movlw	0
 38154   018316  6E20               	movwf	(___flge@ff2+2)^(0+1280),c
 38155   018318  0E00               	movlw	0
 38156   01831A  6E21               	movwf	(___flge@ff2+3)^(0+1280),c
 38157   01831C                     l8475:
 38158   01831C  AE1D               	btfss	(___flge@ff1+3)^(0+1280),7,c
 38159   01831E  D009               	goto	l8479
 38160   018320  6C1A               	negf	___flge@ff1^(0+1280),c
 38161   018322  1E1B               	comf	(___flge@ff1+1)^(0+1280),f,c
 38162   018324  B0D8               	btfsc	status,0,c
 38163   018326  2A1B               	incf	(___flge@ff1+1)^(0+1280),f,c
 38164   018328  1E1C               	comf	(___flge@ff1+2)^(0+1280),f,c
 38165   01832A  B0D8               	btfsc	status,0,c
 38166   01832C  2A1C               	incf	(___flge@ff1+2)^(0+1280),f,c
 38167   01832E  0E80               	movlw	128
 38168   018330  561D               	subfwb	(___flge@ff1+3)^(0+1280),f,c
 38169   018332                     l8479:
 38170   018332  AE21               	btfss	(___flge@ff2+3)^(0+1280),7,c
 38171   018334  D009               	goto	l1979
 38172   018336  6C1E               	negf	___flge@ff2^(0+1280),c
 38173   018338  1E1F               	comf	(___flge@ff2+1)^(0+1280),f,c
 38174   01833A  B0D8               	btfsc	status,0,c
 38175   01833C  2A1F               	incf	(___flge@ff2+1)^(0+1280),f,c
 38176   01833E  1E20               	comf	(___flge@ff2+2)^(0+1280),f,c
 38177   018340  B0D8               	btfsc	status,0,c
 38178   018342  2A20               	incf	(___flge@ff2+2)^(0+1280),f,c
 38179   018344  0E80               	movlw	128
 38180   018346  5621               	subfwb	(___flge@ff2+3)^(0+1280),f,c
 38181   018348                     l1979:
 38182   018348  0E00               	movlw	0
 38183   01834A  1A1A               	xorwf	___flge@ff1^(0+1280),f,c
 38184   01834C  0E00               	movlw	0
 38185   01834E  1A1B               	xorwf	(___flge@ff1+1)^(0+1280),f,c
 38186   018350  0E00               	movlw	0
 38187   018352  1A1C               	xorwf	(___flge@ff1+2)^(0+1280),f,c
 38188   018354  0E80               	movlw	128
 38189   018356  1A1D               	xorwf	(___flge@ff1+3)^(0+1280),f,c
 38190   018358  0E00               	movlw	0
 38191   01835A  1A1E               	xorwf	___flge@ff2^(0+1280),f,c
 38192   01835C  0E00               	movlw	0
 38193   01835E  1A1F               	xorwf	(___flge@ff2+1)^(0+1280),f,c
 38194   018360  0E00               	movlw	0
 38195   018362  1A20               	xorwf	(___flge@ff2+2)^(0+1280),f,c
 38196   018364  0E80               	movlw	128
 38197   018366  1A21               	xorwf	(___flge@ff2+3)^(0+1280),f,c
 38198   018368  501E               	movf	___flge@ff2^(0+1280),w,c
 38199   01836A  5C1A               	subwf	___flge@ff1^(0+1280),w,c
 38200   01836C  501F               	movf	(___flge@ff2+1)^(0+1280),w,c
 38201   01836E  581B               	subwfb	(___flge@ff1+1)^(0+1280),w,c
 38202   018370  5020               	movf	(___flge@ff2+2)^(0+1280),w,c
 38203   018372  581C               	subwfb	(___flge@ff1+2)^(0+1280),w,c
 38204   018374  5021               	movf	(___flge@ff2+3)^(0+1280),w,c
 38205   018376  581D               	subwfb	(___flge@ff1+3)^(0+1280),w,c
 38206   018378  B0D8               	btfsc	status,0,c
 38207   01837A  D002               	goto	l8485
 38208   01837C  90D8               	bcf	status,0,c
 38209   01837E  0012               	return	
 38210   018380                     l8485:
 38211   018380  80D8               	bsf	status,0,c
 38212   018382  0012               	return		;funcret
 38213   018384                     __end_of___flge:
 38214                           	callstack 0
 38215                           
 38216 ;; *************** function ___fleq *****************
 38217 ;; Defined at:
 38218 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
 38219 ;; Parameters:    Size  Location     Type
 38220 ;;  ff1             4    0[COMRAM] unsigned char 
 38221 ;;  ff2             4    4[COMRAM] unsigned char 
 38222 ;; Auto vars:     Size  Location     Type
 38223 ;;		None
 38224 ;; Return value:  Size  Location     Type
 38225 ;;		None               void
 38226 ;; Registers used:
 38227 ;;		wreg, status,2, status,0
 38228 ;; Tracked objects:
 38229 ;;		On entry : 0/5
 38230 ;;		On exit  : 0/0
 38231 ;;		Unchanged: 0/0
 38232 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38233 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38236 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38237 ;;Total ram usage:       12 bytes
 38238 ;; Hardware stack levels used: 1
 38239 ;; This function calls:
 38240 ;;		Nothing
 38241 ;; This function is called by:
 38242 ;;		_efgtoa
 38243 ;; This function uses a non-reentrant model
 38244 ;;
 38245                           
 38246                           	psect	text95
 38247   019194                     __ptext95:
 38248                           	callstack 0
 38249   019194                     ___fleq:
 38250                           	callstack 121
 38251                           
 38252                           ;incstack = 0
 38253   019194  0E00               	movlw	0
 38254   019196  1401               	andwf	___fleq@ff1^(0+1280),w,c
 38255   019198  6E09               	movwf	??___fleq^(0+1280),c
 38256   01919A  0E00               	movlw	0
 38257   01919C  1402               	andwf	(___fleq@ff1+1)^(0+1280),w,c
 38258   01919E  6E0A               	movwf	(??___fleq+1)^(0+1280),c
 38259   0191A0  0E80               	movlw	128
 38260   0191A2  1403               	andwf	(___fleq@ff1+2)^(0+1280),w,c
 38261   0191A4  6E0B               	movwf	(??___fleq+2)^(0+1280),c
 38262   0191A6  0E7F               	movlw	127
 38263   0191A8  1404               	andwf	(___fleq@ff1+3)^(0+1280),w,c
 38264   0191AA  6E0C               	movwf	(??___fleq+3)^(0+1280),c
 38265   0191AC  5009               	movf	??___fleq^(0+1280),w,c
 38266   0191AE  100A               	iorwf	(??___fleq+1)^(0+1280),w,c
 38267   0191B0  100B               	iorwf	(??___fleq+2)^(0+1280),w,c
 38268   0191B2  100C               	iorwf	(??___fleq+3)^(0+1280),w,c
 38269   0191B4  A4D8               	btfss	status,2,c
 38270   0191B6  D008               	goto	l8455
 38271   0191B8  0E00               	movlw	0
 38272   0191BA  6E01               	movwf	___fleq@ff1^(0+1280),c
 38273   0191BC  0E00               	movlw	0
 38274   0191BE  6E02               	movwf	(___fleq@ff1+1)^(0+1280),c
 38275   0191C0  0E00               	movlw	0
 38276   0191C2  6E03               	movwf	(___fleq@ff1+2)^(0+1280),c
 38277   0191C4  0E00               	movlw	0
 38278   0191C6  6E04               	movwf	(___fleq@ff1+3)^(0+1280),c
 38279   0191C8                     l8455:
 38280   0191C8  0E00               	movlw	0
 38281   0191CA  1405               	andwf	___fleq@ff2^(0+1280),w,c
 38282   0191CC  6E09               	movwf	??___fleq^(0+1280),c
 38283   0191CE  0E00               	movlw	0
 38284   0191D0  1406               	andwf	(___fleq@ff2+1)^(0+1280),w,c
 38285   0191D2  6E0A               	movwf	(??___fleq+1)^(0+1280),c
 38286   0191D4  0E80               	movlw	128
 38287   0191D6  1407               	andwf	(___fleq@ff2+2)^(0+1280),w,c
 38288   0191D8  6E0B               	movwf	(??___fleq+2)^(0+1280),c
 38289   0191DA  0E7F               	movlw	127
 38290   0191DC  1408               	andwf	(___fleq@ff2+3)^(0+1280),w,c
 38291   0191DE  6E0C               	movwf	(??___fleq+3)^(0+1280),c
 38292   0191E0  5009               	movf	??___fleq^(0+1280),w,c
 38293   0191E2  100A               	iorwf	(??___fleq+1)^(0+1280),w,c
 38294   0191E4  100B               	iorwf	(??___fleq+2)^(0+1280),w,c
 38295   0191E6  100C               	iorwf	(??___fleq+3)^(0+1280),w,c
 38296   0191E8  A4D8               	btfss	status,2,c
 38297   0191EA  D008               	goto	l8459
 38298   0191EC  0E00               	movlw	0
 38299   0191EE  6E05               	movwf	___fleq@ff2^(0+1280),c
 38300   0191F0  0E00               	movlw	0
 38301   0191F2  6E06               	movwf	(___fleq@ff2+1)^(0+1280),c
 38302   0191F4  0E00               	movlw	0
 38303   0191F6  6E07               	movwf	(___fleq@ff2+2)^(0+1280),c
 38304   0191F8  0E00               	movlw	0
 38305   0191FA  6E08               	movwf	(___fleq@ff2+3)^(0+1280),c
 38306   0191FC                     l8459:
 38307   0191FC  5005               	movf	___fleq@ff2^(0+1280),w,c
 38308   0191FE  1801               	xorwf	___fleq@ff1^(0+1280),w,c
 38309   019200  E10A               	bnz	u9270
 38310   019202  5006               	movf	(___fleq@ff2+1)^(0+1280),w,c
 38311   019204  1802               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
 38312   019206  E107               	bnz	u9270
 38313   019208  5007               	movf	(___fleq@ff2+2)^(0+1280),w,c
 38314   01920A  1803               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
 38315   01920C  E104               	bnz	u9270
 38316   01920E  5008               	movf	(___fleq@ff2+3)^(0+1280),w,c
 38317   019210  1804               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
 38318   019212  B4D8               	btfsc	status,2,c
 38319   019214  D002               	goto	l8463
 38320   019216                     u9270:
 38321   019216  90D8               	bcf	status,0,c
 38322   019218  0012               	return	
 38323   01921A                     l8463:
 38324   01921A  80D8               	bsf	status,0,c
 38325   01921C  0012               	return		;funcret
 38326   01921E                     __end_of___fleq:
 38327                           	callstack 0
 38328                           
 38329 ;; *************** function ___fldiv *****************
 38330 ;; Defined at:
 38331 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 38332 ;; Parameters:    Size  Location     Type
 38333 ;;  b               4   26[COMRAM] unsigned char 
 38334 ;;  a               4   30[COMRAM] unsigned char 
 38335 ;; Auto vars:     Size  Location     Type
 38336 ;;  grs             4   45[COMRAM] unsigned long 
 38337 ;;  rem             4   38[COMRAM] unsigned long 
 38338 ;;  new_exp         2   43[COMRAM] short 
 38339 ;;  aexp            1   50[COMRAM] unsigned char 
 38340 ;;  bexp            1   49[COMRAM] unsigned char 
 38341 ;;  sign            1   42[COMRAM] unsigned char 
 38342 ;; Return value:  Size  Location     Type
 38343 ;;                  4   26[COMRAM] unsigned char 
 38344 ;; Registers used:
 38345 ;;		wreg, status,2, status,0
 38346 ;; Tracked objects:
 38347 ;;		On entry : 0/4
 38348 ;;		On exit  : 0/0
 38349 ;;		Unchanged: 0/0
 38350 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38351 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38352 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38353 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38354 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38355 ;;Total ram usage:       25 bytes
 38356 ;; Hardware stack levels used: 1
 38357 ;; This function calls:
 38358 ;;		Nothing
 38359 ;; This function is called by:
 38360 ;;		_main
 38361 ;;		_efgtoa
 38362 ;; This function uses a non-reentrant model
 38363 ;;
 38364                           
 38365                           	psect	text96
 38366   0152C2                     __ptext96:
 38367                           	callstack 0
 38368   0152C2                     ___fldiv:
 38369                           	callstack 121
 38370                           
 38371                           ;incstack = 0
 38372   0152C2  501E               	movf	(___fldiv@b+3)^(0+1280),w,c
 38373   0152C4  0B80               	andlw	128
 38374   0152C6  6E2B               	movwf	___fldiv@sign^(0+1280),c
 38375   0152C8  501E               	movf	(___fldiv@b+3)^(0+1280),w,c
 38376   0152CA  241E               	addwf	(___fldiv@b+3)^(0+1280),w,c
 38377   0152CC  6E32               	movwf	___fldiv@bexp^(0+1280),c
 38378   0152CE  BE1D               	btfsc	(___fldiv@b+2)^(0+1280),7,c
 38379   0152D0  8032               	bsf	___fldiv@bexp^(0+1280),0,c
 38380   0152D2  5032               	movf	___fldiv@bexp^(0+1280),w,c
 38381   0152D4  B4D8               	btfsc	status,2,c
 38382   0152D6  D00D               	goto	l8193
 38383   0152D8  2832               	incf	___fldiv@bexp^(0+1280),w,c
 38384   0152DA  A4D8               	btfss	status,2,c
 38385   0152DC  D008               	goto	l8189
 38386   0152DE  0E00               	movlw	0
 38387   0152E0  6E1B               	movwf	___fldiv@b^(0+1280),c
 38388   0152E2  0E00               	movlw	0
 38389   0152E4  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38390   0152E6  0E00               	movlw	0
 38391   0152E8  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38392   0152EA  0E00               	movlw	0
 38393   0152EC  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38394   0152EE                     l8189:
 38395   0152EE  8E1D               	bsf	(___fldiv@b+2)^(0+1280),7,c
 38396   0152F0  D006               	goto	L31
 38397   0152F2                     l8193:
 38398   0152F2  0E00               	movlw	0
 38399   0152F4  6E1B               	movwf	___fldiv@b^(0+1280),c
 38400   0152F6  0E00               	movlw	0
 38401   0152F8  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38402   0152FA  0E00               	movlw	0
 38403   0152FC  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38404   0152FE                     L31:
 38405   0152FE  0E00               	movlw	0
 38406   015300  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38407   015302  5022               	movf	(___fldiv@a+3)^(0+1280),w,c
 38408   015304  0B80               	andlw	128
 38409   015306  1A2B               	xorwf	___fldiv@sign^(0+1280),f,c
 38410   015308  5022               	movf	(___fldiv@a+3)^(0+1280),w,c
 38411   01530A  2422               	addwf	(___fldiv@a+3)^(0+1280),w,c
 38412   01530C  6E33               	movwf	___fldiv@aexp^(0+1280),c
 38413   01530E  BE21               	btfsc	(___fldiv@a+2)^(0+1280),7,c
 38414   015310  8033               	bsf	___fldiv@aexp^(0+1280),0,c
 38415   015312  5033               	movf	___fldiv@aexp^(0+1280),w,c
 38416   015314  B4D8               	btfsc	status,2,c
 38417   015316  D00D               	goto	l8213
 38418   015318  2833               	incf	___fldiv@aexp^(0+1280),w,c
 38419   01531A  A4D8               	btfss	status,2,c
 38420   01531C  D008               	goto	l8209
 38421   01531E  0E00               	movlw	0
 38422   015320  6E1F               	movwf	___fldiv@a^(0+1280),c
 38423   015322  0E00               	movlw	0
 38424   015324  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 38425   015326  0E00               	movlw	0
 38426   015328  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 38427   01532A  0E00               	movlw	0
 38428   01532C  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 38429   01532E                     l8209:
 38430   01532E  8E21               	bsf	(___fldiv@a+2)^(0+1280),7,c
 38431   015330  D006               	goto	L32
 38432   015332                     l8213:
 38433   015332  0E00               	movlw	0
 38434   015334  6E1F               	movwf	___fldiv@a^(0+1280),c
 38435   015336  0E00               	movlw	0
 38436   015338  6E20               	movwf	(___fldiv@a+1)^(0+1280),c
 38437   01533A  0E00               	movlw	0
 38438   01533C  6E21               	movwf	(___fldiv@a+2)^(0+1280),c
 38439   01533E                     L32:
 38440   01533E  0E00               	movlw	0
 38441   015340  6E22               	movwf	(___fldiv@a+3)^(0+1280),c
 38442   015342  501F               	movf	___fldiv@a^(0+1280),w,c
 38443   015344  1020               	iorwf	(___fldiv@a+1)^(0+1280),w,c
 38444   015346  1021               	iorwf	(___fldiv@a+2)^(0+1280),w,c
 38445   015348  1022               	iorwf	(___fldiv@a+3)^(0+1280),w,c
 38446   01534A  A4D8               	btfss	status,2,c
 38447   01534C  D017               	goto	l8227
 38448   01534E  0E00               	movlw	0
 38449   015350  6E1B               	movwf	___fldiv@b^(0+1280),c
 38450   015352  0E00               	movlw	0
 38451   015354  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38452   015356  0E00               	movlw	0
 38453   015358  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38454   01535A  0E00               	movlw	0
 38455   01535C  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38456   01535E  0E80               	movlw	128
 38457   015360  121D               	iorwf	(___fldiv@b+2)^(0+1280),f,c
 38458   015362  0E7F               	movlw	127
 38459   015364  121E               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 38460   015366                     l8221:
 38461   015366  502B               	movf	___fldiv@sign^(0+1280),w,c
 38462   015368  121E               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 38463   01536A  C51B  F51B         	movff	___fldiv@b,?___fldiv
 38464   01536E  C51C  F51C         	movff	___fldiv@b+1,?___fldiv+1
 38465   015372  C51D  F51D         	movff	___fldiv@b+2,?___fldiv+2
 38466   015376  C51E  F51E         	movff	___fldiv@b+3,?___fldiv+3
 38467   01537A  0012               	return	
 38468   01537C                     l8227:
 38469   01537C  5032               	movf	___fldiv@bexp^(0+1280),w,c
 38470   01537E  A4D8               	btfss	status,2,c
 38471   015380  D009               	goto	l8235
 38472   015382  0E00               	movlw	0
 38473   015384  6E1B               	movwf	?___fldiv^(0+1280),c
 38474   015386  0E00               	movlw	0
 38475   015388  6E1C               	movwf	(?___fldiv+1)^(0+1280),c
 38476   01538A  0E00               	movlw	0
 38477   01538C  6E1D               	movwf	(?___fldiv+2)^(0+1280),c
 38478   01538E  0E00               	movlw	0
 38479   015390  6E1E               	movwf	(?___fldiv+3)^(0+1280),c
 38480   015392  0012               	return	
 38481   015394                     l8235:
 38482   015394  5033               	movf	___fldiv@aexp^(0+1280),w,c
 38483   015396  C532  F523         	movff	___fldiv@bexp,??___fldiv
 38484   01539A  6A24               	clrf	(??___fldiv+1)^(0+1280),c
 38485   01539C  5E23               	subwf	??___fldiv^(0+1280),f,c
 38486   01539E  0E00               	movlw	0
 38487   0153A0  5A24               	subwfb	(??___fldiv+1)^(0+1280),f,c
 38488   0153A2  0E7F               	movlw	127
 38489   0153A4  2423               	addwf	??___fldiv^(0+1280),w,c
 38490   0153A6  6E2C               	movwf	___fldiv@new_exp^(0+1280),c
 38491   0153A8  0E00               	movlw	0
 38492   0153AA  2024               	addwfc	(??___fldiv+1)^(0+1280),w,c
 38493   0153AC  6E2D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 38494   0153AE  C51B  F527         	movff	___fldiv@b,___fldiv@rem
 38495   0153B2  C51C  F528         	movff	___fldiv@b+1,___fldiv@rem+1
 38496   0153B6  C51D  F529         	movff	___fldiv@b+2,___fldiv@rem+2
 38497   0153BA  C51E  F52A         	movff	___fldiv@b+3,___fldiv@rem+3
 38498   0153BE  0E00               	movlw	0
 38499   0153C0  6E1B               	movwf	___fldiv@b^(0+1280),c
 38500   0153C2  0E00               	movlw	0
 38501   0153C4  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38502   0153C6  0E00               	movlw	0
 38503   0153C8  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38504   0153CA  0E00               	movlw	0
 38505   0153CC  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38506   0153CE  0E00               	movlw	0
 38507   0153D0  6E2E               	movwf	___fldiv@grs^(0+1280),c
 38508   0153D2  0E00               	movlw	0
 38509   0153D4  6E2F               	movwf	(___fldiv@grs+1)^(0+1280),c
 38510   0153D6  0E00               	movlw	0
 38511   0153D8  6E30               	movwf	(___fldiv@grs+2)^(0+1280),c
 38512   0153DA  0E00               	movlw	0
 38513   0153DC  6E31               	movwf	(___fldiv@grs+3)^(0+1280),c
 38514   0153DE  0E00               	movlw	0
 38515   0153E0  6E33               	movwf	___fldiv@aexp^(0+1280),c
 38516   0153E2  D028               	goto	l2298
 38517   0153E4                     l8245:
 38518   0153E4  5033               	movf	___fldiv@aexp^(0+1280),w,c
 38519   0153E6  B4D8               	btfsc	status,2,c
 38520   0153E8  D011               	goto	l8253
 38521   0153EA  90D8               	bcf	status,0,c
 38522   0153EC  3627               	rlcf	___fldiv@rem^(0+1280),f,c
 38523   0153EE  3628               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
 38524   0153F0  3629               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
 38525   0153F2  362A               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
 38526   0153F4  90D8               	bcf	status,0,c
 38527   0153F6  361B               	rlcf	___fldiv@b^(0+1280),f,c
 38528   0153F8  361C               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 38529   0153FA  361D               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 38530   0153FC  361E               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 38531   0153FE  BE31               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
 38532   015400  801B               	bsf	___fldiv@b^(0+1280),0,c
 38533   015402  90D8               	bcf	status,0,c
 38534   015404  362E               	rlcf	___fldiv@grs^(0+1280),f,c
 38535   015406  362F               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 38536   015408  3630               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 38537   01540A  3631               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 38538   01540C                     l8253:
 38539   01540C  501F               	movf	___fldiv@a^(0+1280),w,c
 38540   01540E  5C27               	subwf	___fldiv@rem^(0+1280),w,c
 38541   015410  5020               	movf	(___fldiv@a+1)^(0+1280),w,c
 38542   015412  5828               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
 38543   015414  5021               	movf	(___fldiv@a+2)^(0+1280),w,c
 38544   015416  5829               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
 38545   015418  5022               	movf	(___fldiv@a+3)^(0+1280),w,c
 38546   01541A  582A               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
 38547   01541C  A0D8               	btfss	status,0,c
 38548   01541E  D009               	goto	l8259
 38549   015420  8C31               	bsf	(___fldiv@grs+3)^(0+1280),6,c
 38550   015422  501F               	movf	___fldiv@a^(0+1280),w,c
 38551   015424  5E27               	subwf	___fldiv@rem^(0+1280),f,c
 38552   015426  5020               	movf	(___fldiv@a+1)^(0+1280),w,c
 38553   015428  5A28               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
 38554   01542A  5021               	movf	(___fldiv@a+2)^(0+1280),w,c
 38555   01542C  5A29               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
 38556   01542E  5022               	movf	(___fldiv@a+3)^(0+1280),w,c
 38557   015430  5A2A               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
 38558   015432                     l8259:
 38559   015432  2A33               	incf	___fldiv@aexp^(0+1280),f,c
 38560   015434                     l2298:
 38561   015434  0E19               	movlw	25
 38562   015436  6433               	cpfsgt	___fldiv@aexp^(0+1280),c
 38563   015438  D7D5               	goto	l8245
 38564   01543A  5027               	movf	___fldiv@rem^(0+1280),w,c
 38565   01543C  1028               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
 38566   01543E  1029               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
 38567   015440  102A               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
 38568   015442  B4D8               	btfsc	status,2,c
 38569   015444  D011               	goto	l8271
 38570   015446  802E               	bsf	___fldiv@grs^(0+1280),0,c
 38571   015448  D00F               	goto	l8271
 38572   01544A                     l8265:
 38573   01544A  90D8               	bcf	status,0,c
 38574   01544C  361B               	rlcf	___fldiv@b^(0+1280),f,c
 38575   01544E  361C               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 38576   015450  361D               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 38577   015452  361E               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 38578   015454  BE31               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
 38579   015456  801B               	bsf	___fldiv@b^(0+1280),0,c
 38580   015458  90D8               	bcf	status,0,c
 38581   01545A  362E               	rlcf	___fldiv@grs^(0+1280),f,c
 38582   01545C  362F               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 38583   01545E  3630               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 38584   015460  3631               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 38585   015462  062C               	decf	___fldiv@new_exp^(0+1280),f,c
 38586   015464  A0D8               	btfss	status,0,c
 38587   015466  062D               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
 38588   015468                     l8271:
 38589   015468  AE1D               	btfss	(___fldiv@b+2)^(0+1280),7,c
 38590   01546A  D7EF               	goto	l8265
 38591   01546C  0E00               	movlw	0
 38592   01546E  6E33               	movwf	___fldiv@aexp^(0+1280),c
 38593   015470  AE31               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 38594   015472  D017               	goto	l2309
 38595   015474  0EFF               	movlw	255
 38596   015476  142E               	andwf	___fldiv@grs^(0+1280),w,c
 38597   015478  6E23               	movwf	??___fldiv^(0+1280),c
 38598   01547A  0EFF               	movlw	255
 38599   01547C  142F               	andwf	(___fldiv@grs+1)^(0+1280),w,c
 38600   01547E  6E24               	movwf	(??___fldiv+1)^(0+1280),c
 38601   015480  0EFF               	movlw	255
 38602   015482  1430               	andwf	(___fldiv@grs+2)^(0+1280),w,c
 38603   015484  6E25               	movwf	(??___fldiv+2)^(0+1280),c
 38604   015486  0E7F               	movlw	127
 38605   015488  1431               	andwf	(___fldiv@grs+3)^(0+1280),w,c
 38606   01548A  6E26               	movwf	(??___fldiv+3)^(0+1280),c
 38607   01548C  5023               	movf	??___fldiv^(0+1280),w,c
 38608   01548E  1024               	iorwf	(??___fldiv+1)^(0+1280),w,c
 38609   015490  1025               	iorwf	(??___fldiv+2)^(0+1280),w,c
 38610   015492  1026               	iorwf	(??___fldiv+3)^(0+1280),w,c
 38611   015494  B4D8               	btfsc	status,2,c
 38612   015496  D003               	goto	l2310
 38613   015498                     u9000:
 38614   015498  0E01               	movlw	1
 38615   01549A  6E33               	movwf	___fldiv@aexp^(0+1280),c
 38616   01549C  D002               	goto	l2309
 38617   01549E                     l2310:
 38618   01549E  B01B               	btfsc	___fldiv@b^(0+1280),0,c
 38619   0154A0  D7FB               	goto	u9000
 38620   0154A2                     l2309:
 38621   0154A2  5033               	movf	___fldiv@aexp^(0+1280),w,c
 38622   0154A4  B4D8               	btfsc	status,2,c
 38623   0154A6  D01F               	goto	l8291
 38624   0154A8  0E01               	movlw	1
 38625   0154AA  261B               	addwf	___fldiv@b^(0+1280),f,c
 38626   0154AC  0E00               	movlw	0
 38627   0154AE  221C               	addwfc	(___fldiv@b+1)^(0+1280),f,c
 38628   0154B0  221D               	addwfc	(___fldiv@b+2)^(0+1280),f,c
 38629   0154B2  221E               	addwfc	(___fldiv@b+3)^(0+1280),f,c
 38630   0154B4  A01E               	btfss	(___fldiv@b+3)^(0+1280),0,c
 38631   0154B6  D017               	goto	l8291
 38632   0154B8  C51B  F523         	movff	___fldiv@b,??___fldiv
 38633   0154BC  C51C  F524         	movff	___fldiv@b+1,??___fldiv+1
 38634   0154C0  C51D  F525         	movff	___fldiv@b+2,??___fldiv+2
 38635   0154C4  C51E  F526         	movff	___fldiv@b+3,??___fldiv+3
 38636   0154C8  3426               	rlcf	(??___fldiv+3)^(0+1280),w,c
 38637   0154CA  3226               	rrcf	(??___fldiv+3)^(0+1280),f,c
 38638   0154CC  3225               	rrcf	(??___fldiv+2)^(0+1280),f,c
 38639   0154CE  3224               	rrcf	(??___fldiv+1)^(0+1280),f,c
 38640   0154D0  3223               	rrcf	??___fldiv^(0+1280),f,c
 38641   0154D2  C523  F51B         	movff	??___fldiv,___fldiv@b
 38642   0154D6  C524  F51C         	movff	??___fldiv+1,___fldiv@b+1
 38643   0154DA  C525  F51D         	movff	??___fldiv+2,___fldiv@b+2
 38644   0154DE  C526  F51E         	movff	??___fldiv+3,___fldiv@b+3
 38645   0154E2  4A2C               	infsnz	___fldiv@new_exp^(0+1280),f,c
 38646   0154E4  2A2D               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
 38647   0154E6                     l8291:
 38648   0154E6  BE2D               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 38649   0154E8  D010               	goto	l8295
 38650   0154EA  502D               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 38651   0154EC  E103               	bnz	u9040
 38652   0154EE  282C               	incf	___fldiv@new_exp^(0+1280),w,c
 38653   0154F0  A0D8               	btfss	status,0,c
 38654   0154F2  D00B               	goto	l8295
 38655   0154F4                     u9040:
 38656   0154F4  0E00               	movlw	0
 38657   0154F6  6E2D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 38658   0154F8  682C               	setf	___fldiv@new_exp^(0+1280),c
 38659   0154FA  0E00               	movlw	0
 38660   0154FC  6E1B               	movwf	___fldiv@b^(0+1280),c
 38661   0154FE  0E00               	movlw	0
 38662   015500  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38663   015502  0E00               	movlw	0
 38664   015504  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38665   015506  0E00               	movlw	0
 38666   015508  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38667   01550A                     l8295:
 38668   01550A  BE2D               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 38669   01550C  D005               	goto	u9050
 38670   01550E  502D               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 38671   015510  E111               	bnz	l8299
 38672   015512  042C               	decf	___fldiv@new_exp^(0+1280),w,c
 38673   015514  B0D8               	btfsc	status,0,c
 38674   015516  D00E               	goto	l8299
 38675   015518                     u9050:
 38676   015518  0E00               	movlw	0
 38677   01551A  6E2D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 38678   01551C  0E00               	movlw	0
 38679   01551E  6E2C               	movwf	___fldiv@new_exp^(0+1280),c
 38680   015520  0E00               	movlw	0
 38681   015522  6E1B               	movwf	___fldiv@b^(0+1280),c
 38682   015524  0E00               	movlw	0
 38683   015526  6E1C               	movwf	(___fldiv@b+1)^(0+1280),c
 38684   015528  0E00               	movlw	0
 38685   01552A  6E1D               	movwf	(___fldiv@b+2)^(0+1280),c
 38686   01552C  0E00               	movlw	0
 38687   01552E  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38688   015530  0E00               	movlw	0
 38689   015532  6E2B               	movwf	___fldiv@sign^(0+1280),c
 38690   015534                     l8299:
 38691   015534  C52C  F532         	movff	___fldiv@new_exp,___fldiv@bexp
 38692   015538  A032               	btfss	___fldiv@bexp^(0+1280),0,c
 38693   01553A  D002               	goto	l8305
 38694   01553C  8E1D               	bsf	(___fldiv@b+2)^(0+1280),7,c
 38695   01553E  D001               	goto	l8307
 38696   015540                     l8305:
 38697   015540  9E1D               	bcf	(___fldiv@b+2)^(0+1280),7,c
 38698   015542                     l8307:
 38699   015542  90D8               	bcf	status,0,c
 38700   015544  3032               	rrcf	___fldiv@bexp^(0+1280),w,c
 38701   015546  6E1E               	movwf	(___fldiv@b+3)^(0+1280),c
 38702   015548  D70E               	goto	l8221
 38703   01554A                     __end_of___fldiv:
 38704                           	callstack 0
 38705                           
 38706 ;; *************** function _dtoa *****************
 38707 ;; Defined at:
 38708 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 38709 ;; Parameters:    Size  Location     Type
 38710 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
 38711 ;;		 -> sprintf@f(12), NULL(0), 
 38712 ;;  d               4   28[COMRAM] long 
 38713 ;; Auto vars:     Size  Location     Type
 38714 ;;  i               2   39[COMRAM] int 
 38715 ;;  w               2   36[COMRAM] int 
 38716 ;;  p               2   34[COMRAM] int 
 38717 ;;  s               1   38[COMRAM] unsigned char 
 38718 ;; Return value:  Size  Location     Type
 38719 ;;                  1    wreg      void 
 38720 ;; Registers used:
 38721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38722 ;; Tracked objects:
 38723 ;;		On entry : 3F/5
 38724 ;;		On exit  : 0/0
 38725 ;;		Unchanged: 0/0
 38726 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38727 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38728 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38730 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38731 ;;Total ram usage:       15 bytes
 38732 ;; Hardware stack levels used: 1
 38733 ;; Hardware stack levels required when called: 4
 38734 ;; This function calls:
 38735 ;;		___aldiv
 38736 ;;		___almod
 38737 ;;		_abs
 38738 ;;		_pad
 38739 ;; This function is called by:
 38740 ;;		_vfpfcnvrt
 38741 ;; This function uses a non-reentrant model
 38742 ;;
 38743                           
 38744                           	psect	text97
 38745   01714C                     __ptext97:
 38746                           	callstack 0
 38747   01714C                     _dtoa:
 38748                           	callstack 118
 38749                           
 38750                           ; BSR set to: 5
 38751                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 38752                           
 38753                           ;incstack = 0
 38754   01714C  AE20               	btfss	(dtoa@d+3)^(0+1280),7,c
 38755   01714E  D002               	goto	u9690
 38756   017150  0E01               	movlw	1
 38757   017152  D001               	goto	u9700
 38758   017154                     u9690:
 38759   017154  0E00               	movlw	0
 38760   017156                     u9700:
 38761   017156  6E27               	movwf	dtoa@s^(0+1280),c
 38762                           
 38763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
 38764   017158  0107               	movlb	7	; () banked
 38765   01715A  AF16               	btfss	(_prec+1)& (0+255),7,b
 38766                           
 38767                           ; BSR set to: 7
 38768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
 38769   01715C  9327               	bcf	_flags& (0+255),1,b
 38770                           
 38771                           ; BSR set to: 7
 38772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 38773   01715E  AF16               	btfss	(_prec+1)& (0+255),7,b
 38774   017160  D005               	goto	l2472
 38775                           
 38776                           ; BSR set to: 7
 38777   017162  0E00               	movlw	0
 38778   017164  6E24               	movwf	(dtoa@p+1)^(0+1280),c
 38779   017166  0E01               	movlw	1
 38780   017168  6E23               	movwf	dtoa@p^(0+1280),c
 38781   01716A  D004               	goto	l2474
 38782   01716C                     l2472:
 38783                           
 38784                           ; BSR set to: 7
 38785   01716C  C715  F523         	movff	_prec,dtoa@p
 38786   017170  C716  F524         	movff	_prec+1,dtoa@p+1
 38787   017174                     l2474:
 38788                           
 38789                           ; BSR set to: 7
 38790                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 38791   017174  C713  F525         	movff	_width,dtoa@w
 38792   017178  C714  F526         	movff	_width+1,dtoa@w+1
 38793                           
 38794                           ; BSR set to: 7
 38795                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
 38796   01717C  5027               	movf	dtoa@s^(0+1280),w,c
 38797   01717E  B4D8               	btfsc	status,2,c
 38798   017180  D010               	goto	l2475
 38799                           
 38800                           ; BSR set to: 7
 38801                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
 38802   017182  0625               	decf	dtoa@w^(0+1280),f,c
 38803   017184  A0D8               	btfss	status,0,c
 38804   017186  0626               	decf	(dtoa@w+1)^(0+1280),f,c
 38805                           
 38806                           ; BSR set to: 7
 38807                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 38808   017188  5027               	movf	dtoa@s^(0+1280),w,c
 38809   01718A  A4D8               	btfss	status,2,c
 38810   01718C  D004               	goto	l8659
 38811                           
 38812                           ; BSR set to: 7
 38813   01718E  0E00               	movlw	0
 38814   017190  6E22               	movwf	(_dtoa$3400+1)^(0+1280),c
 38815   017192  0E2B               	movlw	43
 38816   017194  D003               	goto	L33
 38817   017196                     l8659:
 38818                           
 38819                           ; BSR set to: 7
 38820   017196  0E00               	movlw	0
 38821   017198  6E22               	movwf	(_dtoa$3400+1)^(0+1280),c
 38822   01719A  0E2D               	movlw	45
 38823   01719C                     L33:
 38824   01719C  6E21               	movwf	_dtoa$3400^(0+1280),c
 38825                           
 38826                           ; BSR set to: 7
 38827   01719E  C521  F527         	movff	_dtoa$3400,dtoa@s
 38828   0171A2                     l2475:
 38829                           
 38830                           ; BSR set to: 7
 38831                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 38832   0171A2  0E00               	movlw	0
 38833   0171A4  6E29               	movwf	(dtoa@i+1)^(0+1280),c
 38834   0171A6  0E4F               	movlw	79
 38835   0171A8  6E28               	movwf	dtoa@i^(0+1280),c
 38836                           
 38837                           ; BSR set to: 7
 38838                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 38839   0171AA  0E00               	movlw	0
 38840   0171AC  6F7C               	movwf	(_dbuf+79)& (0+255),b
 38841                           
 38842                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 38843   0171AE  D044               	goto	l8675
 38844   0171B0                     l8665:
 38845                           
 38846                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
 38847   0171B0  0628               	decf	dtoa@i^(0+1280),f,c
 38848   0171B2  A0D8               	btfss	status,0,c
 38849   0171B4  0629               	decf	(dtoa@i+1)^(0+1280),f,c
 38850                           
 38851                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 38852   0171B6  0E2D               	movlw	low _dbuf
 38853   0171B8  2428               	addwf	dtoa@i^(0+1280),w,c
 38854   0171BA  6ED9               	movwf	fsr2l,c
 38855   0171BC  0E07               	movlw	high _dbuf
 38856   0171BE  2029               	addwfc	(dtoa@i+1)^(0+1280),w,c
 38857   0171C0  6EDA               	movwf	fsr2h,c
 38858   0171C2  C51D  F501         	movff	dtoa@d,___almod@dividend
 38859   0171C6  C51E  F502         	movff	dtoa@d+1,___almod@dividend+1
 38860   0171CA  C51F  F503         	movff	dtoa@d+2,___almod@dividend+2
 38861   0171CE  C520  F504         	movff	dtoa@d+3,___almod@dividend+3
 38862   0171D2  0E0A               	movlw	10
 38863   0171D4  6E05               	movwf	___almod@divisor^(0+1280),c
 38864   0171D6  0E00               	movlw	0
 38865   0171D8  6E06               	movwf	(___almod@divisor+1)^(0+1280),c
 38866   0171DA  0E00               	movlw	0
 38867   0171DC  6E07               	movwf	(___almod@divisor+2)^(0+1280),c
 38868   0171DE  0E00               	movlw	0
 38869   0171E0  6E08               	movwf	(___almod@divisor+3)^(0+1280),c
 38870   0171E2  ECEA  F0C6         	call	___almod	;wreg free
 38871   0171E6  C501  F50B         	movff	?___almod,abs@a
 38872   0171EA  C502  F50C         	movff	?___almod+1,abs@a+1
 38873   0171EE  EC3B  F0CF         	call	_abs	;wreg free
 38874   0171F2  500B               	movf	?_abs^(0+1280),w,c
 38875   0171F4  0F30               	addlw	48
 38876   0171F6  6EDF               	movwf	indf2,c
 38877                           
 38878                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
 38879   0171F8  0623               	decf	dtoa@p^(0+1280),f,c
 38880   0171FA  A0D8               	btfss	status,0,c
 38881   0171FC  0624               	decf	(dtoa@p+1)^(0+1280),f,c
 38882                           
 38883                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
 38884   0171FE  0625               	decf	dtoa@w^(0+1280),f,c
 38885   017200  A0D8               	btfss	status,0,c
 38886   017202  0626               	decf	(dtoa@w+1)^(0+1280),f,c
 38887                           
 38888                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 38889   017204  C51D  F501         	movff	dtoa@d,___aldiv@dividend
 38890   017208  C51E  F502         	movff	dtoa@d+1,___aldiv@dividend+1
 38891   01720C  C51F  F503         	movff	dtoa@d+2,___aldiv@dividend+2
 38892   017210  C520  F504         	movff	dtoa@d+3,___aldiv@dividend+3
 38893   017214  0E0A               	movlw	10
 38894   017216  6E05               	movwf	___aldiv@divisor^(0+1280),c
 38895   017218  0E00               	movlw	0
 38896   01721A  6E06               	movwf	(___aldiv@divisor+1)^(0+1280),c
 38897   01721C  0E00               	movlw	0
 38898   01721E  6E07               	movwf	(___aldiv@divisor+2)^(0+1280),c
 38899   017220  0E00               	movlw	0
 38900   017222  6E08               	movwf	(___aldiv@divisor+3)^(0+1280),c
 38901   017224  EC8F  F0C2         	call	___aldiv	;wreg free
 38902   017228  C501  F51D         	movff	?___aldiv,dtoa@d
 38903   01722C  C502  F51E         	movff	?___aldiv+1,dtoa@d+1
 38904   017230  C503  F51F         	movff	?___aldiv+2,dtoa@d+2
 38905   017234  C504  F520         	movff	?___aldiv+3,dtoa@d+3
 38906   017238                     l8675:
 38907                           
 38908                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 38909   017238  BE29               	btfsc	(dtoa@i+1)^(0+1280),7,c
 38910   01723A  D01C               	goto	u9790
 38911   01723C  5029               	movf	(dtoa@i+1)^(0+1280),w,c
 38912   01723E  E103               	bnz	u9750
 38913   017240  0428               	decf	dtoa@i^(0+1280),w,c
 38914   017242  A0D8               	btfss	status,0,c
 38915   017244  D017               	goto	u9790
 38916   017246                     u9750:
 38917   017246  501D               	movf	dtoa@d^(0+1280),w,c
 38918   017248  101E               	iorwf	(dtoa@d+1)^(0+1280),w,c
 38919   01724A  101F               	iorwf	(dtoa@d+2)^(0+1280),w,c
 38920   01724C  1020               	iorwf	(dtoa@d+3)^(0+1280),w,c
 38921   01724E  A4D8               	btfss	status,2,c
 38922   017250  D7AF               	goto	l8665
 38923   017252  BE24               	btfsc	(dtoa@p+1)^(0+1280),7,c
 38924   017254  D005               	goto	u9770
 38925   017256  5024               	movf	(dtoa@p+1)^(0+1280),w,c
 38926   017258  E1AB               	bnz	l8665
 38927   01725A  0423               	decf	dtoa@p^(0+1280),w,c
 38928   01725C  B0D8               	btfsc	status,0,c
 38929   01725E  D7A8               	goto	l8665
 38930   017260                     u9770:
 38931   017260  BE26               	btfsc	(dtoa@w+1)^(0+1280),7,c
 38932   017262  D008               	goto	u9790
 38933   017264  5026               	movf	(dtoa@w+1)^(0+1280),w,c
 38934   017266  E103               	bnz	u9780
 38935   017268  0425               	decf	dtoa@w^(0+1280),w,c
 38936   01726A  A0D8               	btfss	status,0,c
 38937   01726C  D003               	goto	u9790
 38938   01726E                     u9780:
 38939   01726E  0107               	movlb	7	; () banked
 38940   017270  B327               	btfsc	_flags& (0+255),1,b
 38941   017272  D79E               	goto	l8665
 38942   017274                     u9790:
 38943                           
 38944                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 38945   017274  5027               	movf	dtoa@s^(0+1280),w,c
 38946   017276  B4D8               	btfsc	status,2,c
 38947   017278  D00B               	goto	l8691
 38948                           
 38949                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
 38950   01727A  0628               	decf	dtoa@i^(0+1280),f,c
 38951   01727C  A0D8               	btfss	status,0,c
 38952   01727E  0629               	decf	(dtoa@i+1)^(0+1280),f,c
 38953                           
 38954                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 38955   017280  0E2D               	movlw	low _dbuf
 38956   017282  2428               	addwf	dtoa@i^(0+1280),w,c
 38957   017284  6ED9               	movwf	fsr2l,c
 38958   017286  0E07               	movlw	high _dbuf
 38959   017288  2029               	addwfc	(dtoa@i+1)^(0+1280),w,c
 38960   01728A  6EDA               	movwf	fsr2h,c
 38961   01728C  C527  F4DF         	movff	dtoa@s,indf2
 38962   017290                     l8691:
 38963                           
 38964                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 38965   017290  C51B  F512         	movff	dtoa@fp,pad@fp
 38966   017294  C51C  F513         	movff	dtoa@fp+1,pad@fp+1
 38967   017298  0E2D               	movlw	low _dbuf
 38968   01729A  2428               	addwf	dtoa@i^(0+1280),w,c
 38969   01729C  6E14               	movwf	pad@buf^(0+1280),c
 38970   01729E  0E07               	movlw	high _dbuf
 38971   0172A0  2029               	addwfc	(dtoa@i+1)^(0+1280),w,c
 38972   0172A2  6E15               	movwf	(pad@buf+1)^(0+1280),c
 38973   0172A4  C525  F516         	movff	dtoa@w,pad@p
 38974   0172A8  C526  F517         	movff	dtoa@w+1,pad@p+1
 38975   0172AC  ECD2  F0C9         	call	_pad	;wreg free
 38976   0172B0  0012               	return		;funcret
 38977   0172B2                     __end_of_dtoa:
 38978                           	callstack 0
 38979                           
 38980 ;; *************** function _pad *****************
 38981 ;; Defined at:
 38982 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 38983 ;; Parameters:    Size  Location     Type
 38984 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 38985 ;;		 -> sprintf@f(12), NULL(0), 
 38986 ;;  buf             2   19[COMRAM] PTR unsigned char 
 38987 ;;		 -> dbuf(80), 
 38988 ;;  p               2   21[COMRAM] int 
 38989 ;; Auto vars:     Size  Location     Type
 38990 ;;  i               2   24[COMRAM] int 
 38991 ;; Return value:  Size  Location     Type
 38992 ;;                  1    wreg      void 
 38993 ;; Registers used:
 38994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38995 ;; Tracked objects:
 38996 ;;		On entry : 0/7
 38997 ;;		On exit  : 0/0
 38998 ;;		Unchanged: 0/0
 38999 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39000 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39001 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39003 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39004 ;;Total ram usage:        9 bytes
 39005 ;; Hardware stack levels used: 1
 39006 ;; Hardware stack levels required when called: 3
 39007 ;; This function calls:
 39008 ;;		_fputc
 39009 ;;		_fputs
 39010 ;; This function is called by:
 39011 ;;		_dtoa
 39012 ;;		_efgtoa
 39013 ;;		_xtoa
 39014 ;; This function uses a non-reentrant model
 39015 ;;
 39016                           
 39017                           	psect	text98
 39018   0193A4                     __ptext98:
 39019                           	callstack 0
 39020   0193A4                     _pad:
 39021                           	callstack 118
 39022                           
 39023                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 39024                           
 39025                           ;incstack = 0
 39026   0193A4  0107               	movlb	7	; () banked
 39027   0193A6  A127               	btfss	_flags& (0+255),0,b
 39028   0193A8  D00A               	goto	l8545
 39029                           
 39030                           ; BSR set to: 7
 39031                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 39032   0193AA  C514  F50B         	movff	pad@buf,fputs@s
 39033   0193AE  C515  F50C         	movff	pad@buf+1,fputs@s+1
 39034   0193B2  C512  F50D         	movff	pad@fp,fputs@fp
 39035   0193B6  C513  F50E         	movff	pad@fp+1,fputs@fp+1
 39036   0193BA  EC4D  F0CE         	call	_fputs	;wreg free
 39037   0193BE                     l8545:
 39038                           
 39039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 39040   0193BE  AE17               	btfss	(pad@p+1)^(0+1280),7,c
 39041   0193C0  D004               	goto	l2446
 39042                           
 39043                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 39044   0193C2  0E00               	movlw	0
 39045   0193C4  6E17               	movwf	(pad@p+1)^(0+1280),c
 39046   0193C6  0E00               	movlw	0
 39047   0193C8  6E16               	movwf	pad@p^(0+1280),c
 39048   0193CA                     l2446:
 39049                           
 39050                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 39051   0193CA  0E00               	movlw	0
 39052   0193CC  6E1A               	movwf	(pad@i+1)^(0+1280),c
 39053   0193CE  0E00               	movlw	0
 39054   0193D0  6E19               	movwf	pad@i^(0+1280),c
 39055                           
 39056                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 39057   0193D2  D00C               	goto	l8553
 39058   0193D4                     l8549:
 39059                           
 39060                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 39061   0193D4  0E00               	movlw	0
 39062   0193D6  6E03               	movwf	(fputc@c+1)^(0+1280),c
 39063   0193D8  0E20               	movlw	32
 39064   0193DA  6E02               	movwf	fputc@c^(0+1280),c
 39065   0193DC  C512  F504         	movff	pad@fp,fputc@fp
 39066   0193E0  C513  F505         	movff	pad@fp+1,fputc@fp+1
 39067   0193E4  EC95  F0C7         	call	_fputc	;wreg free
 39068                           
 39069                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
 39070   0193E8  4A19               	infsnz	pad@i^(0+1280),f,c
 39071   0193EA  2A1A               	incf	(pad@i+1)^(0+1280),f,c
 39072   0193EC                     l8553:
 39073                           
 39074                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 39075   0193EC  5016               	movf	pad@p^(0+1280),w,c
 39076   0193EE  5C19               	subwf	pad@i^(0+1280),w,c
 39077   0193F0  501A               	movf	(pad@i+1)^(0+1280),w,c
 39078   0193F2  0A80               	xorlw	128
 39079   0193F4  6E18               	movwf	??_pad^(0+1280),c
 39080   0193F6  5017               	movf	(pad@p+1)^(0+1280),w,c
 39081   0193F8  0A80               	xorlw	128
 39082   0193FA  5818               	subwfb	??_pad^(0+1280),w,c
 39083   0193FC  A0D8               	btfss	status,0,c
 39084   0193FE  D7EA               	goto	l8549
 39085                           
 39086                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 39087   019400  0107               	movlb	7	; () banked
 39088   019402  B127               	btfsc	_flags& (0+255),0,b
 39089   019404  0012               	return	
 39090                           
 39091                           ; BSR set to: 7
 39092                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 39093   019406  C514  F50B         	movff	pad@buf,fputs@s
 39094   01940A  C515  F50C         	movff	pad@buf+1,fputs@s+1
 39095   01940E  C512  F50D         	movff	pad@fp,fputs@fp
 39096   019412  C513  F50E         	movff	pad@fp+1,fputs@fp+1
 39097   019416  EC4D  F0CE         	call	_fputs	;wreg free
 39098   01941A  0012               	return		;funcret
 39099   01941C                     __end_of_pad:
 39100                           	callstack 0
 39101                           
 39102 ;; *************** function _fputs *****************
 39103 ;; Defined at:
 39104 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
 39105 ;; Parameters:    Size  Location     Type
 39106 ;;  s               2   10[COMRAM] PTR const unsigned char 
 39107 ;;		 -> dbuf(80), 
 39108 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 39109 ;;		 -> sprintf@f(12), NULL(0), 
 39110 ;; Auto vars:     Size  Location     Type
 39111 ;;  i               2   15[COMRAM] int 
 39112 ;;  c               1   14[COMRAM] unsigned char 
 39113 ;; Return value:  Size  Location     Type
 39114 ;;                  2   10[COMRAM] int 
 39115 ;; Registers used:
 39116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39117 ;; Tracked objects:
 39118 ;;		On entry : 3F/7
 39119 ;;		On exit  : 0/0
 39120 ;;		Unchanged: 0/0
 39121 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39123 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39125 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39126 ;;Total ram usage:        7 bytes
 39127 ;; Hardware stack levels used: 1
 39128 ;; Hardware stack levels required when called: 2
 39129 ;; This function calls:
 39130 ;;		_fputc
 39131 ;; This function is called by:
 39132 ;;		_pad
 39133 ;; This function uses a non-reentrant model
 39134 ;;
 39135                           
 39136                           	psect	text99
 39137   019C9A                     __ptext99:
 39138                           	callstack 0
 39139   019C9A                     _fputs:
 39140                           	callstack 118
 39141                           
 39142                           ; BSR set to: 7
 39143                           
 39144                           ;incstack = 0
 39145   019C9A  0E00               	movlw	0
 39146   019C9C  6E11               	movwf	(fputs@i+1)^(0+1280),c
 39147   019C9E  0E00               	movlw	0
 39148   019CA0  6E10               	movwf	fputs@i^(0+1280),c
 39149   019CA2  D00B               	goto	l8073
 39150   019CA4                     l8069:
 39151   019CA4  C50F  F502         	movff	fputs@c,fputc@c
 39152   019CA8  6A03               	clrf	(fputc@c+1)^(0+1280),c
 39153   019CAA  C50D  F504         	movff	fputs@fp,fputc@fp
 39154   019CAE  C50E  F505         	movff	fputs@fp+1,fputc@fp+1
 39155   019CB2  EC95  F0C7         	call	_fputc	;wreg free
 39156   019CB6  4A10               	infsnz	fputs@i^(0+1280),f,c
 39157   019CB8  2A11               	incf	(fputs@i+1)^(0+1280),f,c
 39158   019CBA                     l8073:
 39159   019CBA  5010               	movf	fputs@i^(0+1280),w,c
 39160   019CBC  240B               	addwf	fputs@s^(0+1280),w,c
 39161   019CBE  6ED9               	movwf	fsr2l,c
 39162   019CC0  5011               	movf	(fputs@i+1)^(0+1280),w,c
 39163   019CC2  200C               	addwfc	(fputs@s+1)^(0+1280),w,c
 39164   019CC4  6EDA               	movwf	fsr2h,c
 39165   019CC6  50DF               	movf	indf2,w,c
 39166   019CC8  6E0F               	movwf	fputs@c^(0+1280),c
 39167   019CCA  500F               	movf	fputs@c^(0+1280),w,c
 39168   019CCC  B4D8               	btfsc	status,2,c
 39169   019CCE  0012               	return	
 39170   019CD0  D7E9               	goto	l8069
 39171   019CD2                     __end_of_fputs:
 39172                           	callstack 0
 39173                           
 39174 ;; *************** function _abs *****************
 39175 ;; Defined at:
 39176 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
 39177 ;; Parameters:    Size  Location     Type
 39178 ;;  a               2   10[COMRAM] int 
 39179 ;; Auto vars:     Size  Location     Type
 39180 ;;		None
 39181 ;; Return value:  Size  Location     Type
 39182 ;;                  2   10[COMRAM] int 
 39183 ;; Registers used:
 39184 ;;		wreg, status,2, status,0
 39185 ;; Tracked objects:
 39186 ;;		On entry : 0/7
 39187 ;;		On exit  : 0/0
 39188 ;;		Unchanged: 0/0
 39189 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39193 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39194 ;;Total ram usage:        4 bytes
 39195 ;; Hardware stack levels used: 1
 39196 ;; This function calls:
 39197 ;;		Nothing
 39198 ;; This function is called by:
 39199 ;;		_dtoa
 39200 ;; This function uses a non-reentrant model
 39201 ;;
 39202                           
 39203                           	psect	text100
 39204   019E76                     __ptext100:
 39205                           	callstack 0
 39206   019E76                     _abs:
 39207                           	callstack 121
 39208                           
 39209                           ;incstack = 0
 39210   019E76  BE0C               	btfsc	(abs@a+1)^(0+1280),7,c
 39211   019E78  D005               	goto	l2676
 39212   019E7A  C50B  F50B         	movff	abs@a,?_abs
 39213   019E7E  C50C  F50C         	movff	abs@a+1,?_abs+1
 39214   019E82  0012               	return	
 39215   019E84                     l2676:
 39216   019E84  C50B  F50D         	movff	abs@a,??_abs
 39217   019E88  C50C  F50E         	movff	abs@a+1,??_abs+1
 39218   019E8C  1E0D               	comf	??_abs^(0+1280),f,c
 39219   019E8E  1E0E               	comf	(??_abs+1)^(0+1280),f,c
 39220   019E90  4A0D               	infsnz	??_abs^(0+1280),f,c
 39221   019E92  2A0E               	incf	(??_abs+1)^(0+1280),f,c
 39222   019E94  C50D  F50B         	movff	??_abs,?_abs
 39223   019E98  C50E  F50C         	movff	??_abs+1,?_abs+1
 39224   019E9C  0012               	return		;funcret
 39225   019E9E                     __end_of_abs:
 39226                           	callstack 0
 39227                           
 39228 ;; *************** function ___almod *****************
 39229 ;; Defined at:
 39230 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\almod.c"
 39231 ;; Parameters:    Size  Location     Type
 39232 ;;  dividend        4    0[COMRAM] long 
 39233 ;;  divisor         4    4[COMRAM] long 
 39234 ;; Auto vars:     Size  Location     Type
 39235 ;;  sign            1    9[COMRAM] unsigned char 
 39236 ;;  counter         1    8[COMRAM] unsigned char 
 39237 ;; Return value:  Size  Location     Type
 39238 ;;                  4    0[COMRAM] long 
 39239 ;; Registers used:
 39240 ;;		wreg, status,2, status,0
 39241 ;; Tracked objects:
 39242 ;;		On entry : 0/7
 39243 ;;		On exit  : 0/0
 39244 ;;		Unchanged: 0/0
 39245 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39246 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39249 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39250 ;;Total ram usage:       10 bytes
 39251 ;; Hardware stack levels used: 1
 39252 ;; This function calls:
 39253 ;;		Nothing
 39254 ;; This function is called by:
 39255 ;;		_dtoa
 39256 ;; This function uses a non-reentrant model
 39257 ;;
 39258                           
 39259                           	psect	text101
 39260   018DD4                     __ptext101:
 39261                           	callstack 0
 39262   018DD4                     ___almod:
 39263                           	callstack 121
 39264                           
 39265                           ;incstack = 0
 39266   018DD4  0E00               	movlw	0
 39267   018DD6  6E0A               	movwf	___almod@sign^(0+1280),c
 39268   018DD8  AE04               	btfss	(___almod@dividend+3)^(0+1280),7,c
 39269   018DDA  D00A               	goto	l8149
 39270   018DDC  1E04               	comf	(___almod@dividend+3)^(0+1280),f,c
 39271   018DDE  1E03               	comf	(___almod@dividend+2)^(0+1280),f,c
 39272   018DE0  1E02               	comf	(___almod@dividend+1)^(0+1280),f,c
 39273   018DE2  6C01               	negf	___almod@dividend^(0+1280),c
 39274   018DE4  0E00               	movlw	0
 39275   018DE6  2202               	addwfc	(___almod@dividend+1)^(0+1280),f,c
 39276   018DE8  2203               	addwfc	(___almod@dividend+2)^(0+1280),f,c
 39277   018DEA  2204               	addwfc	(___almod@dividend+3)^(0+1280),f,c
 39278   018DEC  0E01               	movlw	1
 39279   018DEE  6E0A               	movwf	___almod@sign^(0+1280),c
 39280   018DF0                     l8149:
 39281   018DF0  AE08               	btfss	(___almod@divisor+3)^(0+1280),7,c
 39282   018DF2  D008               	goto	l8153
 39283   018DF4  1E08               	comf	(___almod@divisor+3)^(0+1280),f,c
 39284   018DF6  1E07               	comf	(___almod@divisor+2)^(0+1280),f,c
 39285   018DF8  1E06               	comf	(___almod@divisor+1)^(0+1280),f,c
 39286   018DFA  6C05               	negf	___almod@divisor^(0+1280),c
 39287   018DFC  0E00               	movlw	0
 39288   018DFE  2206               	addwfc	(___almod@divisor+1)^(0+1280),f,c
 39289   018E00  2207               	addwfc	(___almod@divisor+2)^(0+1280),f,c
 39290   018E02  2208               	addwfc	(___almod@divisor+3)^(0+1280),f,c
 39291   018E04                     l8153:
 39292   018E04  5005               	movf	___almod@divisor^(0+1280),w,c
 39293   018E06  1006               	iorwf	(___almod@divisor+1)^(0+1280),w,c
 39294   018E08  1007               	iorwf	(___almod@divisor+2)^(0+1280),w,c
 39295   018E0A  1008               	iorwf	(___almod@divisor+3)^(0+1280),w,c
 39296   018E0C  B4D8               	btfsc	status,2,c
 39297   018E0E  D024               	goto	l8169
 39298   018E10  0E01               	movlw	1
 39299   018E12  6E09               	movwf	___almod@counter^(0+1280),c
 39300   018E14  D006               	goto	l8159
 39301   018E16                     l8157:
 39302   018E16  90D8               	bcf	status,0,c
 39303   018E18  3605               	rlcf	___almod@divisor^(0+1280),f,c
 39304   018E1A  3606               	rlcf	(___almod@divisor+1)^(0+1280),f,c
 39305   018E1C  3607               	rlcf	(___almod@divisor+2)^(0+1280),f,c
 39306   018E1E  3608               	rlcf	(___almod@divisor+3)^(0+1280),f,c
 39307   018E20  2A09               	incf	___almod@counter^(0+1280),f,c
 39308   018E22                     l8159:
 39309   018E22  AE08               	btfss	(___almod@divisor+3)^(0+1280),7,c
 39310   018E24  D7F8               	goto	l8157
 39311   018E26                     u8810:
 39312   018E26  5005               	movf	___almod@divisor^(0+1280),w,c
 39313   018E28  5C01               	subwf	___almod@dividend^(0+1280),w,c
 39314   018E2A  5006               	movf	(___almod@divisor+1)^(0+1280),w,c
 39315   018E2C  5802               	subwfb	(___almod@dividend+1)^(0+1280),w,c
 39316   018E2E  5007               	movf	(___almod@divisor+2)^(0+1280),w,c
 39317   018E30  5803               	subwfb	(___almod@dividend+2)^(0+1280),w,c
 39318   018E32  5008               	movf	(___almod@divisor+3)^(0+1280),w,c
 39319   018E34  5804               	subwfb	(___almod@dividend+3)^(0+1280),w,c
 39320   018E36  A0D8               	btfss	status,0,c
 39321   018E38  D008               	goto	l8165
 39322   018E3A  5005               	movf	___almod@divisor^(0+1280),w,c
 39323   018E3C  5E01               	subwf	___almod@dividend^(0+1280),f,c
 39324   018E3E  5006               	movf	(___almod@divisor+1)^(0+1280),w,c
 39325   018E40  5A02               	subwfb	(___almod@dividend+1)^(0+1280),f,c
 39326   018E42  5007               	movf	(___almod@divisor+2)^(0+1280),w,c
 39327   018E44  5A03               	subwfb	(___almod@dividend+2)^(0+1280),f,c
 39328   018E46  5008               	movf	(___almod@divisor+3)^(0+1280),w,c
 39329   018E48  5A04               	subwfb	(___almod@dividend+3)^(0+1280),f,c
 39330   018E4A                     l8165:
 39331   018E4A  90D8               	bcf	status,0,c
 39332   018E4C  3208               	rrcf	(___almod@divisor+3)^(0+1280),f,c
 39333   018E4E  3207               	rrcf	(___almod@divisor+2)^(0+1280),f,c
 39334   018E50  3206               	rrcf	(___almod@divisor+1)^(0+1280),f,c
 39335   018E52  3205               	rrcf	___almod@divisor^(0+1280),f,c
 39336   018E54  2E09               	decfsz	___almod@counter^(0+1280),f,c
 39337   018E56  D7E7               	goto	u8810
 39338   018E58                     l8169:
 39339   018E58  500A               	movf	___almod@sign^(0+1280),w,c
 39340   018E5A  B4D8               	btfsc	status,2,c
 39341   018E5C  D008               	goto	l8173
 39342   018E5E  1E04               	comf	(___almod@dividend+3)^(0+1280),f,c
 39343   018E60  1E03               	comf	(___almod@dividend+2)^(0+1280),f,c
 39344   018E62  1E02               	comf	(___almod@dividend+1)^(0+1280),f,c
 39345   018E64  6C01               	negf	___almod@dividend^(0+1280),c
 39346   018E66  0E00               	movlw	0
 39347   018E68  2202               	addwfc	(___almod@dividend+1)^(0+1280),f,c
 39348   018E6A  2203               	addwfc	(___almod@dividend+2)^(0+1280),f,c
 39349   018E6C  2204               	addwfc	(___almod@dividend+3)^(0+1280),f,c
 39350   018E6E                     l8173:
 39351   018E6E  C501  F501         	movff	___almod@dividend,?___almod
 39352   018E72  C502  F502         	movff	___almod@dividend+1,?___almod+1
 39353   018E76  C503  F503         	movff	___almod@dividend+2,?___almod+2
 39354   018E7A  C504  F504         	movff	___almod@dividend+3,?___almod+3
 39355   018E7E  0012               	return		;funcret
 39356   018E80                     __end_of___almod:
 39357                           	callstack 0
 39358                           
 39359 ;; *************** function ___aldiv *****************
 39360 ;; Defined at:
 39361 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
 39362 ;; Parameters:    Size  Location     Type
 39363 ;;  dividend        4    0[COMRAM] long 
 39364 ;;  divisor         4    4[COMRAM] long 
 39365 ;; Auto vars:     Size  Location     Type
 39366 ;;  quotient        4   10[COMRAM] long 
 39367 ;;  sign            1    9[COMRAM] unsigned char 
 39368 ;;  counter         1    8[COMRAM] unsigned char 
 39369 ;; Return value:  Size  Location     Type
 39370 ;;                  4    0[COMRAM] long 
 39371 ;; Registers used:
 39372 ;;		wreg, status,2, status,0
 39373 ;; Tracked objects:
 39374 ;;		On entry : 0/7
 39375 ;;		On exit  : 0/0
 39376 ;;		Unchanged: 0/0
 39377 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39378 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39379 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39381 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39382 ;;Total ram usage:       14 bytes
 39383 ;; Hardware stack levels used: 1
 39384 ;; This function calls:
 39385 ;;		Nothing
 39386 ;; This function is called by:
 39387 ;;		_dtoa
 39388 ;; This function uses a non-reentrant model
 39389 ;;
 39390                           
 39391                           	psect	text102
 39392   01851E                     __ptext102:
 39393                           	callstack 0
 39394   01851E                     ___aldiv:
 39395                           	callstack 121
 39396                           
 39397                           ;incstack = 0
 39398   01851E  0E00               	movlw	0
 39399   018520  6E0A               	movwf	___aldiv@sign^(0+1280),c
 39400   018522  AE08               	btfss	(___aldiv@divisor+3)^(0+1280),7,c
 39401   018524  D00A               	goto	l8105
 39402   018526  1E08               	comf	(___aldiv@divisor+3)^(0+1280),f,c
 39403   018528  1E07               	comf	(___aldiv@divisor+2)^(0+1280),f,c
 39404   01852A  1E06               	comf	(___aldiv@divisor+1)^(0+1280),f,c
 39405   01852C  6C05               	negf	___aldiv@divisor^(0+1280),c
 39406   01852E  0E00               	movlw	0
 39407   018530  2206               	addwfc	(___aldiv@divisor+1)^(0+1280),f,c
 39408   018532  2207               	addwfc	(___aldiv@divisor+2)^(0+1280),f,c
 39409   018534  2208               	addwfc	(___aldiv@divisor+3)^(0+1280),f,c
 39410   018536  0E01               	movlw	1
 39411   018538  6E0A               	movwf	___aldiv@sign^(0+1280),c
 39412   01853A                     l8105:
 39413   01853A  AE04               	btfss	(___aldiv@dividend+3)^(0+1280),7,c
 39414   01853C  D00A               	goto	l8111
 39415   01853E  1E04               	comf	(___aldiv@dividend+3)^(0+1280),f,c
 39416   018540  1E03               	comf	(___aldiv@dividend+2)^(0+1280),f,c
 39417   018542  1E02               	comf	(___aldiv@dividend+1)^(0+1280),f,c
 39418   018544  6C01               	negf	___aldiv@dividend^(0+1280),c
 39419   018546  0E00               	movlw	0
 39420   018548  2202               	addwfc	(___aldiv@dividend+1)^(0+1280),f,c
 39421   01854A  2203               	addwfc	(___aldiv@dividend+2)^(0+1280),f,c
 39422   01854C  2204               	addwfc	(___aldiv@dividend+3)^(0+1280),f,c
 39423   01854E  0E01               	movlw	1
 39424   018550  1A0A               	xorwf	___aldiv@sign^(0+1280),f,c
 39425   018552                     l8111:
 39426   018552  0E00               	movlw	0
 39427   018554  6E0B               	movwf	___aldiv@quotient^(0+1280),c
 39428   018556  0E00               	movlw	0
 39429   018558  6E0C               	movwf	(___aldiv@quotient+1)^(0+1280),c
 39430   01855A  0E00               	movlw	0
 39431   01855C  6E0D               	movwf	(___aldiv@quotient+2)^(0+1280),c
 39432   01855E  0E00               	movlw	0
 39433   018560  6E0E               	movwf	(___aldiv@quotient+3)^(0+1280),c
 39434   018562  5005               	movf	___aldiv@divisor^(0+1280),w,c
 39435   018564  1006               	iorwf	(___aldiv@divisor+1)^(0+1280),w,c
 39436   018566  1007               	iorwf	(___aldiv@divisor+2)^(0+1280),w,c
 39437   018568  1008               	iorwf	(___aldiv@divisor+3)^(0+1280),w,c
 39438   01856A  B4D8               	btfsc	status,2,c
 39439   01856C  D02A               	goto	l8133
 39440   01856E  0E01               	movlw	1
 39441   018570  6E09               	movwf	___aldiv@counter^(0+1280),c
 39442   018572  D006               	goto	l8119
 39443   018574                     l8117:
 39444   018574  90D8               	bcf	status,0,c
 39445   018576  3605               	rlcf	___aldiv@divisor^(0+1280),f,c
 39446   018578  3606               	rlcf	(___aldiv@divisor+1)^(0+1280),f,c
 39447   01857A  3607               	rlcf	(___aldiv@divisor+2)^(0+1280),f,c
 39448   01857C  3608               	rlcf	(___aldiv@divisor+3)^(0+1280),f,c
 39449   01857E  2A09               	incf	___aldiv@counter^(0+1280),f,c
 39450   018580                     l8119:
 39451   018580  AE08               	btfss	(___aldiv@divisor+3)^(0+1280),7,c
 39452   018582  D7F8               	goto	l8117
 39453   018584                     u8750:
 39454   018584  90D8               	bcf	status,0,c
 39455   018586  360B               	rlcf	___aldiv@quotient^(0+1280),f,c
 39456   018588  360C               	rlcf	(___aldiv@quotient+1)^(0+1280),f,c
 39457   01858A  360D               	rlcf	(___aldiv@quotient+2)^(0+1280),f,c
 39458   01858C  360E               	rlcf	(___aldiv@quotient+3)^(0+1280),f,c
 39459   01858E  5005               	movf	___aldiv@divisor^(0+1280),w,c
 39460   018590  5C01               	subwf	___aldiv@dividend^(0+1280),w,c
 39461   018592  5006               	movf	(___aldiv@divisor+1)^(0+1280),w,c
 39462   018594  5802               	subwfb	(___aldiv@dividend+1)^(0+1280),w,c
 39463   018596  5007               	movf	(___aldiv@divisor+2)^(0+1280),w,c
 39464   018598  5803               	subwfb	(___aldiv@dividend+2)^(0+1280),w,c
 39465   01859A  5008               	movf	(___aldiv@divisor+3)^(0+1280),w,c
 39466   01859C  5804               	subwfb	(___aldiv@dividend+3)^(0+1280),w,c
 39467   01859E  A0D8               	btfss	status,0,c
 39468   0185A0  D009               	goto	l8129
 39469   0185A2  5005               	movf	___aldiv@divisor^(0+1280),w,c
 39470   0185A4  5E01               	subwf	___aldiv@dividend^(0+1280),f,c
 39471   0185A6  5006               	movf	(___aldiv@divisor+1)^(0+1280),w,c
 39472   0185A8  5A02               	subwfb	(___aldiv@dividend+1)^(0+1280),f,c
 39473   0185AA  5007               	movf	(___aldiv@divisor+2)^(0+1280),w,c
 39474   0185AC  5A03               	subwfb	(___aldiv@dividend+2)^(0+1280),f,c
 39475   0185AE  5008               	movf	(___aldiv@divisor+3)^(0+1280),w,c
 39476   0185B0  5A04               	subwfb	(___aldiv@dividend+3)^(0+1280),f,c
 39477   0185B2  800B               	bsf	___aldiv@quotient^(0+1280),0,c
 39478   0185B4                     l8129:
 39479   0185B4  90D8               	bcf	status,0,c
 39480   0185B6  3208               	rrcf	(___aldiv@divisor+3)^(0+1280),f,c
 39481   0185B8  3207               	rrcf	(___aldiv@divisor+2)^(0+1280),f,c
 39482   0185BA  3206               	rrcf	(___aldiv@divisor+1)^(0+1280),f,c
 39483   0185BC  3205               	rrcf	___aldiv@divisor^(0+1280),f,c
 39484   0185BE  2E09               	decfsz	___aldiv@counter^(0+1280),f,c
 39485   0185C0  D7E1               	goto	u8750
 39486   0185C2                     l8133:
 39487   0185C2  500A               	movf	___aldiv@sign^(0+1280),w,c
 39488   0185C4  B4D8               	btfsc	status,2,c
 39489   0185C6  D008               	goto	l8137
 39490   0185C8  1E0E               	comf	(___aldiv@quotient+3)^(0+1280),f,c
 39491   0185CA  1E0D               	comf	(___aldiv@quotient+2)^(0+1280),f,c
 39492   0185CC  1E0C               	comf	(___aldiv@quotient+1)^(0+1280),f,c
 39493   0185CE  6C0B               	negf	___aldiv@quotient^(0+1280),c
 39494   0185D0  0E00               	movlw	0
 39495   0185D2  220C               	addwfc	(___aldiv@quotient+1)^(0+1280),f,c
 39496   0185D4  220D               	addwfc	(___aldiv@quotient+2)^(0+1280),f,c
 39497   0185D6  220E               	addwfc	(___aldiv@quotient+3)^(0+1280),f,c
 39498   0185D8                     l8137:
 39499   0185D8  C50B  F501         	movff	___aldiv@quotient,?___aldiv
 39500   0185DC  C50C  F502         	movff	___aldiv@quotient+1,?___aldiv+1
 39501   0185E0  C50D  F503         	movff	___aldiv@quotient+2,?___aldiv+2
 39502   0185E4  C50E  F504         	movff	___aldiv@quotient+3,?___aldiv+3
 39503   0185E8  0012               	return		;funcret
 39504   0185EA                     __end_of___aldiv:
 39505                           	callstack 0
 39506                           
 39507 ;; *************** function _ctoa *****************
 39508 ;; Defined at:
 39509 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 39510 ;; Parameters:    Size  Location     Type
 39511 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
 39512 ;;		 -> sprintf@f(12), NULL(0), 
 39513 ;;  c               1   12[COMRAM] unsigned char 
 39514 ;; Auto vars:     Size  Location     Type
 39515 ;;  w               2   16[COMRAM] int 
 39516 ;;  l               2   14[COMRAM] int 
 39517 ;; Return value:  Size  Location     Type
 39518 ;;                  1    wreg      void 
 39519 ;; Registers used:
 39520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39521 ;; Tracked objects:
 39522 ;;		On entry : 3F/5
 39523 ;;		On exit  : 0/0
 39524 ;;		Unchanged: 0/0
 39525 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39526 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39527 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39529 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39530 ;;Total ram usage:        8 bytes
 39531 ;; Hardware stack levels used: 1
 39532 ;; Hardware stack levels required when called: 2
 39533 ;; This function calls:
 39534 ;;		_fputc
 39535 ;; This function is called by:
 39536 ;;		_vfpfcnvrt
 39537 ;; This function uses a non-reentrant model
 39538 ;;
 39539                           
 39540                           	psect	text103
 39541   019102                     __ptext103:
 39542                           	callstack 0
 39543   019102                     _ctoa:
 39544                           	callstack 120
 39545                           
 39546                           ; BSR set to: 5
 39547                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 476: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 477: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 478:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 481:  
      +                             w = width ? width - 1 : width;
 39548                           
 39549                           ;incstack = 0
 39550   019102  0107               	movlb	7	; () banked
 39551   019104  5113               	movf	_width& (0+255),w,b
 39552   019106  1114               	iorwf	(_width+1)& (0+255),w,b
 39553   019108  A4D8               	btfss	status,2,c
 39554   01910A  D005               	goto	l8623
 39555                           
 39556                           ; BSR set to: 7
 39557   01910C  C713  F511         	movff	_width,ctoa@w
 39558   019110  C714  F512         	movff	_width+1,ctoa@w+1
 39559   019114  D006               	goto	l8625
 39560   019116                     l8623:
 39561                           
 39562                           ; BSR set to: 7
 39563   019116  0EFF               	movlw	255
 39564   019118  2513               	addwf	_width& (0+255),w,b
 39565   01911A  6E11               	movwf	ctoa@w^(0+1280),c
 39566   01911C  0EFF               	movlw	255
 39567   01911E  2114               	addwfc	(_width+1)& (0+255),w,b
 39568   019120  6E12               	movwf	(ctoa@w+1)^(0+1280),c
 39569   019122                     l8625:
 39570                           
 39571                           ; BSR set to: 7
 39572                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
 39573   019122  A127               	btfss	_flags& (0+255),0,b
 39574   019124  D009               	goto	l8629
 39575                           
 39576                           ; BSR set to: 7
 39577                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
 39578   019126  C50D  F502         	movff	ctoa@c,fputc@c
 39579   01912A  6A03               	clrf	(fputc@c+1)^(0+1280),c
 39580   01912C  C50B  F504         	movff	ctoa@fp,fputc@fp
 39581   019130  C50C  F505         	movff	ctoa@fp+1,fputc@fp+1
 39582   019134  EC95  F0C7         	call	_fputc	;wreg free
 39583   019138                     l8629:
 39584                           
 39585                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
 39586   019138  AE12               	btfss	(ctoa@w+1)^(0+1280),7,c
 39587   01913A  D004               	goto	l2462
 39588   01913C  0E00               	movlw	0
 39589   01913E  6E12               	movwf	(ctoa@w+1)^(0+1280),c
 39590   019140  0E00               	movlw	0
 39591   019142  6E11               	movwf	ctoa@w^(0+1280),c
 39592   019144                     l2462:
 39593                           
 39594                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 492:     l = 0;
 39595   019144  0E00               	movlw	0
 39596   019146  6E10               	movwf	(ctoa@l+1)^(0+1280),c
 39597   019148  0E00               	movlw	0
 39598   01914A  6E0F               	movwf	ctoa@l^(0+1280),c
 39599                           
 39600                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
 39601   01914C  D00C               	goto	l8639
 39602   01914E                     l8635:
 39603                           
 39604                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
 39605   01914E  0E00               	movlw	0
 39606   019150  6E03               	movwf	(fputc@c+1)^(0+1280),c
 39607   019152  0E20               	movlw	32
 39608   019154  6E02               	movwf	fputc@c^(0+1280),c
 39609   019156  C50B  F504         	movff	ctoa@fp,fputc@fp
 39610   01915A  C50C  F505         	movff	ctoa@fp+1,fputc@fp+1
 39611   01915E  EC95  F0C7         	call	_fputc	;wreg free
 39612                           
 39613                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 495:         ++l;
 39614   019162  4A0F               	infsnz	ctoa@l^(0+1280),f,c
 39615   019164  2A10               	incf	(ctoa@l+1)^(0+1280),f,c
 39616   019166                     l8639:
 39617                           
 39618                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
 39619   019166  5011               	movf	ctoa@w^(0+1280),w,c
 39620   019168  5C0F               	subwf	ctoa@l^(0+1280),w,c
 39621   01916A  5010               	movf	(ctoa@l+1)^(0+1280),w,c
 39622   01916C  0A80               	xorlw	128
 39623   01916E  6E0E               	movwf	??_ctoa^(0+1280),c
 39624   019170  5012               	movf	(ctoa@w+1)^(0+1280),w,c
 39625   019172  0A80               	xorlw	128
 39626   019174  580E               	subwfb	??_ctoa^(0+1280),w,c
 39627   019176  A0D8               	btfss	status,0,c
 39628   019178  D7EA               	goto	l8635
 39629                           
 39630                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
 39631   01917A  0107               	movlb	7	; () banked
 39632   01917C  B127               	btfsc	_flags& (0+255),0,b
 39633   01917E  0012               	return	
 39634                           
 39635                           ; BSR set to: 7
 39636                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
 39637   019180  C50D  F502         	movff	ctoa@c,fputc@c
 39638   019184  6A03               	clrf	(fputc@c+1)^(0+1280),c
 39639   019186  C50B  F504         	movff	ctoa@fp,fputc@fp
 39640   01918A  C50C  F505         	movff	ctoa@fp+1,fputc@fp+1
 39641   01918E  EC95  F0C7         	call	_fputc	;wreg free
 39642   019192  0012               	return		;funcret
 39643   019194                     __end_of_ctoa:
 39644                           	callstack 0
 39645                           
 39646 ;; *************** function _fputc *****************
 39647 ;; Defined at:
 39648 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
 39649 ;; Parameters:    Size  Location     Type
 39650 ;;  c               2    1[COMRAM] int 
 39651 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
 39652 ;;		 -> sprintf@f(12), NULL(0), 
 39653 ;; Auto vars:     Size  Location     Type
 39654 ;;		None
 39655 ;; Return value:  Size  Location     Type
 39656 ;;                  2    1[COMRAM] int 
 39657 ;; Registers used:
 39658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39659 ;; Tracked objects:
 39660 ;;		On entry : 0/5
 39661 ;;		On exit  : 0/0
 39662 ;;		Unchanged: 0/0
 39663 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39666 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39667 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39668 ;;Total ram usage:        9 bytes
 39669 ;; Hardware stack levels used: 1
 39670 ;; Hardware stack levels required when called: 1
 39671 ;; This function calls:
 39672 ;;		_putch
 39673 ;; This function is called by:
 39674 ;;		_pad
 39675 ;;		_ctoa
 39676 ;;		_stoa
 39677 ;;		_vfpfcnvrt
 39678 ;;		_fputs
 39679 ;; This function uses a non-reentrant model
 39680 ;;
 39681                           
 39682                           	psect	text104
 39683   018F2A                     __ptext104:
 39684                           	callstack 0
 39685   018F2A                     _fputc:
 39686                           	callstack 118
 39687                           
 39688                           ;incstack = 0
 39689   018F2A  5004               	movf	fputc@fp^(0+1280),w,c
 39690   018F2C  1005               	iorwf	(fputc@fp+1)^(0+1280),w,c
 39691   018F2E  B4D8               	btfsc	status,2,c
 39692   018F30  D004               	goto	u8270
 39693   018F32  5004               	movf	fputc@fp^(0+1280),w,c
 39694   018F34  1005               	iorwf	(fputc@fp+1)^(0+1280),w,c
 39695   018F36  A4D8               	btfss	status,2,c
 39696   018F38  D004               	goto	l7857
 39697   018F3A                     u8270:
 39698   018F3A  5002               	movf	fputc@c^(0+1280),w,c
 39699   018F3C  ECF2  F0CF         	call	_putch
 39700   018F40  0012               	return	
 39701   018F42                     l7857:
 39702   018F42  EE20 F00A          	lfsr	2,10
 39703   018F46  5004               	movf	fputc@fp^(0+1280),w,c
 39704   018F48  26D9               	addwf	fsr2l,f,c
 39705   018F4A  5005               	movf	(fputc@fp+1)^(0+1280),w,c
 39706   018F4C  22DA               	addwfc	fsr2h,f,c
 39707   018F4E  50DE               	movf	postinc2,w,c
 39708   018F50  10DE               	iorwf	postinc2,w,c
 39709   018F52  B4D8               	btfsc	status,2,c
 39710   018F54  D016               	goto	u8290
 39711   018F56  EE20 F00A          	lfsr	2,10
 39712   018F5A  5004               	movf	fputc@fp^(0+1280),w,c
 39713   018F5C  26D9               	addwf	fsr2l,f,c
 39714   018F5E  5005               	movf	(fputc@fp+1)^(0+1280),w,c
 39715   018F60  22DA               	addwfc	fsr2h,f,c
 39716   018F62  EE10 F003          	lfsr	1,3
 39717   018F66  5004               	movf	fputc@fp^(0+1280),w,c
 39718   018F68  26E1               	addwf	fsr1l,f,c
 39719   018F6A  5005               	movf	(fputc@fp+1)^(0+1280),w,c
 39720   018F6C  22E2               	addwfc	fsr1h,f,c
 39721   018F6E  50DE               	movf	postinc2,w,c
 39722   018F70  5CE6               	subwf	postinc1,w,c
 39723   018F72  50E6               	movf	postinc1,w,c
 39724   018F74  0A80               	xorlw	128
 39725   018F76  6E0A               	movwf	(??_fputc+4)^(0+1280),c
 39726   018F78  50DE               	movf	postinc2,w,c
 39727   018F7A  0A80               	xorlw	128
 39728   018F7C  580A               	subwfb	(??_fputc+4)^(0+1280),w,c
 39729   018F7E  B0D8               	btfsc	status,0,c
 39730   018F80  0012               	return	
 39731   018F82                     u8290:
 39732   018F82  EE20 F003          	lfsr	2,3
 39733   018F86  5004               	movf	fputc@fp^(0+1280),w,c
 39734   018F88  26D9               	addwf	fsr2l,f,c
 39735   018F8A  5005               	movf	(fputc@fp+1)^(0+1280),w,c
 39736   018F8C  22DA               	addwfc	fsr2h,f,c
 39737   018F8E  C4DE F506          	movff	postinc2,??_fputc
 39738   018F92  C4DD F507          	movff	postdec2,??_fputc+1
 39739   018F96  C504  F4D9         	movff	fputc@fp,fsr2l
 39740   018F9A  C505  F4DA         	movff	fputc@fp+1,fsr2h
 39741   018F9E  C4DE F508          	movff	postinc2,??_fputc+2
 39742   018FA2  C4DD F509          	movff	postdec2,??_fputc+3
 39743   018FA6  5006               	movf	??_fputc^(0+1280),w,c
 39744   018FA8  2408               	addwf	(??_fputc+2)^(0+1280),w,c
 39745   018FAA  6ED9               	movwf	fsr2l,c
 39746   018FAC  5007               	movf	(??_fputc+1)^(0+1280),w,c
 39747   018FAE  2009               	addwfc	(??_fputc+3)^(0+1280),w,c
 39748   018FB0  6EDA               	movwf	fsr2h,c
 39749   018FB2  C502  F4DF         	movff	fputc@c,indf2
 39750   018FB6  EE20 F003          	lfsr	2,3
 39751   018FBA  5004               	movf	fputc@fp^(0+1280),w,c
 39752   018FBC  26D9               	addwf	fsr2l,f,c
 39753   018FBE  5005               	movf	(fputc@fp+1)^(0+1280),w,c
 39754   018FC0  22DA               	addwfc	fsr2h,f,c
 39755   018FC2  2ADE               	incf	postinc2,f,c
 39756   018FC4  0E00               	movlw	0
 39757   018FC6  22DD               	addwfc	postdec2,f,c
 39758   018FC8  0012               	return		;funcret
 39759   018FCA                     __end_of_fputc:
 39760                           	callstack 0
 39761                           
 39762 ;; *************** function _putch *****************
 39763 ;; Defined at:
 39764 ;;		line 123 in file "src/io.c"
 39765 ;; Parameters:    Size  Location     Type
 39766 ;;  c               1    wreg     unsigned char 
 39767 ;; Auto vars:     Size  Location     Type
 39768 ;;  c               1    0[COMRAM] unsigned char 
 39769 ;; Return value:  Size  Location     Type
 39770 ;;                  1    wreg      void 
 39771 ;; Registers used:
 39772 ;;		wreg
 39773 ;; Tracked objects:
 39774 ;;		On entry : 0/5
 39775 ;;		On exit  : 0/0
 39776 ;;		Unchanged: 0/0
 39777 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39782 ;;Total ram usage:        1 bytes
 39783 ;; Hardware stack levels used: 1
 39784 ;; This function calls:
 39785 ;;		Nothing
 39786 ;; This function is called by:
 39787 ;;		_fputc
 39788 ;; This function uses a non-reentrant model
 39789 ;;
 39790                           
 39791                           	psect	text105
 39792   019FE4                     __ptext105:
 39793                           	callstack 0
 39794   019FE4                     _putch:
 39795                           	callstack 118
 39796                           
 39797                           ;incstack = 0
 39798                           ;putch@c stored from wreg
 39799   019FE4  6E01               	movwf	putch@c^(0+1280),c
 39800   019FE6                     
 39801                           ;src/io.c: 124:  while(!U3TXIF);
 39802   019FE6  A2B7               	btfss	1207,1,c	;volatile
 39803   019FE8  D7FE               	goto	l7847
 39804                           
 39805                           ;src/io.c: 125:  U3TXB = c;
 39806   019FEA  C501  F2C9         	movff	putch@c,713	;volatile
 39807   019FEE  0012               	return		;funcret
 39808   019FF0                     __end_of_putch:
 39809                           	callstack 0
 39810                           
 39811 ;; *************** function _SPI_SD_begin *****************
 39812 ;; Defined at:
 39813 ;;		line 64 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 39814 ;; Parameters:    Size  Location     Type
 39815 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 39816 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 39817 ;; Auto vars:     Size  Location     Type
 39818 ;;  ctx             2    2[COMRAM] PTR struct SPI_HW
 39819 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 39820 ;; Return value:  Size  Location     Type
 39821 ;;                  1    wreg      void 
 39822 ;; Registers used:
 39823 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39824 ;; Tracked objects:
 39825 ;;		On entry : 3F/7
 39826 ;;		On exit  : 3F/0
 39827 ;;		Unchanged: 0/0
 39828 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39832 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39833 ;;Total ram usage:        4 bytes
 39834 ;; Hardware stack levels used: 1
 39835 ;; This function calls:
 39836 ;;		Nothing
 39837 ;; This function is called by:
 39838 ;;		_SDCard_init
 39839 ;; This function uses a non-reentrant model
 39840 ;;
 39841                           
 39842                           	psect	text106
 39843   019D3C                     __ptext106:
 39844                           	callstack 0
 39845   019D3C                     _SPI_SD_begin:
 39846                           	callstack 124
 39847                           
 39848                           ; BSR set to: 7
 39849                           ;src/boards/../../drivers/pic18f47q43_spi.c: 64: void SPI_SD_begin(struct SPI *ctx_);src
      +                          /boards/../../drivers/pic18f47q43_spi.c: 65: {;src/boards/../../drivers/pic18f47q43_spi.
      +                          c: 66:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 39850                           
 39851                           ;incstack = 0
 39852   019D3C  C501  F503         	movff	SPI_SD_begin@ctx_,SPI_SD_begin@ctx
 39853   019D40  C502  F504         	movff	SPI_SD_begin@ctx_+1,SPI_SD_begin@ctx+1
 39854                           
 39855                           ; BSR set to: 7
 39856                           ;src/boards/../../drivers/pic18f47q43_spi.c: 67:     ctx->bus_acquired = 0;
 39857   019D44  EE20 F002          	lfsr	2,2
 39858   019D48  5003               	movf	SPI_SD_begin@ctx^(0+1280),w,c
 39859   019D4A  26D9               	addwf	fsr2l,f,c
 39860   019D4C  5004               	movf	(SPI_SD_begin@ctx+1)^(0+1280),w,c
 39861   019D4E  22DA               	addwfc	fsr2h,f,c
 39862   019D50  6ADF               	clrf	indf2,c
 39863                           
 39864                           ; BSR set to: 7
 39865                           ;src/boards/../../drivers/pic18f47q43_spi.c: 69:     SPI1CON0 = 0;
 39866   019D52  0E00               	movlw	0
 39867   019D54  0100               	movlb	0	; () banked
 39868   019D56  6F84               	movwf	132,b	;volatile
 39869                           
 39870                           ; BSR set to: 0
 39871                           ;src/boards/../../drivers/pic18f47q43_spi.c: 70:     SPI1CON1 = 0;
 39872   019D58  0E00               	movlw	0
 39873   019D5A  6F85               	movwf	133,b	;volatile
 39874                           
 39875                           ; BSR set to: 0
 39876                           ;src/boards/../../drivers/pic18f47q43_spi.c: 71:     SPI1SCKPPS = ((2 << 3) | 0);
 39877   019D5C  0E10               	movlw	16
 39878   019D5E  0102               	movlb	2	; () banked
 39879   019D60  6F6A               	movwf	106,b	;volatile
 39880                           
 39881                           ; BSR set to: 2
 39882                           ;src/boards/../../drivers/pic18f47q43_spi.c: 72:     SPI1SDIPPS = ((2 << 3) | 2);
 39883   019D62  0E12               	movlw	18
 39884   019D64  6F6B               	movwf	107,b	;volatile
 39885                           
 39886                           ; BSR set to: 2
 39887                           ;src/boards/../../drivers/pic18f47q43_spi.c: 78:     {;src/boards/../../drivers/pic18f47
      +                          q43_spi.c: 79:     TRISC4 = 0;
 39888   019D66  98C8               	bcf	1224,4,c	;volatile
 39889                           
 39890                           ; BSR set to: 2
 39891                           ;src/boards/../../drivers/pic18f47q43_spi.c: 80:     };src/boards/../../drivers/pic18f47
      +                          q43_spi.c: 81:     SPI1CON0bits.EN = 1;
 39892   019D68  0100               	movlb	0	; () banked
 39893   019D6A  8F84               	bsf	132,7,b	;volatile
 39894                           
 39895                           ; BSR set to: 0
 39896   019D6C  0012               	return		;funcret
 39897   019D6E                     __end_of_SPI_SD_begin:
 39898                           	callstack 0
 39899                           
 39900 ;; *************** function _SDCard_command *****************
 39901 ;; Defined at:
 39902 ;;		line 316 in file "src/boards/../../drivers/SDCard.c"
 39903 ;; Parameters:    Size  Location     Type
 39904 ;;  command         1    wreg     unsigned char 
 39905 ;;  argument        4   39[COMRAM] unsigned long 
 39906 ;;  response_buf    2   43[COMRAM] PTR void 
 39907 ;;		 -> SDCard_init@buf(5), 
 39908 ;;  length          2   45[COMRAM] unsigned int 
 39909 ;; Auto vars:     Size  Location     Type
 39910 ;;  command         1   49[COMRAM] unsigned char 
 39911 ;;  responsep       2   52[COMRAM] PTR unsigned char 
 39912 ;;		 -> SDCard_init@buf(5), 
 39913 ;;  result          2   50[COMRAM] int 
 39914 ;;  spi             2   47[COMRAM] PTR struct SPI
 39915 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 39916 ;; Return value:  Size  Location     Type
 39917 ;;                  2   39[COMRAM] int 
 39918 ;; Registers used:
 39919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39920 ;; Tracked objects:
 39921 ;;		On entry : 0/0
 39922 ;;		On exit  : 0/0
 39923 ;;		Unchanged: 0/0
 39924 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39925 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39926 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39928 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39929 ;;Total ram usage:       15 bytes
 39930 ;; Hardware stack levels used: 1
 39931 ;; Hardware stack levels required when called: 4
 39932 ;; This function calls:
 39933 ;;		_SDCard_end_transaction
 39934 ;;		_SPI_SD_receive
 39935 ;;		___SDCard_command_r1
 39936 ;; This function is called by:
 39937 ;;		_SDCard_init
 39938 ;; This function uses a non-reentrant model
 39939 ;;
 39940                           
 39941                           	psect	text107
 39942   0195EA                     __ptext107:
 39943                           	callstack 0
 39944   0195EA                     _SDCard_command:
 39945                           	callstack 120
 39946                           
 39947                           ; BSR set to: 0
 39948                           ;incstack = 0
 39949                           ;SDCard_command@command stored from wreg
 39950   0195EA  6E32               	movwf	SDCard_command@command^(0+1280),c
 39951                           
 39952                           ;src/boards/../../drivers/SDCard.c: 316: int SDCard_command(uint8_t command, uint32_t ar
      +                          gument, void *response_buffer, unsigned int length);src/boards/../../drivers/SDCard.c: 3
      +                          17: {;src/boards/../../drivers/SDCard.c: 318:     struct SPI *spi = ctx_.spi;
 39953   0195EC  C706  F530         	movff	_ctx_,SDCard_command@spi
 39954   0195F0  C707  F531         	movff	_ctx_+1,SDCard_command@spi+1
 39955                           
 39956                           ;src/boards/../../drivers/SDCard.c: 319:     int result;;src/boards/../../drivers/SDCard
      +                          .c: 320:     uint8_t *responsep = (uint8_t*)response_buffer;
 39957   0195F4  C52C  F535         	movff	SDCard_command@response_buffer,SDCard_command@responsep
 39958   0195F8  C52D  F536         	movff	SDCard_command@response_buffer+1,SDCard_command@responsep+1
 39959                           
 39960                           ;src/boards/../../drivers/SDCard.c: 322:     result = __SDCard_command_r1(command, argum
      +                          ent, responsep);
 39961   0195FC  C528  F518         	movff	SDCard_command@argument,___SDCard_command_r1@argument
 39962   019600  C529  F519         	movff	SDCard_command@argument+1,___SDCard_command_r1@argument+1
 39963   019604  C52A  F51A         	movff	SDCard_command@argument+2,___SDCard_command_r1@argument+2
 39964   019608  C52B  F51B         	movff	SDCard_command@argument+3,___SDCard_command_r1@argument+3
 39965   01960C  C535  F51C         	movff	SDCard_command@responsep,___SDCard_command_r1@r1
 39966   019610  C536  F51D         	movff	SDCard_command@responsep+1,___SDCard_command_r1@r1+1
 39967   019614  5032               	movf	SDCard_command@command^(0+1280),w,c
 39968   019616  EC40  F0C7         	call	___SDCard_command_r1
 39969   01961A  C518  F533         	movff	?___SDCard_command_r1,SDCard_command@result
 39970   01961E  C519  F534         	movff	?___SDCard_command_r1+1,SDCard_command@result+1
 39971                           
 39972                           ;src/boards/../../drivers/SDCard.c: 323:     if (result != 0) {
 39973   019622  5033               	movf	SDCard_command@result^(0+1280),w,c
 39974   019624  1034               	iorwf	(SDCard_command@result+1)^(0+1280),w,c
 39975   019626  B4D8               	btfsc	status,2,c
 39976   019628  D003               	goto	l11453
 39977                           
 39978                           ;src/boards/../../drivers/SDCard.c: 324:         SDCard_end_transaction();
 39979   01962A  EC12  F0CF         	call	_SDCard_end_transaction	;wreg free
 39980   01962E  0012               	return	
 39981   019630                     l11453:
 39982                           
 39983                           ;src/boards/../../drivers/SDCard.c: 328:     SPI_SD_receive(spi, &responsep[1], length -
      +                           1);
 39984   019630  C530  F501         	movff	SDCard_command@spi,SPI_SD_receive@ctx_
 39985   019634  C531  F502         	movff	SDCard_command@spi+1,SPI_SD_receive@ctx_+1
 39986   019638  0E01               	movlw	1
 39987   01963A  2435               	addwf	SDCard_command@responsep^(0+1280),w,c
 39988   01963C  6E03               	movwf	SPI_SD_receive@buf^(0+1280),c
 39989   01963E  0E00               	movlw	0
 39990   019640  2036               	addwfc	(SDCard_command@responsep+1)^(0+1280),w,c
 39991   019642  6E04               	movwf	(SPI_SD_receive@buf+1)^(0+1280),c
 39992   019644  0EFF               	movlw	255
 39993   019646  242E               	addwf	SDCard_command@length^(0+1280),w,c
 39994   019648  6E05               	movwf	SPI_SD_receive@count^(0+1280),c
 39995   01964A  0EFF               	movlw	255
 39996   01964C  202F               	addwfc	(SDCard_command@length+1)^(0+1280),w,c
 39997   01964E  6E06               	movwf	(SPI_SD_receive@count+1)^(0+1280),c
 39998   019650  ECE0  F0AB         	call	_SPI_SD_receive	;wreg free
 39999                           
 40000                           ;src/boards/../../drivers/SDCard.c: 329:     SDCard_end_transaction();
 40001   019654  EC12  F0CF         	call	_SDCard_end_transaction	;wreg free
 40002   019658  0012               	return		;funcret
 40003   01965A                     __end_of_SDCard_command:
 40004                           	callstack 0
 40005                           
 40006 ;; *************** function ___SDCard_command_r1 *****************
 40007 ;; Defined at:
 40008 ;;		line 143 in file "src/boards/../../drivers/SDCard.c"
 40009 ;; Parameters:    Size  Location     Type
 40010 ;;  command         1    wreg     unsigned char 
 40011 ;;  argument        4   23[COMRAM] unsigned long 
 40012 ;;  r1              2   27[COMRAM] PTR unsigned char 
 40013 ;;		 -> SDCard_write512@response(1), SDCard_read512@response(1), SDCard_init@buf(5), 
 40014 ;; Auto vars:     Size  Location     Type
 40015 ;;  command         1   29[COMRAM] unsigned char 
 40016 ;;  buf             6   30[COMRAM] unsigned char [6]
 40017 ;;  spi             2   37[COMRAM] PTR struct SPI
 40018 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40019 ;;  response        1   36[COMRAM] unsigned char 
 40020 ;; Return value:  Size  Location     Type
 40021 ;;                  2   23[COMRAM] int 
 40022 ;; Registers used:
 40023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40024 ;; Tracked objects:
 40025 ;;		On entry : 0/5
 40026 ;;		On exit  : 0/0
 40027 ;;		Unchanged: 0/0
 40028 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40029 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40030 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40032 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40033 ;;Total ram usage:       16 bytes
 40034 ;; Hardware stack levels used: 1
 40035 ;; Hardware stack levels required when called: 3
 40036 ;; This function calls:
 40037 ;;		_SDCard_crc
 40038 ;;		_SPI_SD_begin_transaction
 40039 ;;		_SPI_SD_dummy_clocks
 40040 ;;		_SPI_SD_send
 40041 ;;		___SDCard_wait_response
 40042 ;; This function is called by:
 40043 ;;		_SDCard_read512
 40044 ;;		_SDCard_write512
 40045 ;;		_SDCard_command
 40046 ;; This function uses a non-reentrant model
 40047 ;;
 40048                           
 40049                           	psect	text108
 40050   018E80                     __ptext108:
 40051                           	callstack 0
 40052   018E80                     ___SDCard_command_r1:
 40053                           	callstack 115
 40054                           
 40055                           ;incstack = 0
 40056                           ;___SDCard_command_r1@command stored from wreg
 40057   018E80  6E1E               	movwf	___SDCard_command_r1@command^(0+1280),c
 40058                           
 40059                           ;src/boards/../../drivers/SDCard.c: 143: static int __SDCard_command_r1(uint8_t command,
      +                           uint32_t argument, uint8_t *r1);src/boards/../../drivers/SDCard.c: 144: {;src/boards/..
      +                          /../drivers/SDCard.c: 145:     struct SPI *spi = ctx_.spi;
 40060   018E82  C706  F526         	movff	_ctx_,___SDCard_command_r1@spi
 40061   018E86  C707  F527         	movff	_ctx_+1,___SDCard_command_r1@spi+1
 40062                           
 40063                           ;src/boards/../../drivers/SDCard.c: 146:     uint8_t buf[6];;src/boards/../../drivers/SD
      +                          Card.c: 147:     uint8_t response;;src/boards/../../drivers/SDCard.c: 149:     buf[0] = 
      +                          command | 0x40;
 40064   018E8A  501E               	movf	___SDCard_command_r1@command^(0+1280),w,c
 40065   018E8C  0940               	iorlw	64
 40066   018E8E  6E1F               	movwf	___SDCard_command_r1@buf^(0+1280),c
 40067                           
 40068                           ;src/boards/../../drivers/SDCard.c: 150:     buf[1] = (argument >> 24) & 0xff;
 40069   018E90  C51B  F520         	movff	___SDCard_command_r1@argument+3,___SDCard_command_r1@buf+1
 40070                           
 40071                           ;src/boards/../../drivers/SDCard.c: 151:     buf[2] = (argument >> 16) & 0xff;
 40072   018E94  C51A  F521         	movff	___SDCard_command_r1@argument+2,___SDCard_command_r1@buf+2
 40073                           
 40074                           ;src/boards/../../drivers/SDCard.c: 152:     buf[3] = (argument >> 8) & 0xff;
 40075   018E98  C519  F522         	movff	___SDCard_command_r1@argument+1,___SDCard_command_r1@buf+3
 40076                           
 40077                           ;src/boards/../../drivers/SDCard.c: 153:     buf[4] = (argument >> 0) & 0xff;
 40078   018E9C  C518  F523         	movff	___SDCard_command_r1@argument,___SDCard_command_r1@buf+4
 40079                           
 40080                           ;src/boards/../../drivers/SDCard.c: 154:     buf[5] = SDCard_crc(buf, 5) | 0x01;
 40081   018EA0  0E1F               	movlw	low ___SDCard_command_r1@buf
 40082   018EA2  6E01               	movwf	SDCard_crc@buf^(0+1280),c
 40083   018EA4  0E05               	movlw	high ___SDCard_command_r1@buf
 40084   018EA6  6E02               	movwf	(SDCard_crc@buf+1)^(0+1280),c
 40085   018EA8  0E00               	movlw	0
 40086   018EAA  6E04               	movwf	(SDCard_crc@count+1)^(0+1280),c
 40087   018EAC  0E05               	movlw	5
 40088   018EAE  6E03               	movwf	SDCard_crc@count^(0+1280),c
 40089   018EB0  ECFE  F0CB         	call	_SDCard_crc	;wreg free
 40090   018EB4  0901               	iorlw	1
 40091   018EB6  6E24               	movwf	(___SDCard_command_r1@buf+5)^(0+1280),c
 40092                           
 40093                           ;src/boards/../../drivers/SDCard.c: 156:     SPI_SD_begin_transaction(spi);
 40094   018EB8  C526  F505         	movff	___SDCard_command_r1@spi,SPI_SD_begin_transaction@ctx_
 40095   018EBC  C527  F506         	movff	___SDCard_command_r1@spi+1,SPI_SD_begin_transaction@ctx_+1
 40096   018EC0  EC98  F0CF         	call	_SPI_SD_begin_transaction	;wreg free
 40097                           
 40098                           ;src/boards/../../drivers/SDCard.c: 157:     SPI_SD_dummy_clocks(spi, 1);
 40099   018EC4  C526  F50B         	movff	___SDCard_command_r1@spi,SPI_SD_dummy_clocks@ctx_
 40100   018EC8  C527  F50C         	movff	___SDCard_command_r1@spi+1,SPI_SD_dummy_clocks@ctx_+1
 40101   018ECC  0E00               	movlw	0
 40102   018ECE  6E0E               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 40103   018ED0  0E01               	movlw	1
 40104   018ED2  6E0D               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 40105   018ED4  EC84  F0CC         	call	_SPI_SD_dummy_clocks	;wreg free
 40106                           
 40107                           ;src/boards/../../drivers/SDCard.c: 158:     SPI_SD_send(spi, buf, 6);
 40108   018ED8  C526  F501         	movff	___SDCard_command_r1@spi,SPI_SD_send@ctx_
 40109   018EDC  C527  F502         	movff	___SDCard_command_r1@spi+1,SPI_SD_send@ctx_+1
 40110   018EE0  0E1F               	movlw	low ___SDCard_command_r1@buf
 40111   018EE2  6E03               	movwf	SPI_SD_send@buf^(0+1280),c
 40112   018EE4  0E05               	movlw	high ___SDCard_command_r1@buf
 40113   018EE6  6E04               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 40114   018EE8  0E00               	movlw	0
 40115   018EEA  6E06               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 40116   018EEC  0E06               	movlw	6
 40117   018EEE  6E05               	movwf	SPI_SD_send@count^(0+1280),c
 40118   018EF0  EC9A  F0CB         	call	_SPI_SD_send	;wreg free
 40119                           
 40120                           ;src/boards/../../drivers/SDCard.c: 160:     response = __SDCard_wait_response(0xff, ctx
      +                          _.timeout);
 40121   018EF4  C708  F512         	movff	_ctx_+2,___SDCard_wait_response@attempts
 40122   018EF8  C709  F513         	movff	_ctx_+3,___SDCard_wait_response@attempts+1
 40123   018EFC  0EFF               	movlw	255
 40124   018EFE  ECB7  F0CE         	call	___SDCard_wait_response
 40125   018F02  6E25               	movwf	___SDCard_command_r1@response^(0+1280),c
 40126                           
 40127                           ;src/boards/../../drivers/SDCard.c: 161:     *r1 = response;
 40128   018F04  C51C  F4D9         	movff	___SDCard_command_r1@r1,fsr2l
 40129   018F08  C51D  F4DA         	movff	___SDCard_command_r1@r1+1,fsr2h
 40130   018F0C  C525  F4DF         	movff	___SDCard_command_r1@response,indf2
 40131                           
 40132                           ;src/boards/../../drivers/SDCard.c: 162:     if (response == 0xff) {
 40133   018F10  2825               	incf	___SDCard_command_r1@response^(0+1280),w,c
 40134   018F12  A4D8               	btfss	status,2,c
 40135   018F14  D005               	goto	l9505
 40136                           
 40137                           ;src/boards/../../drivers/SDCard.c: 163:         return 1;
 40138   018F16  0E00               	movlw	0
 40139   018F18  6E19               	movwf	(?___SDCard_command_r1+1)^(0+1280),c
 40140   018F1A  0E01               	movlw	1
 40141   018F1C  6E18               	movwf	?___SDCard_command_r1^(0+1280),c
 40142   018F1E  0012               	return	
 40143   018F20                     l9505:
 40144                           
 40145                           ;src/boards/../../drivers/SDCard.c: 166:     return 0;
 40146   018F20  0E00               	movlw	0
 40147   018F22  6E19               	movwf	(?___SDCard_command_r1+1)^(0+1280),c
 40148   018F24  0E00               	movlw	0
 40149   018F26  6E18               	movwf	?___SDCard_command_r1^(0+1280),c
 40150   018F28  0012               	return		;funcret
 40151   018F2A                     __end_of___SDCard_command_r1:
 40152                           	callstack 0
 40153                           
 40154 ;; *************** function ___SDCard_wait_response *****************
 40155 ;; Defined at:
 40156 ;;		line 133 in file "src/boards/../../drivers/SDCard.c"
 40157 ;; Parameters:    Size  Location     Type
 40158 ;;  no_response     1    wreg     unsigned char 
 40159 ;;  attempts        2   17[COMRAM] unsigned int 
 40160 ;; Auto vars:     Size  Location     Type
 40161 ;;  no_response     1   21[COMRAM] unsigned char 
 40162 ;;  spi             2   19[COMRAM] PTR struct SPI
 40163 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40164 ;;  response        1   22[COMRAM] unsigned char 
 40165 ;; Return value:  Size  Location     Type
 40166 ;;                  1    wreg      unsigned char 
 40167 ;; Registers used:
 40168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40169 ;; Tracked objects:
 40170 ;;		On entry : 0/5
 40171 ;;		On exit  : 0/0
 40172 ;;		Unchanged: 0/0
 40173 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40175 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40177 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40178 ;;Total ram usage:        6 bytes
 40179 ;; Hardware stack levels used: 1
 40180 ;; Hardware stack levels required when called: 2
 40181 ;; This function calls:
 40182 ;;		_SPI_SD_receive_byte
 40183 ;; This function is called by:
 40184 ;;		___SDCard_command_r1
 40185 ;;		_SDCard_read512
 40186 ;;		_SDCard_write512
 40187 ;; This function uses a non-reentrant model
 40188 ;;
 40189                           
 40190                           	psect	text109
 40191   019D6E                     __ptext109:
 40192                           	callstack 0
 40193   019D6E                     ___SDCard_wait_response:
 40194                           	callstack 116
 40195                           
 40196                           ;incstack = 0
 40197                           ;___SDCard_wait_response@no_response stored from wreg
 40198   019D6E  6E16               	movwf	___SDCard_wait_response@no_response^(0+1280),c
 40199                           
 40200                           ;src/boards/../../drivers/SDCard.c: 133: static uint8_t __SDCard_wait_response(uint8_t n
      +                          o_response, unsigned int attempts);src/boards/../../drivers/SDCard.c: 134: {;src/boards/
      +                          ../../drivers/SDCard.c: 135:     struct SPI *spi = ctx_.spi;
 40201   019D70  C706  F514         	movff	_ctx_,___SDCard_wait_response@spi
 40202   019D74  C707  F515         	movff	_ctx_+1,___SDCard_wait_response@spi+1
 40203   019D78                     l9405:
 40204                           
 40205                           ;src/boards/../../drivers/SDCard.c: 138:         response = SPI_SD_receive_byte(spi);
 40206   019D78  C514  F50F         	movff	___SDCard_wait_response@spi,SPI_SD_receive_byte@ctx_
 40207   019D7C  C515  F510         	movff	___SDCard_wait_response@spi+1,SPI_SD_receive_byte@ctx_+1
 40208   019D80  EC87  F0CF         	call	_SPI_SD_receive_byte	;wreg free
 40209   019D84  6E17               	movwf	___SDCard_wait_response@response^(0+1280),c
 40210                           
 40211                           ;src/boards/../../drivers/SDCard.c: 139:     } while ((response == no_response) && 0 < -
      +                          -attempts);
 40212   019D86  5016               	movf	___SDCard_wait_response@no_response^(0+1280),w,c
 40213   019D88  1817               	xorwf	___SDCard_wait_response@response^(0+1280),w,c
 40214   019D8A  A4D8               	btfss	status,2,c
 40215   019D8C  D007               	goto	u10880
 40216   019D8E  0612               	decf	___SDCard_wait_response@attempts^(0+1280),f,c
 40217   019D90  A0D8               	btfss	status,0,c
 40218   019D92  0613               	decf	(___SDCard_wait_response@attempts+1)^(0+1280),f,c
 40219   019D94  5012               	movf	___SDCard_wait_response@attempts^(0+1280),w,c
 40220   019D96  1013               	iorwf	(___SDCard_wait_response@attempts+1)^(0+1280),w,c
 40221   019D98  A4D8               	btfss	status,2,c
 40222   019D9A  D7EE               	goto	l9405
 40223   019D9C                     u10880:
 40224                           
 40225                           ;src/boards/../../drivers/SDCard.c: 140:     return response;
 40226   019D9C  5017               	movf	___SDCard_wait_response@response^(0+1280),w,c
 40227   019D9E  0012               	return		;funcret
 40228   019DA0                     __end_of___SDCard_wait_response:
 40229                           	callstack 0
 40230                           
 40231 ;; *************** function _SPI_SD_receive_byte *****************
 40232 ;; Defined at:
 40233 ;;		line 275 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 40234 ;; Parameters:    Size  Location     Type
 40235 ;;  ctx_            2   14[COMRAM] PTR struct SPI
 40236 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40237 ;; Auto vars:     Size  Location     Type
 40238 ;;  dummy           1   16[COMRAM] unsigned char 
 40239 ;; Return value:  Size  Location     Type
 40240 ;;                  1    wreg      unsigned char 
 40241 ;; Registers used:
 40242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40243 ;; Tracked objects:
 40244 ;;		On entry : 0/5
 40245 ;;		On exit  : 0/0
 40246 ;;		Unchanged: 0/0
 40247 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40251 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40252 ;;Total ram usage:        3 bytes
 40253 ;; Hardware stack levels used: 1
 40254 ;; Hardware stack levels required when called: 1
 40255 ;; This function calls:
 40256 ;;		_SPI_SD_receive
 40257 ;; This function is called by:
 40258 ;;		___SDCard_wait_response
 40259 ;;		_SDCard_read512
 40260 ;; This function uses a non-reentrant model
 40261 ;;
 40262                           
 40263                           	psect	text110
 40264   019F0E                     __ptext110:
 40265                           	callstack 0
 40266   019F0E                     _SPI_SD_receive_byte:
 40267                           	callstack 116
 40268                           
 40269                           ;src/boards/../../drivers/pic18f47q43_spi.c: 275: uint8_t SPI_SD_receive_byte(struct SPI
      +                           *ctx_);src/boards/../../drivers/pic18f47q43_spi.c: 276: {;src/boards/../../drivers/pic1
      +                          8f47q43_spi.c: 277:     uint8_t dummy = 0xff;
 40270                           
 40271                           ;incstack = 0
 40272   019F0E  6811               	setf	SPI_SD_receive_byte@dummy^(0+1280),c
 40273                           
 40274                           ;src/boards/../../drivers/pic18f47q43_spi.c: 278:     SPI_SD_receive(ctx_, &dummy, 1);
 40275   019F10  C50F  F501         	movff	SPI_SD_receive_byte@ctx_,SPI_SD_receive@ctx_
 40276   019F14  C510  F502         	movff	SPI_SD_receive_byte@ctx_+1,SPI_SD_receive@ctx_+1
 40277   019F18  0E11               	movlw	low SPI_SD_receive_byte@dummy
 40278   019F1A  6E03               	movwf	SPI_SD_receive@buf^(0+1280),c
 40279   019F1C  0E05               	movlw	high SPI_SD_receive_byte@dummy
 40280   019F1E  6E04               	movwf	(SPI_SD_receive@buf+1)^(0+1280),c
 40281   019F20  0E00               	movlw	0
 40282   019F22  6E06               	movwf	(SPI_SD_receive@count+1)^(0+1280),c
 40283   019F24  0E01               	movlw	1
 40284   019F26  6E05               	movwf	SPI_SD_receive@count^(0+1280),c
 40285   019F28  ECE0  F0AB         	call	_SPI_SD_receive	;wreg free
 40286                           
 40287                           ;src/boards/../../drivers/pic18f47q43_spi.c: 279:     return dummy;
 40288   019F2C  5011               	movf	SPI_SD_receive_byte@dummy^(0+1280),w,c
 40289   019F2E  0012               	return		;funcret
 40290   019F30                     __end_of_SPI_SD_receive_byte:
 40291                           	callstack 0
 40292                           
 40293 ;; *************** function _SPI_SD_receive *****************
 40294 ;; Defined at:
 40295 ;;		line 191 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 40296 ;; Parameters:    Size  Location     Type
 40297 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 40298 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40299 ;;  buf             2    2[COMRAM] PTR void 
 40300 ;;		 -> fs(560), SDCard_init@buf(5), SPI_SD_receive_byte@dummy(1), disk_buf(128), 
 40301 ;;		 -> files(3276), NULL(0), disk_initialize@buf(128), 
 40302 ;;  count           2    4[COMRAM] unsigned int 
 40303 ;; Auto vars:     Size  Location     Type
 40304 ;;  i               1   11[COMRAM] unsigned char 
 40305 ;;  i               2    8[COMRAM] int 
 40306 ;;  repeat          1   10[COMRAM] unsigned char 
 40307 ;;  p               2   12[COMRAM] PTR unsigned char 
 40308 ;;		 -> fs(560), SDCard_init@buf(5), SPI_SD_receive_byte@dummy(1), disk_buf(128), 
 40309 ;;		 -> files(3276), NULL(0), disk_initialize@buf(128), 
 40310 ;; Return value:  Size  Location     Type
 40311 ;;                  1    wreg      void 
 40312 ;; Registers used:
 40313 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40314 ;; Tracked objects:
 40315 ;;		On entry : 0/5
 40316 ;;		On exit  : 0/0
 40317 ;;		Unchanged: 0/0
 40318 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40319 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40320 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40322 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40323 ;;Total ram usage:       14 bytes
 40324 ;; Hardware stack levels used: 1
 40325 ;; This function calls:
 40326 ;;		Nothing
 40327 ;; This function is called by:
 40328 ;;		_SPI_SD_receive_byte
 40329 ;;		_SDCard_read512
 40330 ;;		_SDCard_command
 40331 ;; This function uses a non-reentrant model
 40332 ;;
 40333                           
 40334                           	psect	text111
 40335   0157C0                     __ptext111:
 40336                           	callstack 0
 40337   0157C0                     _SPI_SD_receive:
 40338                           	callstack 116
 40339                           
 40340                           ;src/boards/../../drivers/pic18f47q43_spi.c: 191: void SPI_SD_receive(struct SPI *ctx_, 
      +                          void *buf, unsigned int count);src/boards/../../drivers/pic18f47q43_spi.c: 192: {;src/bo
      +                          ards/../../drivers/pic18f47q43_spi.c: 193:     uint8_t *p = (uint8_t*)buf;
 40341                           
 40342                           ;incstack = 0
 40343   0157C0  C503  F50D         	movff	SPI_SD_receive@buf,SPI_SD_receive@p
 40344   0157C4  C504  F50E         	movff	SPI_SD_receive@buf+1,SPI_SD_receive@p+1
 40345                           
 40346                           ;src/boards/../../drivers/pic18f47q43_spi.c: 195:     if (count == 0)
 40347   0157C8  5005               	movf	SPI_SD_receive@count^(0+1280),w,c
 40348   0157CA  1006               	iorwf	(SPI_SD_receive@count+1)^(0+1280),w,c
 40349   0157CC  B4D8               	btfsc	status,2,c
 40350   0157CE  0012               	return	
 40351                           
 40352                           ;src/boards/../../drivers/pic18f47q43_spi.c: 198:     SPI1TCNTH = (count >> 8);
 40353   0157D0  C506  F083         	movff	SPI_SD_receive@count+1,131	;volatile
 40354                           
 40355                           ;src/boards/../../drivers/pic18f47q43_spi.c: 199:     SPI1TCNTL = (count & 0xff);
 40356   0157D4  C505  F082         	movff	SPI_SD_receive@count,130	;volatile
 40357                           
 40358                           ;src/boards/../../drivers/pic18f47q43_spi.c: 201:     if ((count & 0x07) || 255 < count 
      +                          / 8) {
 40359   0157D8  C505  F507         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 40360   0157DC  0E07               	movlw	7
 40361   0157DE  1607               	andwf	??_SPI_SD_receive^(0+1280),f,c
 40362   0157E0  A4D8               	btfss	status,2,c
 40363   0157E2  D010               	goto	u10410
 40364   0157E4  C505  F507         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 40365   0157E8  C506  F508         	movff	SPI_SD_receive@count+1,??_SPI_SD_receive+1
 40366   0157EC  90D8               	bcf	status,0,c
 40367   0157EE  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40368   0157F0  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40369   0157F2  90D8               	bcf	status,0,c
 40370   0157F4  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40371   0157F6  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40372   0157F8  90D8               	bcf	status,0,c
 40373   0157FA  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40374   0157FC  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40375   0157FE  0408               	decf	(??_SPI_SD_receive+1)^(0+1280),w,c
 40376   015800  A0D8               	btfss	status,0,c
 40377   015802  D026               	goto	l1444
 40378   015804                     u10410:
 40379                           
 40380                           ;src/boards/../../drivers/pic18f47q43_spi.c: 202:         SPI1TXB = 0xff;
 40381   015804  0100               	movlb	0	; () banked
 40382   015806  6981               	setf	129,b	;volatile
 40383                           
 40384                           ; BSR set to: 0
 40385                           ;src/boards/../../drivers/pic18f47q43_spi.c: 203:         for (int i = 1; i < count; i++
      +                          ) {
 40386   015808  0E00               	movlw	0
 40387   01580A  6E0A               	movwf	(SPI_SD_receive@i+1)^(0+1280),c
 40388   01580C  0E01               	movlw	1
 40389   01580E  6E09               	movwf	SPI_SD_receive@i^(0+1280),c
 40390   015810  D00E               	goto	l9045
 40391   015812                     l1448:
 40392                           
 40393                           ;src/boards/../../drivers/pic18f47q43_spi.c: 204:             SPI1TXB = 0xff;
 40394   015812  0100               	movlb	0	; () banked
 40395   015814  6981               	setf	129,b	;volatile
 40396   015816                     l1449:
 40397   015816  A0B1               	btfss	1201,0,c	;volatile
 40398   015818  D7FE               	goto	l1449
 40399                           
 40400                           ;src/boards/../../drivers/pic18f47q43_spi.c: 206:             *p++ = SPI1RXB;
 40401   01581A  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40402   01581E  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40403   015822  C080 F4DF          	movff	128,indf2	;volatile
 40404   015826  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40405   015828  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40406                           
 40407                           ;src/boards/../../drivers/pic18f47q43_spi.c: 207:         }
 40408   01582A  4A09               	infsnz	SPI_SD_receive@i^(0+1280),f,c
 40409   01582C  2A0A               	incf	(SPI_SD_receive@i+1)^(0+1280),f,c
 40410   01582E                     l9045:
 40411   01582E  5005               	movf	SPI_SD_receive@count^(0+1280),w,c
 40412   015830  5C09               	subwf	SPI_SD_receive@i^(0+1280),w,c
 40413   015832  5006               	movf	(SPI_SD_receive@count+1)^(0+1280),w,c
 40414   015834  580A               	subwfb	(SPI_SD_receive@i+1)^(0+1280),w,c
 40415   015836  A0D8               	btfss	status,0,c
 40416   015838  D7EC               	goto	l1448
 40417   01583A                     u10430:
 40418   01583A  A0B1               	btfss	1201,0,c	;volatile
 40419   01583C  D7FE               	goto	u10430
 40420   01583E                     u10440:
 40421                           
 40422                           ;src/boards/../../drivers/pic18f47q43_spi.c: 209:         *p++ = SPI1RXB;
 40423   01583E  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40424   015842  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40425   015846  C080 F4DF          	movff	128,indf2	;volatile
 40426   01584A  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40427   01584C  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40428                           
 40429                           ;src/boards/../../drivers/pic18f47q43_spi.c: 210:     } else {
 40430   01584E  0012               	return	
 40431   015850                     l1444:
 40432                           
 40433                           ;src/boards/../../drivers/pic18f47q43_spi.c: 211:         SPI1TXB = 0xff;
 40434   015850  0100               	movlb	0	; () banked
 40435   015852  6981               	setf	129,b	;volatile
 40436                           
 40437                           ;src/boards/../../drivers/pic18f47q43_spi.c: 212:         SPI1TXB = 0xff;
 40438   015854  6981               	setf	129,b	;volatile
 40439   015856                     l1457:
 40440   015856  A0B1               	btfss	1201,0,c	;volatile
 40441   015858  D7FE               	goto	l1457
 40442                           
 40443                           ;src/boards/../../drivers/pic18f47q43_spi.c: 214:         *p++ = SPI1RXB;
 40444   01585A  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40445   01585E  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40446   015862  C080 F4DF          	movff	128,indf2	;volatile
 40447   015866  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40448   015868  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40449                           
 40450                           ;src/boards/../../drivers/pic18f47q43_spi.c: 215:         SPI1TXB = 0xff;
 40451   01586A  0100               	movlb	0	; () banked
 40452   01586C  6981               	setf	129,b	;volatile
 40453   01586E                     l1460:
 40454   01586E  A0B1               	btfss	1201,0,c	;volatile
 40455   015870  D7FE               	goto	l1460
 40456                           
 40457                           ;src/boards/../../drivers/pic18f47q43_spi.c: 217:         *p++ = SPI1RXB;
 40458   015872  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40459   015876  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40460   01587A  C080 F4DF          	movff	128,indf2	;volatile
 40461   01587E  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40462   015880  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40463                           
 40464                           ;src/boards/../../drivers/pic18f47q43_spi.c: 218:         SPI1TXB = 0xff;
 40465   015882  0100               	movlb	0	; () banked
 40466   015884  6981               	setf	129,b	;volatile
 40467   015886                     l1463:
 40468   015886  A0B1               	btfss	1201,0,c	;volatile
 40469   015888  D7FE               	goto	l1463
 40470                           
 40471                           ;src/boards/../../drivers/pic18f47q43_spi.c: 220:         *p++ = SPI1RXB;
 40472   01588A  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40473   01588E  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40474   015892  C080 F4DF          	movff	128,indf2	;volatile
 40475   015896  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40476   015898  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40477                           
 40478                           ;src/boards/../../drivers/pic18f47q43_spi.c: 221:         SPI1TXB = 0xff;
 40479   01589A  0100               	movlb	0	; () banked
 40480   01589C  6981               	setf	129,b	;volatile
 40481   01589E                     l1466:
 40482   01589E  A0B1               	btfss	1201,0,c	;volatile
 40483   0158A0  D7FE               	goto	l1466
 40484                           
 40485                           ;src/boards/../../drivers/pic18f47q43_spi.c: 223:         *p++ = SPI1RXB;
 40486   0158A2  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40487   0158A6  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40488   0158AA  C080 F4DF          	movff	128,indf2	;volatile
 40489   0158AE  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40490   0158B0  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40491                           
 40492                           ;src/boards/../../drivers/pic18f47q43_spi.c: 224:         SPI1TXB = 0xff;
 40493   0158B2  0100               	movlb	0	; () banked
 40494   0158B4  6981               	setf	129,b	;volatile
 40495   0158B6                     l1469:
 40496   0158B6  A0B1               	btfss	1201,0,c	;volatile
 40497   0158B8  D7FE               	goto	l1469
 40498                           
 40499                           ;src/boards/../../drivers/pic18f47q43_spi.c: 226:         *p++ = SPI1RXB;
 40500   0158BA  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40501   0158BE  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40502   0158C2  C080 F4DF          	movff	128,indf2	;volatile
 40503   0158C6  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40504   0158C8  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40505                           
 40506                           ;src/boards/../../drivers/pic18f47q43_spi.c: 227:         SPI1TXB = 0xff;
 40507   0158CA  0100               	movlb	0	; () banked
 40508   0158CC  6981               	setf	129,b	;volatile
 40509   0158CE                     l1472:
 40510   0158CE  A0B1               	btfss	1201,0,c	;volatile
 40511   0158D0  D7FE               	goto	l1472
 40512                           
 40513                           ;src/boards/../../drivers/pic18f47q43_spi.c: 229:         *p++ = SPI1RXB;
 40514   0158D2  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40515   0158D6  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40516   0158DA  C080 F4DF          	movff	128,indf2	;volatile
 40517   0158DE  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40518   0158E0  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40519                           
 40520                           ;src/boards/../../drivers/pic18f47q43_spi.c: 230:         SPI1TXB = 0xff;
 40521   0158E2  0100               	movlb	0	; () banked
 40522   0158E4  6981               	setf	129,b	;volatile
 40523   0158E6                     l1475:
 40524   0158E6  A0B1               	btfss	1201,0,c	;volatile
 40525   0158E8  D7FE               	goto	l1475
 40526                           
 40527                           ;src/boards/../../drivers/pic18f47q43_spi.c: 232:         *p++ = SPI1RXB;
 40528   0158EA  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40529   0158EE  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40530   0158F2  C080 F4DF          	movff	128,indf2	;volatile
 40531   0158F6  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40532   0158F8  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40533                           
 40534                           ;src/boards/../../drivers/pic18f47q43_spi.c: 233:         uint8_t repeat = (uint8_t)(cou
      +                          nt / 8);
 40535   0158FA  C505  F507         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 40536   0158FE  C506  F508         	movff	SPI_SD_receive@count+1,??_SPI_SD_receive+1
 40537   015902  90D8               	bcf	status,0,c
 40538   015904  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40539   015906  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40540   015908  90D8               	bcf	status,0,c
 40541   01590A  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40542   01590C  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40543   01590E  90D8               	bcf	status,0,c
 40544   015910  3208               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 40545   015912  3207               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 40546   015914  5007               	movf	??_SPI_SD_receive^(0+1280),w,c
 40547   015916  6E0B               	movwf	SPI_SD_receive@repeat^(0+1280),c
 40548                           
 40549                           ;src/boards/../../drivers/pic18f47q43_spi.c: 234:         for (uint8_t i = 1; i < repeat
      +                          ; i++) {
 40550   015918  0E01               	movlw	1
 40551   01591A  6E0C               	movwf	SPI_SD_receive@i_2687^(0+1280),c
 40552   01591C  D061               	goto	l9143
 40553   01591E                     l1479:
 40554                           
 40555                           ;src/boards/../../drivers/pic18f47q43_spi.c: 235:             SPI1TXB = 0xff;
 40556   01591E  0100               	movlb	0	; () banked
 40557   015920  6981               	setf	129,b	;volatile
 40558   015922                     l1480:
 40559   015922  A0B1               	btfss	1201,0,c	;volatile
 40560   015924  D7FE               	goto	l1480
 40561                           
 40562                           ;src/boards/../../drivers/pic18f47q43_spi.c: 237:             *p++ = SPI1RXB;
 40563   015926  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40564   01592A  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40565   01592E  C080 F4DF          	movff	128,indf2	;volatile
 40566   015932  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40567   015934  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40568                           
 40569                           ;src/boards/../../drivers/pic18f47q43_spi.c: 238:             SPI1TXB = 0xff;
 40570   015936  0100               	movlb	0	; () banked
 40571   015938  6981               	setf	129,b	;volatile
 40572   01593A                     l1483:
 40573   01593A  A0B1               	btfss	1201,0,c	;volatile
 40574   01593C  D7FE               	goto	l1483
 40575                           
 40576                           ;src/boards/../../drivers/pic18f47q43_spi.c: 240:             *p++ = SPI1RXB;
 40577   01593E  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40578   015942  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40579   015946  C080 F4DF          	movff	128,indf2	;volatile
 40580   01594A  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40581   01594C  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40582                           
 40583                           ;src/boards/../../drivers/pic18f47q43_spi.c: 241:             SPI1TXB = 0xff;
 40584   01594E  0100               	movlb	0	; () banked
 40585   015950  6981               	setf	129,b	;volatile
 40586   015952                     l1486:
 40587   015952  A0B1               	btfss	1201,0,c	;volatile
 40588   015954  D7FE               	goto	l1486
 40589                           
 40590                           ;src/boards/../../drivers/pic18f47q43_spi.c: 243:             *p++ = SPI1RXB;
 40591   015956  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40592   01595A  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40593   01595E  C080 F4DF          	movff	128,indf2	;volatile
 40594   015962  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40595   015964  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40596                           
 40597                           ;src/boards/../../drivers/pic18f47q43_spi.c: 244:             SPI1TXB = 0xff;
 40598   015966  0100               	movlb	0	; () banked
 40599   015968  6981               	setf	129,b	;volatile
 40600   01596A                     l1489:
 40601   01596A  A0B1               	btfss	1201,0,c	;volatile
 40602   01596C  D7FE               	goto	l1489
 40603                           
 40604                           ;src/boards/../../drivers/pic18f47q43_spi.c: 246:             *p++ = SPI1RXB;
 40605   01596E  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40606   015972  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40607   015976  C080 F4DF          	movff	128,indf2	;volatile
 40608   01597A  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40609   01597C  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40610                           
 40611                           ;src/boards/../../drivers/pic18f47q43_spi.c: 247:             SPI1TXB = 0xff;
 40612   01597E  0100               	movlb	0	; () banked
 40613   015980  6981               	setf	129,b	;volatile
 40614   015982                     l1492:
 40615   015982  A0B1               	btfss	1201,0,c	;volatile
 40616   015984  D7FE               	goto	l1492
 40617                           
 40618                           ;src/boards/../../drivers/pic18f47q43_spi.c: 249:             *p++ = SPI1RXB;
 40619   015986  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40620   01598A  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40621   01598E  C080 F4DF          	movff	128,indf2	;volatile
 40622   015992  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40623   015994  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40624                           
 40625                           ;src/boards/../../drivers/pic18f47q43_spi.c: 250:             SPI1TXB = 0xff;
 40626   015996  0100               	movlb	0	; () banked
 40627   015998  6981               	setf	129,b	;volatile
 40628   01599A                     l1495:
 40629   01599A  A0B1               	btfss	1201,0,c	;volatile
 40630   01599C  D7FE               	goto	l1495
 40631                           
 40632                           ;src/boards/../../drivers/pic18f47q43_spi.c: 252:             *p++ = SPI1RXB;
 40633   01599E  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40634   0159A2  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40635   0159A6  C080 F4DF          	movff	128,indf2	;volatile
 40636   0159AA  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40637   0159AC  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40638                           
 40639                           ;src/boards/../../drivers/pic18f47q43_spi.c: 253:             SPI1TXB = 0xff;
 40640   0159AE  0100               	movlb	0	; () banked
 40641   0159B0  6981               	setf	129,b	;volatile
 40642   0159B2                     l1498:
 40643   0159B2  A0B1               	btfss	1201,0,c	;volatile
 40644   0159B4  D7FE               	goto	l1498
 40645                           
 40646                           ;src/boards/../../drivers/pic18f47q43_spi.c: 255:             *p++ = SPI1RXB;
 40647   0159B6  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40648   0159BA  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40649   0159BE  C080 F4DF          	movff	128,indf2	;volatile
 40650   0159C2  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40651   0159C4  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40652                           
 40653                           ;src/boards/../../drivers/pic18f47q43_spi.c: 256:             SPI1TXB = 0xff;
 40654   0159C6  0100               	movlb	0	; () banked
 40655   0159C8  6981               	setf	129,b	;volatile
 40656   0159CA                     l1501:
 40657   0159CA  A0B1               	btfss	1201,0,c	;volatile
 40658   0159CC  D7FE               	goto	l1501
 40659                           
 40660                           ;src/boards/../../drivers/pic18f47q43_spi.c: 258:             *p++ = SPI1RXB;
 40661   0159CE  C50D  F4D9         	movff	SPI_SD_receive@p,fsr2l
 40662   0159D2  C50E  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 40663   0159D6  C080 F4DF          	movff	128,indf2	;volatile
 40664   0159DA  4A0D               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 40665   0159DC  2A0E               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 40666                           
 40667                           ;src/boards/../../drivers/pic18f47q43_spi.c: 259:         }
 40668   0159DE  2A0C               	incf	SPI_SD_receive@i_2687^(0+1280),f,c
 40669   0159E0                     l9143:
 40670   0159E0  500B               	movf	SPI_SD_receive@repeat^(0+1280),w,c
 40671   0159E2  5C0C               	subwf	SPI_SD_receive@i_2687^(0+1280),w,c
 40672   0159E4  A0D8               	btfss	status,0,c
 40673   0159E6  D79B               	goto	l1479
 40674   0159E8                     u10600:
 40675   0159E8  B0B1               	btfsc	1201,0,c	;volatile
 40676   0159EA  D729               	goto	u10440
 40677   0159EC  D7FD               	goto	u10600
 40678   0159EE                     __end_of_SPI_SD_receive:
 40679                           	callstack 0
 40680                           
 40681 ;; *************** function _SPI_SD_begin_transaction *****************
 40682 ;; Defined at:
 40683 ;;		line 140 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 40684 ;; Parameters:    Size  Location     Type
 40685 ;;  ctx_            2    4[COMRAM] PTR struct SPI
 40686 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40687 ;; Auto vars:     Size  Location     Type
 40688 ;;		None
 40689 ;; Return value:  Size  Location     Type
 40690 ;;                  1    wreg      void 
 40691 ;; Registers used:
 40692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40693 ;; Tracked objects:
 40694 ;;		On entry : 0/0
 40695 ;;		On exit  : 0/0
 40696 ;;		Unchanged: 0/0
 40697 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40702 ;;Total ram usage:        2 bytes
 40703 ;; Hardware stack levels used: 1
 40704 ;; Hardware stack levels required when called: 1
 40705 ;; This function calls:
 40706 ;;		_SPI_SD_select
 40707 ;;		_acquire_bus
 40708 ;; This function is called by:
 40709 ;;		_SDCard_init
 40710 ;;		___SDCard_command_r1
 40711 ;; This function uses a non-reentrant model
 40712 ;;
 40713                           
 40714                           	psect	text112
 40715   019F30                     __ptext112:
 40716                           	callstack 0
 40717   019F30                     _SPI_SD_begin_transaction:
 40718                           	callstack 116
 40719                           
 40720                           ;src/boards/../../drivers/pic18f47q43_spi.c: 140: void SPI_SD_begin_transaction(struct S
      +                          PI *ctx_);src/boards/../../drivers/pic18f47q43_spi.c: 141: {;src/boards/../../drivers/pi
      +                          c18f47q43_spi.c: 142:     acquire_bus(ctx_);
 40721                           
 40722                           ;incstack = 0
 40723   019F30  C505  F501         	movff	SPI_SD_begin_transaction@ctx_,acquire_bus@ctx_
 40724   019F34  C506  F502         	movff	SPI_SD_begin_transaction@ctx_+1,acquire_bus@ctx_+1
 40725   019F38  EC1F  F0CD         	call	_acquire_bus	;wreg free
 40726                           
 40727                           ;src/boards/../../drivers/pic18f47q43_spi.c: 143:     SPI_SD_select(ctx_, 1);
 40728   019F3C  C505  F501         	movff	SPI_SD_begin_transaction@ctx_,SPI_SD_select@ctx_
 40729   019F40  C506  F502         	movff	SPI_SD_begin_transaction@ctx_+1,SPI_SD_select@ctx_+1
 40730   019F44  0E00               	movlw	0
 40731   019F46  6E04               	movwf	(SPI_SD_select@select+1)^(0+1280),c
 40732   019F48  0E01               	movlw	1
 40733   019F4A  6E03               	movwf	SPI_SD_select@select^(0+1280),c
 40734   019F4C  ECDE  F0CF         	call	_SPI_SD_select	;wreg free
 40735   019F50  0012               	return		;funcret
 40736   019F52                     __end_of_SPI_SD_begin_transaction:
 40737                           	callstack 0
 40738                           
 40739 ;; *************** function _SDCard_crc *****************
 40740 ;; Defined at:
 40741 ;;		line 334 in file "src/boards/../../drivers/SDCard.c"
 40742 ;; Parameters:    Size  Location     Type
 40743 ;;  buf             2    0[COMRAM] PTR const void 
 40744 ;;		 -> __SDCard_command_r1@buf(6), 
 40745 ;;  count           2    2[COMRAM] unsigned int 
 40746 ;; Auto vars:     Size  Location     Type
 40747 ;;  i               2    6[COMRAM] int 
 40748 ;;  p               2    9[COMRAM] PTR unsigned char 
 40749 ;;		 -> __SDCard_command_r1@buf(6), 
 40750 ;;  endp            2    4[COMRAM] PTR unsigned char 
 40751 ;;		 -> __SDCard_command_r1@buf(6), 
 40752 ;;  crc             1    8[COMRAM] unsigned char 
 40753 ;; Return value:  Size  Location     Type
 40754 ;;                  1    wreg      unsigned char 
 40755 ;; Registers used:
 40756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40757 ;; Tracked objects:
 40758 ;;		On entry : 0/5
 40759 ;;		On exit  : 0/0
 40760 ;;		Unchanged: 0/0
 40761 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40763 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40765 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40766 ;;Total ram usage:       11 bytes
 40767 ;; Hardware stack levels used: 1
 40768 ;; This function calls:
 40769 ;;		Nothing
 40770 ;; This function is called by:
 40771 ;;		___SDCard_command_r1
 40772 ;; This function uses a non-reentrant model
 40773 ;;
 40774                           
 40775                           	psect	text113
 40776   0197FC                     __ptext113:
 40777                           	callstack 0
 40778   0197FC                     _SDCard_crc:
 40779                           	callstack 117
 40780                           
 40781                           ;src/boards/../../drivers/SDCard.c: 334: uint8_t SDCard_crc(const void *buf, unsigned in
      +                          t count);src/boards/../../drivers/SDCard.c: 335: {;src/boards/../../drivers/SDCard.c: 33
      +                          6:     uint8_t crc = 0;
 40782                           
 40783                           ;incstack = 0
 40784   0197FC  0E00               	movlw	0
 40785   0197FE  6E09               	movwf	SDCard_crc@crc^(0+1280),c
 40786                           
 40787                           ;src/boards/../../drivers/SDCard.c: 337:     uint8_t *p = (uint8_t*)buf;
 40788   019800  C501  F50A         	movff	SDCard_crc@buf,SDCard_crc@p
 40789   019804  C502  F50B         	movff	SDCard_crc@buf+1,SDCard_crc@p+1
 40790                           
 40791                           ;src/boards/../../drivers/SDCard.c: 338:     uint8_t *endp = p + count;
 40792   019808  5003               	movf	SDCard_crc@count^(0+1280),w,c
 40793   01980A  240A               	addwf	SDCard_crc@p^(0+1280),w,c
 40794   01980C  6E05               	movwf	SDCard_crc@endp^(0+1280),c
 40795   01980E  5004               	movf	(SDCard_crc@count+1)^(0+1280),w,c
 40796   019810  200B               	addwfc	(SDCard_crc@p+1)^(0+1280),w,c
 40797   019812  6E06               	movwf	(SDCard_crc@endp+1)^(0+1280),c
 40798                           
 40799                           ;src/boards/../../drivers/SDCard.c: 340:     while (p < endp) {
 40800   019814  D01C               	goto	u10900
 40801   019816                     l9421:
 40802                           
 40803                           ;src/boards/../../drivers/SDCard.c: 341:         crc ^= *p++;
 40804   019816  C50A  F4D9         	movff	SDCard_crc@p,fsr2l
 40805   01981A  C50B  F4DA         	movff	SDCard_crc@p+1,fsr2h
 40806   01981E  50DF               	movf	indf2,w,c
 40807   019820  1A09               	xorwf	SDCard_crc@crc^(0+1280),f,c
 40808   019822  4A0A               	infsnz	SDCard_crc@p^(0+1280),f,c
 40809   019824  2A0B               	incf	(SDCard_crc@p+1)^(0+1280),f,c
 40810                           
 40811                           ;src/boards/../../drivers/SDCard.c: 342:         for (int i = 0; i < 8; i++) {
 40812   019826  0E00               	movlw	0
 40813   019828  6E08               	movwf	(SDCard_crc@i+1)^(0+1280),c
 40814   01982A  0E00               	movlw	0
 40815   01982C  6E07               	movwf	SDCard_crc@i^(0+1280),c
 40816   01982E                     l1667:
 40817                           
 40818                           ;src/boards/../../drivers/SDCard.c: 343:             if (crc & 0x80)
 40819   01982E  AE09               	btfss	SDCard_crc@crc^(0+1280),7,c
 40820   019830  D002               	goto	l1669
 40821                           
 40822                           ;src/boards/../../drivers/SDCard.c: 344:                 crc ^= 0x89;
 40823   019832  0E89               	movlw	137
 40824   019834  1A09               	xorwf	SDCard_crc@crc^(0+1280),f,c
 40825   019836                     l1669:
 40826                           
 40827                           ;src/boards/../../drivers/SDCard.c: 345:             crc <<= 1;
 40828   019836  90D8               	bcf	status,0,c
 40829   019838  3609               	rlcf	SDCard_crc@crc^(0+1280),f,c
 40830                           
 40831                           ;src/boards/../../drivers/SDCard.c: 346:         }
 40832   01983A  4A07               	infsnz	SDCard_crc@i^(0+1280),f,c
 40833   01983C  2A08               	incf	(SDCard_crc@i+1)^(0+1280),f,c
 40834   01983E  BE08               	btfsc	(SDCard_crc@i+1)^(0+1280),7,c
 40835   019840  D7F6               	goto	l1667
 40836   019842  5008               	movf	(SDCard_crc@i+1)^(0+1280),w,c
 40837   019844  E104               	bnz	u10900
 40838   019846  0E08               	movlw	8
 40839   019848  5C07               	subwf	SDCard_crc@i^(0+1280),w,c
 40840   01984A  A0D8               	btfss	status,0,c
 40841   01984C  D7F0               	goto	l1667
 40842   01984E                     u10900:
 40843                           
 40844                           ;src/boards/../../drivers/SDCard.c: 340:     while (p < endp) {
 40845   01984E  5005               	movf	SDCard_crc@endp^(0+1280),w,c
 40846   019850  5C0A               	subwf	SDCard_crc@p^(0+1280),w,c
 40847   019852  5006               	movf	(SDCard_crc@endp+1)^(0+1280),w,c
 40848   019854  580B               	subwfb	(SDCard_crc@p+1)^(0+1280),w,c
 40849   019856  A0D8               	btfss	status,0,c
 40850   019858  D7DE               	goto	l9421
 40851                           
 40852                           ;src/boards/../../drivers/SDCard.c: 349:     return crc;
 40853   01985A  5009               	movf	SDCard_crc@crc^(0+1280),w,c
 40854   01985C  0012               	return		;funcret
 40855   01985E                     __end_of_SDCard_crc:
 40856                           	callstack 0
 40857                           
 40858 ;; *************** function _SDCard_end_transaction *****************
 40859 ;; Defined at:
 40860 ;;		line 46 in file "src/boards/../../drivers/SDCard.c"
 40861 ;; Parameters:    Size  Location     Type
 40862 ;;		None
 40863 ;; Auto vars:     Size  Location     Type
 40864 ;;  spi             2   17[COMRAM] PTR struct SPI
 40865 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40866 ;; Return value:  Size  Location     Type
 40867 ;;                  1    wreg      void 
 40868 ;; Registers used:
 40869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40870 ;; Tracked objects:
 40871 ;;		On entry : 0/5
 40872 ;;		On exit  : 0/0
 40873 ;;		Unchanged: 0/0
 40874 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40879 ;;Total ram usage:        2 bytes
 40880 ;; Hardware stack levels used: 1
 40881 ;; Hardware stack levels required when called: 2
 40882 ;; This function calls:
 40883 ;;		_SPI_SD_dummy_clocks
 40884 ;;		_SPI_SD_end_transaction
 40885 ;; This function is called by:
 40886 ;;		_SDCard_init
 40887 ;;		_SDCard_read512
 40888 ;;		_SDCard_write512
 40889 ;;		_SDCard_command
 40890 ;; This function uses a non-reentrant model
 40891 ;;
 40892                           
 40893                           	psect	text114
 40894   019E24                     __ptext114:
 40895                           	callstack 0
 40896   019E24                     _SDCard_end_transaction:
 40897                           	callstack 116
 40898                           
 40899                           ;src/boards/../../drivers/SDCard.c: 48:     struct SPI *spi = ctx_.spi;
 40900                           
 40901                           ;incstack = 0
 40902   019E24  C706  F512         	movff	_ctx_,SDCard_end_transaction@spi
 40903   019E28  C707  F513         	movff	_ctx_+1,SDCard_end_transaction@spi+1
 40904                           
 40905                           ;src/boards/../../drivers/SDCard.c: 49:     SPI_SD_end_transaction(spi);
 40906   019E2C  C512  F505         	movff	SDCard_end_transaction@spi,SPI_SD_end_transaction@ctx_
 40907   019E30  C513  F506         	movff	SDCard_end_transaction@spi+1,SPI_SD_end_transaction@ctx_+1
 40908   019E34  ECA9  F0CF         	call	_SPI_SD_end_transaction	;wreg free
 40909                           
 40910                           ;src/boards/../../drivers/SDCard.c: 50:     SPI_SD_dummy_clocks(spi, 1);
 40911   019E38  C512  F50B         	movff	SDCard_end_transaction@spi,SPI_SD_dummy_clocks@ctx_
 40912   019E3C  C513  F50C         	movff	SDCard_end_transaction@spi+1,SPI_SD_dummy_clocks@ctx_+1
 40913   019E40  0E00               	movlw	0
 40914   019E42  6E0E               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 40915   019E44  0E01               	movlw	1
 40916   019E46  6E0D               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 40917   019E48  EC84  F0CC         	call	_SPI_SD_dummy_clocks	;wreg free
 40918   019E4C  0012               	return		;funcret
 40919   019E4E                     __end_of_SDCard_end_transaction:
 40920                           	callstack 0
 40921                           
 40922 ;; *************** function _SPI_SD_end_transaction *****************
 40923 ;; Defined at:
 40924 ;;		line 146 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 40925 ;; Parameters:    Size  Location     Type
 40926 ;;  ctx_            2    4[COMRAM] PTR struct SPI
 40927 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40928 ;; Auto vars:     Size  Location     Type
 40929 ;;		None
 40930 ;; Return value:  Size  Location     Type
 40931 ;;                  1    wreg      void 
 40932 ;; Registers used:
 40933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40934 ;; Tracked objects:
 40935 ;;		On entry : 0/5
 40936 ;;		On exit  : 0/0
 40937 ;;		Unchanged: 0/0
 40938 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40943 ;;Total ram usage:        2 bytes
 40944 ;; Hardware stack levels used: 1
 40945 ;; Hardware stack levels required when called: 1
 40946 ;; This function calls:
 40947 ;;		_SPI_SD_select
 40948 ;;		_release_bus
 40949 ;; This function is called by:
 40950 ;;		_SDCard_end_transaction
 40951 ;; This function uses a non-reentrant model
 40952 ;;
 40953                           
 40954                           	psect	text115
 40955   019F52                     __ptext115:
 40956                           	callstack 0
 40957   019F52                     _SPI_SD_end_transaction:
 40958                           	callstack 116
 40959                           
 40960                           ;src/boards/../../drivers/pic18f47q43_spi.c: 146: void SPI_SD_end_transaction(struct SPI
      +                           *ctx_);src/boards/../../drivers/pic18f47q43_spi.c: 147: {;src/boards/../../drivers/pic1
      +                          8f47q43_spi.c: 148:     SPI_SD_select(ctx_, 0);
 40961                           
 40962                           ;incstack = 0
 40963   019F52  C505  F501         	movff	SPI_SD_end_transaction@ctx_,SPI_SD_select@ctx_
 40964   019F56  C506  F502         	movff	SPI_SD_end_transaction@ctx_+1,SPI_SD_select@ctx_+1
 40965   019F5A  0E00               	movlw	0
 40966   019F5C  6E04               	movwf	(SPI_SD_select@select+1)^(0+1280),c
 40967   019F5E  0E00               	movlw	0
 40968   019F60  6E03               	movwf	SPI_SD_select@select^(0+1280),c
 40969   019F62  ECDE  F0CF         	call	_SPI_SD_select	;wreg free
 40970                           
 40971                           ;src/boards/../../drivers/pic18f47q43_spi.c: 149:     release_bus(ctx_);
 40972   019F66  C505  F501         	movff	SPI_SD_end_transaction@ctx_,release_bus@ctx_
 40973   019F6A  C506  F502         	movff	SPI_SD_end_transaction@ctx_+1,release_bus@ctx_+1
 40974   019F6E  EC69  F0CE         	call	_release_bus	;wreg free
 40975   019F72  0012               	return		;funcret
 40976   019F74                     __end_of_SPI_SD_end_transaction:
 40977                           	callstack 0
 40978                           
 40979 ;; *************** function _SPI_SD_select *****************
 40980 ;; Defined at:
 40981 ;;		line 282 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 40982 ;; Parameters:    Size  Location     Type
 40983 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 40984 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 40985 ;;  select          2    2[COMRAM] int 
 40986 ;; Auto vars:     Size  Location     Type
 40987 ;;		None
 40988 ;; Return value:  Size  Location     Type
 40989 ;;                  1    wreg      void 
 40990 ;; Registers used:
 40991 ;;		wreg, status,2, status,0
 40992 ;; Tracked objects:
 40993 ;;		On entry : 0/0
 40994 ;;		On exit  : 0/0
 40995 ;;		Unchanged: 0/0
 40996 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41000 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41001 ;;Total ram usage:        4 bytes
 41002 ;; Hardware stack levels used: 1
 41003 ;; This function calls:
 41004 ;;		Nothing
 41005 ;; This function is called by:
 41006 ;;		_SPI_SD_begin_transaction
 41007 ;;		_SPI_SD_end_transaction
 41008 ;; This function uses a non-reentrant model
 41009 ;;
 41010                           
 41011                           	psect	text116
 41012   019FBC                     __ptext116:
 41013                           	callstack 0
 41014   019FBC                     _SPI_SD_select:
 41015                           	callstack 116
 41016                           
 41017                           ;src/boards/../../drivers/pic18f47q43_spi.c: 282: void SPI_SD_select(struct SPI *ctx_, i
      +                          nt select);src/boards/../../drivers/pic18f47q43_spi.c: 283: {;src/boards/../../drivers/p
      +                          ic18f47q43_spi.c: 284:     LATC4 = select ? 0 : 1;
 41018                           
 41019                           ;incstack = 0
 41020   019FBC  5003               	movf	SPI_SD_select@select^(0+1280),w,c
 41021   019FBE  1004               	iorwf	(SPI_SD_select@select+1)^(0+1280),w,c
 41022   019FC0  A4D8               	btfss	status,2,c
 41023   019FC2  D002               	goto	u10790
 41024   019FC4  88C0               	bsf	1216,4,c	;volatile
 41025   019FC6  0012               	return	
 41026   019FC8                     u10790:
 41027   019FC8  98C0               	bcf	1216,4,c	;volatile
 41028   019FCA  0012               	return		;funcret
 41029   019FCC                     __end_of_SPI_SD_select:
 41030                           	callstack 0
 41031                           
 41032 ;; *************** function _SPI_SD_dummy_clocks *****************
 41033 ;; Defined at:
 41034 ;;		line 265 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 41035 ;; Parameters:    Size  Location     Type
 41036 ;;  ctx_            2   10[COMRAM] PTR struct SPI
 41037 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41038 ;;  clocks          2   12[COMRAM] unsigned int 
 41039 ;; Auto vars:     Size  Location     Type
 41040 ;;  i               2   14[COMRAM] int 
 41041 ;;  dummy           1   16[COMRAM] unsigned char 
 41042 ;; Return value:  Size  Location     Type
 41043 ;;                  1    wreg      void 
 41044 ;; Registers used:
 41045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41046 ;; Tracked objects:
 41047 ;;		On entry : 0/5
 41048 ;;		On exit  : 0/0
 41049 ;;		Unchanged: 0/0
 41050 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41052 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41054 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41055 ;;Total ram usage:        7 bytes
 41056 ;; Hardware stack levels used: 1
 41057 ;; Hardware stack levels required when called: 1
 41058 ;; This function calls:
 41059 ;;		_SPI_SD_send
 41060 ;;		_acquire_bus
 41061 ;;		_release_bus
 41062 ;; This function is called by:
 41063 ;;		_SDCard_end_transaction
 41064 ;;		_SDCard_init
 41065 ;;		___SDCard_command_r1
 41066 ;;		_SDCard_write512
 41067 ;; This function uses a non-reentrant model
 41068 ;;
 41069                           
 41070                           	psect	text117
 41071   019908                     __ptext117:
 41072                           	callstack 0
 41073   019908                     _SPI_SD_dummy_clocks:
 41074                           	callstack 116
 41075                           
 41076                           ;src/boards/../../drivers/pic18f47q43_spi.c: 265: void SPI_SD_dummy_clocks(struct SPI *c
      +                          tx_, unsigned int clocks);src/boards/../../drivers/pic18f47q43_spi.c: 266: {;src/boards/
      +                          ../../drivers/pic18f47q43_spi.c: 267:     uint8_t dummy = 0xff;
 41077                           
 41078                           ;incstack = 0
 41079   019908  6811               	setf	SPI_SD_dummy_clocks@dummy^(0+1280),c
 41080                           
 41081                           ;src/boards/../../drivers/pic18f47q43_spi.c: 268:     acquire_bus(ctx_);
 41082   01990A  C50B  F501         	movff	SPI_SD_dummy_clocks@ctx_,acquire_bus@ctx_
 41083   01990E  C50C  F502         	movff	SPI_SD_dummy_clocks@ctx_+1,acquire_bus@ctx_+1
 41084   019912  EC1F  F0CD         	call	_acquire_bus	;wreg free
 41085                           
 41086                           ;src/boards/../../drivers/pic18f47q43_spi.c: 269:     for (int i = 0; i < clocks; i++) {
 41087   019916  0E00               	movlw	0
 41088   019918  6E10               	movwf	(SPI_SD_dummy_clocks@i+1)^(0+1280),c
 41089   01991A  0E00               	movlw	0
 41090   01991C  6E0F               	movwf	SPI_SD_dummy_clocks@i^(0+1280),c
 41091   01991E  D010               	goto	l9399
 41092   019920                     l9395:
 41093                           
 41094                           ;src/boards/../../drivers/pic18f47q43_spi.c: 270:         SPI_SD_send(ctx_, &dummy, 1);
 41095   019920  C50B  F501         	movff	SPI_SD_dummy_clocks@ctx_,SPI_SD_send@ctx_
 41096   019924  C50C  F502         	movff	SPI_SD_dummy_clocks@ctx_+1,SPI_SD_send@ctx_+1
 41097   019928  0E11               	movlw	low SPI_SD_dummy_clocks@dummy
 41098   01992A  6E03               	movwf	SPI_SD_send@buf^(0+1280),c
 41099   01992C  0E05               	movlw	high SPI_SD_dummy_clocks@dummy
 41100   01992E  6E04               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 41101   019930  0E00               	movlw	0
 41102   019932  6E06               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 41103   019934  0E01               	movlw	1
 41104   019936  6E05               	movwf	SPI_SD_send@count^(0+1280),c
 41105   019938  EC9A  F0CB         	call	_SPI_SD_send	;wreg free
 41106                           
 41107                           ;src/boards/../../drivers/pic18f47q43_spi.c: 271:     }
 41108   01993C  4A0F               	infsnz	SPI_SD_dummy_clocks@i^(0+1280),f,c
 41109   01993E  2A10               	incf	(SPI_SD_dummy_clocks@i+1)^(0+1280),f,c
 41110   019940                     l9399:
 41111   019940  500D               	movf	SPI_SD_dummy_clocks@clocks^(0+1280),w,c
 41112   019942  5C0F               	subwf	SPI_SD_dummy_clocks@i^(0+1280),w,c
 41113   019944  500E               	movf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),w,c
 41114   019946  5810               	subwfb	(SPI_SD_dummy_clocks@i+1)^(0+1280),w,c
 41115   019948  A0D8               	btfss	status,0,c
 41116   01994A  D7EA               	goto	l9395
 41117                           
 41118                           ;src/boards/../../drivers/pic18f47q43_spi.c: 272:     release_bus(ctx_);
 41119   01994C  C50B  F501         	movff	SPI_SD_dummy_clocks@ctx_,release_bus@ctx_
 41120   019950  C50C  F502         	movff	SPI_SD_dummy_clocks@ctx_+1,release_bus@ctx_+1
 41121   019954  EC69  F0CE         	call	_release_bus	;wreg free
 41122   019958  0012               	return		;funcret
 41123   01995A                     __end_of_SPI_SD_dummy_clocks:
 41124                           	callstack 0
 41125                           
 41126 ;; *************** function _release_bus *****************
 41127 ;; Defined at:
 41128 ;;		line 54 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 41129 ;; Parameters:    Size  Location     Type
 41130 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 41131 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41132 ;; Auto vars:     Size  Location     Type
 41133 ;;  ctx             2    2[COMRAM] PTR struct SPI_HW
 41134 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41135 ;; Return value:  Size  Location     Type
 41136 ;;                  1    wreg      void 
 41137 ;; Registers used:
 41138 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41139 ;; Tracked objects:
 41140 ;;		On entry : 0/5
 41141 ;;		On exit  : 0/0
 41142 ;;		Unchanged: 0/0
 41143 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41145 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41147 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41148 ;;Total ram usage:        4 bytes
 41149 ;; Hardware stack levels used: 1
 41150 ;; This function calls:
 41151 ;;		Nothing
 41152 ;; This function is called by:
 41153 ;;		_SPI_SD_end_transaction
 41154 ;;		_SPI_SD_dummy_clocks
 41155 ;; This function uses a non-reentrant model
 41156 ;;
 41157                           
 41158                           	psect	text118
 41159   019CD2                     __ptext118:
 41160                           	callstack 0
 41161   019CD2                     _release_bus:
 41162                           	callstack 116
 41163                           
 41164                           ;src/boards/../../drivers/pic18f47q43_spi.c: 54: static void release_bus(struct SPI *ctx
      +                          _);src/boards/../../drivers/pic18f47q43_spi.c: 55: {;src/boards/../../drivers/pic18f47q4
      +                          3_spi.c: 56:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 41165                           
 41166                           ;incstack = 0
 41167   019CD2  C501  F503         	movff	release_bus@ctx_,release_bus@ctx
 41168   019CD6  C502  F504         	movff	release_bus@ctx_+1,release_bus@ctx+1
 41169                           
 41170                           ;src/boards/../../drivers/pic18f47q43_spi.c: 57:     if (--ctx->bus_acquired <= 0) {
 41171   019CDA  EE20 F002          	lfsr	2,2
 41172   019CDE  5003               	movf	release_bus@ctx^(0+1280),w,c
 41173   019CE0  26D9               	addwf	fsr2l,f,c
 41174   019CE2  5004               	movf	(release_bus@ctx+1)^(0+1280),w,c
 41175   019CE4  22DA               	addwfc	fsr2h,f,c
 41176   019CE6  06DF               	decf	indf2,f,c
 41177   019CE8  50DF               	movf	indf2,w,c
 41178   019CEA  A4D8               	btfss	status,2,c
 41179   019CEC  0012               	return	
 41180                           
 41181                           ;src/boards/../../drivers/pic18f47q43_spi.c: 58:         RC0PPS = 0x00;
 41182   019CEE  0E00               	movlw	0
 41183   019CF0  0102               	movlb	2	; () banked
 41184   019CF2  6F11               	movwf	17,b	;volatile
 41185                           
 41186                           ;src/boards/../../drivers/pic18f47q43_spi.c: 59:         RC1PPS = 0x00;
 41187   019CF4  0E00               	movlw	0
 41188   019CF6  6F12               	movwf	18,b	;volatile
 41189                           
 41190                           ; BSR set to: 2
 41191                           ;src/boards/../../drivers/pic18f47q43_spi.c: 60:         TRISF = ctx->tris;
 41192   019CF8  EE20 F003          	lfsr	2,3
 41193   019CFC  5003               	movf	release_bus@ctx^(0+1280),w,c
 41194   019CFE  26D9               	addwf	fsr2l,f,c
 41195   019D00  5004               	movf	(release_bus@ctx+1)^(0+1280),w,c
 41196   019D02  22DA               	addwfc	fsr2h,f,c
 41197   019D04  50DF               	movf	indf2,w,c
 41198   019D06  6ECB               	movwf	203,c	;volatile
 41199   019D08  0012               	return		;funcret
 41200   019D0A                     __end_of_release_bus:
 41201                           	callstack 0
 41202                           
 41203 ;; *************** function _acquire_bus *****************
 41204 ;; Defined at:
 41205 ;;		line 38 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 41206 ;; Parameters:    Size  Location     Type
 41207 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 41208 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41209 ;; Auto vars:     Size  Location     Type
 41210 ;;  ctx             2    2[COMRAM] PTR struct SPI_HW
 41211 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41212 ;; Return value:  Size  Location     Type
 41213 ;;                  1    wreg      void 
 41214 ;; Registers used:
 41215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41216 ;; Tracked objects:
 41217 ;;		On entry : 0/0
 41218 ;;		On exit  : 0/0
 41219 ;;		Unchanged: 0/0
 41220 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41225 ;;Total ram usage:        4 bytes
 41226 ;; Hardware stack levels used: 1
 41227 ;; This function calls:
 41228 ;;		Nothing
 41229 ;; This function is called by:
 41230 ;;		_SPI_SD_begin_transaction
 41231 ;;		_SPI_SD_dummy_clocks
 41232 ;; This function uses a non-reentrant model
 41233 ;;
 41234                           
 41235                           	psect	text119
 41236   019A3E                     __ptext119:
 41237                           	callstack 0
 41238   019A3E                     _acquire_bus:
 41239                           	callstack 116
 41240                           
 41241                           ;src/boards/../../drivers/pic18f47q43_spi.c: 38: static void acquire_bus(struct SPI *ctx
      +                          _);src/boards/../../drivers/pic18f47q43_spi.c: 39: {;src/boards/../../drivers/pic18f47q4
      +                          3_spi.c: 40:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 41242                           
 41243                           ;incstack = 0
 41244   019A3E  C501  F503         	movff	acquire_bus@ctx_,acquire_bus@ctx
 41245   019A42  C502  F504         	movff	acquire_bus@ctx_+1,acquire_bus@ctx+1
 41246                           
 41247                           ;src/boards/../../drivers/pic18f47q43_spi.c: 41:     if (ctx->bus_acquired == 0) {
 41248   019A46  EE20 F002          	lfsr	2,2
 41249   019A4A  5003               	movf	acquire_bus@ctx^(0+1280),w,c
 41250   019A4C  26D9               	addwf	fsr2l,f,c
 41251   019A4E  5004               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 41252   019A50  22DA               	addwfc	fsr2h,f,c
 41253   019A52  50DF               	movf	indf2,w,c
 41254   019A54  A4D8               	btfss	status,2,c
 41255   019A56  D010               	goto	l9327
 41256                           
 41257                           ;src/boards/../../drivers/pic18f47q43_spi.c: 42:         RC0PPS = 0x31;
 41258   019A58  0E31               	movlw	49
 41259   019A5A  0102               	movlb	2	; () banked
 41260   019A5C  6F11               	movwf	17,b	;volatile
 41261                           
 41262                           ;src/boards/../../drivers/pic18f47q43_spi.c: 44:         RC1PPS = 0x32;
 41263   019A5E  0E32               	movlw	50
 41264   019A60  6F12               	movwf	18,b	;volatile
 41265                           
 41266                           ; BSR set to: 2
 41267                           ;src/boards/../../drivers/pic18f47q43_spi.c: 46:         ctx->tris = TRISF;
 41268   019A62  EE20 F003          	lfsr	2,3
 41269   019A66  5003               	movf	acquire_bus@ctx^(0+1280),w,c
 41270   019A68  26D9               	addwf	fsr2l,f,c
 41271   019A6A  5004               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 41272   019A6C  22DA               	addwfc	fsr2h,f,c
 41273   019A6E  C4CB F4DF          	movff	1227,indf2	;volatile
 41274                           
 41275                           ; BSR set to: 2
 41276                           ;src/boards/../../drivers/pic18f47q43_spi.c: 47:         TRISC1 = 0;
 41277   019A72  92C8               	bcf	1224,1,c	;volatile
 41278                           
 41279                           ; BSR set to: 2
 41280                           ;src/boards/../../drivers/pic18f47q43_spi.c: 48:         TRISC0 = 0;
 41281   019A74  90C8               	bcf	1224,0,c	;volatile
 41282                           
 41283                           ; BSR set to: 2
 41284                           ;src/boards/../../drivers/pic18f47q43_spi.c: 49:         TRISC2 = 1;
 41285   019A76  84C8               	bsf	1224,2,c	;volatile
 41286   019A78                     l9327:
 41287                           
 41288                           ;src/boards/../../drivers/pic18f47q43_spi.c: 51:     ctx->bus_acquired++;
 41289   019A78  EE20 F002          	lfsr	2,2
 41290   019A7C  5003               	movf	acquire_bus@ctx^(0+1280),w,c
 41291   019A7E  26D9               	addwf	fsr2l,f,c
 41292   019A80  5004               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 41293   019A82  22DA               	addwfc	fsr2h,f,c
 41294   019A84  2ADF               	incf	indf2,f,c
 41295   019A86  0012               	return		;funcret
 41296   019A88                     __end_of_acquire_bus:
 41297                           	callstack 0
 41298                           
 41299 ;; *************** function _SPI_SD_send *****************
 41300 ;; Defined at:
 41301 ;;		line 170 in file "src/boards/../../drivers/pic18f47q43_spi.c"
 41302 ;; Parameters:    Size  Location     Type
 41303 ;;  ctx_            2    0[COMRAM] PTR struct SPI
 41304 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 41305 ;;  buf             2    2[COMRAM] PTR const void 
 41306 ;;		 -> files$buf(512), fs$win(512), fs(560), SDCard_write512@response(1), 
 41307 ;;		 -> __SDCard_command_r1@buf(6), SPI_SD_dummy_clocks@dummy(1), disk_buf(128), files(3276), 
 41308 ;;		 -> NULL(0), 
 41309 ;;  count           2    4[COMRAM] unsigned int 
 41310 ;; Auto vars:     Size  Location     Type
 41311 ;;  i               2    6[COMRAM] int 
 41312 ;;  p               2    8[COMRAM] PTR unsigned char 
 41313 ;;		 -> files$buf(512), fs$win(512), fs(560), SDCard_write512@response(1), 
 41314 ;;		 -> __SDCard_command_r1@buf(6), SPI_SD_dummy_clocks@dummy(1), disk_buf(128), files(3276), 
 41315 ;;		 -> NULL(0), 
 41316 ;;  dummy           1    0        unsigned char 
 41317 ;; Return value:  Size  Location     Type
 41318 ;;                  1    wreg      void 
 41319 ;; Registers used:
 41320 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41321 ;; Tracked objects:
 41322 ;;		On entry : 0/5
 41323 ;;		On exit  : 0/0
 41324 ;;		Unchanged: 0/0
 41325 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41326 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41327 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41329 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41330 ;;Total ram usage:       10 bytes
 41331 ;; Hardware stack levels used: 1
 41332 ;; This function calls:
 41333 ;;		Nothing
 41334 ;; This function is called by:
 41335 ;;		_SPI_SD_dummy_clocks
 41336 ;;		___SDCard_command_r1
 41337 ;;		_SDCard_write512
 41338 ;; This function uses a non-reentrant model
 41339 ;;
 41340                           
 41341                           	psect	text120
 41342   019734                     __ptext120:
 41343                           	callstack 0
 41344   019734                     _SPI_SD_send:
 41345                           	callstack 117
 41346                           
 41347                           ;src/boards/../../drivers/pic18f47q43_spi.c: 170: void SPI_SD_send(struct SPI *ctx_, con
      +                          st void *buf, unsigned int count);src/boards/../../drivers/pic18f47q43_spi.c: 171: {;src
      +                          /boards/../../drivers/pic18f47q43_spi.c: 172:     uint8_t *p = (uint8_t*)buf;
 41348                           
 41349                           ;incstack = 0
 41350   019734  C503  F509         	movff	SPI_SD_send@buf,SPI_SD_send@p
 41351   019738  C504  F50A         	movff	SPI_SD_send@buf+1,SPI_SD_send@p+1
 41352                           
 41353                           ;src/boards/../../drivers/pic18f47q43_spi.c: 173:     uint8_t dummy;;src/boards/../../dr
      +                          ivers/pic18f47q43_spi.c: 175:     if (count == 0)
 41354   01973C  5005               	movf	SPI_SD_send@count^(0+1280),w,c
 41355   01973E  1006               	iorwf	(SPI_SD_send@count+1)^(0+1280),w,c
 41356   019740  B4D8               	btfsc	status,2,c
 41357   019742  0012               	return	
 41358                           
 41359                           ;src/boards/../../drivers/pic18f47q43_spi.c: 178:     SPI1TCNTH = (count >> 8);
 41360   019744  C506  F083         	movff	SPI_SD_send@count+1,131	;volatile
 41361                           
 41362                           ;src/boards/../../drivers/pic18f47q43_spi.c: 179:     SPI1TCNTL = (count & 0xff);
 41363   019748  C505  F082         	movff	SPI_SD_send@count,130	;volatile
 41364                           
 41365                           ;src/boards/../../drivers/pic18f47q43_spi.c: 181:     SPI1TXB = *p++;
 41366   01974C  C509  F4D9         	movff	SPI_SD_send@p,fsr2l
 41367   019750  C50A  F4DA         	movff	SPI_SD_send@p+1,fsr2h
 41368   019754  50DF               	movf	indf2,w,c
 41369   019756  0100               	movlb	0	; () banked
 41370   019758  6F81               	movwf	129,b	;volatile
 41371                           
 41372                           ; BSR set to: 0
 41373   01975A  4A09               	infsnz	SPI_SD_send@p^(0+1280),f,c
 41374   01975C  2A0A               	incf	(SPI_SD_send@p+1)^(0+1280),f,c
 41375                           
 41376                           ; BSR set to: 0
 41377                           ;src/boards/../../drivers/pic18f47q43_spi.c: 182:     for (int i = 1; i < count; i++) {
 41378   01975E  0E00               	movlw	0
 41379   019760  6E08               	movwf	(SPI_SD_send@i+1)^(0+1280),c
 41380   019762  0E01               	movlw	1
 41381   019764  6E07               	movwf	SPI_SD_send@i^(0+1280),c
 41382   019766  D00E               	goto	l9355
 41383   019768                     l9349:
 41384                           
 41385                           ; BSR set to: 0
 41386                           ;src/boards/../../drivers/pic18f47q43_spi.c: 183:         SPI1TXB = *p++;
 41387   019768  C509  F4D9         	movff	SPI_SD_send@p,fsr2l
 41388   01976C  C50A  F4DA         	movff	SPI_SD_send@p+1,fsr2h
 41389   019770  50DF               	movf	indf2,w,c
 41390   019772  6F81               	movwf	129,b	;volatile
 41391                           
 41392                           ; BSR set to: 0
 41393   019774  4A09               	infsnz	SPI_SD_send@p^(0+1280),f,c
 41394   019776  2A0A               	incf	(SPI_SD_send@p+1)^(0+1280),f,c
 41395   019778                     l1433:
 41396   019778  A0B1               	btfss	1201,0,c	;volatile
 41397   01977A  D7FE               	goto	l1433
 41398   01977C  0100               	movlb	0	; () banked
 41399   01977E  5180               	movf	128,w,b	;volatile
 41400                           
 41401                           ; BSR set to: 0
 41402                           ;src/boards/../../drivers/pic18f47q43_spi.c: 186:     }
 41403   019780  4A07               	infsnz	SPI_SD_send@i^(0+1280),f,c
 41404   019782  2A08               	incf	(SPI_SD_send@i+1)^(0+1280),f,c
 41405   019784                     l9355:
 41406                           
 41407                           ; BSR set to: 0
 41408   019784  5005               	movf	SPI_SD_send@count^(0+1280),w,c
 41409   019786  5C07               	subwf	SPI_SD_send@i^(0+1280),w,c
 41410   019788  5006               	movf	(SPI_SD_send@count+1)^(0+1280),w,c
 41411   01978A  5808               	subwfb	(SPI_SD_send@i+1)^(0+1280),w,c
 41412   01978C  A0D8               	btfss	status,0,c
 41413   01978E  D7EC               	goto	l9349
 41414   019790                     u10830:
 41415   019790  A0B1               	btfss	1201,0,c	;volatile
 41416   019792  D7FE               	goto	u10830
 41417   019794  0100               	movlb	0	; () banked
 41418   019796  5180               	movf	128,w,b	;volatile
 41419   019798  0012               	return		;funcret
 41420   01979A                     __end_of_SPI_SD_send:
 41421                           	callstack 0
 41422                           
 41423                           	psect	rparam
 41424   000000                     
 41425                           	psect	config
 41426                           
 41427                           ;Config register CONFIG1 @ 0x300000
 41428                           ;	External Oscillator Selection
 41429                           ;	FEXTOSC = OFF, Oscillator not enabled
 41430                           ;	Reset Oscillator Selection
 41431                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 41432   300000                     	org	3145728
 41433   300000  8C                 	db	140
 41434                           
 41435                           ;Config register CONFIG2 @ 0x300001
 41436                           ;	Clock out Enable bit
 41437                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 41438                           ;	PRLOCKED One-Way Set Enable bit
 41439                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 41440                           ;	Clock Switch Enable bit
 41441                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 41442                           ;	Fail-Safe Clock Monitor Enable bit
 41443                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 41444   300001                     	org	3145729
 41445   300001  FF                 	db	255
 41446                           
 41447                           ;Config register CONFIG3 @ 0x300002
 41448                           ;	MCLR Enable bit
 41449                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 41450                           ;	Power-up timer selection bits
 41451                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 41452                           ;	Multi-vector enable bit
 41453                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 41454                           ;	IVTLOCK bit One-way set enable bit
 41455                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 41456                           ;	Low Power BOR Enable bit
 41457                           ;	LPBOREN = OFF, Low-Power BOR disabled
 41458                           ;	Brown-out Reset Enable bits
 41459                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 41460   300002                     	org	3145730
 41461   300002  FF                 	db	255
 41462                           
 41463                           ;Config register CONFIG4 @ 0x300003
 41464                           ;	Brown-out Reset Voltage Selection bits
 41465                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 41466                           ;	ZCD Disable bit
 41467                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 41468                           ;	PPSLOCK bit One-Way Set Enable bit
 41469                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
 41470                           ;	Stack Full/Underflow Reset Enable bit
 41471                           ;	STVREN = ON, Stack full/underflow will cause Reset
 41472                           ;	Low Voltage Programming Enable bit
 41473                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 41474                           ;	Extended Instruction Set Enable bit
 41475                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 41476   300003                     	org	3145731
 41477   300003  F7                 	db	247
 41478                           
 41479                           ;Config register CONFIG5 @ 0x300004
 41480                           ;	WDT Period selection bits
 41481                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 41482                           ;	WDT operating mode
 41483                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 41484   300004                     	org	3145732
 41485   300004  9F                 	db	159
 41486                           
 41487                           ;Config register CONFIG6 @ 0x300005
 41488                           ;	WDT Window Select bits
 41489                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 41490                           ;	WDT input clock selector
 41491                           ;	WDTCCS = SC, Software Control
 41492   300005                     	org	3145733
 41493   300005  FF                 	db	255
 41494                           
 41495                           ;Config register CONFIG7 @ 0x300006
 41496                           ;	Boot Block Size selection bits
 41497                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 41498                           ;	Boot Block enable bit
 41499                           ;	BBEN = OFF, Boot block disabled
 41500                           ;	Storage Area Flash enable bit
 41501                           ;	SAFEN = OFF, SAF disabled
 41502                           ;	Background Debugger
 41503                           ;	DEBUG = 0x1, unprogrammed default
 41504   300006                     	org	3145734
 41505   300006  FF                 	db	255
 41506                           
 41507                           ;Config register CONFIG8 @ 0x300007
 41508                           ;	Boot Block Write Protection bit
 41509                           ;	WRTB = OFF, Boot Block not Write protected
 41510                           ;	Configuration Register Write Protection bit
 41511                           ;	WRTC = OFF, Configuration registers not Write protected
 41512                           ;	Data EEPROM Write Protection bit
 41513                           ;	WRTD = OFF, Data EEPROM not Write protected
 41514                           ;	SAF Write protection bit
 41515                           ;	WRTSAF = OFF, SAF not Write Protected
 41516                           ;	Application Block write protection bit
 41517                           ;	WRTAPP = OFF, Application Block not write protected
 41518   300007                     	org	3145735
 41519   300007  FF                 	db	255
 41520                           
 41521                           ;Config register CONFIG10 @ 0x300009
 41522                           ;	PFM and Data EEPROM Code Protection bit
 41523                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 41524   300009                     	org	3145737
 41525   300009  FF                 	db	255
 41526                           tosu	equ	0x4FF
 41527                           tosh	equ	0x4FE
 41528                           tosl	equ	0x4FD
 41529                           stkptr	equ	0x4FC
 41530                           pclatu	equ	0x4FB
 41531                           pclath	equ	0x4FA
 41532                           pcl	equ	0x4F9
 41533                           tblptru	equ	0x4F8
 41534                           tblptrh	equ	0x4F7
 41535                           tblptrl	equ	0x4F6
 41536                           tablat	equ	0x4F5
 41537                           prodh	equ	0x4F4
 41538                           prodl	equ	0x4F3
 41539                           indf0	equ	0x4EF
 41540                           postinc0	equ	0x4EE
 41541                           postdec0	equ	0x4ED
 41542                           preinc0	equ	0x4EC
 41543                           plusw0	equ	0x4EB
 41544                           fsr0h	equ	0x4EA
 41545                           fsr0l	equ	0x4E9
 41546                           wreg	equ	0x4E8
 41547                           indf1	equ	0x4E7
 41548                           postinc1	equ	0x4E6
 41549                           postdec1	equ	0x4E5
 41550                           preinc1	equ	0x4E4
 41551                           plusw1	equ	0x4E3
 41552                           fsr1h	equ	0x4E2
 41553                           fsr1l	equ	0x4E1
 41554                           bsr	equ	0x4E0
 41555                           indf2	equ	0x4DF
 41556                           postinc2	equ	0x4DE
 41557                           postdec2	equ	0x4DD
 41558                           preinc2	equ	0x4DC
 41559                           plusw2	equ	0x4DB
 41560                           fsr2h	equ	0x4DA
 41561                           fsr2l	equ	0x4D9
 41562                           status	equ	0x4D8

Data Sizes:
    Strings     2012
    Constant    7871
    Data        71
    BSS         4667
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK5           160    160     160
    BANK6           256    255     255
    BANK7           256     22     220
    BANK8           256      0     192
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    acquire_bus@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    acquire_bus@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    check_fs@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    create_chain@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 3288
		 -> f_mkdir@dj(COMRAM[40]), f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), 
		 -> files(BIGRAM[3276]), fsdir(BANK7[40]), 

    create_chain@obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), 

    create_name@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    create_name@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_31(CODE[2]), STR_88(CODE[5]), tmp_buf(BIGRAM[512]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK6[2]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), fsdir$fn(BANK7[12]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    ctx_$spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 

    dir_alloc@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), 

    dir_find@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_find@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_find@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), fsdir(BANK7[40]), 

    dir_next@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_next@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_next@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_read@dp	PTR struct . size(2) Largest target is 42
		 -> f_unlink@sdj(COMRAM[40]), fsdir(BANK7[40]), 

    dir_read@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_read@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_read@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 

    dir_register@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_register@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_register@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_remove@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_remove@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), fsdir(BANK7[40]), 

    dir_sdi@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    disk_io_handle@disk_datap	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_io_handle@filep	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    disk_io_handle@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    disk_io_handle@filep$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    disk_io_handle@filep$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), files(BIGRAM[3276]), fs(BIGRAM[560]), NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), NULL(NULL[0]), 

    dj$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    dj$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    djn$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    djn$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    djo$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    djo$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    drives$filep	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    emuz80_57q_read_from_sram@buf	PTR unsigned char  size(2) Largest target is 512
		 -> disk_buf(BANK8[128]), tmp_buf(BIGRAM[512]), 

    emuz80_57q_write_to_sram@buf	PTR unsigned char  size(2) Largest target is 5683
		 -> bdosccp(CODE[5683]), bios(CODE[1334]), disk_buf(BANK8[128]), rom(CODE[842]), 
		 -> tmp_buf(BIGRAM[512]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    f_close@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_close@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_closedir@dp	PTR struct . size(2) Largest target is 42
		 -> fsdir(BANK7[40]), 

    f_closedir@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_closedir@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_closedir@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_lseek@fp	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    f_lseek@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_lseek@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_lseek@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_mkdir@dj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_31(CODE[2]), STR_88(CODE[5]), tmp_buf(BIGRAM[512]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_31(CODE[2]), STR_88(CODE[5]), tmp_buf(BIGRAM[512]), 

    f_open@dj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    f_open@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_open@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_31(CODE[2]), STR_88(CODE[5]), tmp_buf(BIGRAM[512]), 

    f_opendir@dp	PTR struct . size(2) Largest target is 42
		 -> fsdir(BANK7[40]), 

    f_opendir@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_opendir@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_opendir@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_opendir@path	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_31(CODE[2]), STR_88(CODE[5]), tmp_buf(BIGRAM[512]), 

    f_read@br	PTR unsigned int  size(2) Largest target is 2
		 -> disk_io_handle@n(BANK6[2]), 

    f_read@buff	PTR void  size(2) Largest target is 128
		 -> disk_buf(BANK8[128]), 

    f_read@fp	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    f_read@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_read@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_read@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_read@rbuff	PTR unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK8[128]), 

    f_readdir@dp	PTR struct . size(2) Largest target is 42
		 -> fsdir(BANK7[40]), 

    f_readdir@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_readdir@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_readdir@fno	PTR struct . size(2) Largest target is 22
		 -> fileinfo(BANK7[22]), NULL(NULL[0]), 

    f_readdir@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_rename@djn$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_rename@djo$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_stat@dj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    f_sync@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_sync@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_truncate@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_truncate@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_unlink@dj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_unlink@sdj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_write@buff	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK8[128]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> disk_io_handle@n(BANK6[2]), 

    f_write@fp	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    f_write@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_write@fp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK8[128]), 

    FatFs	PTR struct .[1] size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    files$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    files$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    files$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), 

    follow_path@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    follow_path@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    follow_path@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_31(CODE[2]), STR_88(CODE[5]), tmp_buf(BIGRAM[512]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    fsdir$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    fsdir$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    fsdir$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    get_fat@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 3288
		 -> f_getfree@obj(COMRAM[14]), f_mkdir@dj(COMRAM[40]), f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_unlink@sdj(COMRAM[40]), files(BIGRAM[3276]), fsdir(BANK7[40]), 

    get_fat@obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    get_fileinfo@dp	PTR struct . size(2) Largest target is 42
		 -> f_stat@dj(COMRAM[40]), fsdir(BANK7[40]), 

    get_fileinfo@dp$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    get_fileinfo@dp$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    get_fileinfo@fno	PTR struct . size(2) Largest target is 22
		 -> fileinfo(BANK7[22]), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_getfree@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), f_mount@path(BANK6[2]), f_mount@rp(BANK6[2]), 
		 -> f_open@path(BANK6[2]), f_opendir@path(BANK6[2]), f_rename@path_new(COMRAM[2]), f_rename@path_old(COMRAM[2]), 
		 -> f_stat@path(COMRAM[2]), f_unlink@path(COMRAM[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_31(CODE[2]), STR_88(CODE[5]), tmp_buf(BIGRAM[512]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 512
		 -> STR_31(CODE[2]), STR_88(CODE[5]), tmp_buf(BIGRAM[512]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 512
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), fsdir$fn(BANK7[12]), STR_30(CODE[9]), 
		 -> tmp_buf(BIGRAM[512]), 

    memcmp@vl	PTR const void  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    memcmp@vr	PTR const void  size(2) Largest target is 512
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), fsdir(BANK7[40]), fsdir$fn(BANK7[12]), STR_30(CODE[9]), 
		 -> tmp_buf(BIGRAM[512]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3288
		 -> dbuf(BANK7[80]), disk_buf(BANK8[128]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), 
		 -> files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), fs$win(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 3288
		 -> dbuf(BANK7[80]), disk_buf(BANK8[128]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), 
		 -> files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), fs$win(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3288
		 -> dbuf(BANK7[80]), disk_buf(BANK8[128]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3288
		 -> dbuf(BANK7[80]), disk_buf(BANK8[128]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 3288
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), files(BIGRAM[3276]), fs(BIGRAM[560]), fsdir(BANK7[40]), 
		 -> fsdir$fn(BANK7[12]), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 3288
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), files(BIGRAM[3276]), fs(BIGRAM[560]), fsdir(BANK7[40]), 
		 -> fsdir$fn(BANK7[12]), NULL(NULL[0]), 

    menu_select$3971	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    menu_select@buf	const PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    mount_volume@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    mount_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_getfree@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), f_mount@path(BANK6[2]), f_open@path(BANK6[2]), 
		 -> f_opendir@path(BANK6[2]), f_rename@path_old(COMRAM[2]), f_stat@path(COMRAM[2]), f_unlink@path(COMRAM[2]), 

    mount_volume@rfs	PTR PTR struct . size(2) Largest target is 42
		 -> dj$obj(COMRAM[15]), f_getfree@fs(COMRAM[2]), f_mkdir@fs(COMRAM[2]), f_mount@fs(BANK6[2]), 
		 -> f_open@dj(BANK6[40]), f_open@fs(BANK6[2]), f_opendir@fs(BANK6[2]), f_rename@fs(COMRAM[2]), 
		 -> f_unlink@fs(COMRAM[2]), 

    move_window@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), ?_sprintf(BANK5[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_11(CODE[44]), STR_12(CODE[28]), 
		 -> STR_14(CODE[44]), STR_15(CODE[29]), STR_17(CODE[44]), STR_18(CODE[50]), 
		 -> STR_19(CODE[8]), STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), 
		 -> STR_22(CODE[9]), STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), 
		 -> STR_3(CODE[39]), STR_32(CODE[27]), STR_35(CODE[9]), STR_37(CODE[9]), 
		 -> STR_38(CODE[5]), STR_4(CODE[26]), STR_41(CODE[18]), STR_44(CODE[52]), 
		 -> STR_45(CODE[16]), STR_46(CODE[24]), STR_47(CODE[34]), STR_48(CODE[3]), 
		 -> STR_49(CODE[25]), STR_50(CODE[25]), STR_51(CODE[14]), STR_52(CODE[18]), 
		 -> STR_53(CODE[22]), STR_54(CODE[31]), STR_55(CODE[32]), STR_56(CODE[21]), 
		 -> STR_57(CODE[38]), STR_59(CODE[45]), STR_6(CODE[19]), STR_61(CODE[28]), 
		 -> STR_62(CODE[25]), STR_63(CODE[19]), STR_64(CODE[45]), STR_65(CODE[25]), 
		 -> STR_66(CODE[27]), STR_67(CODE[35]), STR_68(CODE[46]), STR_69(CODE[36]), 
		 -> STR_7(CODE[21]), STR_70(CODE[43]), STR_71(CODE[38]), STR_72(CODE[41]), 
		 -> STR_73(CODE[18]), STR_74(CODE[34]), STR_75(CODE[36]), STR_76(CODE[50]), 
		 -> STR_78(CODE[55]), STR_79(CODE[50]), STR_8(CODE[33]), STR_81(CODE[50]), 
		 -> STR_82(CODE[35]), STR_83(CODE[42]), STR_84(CODE[47]), STR_85(CODE[30]), 
		 -> STR_86(CODE[40]), STR_87(CODE[3]), STR_89(CODE[27]), STR_9(CODE[23]), 
		 -> STR_90(CODE[36]), 

    put_fat@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    release_bus@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    release_bus@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), f_unlink@dj(COMRAM[40]), 

    remove_chain@obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    S1913$filep	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), 

    S205$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    S212$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    S2463SDCard$spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    S247$dir_ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    S3296$buffer	PTR unsigned char  size(2) Largest target is 0

    S3296$source	PTR const unsigned char  size(2) Largest target is 0

    SDCard_command@response_buffer	PTR void  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), 

    SDCard_command@responsep	PTR unsigned char  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), 

    SDCard_command@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    __SDCard_command_r1@r1	PTR unsigned char  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 

    __SDCard_command_r1@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    __SDCard_crc16@buf	PTR const void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), 
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 
		 -> NULL(NULL[0]), 

    __SDCard_crc16@endp	PTR unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), 
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 
		 -> NULL(NULL[0]), 

    __SDCard_crc16@p	PTR unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), 
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 
		 -> NULL(NULL[0]), 

    SDCard_crc@buf	PTR const void  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_crc@endp	PTR unsigned char  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_crc@p	PTR unsigned char  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_end_transaction@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SDCard_init@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SDCard_read512@buf	PTR void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), fs(BIGRAM[560]), 
		 -> NULL(NULL[0]), 

    SDCard_read512@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    __SDCard_wait_response@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SDCard_write512@buf	PTR const void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_write512@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    sdj$dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    sdj$obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    sobj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 3288
		 -> dbuf(BANK7[80]), disk_buf(BANK8[128]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), 
		 -> files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), fs$win(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 3288
		 -> dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), files(BIGRAM[3276]), fs(BIGRAM[560]), fsdir(BANK7[40]), 
		 -> fsdir$fn(BANK7[12]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 15
		 -> STR_28(CODE[15]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), fileinfo(BANK7[22]), 

    SPI_SD_begin@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_begin@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_begin_transaction@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_configure@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_configure@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_ctx	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), 

    SPI_SD_dummy_clocks@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_end_transaction@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_receive@buf	PTR void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), fs(BIGRAM[560]), 
		 -> SDCard_init@buf(BANK5[5]), SPI_SD_receive_byte@dummy(COMRAM[1]), NULL(NULL[0]), 

    SPI_SD_receive@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_receive@p	PTR unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), fs(BIGRAM[560]), 
		 -> SDCard_init@buf(BANK5[5]), SPI_SD_receive_byte@dummy(COMRAM[1]), NULL(NULL[0]), 

    SPI_SD_receive_byte@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_select@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_send@buf	PTR const void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), __SDCard_command_r1@buf(COMRAM[6]), SDCard_write512@response(BANK5[1]), SPI_SD_dummy_clocks@dummy(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    SPI_SD_send@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK7[4]), NULL(NULL[0]), 

    SPI_SD_send@p	PTR unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), fs(BIGRAM[560]), 
		 -> fs$win(BIGRAM[512]), __SDCard_command_r1@buf(COMRAM[6]), SDCard_write512@response(BANK5[1]), SPI_SD_dummy_clocks@dummy(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), ?_sprintf(BANK5[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_43(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 560
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 560
		 -> disk_initialize@buf(BANK6[128]), dj$sect(COMRAM[4]), djn$sect(COMRAM[4]), djo$sect(COMRAM[4]), 
		 -> fileinfo(BANK7[22]), files$buf(BIGRAM[512]), files$dir_sect(BIGRAM[4]), files$fptr(BIGRAM[4]), 
		 -> files$obj$objsize(BIGRAM[4]), files$sect(BIGRAM[4]), fs(BIGRAM[560]), fs$csize(BIGRAM[2]), 
		 -> fs$fatbase(BIGRAM[4]), fs$pdrv(BIGRAM[1]), fs$volbase(BIGRAM[4]), fs$win(BIGRAM[512]), 
		 -> fs$winsect(BIGRAM[4]), fsdir$sect(BANK7[4]), ?_printf(BANK5[2]), sdj$sect(COMRAM[4]), 
		 -> ?_sprintf(BANK5[2]), STR_13(CODE[6]), STR_16(CODE[6]), STR_26(CODE[1]), 
		 -> STR_5(CODE[1]), STR_58(CODE[17]), STR_60(CODE[17]), STR_77(CODE[5]), 
		 -> STR_80(CODE[5]), STR_97(CODE[7]), util_addrdump@chars(BANK5[17]), util_hexdump@chars(BANK5[17]), 
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 560
		 -> disk_initialize@buf(BANK6[128]), dj$sect(COMRAM[4]), djn$sect(COMRAM[4]), djo$sect(COMRAM[4]), 
		 -> fileinfo(BANK7[22]), files$buf(BIGRAM[512]), files$dir_sect(BIGRAM[4]), files$fptr(BIGRAM[4]), 
		 -> files$obj$objsize(BIGRAM[4]), files$sect(BIGRAM[4]), fs(BIGRAM[560]), fs$csize(BIGRAM[2]), 
		 -> fs$fatbase(BIGRAM[4]), fs$pdrv(BIGRAM[1]), fs$volbase(BIGRAM[4]), fs$win(BIGRAM[512]), 
		 -> fs$winsect(BIGRAM[4]), fsdir$sect(BANK7[4]), ?_printf(BANK5[2]), sdj$sect(COMRAM[4]), 
		 -> ?_sprintf(BANK5[2]), STR_13(CODE[6]), STR_16(CODE[6]), STR_26(CODE[1]), 
		 -> STR_5(CODE[1]), STR_58(CODE[17]), STR_60(CODE[17]), STR_77(CODE[5]), 
		 -> STR_80(CODE[5]), util_addrdump@chars(BANK5[17]), util_hexdump@chars(BANK5[17]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_28(CODE[15]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 22
		 -> fileinfo(BANK7[22]), fileinfo$fname(BANK7[13]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_36(CODE[9]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), fileinfo(BANK7[22]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), fileinfo(BANK7[22]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_42(CODE[9]), STR_91(CODE[4]), STR_94(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 22
		 -> fileinfo(BANK7[22]), fileinfo$fname(BANK7[13]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_33(CODE[9]), STR_34(CODE[8]), STR_39(CODE[9]), STR_40(CODE[8]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    util_addrdump@addr	PTR const void  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), 
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    util_addrdump@buf	PTR const unsigned char  size(2) Largest target is 3288
		 -> disk_buf(BANK8[128]), disk_initialize@buf(BANK6[128]), files(BIGRAM[3276]), files$buf(BIGRAM[512]), 
		 -> fs(BIGRAM[560]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    util_addrdump@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_13(CODE[6]), STR_16(CODE[6]), STR_77(CODE[5]), STR_80(CODE[5]), 

    util_hexdump@addr	PTR const void  size(2) Largest target is 128
		 -> disk_initialize@buf(BANK6[128]), 

    util_hexdump@buf	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_initialize@buf(BANK6[128]), 

    util_hexdump@header	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_5(CODE[1]), 

    validate$1075	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 3288
		 -> files(BIGRAM[3276]), fsdir(BANK7[40]), 

    validate@obj$fs	PTR struct . size(2) Largest target is 560
		 -> fs(BIGRAM[560]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_close@fs(COMRAM[2]), f_closedir@fs(BANK5[2]), f_lseek@fs(BANK6[2]), f_read@fs(BANK6[2]), 
		 -> f_readdir@fs(BANK6[2]), f_sync@fs(BANK6[2]), f_truncate@fs(COMRAM[2]), f_write@fs(BANK6[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 55
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_11(CODE[44]), STR_12(CODE[28]), 
		 -> STR_14(CODE[44]), STR_15(CODE[29]), STR_17(CODE[44]), STR_18(CODE[50]), 
		 -> STR_19(CODE[8]), STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), 
		 -> STR_22(CODE[9]), STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), 
		 -> STR_3(CODE[39]), STR_32(CODE[27]), STR_35(CODE[9]), STR_37(CODE[9]), 
		 -> STR_38(CODE[5]), STR_4(CODE[26]), STR_41(CODE[18]), STR_43(CODE[15]), 
		 -> STR_44(CODE[52]), STR_45(CODE[16]), STR_46(CODE[24]), STR_47(CODE[34]), 
		 -> STR_48(CODE[3]), STR_49(CODE[25]), STR_50(CODE[25]), STR_51(CODE[14]), 
		 -> STR_52(CODE[18]), STR_53(CODE[22]), STR_54(CODE[31]), STR_55(CODE[32]), 
		 -> STR_56(CODE[21]), STR_57(CODE[38]), STR_59(CODE[45]), STR_6(CODE[19]), 
		 -> STR_61(CODE[28]), STR_62(CODE[25]), STR_63(CODE[19]), STR_64(CODE[45]), 
		 -> STR_65(CODE[25]), STR_66(CODE[27]), STR_67(CODE[35]), STR_68(CODE[46]), 
		 -> STR_69(CODE[36]), STR_7(CODE[21]), STR_70(CODE[43]), STR_71(CODE[38]), 
		 -> STR_72(CODE[41]), STR_73(CODE[18]), STR_74(CODE[34]), STR_75(CODE[36]), 
		 -> STR_76(CODE[50]), STR_78(CODE[55]), STR_79(CODE[50]), STR_8(CODE[33]), 
		 -> STR_81(CODE[50]), STR_82(CODE[35]), STR_83(CODE[42]), STR_84(CODE[47]), 
		 -> STR_85(CODE[30]), STR_86(CODE[40]), STR_87(CODE[3]), STR_89(CODE[27]), 
		 -> STR_9(CODE[23]), STR_90(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 55
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_11(CODE[44]), STR_12(CODE[28]), 
		 -> STR_14(CODE[44]), STR_15(CODE[29]), STR_17(CODE[44]), STR_18(CODE[50]), 
		 -> STR_19(CODE[8]), STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), 
		 -> STR_22(CODE[9]), STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), 
		 -> STR_3(CODE[39]), STR_32(CODE[27]), STR_35(CODE[9]), STR_37(CODE[9]), 
		 -> STR_38(CODE[5]), STR_4(CODE[26]), STR_41(CODE[18]), STR_43(CODE[15]), 
		 -> STR_44(CODE[52]), STR_45(CODE[16]), STR_46(CODE[24]), STR_47(CODE[34]), 
		 -> STR_48(CODE[3]), STR_49(CODE[25]), STR_50(CODE[25]), STR_51(CODE[14]), 
		 -> STR_52(CODE[18]), STR_53(CODE[22]), STR_54(CODE[31]), STR_55(CODE[32]), 
		 -> STR_56(CODE[21]), STR_57(CODE[38]), STR_59(CODE[45]), STR_6(CODE[19]), 
		 -> STR_61(CODE[28]), STR_62(CODE[25]), STR_63(CODE[19]), STR_64(CODE[45]), 
		 -> STR_65(CODE[25]), STR_66(CODE[27]), STR_67(CODE[35]), STR_68(CODE[46]), 
		 -> STR_69(CODE[36]), STR_7(CODE[21]), STR_70(CODE[43]), STR_71(CODE[38]), 
		 -> STR_72(CODE[41]), STR_73(CODE[18]), STR_74(CODE[34]), STR_75(CODE[36]), 
		 -> STR_76(CODE[50]), STR_78(CODE[55]), STR_79(CODE[50]), STR_8(CODE[33]), 
		 -> STR_81(CODE[50]), STR_82(CODE[35]), STR_83(CODE[42]), STR_84(CODE[47]), 
		 -> STR_85(CODE[30]), STR_86(CODE[40]), STR_87(CODE[3]), STR_89(CODE[27]), 
		 -> STR_9(CODE[23]), STR_90(CODE[36]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_11(CODE[44]), STR_12(CODE[28]), 
		 -> STR_14(CODE[44]), STR_15(CODE[29]), STR_17(CODE[44]), STR_18(CODE[50]), 
		 -> STR_19(CODE[8]), STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), 
		 -> STR_22(CODE[9]), STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), 
		 -> STR_3(CODE[39]), STR_32(CODE[27]), STR_35(CODE[9]), STR_37(CODE[9]), 
		 -> STR_38(CODE[5]), STR_4(CODE[26]), STR_41(CODE[18]), STR_43(CODE[15]), 
		 -> STR_44(CODE[52]), STR_45(CODE[16]), STR_46(CODE[24]), STR_47(CODE[34]), 
		 -> STR_48(CODE[3]), STR_49(CODE[25]), STR_50(CODE[25]), STR_51(CODE[14]), 
		 -> STR_52(CODE[18]), STR_53(CODE[22]), STR_54(CODE[31]), STR_55(CODE[32]), 
		 -> STR_56(CODE[21]), STR_57(CODE[38]), STR_59(CODE[45]), STR_6(CODE[19]), 
		 -> STR_61(CODE[28]), STR_62(CODE[25]), STR_63(CODE[19]), STR_64(CODE[45]), 
		 -> STR_65(CODE[25]), STR_66(CODE[27]), STR_67(CODE[35]), STR_68(CODE[46]), 
		 -> STR_69(CODE[36]), STR_7(CODE[21]), STR_70(CODE[43]), STR_71(CODE[38]), 
		 -> STR_72(CODE[41]), STR_73(CODE[18]), STR_74(CODE[34]), STR_75(CODE[36]), 
		 -> STR_76(CODE[50]), STR_78(CODE[55]), STR_79(CODE[50]), STR_8(CODE[33]), 
		 -> STR_81(CODE[50]), STR_82(CODE[35]), STR_83(CODE[42]), STR_84(CODE[47]), 
		 -> STR_85(CODE[30]), STR_86(CODE[40]), STR_87(CODE[3]), STR_89(CODE[27]), 
		 -> STR_9(CODE[23]), STR_90(CODE[36]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _wait_for_programmer->_printf
    _sprintf->_vfprintf
    _get_fileinfo->_ld_dword
    _ld_clust->_ld_word
    _create_name->_memset
    _dir_clear->_sync_window
    _mem_init->_printf
    _mount_volume->_disk_status
    _disk_initialize->_printf
    _util_hexdump->_printf
    _sync_fs->_sync_window
    _disk_ioctl->_printf
    _st_clust->_st_word
    _validate->_disk_status
    _disk_status->_printf
    _move_window->_sync_window
    _disk_write->_printf
    _SDCard_write512->_printf
    _disk_read->_printf
    _SDCard_read512->_printf
    _util_addrdump->_printf
    _clst2sect->___lmul
    ___xxtofl->___lmul
    _SD_init->_SDCard_init
    _SDCard_init->_printf
    _SPI_SD_configure->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod
    _ctoa->_fputc
    _fputc->_putch
    _SDCard_command->___SDCard_command_r1
    ___SDCard_command_r1->___SDCard_wait_response
    ___SDCard_wait_response->_SPI_SD_receive_byte
    _SPI_SD_receive_byte->_SPI_SD_receive
    _SPI_SD_begin_transaction->_SPI_SD_select
    _SPI_SD_begin_transaction->_acquire_bus
    _SDCard_end_transaction->_SPI_SD_dummy_clocks
    _SPI_SD_end_transaction->_SPI_SD_select
    _SPI_SD_end_transaction->_release_bus
    _SPI_SD_dummy_clocks->_SPI_SD_send

Critical Paths under _main in BANK5

    _wait_for_programmer->_printf
    _sprintf->_vfprintf
    _dir_read->_move_window
    _f_open->_move_window
    _dir_find->_move_window
    _dir_register->_move_window
    _dir_alloc->_move_window
    _dir_clear->_sync_window
    _f_closedir->_validate
    _mem_init->_printf
    _mount_volume->_move_window
    _check_fs->_move_window
    _disk_initialize->_SDCard_read512
    _util_hexdump->_printf
    _f_sync->_move_window
    _f_sync->_sync_fs
    _sync_fs->_sync_window
    _disk_ioctl->_printf
    _disk_status->_printf
    _put_fat->_move_window
    _get_fat->_move_window
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_SDCard_write512
    _SDCard_write512->_util_addrdump
    _disk_read->_SDCard_read512
    _SDCard_read512->_util_addrdump
    _util_addrdump->_printf
    _SD_init->_SDCard_init
    _SDCard_init->_SPI_SD_configure
    _SPI_SD_configure->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK6

    _menu_select->_f_open
    _f_readdir->_dir_read
    _dir_read->_dir_next
    _f_opendir->_mount_volume
    _f_open->_mount_volume
    _remove_chain->_put_fat
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _f_mount->_mount_volume
    _mount_volume->_disk_initialize
    _find_volume->_check_fs
    _check_fs->_move_window
    _disk_io_handle->_f_write
    _f_write->_create_chain
    _f_sync->_move_window
    _f_sync->_sync_fs
    _f_read->_get_fat
    _f_lseek->_create_chain
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window

Critical Paths under _main in BANK7

    _main->_menu_select

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0 26999451
                                             18 BANK7      4     4      0
                            _SD_init
                            ___fldiv
                             ___lmul
                           ___xxtofl
                     _disk_io_handle
        _emuz80_57q_enter_bus_master
         _emuz80_57q_exit_bus_master
               _emuz80_57q_start_cpu
                _emuz80_57q_sys_init
           _emuz80_57q_write_to_sram
                            _f_mount
                           _mem_init
                        _menu_select
                             _printf
                _wait_for_programmer
 ---------------------------------------------------------------------------------
 (1) _wait_for_programmer                                  2     2      0   50524
                                             70 BANK5      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _menu_select                                         18    16      2 19760904
                                              0 BANK7     18    16      2
                             ___wmul
                         _f_closedir
                             _f_open
                          _f_opendir
                          _f_readdir
                              _getch
                             _printf
                            _sprintf
                             _strcmp
                             _strcpy
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     1      6    1091
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4     264
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8   45590
                                             58 BANK5     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _f_readdir                                            7     3      4 4740018
                                            111 BANK6      7     3      4
                           _dir_next
                           _dir_read
                            _dir_sdi
                       _get_fileinfo
                           _validate
 ---------------------------------------------------------------------------------
 (3) _get_fileinfo                                        13     9      4    3619
                                             13 COMRAM    13     9      4
                           _ld_dword
                            _ld_word
 ---------------------------------------------------------------------------------
 (3) _dir_read                                            13     9      4 2337691
                                             98 BANK6     13     9      4
                           _dir_next
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_opendir                                            7     3      4 4979269
                                            175 BANK6      7     3      4
                            _dir_sdi
                        _follow_path
                           _ld_clust
                       _mount_volume
 ---------------------------------------------------------------------------------
 (2) _f_open                                              82    77      5 9889660
                                            175 BANK6     80    75      5
                          _clst2sect
                       _dir_register
                          _disk_read
                        _follow_path
                            _get_fat
                        _get_fattime
                           _ld_clust
                           _ld_dword
                             _memset
                       _mount_volume
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (3) _remove_chain                                        25    15     10  937641
                                             43 BANK6     25    15     10
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _follow_path                                         14    10      4 3288015
                                            106 BANK6     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (3) _ld_clust                                            12     8      4    2547
                                              7 COMRAM    12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             8     6      2 2809721
                                             98 BANK6      8     6      2
                           _dir_next
                            _dir_sdi
                             _memcmp
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _create_name                                         21    17      4    3067
                                              8 COMRAM    21    17      4
                            _dbc_1st
                            _dbc_2nd
                             _memset
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strchr                                               4     0      4     240
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _dbc_2nd                                              3     1      2     132
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _dbc_1st                                              3     1      2      88
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _dir_register                                         5     3      2 3275100
                                            110 BANK6      5     3      2
                          _dir_alloc
                             _memcpy
                             _memset
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _dir_alloc                                           12     8      4 2808639
                                             98 BANK6     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _dir_sdi                                             30    24      6  471184
                                             36 BANK6     26    20      6
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (4) _dir_next                                            30    26      4 1874666
                                             72 BANK6     26    22      4
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (5) _dir_clear                                           18    12      6  465391
                                              0 BANK6     18    12      6
                          _clst2sect
                         _disk_write
                             _memset
                        _sync_window
 ---------------------------------------------------------------------------------
 (2) _f_closedir                                           5     3      2   52129
                                             81 BANK5      5     3      2
                           _validate
 ---------------------------------------------------------------------------------
 (1) _mem_init                                            10    10      0   54275
                                             70 BANK5     10    10      0
          _emuz80_57q_read_from_sram
           _emuz80_57q_write_to_sram
                             _memcmp
                             _printf
 ---------------------------------------------------------------------------------
 (1) _f_mount                                             12     7      5 1218135
                                            175 BANK6     12     7      5
                       _get_ldnumber
                       _mount_volume
 ---------------------------------------------------------------------------------
 (3) _mount_volume                                        46    41      5 1216875
                                            129 BANK6     46    41      5
                            ___lldiv
                             ___lmul
                    _disk_initialize
                        _disk_status
                        _find_volume
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _get_ldnumber                                        15    13      2     644
                                              0 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (4) _find_volume                                         30    26      4  469045
                                             24 BANK6     30    26      4
                           _check_fs
                           _ld_dword
 ---------------------------------------------------------------------------------
 (5) _check_fs                                            14     8      6  467145
                                             10 BANK6     14     8      6
                           _ld_dword
                            _ld_word
                             _memcmp
                        _move_window
 ---------------------------------------------------------------------------------
 (6) _memcmp                                              12     6      6    1093
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (4) _disk_initialize                                    133   133      0  226345
                                            132 BANK5      4     4      0
                                              0 BANK6    129   129      0
                     _SDCard_read512
                             _printf
                       _util_hexdump
 ---------------------------------------------------------------------------------
 (5) _util_hexdump                                        29    23      6   51437
                                             70 BANK5     29    23      6
                             _printf
 ---------------------------------------------------------------------------------
 (1) _emuz80_57q_sys_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _emuz80_57q_start_cpu                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _emuz80_57q_exit_bus_master                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _emuz80_57q_enter_bus_master                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disk_io_handle                                      17    17      0 5684220
                                            115 BANK6     17    17      0
                             ___wmul
           _emuz80_57q_get_from_sram
          _emuz80_57q_read_from_sram
           _emuz80_57q_write_to_sram
                            _f_lseek
                             _f_read
                             _f_sync
                            _f_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _f_write                                             43    35      8 1455746
                                             72 BANK6     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                             _memcpy
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_sync                                              11     9      2 1267722
                                             10 BANK6     11     9      2
                         _disk_write
                        _get_fattime
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (3) _sync_fs                                             11     9      2  517228
                                            159 BANK5      1     1      0
                                              0 BANK6     10     8      2
                         _disk_ioctl
                         _disk_write
                             _memset
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    1425
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _disk_ioctl                                           5     2      3   50854
                                             70 BANK5      5     2      3
                             _printf
 ---------------------------------------------------------------------------------
 (3) _st_clust                                             9     1      8    2197
                                              4 COMRAM     9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (3) _get_fattime                                          4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _f_read                                              43    35      8  984576
                                             36 BANK6     43    35      8
                          _clst2sect
                          _disk_read
                         _disk_write
                            _get_fat
                             _memcpy
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_lseek                                             41    35      6 1921157
                                             72 BANK6     41    35      6
                            ___lldiv
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _get_fat
                           _validate
 ---------------------------------------------------------------------------------
 (3) _validate                                            11     7      4   51956
                                             70 BANK5     11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (4) _disk_status                                          1     1      0   50546
                                             94 COMRAM     1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (5) _create_chain                                        29    23      6  938305
                                             43 BANK6     29    23      6
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (6) _put_fat                                             33    23     10  468546
                                             10 BANK6     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (7) _st_word                                              4     0      4     874
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _st_dword                                             6     0      6    2024
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             26    20      6  467489
                                             10 BANK6     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _move_window                                         11     5      6  462322
                                            159 BANK5      1     1      0
                                              0 BANK6     10     4      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _sync_window                                         19    17      2  230941
                                             94 COMRAM     1     1      0
                                            141 BANK5     18    16      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (7) _disk_write                                          11     3      8  230403
                                            130 BANK5     11     3      8
                    _SDCard_write512
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (8) _SDCard_write512                                     27    17     10  125156
                                            103 BANK5     27    17     10
             _SDCard_end_transaction
                _SPI_SD_dummy_clocks
                        _SPI_SD_send
                ___SDCard_command_r1
                     ___SDCard_crc16
             ___SDCard_wait_response
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (6) _disk_read                                           11     3      8  228347
                                            132 BANK5     11     3      8
                     _SDCard_read512
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (7) _SDCard_read512                                      29    19     10  123973
                                            103 BANK5     29    19     10
             _SDCard_end_transaction
                     _SPI_SD_receive
                _SPI_SD_receive_byte
                ___SDCard_command_r1
                     ___SDCard_crc16
             ___SDCard_wait_response
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (8) _util_addrdump                                       33    23     10   52258
                                             70 BANK5     33    23     10
                             _printf
 ---------------------------------------------------------------------------------
 (9) ___SDCard_crc16                                      13     7      6    1785
                                              0 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (4) _ld_word                                              7     5      2    1597
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _ld_dword                                            13     9      4    1231
                                              0 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (4) _clst2sect                                           12     6      6    1965
                                             12 COMRAM    12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     664
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     564
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _emuz80_57q_write_to_sram                            12     6      6    1389
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _emuz80_57q_read_from_sram                           10     4      6     933
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _emuz80_57q_get_from_sram                             5     3      2     471
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             12 COMRAM    14    10      4
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SD_init                                              2     2      0  176225
                                             93 BANK5      2     2      0
                        _SDCard_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SDCard_init                                         16    10      6  125701
                                             94 COMRAM     1     1      0
                                             78 BANK5     15     9      6
                     _SDCard_command
             _SDCard_end_transaction
                       _SPI_SD_begin
           _SPI_SD_begin_transaction
                   _SPI_SD_configure
                _SPI_SD_dummy_clocks
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SPI_SD_configure                                    10     4      6   51265
                                             70 BANK5      8     2      6
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16     4     12   50524
                                             92 COMRAM     2     2      0
                                             58 BANK5     12     0     12
                             ___lmul (ARG)
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45223
                                             90 COMRAM     2     2      0
                                             52 BANK5      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           18    12      6   44617
                                             80 COMRAM    10     4      6
                                             44 BANK5      8     8      0
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                21    14      7    5546
                                             26 COMRAM    21    14      7
                                _pad
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2108
                                             10 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     5      4    1795
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   23367
                                             71 COMRAM     9     2      7
                                              0 BANK5     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     529
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    2267
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             51 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2505
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             26 COMRAM    25    17      8
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                15     9      6    6556
                                             26 COMRAM    15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4952
                                             17 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2017
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     448
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1949
                                             10 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1616
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_SD_begin                                         4     2      2     121
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SDCard_command                                      15     7      8   15317
                                             39 COMRAM    15     7      8
             _SDCard_end_transaction
                     _SPI_SD_receive
                ___SDCard_command_r1
 ---------------------------------------------------------------------------------
 (9) ___SDCard_command_r1                                 16    10      6    8798
                                             23 COMRAM    16    10      6
                         _SDCard_crc
           _SPI_SD_begin_transaction
                _SPI_SD_dummy_clocks
                        _SPI_SD_send
             ___SDCard_wait_response
 ---------------------------------------------------------------------------------
 (9) ___SDCard_wait_response                               6     4      2    2322
                                             17 COMRAM     6     4      2
                _SPI_SD_receive_byte
 ---------------------------------------------------------------------------------
 (10) _SPI_SD_receive_byte                                 3     1      2    1830
                                             14 COMRAM     3     1      2
                     _SPI_SD_receive
 ---------------------------------------------------------------------------------
 (11) _SPI_SD_receive                                     14     8      6    1347
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (10) _SPI_SD_begin_transaction                            2     0      2     763
                                              4 COMRAM     2     0      2
                      _SPI_SD_select
                        _acquire_bus
 ---------------------------------------------------------------------------------
 (10) _SDCard_crc                                         11     7      4     381
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (9) _SDCard_end_transaction                               2     2      0    3619
                                             17 COMRAM     2     2      0
                _SPI_SD_dummy_clocks
             _SPI_SD_end_transaction
 ---------------------------------------------------------------------------------
 (10) _SPI_SD_end_transaction                              2     0      2     665
                                              4 COMRAM     2     0      2
                      _SPI_SD_select
                        _release_bus
 ---------------------------------------------------------------------------------
 (11) _SPI_SD_select                                       4     0      4     326
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _SPI_SD_dummy_clocks                                 7     3      4    2909
                                             10 COMRAM     7     3      4
                        _SPI_SD_send
                        _acquire_bus
                        _release_bus
 ---------------------------------------------------------------------------------
 (11) _release_bus                                         4     2      2     219
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _acquire_bus                                         4     2      2     241
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _SPI_SD_send                                        11     5      6    1552
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SD_init
     _SDCard_init
       _SDCard_command
         _SDCard_end_transaction
           _SPI_SD_dummy_clocks
             _SPI_SD_send
             _acquire_bus
             _release_bus
           _SPI_SD_end_transaction
             _SPI_SD_select
             _release_bus
         _SPI_SD_receive
         ___SDCard_command_r1
           _SDCard_crc
           _SPI_SD_begin_transaction
             _SPI_SD_select
             _acquire_bus
           _SPI_SD_dummy_clocks
           _SPI_SD_send
           ___SDCard_wait_response
             _SPI_SD_receive_byte
               _SPI_SD_receive
       _SDCard_end_transaction
       _SPI_SD_begin
       _SPI_SD_begin_transaction
       _SPI_SD_configure
         _printf
           ___lmul (ARG)
           ___xxtofl (ARG)
             ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _ctoa
                 _fputc
                   _putch
               _dtoa
                 ___aldiv
                 ___almod
                 _abs
                   ___almod (ARG)
                 _pad
                   _fputc
                   _fputs
                     _fputc
               _efgtoa
                 ___fladd
                 ___fldiv
                   ___lmul (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _labs
                 _memcpy
                 _pad
                 _strcpy
               _fputc
               _read_prec_or_width
                 ___wmul
               _stoa
                 _fputc
               _xtoa
                 _pad
       _SPI_SD_dummy_clocks
       _printf
     _printf
   ___fldiv
   ___lmul
   ___xxtofl
   _disk_io_handle
     ___wmul
     _emuz80_57q_get_from_sram
     _emuz80_57q_read_from_sram
     _emuz80_57q_write_to_sram
     _f_lseek
       ___lldiv
       _clst2sect
         ___lmul
       _create_chain
         _get_fat
           _ld_dword
           _ld_word
           _move_window
             _disk_read
               _SDCard_read512
                 _SDCard_end_transaction
                 _SPI_SD_receive
                 _SPI_SD_receive_byte
                 ___SDCard_command_r1
                 ___SDCard_crc16
                 ___SDCard_wait_response
                 _printf
                 _util_addrdump
                   _printf
               _printf
               _util_addrdump
             _sync_window
               _disk_write
                 _SDCard_write512
                   _SDCard_end_transaction
                   _SPI_SD_dummy_clocks
                   _SPI_SD_send
                   ___SDCard_command_r1
                   ___SDCard_crc16
                   ___SDCard_wait_response
                   _printf
                   _util_addrdump
                 _printf
                 _util_addrdump
         _put_fat
           _ld_dword
           _move_window
           _st_dword
           _st_word
       _disk_read
       _disk_write
       _get_fat
       _validate
         _disk_status
           _printf
     _f_read
       _clst2sect
       _disk_read
       _disk_write
       _get_fat
       _memcpy
       _validate
     _f_sync
       _disk_write
       _get_fattime
       _move_window
       _st_clust
         _st_word
       _st_dword
       _st_word
       _sync_fs
         _disk_ioctl
           _printf
         _disk_write
         _memset
         _st_dword
         _st_word
         _sync_window
       _validate
     _f_write
       _clst2sect
       _create_chain
       _disk_read
       _disk_write
       _memcpy
       _validate
     _printf
   _emuz80_57q_enter_bus_master
   _emuz80_57q_exit_bus_master
   _emuz80_57q_start_cpu
   _emuz80_57q_sys_init
   _emuz80_57q_write_to_sram
   _f_mount
     _get_ldnumber
     _mount_volume
       ___lldiv
       ___lmul
       _disk_initialize
         _SDCard_read512
         _printf
         _util_hexdump
           _printf
       _disk_status
       _find_volume
         _check_fs
           _ld_dword
           _ld_word
           _memcmp
           _move_window
         _ld_dword
       _get_ldnumber
       _ld_dword
       _ld_word
       _move_window
   _mem_init
     _emuz80_57q_read_from_sram
     _emuz80_57q_write_to_sram
     _memcmp
     _printf
   _menu_select
     ___wmul
     _f_closedir
       _validate
     _f_open
       _clst2sect
       _dir_register
         _dir_alloc
           _dir_next
             _clst2sect
             _create_chain
             _dir_clear
               _clst2sect
               _disk_write
               _memset
               _sync_window
             _get_fat
           _dir_sdi
             _clst2sect
             _get_fat
           _move_window
         _memcpy
         _memset
         _move_window
       _disk_read
       _follow_path
         _create_name
           _dbc_1st
           _dbc_2nd
           _memset
           _strchr
         _dir_find
           _dir_next
           _dir_sdi
           _memcmp
           _move_window
         _dir_sdi
         _ld_clust
           _ld_word
       _get_fat
       _get_fattime
       _ld_clust
       _ld_dword
       _memset
       _mount_volume
       _move_window
       _remove_chain
         _get_fat
         _put_fat
       _st_clust
       _st_dword
     _f_opendir
       _dir_sdi
       _follow_path
       _ld_clust
       _mount_volume
     _f_readdir
       _dir_next
       _dir_read
         _dir_next
         _move_window
       _dir_sdi
       _get_fileinfo
         _ld_dword
         _ld_word
       _validate
     _getch
     _printf
     _sprintf
       _vfprintf
     _strcmp
     _strcpy
     _strncmp
   _printf
   _wait_for_programmer
     _printf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0    10FC      69       53.1%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhlh      12A      0       0      91        0.0%
BITBIGSFRlllhlh    124      0       0     101        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0      C0      11       75.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100     16      DC       9       85.9%
BITBANK6           100      0       0       6        0.0%
BANK6              100     FF      FF       7       99.6%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0     A0      A0       5      100.0%
BITBIGSFRlllll      80      0       0     106        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRlllhhh     50      0       0      95        0.0%
BITBIGSFRlllhhl     4E      0       0      98        0.0%
BITBIGSFRlhhhhh     3E      0       0      80        0.0%
BITBIGSFRllllhh     24      0       0     103        0.0%
BITBIGSFRlllhll     22      0       0     102        0.0%
BITBIGSFRhhhhh      1F      0       0      70        0.0%
BITBIGSFRlhhhhh     19      0       0      83        0.0%
BITBIGSFRlhhhhh     12      0       0      82        0.0%
BITBIGSFRlhhhhh      F      0       0      79        0.0%
BITBIGSFRlllhhl      A      0       0      96        0.0%
BITBIGSFRhhhhl       9      0       0      71        0.0%
BITBIGSFRlllhhl      9      0       0      99        0.0%
BITBIGSFRlhlll       7      0       0      93        0.0%
BITBIGSFRlhhhhh      6      0       0      86        0.0%
BITBIGSFRlhhhl       6      0       0      89        0.0%
BITBIGSFRlhhl        6      0       0      90        0.0%
BITBIGSFRhlll        6      0       0      76        0.0%
BITBIGSFRlhhhhh      5      0       0      77        0.0%
BITBIGSFRlhhhhh      5      0       0      84        0.0%
BITBIGSFRlhhhhl      4      0       0      87        0.0%
BITBIGSFRlhhhhh      3      0       0      81        0.0%
BITBIGSFRlhhhhh      2      0       0      78        0.0%
BITBIGSFRhllhhh      2      0       0      75        0.0%
BITBIGSFRhhhl        2      0       0      72        0.0%
BITBIGSFRhlhhhl      2      0       0      74        0.0%
BITBIGSFRhhl         2      0       0      73        0.0%
BITBIGSFRllllhh      1      0       0     104        0.0%
BITBIGSFRllllhl      1      0       0     105        0.0%
BITBIGSFRlllhhl      1      0       0      97        0.0%
BITBIGSFRlhllh       1      0       0      92        0.0%
BITBIGSFRlllhhl      1      0       0     100        0.0%
BITBIGSFRlhhhhh      1      0       0      85        0.0%
BITBIGSFRlhhhhl      1      0       0      88        0.0%
BITBIGSFRllh         1      0       0      94        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39A     107        0.0%
DATA                 0      0    1496       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Aug 04 22:25:50 2024

                        get_fat@clst 060C                         ___fldiv@aexp 0533  
                       ___fldiv@bexp 0532                       ?_SPI_SD_select 0501  
                       ___fldiv@sign 052B                         create_name@c 051D  
                       create_name@d 0512                         create_name@i 051B  
                       create_name@p 0515                     get_ldnumber@path 0501  
                    ?_SPI_SD_receive 0501                                   l29 7A20  
                                 l97 996C                                   _fs 158C  
                  ?_SPI_SD_configure 05A6                  ___wmul@multiplicand 0503  
                  SDCard_command@spi 0530                     _menu_select$3971 07C5  
                     ??_dir_register 0560                     disk_write@sector 05E4  
                      create_name@dp 0509                        create_name@ni 0513  
                      create_name@si 0517                       create_chain@cs 0644  
                     create_chain@fs 0642                    SDCard_read512@crc 05E1  
                  SDCard_read512@buf 05CD                                  l112 7EF2  
       ?_emuz80_57q_enter_bus_master 0501                                  l122 7CC6  
                                l202 7148                                  l231 4126  
                                l320 3568                                  l216 6600  
                                l321 359A                                  l226 411C  
                                l323 3592                                  l229 4418  
                                l600 83EC                                  l352 4C4E  
                                l249 35E2                                  l362 3DCA  
                                l531 6E92                                  l632 254E  
                                l624 219A                    SDCard_read512@spi 05DF  
                                l617 1FE8                                  l378 4020  
                                l626 2190                                  l618 1FE0  
                                l731 1BB4                                  l396 81BC  
                                l725 1934                                  l655 2A7C  
                                l567 0C10                                  l487 6C48  
                                l594 8760                                  l578 0FCA  
                                l771 8D24                                  l684 1752  
                                l589 8740                                  l685 145A  
                                l757 7C4C                                  l774 8CE4  
                                l759 7BFC                   ??_SPI_SD_configure 05AC  
                                _GIE 26B7                                  _RA0 2670  
                                _BSR 04E0                                  _RC6 2686  
       emuz80_57q_read_from_sram@buf 0503         emuz80_57q_read_from_sram@len 0505  
                                _abs 9E76                                  _pad 93A4  
                                _rom F4D8                                  prod 04F3  
                     ??_create_chain 0631                                  wreg 04E8  
                        disk_write@i 05EB                         ___flmul@aexp 050E  
                       ___flmul@bexp 0513                         ___flmul@sign 050D  
                       ___flmul@temp 0518                         ___flmul@prod 0514  
                     create_name@sfn 0519                      create_chain@ncl 063E  
                    create_chain@obj 062B              SPI_SD_receive_byte@ctx_ 050F  
                    create_chain@scl 063A                      create_chain@res 0639  
                        ld_clust@dir 050A                                 U3TXB 02C9  
                 SDCard_read512@addr 05C7                         ___fltol@exp1 050A  
                               l1021 95A2                                 ?_abs 050B  
                               PORTA 04CE                                 l1501 59CA  
                               l2310 549E                                 PORTF 04D3  
                               l1433 9778                                 l1361 98D0  
                               l1362 98F6                                 l1354 94B0  
                               l2243 4898                                 l1355 94F6  
                               l1460 586E                                 l1444 5850  
                               l2244 4876                                 l2309 54A2  
                               l1463 5886                                 l1391 81E2  
                               l1367 8B70                                 l1480 5922  
                               l1472 58CE                                 l1448 5812  
                               l2328 44AA                                 l2504 017C  
                               l1704 5B54                                 l1457 5856  
                               l1449 5816                                 l2345 4722  
                               l2337 469C                                 l1705 5B5A  
                               l1466 589E                                 l2338 4698  
                               l1562 61D4                                 l1483 593A  
                               l1475 58E6                                 l2259 496A  
                               l1395 8212                                 l1707 5B60  
                               l1492 5982                                 l2268 49D0  
                               l2532 06BC                                 l1708 5B78  
                               l1469 58B6                                 l2269 49CC  
                               l1741 9392                                 l1709 5BA2  
                               l1486 5952                                 l2462 9144  
                               l2446 93CA                                 l1495 599A  
                               l1479 591E                                 l2615 2CD6  
                               l2472 716C                                 l2376 74B6  
                               l1489 596A                                 l2369 7438  
                               l1498 59B2                                 l2474 7174  
                               l2298 5434                                 l2554 75B6  
                               l1690 5AE0                                 l1667 982E  
                               l2475 71A2                                 l2571 7D9A  
                               l1669 9836                                 l2573 7DA2  
                 SDCard_read512@offs 05CB                                 l1699 5B18  
                               l2676 9E84                                 ?_pad 0512  
                               l2688 6A86                                 l1979 8348  
                               l8111 8552                                 l8007 498E  
                               l8023 49AE                                 l8105 853A  
                               l8017 49A4                                 l8051 4A3C  
                               l8043 4A16                                 l9003 7E3E  
                               l8117 8574                                 l8133 85C2  
                               l8221 5366                                 l8213 5332  
                               l8119 8580                                 l8055 4A44  
                               l9023 8AC0                                 l8137 85D8  
                               l8129 85B4                                 l8153 8E04  
                               l8073 9CBA                                 l8305 5540  
                               l8209 532E                                 l8057 4A46  
                               l8307 5542                                 l8235 5394  
                               l8227 537C                                 l8403 4662  
                               l8331 446A                                 l9027 8AEE  
                               l9211 2D66                                 l9203 2CE0  
                               l9045 582E                                 l8173 8E6E  
                               l8165 8E4A                                 l8157 8E16  
                               l8149 8DF0                                 l8069 9CA4  
                               l8253 540C                                 l8245 53E4  
                               l8077 9B6C                                 l8085 9B8C  
                               l9301 30D8                                 l9205 2D04  
                               l9143 59E0                                 l8159 8E22  
                               l8271 5468                                 l8423 46E0  
                               l8327 4456                                 l8503 890E  
                               l9303 30EE                                 l9223 2DE0  
                               l9215 2D98                                 l8169 8E58  
                               l8265 544A                                 l8193 52F2  
                               l8345 4496                                 l8329 445A  
                               l8089 9D12                                 l9233 2E76  
                               l9217 2DA6                                 l9209 2D32  
                               l8291 54E6                                 l8259 5432  
                               l8427 46FE                                 l8355 44C8  
                               l8347 449A                                 l8531 897C  
                               l8523 8968                                 l8611 6ADE  
                               l9243 2ED2                                 l9235 2E84  
                               l9227 2E0E                                 l9163 2BA6  
                               l9307 30FE                                 l9421 9816  
                               l9405 9D78                                 l8189 52EE  
                               l7901 47CA                                 l9253 2F24  
                               l9237 2EA2                                 l9229 2E44  
                               l9245 2EEE                                 l9327 9A78  
                               l8623 9116                                 l8295 550A  
                               l8463 921A                                 l8455 91C8  
                               l8471 82E8                                 l8439 4740  
                               l8519 8958                                 l8615 6B0C  
                               l8607 6AA8                                 l9263 2FAC  
                               l9191 2CAC                                 l9183 2C48  
                               l9167 2BAC                                 l9159 2B92  
                               l9511 8BE4                                 l9505 8F20  
                               l8625 9122                                 l8553 93EC  
                               l8545 93BE                                 l7913 47EE  
                               l7905 47CE                                 l8537 8998  
                               l8529 8970                                 l8705 0042  
                               l9273 300C                                 l9281 301C  
                               l9177 2C00                                 l9169 2BCC  
                               l9355 9784                                 l8635 914E  
                               l8299 5534                                 l8459 91FC  
                               l8475 831C                                 l8803 035C  
                               l8731 00C0                                 l8715 0066  
                               l9291 307C                                 l9275 3012  
                               l9283 3032                                 l9195 2CD0  
                               l9523 8C66                                 l9349 9768  
                               l8629 9138                                 l8549 93D4  
                               l8485 8380                                 l8397 4644  
                               l8493 9DBC                                 l8573 84D4  
                               l9293 308A                                 l9285 304A  
                               l9277 3016                                 l9269 2FE8  
                               l9701 6024                                 l9605 577E  
                               l9541 556E                                 l7847 9FE6  
                               l8639 9166                                 l8479 8332  
                               l7943 482A                                 l8911 0852  
                               l8831 0530                                 l8719 0072  
                               l9295 30A8                                 l9199 2CDA  
                               l9367 9A92                                 l9447 7C8E  
                               l9703 602E                                 l9631 5E40  
                               l9551 55D4                                 l7857 8F42  
                               l8665 71B0                                 l7881 4786  
                               l8569 84CA                                 l8825 04F2  
                               l8809 0386                                 l8817 047C  
                               l8729 00A8                                 l8737 00E8  
                               l9369 9AAE                                 l9465 7D74  
                               l9457 7D36                                 l9641 5E7E  
                               l9609 5792                                 l9545 5598  
                               l9713 922A                                 l9395 9920  
                               l8691 7290                                 l8675 7238  
                               l8659 7196                                 l7971 48BC  
                               l7955 4884                                 l8579 8514  
                               l8587 9A0A                                 l8923 08B6  
                               l8915 086E                                 l8843 05F8  
                               l8763 0192                                 l8747 011E  
                               l8755 0138                                 l9459 7D52  
                               l9467 7D78                                 l9619 57B2  
                               l9555 55FE                                 l9731 9290  
                               l7981 48E2                                 l7957 4888  
                               l7877 4782                                 l8597 69EE  
                               l8853 0628                                 l8773 0264  
                               l8781 02D0                                 l8933 7552  
                               l9653 5EB8                                 l9661 5EF8  
                               l9741 92AC                                 l9725 927C  
                               l9901 4294                                 l9399 9940  
                               l8951 75E4                                 l8935 755C  
                               l9671 5F56                                 l9647 5E9E  
                               l9567 566C                                 l9903 429E  
                               l8857 06B2                                 l8961 764C  
                               l8953 75FA                                 l8937 7560  
                               l9753 92FE                                 l9593 574E  
                               l7979 48DE                                 l8787 0310  
                               l8947 75CC                                 l9843 986E  
                               l9659 5EF2                                 l9835 88CC  
                               l7989 48F4                                 l8869 06E6  
                               l8877 0706                                 l8893 07C2  
                               l8789 031A                                 l8965 7664  
                               l8957 7634                                 l9677 5F90  
                               l9669 5F4A                                 l9837 88EA  
                               l9909 433A                                 l9917 43FA  
                               l9853 9DD8                                 l7999 495A  
                               l8799 034C                                 l9847 9882  
                               l9679 5F96                                 l9759 9312  
                               l9943 368E                                 STR_1 FE41  
                               STR_2 FE8A                                 l8993 7DEA  
                               l8985 7DD4                                 l9961 376E  
                               l9857 9DE8                                 STR_3 FB36  
                               STR_4 FDC3                                 l8979 7DBA  
                               l9867 87CA                                 l9699 601E  
                               l9779 7144                                 STR_6 FEF4  
                               l9965 37A4                                 STR_7 FECC  
                               STR_8 FC9F                                 l9975 383E  
                               l9991 39A8                                 l9985 397A  
                               l9899 4276                                 l9989 398C  
                               _LATB 04BF                                 _LATD 04C1  
                               _LATF 04C3                                 _U3ON 1697  
                               u9000 5498                                 u9040 54F4  
                               u8400 485C                                 u9050 5518  
                               u8410 485E                                 u9220 46EE  
                               u9140 44B6                                 u8270 8F3A  
                               u9230 470C                                 u8440 48A0  
                               u8290 8F82                                 u9180 4692  
                               u9340 88FC                                 u9270 9216  
                               u8390 484C                                 u9350 892C  
                               u9510 850C                                 u9520 850E  
                               u9505 84EE                                 u8810 8E26  
                               u8650 4A22                                 u8570 49B2  
                               u9610 6AC6                                 u9355 8922  
                               u9700 7156                                 u9460 8490  
                               u9540 69BC                                 u8750 8584  
                               u8590 49C6                                 u9390 8982  
                               u9550 69DC                                 u9615 6ABC  
                               u9465 8486                                 u9545 69B2  
                               u9750 7246                                 u9590 6A6C  
                               u9910 0252                                 u9575 6A06  
                               u9576 6A0C                       ??_get_fileinfo 0512  
                               u9577 6A1A                                 u9770 7260  
                               u9690 7154                                 u9930 02F8  
                               u9595 6A62                                 u9780 726E  
                               u9790 7274                                 u9890 01F8  
                               _WPUB 0409                                 _WPUD 0419  
                               _WPUF 0429                                 _Fsid 0721  
                               abs@a 050B                                 _dbuf 072D  
                               _bios EFA2                                 _labs 99F4  
                               _ctoa 9102                                 _main 59EE  
                               _dtoa 714C                                 _ctx_ 0706  
                       find_volume@i 0634                                 _prec 0715  
                               pad@i 0519                                 pad@p 0516  
                               fsr0h 04EA                                 fsr1h 04E2  
                               indf0 04EF                                 fsr2h 04DA  
                               fsr0l 04E9                                 indf1 04E7  
                               indf2 04DF                                 fsr1l 04E1  
                               fsr2l 04D9                                 _stoa 753A  
                        ld_dword@ptr 0501                                 _xtoa 7D86  
                      disk_ioctl@cmd 05A6                        disk_read@buff 05E4  
                      disk_ioctl@res 05AA                        ___fpclassifyf 8452  
                      disk_read@pdrv 05EC                       menu_select@buf 07C7  
                    __end_of_SD_init 95EA                                 prodh 04F4  
                               prodl 04F3                       ??_get_ldnumber 0503  
                               start FFFC          SPI_SD_configure@clock_speed 05A8  
                    ___fldiv@new_exp 052C               ___SDCard_command_r1@r1 051C  
                 disk_initialize@buf 0600                         ?_follow_path 066A  
                       ___param_bank 0000                      create_name@path 050B  
                   create_chain@clst 062D                                ??_abs 050D  
           SPI_SD_receive_byte@dummy 0511                        get_fileinfo@c 051A  
                              ??_pad 0518                         SPI_SD_send@i 0507  
                       SPI_SD_send@p 0509                          _sync_window 6FDA  
                              l10015 31EE                                l10023 3242  
                              l10007 319E                                l10105 357A  
                              l11001 79DC                                l10019 3212  
                              l10115 77C4                                l10061 33BE  
                              l10045 332A                                l10029 326C  
                              l10141 8D48                                l10055 3392  
                              l10039 32DE                                l10127 784C  
                              l10215 90CC                                l10207 90A0  
                              l10223 90F8                                l11007 7A0E  
                              l10073 340A                                l10057 33A2  
                              l10129 7856                                l11025 86AE  
                              l10083 3462                                l10139 8D3A  
                              l10243 4A8E                                l11035 663C  
                              l12013 1BDE                                l10157 7ECA  
                              l10149 8D96                                l10413 5C6E  
                              l11221 0AC6                                l11141 0930  
                              l11133 090A                                l10317 3DE6  
                              l10253 4AFC                                l11053 66A2  
                              l12103 1F28                                l12007 1B98  
                              l10175 7FA0                                l10167 7F62  
                              l10431 5CF4                                l10263 4B88  
                              l10239 4A8A                                l11119 6CC0  
                              l11071 6B36                                l11047 6678  
                              l11055 66C2                                l10097 34EC  
                              l10089 347E                                l12033 1C64  
                              l12009 1BD0                                l10169 7F7E  
                              l10177 7FA4                                l10521 7A98  
                              l11321 0F9C                                l11209 0A68  
                              l10345 3F5A                                l10329 3E90  
                              l10273 4C0E                                l10265 4BCA  
                              l11411 81E6                                l12043 1CA4  
                              l12035 1C90                                l11163 097A  
                              l10363 3FE0                                l10355 3F98  
                              l10339 3F44                                l10187 9692  
                              l10195 96BE                                l10611 9480  
                              l11083 6BF6                                l12131 7BF8  
                              l12115 7B4A                                l12203 979C  
                              l11421 8226                                l10461 5E0C  
                              l11309 0EA6                                l11181 09AC  
                              l11173 09A2                                l10285 4C9C  
                              l11069 6B30                                l12205 97A4  
                              l11431 824E                                l11423 822E  
                              l11415 81F8                                l12311 6128  
                              l10551 9F0A                                l10543 9EF6  
                              l12055 1CF0                                l10455 5DF2  
                              l11159 0976                                l10375 3FFE  
                              l12143 7C5E                                l11433 8256  
                              l11425 8236                                l11417 8214  
                              l12305 6120                                l12241 94FA  
                              l12073 1DB0                                l10465 5E26  
                              l10385 4078                                l10625 76B4  
                              l12137 7C40                                l11427 823E  
                              l11419 821A                                l11371 8750  
                              l10563 9986                                l11347 118A  
                              l11283 0D44                                l11275 0D10  
                              l11195 09E6                                l10715 51E2  
                              l10731 5222                                l12163 8CC2  
                              l11453 9630                                l11429 8246  
                              l11437 8274                                l10557 9966  
                              l11189 09D6                                l10645 778C  
                              l10637 7712                                l11613 2562  
                              l11605 249E                                l12501 3C28  
                              l12095 1EE0                                l12079 1E14  
                              l11711 295A                                l11631 25B4  
                              l10567 99A4                                l11279 0D2A  
                              l12415 8432                                l10399 9B36  
                              l10743 5262                                l10727 520C  
                              l10671 509A                                l10663 505E  
                              l11463 1F54                                l11713 297A  
                              l11801 1380                                l10841 6F6E  
                              l10825 6EA4                                l12409 8428  
                              l10593 818A                                l10729 521C  
                              l10681 511A                                l11529 2182  
                              l12521 3D36                                l12259 98FA  
                              l11643 2640                                l11803 13B8  
                              l10843 6FB2                                l10835 6F2C  
                              l10819 6E9C                                l10595 8192  
                              l10579 80FE                                l10675 50AC  
                              l10923 6848                                l10907 6804  
                              l11547 21E0                                l11491 1FCC  
                              l11483 1FA4                                l12187 8FE4  
                              l12515 3D14                                l12435 3A06  
                              l11741 2AC0                                l11637 25C8  
                              l12621 4DF2                                l10837 6F38  
                              l10765 72DC                                l10749 52A6  
                              l10693 5144                                l10677 50B0  
                              l11493 1FD0                                l12189 8FF2  
                              l12517 3D1A                                l12445 3A90  
                              l12429 39E0                                l10855 9344  
                              l11727 2A16                                l11735 2A5E  
                              l11743 2B0C                                l11823 140A  
                              l11815 13E4                                l11911 189A  
                              l12631 4EAE                                l12551 6D0A  
                              l10695 5154                                l10943 68A4  
                              l11583 23DA                                l12455 3ADA  
                              l12447 3A96                                l12289 60DE  
                              l12801 7478                                l10857 9350  
                              l11657 2710                                l11753 2B4A  
                              l12641 4F0E                                l11577 2398  
                              l12529 3D5A                                l12465 3B16  
                              l12811 74E8                                l12803 749E  
                              l10867 9384                                l11675 2794  
                              l11667 276E                                l11659 2748  
                              l11931 62CC                                l11907 1860  
                              l11771 1204                                l12619 4DEA  
                              l10795 73E6                                l12395 83AA  
                              l12539 6CCC                                l10955 6942  
                              l11587 23F0                                l10971 78F8  
                              l11677 27B0                                l11933 62DE  
                              l11837 14D0                                l12661 4FDA  
                              l12645 4F42                                l10789 73C0  
                              l11589 2400                                l11871 167C  
                              l11783 1288                                l12647 4F4E  
                              l10799 73F0                                l10983 7956  
                              l12487 3BBA                                l12479 3B62  
                              l12495 3BFA                                l12593 95A4  
                              l12809 74DC                                l11697 2870  
                              l10889 65D4                                l11953 6418  
                              l11857 1590                                l11873 169A  
                              l12577 6DE8                                l12497 3C0E  
                              l12489 3BBE                                l12827 7528  
                              l11963 18DE                                l11891 1796  
                              l11779 1218                                l12667 5006  
                              l10995 79BE                                l12589 9584  
                              l11885 1734                                l12941 5AA0  
                              l12791 7448                                l11895 17F4  
                              l11985 1AFE                                l11969 18E8  
                              l12963 5B1E                                l12797 7466  
                              l12973 5B70                                l12957 5B0E  
                              l12949 5AE2                                l12799 746C  
                              l11999 1B72                                l12967 5B42  
                              l12995 5BCC                  SDCard_read512@count 05CF  
                      ___fltol@sign1 0509                      __end_of___aldiv 85EA  
                              ?_labs 0501                      __end_of___almod 8E80  
                              ?_ctoa 050B                      __end_of___fladd 4A62  
                              ?_main 0501                                ?_dtoa 051B  
                              _G3POL 06BA                      __end_of___fldiv 554A  
                    __end_of___flneg 9DCE                                STR_10 FF3D  
                              STR_11 FA38                                STR_20 FFE0  
                              STR_12 FD56                                STR_21 FF9F  
                              STR_13 FFE6                                STR_30 FFB7  
                              STR_22 FFC0                                STR_14 FA64  
                              STR_31 FFF4                                STR_23 FFE0  
                              STR_15 FD1D                                STR_24 FF9F  
                              STR_40 FFC9                                STR_32 FDA8  
                              STR_33 FFAE                                STR_41 FF19  
                              STR_25 FE72                                STR_17 FA0C  
                              STR_42 FFAE                                STR_34 FFC9  
                              STR_50 FE0F                                STR_18 F923  
                              STR_19 FFD1                                STR_35 FF9C  
                              STR_51 FF8E                                STR_27 FF7F  
                              STR_43 FF70                                STR_36 FFAE  
                              STR_60 FF4F                                STR_28 FF7F  
                              STR_52 FF2B                                STR_44 F859  
                              STR_29 FFB7                                STR_37 FFA5  
                              STR_45 FF60                                STR_53 FEA1  
                              STR_61 FD3A                                STR_38 FEC7  
                              STR_46 FE5A                                STR_62 FDF6  
                              STR_54 FCE0                                STR_70 FA90  
                              STR_39 FFAE                                STR_63 FEE1  
                              STR_55 FCC0                                STR_47 FC7D  
                              STR_71 FB5D                                STR_48 FBCA  
                              STR_56 FEB7                                STR_72 FAE5  
                              STR_64 F9DF                                STR_73 FF07  
                              STR_49 FE28                                STR_65 FDDD  
                              STR_57 FB83                                STR_81 F8F1  
                              STR_58 FF4F                                STR_66 FD8D  
                              STR_74 FC5B                                STR_82 FC38  
                              STR_90 FBA9                                STR_91 FFF6  
                              STR_67 FC15                                STR_75 FBCD  
                              STR_83 FABB                                STR_59 F9B2  
                              STR_68 F984                                STR_84 F955  
                              STR_76 F88D                                STR_77 FFEC  
                              STR_85 FCFF                                STR_69 FBF1  
                              STR_94 FFFA                                STR_86 FB0E  
                              STR_78 F822                                STR_87 FBCA  
                              STR_79 F8BF                                STR_88 FFF1  
                    __end_of___flmul 4756                                STR_97 FFD9  
                              STR_89 FD72                      __end_of_dbc_2nd 9102  
                SDCard_read512@retry 05D9                      __end_of___flsub 9B16  
                    __end_of___fltol 89AA                      __end_of_dbc_1st 96C8  
                              ?_stoa 050B                      __end_of___lldiv 93A4  
                              u10100 0844                                u10110 0846  
                              u10040 0694                          ?_SDCard_crc 0501  
                              u10140 0898                                u11005 8C54  
                              u10230 761C                                u10310 7E2A  
                              u11030 562E                                u10320 7E4E  
                              u11120 5E76                                u10410 5804  
                              u10090 07E6                                u10170 758E  
                              u11210 6002                                u11050 5664  
                              u10315 7E20                                u10340 7E68  
                              u11220 6016                                u11060 5746  
                              u10237 7612                                u10430 583A  
                              u10350 7E76                                u11310 8862  
                              u12030 9688                                u10600 59E8  
                              u10440 583E                                u10360 7E7C  
                              u10177 7584                                u11090 5776  
                              u12210 4C1E                                u12130 4A8A  
                              u13010 5190                                u10380 8B10  
                              u12300 3E76                                u13100 5296  
                              u11405 4170                                u12070 9096  
                              ?_xtoa 051B                                u12320 3ECE  
                              u11425 4200                                u12305 3E6C  
                              u13017 5186                                u13130 72FE  
                              u12250 4CEE                                u12170 4B46  
                              u11515 362C                                u13107 528C  
                              u10900 984E                                u11380 40EC  
                              u13220 73B2                                u12340 3F40  
                              u12260 3DB6                                u12325 3EC4  
                              u10830 9790                                u11470 437C  
                              u11390 410C                                u11630 318C  
                              u13310 6FC6                                u13230 73CE  
                              u13150 7312                                u12350 3F56  
                              u12270 3DE2                                u11455 4282  
                              u14015 0C4A                                u12255 4CE4  
                              u12175 4B3C                                u15000 13D0  
                              u13320 6FD8                                u13400 67E0  
                              u11545 36FA                                u13137 72F4  
                              u11570 378C                                u11490 35C0  
                              u11730 3362                                u11650 3200  
                              u15010 13F6                                u12610 5E1C  
                              u13170 7344                                u12370 3F82  
                              u13410 6800                                u11475 4372  
                              u13227 73A8                                u14115 0E86  
                              u12195 4BAA                                u13340 9354  
                              u12620 7A1C                                u13260 6E92  
                              u14140 0FF0                                u11900 78DE  
                              u11901 78DA                                u10790 9FC8  
                              u11590 3880                                u11670 325A  
                              u12470 5CB2                                u13270 6F1A  
                              u13190 736E                                u13430 6844  
                              _LATA4 25F4                                u11575 3782  
                              _LATA5 25F5                                u10880 9D9C  
                              u12720 9EF2                                u13600 79F4  
                              _LATA6 25F6                                u11681 3294  
                              u13177 733A                                u14145 0FE6  
                              u15130 16C0                                u11930 8D7E  
                              u12490 5CE8                                _LATE0 2610  
                              _LATC4 2604                                u11595 3876  
                              u15115 1648                                _LATC5 2605  
                              _LATE1 2611                                u11940 8D84  
                              u12820 76AE                                _LATE2 2612  
                              u15125 1686                                u13197 7364  
                              _LATC7 2607                                u15150 1730  
                              u12590 5DF2                                u13710 6B80  
                              u16030 3B26                                _ODCE1 2111  
                              u16200 9594                                u15400 1D04  
                              u15320 1B5E                                u15240 18E4  
                              u11960 8DC4                                u12920 50DE  
                              u13560 79AA                                u16120 3D36  
                              u16040 3B2A                                u10985 8C10  
                              u15065 1532                                u11937 8D74  
                              u15330 1B84                                u11890 78BE  
                              u12770 8176                                u13730 6BBE  
                              u13490 6972                                u14610 24BC  
                              u13570 79AC                                u10995 8C34  
                              _U3BRG 02D4                                u14700 26A2  
                              u12940 5112                                u16060 3BAA  
                              u13717 6B76                                u15430 1D9C  
                              u16310 4FBC                                u16230 4DD6  
                              u13910 09E2                                u12790 81B0  
                              u11967 8DBA                                u12927 50D4  
                              u14615 24B2                                u14535 2340  
                              u12880 508C                                u13680 66CE  
                              u14705 2698                                u13737 6BB4  
                              u16410 74F2                                u14730 275A  
                              u14650 25B0                                u12970 512E  
                              u13690 6B58                                u14570 241A  
                              u16090 3BE2                                u15435 1D92  
                              u12947 5108                                u15460 1E6A  
                              u15380 1CB4                                u14740 2780  
                              u14900 1200                                u13860 0972  
                              u16180 6E06                                u13780 6C42  
                              u15285 19AA                                u16245 4E6C  
                              u16190 6E3E                                u12990 5140  
                              u15710 97D4                                u16510 5AE8  
                              u12887 5082                                u15800 6116  
                              u15720 94E0                                u14840 29A0  
                              u16280 4EF0                                u14825 292C  
                              u13697 6B4E                                u15490 1F24  
                              u14835 2964                                u16195 6E34  
                              u15820 6190                                u14765 2812  
                              u14870 2A5A                                u14950 12EA  
                              u15727 94D6                                u15840 61C8  
                              u16537 9BC4                                u15770 60D4  
                              u15690 9040                                u14955 12E0  
                              u16547 80B2                                u15940 3A4E  
                              u16557 95D6                                u15970 3ABA  
                              u15980 3ACC                                _U3RXB 02C7  
                              _U3TXB 02C9                         vfpfcnvrt@fmt 0553  
                              _PORTB 04CF                                _PORTF 04D3  
                              _TRISB 04C7                                _TRISD 04C9  
                              _TRISF 04CB                                _WPUA0 2008  
                              _WPUA1 2009                                _WPUA2 200A  
                              _WPUA3 200B                                _WPUA5 200D  
                              _WPUC3 208B                                _WPUA7 200F  
                              _WPUC5 208D                                _WPUC6 208E  
                              _FatFs 0723        ??_emuz80_57q_enter_bus_master 0501  
         ?_emuz80_57q_read_from_sram 0501                      __end_of_bdosccp EFA2  
                    __end_of_f_lseek 1F48                  ___lmul@multiplicand 0505  
                    __end_of_f_mount 8452                      __end_of_dir_sdi 4D46  
                    __end_of_f_write 18AE                      __end_of_get_fat 442A  
                SPI_SD_select@select 0503            SPI_SD_configure@data_mode 05AB  
                disk_io_handle@filep 067F                      __end_of_ld_word 9C9A  
                              _debug 0700                                _flags 0727  
            ?_SDCard_end_transaction 0501                                _files 08C0  
                              _getch 9FCC                                _fsdir 077D  
                read_prec_or_width@c 050D                  read_prec_or_width@n 050E  
                              _fputc 8F2A                        find_volume@fs 0618  
                              _fputs 9C9A                                labs@a 0501  
                              pad@fp 0512                                _width 0713  
                   SPI_SD_begin@ctx_ 0501                                ctoa@c 050D  
                              _putch 9FE4                                ctoa@l 050F  
                              ctoa@w 0511                                dtoa@d 051D  
                              dtoa@i 0528                                dtoa@p 0523  
                              dtoa@s 0527                                dtoa@w 0525  
                    util_hexdump@buf 05BF                         ?_menu_select 07BF  
               SDCard_command@length 052E            SPI_SD_configure@bit_order 05AA  
                     disk_ioctl@buff 05A7                       disk_read@count 05EA  
                              tablat 04F5                       SDCard_crc@endp 0505  
                     disk_ioctl@pdrv 05A9          ___SDCard_command_r1@command 051E  
               SDCard_command@result 0533                                plusw2 04DB  
                              stoa@l 0517                                stoa@p 0511  
                              stoa@s 050D                      __end_of_put_fat 39AC  
                              stoa@w 0513                                status 04D8  
                    __end_of_st_word 9E76             ??_SPI_SD_end_transaction 0507  
                    __end_of_sprintf 99F4                       ?___fpclassifyf 0501  
                              xtoa@a 0528                                xtoa@c 052D  
                              xtoa@d 051D                                xtoa@i 052E  
                              xtoa@p 0529                                xtoa@w 052B  
                              xtoa@x 0521                      __end_of_sync_fs 6604  
                    __end_of_strncmp 9068                        get_ldnumber@i 0505  
                       _util_hexdump 7E9E            ?_emuz80_57q_get_from_sram 0501  
        __end_of_emuz80_57q_sys_init 8BCE                      ??_SPI_SD_select 0505  
                    __initialization 9508                       SDCard_init@buf 05B8  
                     SDCard_init@spi 05B6              ___SDCard_command_r1@buf 051F  
            ___SDCard_command_r1@spi 0526                  disk_initialize@pdrv 0680  
                       __end_of_bios F4D8                         __end_of_labs 9A3E  
                       __end_of_ctoa 9194                         __end_of_main 5C16  
                       __end_of_dtoa 72B2                         __end_of_stoa 767A  
                       __end_of_xtoa 7E9E                               CLCDATA 00D4  
                             ??_labs 0505                       get_fileinfo@di 0518  
                             ??_ctoa 050E                       get_fileinfo@dp 050E  
                             ??_main 0560                               ??_dtoa 0521  
                     get_fileinfo@si 0516                 SDCard_read512@i_2770 05D7  
                       ?_release_bus 0501                               ??_stoa 050F  
                             ??_xtoa 0522                        __activetblptr 0003  
                   ??_disk_io_handle 0673                   SDCard_init@timeout 05B2  
         __end_of_read_prec_or_width 8B1A       __end_of_SDCard_end_transaction 9E4E  
                             ?_getch 0501                               _CLC1IE 24F5  
                             _CLC1IF 2575                               ?_fputc 0502  
                             ?_fputs 050B            disk_io_handle@disk_sector 071B  
               SDCard_read512@result 05DD                               _ANSELA 0400  
                             ?_putch 0501                               _ANSELB 0408  
                             _ANSELC 0410                               _ANSELD 0418  
                             _ANSELF 0428                            ??_SD_init 05BD  
                       ?_SDCard_init 05AE                               _NCO1EN 2237  
                             _RA3PPS 0204                               _RC0PPS 0211  
                             _RA4PPS 0205                               _RC1PPS 0212  
                             _RA6PPS 0207                               _U3RXEN 168C  
                             _U3RXIF 25B8                               _U3TXIF 25B9  
                             _U3TXEN 168D                               _OSCFRQ 00B1  
                      vfpfcnvrt@done 058C                               _TRISA0 2630  
                             _TRISA1 2631                               _TRISA2 2632  
                             _TRISA3 2633                               _TRISA4 2634  
                             _TRISC0 2640                               _TRISC1 2641  
                             _TRISA5 2635                               _TRISA6 2636  
                             _TRISC2 2642                               _TRISC3 2643  
                             _TRISA7 2637                               _TRISE0 2650  
                             _TRISC4 2644                               _TRISC5 2645  
                             _TRISE1 2651                               _TRISE2 2652  
                             _TRISC6 2646                               _TRISC7 2647  
                          CLC2_check 5B2C                 __end_of_dir_register 86B2  
                             _DbcTbl D963                            CLC3_check 5B22  
                   __end_of___xxtofl 753A                     __end_of_check_fs 5E30  
                    disk_io_handle@n 0682                     __end_of_dir_find 77AE  
                   __end_of_dir_read 7A12                     __end_of_dir_next 40CC  
                       ?_move_window 0600                 __end_of_create_chain 35AC  
                       vfprintf@cfmt 055B                     __end_of_ld_clust 9492  
                             ___flge 82B4                               ___fleq 9194  
                   __end_of_ld_dword 8A62                               ___lmul 985E  
                          ??___aldiv 0509                            ??___almod 0509  
                          ??___fladd 0509                               ___wmul 9EC4  
                          ??___fldiv 0523                            ??___flneg 0505  
                          ??___flmul 0509                            ??_dbc_2nd 0503  
                          ??___flsub 0522                            ??___fltol 0505  
                          ??_dbc_1st 0503                               _f_read 2566  
                          ??___lldiv 0509                               _f_open 1F48  
                             _efgtoa 0000                               _f_sync 6234  
                   __end_of_mem_init 6E50                 disk_io_handle@sector 067B  
                             _drives 0880                               _floorf 6976  
                             _memcmp 8D28                               _memcpy 9B5A  
               read_prec_or_width@ap 0509                               _memset 9DCE  
                     find_volume@fmt 0632                               clear_0 9550  
                             clear_1 9562                               clear_2 956E  
                _wait_for_programmer 9B9E                            ??_f_lseek 064E  
               __end_of_get_fileinfo 67C0                               isa$std 0001  
                          ??_f_mount 0560              ?___SDCard_wait_response 0512  
                             _printf 9E9E                               pad@buf 0514  
              SDCard_command@command 0532                            ??_dir_sdi 062A  
                             ctoa@fp 050B                            ??_f_write 0650  
                   util_hexdump@addr 05A8                            ??_get_fat 0610  
                             dtoa@fp 051B                               _strchr 9B16  
                             _strcmp 979A                               _strcpy 9D0A  
                   util_hexdump@size 05AA                            ??_ld_word 0503  
                             fputc@c 0502                     __end_of_validate 8774  
                             fputs@c 050F                               fputs@i 0510  
                             fputs@s 050B                      SDCard_crc@count 0503  
               __end_of_get_ldnumber 73FA                      ___fpclassifyf@e 0509  
                    ___fpclassifyf@u 050B                      ___fpclassifyf@x 0501  
                      _util_addrdump 7C62                         __mediumconst D962  
                    disk_read@sector 05E6                     menu_select@drive 07C9  
                             tblptrh 04F7                               tblptrl 04F6  
                             tblptru 04F8                     __end_of_st_clust 9C22  
                   __end_of_st_dword 9734                               stoa@cp 0515  
                             stoa@fp 050B                               putch@c 0501  
                   __end_of_vfprintf 9AD0                            ??_put_fat 0614  
                          ??_st_word 0505           emuz80_57q_write_to_sram@ab 050B  
                          ??_sprintf 055D                               xtoa@fp 051B  
                          ??_sync_fs 0602                            ??_strncmp 0507  
         ??_emuz80_57q_write_to_sram 0507                           ___flge@ff1 051A  
                         ___flge@ff2 051E                      ??___fpclassifyf 0505  
       __end_of_emuz80_57q_start_cpu 80C2                 ?_wait_for_programmer 0501  
                       ___xxtofl@arg 0517                         ___xxtofl@exp 0516  
                       ___xxtofl@val 050D                           ___fleq@ff1 0501  
                         ___fleq@ff2 0505              SDCard_write512@response 05E1  
                   SPI_SD_send@count 0505                           __accesstop 0560  
            __end_of__initialization 9574                         ?_SPI_SD_send 0501  
                     get_ldnumber@tc 0509                           ___flneg@f1 0501  
                     disk_write@buff 05E2                       get_ldnumber@tp 050C  
                     get_ldnumber@tt 0507                       disk_write@pdrv 05EA  
                _SPI_SD_dummy_clocks 9908                      SDCard_read512@i 05D5  
                      ___rparam_used 0001                           ___fltol@f1 0501  
                   ??_SPI_SD_receive 0507                       __pcstackCOMRAM 0501  
                       __pidataBANK7 9FF0                         __pidataBANK8 9C22  
                      __end_of_getch 9FD8                        __end_of_fputc 8FCA  
                      __end_of_fputs 9CD2       __end_of___SDCard_wait_response 9DA0  
                ___SDCard_crc16@endp 050A                        f_closedir@res 05B5  
                      __end_of_putch 9FF0      ___SDCard_wait_response@attempts 0512  
               ?_SPI_SD_dummy_clocks 050B             disk_io_handle@disk_datap 0719  
           disk_io_handle@disk_drive 072B                SDCard_write512@i_2787 05D7  
                     ?_util_addrdump 05A6             disk_io_handle@disk_track 072A  
                     _SDCard_command 95EA                       _SDCard_read512 5E30  
             SDCard_init@clock_speed 05B0                              ??_getch 0503  
                    get_fileinfo@fno 0510                              ??_fputc 0506  
    ___SDCard_wait_response@response 0517                              ??_fputs 050F  
                            ??_putch 0501                ??_wait_for_programmer 05A6  
                     SPI_SD_send@buf 0503                           __pbssBANK7 0700  
                         __pbssBANK8 0800                SDCard_write512@result 05DB  
                         _f_closedir 9DFA                         SD_init@retry 071D  
                SDCard_write512@addr 05C7                  SDCard_write512@offs 05CB  
                _SPI_SD_receive_byte 9F0E            ?_SPI_SD_begin_transaction 0505  
                            ?___flge 051A                              ?___fleq 0501  
                            ?___lmul 0501                              ?___wmul 0501  
                 util_addrdump@chars 05B2                              ?_f_read 0624  
                       mem_init@addr 05AC                              ?_f_open 06AF  
                            ?_efgtoa 0548                              ?_f_sync 060A  
                  ??_disk_initialize 05E4                              ?_floorf 0534  
                            ?_memcmp 0501                              ?_memcpy 0501  
                            ?_memset 0501                         ?_sync_window 05ED  
                     ___lmul@product 0509                              _CLCDATA 00D4  
              ??_SPI_SD_dummy_clocks 050F                              ?_printf 059A  
                            _ANSELE0 2100                              _ANSELE1 2101  
                            _ANSELE2 2102               __end_of_SDCard_command 965A  
             __end_of_SDCard_read512 603C                              ?_strchr 0501  
             _SPI_SD_end_transaction 9F52                              ?_strcmp 0501  
                            ?_strcpy 0501                         ??_SDCard_crc 0505  
                            _CLCnCON 00D6                              _CLCnPOL 00D7  
                            _NCO1INC 0443                              _NCO1OUT 2235  
               ?_SPI_SD_receive_byte 050F                            ?___xxtofl 050D  
                          ?_check_fs 060A                           _disk_ioctl 995A  
                            _U3RXPPS 0276          ??_emuz80_57q_read_from_sram 0507  
                            _IVTBASE 045D                       follow_path@res 0677  
                         _disk_write 921E                              _IVTLOCK 0459  
                            _SPI1CLK 008C                              _SPI1RXB 0080  
                            _SPI1TXB 0081                       remove_chain@fs 0642  
                          ?_dir_find 0662                            ?_dir_read 0662  
                          ?_dir_next 0648                  _pic18f47q43_spi_ctx 07BB  
                          ?_ld_clust 0508                            ?_ld_dword 0501  
                            _SD_init 957A                    ??_SDCard_write512 05D1  
                ___SDCard_command_r1 8E80                            ?_mem_init 0501  
                  __end_of_f_readdir 8D28                        ?_remove_chain 062B  
 ___SDCard_wait_response@no_response 0516                    __end_of_f_opendir 7C62  
                        SDCard_crc@i 0507                          SDCard_crc@p 050A  
                  __end_of_dir_clear 78E2                    __end_of_dir_alloc 81C0  
                          _CLCIN0PPS 0261                            _CLCIN1PPS 0262  
                          _CLCIN2PPS 0263                            _CLCIN3PPS 0264  
                            __Hparam 0000                            _CLCIN4PPS 0265  
                          _CLCIN5PPS 0266                            _CLCIN6PPS 0267  
                          _CLCIN7PPS 0268                   __end_of_SDCard_crc 985E  
                  __end_of_clst2sect 8834                              __Lparam 0000  
                          ?_validate 05A6                            _CLCSELECT 00D5  
                  __end_of_disk_read 9322                         _f_write$1360 065C  
                            ___aldiv 851E                              ___almod 8DD4  
                            ___fladd 4756                              ___fldiv 52C2  
                            ___flneg 9DA0                            ?_st_clust 0505  
                            ___flmul 442A                              _dbc_2nd 9068  
                            ___flsub 9AD0                              ___fltol 88F0  
                            _dbc_1st 965A                            ?_st_dword 0501  
                            ___lldiv 9322                           check_fs@fs 060A  
                          ?_vfprintf 0594                              __pcinit 9508  
                     ___SDCard_crc16 8BCE                              _bdosccp D96F  
               ?___SDCard_command_r1 0518                              _f_lseek 18AE  
                            __ramtop 2500                              _f_mount 8384  
               _emuz80_57q_start_cpu 7FB2                      ??_util_addrdump 05B0  
                            __ptext0 59EE                              __ptext1 9B9E  
                            __ptext2 39AC                              __ptext3 8FCA  
                            __ptext4 979A                              __ptext5 99A8  
                            __ptext6 9FCC                              __ptext7 8C7C  
                            __ptext8 6604                              __ptext9 78E2  
                            _dir_sdi 4A62                      ?_SDCard_command 0528  
                            _f_write 11B6                      ?_SDCard_read512 05C7  
                        validate@obj 05A6                              _get_fat 40CC  
                        validate@res 05B0                          validate@rfs 05A8  
                            _io_addr 072C                         _dir_register 85EA  
              ??_SPI_SD_receive_byte 0511                              _ld_word 9C62  
         emuz80_57q_get_from_sram@ab 0504                           f_read@buff 0626  
                         f_read@clst 063D                read_prec_or_width@fmt 0507  
                         ??___xxtofl 0511                           f_read@sect 0649  
                         f_read@rcnt 0647                           ??_check_fs 0610  
                    find_volume@part 061A         ??_emuz80_57q_exit_bus_master 0501  
                   ___aldiv@dividend 0501            SDCard_end_transaction@spi 0512  
                            efgtoa@c 054E                              efgtoa@d 056B  
                            efgtoa@e 056F                              efgtoa@f 054A  
                            efgtoa@g 0582                              efgtoa@h 0577  
                            efgtoa@i 057F                              efgtoa@l 057B  
                            efgtoa@m 056D             SPI_SD_dummy_clocks@dummy 0511  
                            efgtoa@n 0586                              efgtoa@p 0562  
                            efgtoa@t 0564                              efgtoa@u 0588  
                            efgtoa@w 0571               util_addrdump@addr_offs 05A8  
                       _create_chain 3128               SDCard_command@argument 0528  
                         ??_dir_find 0664                              _tmp_buf 17BC  
                         ??_dir_read 0666                              _put_fat 35AC  
                         ??_dir_next 064C     __end_of_emuz80_57q_write_to_sram 9508  
                            _st_word 9E4E                              _sprintf 99A8  
                  util_hexdump@chars 05AE                           f_lseek@bcs 0667  
                         ??_ld_clust 050C                              _sync_fs 641C  
                         f_lseek@ofs 064A                              _strncmp 8FCA  
                         f_lseek@res 0666                           ??_ld_dword 0505  
               end_of_initialization 9574                        ??_acquire_bus 0503  
                            floorf@e 0542                              floorf@m 053E  
                            floorf@u 0544                              floorf@x 0534  
                        ?_f_closedir 05B1                    mount_volume@bsect 069E  
                         f_open@clst 06D0                           f_open@mode 06B3  
                         f_open@path 06B1                       ??_remove_chain 0635  
                            memcmp@l 0509                              memcmp@n 0505  
                            memcmp@r 050B                    mount_volume@nclst 06A3  
                            memcpy@d 0507                              memcpy@n 0505  
                            memcpy@s 0509                           ??_mem_init 05A6  
                            fputc@fp 0504                    mount_volume@tsect 069A  
                       _get_fileinfo 6604                              memset@c 0503  
                            memset@n 0505                              memset@p 0507  
                            fputs@fp 050D            SPI_SD_dummy_clocks@clocks 050D  
                      ?_mount_volume 0681                   _read_prec_or_width 8A62  
                    disk_status@pdrv 055F                       util_addrdump@i 05C5  
          _emuz80_57q_read_from_sram 98B4                      ___lldiv@divisor 0505  
                         f_mount@cfs 06B7                           f_mount@res 06B4  
                         f_mount@opt 06B3                           f_mount@vol 06B9  
                    ___lldiv@counter 050D                         _get_ldnumber 72B2  
                         ??_validate 05AA                    __end_of_vfpfcnvrt 3128  
                         efgtoa@mode 0569                           efgtoa@sign 0581  
                          _SPI1TCNTH 0083                            _SPI1TCNTL 0082  
                   ___aldiv@quotient 050B                              postdec1 04E5  
                            postdec2 04DD                  ?_read_prec_or_width 0507  
                            postinc0 04EE                              postinc1 04E6  
                            postinc2 04DE                __end_of_SPI_SD_select 9FCC  
                   vfpfcnvrt@convarg 058D                           ??_st_clust 050D  
             __end_of___SDCard_crc16 8C7C                       move_window@res 05FF  
                         ??_st_dword 0507                           ??_vfprintf 055B  
                         _num_drives D96D                              strchr@c 0503  
                         dir_clear@n 0610                              strchr@s 0501  
              ??___SDCard_command_r1 051E                              strcmp@l 0501  
                            strcmp@r 0503                           dir_alloc@n 066B  
        emuz80_57q_write_to_sram@buf 0503          emuz80_57q_write_to_sram@len 0505  
                  SPI_SD_receive@buf 0503                              strcpy@d 0505  
                   remove_chain@clst 062D                           dir_find@dp 0662  
                         dir_find@fs 0666                ?_emuz80_57q_start_cpu 0501  
__end_of_emuz80_57q_enter_bus_master 9FAA          _emuz80_57q_enter_bus_master 9F94  
                    _create_name$887 0510                           dir_read@dp 0662  
                         dir_read@fs 066A                           dir_sdi@csz 0634  
                         dir_sdi@ofs 0626                           dir_next@dp 0648  
                         dir_next@fs 065C                          ___fladd@grs 0510  
                        ?_disk_ioctl 05A6                      release_bus@ctx_ 0501  
                         f_write@btw 064C                        ___xxtofl@sign 0515  
                         f_write@res 0660                        ?_SPI_SD_begin 0501  
                        ?_disk_write 05E2                           get_fat@obj 060A  
                         get_fat@val 061A                 ??_read_prec_or_width 050B  
                        ___fldiv@grs 052E                          ___fldiv@rem 0527  
                    get_ldnumber@vol 050A                      disk_write@count 05E8  
                         disk_read@i 05ED                     _SPI_SD_configure 81C0  
        emuz80_57q_read_from_sram@ab 0509                         menu_select@c 07D0  
                       menu_select@i 07CE                        ??_create_name 050D  
                        ___flmul@grs 050F                       ??_mount_volume 0686  
                         ld_clust@cl 0510                           ld_clust@fs 0508  
           _emuz80_57q_get_from_sram 9F74                        ??_get_fattime 0505  
                  SPI_SD_select@ctx_ 0501                        ??_find_volume 061C  
                         ld_dword@rv 050A                       __end_of_DbcTbl D96D  
                      ??_disk_status 055F                  __end_of_acquire_bus 9A88  
     SDCard_init@initial_clock_speed 05AE                      ?___SDCard_crc16 0501  
                     __end_of___flge 8384                       __end_of___fleq 921E  
                     __end_of___lmul 98B4                          vfpfcnvrt@ap 0555  
                        st_clust@dir 0507                          vfpfcnvrt@cp 0592  
                        vfpfcnvrt@fp 0551                       __end_of___wmul 9EEA  
                     __end_of_f_read 2B4E                       __end_of_f_open 2566  
                     __end_of_efgtoa 08E0                       __end_of_f_sync 641C  
                 disk_io_handle@addr 0677                   disk_io_handle@fres 0681  
                     __end_of_floorf 6B1E                       __end_of_memcmp 8DD4  
                     __end_of_memcpy 9B9E                           floorf@F521 070B  
                     __end_of_memset 9DFA                      SPI_SD_begin@ctx 0503  
                         ld_word@ptr 0501                        SDCard_crc@crc 0509  
                      SDCard_crc@buf 0501                 ___SDCard_crc16@count 0505  
                     __end_of_printf 9EC4                       __end_of_strchr 9B5A  
                     __end_of_strcmp 97FC                       __end_of_strcpy 9D3C  
                     ??_SPI_SD_begin 0503                  start_initialization 9508  
                        st_dword@val 0503                          st_dword@ptr 0501  
                        __end_of_abs 9E9E           ___SDCard_wait_response@spi 0514  
                        __end_of_pad 941C                          __end_of_rom F822  
   __end_of_SPI_SD_begin_transaction 9F52                          put_fat@clst 060C  
              __end_of___fpclassifyf 851E                      _disk_initialize 7A12  
               SPI_SD_dummy_clocks@i 050F                             CLC2_exit 5B34  
                           CLC3_exit 5B3C              disk_io_handle@addr_2171 0679  
                      ??_follow_path 066E                  __end_of_create_name 52C2  
                        vfprintf@fmt 0596                             ??___flge 0522  
                           ??___fleq 0509                             ??___lmul 0509  
                           ??___wmul 0505                             ??_f_read 062C  
                __end_of_get_fattime 9FBC            ?_emuz80_57q_write_to_sram 0501  
                           ??_f_open 06B4                             ??_efgtoa 054F  
            ?_SPI_SD_end_transaction 0505                             ??_f_sync 0560  
             ??_emuz80_57q_start_cpu 0501                          __pdataBANK7 07D5  
                        __pdataBANK8 0880                             ??_floorf 0538  
                __end_of_find_volume 6FDA                             ??_memcmp 0507  
                __end_of_disk_status 9F0E                             ??_memcpy 0507  
                           ??_memset 0507             ??_SDCard_end_transaction 0512  
                         memset@dest 0501                             ??_printf 055D  
               __end_of_remove_chain 6976                      SPI_SD_receive@i 0509  
                    SPI_SD_receive@p 050D                             ??_strchr 0505  
                           ??_strcmp 0505                             ??_strcpy 0505  
                          ___fladd@a 0505                            ___fladd@b 0501  
 __end_of_emuz80_57q_exit_bus_master 9FE4           _emuz80_57q_exit_bus_master 9FD8  
                    SPI_SD_send@ctx_ 0501                            ___fldiv@a 051F  
                          ___fldiv@b 051B                          __pbssBIGRAM 08C0  
                    _SDCard_write512 554A                            ___flmul@a 0505  
                          ___flmul@b 0501          __end_of_wait_for_programmer 9BE0  
                          ___flsub@a 051E                            ___flsub@b 051A  
                      __pcstackBANK5 0560                        __pcstackBANK6 0600  
                      __pcstackBANK7 07BF        emuz80_57q_read_from_sram@addr 0501  
                 ___SDCard_crc16@crc 0501                   ___SDCard_crc16@buf 0503  
                       f_closedir@dp 05B1                         f_closedir@fs 05B3  
                        _debug_flags 0725                         check_fs@sect 060C  
                       check_fs@sign 0613                        ??_menu_select 07C1  
            disk_io_handle@disk_dmah 0728              disk_io_handle@disk_dmal 0729  
                           ?_SD_init 0501                          _acquire_bus 9A3E  
                      f_opendir@path 06B1                 SDCard_write512@count 05CF  
               SDCard_write512@retry 05D9                        ?_util_hexdump 05A6  
                   ___SDCard_crc16@p 050C                   SDCard_write512@crc 05DF  
                 SDCard_write512@buf 05CD                          _efgtoa$3431 0566  
                          _f_readdir 8C7C                   SDCard_write512@spi 05DD  
                          _main$3972 07D1                            _dtoa$3400 0521  
                   SDCard_write512@i 05D5                            _f_opendir 7B3E  
        __end_of_SPI_SD_dummy_clocks 995A       __end_of_SPI_SD_end_transaction 9F74  
                  util_addrdump@addr 05AC                        __pmediumconst D962  
                   ??_SDCard_command 0530                     ??_SDCard_read512 05D1  
                           ?___aldiv 0501                             ?___almod 0501  
                           ?___fladd 0501                    util_addrdump@size 05AE  
                           ?___fldiv 051B                            __ptext100 9E76  
                          __ptext101 8DD4                            __ptext110 9F0E  
                          __ptext102 851E                             ?___flneg 0501  
                          __ptext111 57C0                            __ptext103 9102  
                          __ptext120 9734                            __ptext112 9F30  
                          __ptext104 8F2A                            __ptext113 97FC  
                          __ptext105 9FE4                            __ptext114 9E24  
                          __ptext106 9D3C                            __ptext115 9F52  
                          __ptext107 95EA                            __ptext116 9FBC  
                          __ptext108 8E80                            __ptext117 9908  
                          __ptext109 9D6E                            __ptext118 9CD2  
                          __ptext119 9A3E                             ?___flmul 0501  
                          _dir_clear 77AE                             ?_dbc_2nd 0501  
                          _dir_alloc 80C2                             ?___flsub 051A  
                           ?___fltol 0501                             ?_dbc_1st 0501  
                           ?___lldiv 0501                            _clst2sect 8774  
                     dir_alloc@n_ent 0664                            _disk_read 92A0  
                util_addrdump@header 05A6                            _disk_stat 07DB  
                      follow_path@dp 066A                        follow_path@fs 0674  
                           ?_f_lseek 0648                        follow_path@ns 0676  
                      _validate$1075 05AE                     ___almod@dividend 0501  
                __end_of_follow_path 6CC4                             ?_f_mount 06AF  
                      ??_release_bus 0503                             ?_dir_sdi 0624  
                           ?_f_write 0648                             ?_get_fat 060A  
               __end_of_mount_volume 11B6                             ?_ld_word 0501  
       emuz80_57q_get_from_sram@addr 0501               SDCard_read512@resp_crc 05DB  
             SDCard_read512@response 05E3                            check_fs@b 0617  
                           ?_put_fat 060A                            check_fs@w 0615  
                           ?_st_word 0501              __end_of_disk_initialize 7B3E  
                           ?_sprintf 059A                             _CLCnGLS0 00DC  
                           _CLCnGLS1 00DD                             _CLCnGLS2 00DE  
                           _CLCnGLS3 00DF                             ?_sync_fs 0600  
                        _get_fat$406 0618                             ?_strncmp 0501  
                           _CLCnSEL0 00D8                             _CLCnSEL1 00D9  
                           _CLCnSEL2 00DA                             _CLCnSEL3 00DB  
                      ??_SDCard_init 055F                         f_read@remain 0638  
                       ??_f_closedir 0560                            f_read@btr 0628  
                          f_read@res 063C                    find_volume@mbr_pt 0622  
                    ___aldiv@divisor 0505              SPI_SD_dummy_clocks@ctx_ 050B  
                _emuz80_57q_sys_init 8B1A                      ___aldiv@counter 0509  
                        _create_name 500E                       ___wmul@product 0505  
           _SPI_SD_begin_transaction 9F30                            f_lseek@fp 0648  
                          f_lseek@fs 066B                       ??_util_hexdump 05AC  
                          f_open@bcs 06BC                            f_open@ofs 06CC  
                          f_open@res 06D6                     mount_volume@mode 0685  
                   mount_volume@path 0681                     mount_volume@nrsv 0698  
                        _get_fattime 9FAA                     mount_volume@stat 06A2  
                __end_of_menu_select 3D66        SDCard_command@response_buffer 052C  
           ??___SDCard_wait_response 0514                         _SPI1CON0bits 0084  
                       _SPI1CON1bits 0085                         _SPI1CON2bits 0086  
            menu_select@drive_letter 07CB                           ?_f_readdir 066F  
                        _find_volume 6E50                          _disk_status 9EEA  
    emuz80_57q_get_from_sram@ret_val 0503                        ??_move_window 0606  
                          f_mount@fs 06AF                            f_mount@rp 06B5  
                    follow_path@path 066C                 __end_of_SPI_SD_begin 9D6E  
                           _SPI1BAUD 0089                             _SPI1CON0 0084  
                           _SPI1CON1 0085                             _SPI1INTE 008B  
                         ?_f_opendir 06AF                             _SPI1RXIF 2588  
                      move_window@fs 0600                            _num_files 071F  
                         ?_dir_clear 0600                            dir_find@c 0668  
                         ?_dir_alloc 0662                      remove_chain@obj 062B  
                    remove_chain@res 0641                      remove_chain@nxt 063D  
        __end_of_SPI_SD_receive_byte 9F30                           ?_clst2sect 050D  
                          f_sync@dir 0611                         f_readdir@fno 0671  
            __end_of_SDCard_write512 57C0                         f_readdir@res 0675  
                          f_sync@res 0610                            dir_read@b 066D  
           __end_of_SPI_SD_configure 82B4                            dir_sdi@dp 0624  
                          dir_sdi@fs 063C                           ?_disk_read 05E4  
                          _vfpfcnvrt 2B4E                       release_bus@ctx 0503  
                          f_write@cc 0665                            f_write@bw 064E  
                          f_write@fp 0648                 menu_select@selection 07CC  
                          f_write@fs 0671                            _xtoa$3453 0526  
               ?_emuz80_57q_sys_init 0501                            get_fat@bc 0620  
                          get_fat@fs 0622                            get_fat@wc 061E  
                  ___wmul@multiplier 0501                   __end_of_f_closedir 9E24  
         emuz80_57q_read_from_sram@i 0507                            _start_lba 07D5  
  __end_of_emuz80_57q_read_from_sram 9908                __end_of_util_addrdump 7D86  
                    acquire_bus@ctx_ 0501                         ??_disk_ioctl 055F  
                       ??_disk_write 055F           ??_emuz80_57q_get_from_sram 0503  
                       f_lseek@ifptr 065E                         f_lseek@nsect 0662  
                __end_of_release_bus 9D0A                           st_clust@cl 0509  
                         vfpfcnvrt@c 0591                           st_clust@fs 0505  
                  ___lmul@multiplier 0501                            copy_data0 951C  
                          copy_data1 953C                        util_hexdump@i 05C1  
                          ld_word@rv 0506                       _disk_io_handle 4D46  
                      ??_SPI_SD_send 0507                         SDCard_init@i 05B4  
                         put_fat@res 062A                           put_fat@val 0610  
                          mem_init@i 05AA                     ??___SDCard_crc16 0507  
                    dir_next@stretch 064A                  __end_of_SDCard_init 6234  
                           __Hrparam 0000          __end_of___SDCard_command_r1 8F2A  
                          memcpy@tmp 050B                           vfprintf@ap 0598  
                           __Lrparam 0000                           vfprintf@fp 0594  
                        _follow_path 6B1E                   __end_of_disk_ioctl 99A8  
                 __end_of_disk_write 92A0                           st_word@val 0503  
                         st_word@ptr 0501                           ?_vfpfcnvrt 0551  
              ??_emuz80_57q_sys_init 0501                  __end_of_move_window 88F0  
       ___SDCard_command_r1@argument 0518                   ___fpclassifyf@F465 070F  
                       f_opendir@res 06B5            emuz80_57q_write_to_sram@i 0509  
                           dbc_2nd@c 0503                           sprintf@fmt 059C  
                           dbc_1st@c 0503                             ___xxtofl 73FA  
                           _check_fs 5C16                 SPI_SD_receive@i_2687 050C  
                    dir_register@res 0672                        dir_clear@ibuf 0608  
                      dir_clear@clst 0602                     util_addrdump@buf 05C3  
                      dir_clear@sect 060A               __end_of_disk_io_handle 500E  
                           __ptext10 7B3E                             __ptext11 1F48  
                           __ptext20 85EA                             __ptext12 67C0  
                           __ptext21 80C2                             __ptext13 6B1E  
                           __ptext30 6E50                             __ptext22 4A62  
                           __ptext14 941C                             __ptext31 5C16  
                           __ptext23 3D66                             __ptext15 767A  
                           __ptext40 11B6                             __ptext32 8D28  
                           __ptext24 77AE                             __ptext16 500E  
                           __ptext41 6234                             __ptext33 7A12  
                           __ptext25 9DFA                             __ptext17 9B16  
                           __ptext50 9EEA                             __ptext42 641C  
                           __ptext34 7E9E                             __ptext26 6CC4  
                           __ptext18 9068                             __ptext51 3128  
                           __ptext43 9DCE                             __ptext35 8B1A  
                           __ptext27 8384                             __ptext19 965A  
                           __ptext60 92A0                             __ptext52 35AC  
                           __ptext44 995A                             __ptext36 7FB2  
                           __ptext28 08E0                             __ptext61 5E30  
                           __ptext53 9E4E                             __ptext45 9BE0  
                           __ptext37 9FD8                             __ptext29 72B2  
                           __ptext70 98B4                             __ptext62 7C62  
                           __ptext54 96C8                             __ptext46 9FAA  
                           __ptext38 9F94                             __ptext71 9F74  
                           __ptext63 8BCE                             __ptext55 40CC  
                           __ptext47 2566                             __ptext39 4D46  
                           __ptext80 753A                             __ptext72 73FA  
                           __ptext64 9C62                             __ptext56 8834  
                           __ptext48 18AE                             __ptext81 8A62  
                           __ptext73 957A                             __ptext65 89AA  
                           __ptext57 6FDA                             __ptext49 86B2  
                           __ptext90 9AD0                             __ptext82 9EC4  
                           __ptext74 603C                             __ptext66 8774  
                           __ptext58 921E                             __ptext91 4756  
                           __ptext83 0000                             __ptext75 81C0  
                           __ptext67 985E                             __ptext59 554A  
                           __ptext92 9DA0                             __ptext84 9D0A  
                           __ptext76 9E9E                             __ptext68 9322  
                           _dir_find 767A                             __ptext93 442A  
                           __ptext85 9B5A                             __ptext77 9A88  
                           __ptext69 9492                             __ptext94 82B4  
                           __ptext86 99F4                             __ptext78 2B4E  
                           __ptext95 9194                             __ptext87 6976  
                           __ptext79 7D86                             __ptext96 52C2  
                           __ptext88 8452                             __ptext97 714C  
                           __ptext89 88F0                             __ptext98 93A4  
                           __ptext99 9C9A                             _dir_read 78E2  
                           _dir_next 3D66                             _disk_buf 0800  
                           _fileinfo 07A5                     ?_disk_initialize 0501  
                           _ld_clust 941C                             _ld_dword 89AA  
                    ___almod@divisor 0505                       sync_window@res 055F  
                        _menu_select 39AC                      ___almod@counter 0509  
       ___SDCard_command_r1@response 0525                           strcpy@dest 0501  
             _SDCard_end_transaction 9E24                             _mem_init 6CC4  
               SPI_SD_receive@repeat 050B                          f_read@csect 0643  
                         sync_fs@res 05FF                         _remove_chain 67C0  
                        f_read@rbuff 0641                             f_read@cc 0645  
                           f_read@br 062A                             f_read@fp 0624  
                           f_read@fs 064D                             f_open@dj 06D7  
                           f_open@cl 06C4                             f_open@fp 06AF  
                           f_open@fs 06D4                             f_open@sc 06C8  
                    mount_volume@fmt 06AB                             f_open@tm 06C0  
                        _IVTLOCKbits 0459                      mount_volume@rfs 0683  
                        ??_f_readdir 0560                      mount_volume@vol 0692  
                           _validate 86B2                             efgtoa@fp 0548  
                           efgtoa@ne 0560                             efgtoa@pp 0568  
                           efgtoa@ou 0573                          ??_f_opendir 0560  
                __end_of_SPI_SD_send 979A                             isa$xinst 0000  
                        f_readdir@dp 066F                          f_readdir@fs 0673  
                           f_sync@fp 060A                             f_sync@fs 0613  
                           f_sync@tm 060C                          ??_dir_clear 0606  
                        ??_dir_alloc 0666                             _st_clust 9BE0  
                           _st_dword 96C8                          ??_clst2sect 0513  
                           _vfprintf 9A88                     ?_SDCard_write512 05C7  
                      ??_sync_window 05EF                            printf@fmt 059A  
                     acquire_bus@ctx 0503                          ??_disk_read 055F  
                 util_hexdump@header 05A6                          f_lseek@clst 066D  
                     _SPI_SD_receive 57C0                          _release_bus 9CD2  
               __end_of_util_hexdump 7FB2                 SPI_SD_configure@ctx_ 05A6  
        ?_emuz80_57q_exit_bus_master 0501                   mount_volume@fasize 06A7  
                          put_fat@bc 0628                            put_fat@fs 060A  
                           memcmp@vl 0501                             memcmp@vr 0503  
                           memcpy@d1 0501                             memcpy@s1 0503  
                 mount_volume@szbfat 068E                      ?_disk_io_handle 0501  
                 mount_volume@sysect 0694                        clst2sect@clst 050F  
                        f_opendir@dp 06AF                          f_opendir@fs 06B3  
                       ?_acquire_bus 0501                          _SDCard_init 603C  
                          sprintf@ap 05A2                       dir_register@dp 066E  
                     dir_register@fs 0670                   __end_of_num_drives D96F  
                       dir_clear@szb 060E                     ___lldiv@dividend 0501  
                       dir_alloc@res 066D                        sync_window@fs 05ED  
                        _SLRCONCbits 0413                  SPI_SD_receive@count 0505  
                       _mount_volume 08E0                          f_mount@path 06B1  
                          strcpy@src 0503                            sync_fs@fs 0600  
            SDCard_command@responsep 0535                       mount_volume@fs 06AD  
                        _move_window 8834                          efgtoa@nmode 056A  
                         _SPI1SDIPPS 026B                           _SPI1SCKPPS 026A  
           _debug_flags@SDCard$F2701 0717                             printf@ap 055D  
                         _SPI1TWIDTH 0088               __end_of_SPI_SD_receive 59EE  
                      _SPI_SD_select 9FBC                          ??_vfpfcnvrt 0557  
                           put_fat@p 0626                      move_window@sect 0602  
                      ?_dir_register 066E                           _SDCard_crc 97FC  
                       dir_read@attr 066C                             sprintf@f 05A4  
                           sprintf@s 059A                          dir_clear@fs 0600  
       emuz80_57q_write_to_sram@addr 0501                          dir_alloc@dp 0662  
                        dir_alloc@fs 0669                     ___lldiv@quotient 0509  
                 SPI_SD_receive@ctx_ 0501     __end_of_emuz80_57q_get_from_sram 9F94  
             ___SDCard_wait_response 9D6E                  __end_of_sync_window 714C  
                        dir_find@res 0669                             strncmp@l 0501  
                           strncmp@n 0505                             strncmp@r 0503  
                  remove_chain@pclst 0631                         ___aldiv@sign 050A  
                      ?_create_chain 062B           ??_SPI_SD_begin_transaction 0507  
                       _SPI_SD_begin 9D3C         SPI_SD_begin_transaction@ctx_ 0505  
                       dir_next@clst 065E                        ___fladd@signs 050D  
                        clst2sect@fs 050D                          dir_read@res 066E  
                        dir_read@vol 0664                          dir_sdi@clst 0638  
                       ___almod@sign 050A                        ?_get_fileinfo 050E  
                       ?_create_name 0509                         ___fladd@aexp 050E  
                       ___fladd@bexp 050F                          _SPI_SD_send 9734  
                        dir_next@ofs 0658                         f_write@csect 0663  
                       f_write@wbuff 0661                         ?_get_fattime 0501  
                         _SPI_SD_ctx 07D9                          f_write@buff 064A  
                        f_write@clst 0667                          f_write@sect 066D  
                       ?_find_volume 0618                          f_write@wcnt 066B  
                      ?_get_ldnumber 0501             _emuz80_57q_write_to_sram 9492  
                       ?_disk_status 0501                          _put_fat$435 0622  
                        _put_fat$436 0624           SPI_SD_end_transaction@ctx_ 0505  
